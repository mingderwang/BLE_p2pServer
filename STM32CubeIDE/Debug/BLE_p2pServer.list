
BLE_p2pServer.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   00000158  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         0003175c  08000158  08000158  00010158  2**3
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00002a98  080318b4  080318b4  000418b4  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .ARM.extab    00000000  0803434c  0803434c  00050548  2**0
                  CONTENTS
  4 .ARM          00000008  0803434c  0803434c  0004434c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  5 .preinit_array 00000000  08034354  08034354  00050548  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  08034354  08034354  00044354  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000004  08034358  08034358  00044358  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         00000548  20000000  0803435c  00050000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          00009df8  20000550  080348a4  00050550  2**4
                  ALLOC
 10 ._user_heap_stack 00004000  2000a348  080348a4  0005a348  2**0
                  ALLOC
 11 .ARM.attributes 0000003a  00000000  00000000  00050548  2**0
                  CONTENTS, READONLY
 12 .debug_info   000b52f7  00000000  00000000  00050582  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 13 .debug_abbrev 0000fc78  00000000  00000000  00105879  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_loc    00043459  00000000  00000000  001154f1  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_aranges 00007654  00000000  00000000  00158950  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_ranges 00006478  00000000  00000000  0015ffa8  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_macro  00037a87  00000000  00000000  00166420  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_line   00093f58  00000000  00000000  0019dea7  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .debug_str    0010f831  00000000  00000000  00231dff  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 20 .comment      0002b46b  00000000  00000000  00341630  2**0
                  CONTENTS, READONLY
 21 .iar.rtmodel  000016a7  00000000  00000000  0036ca9b  2**0
                  CONTENTS, READONLY
 22 .iar_vfe_header 00000114  00000000  00000000  0036e144  2**2
                  CONTENTS, READONLY
 23 .iar.debug_line 000023bc  00000000  00000000  0036e258  2**0
                  CONTENTS, READONLY
 24 .iar.debug_frame 00000414  00000000  00000000  00370614  2**0
                  CONTENTS, READONLY
 25 .debug_frame  00012d90  00000000  00000000  00370a28  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 26 .debug_macinfo 00002341  00000000  00000000  003837b8  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 27 .debug_pubnames 00008e96  00000000  00000000  00385af9  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

08000158 <__do_global_dtors_aux>:
 8000158:	b510      	push	{r4, lr}
 800015a:	4c05      	ldr	r4, [pc, #20]	; (8000170 <__do_global_dtors_aux+0x18>)
 800015c:	7823      	ldrb	r3, [r4, #0]
 800015e:	b933      	cbnz	r3, 800016e <__do_global_dtors_aux+0x16>
 8000160:	4b04      	ldr	r3, [pc, #16]	; (8000174 <__do_global_dtors_aux+0x1c>)
 8000162:	b113      	cbz	r3, 800016a <__do_global_dtors_aux+0x12>
 8000164:	4804      	ldr	r0, [pc, #16]	; (8000178 <__do_global_dtors_aux+0x20>)
 8000166:	e000      	b.n	800016a <__do_global_dtors_aux+0x12>
 8000168:	bf00      	nop
 800016a:	2301      	movs	r3, #1
 800016c:	7023      	strb	r3, [r4, #0]
 800016e:	bd10      	pop	{r4, pc}
 8000170:	20000550 	.word	0x20000550
 8000174:	00000000 	.word	0x00000000
 8000178:	0803189c 	.word	0x0803189c

0800017c <frame_dummy>:
 800017c:	b508      	push	{r3, lr}
 800017e:	4b03      	ldr	r3, [pc, #12]	; (800018c <frame_dummy+0x10>)
 8000180:	b11b      	cbz	r3, 800018a <frame_dummy+0xe>
 8000182:	4903      	ldr	r1, [pc, #12]	; (8000190 <frame_dummy+0x14>)
 8000184:	4803      	ldr	r0, [pc, #12]	; (8000194 <frame_dummy+0x18>)
 8000186:	e000      	b.n	800018a <frame_dummy+0xe>
 8000188:	bf00      	nop
 800018a:	bd08      	pop	{r3, pc}
 800018c:	00000000 	.word	0x00000000
 8000190:	20000554 	.word	0x20000554
 8000194:	0803189c 	.word	0x0803189c

08000198 <bsp_init>:
 8000198:	b580      	push	{r7, lr}
 800019a:	f030 fa5f 	bl	803065c <ll_sys_init>
 800019e:	2000      	movs	r0, #0
 80001a0:	bd02      	pop	{r1, pc}

080001a2 <bsp_delay_us>:
 80001a2:	f030 ba62 	b.w	803066a <ll_sys_delay_us>

080001a6 <bsp_delay_ms>:
 80001a6:	f44f 717a 	mov.w	r1, #1000	; 0x3e8
 80001aa:	4348      	muls	r0, r1
 80001ac:	f030 ba5d 	b.w	803066a <ll_sys_delay_us>

080001b0 <bsp_intr_enable>:
 80001b0:	2000      	movs	r0, #0
 80001b2:	4770      	bx	lr

080001b4 <bsp_intr_set_pri>:
 80001b4:	b580      	push	{r7, lr}
 80001b6:	2801      	cmp	r0, #1
 80001b8:	d005      	beq.n	80001c6 <??bsp_intr_set_pri_0>
 80001ba:	2802      	cmp	r0, #2
 80001bc:	bf04      	itt	eq
 80001be:	4608      	moveq	r0, r1
 80001c0:	f030 fa5f 	bleq	8030682 <ll_sys_setup_radio_sw_low_intr>
 80001c4:	e002      	b.n	80001cc <??bsp_intr_set_pri_1>

080001c6 <??bsp_intr_set_pri_0>:
 80001c6:	4608      	mov	r0, r1
 80001c8:	f030 fa59 	bl	803067e <ll_sys_setup_radio_intr>

080001cc <??bsp_intr_set_pri_1>:
 80001cc:	2000      	movs	r0, #0
 80001ce:	bd02      	pop	{r1, pc}

080001d0 <bsp_assert>:
 80001d0:	f030 ba4d 	b.w	803066e <ll_sys_assert>

080001d4 <bsp_is_ptr_in_ble_mem>:
 80001d4:	e001      	b.n	80001da <?Subroutine0>
	...

080001d8 <ll_intf_is_ptr_in_ble_mem>:
 80001d8:	bf00      	nop

080001da <?Subroutine0>:
 80001da:	4903      	ldr	r1, [pc, #12]	; (80001e8 <??DataTable1>)
 80001dc:	1808      	adds	r0, r1, r0
 80001de:	f5b0 4f40 	cmp.w	r0, #49152	; 0xc000
 80001e2:	4180      	sbcs	r0, r0
 80001e4:	0fc0      	lsrs	r0, r0, #31
 80001e6:	4770      	bx	lr

080001e8 <??DataTable1>:
 80001e8:	0000 b7fe                                   ....

080001ec <bsp_mcu_slp>:
 80001ec:	4770      	bx	lr

080001ee <bsp_control_hclk>:
 80001ee:	4770      	bx	lr

080001f0 <bsp_control_aclk>:
 80001f0:	f030 ba3f 	b.w	8030672 <ll_sys_radio_ack_ctrl>

080001f4 <bsp_wait_for_busclkrdy>:
 80001f4:	f030 ba3f 	b.w	8030676 <ll_sys_radio_wait_for_busclkrdy>

080001f8 <bsp_switch_to_lw_isr>:
 80001f8:	f030 ba45 	b.w	8030686 <ll_sys_radio_sw_low_intr_trigger>

080001fc <gen_rnd_num>:
 80001fc:	b580      	push	{r7, lr}
 80001fe:	f030 fa3c 	bl	803067a <ll_sys_get_rng>
 8000202:	2000      	movs	r0, #0
 8000204:	bd02      	pop	{r1, pc}

08000206 <bsp_evnt_not>:
 8000206:	b510      	push	{r4, lr}
 8000208:	2400      	movs	r4, #0
 800020a:	b128      	cbz	r0, 8000218 <??bsp_evnt_not_0>
 800020c:	2802      	cmp	r0, #2
 800020e:	bf04      	itt	eq
 8000210:	2000      	moveq	r0, #0
 8000212:	f030 fa2c 	bleq	803066e <ll_sys_assert>
 8000216:	e000      	b.n	800021a <??bsp_evnt_not_1>

08000218 <??bsp_evnt_not_0>:
 8000218:	2401      	movs	r4, #1

0800021a <??bsp_evnt_not_1>:
 800021a:	4620      	mov	r0, r4
 800021c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8000220:	f030 ba33 	b.w	803068a <ll_sys_radio_evt_not>

08000224 <bsp_request_temperature>:
 8000224:	f030 ba43 	b.w	80306ae <ll_sys_request_temperature>

08000228 <bsp_debug_gpio_set>:
 8000228:	f029 bf56 	b.w	802a0d8 <LINKLAYER_DEBUG_SIGNAL_SET>

0800022c <bsp_debug_gpio_clear>:
 800022c:	f029 bf55 	b.w	802a0da <LINKLAYER_DEBUG_SIGNAL_RESET>

08000230 <bsp_debug_gpio_toggle>:
 8000230:	f029 bf54 	b.w	802a0dc <LINKLAYER_DEBUG_SIGNAL_TOGGLE>

08000234 <bsp_set_phy_clbr_state>:
 8000234:	b120      	cbz	r0, 8000240 <??bsp_set_phy_clbr_state_0>
 8000236:	2802      	cmp	r0, #2
 8000238:	d004      	beq.n	8000244 <??bsp_set_phy_clbr_state_1>
 800023a:	d206      	bcs.n	800024a <??bsp_set_phy_clbr_state_2>
 800023c:	f030 b9b0 	b.w	80305a0 <ll_sys_disable_os_context_switch>

08000240 <??bsp_set_phy_clbr_state_0>:
 8000240:	f030 b9ac 	b.w	803059c <ll_sys_enable_os_context_switch>

08000244 <??bsp_set_phy_clbr_state_1>:
 8000244:	2000      	movs	r0, #0
 8000246:	f030 ba12 	b.w	803066e <ll_sys_assert>

0800024a <??bsp_set_phy_clbr_state_2>:
 800024a:	4770      	bx	lr

0800024c <emngr_init>:
 800024c:	b510      	push	{r4, lr}
 800024e:	f000 f815 	bl	800027c <emngr_reset>
 8000252:	f8df 137c 	ldr.w	r1, [pc, #892]	; 80005d0 <??DataTable19>
 8000256:	2005      	movs	r0, #5
 8000258:	2300      	movs	r3, #0

0800025a <??emngr_init_0>:
 800025a:	700b      	strb	r3, [r1, #0]
 800025c:	704b      	strb	r3, [r1, #1]
 800025e:	750b      	strb	r3, [r1, #20]
 8000260:	754b      	strb	r3, [r1, #21]
 8000262:	3128      	adds	r1, #40	; 0x28
 8000264:	1e40      	subs	r0, r0, #1
 8000266:	d1f8      	bne.n	800025a <??emngr_init_0>
 8000268:	f8df 4368 	ldr.w	r4, [pc, #872]	; 80005d4 <??DataTable19_1>
 800026c:	6860      	ldr	r0, [r4, #4]
 800026e:	b920      	cbnz	r0, 800027a <??emngr_init_1>
 8000270:	2100      	movs	r1, #0
 8000272:	2032      	movs	r0, #50	; 0x32
 8000274:	f014 f903 	bl	801447e <os_semaphore_create>
 8000278:	6060      	str	r0, [r4, #4]

0800027a <??emngr_init_1>:
 800027a:	bd10      	pop	{r4, pc}

0800027c <emngr_reset>:
 800027c:	b538      	push	{r3, r4, r5, lr}
 800027e:	f8df 5358 	ldr.w	r5, [pc, #856]	; 80005d8 <??DataTable19_2>
 8000282:	2000      	movs	r0, #0
 8000284:	f8c5 00c8 	str.w	r0, [r5, #200]	; 0xc8
 8000288:	240a      	movs	r4, #10

0800028a <??emngr_reset_0>:
 800028a:	4628      	mov	r0, r5
 800028c:	f004 ffce 	bl	800522c <queue_free>
 8000290:	2000      	movs	r0, #0
 8000292:	6028      	str	r0, [r5, #0]
 8000294:	6068      	str	r0, [r5, #4]
 8000296:	7228      	strb	r0, [r5, #8]
 8000298:	3514      	adds	r5, #20
 800029a:	1e64      	subs	r4, r4, #1
 800029c:	d1f5      	bne.n	800028a <??emngr_reset_0>
 800029e:	bd32      	pop	{r1, r4, r5, pc}

080002a0 <emngr_handle_init>:
 80002a0:	f8df 3334 	ldr.w	r3, [pc, #820]	; 80005d8 <??DataTable19_2>
 80002a4:	eb00 0c80 	add.w	ip, r0, r0, lsl #2
 80002a8:	eb03 008c 	add.w	r0, r3, ip, lsl #2
 80002ac:	7401      	strb	r1, [r0, #16]
 80002ae:	60c2      	str	r2, [r0, #12]
 80002b0:	2000      	movs	r0, #0
 80002b2:	4770      	bx	lr

080002b4 <emngr_handle_remove>:
 80002b4:	b538      	push	{r3, r4, r5, lr}
 80002b6:	4cc8      	ldr	r4, [pc, #800]	; (80005d8 <??DataTable19_2>)
 80002b8:	eb00 0180 	add.w	r1, r0, r0, lsl #2
 80002bc:	eb04 0581 	add.w	r5, r4, r1, lsl #2
 80002c0:	4628      	mov	r0, r5
 80002c2:	f004 ffb3 	bl	800522c <queue_free>
 80002c6:	2200      	movs	r2, #0
 80002c8:	602a      	str	r2, [r5, #0]
 80002ca:	606a      	str	r2, [r5, #4]
 80002cc:	f8d4 10c8 	ldr.w	r1, [r4, #200]	; 0xc8
 80002d0:	7a28      	ldrb	r0, [r5, #8]
 80002d2:	1a09      	subs	r1, r1, r0
 80002d4:	f8c4 10c8 	str.w	r1, [r4, #200]	; 0xc8
 80002d8:	722a      	strb	r2, [r5, #8]
 80002da:	2000      	movs	r0, #0
 80002dc:	bd32      	pop	{r1, r4, r5, pc}

080002de <emngr_post_event>:
 80002de:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80002e0:	4607      	mov	r7, r0
 80002e2:	460c      	mov	r4, r1
 80002e4:	201e      	movs	r0, #30
 80002e6:	f7ff ff9f 	bl	8000228 <bsp_debug_gpio_set>
 80002ea:	f014 f8b4 	bl	8014456 <os_disable_isr>
 80002ee:	4eba      	ldr	r6, [pc, #744]	; (80005d8 <??DataTable19_2>)
 80002f0:	eb07 0087 	add.w	r0, r7, r7, lsl #2
 80002f4:	eb06 0080 	add.w	r0, r6, r0, lsl #2
 80002f8:	7a01      	ldrb	r1, [r0, #8]
 80002fa:	7c02      	ldrb	r2, [r0, #16]
 80002fc:	254d      	movs	r5, #77	; 0x4d
 80002fe:	4291      	cmp	r1, r2
 8000300:	d20a      	bcs.n	8000318 <??emngr_post_event_0>
 8000302:	4621      	mov	r1, r4
 8000304:	f004 ff9f 	bl	8005246 <queue_enqueue>
 8000308:	b138      	cbz	r0, 800031a <??emngr_post_event_1>
 800030a:	f8d6 00c8 	ldr.w	r0, [r6, #200]	; 0xc8
 800030e:	2500      	movs	r5, #0
 8000310:	1c40      	adds	r0, r0, #1
 8000312:	f8c6 00c8 	str.w	r0, [r6, #200]	; 0xc8
 8000316:	e002      	b.n	800031e <??emngr_post_event_2>

08000318 <??emngr_post_event_0>:
 8000318:	2000      	movs	r0, #0

0800031a <??emngr_post_event_1>:
 800031a:	f7ff ff59 	bl	80001d0 <bsp_assert>

0800031e <??emngr_post_event_2>:
 800031e:	e01f      	b.n	8000360 <??emngr_post_event_first_2>

08000320 <emngr_post_event_first>:
 8000320:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000322:	4607      	mov	r7, r0
 8000324:	460c      	mov	r4, r1
 8000326:	201e      	movs	r0, #30
 8000328:	f7ff ff7e 	bl	8000228 <bsp_debug_gpio_set>
 800032c:	f014 f893 	bl	8014456 <os_disable_isr>
 8000330:	4ea9      	ldr	r6, [pc, #676]	; (80005d8 <??DataTable19_2>)
 8000332:	eb07 0087 	add.w	r0, r7, r7, lsl #2
 8000336:	eb06 0080 	add.w	r0, r6, r0, lsl #2
 800033a:	7a01      	ldrb	r1, [r0, #8]
 800033c:	7c02      	ldrb	r2, [r0, #16]
 800033e:	254d      	movs	r5, #77	; 0x4d
 8000340:	4291      	cmp	r1, r2
 8000342:	d20a      	bcs.n	800035a <??emngr_post_event_first_0>
 8000344:	4621      	mov	r1, r4
 8000346:	f004 ff9d 	bl	8005284 <queue_insert_frst>
 800034a:	b138      	cbz	r0, 800035c <??emngr_post_event_first_1>
 800034c:	f8d6 00c8 	ldr.w	r0, [r6, #200]	; 0xc8
 8000350:	2500      	movs	r5, #0
 8000352:	1c40      	adds	r0, r0, #1
 8000354:	f8c6 00c8 	str.w	r0, [r6, #200]	; 0xc8
 8000358:	e002      	b.n	8000360 <??emngr_post_event_first_2>

0800035a <??emngr_post_event_first_0>:
 800035a:	2000      	movs	r0, #0

0800035c <??emngr_post_event_first_1>:
 800035c:	f7ff ff38 	bl	80001d0 <bsp_assert>

08000360 <??emngr_post_event_first_2>:
 8000360:	f014 f87b 	bl	801445a <os_enable_isr>
 8000364:	489b      	ldr	r0, [pc, #620]	; (80005d4 <??DataTable19_1>)
 8000366:	6840      	ldr	r0, [r0, #4]
 8000368:	f014 f891 	bl	801448e <os_semaphore_release_isr>
 800036c:	201e      	movs	r0, #30
 800036e:	f7ff ff5d 	bl	800022c <bsp_debug_gpio_clear>
 8000372:	4628      	mov	r0, r5
 8000374:	bdf2      	pop	{r1, r4, r5, r6, r7, pc}

08000376 <emngr_get_event>:
 8000376:	b538      	push	{r3, r4, r5, lr}
 8000378:	4605      	mov	r5, r0
 800037a:	4c98      	ldr	r4, [pc, #608]	; (80005dc <??DataTable19_3>)
 800037c:	6820      	ldr	r0, [r4, #0]
 800037e:	f04f 31ff 	mov.w	r1, #4294967295	; 0xffffffff
 8000382:	f014 f870 	bl	8014466 <os_rcrsv_mutex_wait>
 8000386:	4a94      	ldr	r2, [pc, #592]	; (80005d8 <??DataTable19_2>)
 8000388:	eb05 0185 	add.w	r1, r5, r5, lsl #2
 800038c:	eb02 0181 	add.w	r1, r2, r1, lsl #2
 8000390:	7a08      	ldrb	r0, [r1, #8]
 8000392:	b120      	cbz	r0, 800039e <??emngr_get_event_0>
 8000394:	f8d2 00c8 	ldr.w	r0, [r2, #200]	; 0xc8
 8000398:	1e40      	subs	r0, r0, #1
 800039a:	f8c2 00c8 	str.w	r0, [r2, #200]	; 0xc8

0800039e <??emngr_get_event_0>:
 800039e:	4608      	mov	r0, r1
 80003a0:	f004 ff90 	bl	80052c4 <queue_dequeue>
 80003a4:	4605      	mov	r5, r0
 80003a6:	6820      	ldr	r0, [r4, #0]
 80003a8:	f014 f863 	bl	8014472 <os_rcrsv_mutex_release>
 80003ac:	4628      	mov	r0, r5
 80003ae:	bd32      	pop	{r1, r4, r5, pc}

080003b0 <emngr_process_event>:
 80003b0:	b570      	push	{r4, r5, r6, lr}
 80003b2:	4605      	mov	r5, r0
 80003b4:	2020      	movs	r0, #32
 80003b6:	f7ff ff37 	bl	8000228 <bsp_debug_gpio_set>
 80003ba:	4987      	ldr	r1, [pc, #540]	; (80005d8 <??DataTable19_2>)
 80003bc:	eb05 0385 	add.w	r3, r5, r5, lsl #2
 80003c0:	eb01 0683 	add.w	r6, r1, r3, lsl #2
 80003c4:	7c70      	ldrb	r0, [r6, #17]
 80003c6:	2400      	movs	r4, #0
 80003c8:	b940      	cbnz	r0, 80003dc <??emngr_process_event_0>
 80003ca:	7a30      	ldrb	r0, [r6, #8]
 80003cc:	b138      	cbz	r0, 80003de <??emngr_process_event_1>
 80003ce:	4628      	mov	r0, r5
 80003d0:	f7ff ffd1 	bl	8000376 <emngr_get_event>
 80003d4:	68f1      	ldr	r1, [r6, #12]
 80003d6:	b111      	cbz	r1, 80003de <??emngr_process_event_1>
 80003d8:	4788      	blx	r1
 80003da:	e000      	b.n	80003de <??emngr_process_event_1>

080003dc <??emngr_process_event_0>:
 80003dc:	2401      	movs	r4, #1

080003de <??emngr_process_event_1>:
 80003de:	2020      	movs	r0, #32
 80003e0:	f7ff ff24 	bl	800022c <bsp_debug_gpio_clear>
 80003e4:	4620      	mov	r0, r4
 80003e6:	bd70      	pop	{r4, r5, r6, pc}

080003e8 <emngr_get_total_events>:
 80003e8:	487b      	ldr	r0, [pc, #492]	; (80005d8 <??DataTable19_2>)
 80003ea:	f8d0 00c8 	ldr.w	r0, [r0, #200]	; 0xc8
 80003ee:	4770      	bx	lr

080003f0 <emngr_get_handle_events>:
 80003f0:	4979      	ldr	r1, [pc, #484]	; (80005d8 <??DataTable19_2>)
 80003f2:	eb00 0280 	add.w	r2, r0, r0, lsl #2
 80003f6:	eb01 0082 	add.w	r0, r1, r2, lsl #2
 80003fa:	7a00      	ldrb	r0, [r0, #8]
 80003fc:	4770      	bx	lr

080003fe <emngr_set_event_handle_busy>:
 80003fe:	b538      	push	{r3, r4, r5, lr}
 8000400:	460c      	mov	r4, r1
 8000402:	4975      	ldr	r1, [pc, #468]	; (80005d8 <??DataTable19_2>)
 8000404:	eb00 0280 	add.w	r2, r0, r0, lsl #2
 8000408:	eb01 0582 	add.w	r5, r1, r2, lsl #2
 800040c:	7c68      	ldrb	r0, [r5, #17]
 800040e:	b118      	cbz	r0, 8000418 <??emngr_set_event_handle_busy_0>
 8000410:	1e60      	subs	r0, r4, #1
 8000412:	4180      	sbcs	r0, r0
 8000414:	0fc0      	lsrs	r0, r0, #31
 8000416:	e000      	b.n	800041a <??emngr_set_event_handle_busy_1>

08000418 <??emngr_set_event_handle_busy_0>:
 8000418:	2001      	movs	r0, #1

0800041a <??emngr_set_event_handle_busy_1>:
 800041a:	f7ff fed9 	bl	80001d0 <bsp_assert>
 800041e:	746c      	strb	r4, [r5, #17]
 8000420:	b92c      	cbnz	r4, 800042e <??emngr_set_event_handle_busy_2>
 8000422:	486c      	ldr	r0, [pc, #432]	; (80005d4 <??DataTable19_1>)
 8000424:	6840      	ldr	r0, [r0, #4]
 8000426:	e8bd 4032 	ldmia.w	sp!, {r1, r4, r5, lr}
 800042a:	f014 b82e 	b.w	801448a <os_semaphore_release>

0800042e <??emngr_set_event_handle_busy_2>:
 800042e:	bd31      	pop	{r0, r4, r5, pc}

08000430 <emngr_is_event_busy>:
 8000430:	4969      	ldr	r1, [pc, #420]	; (80005d8 <??DataTable19_2>)
 8000432:	eb00 0280 	add.w	r2, r0, r0, lsl #2
 8000436:	eb01 0082 	add.w	r0, r1, r2, lsl #2
 800043a:	7c40      	ldrb	r0, [r0, #17]
 800043c:	4770      	bx	lr

0800043e <emngr_handle_all_events>:
 800043e:	201f      	movs	r0, #31
 8000440:	b538      	push	{r3, r4, r5, lr}
 8000442:	f7ff fef1 	bl	8000228 <bsp_debug_gpio_set>
 8000446:	4863      	ldr	r0, [pc, #396]	; (80005d4 <??DataTable19_1>)
 8000448:	6840      	ldr	r0, [r0, #4]
 800044a:	f04f 31ff 	mov.w	r1, #4294967295	; 0xffffffff
 800044e:	2400      	movs	r4, #0
 8000450:	f014 f817 	bl	8014482 <os_semaphore_wait>
 8000454:	4d60      	ldr	r5, [pc, #384]	; (80005d8 <??DataTable19_2>)

08000456 <??emngr_handle_all_events_0>:
 8000456:	7a28      	ldrb	r0, [r5, #8]
 8000458:	b120      	cbz	r0, 8000464 <??emngr_handle_all_events_1>
 800045a:	b2e0      	uxtb	r0, r4
 800045c:	f7ff ffa8 	bl	80003b0 <emngr_process_event>
 8000460:	b2c0      	uxtb	r0, r0
 8000462:	b118      	cbz	r0, 800046c <??emngr_handle_all_events_2>

08000464 <??emngr_handle_all_events_1>:
 8000464:	1c64      	adds	r4, r4, #1
 8000466:	3514      	adds	r5, #20
 8000468:	2c0a      	cmp	r4, #10
 800046a:	dbf4      	blt.n	8000456 <??emngr_handle_all_events_0>

0800046c <??emngr_handle_all_events_2>:
 800046c:	201f      	movs	r0, #31
 800046e:	e8bd 4032 	ldmia.w	sp!, {r1, r4, r5, lr}
 8000472:	f7ff bedb 	b.w	800022c <bsp_debug_gpio_clear>

08000476 <emngr_handle_event>:
 8000476:	b538      	push	{r3, r4, r5, lr}
 8000478:	4604      	mov	r4, r0
 800047a:	4d56      	ldr	r5, [pc, #344]	; (80005d4 <??DataTable19_1>)
 800047c:	6868      	ldr	r0, [r5, #4]
 800047e:	f04f 31ff 	mov.w	r1, #4294967295	; 0xffffffff
 8000482:	f013 fffe 	bl	8014482 <os_semaphore_wait>
 8000486:	4954      	ldr	r1, [pc, #336]	; (80005d8 <??DataTable19_2>)
 8000488:	eb04 0384 	add.w	r3, r4, r4, lsl #2
 800048c:	eb01 0383 	add.w	r3, r1, r3, lsl #2
 8000490:	7a18      	ldrb	r0, [r3, #8]
 8000492:	b168      	cbz	r0, 80004b0 <??emngr_handle_event_0>
 8000494:	4620      	mov	r0, r4
 8000496:	f7ff ff8b 	bl	80003b0 <emngr_process_event>
 800049a:	782c      	ldrb	r4, [r5, #0]
 800049c:	0020      	movs	r0, r4
 800049e:	d004      	beq.n	80004aa <??emngr_handle_event_1>

080004a0 <??emngr_handle_event_2>:
 80004a0:	6868      	ldr	r0, [r5, #4]
 80004a2:	f013 fff2 	bl	801448a <os_semaphore_release>
 80004a6:	1e64      	subs	r4, r4, #1
 80004a8:	d1fa      	bne.n	80004a0 <??emngr_handle_event_2>

080004aa <??emngr_handle_event_1>:
 80004aa:	2000      	movs	r0, #0

080004ac <??emngr_handle_event_3>:
 80004ac:	7028      	strb	r0, [r5, #0]
 80004ae:	bd31      	pop	{r0, r4, r5, pc}

080004b0 <??emngr_handle_event_0>:
 80004b0:	7828      	ldrb	r0, [r5, #0]
 80004b2:	1c40      	adds	r0, r0, #1
 80004b4:	e7fa      	b.n	80004ac <??emngr_handle_event_3>

080004b6 <emngr_peak_frst_event>:
 80004b6:	eb00 0280 	add.w	r2, r0, r0, lsl #2
 80004ba:	4947      	ldr	r1, [pc, #284]	; (80005d8 <??DataTable19_2>)
 80004bc:	0090      	lsls	r0, r2, #2
 80004be:	5808      	ldr	r0, [r1, r0]
 80004c0:	4770      	bx	lr

080004c2 <emngr_del_event>:
 80004c2:	b418      	push	{r3, r4}
 80004c4:	4b44      	ldr	r3, [pc, #272]	; (80005d8 <??DataTable19_2>)
 80004c6:	eb00 0480 	add.w	r4, r0, r0, lsl #2
 80004ca:	eb03 0084 	add.w	r0, r3, r4, lsl #2
 80004ce:	4a44      	ldr	r2, [pc, #272]	; (80005e0 <??DataTable19_4>)
 80004d0:	bc18      	pop	{r3, r4}
 80004d2:	f004 bfe1 	b.w	8005498 <queue_delete_node>

080004d6 <emngr_process_conditional_event>:
 80004d6:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80004da:	4604      	mov	r4, r0
 80004dc:	468a      	mov	sl, r1
 80004de:	4690      	mov	r8, r2
 80004e0:	4699      	mov	r9, r3
 80004e2:	2003      	movs	r0, #3
 80004e4:	f015 fe20 	bl	8016128 <disable_specific_irq>
 80004e8:	eb04 0184 	add.w	r1, r4, r4, lsl #2
 80004ec:	0088      	lsls	r0, r1, #2
 80004ee:	4d3a      	ldr	r5, [pc, #232]	; (80005d8 <??DataTable19_2>)
 80004f0:	2700      	movs	r7, #0
 80004f2:	582c      	ldr	r4, [r5, r0]
 80004f4:	182e      	adds	r6, r5, r0
 80004f6:	e000      	b.n	80004fa <??emngr_process_conditional_event_0>

080004f8 <??emngr_process_conditional_event_1>:
 80004f8:	465c      	mov	r4, fp

080004fa <??emngr_process_conditional_event_0>:
 80004fa:	b1cc      	cbz	r4, 8000530 <??emngr_process_conditional_event_2>
 80004fc:	6820      	ldr	r0, [r4, #0]
 80004fe:	f8d4 b004 	ldr.w	fp, [r4, #4]
 8000502:	4641      	mov	r1, r8
 8000504:	47c8      	blx	r9
 8000506:	2801      	cmp	r0, #1
 8000508:	d1f6      	bne.n	80004f8 <??emngr_process_conditional_event_1>
 800050a:	68f0      	ldr	r0, [r6, #12]
 800050c:	2800      	cmp	r0, #0
 800050e:	d0f3      	beq.n	80004f8 <??emngr_process_conditional_event_1>
 8000510:	f8d5 00c8 	ldr.w	r0, [r5, #200]	; 0xc8
 8000514:	6827      	ldr	r7, [r4, #0]
 8000516:	1e40      	subs	r0, r0, #1
 8000518:	f8c5 00c8 	str.w	r0, [r5, #200]	; 0xc8
 800051c:	4620      	mov	r0, r4
 800051e:	f004 ff38 	bl	8005392 <queue_delete>
 8000522:	68f1      	ldr	r1, [r6, #12]
 8000524:	4638      	mov	r0, r7
 8000526:	2701      	movs	r7, #1
 8000528:	4788      	blx	r1
 800052a:	f1ba 0f01 	cmp.w	sl, #1
 800052e:	d1e3      	bne.n	80004f8 <??emngr_process_conditional_event_1>

08000530 <??emngr_process_conditional_event_2>:
 8000530:	2003      	movs	r0, #3
 8000532:	f015 fdf7 	bl	8016124 <enable_specific_irq>
 8000536:	4638      	mov	r0, r7
 8000538:	e8bd 8ff2 	ldmia.w	sp!, {r1, r4, r5, r6, r7, r8, r9, sl, fp, pc}

0800053c <emngr_remove_conditional_event>:
 800053c:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8000540:	4604      	mov	r4, r0
 8000542:	460d      	mov	r5, r1
 8000544:	4690      	mov	r8, r2
 8000546:	4699      	mov	r9, r3
 8000548:	2003      	movs	r0, #3
 800054a:	f015 fded 	bl	8016128 <disable_specific_irq>
 800054e:	eb04 0084 	add.w	r0, r4, r4, lsl #2
 8000552:	4e21      	ldr	r6, [pc, #132]	; (80005d8 <??DataTable19_2>)
 8000554:	0080      	lsls	r0, r0, #2
 8000556:	5834      	ldr	r4, [r6, r0]
 8000558:	e000      	b.n	800055c <??emngr_remove_conditional_event_0>

0800055a <??emngr_remove_conditional_event_1>:
 800055a:	463c      	mov	r4, r7

0800055c <??emngr_remove_conditional_event_0>:
 800055c:	b17c      	cbz	r4, 800057e <??emngr_remove_conditional_event_2>
 800055e:	6820      	ldr	r0, [r4, #0]
 8000560:	6867      	ldr	r7, [r4, #4]
 8000562:	4641      	mov	r1, r8
 8000564:	47c8      	blx	r9
 8000566:	2801      	cmp	r0, #1
 8000568:	d1f7      	bne.n	800055a <??emngr_remove_conditional_event_1>
 800056a:	f8d6 00c8 	ldr.w	r0, [r6, #200]	; 0xc8
 800056e:	1e40      	subs	r0, r0, #1
 8000570:	f8c6 00c8 	str.w	r0, [r6, #200]	; 0xc8
 8000574:	4620      	mov	r0, r4
 8000576:	f004 ff0c 	bl	8005392 <queue_delete>
 800057a:	2d01      	cmp	r5, #1
 800057c:	d1ed      	bne.n	800055a <??emngr_remove_conditional_event_1>

0800057e <??emngr_remove_conditional_event_2>:
 800057e:	2003      	movs	r0, #3
 8000580:	f015 fdd0 	bl	8016124 <enable_specific_irq>
 8000584:	2000      	movs	r0, #0
 8000586:	e8bd 83f2 	ldmia.w	sp!, {r1, r4, r5, r6, r7, r8, r9, pc}
	...

0800058c <emngr_can_mcu_sleep>:
 800058c:	a215      	add	r2, pc, #84	; (adr r2, 80005e4 <?_0>)
 800058e:	b4f8      	push	{r3, r4, r5, r6, r7}
 8000590:	6814      	ldr	r4, [r2, #0]
 8000592:	2100      	movs	r1, #0
 8000594:	2300      	movs	r3, #0
 8000596:	9400      	str	r4, [sp, #0]
 8000598:	4c0f      	ldr	r4, [pc, #60]	; (80005d8 <??DataTable19_2>)
 800059a:	f8d4 20c8 	ldr.w	r2, [r4, #200]	; 0xc8
 800059e:	b19a      	cbz	r2, 80005c8 <??emngr_can_mcu_sleep_0>
 80005a0:	466d      	mov	r5, sp
 80005a2:	2003      	movs	r0, #3

080005a4 <??emngr_can_mcu_sleep_1>:
 80005a4:	782e      	ldrb	r6, [r5, #0]
 80005a6:	eb06 0786 	add.w	r7, r6, r6, lsl #2
 80005aa:	eb04 0687 	add.w	r6, r4, r7, lsl #2
 80005ae:	f896 c011 	ldrb.w	ip, [r6, #17]
 80005b2:	f1bc 0f01 	cmp.w	ip, #1
 80005b6:	bf04      	itt	eq
 80005b8:	7a36      	ldrbeq	r6, [r6, #8]
 80005ba:	18f3      	addeq	r3, r6, r3
 80005bc:	1c6d      	adds	r5, r5, #1
 80005be:	1e40      	subs	r0, r0, #1
 80005c0:	d1f0      	bne.n	80005a4 <??emngr_can_mcu_sleep_1>
 80005c2:	b2db      	uxtb	r3, r3
 80005c4:	4293      	cmp	r3, r2
 80005c6:	d100      	bne.n	80005ca <??emngr_can_mcu_sleep_2>

080005c8 <??emngr_can_mcu_sleep_0>:
 80005c8:	2101      	movs	r1, #1

080005ca <??emngr_can_mcu_sleep_2>:
 80005ca:	4608      	mov	r0, r1
 80005cc:	bcf2      	pop	{r1, r4, r5, r6, r7}
 80005ce:	4770      	bx	lr

080005d0 <??DataTable19>:
 80005d0:	057c 2000                                   |.. 

080005d4 <??DataTable19_1>:
 80005d4:	0638 2000                                   8.. 

080005d8 <??DataTable19_2>:
 80005d8:	056c 2000                                   l.. 

080005dc <??DataTable19_3>:
 80005dc:	18c0 2000                                   ... 

080005e0 <??DataTable19_4>:
 80005e0:	535d 0800                                   ]S..

080005e4 <?_0>:
 80005e4:	0706 0008                                   ....

080005e8 <evnt_schdlr_get_nxt_chnl>:
 80005e8:	4601      	mov	r1, r0
 80005ea:	2025      	movs	r0, #37	; 0x25
 80005ec:	2925      	cmp	r1, #37	; 0x25
 80005ee:	d101      	bne.n	80005f4 <??evnt_schdlr_get_nxt_chnl_0>
 80005f0:	2026      	movs	r0, #38	; 0x26
 80005f2:	4770      	bx	lr

080005f4 <??evnt_schdlr_get_nxt_chnl_0>:
 80005f4:	2926      	cmp	r1, #38	; 0x26
 80005f6:	bf08      	it	eq
 80005f8:	2027      	moveq	r0, #39	; 0x27
 80005fa:	4770      	bx	lr

080005fc <evnt_schdlr_timer_callback>:
 80005fc:	b580      	push	{r7, lr}
 80005fe:	205c      	movs	r0, #92	; 0x5c
 8000600:	f7ff fe12 	bl	8000228 <bsp_debug_gpio_set>
 8000604:	2001      	movs	r0, #1
 8000606:	f002 fce3 	bl	8002fd0 <evnt_util_set_prdc_clbr_exce_state>
 800060a:	f000 f818 	bl	800063e <evnt_schdlr_hndl_next_evnt>
 800060e:	2000      	movs	r0, #0
 8000610:	f002 fcde 	bl	8002fd0 <evnt_util_set_prdc_clbr_exce_state>
 8000614:	205c      	movs	r0, #92	; 0x5c
 8000616:	e8bd 4002 	ldmia.w	sp!, {r1, lr}
 800061a:	f7ff be07 	b.w	800022c <bsp_debug_gpio_clear>

0800061e <evnt_schdlr_get_prdc_clbr_evnt_hndl>:
 800061e:	b580      	push	{r7, lr}
 8000620:	f8df 1cc4 	ldr.w	r1, [pc, #3268]	; 80012e8 <??DataTable11>
 8000624:	6a4a      	ldr	r2, [r1, #36]	; 0x24
 8000626:	2001      	movs	r0, #1
 8000628:	68d1      	ldr	r1, [r2, #12]
 800062a:	4788      	blx	r1
 800062c:	e000      	b.n	8000630 <??evnt_schdlr_get_prdc_clbr_evnt_hndl_0>

0800062e <??evnt_schdlr_get_prdc_clbr_evnt_hndl_1>:
 800062e:	6f40      	ldr	r0, [r0, #116]	; 0x74

08000630 <??evnt_schdlr_get_prdc_clbr_evnt_hndl_0>:
 8000630:	2800      	cmp	r0, #0
 8000632:	bf1c      	itt	ne
 8000634:	f890 1046 	ldrbne.w	r1, [r0, #70]	; 0x46
 8000638:	2901      	cmpne	r1, #1
 800063a:	d1f8      	bne.n	800062e <??evnt_schdlr_get_prdc_clbr_evnt_hndl_1>
 800063c:	bd02      	pop	{r1, pc}

0800063e <evnt_schdlr_hndl_next_evnt>:
 800063e:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8000642:	b084      	sub	sp, #16
 8000644:	2100      	movs	r1, #0
 8000646:	9100      	str	r1, [sp, #0]
 8000648:	9101      	str	r1, [sp, #4]
 800064a:	2007      	movs	r0, #7
 800064c:	f7ff fdec 	bl	8000228 <bsp_debug_gpio_set>
 8000650:	2007      	movs	r0, #7
 8000652:	f015 fd69 	bl	8016128 <disable_specific_irq>
 8000656:	f8df 6c90 	ldr.w	r6, [pc, #3216]	; 80012e8 <??DataTable11>
 800065a:	6ab0      	ldr	r0, [r6, #40]	; 0x28
 800065c:	2500      	movs	r5, #0
 800065e:	b120      	cbz	r0, 800066a <??evnt_schdlr_hndl_next_evnt_0>
 8000660:	e10b      	b.n	800087a <??evnt_schdlr_hndl_next_evnt_1>

08000662 <??evnt_schdlr_hndl_next_evnt_2>:
 8000662:	6a71      	ldr	r1, [r6, #36]	; 0x24
 8000664:	4620      	mov	r0, r4
 8000666:	694a      	ldr	r2, [r1, #20]
 8000668:	4790      	blx	r2

0800066a <??evnt_schdlr_hndl_next_evnt_0>:
 800066a:	6a70      	ldr	r0, [r6, #36]	; 0x24
 800066c:	6881      	ldr	r1, [r0, #8]
 800066e:	4788      	blx	r1
 8000670:	0004      	movs	r4, r0
 8000672:	d027      	beq.n	80006c4 <??evnt_schdlr_hndl_next_evnt_3>
 8000674:	f104 0890 	add.w	r8, r4, #144	; 0x90
 8000678:	f898 0008 	ldrb.w	r0, [r8, #8]
 800067c:	2800      	cmp	r0, #0
 800067e:	f040 80fc 	bne.w	800087a <??evnt_schdlr_hndl_next_evnt_1>
 8000682:	e9d8 2300 	ldrd	r2, r3, [r8]
 8000686:	f412 7fc0 	tst.w	r2, #384	; 0x180
 800068a:	d008      	beq.n	800069e <??evnt_schdlr_hndl_next_evnt_4>
 800068c:	6f22      	ldr	r2, [r4, #112]	; 0x70
 800068e:	f8df 3c5c 	ldr.w	r3, [pc, #3164]	; 80012ec <??DataTable11_1>
 8000692:	2101      	movs	r1, #1
 8000694:	2002      	movs	r0, #2
 8000696:	f7ff ff1e 	bl	80004d6 <emngr_process_conditional_event>
 800069a:	2801      	cmp	r0, #1
 800069c:	d0e5      	beq.n	800066a <??evnt_schdlr_hndl_next_evnt_0>

0800069e <??evnt_schdlr_hndl_next_evnt_4>:
 800069e:	f896 0039 	ldrb.w	r0, [r6, #57]	; 0x39
 80006a2:	2800      	cmp	r0, #0
 80006a4:	f040 80c6 	bne.w	8000834 <??evnt_schdlr_hndl_next_evnt_5>
 80006a8:	a801      	add	r0, sp, #4
 80006aa:	f00b fcf6 	bl	800c09a <llhwc_slptmr_get>
 80006ae:	e9d8 0100 	ldrd	r0, r1, [r8]
 80006b2:	2301      	movs	r3, #1
 80006b4:	6d27      	ldr	r7, [r4, #80]	; 0x50
 80006b6:	4299      	cmp	r1, r3
 80006b8:	bf07      	ittee	eq
 80006ba:	42a8      	cmpeq	r0, r5
 80006bc:	3f0f      	subeq	r7, #15
 80006be:	6cb0      	ldrne	r0, [r6, #72]	; 0x48
 80006c0:	1a3f      	subne	r7, r7, r0
 80006c2:	e019      	b.n	80006f8 <??evnt_schdlr_hndl_next_evnt_6>

080006c4 <??evnt_schdlr_hndl_next_evnt_3>:
 80006c4:	6a71      	ldr	r1, [r6, #36]	; 0x24
 80006c6:	2000      	movs	r0, #0
 80006c8:	68ca      	ldr	r2, [r1, #12]
 80006ca:	4790      	blx	r2
 80006cc:	4680      	mov	r8, r0
 80006ce:	f8df 1c20 	ldr.w	r1, [pc, #3104]	; 80012f0 <??DataTable11_2>
 80006d2:	7808      	ldrb	r0, [r1, #0]
 80006d4:	2800      	cmp	r0, #0
 80006d6:	f040 80a9 	bne.w	800082c <??evnt_schdlr_hndl_next_evnt_7>
 80006da:	6a70      	ldr	r0, [r6, #36]	; 0x24
 80006dc:	6a41      	ldr	r1, [r0, #36]	; 0x24
 80006de:	4788      	blx	r1
 80006e0:	2800      	cmp	r0, #0
 80006e2:	bf18      	it	ne
 80006e4:	f1b8 0f00 	cmpne.w	r8, #0
 80006e8:	f000 80a0 	beq.w	800082c <??evnt_schdlr_hndl_next_evnt_7>
 80006ec:	f00b fdcd 	bl	800c28a <llhwc_cmn_is_dp_slp_enabled>
 80006f0:	2800      	cmp	r0, #0
 80006f2:	f040 80c2 	bne.w	800087a <??evnt_schdlr_hndl_next_evnt_1>
 80006f6:	e034      	b.n	8000762 <??evnt_schdlr_hndl_next_evnt_8>

080006f8 <??evnt_schdlr_hndl_next_evnt_6>:
 80006f8:	f00b fdc7 	bl	800c28a <llhwc_cmn_is_dp_slp_enabled>
 80006fc:	2800      	cmp	r0, #0
 80006fe:	f040 80bc 	bne.w	800087a <??evnt_schdlr_hndl_next_evnt_1>
 8000702:	9801      	ldr	r0, [sp, #4]
 8000704:	380f      	subs	r0, #15
 8000706:	4287      	cmp	r7, r0
 8000708:	d3ab      	bcc.n	8000662 <??evnt_schdlr_hndl_next_evnt_2>
 800070a:	9801      	ldr	r0, [sp, #4]
 800070c:	1d00      	adds	r0, r0, #4
 800070e:	42b8      	cmp	r0, r7
 8000710:	f080 8090 	bcs.w	8000834 <??evnt_schdlr_hndl_next_evnt_5>
 8000714:	6a70      	ldr	r0, [r6, #36]	; 0x24
 8000716:	6a41      	ldr	r1, [r0, #36]	; 0x24
 8000718:	4788      	blx	r1
 800071a:	b328      	cbz	r0, 8000768 <??evnt_schdlr_hndl_next_evnt_9>
 800071c:	6a71      	ldr	r1, [r6, #36]	; 0x24
 800071e:	2000      	movs	r0, #0
 8000720:	68ca      	ldr	r2, [r1, #12]
 8000722:	4790      	blx	r2
 8000724:	ea5f 0800 	movs.w	r8, r0
 8000728:	d01e      	beq.n	8000768 <??evnt_schdlr_hndl_next_evnt_9>
 800072a:	f108 0138 	add.w	r1, r8, #56	; 0x38
 800072e:	6808      	ldr	r0, [r1, #0]
 8000730:	f8df 3bc0 	ldr.w	r3, [pc, #3008]	; 80012f4 <??DataTable11_3>
 8000734:	0080      	lsls	r0, r0, #2
 8000736:	307d      	adds	r0, #125	; 0x7d
 8000738:	fba0 3203 	umull	r3, r2, r0, r3
 800073c:	0992      	lsrs	r2, r2, #6
 800073e:	9200      	str	r2, [sp, #0]
 8000740:	9a01      	ldr	r2, [sp, #4]
 8000742:	9800      	ldr	r0, [sp, #0]
 8000744:	1aba      	subs	r2, r7, r2
 8000746:	1f12      	subs	r2, r2, #4
 8000748:	4290      	cmp	r0, r2
 800074a:	d20d      	bcs.n	8000768 <??evnt_schdlr_hndl_next_evnt_9>
 800074c:	7b88      	ldrb	r0, [r1, #14]
 800074e:	2801      	cmp	r0, #1
 8000750:	d105      	bne.n	800075e <??evnt_schdlr_hndl_next_evnt_10>
 8000752:	9801      	ldr	r0, [sp, #4]
 8000754:	f107 020f 	add.w	r2, r7, #15
 8000758:	1a12      	subs	r2, r2, r0
 800075a:	1f12      	subs	r2, r2, #4
 800075c:	9200      	str	r2, [sp, #0]

0800075e <??evnt_schdlr_hndl_next_evnt_10>:
 800075e:	7c48      	ldrb	r0, [r1, #17]
 8000760:	b910      	cbnz	r0, 8000768 <??evnt_schdlr_hndl_next_evnt_9>

08000762 <??evnt_schdlr_hndl_next_evnt_8>:
 8000762:	9900      	ldr	r1, [sp, #0]
 8000764:	4640      	mov	r0, r8
 8000766:	e07f      	b.n	8000868 <??evnt_schdlr_hndl_next_evnt_11>

08000768 <??evnt_schdlr_hndl_next_evnt_9>:
 8000768:	6cb0      	ldr	r0, [r6, #72]	; 0x48
 800076a:	6d22      	ldr	r2, [r4, #80]	; 0x50
 800076c:	9901      	ldr	r1, [sp, #4]
 800076e:	0040      	lsls	r0, r0, #1
 8000770:	3024      	adds	r0, #36	; 0x24
 8000772:	1a52      	subs	r2, r2, r1
 8000774:	4290      	cmp	r0, r2
 8000776:	d215      	bcs.n	80007a4 <??evnt_schdlr_hndl_next_evnt_12>
 8000778:	6a72      	ldr	r2, [r6, #36]	; 0x24
 800077a:	9503      	str	r5, [sp, #12]
 800077c:	9502      	str	r5, [sp, #8]
 800077e:	6bd3      	ldr	r3, [r2, #60]	; 0x3c
 8000780:	a903      	add	r1, sp, #12
 8000782:	a802      	add	r0, sp, #8
 8000784:	4798      	blx	r3
 8000786:	b918      	cbnz	r0, 8000790 <??evnt_schdlr_hndl_next_evnt_13>
 8000788:	9903      	ldr	r1, [sp, #12]
 800078a:	9802      	ldr	r0, [sp, #8]
 800078c:	f000 f8e8 	bl	8000960 <evnt_schdlr_exec>

08000790 <??evnt_schdlr_hndl_next_evnt_13>:
 8000790:	2800      	cmp	r0, #0
 8000792:	d072      	beq.n	800087a <??evnt_schdlr_hndl_next_evnt_1>
 8000794:	2807      	cmp	r0, #7
 8000796:	bf08      	it	eq
 8000798:	f44f 75a0 	moveq.w	r5, #320	; 0x140
 800079c:	a801      	add	r0, sp, #4
 800079e:	f00b fc7c 	bl	800c09a <llhwc_slptmr_get>
 80007a2:	b935      	cbnz	r5, 80007b2 <??evnt_schdlr_hndl_next_evnt_14>

080007a4 <??evnt_schdlr_hndl_next_evnt_12>:
 80007a4:	9801      	ldr	r0, [sp, #4]
 80007a6:	1a3d      	subs	r5, r7, r0
 80007a8:	42b8      	cmp	r0, r7
 80007aa:	bf24      	itt	cs
 80007ac:	2000      	movcs	r0, #0
 80007ae:	f7ff fd0f 	blcs	80001d0 <bsp_assert>

080007b2 <??evnt_schdlr_hndl_next_evnt_14>:
 80007b2:	f8df 1d24 	ldr.w	r1, [pc, #3364]	; 80014d8 <??DataTable12>
 80007b6:	7888      	ldrb	r0, [r1, #2]
 80007b8:	bb58      	cbnz	r0, 8000812 <??evnt_schdlr_hndl_next_evnt_15>
 80007ba:	f7ff ff30 	bl	800061e <evnt_schdlr_get_prdc_clbr_evnt_hndl>
 80007be:	0004      	movs	r4, r0
 80007c0:	d027      	beq.n	8000812 <??evnt_schdlr_hndl_next_evnt_15>
 80007c2:	f00d f9fa 	bl	800dbba <llhwc_phy_get_num_of_prdc_clbr_chnls>
 80007c6:	6b61      	ldr	r1, [r4, #52]	; 0x34
 80007c8:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 80007ca:	f8df 3b28 	ldr.w	r3, [pc, #2856]	; 80012f4 <??DataTable11_3>
 80007ce:	fb00 2001 	mla	r0, r0, r1, r2
 80007d2:	6be1      	ldr	r1, [r4, #60]	; 0x3c
 80007d4:	1808      	adds	r0, r1, r0
 80007d6:	0080      	lsls	r0, r0, #2
 80007d8:	307d      	adds	r0, #125	; 0x7d
 80007da:	fba0 3203 	umull	r3, r2, r0, r3
 80007de:	f8df 1cfc 	ldr.w	r1, [pc, #3324]	; 80014dc <??DataTable12_1>
 80007e2:	0990      	lsrs	r0, r2, #6
 80007e4:	9000      	str	r0, [sp, #0]
 80007e6:	7d08      	ldrb	r0, [r1, #20]
 80007e8:	2801      	cmp	r0, #1
 80007ea:	d102      	bne.n	80007f2 <??evnt_schdlr_hndl_next_evnt_16>
 80007ec:	9800      	ldr	r0, [sp, #0]
 80007ee:	300a      	adds	r0, #10
 80007f0:	9000      	str	r0, [sp, #0]

080007f2 <??evnt_schdlr_hndl_next_evnt_16>:
 80007f2:	9800      	ldr	r0, [sp, #0]
 80007f4:	42a8      	cmp	r0, r5
 80007f6:	bf3f      	itttt	cc
 80007f8:	3444      	addcc	r4, #68	; 0x44
 80007fa:	68e1      	ldrcc	r1, [r4, #12]
 80007fc:	1841      	addcc	r1, r0, r1
 80007fe:	42b9      	cmpcc	r1, r7
 8000800:	d207      	bcs.n	8000812 <??evnt_schdlr_hndl_next_evnt_15>
 8000802:	2005      	movs	r0, #5
 8000804:	f7ff fd14 	bl	8000230 <bsp_debug_gpio_toggle>
 8000808:	7821      	ldrb	r1, [r4, #0]
 800080a:	9800      	ldr	r0, [sp, #0]
 800080c:	1c49      	adds	r1, r1, #1
 800080e:	7021      	strb	r1, [r4, #0]
 8000810:	1a2d      	subs	r5, r5, r0

08000812 <??evnt_schdlr_hndl_next_evnt_15>:
 8000812:	6af0      	ldr	r0, [r6, #44]	; 0x2c
 8000814:	4629      	mov	r1, r5
 8000816:	f005 f8f7 	bl	8005a08 <os_timer_set>
 800081a:	4604      	mov	r4, r0
 800081c:	2004      	movs	r0, #4
 800081e:	f7ff fd07 	bl	8000230 <bsp_debug_gpio_toggle>
 8000822:	1e60      	subs	r0, r4, #1
 8000824:	4180      	sbcs	r0, r0
 8000826:	0fc0      	lsrs	r0, r0, #31
 8000828:	f7ff fcd2 	bl	80001d0 <bsp_assert>

0800082c <??evnt_schdlr_hndl_next_evnt_7>:
 800082c:	2001      	movs	r0, #1
 800082e:	f00c ff65 	bl	800d6fc <llhwc_cmn_evnt_notify>
 8000832:	e022      	b.n	800087a <??evnt_schdlr_hndl_next_evnt_1>

08000834 <??evnt_schdlr_hndl_next_evnt_5>:
 8000834:	6a70      	ldr	r0, [r6, #36]	; 0x24
 8000836:	6a41      	ldr	r1, [r0, #36]	; 0x24
 8000838:	4788      	blx	r1
 800083a:	b1c0      	cbz	r0, 800086e <??evnt_schdlr_hndl_next_evnt_17>
 800083c:	6a71      	ldr	r1, [r6, #36]	; 0x24
 800083e:	2000      	movs	r0, #0
 8000840:	68ca      	ldr	r2, [r1, #12]
 8000842:	4790      	blx	r2
 8000844:	0005      	movs	r5, r0
 8000846:	d012      	beq.n	800086e <??evnt_schdlr_hndl_next_evnt_17>
 8000848:	f895 0049 	ldrb.w	r0, [r5, #73]	; 0x49
 800084c:	b978      	cbnz	r0, 800086e <??evnt_schdlr_hndl_next_evnt_17>
 800084e:	6a72      	ldr	r2, [r6, #36]	; 0x24
 8000850:	4669      	mov	r1, sp
 8000852:	4628      	mov	r0, r5
 8000854:	6b93      	ldr	r3, [r2, #56]	; 0x38
 8000856:	4798      	blx	r3
 8000858:	2801      	cmp	r0, #1
 800085a:	d108      	bne.n	800086e <??evnt_schdlr_hndl_next_evnt_17>
 800085c:	6a71      	ldr	r1, [r6, #36]	; 0x24
 800085e:	4620      	mov	r0, r4
 8000860:	694a      	ldr	r2, [r1, #20]
 8000862:	4790      	blx	r2
 8000864:	9900      	ldr	r1, [sp, #0]
 8000866:	4628      	mov	r0, r5

08000868 <??evnt_schdlr_hndl_next_evnt_11>:
 8000868:	f000 f87a 	bl	8000960 <evnt_schdlr_exec>
 800086c:	e008      	b.n	8000880 <??evnt_schdlr_hndl_next_evnt_18>

0800086e <??evnt_schdlr_hndl_next_evnt_17>:
 800086e:	6a70      	ldr	r0, [r6, #36]	; 0x24
 8000870:	6881      	ldr	r1, [r0, #8]
 8000872:	4788      	blx	r1
 8000874:	2100      	movs	r1, #0
 8000876:	f000 f873 	bl	8000960 <evnt_schdlr_exec>

0800087a <??evnt_schdlr_hndl_next_evnt_1>:
 800087a:	2007      	movs	r0, #7
 800087c:	f015 fc52 	bl	8016124 <enable_specific_irq>

08000880 <??evnt_schdlr_hndl_next_evnt_18>:
 8000880:	2007      	movs	r0, #7
 8000882:	f7ff fcd3 	bl	800022c <bsp_debug_gpio_clear>
 8000886:	b004      	add	sp, #16
 8000888:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0800088c <evnt_schdlr_prdc_clbr_strtd>:
 800088c:	b57c      	push	{r2, r3, r4, r5, r6, lr}
 800088e:	4604      	mov	r4, r0
 8000890:	2200      	movs	r2, #0
 8000892:	9200      	str	r2, [sp, #0]
 8000894:	f104 0540 	add.w	r5, r4, #64	; 0x40
 8000898:	6029      	str	r1, [r5, #0]
 800089a:	202e      	movs	r0, #46	; 0x2e
 800089c:	f7ff fcc4 	bl	8000228 <bsp_debug_gpio_set>
 80008a0:	2001      	movs	r0, #1
 80008a2:	f7ff fcc7 	bl	8000234 <bsp_set_phy_clbr_state>
 80008a6:	7928      	ldrb	r0, [r5, #4]
 80008a8:	b398      	cbz	r0, 8000912 <??evnt_schdlr_prdc_clbr_strtd_0>
 80008aa:	2100      	movs	r1, #0
 80008ac:	7129      	strb	r1, [r5, #4]
 80008ae:	2001      	movs	r0, #1
 80008b0:	f7ff fd9e 	bl	80003f0 <emngr_get_handle_events>
 80008b4:	b918      	cbnz	r0, 80008be <??evnt_schdlr_prdc_clbr_strtd_1>
 80008b6:	4621      	mov	r1, r4
 80008b8:	2001      	movs	r0, #1
 80008ba:	f7ff fd10 	bl	80002de <emngr_post_event>

080008be <??evnt_schdlr_prdc_clbr_strtd_1>:
 80008be:	7968      	ldrb	r0, [r5, #5]
 80008c0:	bb18      	cbnz	r0, 800090a <??evnt_schdlr_prdc_clbr_strtd_2>
 80008c2:	f8df 5a24 	ldr.w	r5, [pc, #2596]	; 80012e8 <??DataTable11>
 80008c6:	6a68      	ldr	r0, [r5, #36]	; 0x24
 80008c8:	6881      	ldr	r1, [r0, #8]
 80008ca:	4788      	blx	r1
 80008cc:	b188      	cbz	r0, 80008f2 <??evnt_schdlr_prdc_clbr_strtd_3>
 80008ce:	6d00      	ldr	r0, [r0, #80]	; 0x50
 80008d0:	6cae      	ldr	r6, [r5, #72]	; 0x48
 80008d2:	1b86      	subs	r6, r0, r6
 80008d4:	4668      	mov	r0, sp
 80008d6:	f00b fbe0 	bl	800c09a <llhwc_slptmr_get>
 80008da:	9900      	ldr	r1, [sp, #0]
 80008dc:	42b1      	cmp	r1, r6
 80008de:	d208      	bcs.n	80008f2 <??evnt_schdlr_prdc_clbr_strtd_3>
 80008e0:	6ae8      	ldr	r0, [r5, #44]	; 0x2c
 80008e2:	1a71      	subs	r1, r6, r1
 80008e4:	f005 f890 	bl	8005a08 <os_timer_set>
 80008e8:	1e40      	subs	r0, r0, #1
 80008ea:	4180      	sbcs	r0, r0
 80008ec:	0fc0      	lsrs	r0, r0, #31
 80008ee:	f7ff fc6f 	bl	80001d0 <bsp_assert>

080008f2 <??evnt_schdlr_prdc_clbr_strtd_3>:
 80008f2:	6aa8      	ldr	r0, [r5, #40]	; 0x28
 80008f4:	4284      	cmp	r4, r0
 80008f6:	bf0c      	ite	eq
 80008f8:	2001      	moveq	r0, #1
 80008fa:	2000      	movne	r0, #0
 80008fc:	f7ff fc68 	bl	80001d0 <bsp_assert>
 8000900:	6aa9      	ldr	r1, [r5, #40]	; 0x28
 8000902:	2000      	movs	r0, #0
 8000904:	f881 008b 	strb.w	r0, [r1, #139]	; 0x8b
 8000908:	62a8      	str	r0, [r5, #40]	; 0x28

0800090a <??evnt_schdlr_prdc_clbr_strtd_2>:
 800090a:	2007      	movs	r0, #7
 800090c:	f015 fc0a 	bl	8016124 <enable_specific_irq>
 8000910:	e005      	b.n	800091e <??evnt_schdlr_prdc_clbr_strtd_4>

08000912 <??evnt_schdlr_prdc_clbr_strtd_0>:
 8000912:	2007      	movs	r0, #7
 8000914:	f015 fc06 	bl	8016124 <enable_specific_irq>
 8000918:	4620      	mov	r0, r4
 800091a:	f000 fecd 	bl	80016b8 <evnt_schdlr_prdc_clbr_exec>

0800091e <??evnt_schdlr_prdc_clbr_strtd_4>:
 800091e:	202e      	movs	r0, #46	; 0x2e
 8000920:	f7ff fc84 	bl	800022c <bsp_debug_gpio_clear>
 8000924:	2000      	movs	r0, #0
 8000926:	bd76      	pop	{r1, r2, r4, r5, r6, pc}

08000928 <evnt_schdlr_prdc_clbr_abortd>:
 8000928:	b580      	push	{r7, lr}
 800092a:	2000      	movs	r0, #0
 800092c:	f7ff fc50 	bl	80001d0 <bsp_assert>
 8000930:	2000      	movs	r0, #0
 8000932:	bd02      	pop	{r1, pc}

08000934 <evnt_schdlr_rgstr_prdc_clbr_evnt>:
 8000934:	b580      	push	{r7, lr}
 8000936:	f8df 1ce8 	ldr.w	r1, [pc, #3304]	; 8001620 <??DataTable13>
 800093a:	b092      	sub	sp, #72	; 0x48
 800093c:	2000      	movs	r0, #0
 800093e:	910f      	str	r1, [sp, #60]	; 0x3c
 8000940:	f8df 2d68 	ldr.w	r2, [pc, #3432]	; 80016ac <??DataTable14>
 8000944:	900e      	str	r0, [sp, #56]	; 0x38
 8000946:	9211      	str	r2, [sp, #68]	; 0x44
 8000948:	9002      	str	r0, [sp, #8]
 800094a:	2100      	movs	r1, #0
 800094c:	9000      	str	r0, [sp, #0]
 800094e:	9101      	str	r1, [sp, #4]
 8000950:	2300      	movs	r3, #0
 8000952:	aa04      	add	r2, sp, #16
 8000954:	f04f 4000 	mov.w	r0, #2147483648	; 0x80000000
 8000958:	f000 fcce 	bl	80012f8 <evnt_schdlr_rgstr_evnt>
 800095c:	b013      	add	sp, #76	; 0x4c
 800095e:	bd00      	pop	{pc}

08000960 <evnt_schdlr_exec>:
 8000960:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8000964:	b098      	sub	sp, #96	; 0x60
 8000966:	4604      	mov	r4, r0
 8000968:	2500      	movs	r5, #0
 800096a:	4688      	mov	r8, r1
 800096c:	f88d 5004 	strb.w	r5, [sp, #4]
 8000970:	2010      	movs	r0, #16
 8000972:	f7ff fc59 	bl	8000228 <bsp_debug_gpio_set>
 8000976:	f8df 9970 	ldr.w	r9, [pc, #2416]	; 80012e8 <??DataTable11>
 800097a:	f8d9 0028 	ldr.w	r0, [r9, #40]	; 0x28
 800097e:	2800      	cmp	r0, #0
 8000980:	f040 83f6 	bne.w	8001170 <??evnt_schdlr_exec_0>
 8000984:	2c00      	cmp	r4, #0
 8000986:	f000 8404 	beq.w	8001192 <??evnt_schdlr_exec_1>
 800098a:	e9d4 0124 	ldrd	r0, r1, [r4, #144]	; 0x90
 800098e:	f04f 4280 	mov.w	r2, #1073741824	; 0x40000000
 8000992:	42a9      	cmp	r1, r5
 8000994:	bf08      	it	eq
 8000996:	4290      	cmpeq	r0, r2
 8000998:	d108      	bne.n	80009ac <??evnt_schdlr_exec_2>
 800099a:	f104 0046 	add.w	r0, r4, #70	; 0x46
 800099e:	78c1      	ldrb	r1, [r0, #3]
 80009a0:	2901      	cmp	r1, #1
 80009a2:	f000 83f6 	beq.w	8001192 <??evnt_schdlr_exec_1>
 80009a6:	7800      	ldrb	r0, [r0, #0]
 80009a8:	2801      	cmp	r0, #1
 80009aa:	d004      	beq.n	80009b6 <??evnt_schdlr_exec_3>

080009ac <??evnt_schdlr_exec_2>:
 80009ac:	2000      	movs	r0, #0
 80009ae:	f00c fea5 	bl	800d6fc <llhwc_cmn_evnt_notify>
 80009b2:	f00c ff4f 	bl	800d854 <llhwc_cmn_request_temperature>

080009b6 <??evnt_schdlr_exec_3>:
 80009b6:	f899 0039 	ldrb.w	r0, [r9, #57]	; 0x39
 80009ba:	f104 0650 	add.w	r6, r4, #80	; 0x50
 80009be:	bbc0      	cbnz	r0, 8000a32 <??evnt_schdlr_exec_4>
 80009c0:	e9d4 0124 	ldrd	r0, r1, [r4, #144]	; 0x90
 80009c4:	f8df 2ce8 	ldr.w	r2, [pc, #3304]	; 80016b0 <??DataTable14_1>
 80009c8:	42a9      	cmp	r1, r5
 80009ca:	d81c      	bhi.n	8000a06 <??evnt_schdlr_exec_5>
 80009cc:	4290      	cmp	r0, r2
 80009ce:	d21a      	bcs.n	8000a06 <??evnt_schdlr_exec_5>
 80009d0:	f1b8 0f00 	cmp.w	r8, #0
 80009d4:	d00a      	beq.n	80009ec <??evnt_schdlr_exec_6>
 80009d6:	a802      	add	r0, sp, #8
 80009d8:	f00b fb5f 	bl	800c09a <llhwc_slptmr_get>
 80009dc:	f8d9 1048 	ldr.w	r1, [r9, #72]	; 0x48
 80009e0:	9a02      	ldr	r2, [sp, #8]
 80009e2:	188a      	adds	r2, r1, r2
 80009e4:	9202      	str	r2, [sp, #8]
 80009e6:	eba8 0801 	sub.w	r8, r8, r1
 80009ea:	e001      	b.n	80009f0 <??evnt_schdlr_exec_7>

080009ec <??evnt_schdlr_exec_6>:
 80009ec:	6831      	ldr	r1, [r6, #0]
 80009ee:	9102      	str	r1, [sp, #8]

080009f0 <??evnt_schdlr_exec_7>:
 80009f0:	6870      	ldr	r0, [r6, #4]
 80009f2:	2200      	movs	r2, #0
 80009f4:	a902      	add	r1, sp, #8
 80009f6:	9003      	str	r0, [sp, #12]
 80009f8:	2000      	movs	r0, #0
 80009fa:	f00b fca7 	bl	800c34c <llhwc_slptmr_set>
 80009fe:	2100      	movs	r1, #0
 8000a00:	2001      	movs	r0, #1
 8000a02:	f00c fe93 	bl	800d72c <llhwc_cmn_control_aclk>

08000a06 <??evnt_schdlr_exec_5>:
 8000a06:	e9d4 0124 	ldrd	r0, r1, [r4, #144]	; 0x90
 8000a0a:	f8df 2ca4 	ldr.w	r2, [pc, #3236]	; 80016b0 <??DataTable14_1>
 8000a0e:	42a9      	cmp	r1, r5
 8000a10:	d812      	bhi.n	8000a38 <??evnt_schdlr_exec_8>
 8000a12:	4290      	cmp	r0, r2
 8000a14:	d210      	bcs.n	8000a38 <??evnt_schdlr_exec_8>
 8000a16:	f410 7fc0 	tst.w	r0, #384	; 0x180
 8000a1a:	d006      	beq.n	8000a2a <??evnt_schdlr_exec_9>
 8000a1c:	6a30      	ldr	r0, [r6, #32]
 8000a1e:	f890 0122 	ldrb.w	r0, [r0, #290]	; 0x122
 8000a22:	2801      	cmp	r0, #1
 8000a24:	bf18      	it	ne
 8000a26:	2802      	cmpne	r0, #2
 8000a28:	d006      	beq.n	8000a38 <??evnt_schdlr_exec_8>

08000a2a <??evnt_schdlr_exec_9>:
 8000a2a:	2002      	movs	r0, #2
 8000a2c:	f00b fe5a 	bl	800c6e4 <llhwc_pwr_switch>
 8000a30:	e002      	b.n	8000a38 <??evnt_schdlr_exec_8>

08000a32 <??evnt_schdlr_exec_4>:
 8000a32:	f8d9 0030 	ldr.w	r0, [r9, #48]	; 0x30
 8000a36:	9003      	str	r0, [sp, #12]

08000a38 <??evnt_schdlr_exec_8>:
 8000a38:	e9d4 ab24 	ldrd	sl, fp, [r4, #144]	; 0x90
 8000a3c:	f8df 7c74 	ldr.w	r7, [pc, #3188]	; 80016b4 <??DataTable14_2>
 8000a40:	4650      	mov	r0, sl
 8000a42:	4659      	mov	r1, fp
 8000a44:	f05f 020b 	movs.w	r2, #11
 8000a48:	f001 fd04 	bl	8002454 <__iar_llswitch>

08000a4c <?<Jumptable for evnt_schdlr_exec>_0>:
 8000a4c:	0001 0000 0000 0000 007d 0000 0002 0000     ........}.......
 8000a5c:	0000 0000 0071 0000 0004 0000 0000 0000     ....q...........
 8000a6c:	0065 0000 0008 0000 0000 0000 0059 0000     e...........Y...
 8000a7c:	0010 0000 0000 0000 0243 0000 0020 0000     ........C... ...
 8000a8c:	0000 0000 0237 0000 0040 0000 0000 0000     ....7...@.......
 8000a9c:	02db 0000 0080 0000 0000 0000 03a5 0000     ................
 8000aac:	0100 0000 0000 0000 0399 0000 0000 4000     ...............@
 8000abc:	0000 0000 0607 0000 0000 0000 0001 0000     ................
 8000acc:	056f 0000 0623 0000                         o...#...

08000ad4 <??evnt_schdlr_exec_10>:
 8000ad4:	6a32      	ldr	r2, [r6, #32]
 8000ad6:	a806      	add	r0, sp, #24
 8000ad8:	f102 0120 	add.w	r1, r2, #32
 8000adc:	9205      	str	r2, [sp, #20]
 8000ade:	9104      	str	r1, [sp, #16]
 8000ae0:	784d      	ldrb	r5, [r1, #1]
 8000ae2:	2148      	movs	r1, #72	; 0x48
 8000ae4:	f030 f9fc 	bl	8030ee0 <__aeabi_memclr>
 8000ae8:	9905      	ldr	r1, [sp, #20]
 8000aea:	e9cd ab10 	strd	sl, fp, [sp, #64]	; 0x40
 8000aee:	2248      	movs	r2, #72	; 0x48
 8000af0:	9106      	str	r1, [sp, #24]
 8000af2:	8920      	ldrh	r0, [r4, #8]
 8000af4:	f8ad 0048 	strh.w	r0, [sp, #72]	; 0x48
 8000af8:	9804      	ldr	r0, [sp, #16]
 8000afa:	7801      	ldrb	r1, [r0, #0]
 8000afc:	9804      	ldr	r0, [sp, #16]
 8000afe:	f88d 104a 	strb.w	r1, [sp, #74]	; 0x4a
 8000b02:	f890 1042 	ldrb.w	r1, [r0, #66]	; 0x42
 8000b06:	f10d 004a 	add.w	r0, sp, #74	; 0x4a
 8000b0a:	7381      	strb	r1, [r0, #14]
 8000b0c:	4638      	mov	r0, r7
 8000b0e:	a906      	add	r1, sp, #24
 8000b10:	f030 f9e9 	bl	8030ee6 <__aeabi_memcpy>
 8000b14:	2d02      	cmp	r5, #2
 8000b16:	bf1c      	itt	ne
 8000b18:	2d00      	cmpne	r5, #0
 8000b1a:	2d04      	cmpne	r5, #4
 8000b1c:	d107      	bne.n	8000b2e <??evnt_schdlr_exec_17>
 8000b1e:	9805      	ldr	r0, [sp, #20]
 8000b20:	f10d 0206 	add.w	r2, sp, #6
 8000b24:	f107 0108 	add.w	r1, r7, #8
 8000b28:	3048      	adds	r0, #72	; 0x48
 8000b2a:	f001 fce0 	bl	80024ee <get_pkt_data>

08000b2e <??evnt_schdlr_exec_17>:
 8000b2e:	9805      	ldr	r0, [sp, #20]
 8000b30:	f10d 0206 	add.w	r2, sp, #6
 8000b34:	1d39      	adds	r1, r7, #4
 8000b36:	3030      	adds	r0, #48	; 0x30
 8000b38:	f001 fcd9 	bl	80024ee <get_pkt_data>
 8000b3c:	f107 0532 	add.w	r5, r7, #50	; 0x32
 8000b40:	2201      	movs	r2, #1
 8000b42:	70aa      	strb	r2, [r5, #2]
 8000b44:	e9d4 0124 	ldrd	r0, r1, [r4, #144]	; 0x90
 8000b48:	2900      	cmp	r1, #0
 8000b4a:	bf08      	it	eq
 8000b4c:	2804      	cmpeq	r0, #4
 8000b4e:	d10b      	bne.n	8000b68 <??evnt_schdlr_exec_18>
 8000b50:	7828      	ldrb	r0, [r5, #0]
 8000b52:	f001 ffc1 	bl	8002ad8 <evnt_count_adv_channels>
 8000b56:	2802      	cmp	r0, #2
 8000b58:	db06      	blt.n	8000b68 <??evnt_schdlr_exec_18>
 8000b5a:	1d39      	adds	r1, r7, #4
 8000b5c:	1e40      	subs	r0, r0, #1

08000b5e <??evnt_schdlr_exec_19>:
 8000b5e:	687a      	ldr	r2, [r7, #4]
 8000b60:	604a      	str	r2, [r1, #4]
 8000b62:	1d09      	adds	r1, r1, #4
 8000b64:	1e40      	subs	r0, r0, #1
 8000b66:	d1fa      	bne.n	8000b5e <??evnt_schdlr_exec_19>

08000b68 <??evnt_schdlr_exec_18>:
 8000b68:	9804      	ldr	r0, [sp, #16]
 8000b6a:	2203      	movs	r2, #3
 8000b6c:	f10d 0a18 	add.w	sl, sp, #24
 8000b70:	7841      	ldrb	r1, [r0, #1]
 8000b72:	9804      	ldr	r0, [sp, #16]
 8000b74:	f88d 1002 	strb.w	r1, [sp, #2]
 8000b78:	2100      	movs	r1, #0
 8000b7a:	f890 b000 	ldrb.w	fp, [r0]
 8000b7e:	a806      	add	r0, sp, #24
 8000b80:	f030 fa15 	bl	8030fae <memset>
 8000b84:	2100      	movs	r1, #0
 8000b86:	f8ad 1000 	strh.w	r1, [sp]
 8000b8a:	ea4f 005b 	mov.w	r0, fp, lsr #1
 8000b8e:	f00b 0101 	and.w	r1, fp, #1
 8000b92:	f000 0001 	and.w	r0, r0, #1
 8000b96:	f88d 1018 	strb.w	r1, [sp, #24]
 8000b9a:	0040      	lsls	r0, r0, #1
 8000b9c:	f88a 0001 	strb.w	r0, [sl, #1]
 8000ba0:	ea5f 714b 	movs.w	r1, fp, lsl #29
 8000ba4:	bf54      	ite	pl
 8000ba6:	2100      	movpl	r1, #0
 8000ba8:	2103      	movmi	r1, #3
 8000baa:	f88a 1002 	strb.w	r1, [sl, #2]
 8000bae:	f89d 1002 	ldrb.w	r1, [sp, #2]
 8000bb2:	2901      	cmp	r1, #1
 8000bb4:	d10c      	bne.n	8000bd0 <??evnt_schdlr_exec_20>
 8000bb6:	f89d 1018 	ldrb.w	r1, [sp, #24]
 8000bba:	f001 0103 	and.w	r1, r1, #3
 8000bbe:	ea41 0080 	orr.w	r0, r1, r0, lsl #2
 8000bc2:	f89a 1002 	ldrb.w	r1, [sl, #2]
 8000bc6:	0109      	lsls	r1, r1, #4
 8000bc8:	f001 0130 	and.w	r1, r1, #48	; 0x30
 8000bcc:	4308      	orrs	r0, r1
 8000bce:	e058      	b.n	8000c82 <??evnt_schdlr_exec_21>

08000bd0 <??evnt_schdlr_exec_20>:
 8000bd0:	2101      	movs	r1, #1
 8000bd2:	4668      	mov	r0, sp
 8000bd4:	f00a ffe9 	bl	800bbaa <llhwc_gen_rnd_num>
 8000bd8:	f89d 0000 	ldrb.w	r0, [sp]
 8000bdc:	f000 0003 	and.w	r0, r0, #3
 8000be0:	f88d 0000 	strb.w	r0, [sp]
 8000be4:	2803      	cmp	r0, #3
 8000be6:	bf04      	itt	eq
 8000be8:	2100      	moveq	r1, #0
 8000bea:	f88d 1000 	strbeq.w	r1, [sp]
 8000bee:	f89d 0000 	ldrb.w	r0, [sp]
 8000bf2:	2101      	movs	r1, #1
 8000bf4:	f81a b000 	ldrb.w	fp, [sl, r0]
 8000bf8:	f10d 0001 	add.w	r0, sp, #1
 8000bfc:	f00a ffd5 	bl	800bbaa <llhwc_gen_rnd_num>
 8000c00:	f89d 0001 	ldrb.w	r0, [sp, #1]
 8000c04:	f00b 0b03 	and.w	fp, fp, #3
 8000c08:	07c1      	lsls	r1, r0, #31
 8000c0a:	f89d 0000 	ldrb.w	r0, [sp]
 8000c0e:	d413      	bmi.n	8000c38 <??evnt_schdlr_exec_22>
 8000c10:	2800      	cmp	r0, #0
 8000c12:	bf0c      	ite	eq
 8000c14:	2102      	moveq	r1, #2
 8000c16:	1e41      	subne	r1, r0, #1
 8000c18:	f88d 1000 	strb.w	r1, [sp]
 8000c1c:	f89d 1000 	ldrb.w	r1, [sp]
 8000c20:	f81a 2001 	ldrb.w	r2, [sl, r1]
 8000c24:	0092      	lsls	r2, r2, #2
 8000c26:	f002 020c 	and.w	r2, r2, #12
 8000c2a:	ea42 000b 	orr.w	r0, r2, fp
 8000c2e:	2900      	cmp	r1, #0
 8000c30:	bf14      	ite	ne
 8000c32:	1e4a      	subne	r2, r1, #1
 8000c34:	2202      	moveq	r2, #2
 8000c36:	e01a      	b.n	8000c6e <??evnt_schdlr_exec_23>

08000c38 <??evnt_schdlr_exec_22>:
 8000c38:	1c40      	adds	r0, r0, #1
 8000c3a:	f88d 0000 	strb.w	r0, [sp]
 8000c3e:	f89d 0000 	ldrb.w	r0, [sp]
 8000c42:	2802      	cmp	r0, #2
 8000c44:	bfc4      	itt	gt
 8000c46:	2100      	movgt	r1, #0
 8000c48:	f88d 1000 	strbgt.w	r1, [sp]
 8000c4c:	f89d 1000 	ldrb.w	r1, [sp]
 8000c50:	f81a 2001 	ldrb.w	r2, [sl, r1]
 8000c54:	1c49      	adds	r1, r1, #1
 8000c56:	f88d 1000 	strb.w	r1, [sp]
 8000c5a:	f89d 1000 	ldrb.w	r1, [sp]
 8000c5e:	0092      	lsls	r2, r2, #2
 8000c60:	f002 020c 	and.w	r2, r2, #12
 8000c64:	ea42 000b 	orr.w	r0, r2, fp
 8000c68:	2902      	cmp	r1, #2
 8000c6a:	dd02      	ble.n	8000c72 <??evnt_schdlr_exec_24>
 8000c6c:	2200      	movs	r2, #0

08000c6e <??evnt_schdlr_exec_23>:
 8000c6e:	f88d 2000 	strb.w	r2, [sp]

08000c72 <??evnt_schdlr_exec_24>:
 8000c72:	f89d 1000 	ldrb.w	r1, [sp]
 8000c76:	f81a 2001 	ldrb.w	r2, [sl, r1]
 8000c7a:	0112      	lsls	r2, r2, #4
 8000c7c:	f002 0230 	and.w	r2, r2, #48	; 0x30
 8000c80:	4310      	orrs	r0, r2

08000c82 <??evnt_schdlr_exec_21>:
 8000c82:	7028      	strb	r0, [r5, #0]
 8000c84:	9804      	ldr	r0, [sp, #16]
 8000c86:	7801      	ldrb	r1, [r0, #0]
 8000c88:	7069      	strb	r1, [r5, #1]
 8000c8a:	9805      	ldr	r0, [sp, #20]
 8000c8c:	4639      	mov	r1, r7
 8000c8e:	3023      	adds	r0, #35	; 0x23
 8000c90:	f009 f920 	bl	8009ed4 <llhwc_set_adv_param>

08000c94 <??evnt_schdlr_exec_25>:
 8000c94:	4605      	mov	r5, r0

08000c96 <??evnt_schdlr_exec_26>:
 8000c96:	2d00      	cmp	r5, #0
 8000c98:	f040 822e 	bne.w	80010f8 <??evnt_schdlr_exec_27>
 8000c9c:	e9d4 0124 	ldrd	r0, r1, [r4, #144]	; 0x90
 8000ca0:	2300      	movs	r3, #0
 8000ca2:	f8df 2a0c 	ldr.w	r2, [pc, #2572]	; 80016b0 <??DataTable14_1>
 8000ca6:	4299      	cmp	r1, r3
 8000ca8:	f200 824e 	bhi.w	8001148 <??evnt_schdlr_exec_28>
 8000cac:	4290      	cmp	r0, r2
 8000cae:	f080 824b 	bcs.w	8001148 <??evnt_schdlr_exec_28>
 8000cb2:	f410 7fc0 	tst.w	r0, #384	; 0x180
 8000cb6:	f000 823d 	beq.w	8001134 <??evnt_schdlr_exec_29>
 8000cba:	6a30      	ldr	r0, [r6, #32]
 8000cbc:	f890 1127 	ldrb.w	r1, [r0, #295]	; 0x127
 8000cc0:	2901      	cmp	r1, #1
 8000cc2:	f040 823d 	bne.w	8001140 <??evnt_schdlr_exec_30>
 8000cc6:	2001      	movs	r0, #1
 8000cc8:	e238      	b.n	800113c <??evnt_schdlr_exec_31>

08000cca <??evnt_schdlr_exec_11>:
 8000cca:	2001      	movs	r0, #1
 8000ccc:	f7ff fa80 	bl	80001d0 <bsp_assert>
 8000cd0:	2100      	movs	r1, #0
 8000cd2:	6a35      	ldr	r5, [r6, #32]
 8000cd4:	a804      	add	r0, sp, #16
 8000cd6:	2200      	movs	r2, #0
 8000cd8:	2300      	movs	r3, #0
 8000cda:	468c      	mov	ip, r1
 8000cdc:	e880 100e 	stmia.w	r0, {r1, r2, r3, ip}
 8000ce0:	8969      	ldrh	r1, [r5, #10]
 8000ce2:	f240 2071 	movw	r0, #625	; 0x271
 8000ce6:	603a      	str	r2, [r7, #0]
 8000ce8:	4341      	muls	r1, r0
 8000cea:	813a      	strh	r2, [r7, #8]
 8000cec:	f1b8 0f00 	cmp.w	r8, #0
 8000cf0:	6079      	str	r1, [r7, #4]
 8000cf2:	60fd      	str	r5, [r7, #12]
 8000cf4:	e9c7 2204 	strd	r2, r2, [r7, #16]
 8000cf8:	833a      	strh	r2, [r7, #24]
 8000cfa:	76ba      	strb	r2, [r7, #26]
 8000cfc:	d004      	beq.n	8000d08 <??evnt_schdlr_exec_32>
 8000cfe:	ebc8 1048 	rsb	r0, r8, r8, lsl #5
 8000d02:	eb00 0098 	add.w	r0, r0, r8, lsr #2
 8000d06:	6078      	str	r0, [r7, #4]

08000d08 <??evnt_schdlr_exec_32>:
 8000d08:	4639      	mov	r1, r7
 8000d0a:	f105 0010 	add.w	r0, r5, #16
 8000d0e:	f001 fbee 	bl	80024ee <get_pkt_data>
 8000d12:	f1b8 0f00 	cmp.w	r8, #0
 8000d16:	d106      	bne.n	8000d26 <??evnt_schdlr_exec_33>
 8000d18:	7b20      	ldrb	r0, [r4, #12]
 8000d1a:	f7ff fc65 	bl	80005e8 <evnt_schdlr_get_nxt_chnl>
 8000d1e:	7320      	strb	r0, [r4, #12]
 8000d20:	8eb0      	ldrh	r0, [r6, #52]	; 0x34
 8000d22:	81e0      	strh	r0, [r4, #14]
 8000d24:	e00f      	b.n	8000d46 <??evnt_schdlr_exec_34>

08000d26 <??evnt_schdlr_exec_33>:
 8000d26:	8eb2      	ldrh	r2, [r6, #52]	; 0x34
 8000d28:	89e0      	ldrh	r0, [r4, #14]
 8000d2a:	1e52      	subs	r2, r2, #1
 8000d2c:	4290      	cmp	r0, r2
 8000d2e:	db03      	blt.n	8000d38 <??evnt_schdlr_exec_35>
 8000d30:	f64f 71ff 	movw	r1, #65535	; 0xffff
 8000d34:	4288      	cmp	r0, r1
 8000d36:	d106      	bne.n	8000d46 <??evnt_schdlr_exec_34>

08000d38 <??evnt_schdlr_exec_35>:
 8000d38:	7b20      	ldrb	r0, [r4, #12]
 8000d3a:	f7ff fc55 	bl	80005e8 <evnt_schdlr_get_nxt_chnl>
 8000d3e:	7320      	strb	r0, [r4, #12]
 8000d40:	8eb0      	ldrh	r0, [r6, #52]	; 0x34
 8000d42:	1e41      	subs	r1, r0, #1
 8000d44:	81e1      	strh	r1, [r4, #14]

08000d46 <??evnt_schdlr_exec_34>:
 8000d46:	e9d4 0124 	ldrd	r0, r1, [r4, #144]	; 0x90
 8000d4a:	f010 0f30 	tst.w	r0, #48	; 0x30
 8000d4e:	d003      	beq.n	8000d58 <??evnt_schdlr_exec_36>
 8000d50:	e9c4 0104 	strd	r0, r1, [r4, #16]
 8000d54:	2001      	movs	r0, #1
 8000d56:	7678      	strb	r0, [r7, #25]

08000d58 <??evnt_schdlr_exec_36>:
 8000d58:	e9d4 0104 	ldrd	r0, r1, [r4, #16]
 8000d5c:	e9c7 0104 	strd	r0, r1, [r7, #16]
 8000d60:	7b22      	ldrb	r2, [r4, #12]
 8000d62:	f107 0009 	add.w	r0, r7, #9
 8000d66:	763a      	strb	r2, [r7, #24]
 8000d68:	f015 faa6 	bl	80162b8 <db_get_tx_power_value>
 8000d6c:	463a      	mov	r2, r7
 8000d6e:	a904      	add	r1, sp, #16
 8000d70:	f105 000e 	add.w	r0, r5, #14
 8000d74:	f009 fa12 	bl	800a19c <llhwc_set_scan_param>
 8000d78:	e78c      	b.n	8000c94 <??evnt_schdlr_exec_25>

08000d7a <??evnt_schdlr_exec_12>:
 8000d7a:	6a35      	ldr	r5, [r6, #32]
 8000d7c:	2001      	movs	r0, #1
 8000d7e:	f7ff fa27 	bl	80001d0 <bsp_assert>
 8000d82:	2d00      	cmp	r5, #0
 8000d84:	bf14      	ite	ne
 8000d86:	2001      	movne	r0, #1
 8000d88:	2000      	moveq	r0, #0
 8000d8a:	f7ff fa21 	bl	80001d0 <bsp_assert>
 8000d8e:	f1b8 0f00 	cmp.w	r8, #0
 8000d92:	d106      	bne.n	8000da2 <??evnt_schdlr_exec_37>
 8000d94:	7b20      	ldrb	r0, [r4, #12]
 8000d96:	f7ff fc27 	bl	80005e8 <evnt_schdlr_get_nxt_chnl>
 8000d9a:	7320      	strb	r0, [r4, #12]
 8000d9c:	8eb0      	ldrh	r0, [r6, #52]	; 0x34
 8000d9e:	81e0      	strh	r0, [r4, #14]
 8000da0:	e013      	b.n	8000dca <??evnt_schdlr_exec_38>

08000da2 <??evnt_schdlr_exec_37>:
 8000da2:	2100      	movs	r1, #0
 8000da4:	f104 0090 	add.w	r0, r4, #144	; 0x90
 8000da8:	7241      	strb	r1, [r0, #9]
 8000daa:	8eb2      	ldrh	r2, [r6, #52]	; 0x34
 8000dac:	89e0      	ldrh	r0, [r4, #14]
 8000dae:	1e52      	subs	r2, r2, #1
 8000db0:	4290      	cmp	r0, r2
 8000db2:	db03      	blt.n	8000dbc <??evnt_schdlr_exec_39>
 8000db4:	f64f 71ff 	movw	r1, #65535	; 0xffff
 8000db8:	4288      	cmp	r0, r1
 8000dba:	d106      	bne.n	8000dca <??evnt_schdlr_exec_38>

08000dbc <??evnt_schdlr_exec_39>:
 8000dbc:	7b20      	ldrb	r0, [r4, #12]
 8000dbe:	f7ff fc13 	bl	80005e8 <evnt_schdlr_get_nxt_chnl>
 8000dc2:	7320      	strb	r0, [r4, #12]
 8000dc4:	8eb0      	ldrh	r0, [r6, #52]	; 0x34
 8000dc6:	1e41      	subs	r1, r0, #1
 8000dc8:	81e1      	strh	r1, [r4, #14]

08000dca <??evnt_schdlr_exec_38>:
 8000dca:	8969      	ldrh	r1, [r5, #10]
 8000dcc:	f240 2071 	movw	r0, #625	; 0x271
 8000dd0:	2200      	movs	r2, #0
 8000dd2:	4341      	muls	r1, r0
 8000dd4:	7b20      	ldrb	r0, [r4, #12]
 8000dd6:	603d      	str	r5, [r7, #0]
 8000dd8:	607a      	str	r2, [r7, #4]
 8000dda:	60b9      	str	r1, [r7, #8]
 8000ddc:	7338      	strb	r0, [r7, #12]
 8000dde:	737a      	strb	r2, [r7, #13]
 8000de0:	73ba      	strb	r2, [r7, #14]
 8000de2:	f1b8 0f00 	cmp.w	r8, #0
 8000de6:	d004      	beq.n	8000df2 <??evnt_schdlr_exec_40>
 8000de8:	ebc8 1048 	rsb	r0, r8, r8, lsl #5
 8000dec:	eb00 0098 	add.w	r0, r0, r8, lsr #2
 8000df0:	60b8      	str	r0, [r7, #8]

08000df2 <??evnt_schdlr_exec_40>:
 8000df2:	8d28      	ldrh	r0, [r5, #40]	; 0x28
 8000df4:	2808      	cmp	r0, #8
 8000df6:	bfba      	itte	lt
 8000df8:	f8df 19f4 	ldrlt.w	r1, [pc, #2548]	; 80017f0 <??DataTable15>
 8000dfc:	f851 a020 	ldrlt.w	sl, [r1, r0, lsl #2]
 8000e00:	4692      	movge	sl, r2
 8000e02:	1d39      	adds	r1, r7, #4
 8000e04:	f105 0018 	add.w	r0, r5, #24
 8000e08:	f001 fb71 	bl	80024ee <get_pkt_data>
 8000e0c:	8f29      	ldrh	r1, [r5, #56]	; 0x38
 8000e0e:	8ee8      	ldrh	r0, [r5, #54]	; 0x36
 8000e10:	f10a 0216 	add.w	r2, sl, #22
 8000e14:	f00d fff5 	bl	800ee02 <evnt_schdlr_choose_conn_intrv>
 8000e18:	8fe9      	ldrh	r1, [r5, #62]	; 0x3e
 8000e1a:	f10a 0038 	add.w	r0, sl, #56	; 0x38
 8000e1e:	f00f fe33 	bl	8010a88 <evnt_schdlr_get_master_conn_anchor_point>
 8000e22:	2001      	movs	r0, #1
 8000e24:	9000      	str	r0, [sp, #0]
 8000e26:	8fab      	ldrh	r3, [r5, #60]	; 0x3c
 8000e28:	8f6a      	ldrh	r2, [r5, #58]	; 0x3a
 8000e2a:	f8ba 1016 	ldrh.w	r1, [sl, #22]
 8000e2e:	f105 0018 	add.w	r0, r5, #24
 8000e32:	f011 fe59 	bl	8012ae8 <pdu_trnsprt_hndlr_nconn_init_patch>
 8000e36:	e9d4 0124 	ldrd	r0, r1, [r4, #144]	; 0x90
 8000e3a:	2900      	cmp	r1, #0
 8000e3c:	bf02      	ittt	eq
 8000e3e:	2840      	cmpeq	r0, #64	; 0x40
 8000e40:	2201      	moveq	r2, #1
 8000e42:	737a      	strbeq	r2, [r7, #13]
 8000e44:	4639      	mov	r1, r7
 8000e46:	f105 000d 	add.w	r0, r5, #13
 8000e4a:	f009 fcd5 	bl	800a7f8 <llhwc_set_init_param>
 8000e4e:	e721      	b.n	8000c94 <??evnt_schdlr_exec_25>

08000e50 <??evnt_schdlr_exec_13>:
 8000e50:	6a30      	ldr	r0, [r6, #32]
 8000e52:	f890 0122 	ldrb.w	r0, [r0, #290]	; 0x122
 8000e56:	2801      	cmp	r0, #1
 8000e58:	bf18      	it	ne
 8000e5a:	2802      	cmpne	r0, #2
 8000e5c:	d105      	bne.n	8000e6a <??evnt_schdlr_exec_41>
 8000e5e:	2004      	movs	r0, #4
 8000e60:	f00b fc40 	bl	800c6e4 <llhwc_pwr_switch>
 8000e64:	0005      	movs	r5, r0
 8000e66:	f040 8147 	bne.w	80010f8 <??evnt_schdlr_exec_27>

08000e6a <??evnt_schdlr_exec_41>:
 8000e6a:	6a30      	ldr	r0, [r6, #32]
 8000e6c:	2200      	movs	r2, #0
 8000e6e:	9000      	str	r0, [sp, #0]
 8000e70:	e9d4 0124 	ldrd	r0, r1, [r4, #144]	; 0x90
 8000e74:	703a      	strb	r2, [r7, #0]
 8000e76:	823a      	strh	r2, [r7, #16]
 8000e78:	e9c7 0102 	strd	r0, r1, [r7, #8]
 8000e7c:	f8df 0974 	ldr.w	r0, [pc, #2420]	; 80017f4 <??DataTable15_1>
 8000e80:	6178      	str	r0, [r7, #20]
 8000e82:	74ba      	strb	r2, [r7, #18]
 8000e84:	833a      	strh	r2, [r7, #24]
 8000e86:	76ba      	strb	r2, [r7, #26]
 8000e88:	f20f 3014 	addw	r0, pc, #788	; 0x314
 8000e8c:	69c1      	ldr	r1, [r0, #28]
 8000e8e:	9800      	ldr	r0, [sp, #0]
 8000e90:	2204      	movs	r2, #4
 8000e92:	61f9      	str	r1, [r7, #28]
 8000e94:	f500 7196 	add.w	r1, r0, #300	; 0x12c
 8000e98:	f107 001c 	add.w	r0, r7, #28
 8000e9c:	f00d fe54 	bl	800eb48 <ble_memcpy>
 8000ea0:	9800      	ldr	r0, [sp, #0]
 8000ea2:	f500 7191 	add.w	r1, r0, #290	; 0x122
 8000ea6:	9104      	str	r1, [sp, #16]
 8000ea8:	7a08      	ldrb	r0, [r1, #8]
 8000eaa:	b928      	cbnz	r0, 8000eb8 <??evnt_schdlr_exec_42>
 8000eac:	9800      	ldr	r0, [sp, #0]
 8000eae:	f100 0120 	add.w	r1, r0, #32
 8000eb2:	794a      	ldrb	r2, [r1, #5]
 8000eb4:	703a      	strb	r2, [r7, #0]
 8000eb6:	e009      	b.n	8000ecc <??evnt_schdlr_exec_43>

08000eb8 <??evnt_schdlr_exec_42>:
 8000eb8:	9800      	ldr	r0, [sp, #0]
 8000eba:	463a      	mov	r2, r7
 8000ebc:	f8b0 10da 	ldrh.w	r1, [r0, #218]	; 0xda
 8000ec0:	3028      	adds	r0, #40	; 0x28
 8000ec2:	f008 fa2c 	bl	800931e <llhwc_get_ch_idx_algo_2>
 8000ec6:	0005      	movs	r5, r0
 8000ec8:	f040 80b3 	bne.w	8001032 <??evnt_schdlr_exec_44>

08000ecc <??evnt_schdlr_exec_43>:
 8000ecc:	9804      	ldr	r0, [sp, #16]
 8000ece:	2101      	movs	r1, #1
 8000ed0:	f04f 0a00 	mov.w	sl, #0
 8000ed4:	7ac0      	ldrb	r0, [r0, #11]
 8000ed6:	f00a fe40 	bl	800bb5a <llhwc_get_access_adrs_time>
 8000eda:	9a00      	ldr	r2, [sp, #0]
 8000edc:	f240 41e2 	movw	r1, #1250	; 0x4e2
 8000ee0:	f892 3020 	ldrb.w	r3, [r2, #32]
 8000ee4:	6822      	ldr	r2, [r4, #0]
 8000ee6:	434b      	muls	r3, r1
 8000ee8:	3308      	adds	r3, #8
 8000eea:	eb03 0342 	add.w	r3, r3, r2, lsl #1
 8000eee:	18c0      	adds	r0, r0, r3
 8000ef0:	8238      	strh	r0, [r7, #16]
 8000ef2:	7e20      	ldrb	r0, [r4, #24]
 8000ef4:	7638      	strb	r0, [r7, #24]
 8000ef6:	f8d9 1024 	ldr.w	r1, [r9, #36]	; 0x24
 8000efa:	4620      	mov	r0, r4
 8000efc:	6b0a      	ldr	r2, [r1, #48]	; 0x30
 8000efe:	4790      	blx	r2
 8000f00:	4605      	mov	r5, r0
 8000f02:	1e40      	subs	r0, r0, #1
 8000f04:	4180      	sbcs	r0, r0
 8000f06:	43c0      	mvns	r0, r0
 8000f08:	0fc0      	lsrs	r0, r0, #31
 8000f0a:	f7ff f961 	bl	80001d0 <bsp_assert>
 8000f0e:	e9d4 0124 	ldrd	r0, r1, [r4, #144]	; 0x90
 8000f12:	2900      	cmp	r1, #0
 8000f14:	bf02      	ittt	eq
 8000f16:	f5b0 7f80 	cmpeq.w	r0, #256	; 0x100
 8000f1a:	1c6d      	addeq	r5, r5, #1
 8000f1c:	b2ed      	uxtbeq	r5, r5
 8000f1e:	f884 a018 	strb.w	sl, [r4, #24]
 8000f22:	f8df 28d4 	ldr.w	r2, [pc, #2260]	; 80017f8 <??DataTable15_2>
 8000f26:	6810      	ldr	r0, [r2, #0]
 8000f28:	f04f 31ff 	mov.w	r1, #4294967295	; 0xffffffff
 8000f2c:	46ab      	mov	fp, r5
 8000f2e:	f013 fa9a 	bl	8014466 <os_rcrsv_mutex_wait>
 8000f32:	f104 000c 	add.w	r0, r4, #12
 8000f36:	f001 fe66 	bl	8002c06 <packet_get_frst_pkt>
 8000f3a:	4605      	mov	r5, r0

08000f3c <??evnt_schdlr_exec_45>:
 8000f3c:	b355      	cbz	r5, 8000f94 <??evnt_schdlr_exec_46>
 8000f3e:	45da      	cmp	sl, fp
 8000f40:	da28      	bge.n	8000f94 <??evnt_schdlr_exec_46>
 8000f42:	f8df 08b8 	ldr.w	r0, [pc, #2232]	; 80017fc <??DataTable15_3>
 8000f46:	eb00 024a 	add.w	r2, r0, sl, lsl #1
 8000f4a:	f8df 18a8 	ldr.w	r1, [pc, #2216]	; 80017f4 <??DataTable15_1>
 8000f4e:	eb01 018a 	add.w	r1, r1, sl, lsl #2
 8000f52:	4628      	mov	r0, r5
 8000f54:	f001 facb 	bl	80024ee <get_pkt_data>
 8000f58:	7e20      	ldrb	r0, [r4, #24]
 8000f5a:	f10a 0a01 	add.w	sl, sl, #1
 8000f5e:	fa5f fa8a 	uxtb.w	sl, sl
 8000f62:	1c40      	adds	r0, r0, #1
 8000f64:	7620      	strb	r0, [r4, #24]
 8000f66:	f109 0050 	add.w	r0, r9, #80	; 0x50
 8000f6a:	42a8      	cmp	r0, r5
 8000f6c:	bf14      	ite	ne
 8000f6e:	686d      	ldrne	r5, [r5, #4]
 8000f70:	68e5      	ldreq	r5, [r4, #12]
 8000f72:	e7e3      	b.n	8000f3c <??evnt_schdlr_exec_45>

08000f74 <??evnt_schdlr_exec_47>:
 8000f74:	f8df 087c 	ldr.w	r0, [pc, #2172]	; 80017f4 <??DataTable15_1>
 8000f78:	f100 0120 	add.w	r1, r0, #32
 8000f7c:	eb01 024a 	add.w	r2, r1, sl, lsl #1
 8000f80:	eb00 018a 	add.w	r1, r0, sl, lsl #2
 8000f84:	f109 0050 	add.w	r0, r9, #80	; 0x50
 8000f88:	f10a 0a01 	add.w	sl, sl, #1
 8000f8c:	f001 faaf 	bl	80024ee <get_pkt_data>
 8000f90:	fa5f fa8a 	uxtb.w	sl, sl

08000f94 <??evnt_schdlr_exec_46>:
 8000f94:	45da      	cmp	sl, fp
 8000f96:	dbed      	blt.n	8000f74 <??evnt_schdlr_exec_47>
 8000f98:	4650      	mov	r0, sl
 8000f9a:	2808      	cmp	r0, #8
 8000f9c:	da10      	bge.n	8000fc0 <??evnt_schdlr_exec_48>
 8000f9e:	f8df 2854 	ldr.w	r2, [pc, #2132]	; 80017f4 <??DataTable15_1>
 8000fa2:	f8df 3850 	ldr.w	r3, [pc, #2128]	; 80017f4 <??DataTable15_1>
 8000fa6:	eb02 0240 	add.w	r2, r2, r0, lsl #1
 8000faa:	eb03 0180 	add.w	r1, r3, r0, lsl #2
 8000fae:	f1c0 0008 	rsb	r0, r0, #8
 8000fb2:	2300      	movs	r3, #0

08000fb4 <??evnt_schdlr_exec_49>:
 8000fb4:	f841 3b04 	str.w	r3, [r1], #4
 8000fb8:	8413      	strh	r3, [r2, #32]
 8000fba:	1c92      	adds	r2, r2, #2
 8000fbc:	1e40      	subs	r0, r0, #1
 8000fbe:	d1f9      	bne.n	8000fb4 <??evnt_schdlr_exec_49>

08000fc0 <??evnt_schdlr_exec_48>:
 8000fc0:	f8df 0834 	ldr.w	r0, [pc, #2100]	; 80017f8 <??DataTable15_2>
 8000fc4:	6800      	ldr	r0, [r0, #0]
 8000fc6:	f013 fa54 	bl	8014472 <os_rcrsv_mutex_release>
 8000fca:	9800      	ldr	r0, [sp, #0]
 8000fcc:	f887 a012 	strb.w	sl, [r7, #18]
 8000fd0:	463a      	mov	r2, r7
 8000fd2:	f500 7190 	add.w	r1, r0, #288	; 0x120
 8000fd6:	3028      	adds	r0, #40	; 0x28
 8000fd8:	f009 fd98 	bl	800ab0c <llhwc_set_conn_evnt_param>
 8000fdc:	0005      	movs	r5, r0
 8000fde:	d128      	bne.n	8001032 <??evnt_schdlr_exec_44>
 8000fe0:	9804      	ldr	r0, [sp, #16]
 8000fe2:	7800      	ldrb	r0, [r0, #0]
 8000fe4:	2801      	cmp	r0, #1
 8000fe6:	bf18      	it	ne
 8000fe8:	2802      	cmpne	r0, #2
 8000fea:	d122      	bne.n	8001032 <??evnt_schdlr_exec_44>
 8000fec:	9a04      	ldr	r2, [sp, #16]
 8000fee:	7e79      	ldrb	r1, [r7, #25]
 8000ff0:	78d0      	ldrb	r0, [r2, #3]
 8000ff2:	b930      	cbnz	r0, 8001002 <??evnt_schdlr_exec_50>
 8000ff4:	7eb8      	ldrb	r0, [r7, #26]
 8000ff6:	f041 0180 	orr.w	r1, r1, #128	; 0x80
 8000ffa:	7679      	strb	r1, [r7, #25]
 8000ffc:	f000 007f 	and.w	r0, r0, #127	; 0x7f
 8001000:	e005      	b.n	800100e <??evnt_schdlr_exec_51>

08001002 <??evnt_schdlr_exec_50>:
 8001002:	7eb8      	ldrb	r0, [r7, #26]
 8001004:	f001 017f 	and.w	r1, r1, #127	; 0x7f
 8001008:	7679      	strb	r1, [r7, #25]
 800100a:	f040 0080 	orr.w	r0, r0, #128	; 0x80

0800100e <??evnt_schdlr_exec_51>:
 800100e:	76b8      	strb	r0, [r7, #26]
 8001010:	f8df 07e0 	ldr.w	r0, [pc, #2016]	; 80017f4 <??DataTable15_1>
 8001014:	6801      	ldr	r1, [r0, #0]
 8001016:	f109 0248 	add.w	r2, r9, #72	; 0x48
 800101a:	6890      	ldr	r0, [r2, #8]
 800101c:	4281      	cmp	r1, r0
 800101e:	d103      	bne.n	8001028 <??evnt_schdlr_exec_52>
 8001020:	7e38      	ldrb	r0, [r7, #24]
 8001022:	b108      	cbz	r0, 8001028 <??evnt_schdlr_exec_52>
 8001024:	1e40      	subs	r0, r0, #1
 8001026:	7638      	strb	r0, [r7, #24]

08001028 <??evnt_schdlr_exec_52>:
 8001028:	9800      	ldr	r0, [sp, #0]
 800102a:	4639      	mov	r1, r7
 800102c:	30e0      	adds	r0, #224	; 0xe0
 800102e:	f009 ffc9 	bl	800afc4 <llhwc_conn_evnt_en_encry>

08001032 <??evnt_schdlr_exec_44>:
 8001032:	f104 0090 	add.w	r0, r4, #144	; 0x90
 8001036:	7b41      	ldrb	r1, [r0, #13]
 8001038:	1c49      	adds	r1, r1, #1
 800103a:	7341      	strb	r1, [r0, #13]
 800103c:	e62b      	b.n	8000c96 <??evnt_schdlr_exec_26>

0800103e <??evnt_schdlr_exec_15>:
 800103e:	69a7      	ldr	r7, [r4, #24]
 8001040:	6960      	ldr	r0, [r4, #20]
 8001042:	42b8      	cmp	r0, r7
 8001044:	d22f      	bcs.n	80010a6 <??evnt_schdlr_exec_53>
 8001046:	1a3f      	subs	r7, r7, r0
 8001048:	6a70      	ldr	r0, [r6, #36]	; 0x24
 800104a:	b1d0      	cbz	r0, 8001082 <??evnt_schdlr_exec_54>
 800104c:	f850 cf50 	ldr.w	ip, [r0, #80]!
 8001050:	2101      	movs	r1, #1
 8001052:	e9d0 2310 	ldrd	r2, r3, [r0, #64]	; 0x40
 8001056:	428b      	cmp	r3, r1
 8001058:	bf06      	itte	eq
 800105a:	42aa      	cmpeq	r2, r5
 800105c:	200f      	moveq	r0, #15
 800105e:	f8d9 0048 	ldrne.w	r0, [r9, #72]	; 0x48
 8001062:	ebac 0c00 	sub.w	ip, ip, r0
 8001066:	6930      	ldr	r0, [r6, #16]
 8001068:	6831      	ldr	r1, [r6, #0]
 800106a:	1841      	adds	r1, r0, r1
 800106c:	187a      	adds	r2, r7, r1
 800106e:	4562      	cmp	r2, ip
 8001070:	d307      	bcc.n	8001082 <??evnt_schdlr_exec_54>
 8001072:	4561      	cmp	r1, ip
 8001074:	d208      	bcs.n	8001088 <??evnt_schdlr_exec_55>
 8001076:	4484      	add	ip, r0
 8001078:	ebac 0c01 	sub.w	ip, ip, r1
 800107c:	f8c6 c010 	str.w	ip, [r6, #16]
 8001080:	e002      	b.n	8001088 <??evnt_schdlr_exec_55>

08001082 <??evnt_schdlr_exec_54>:
 8001082:	6930      	ldr	r0, [r6, #16]
 8001084:	183f      	adds	r7, r7, r0
 8001086:	6137      	str	r7, [r6, #16]

08001088 <??evnt_schdlr_exec_55>:
 8001088:	69e0      	ldr	r0, [r4, #28]
 800108a:	b160      	cbz	r0, 80010a6 <??evnt_schdlr_exec_53>
 800108c:	6832      	ldr	r2, [r6, #0]
 800108e:	6933      	ldr	r3, [r6, #16]
 8001090:	f8d9 1048 	ldr.w	r1, [r9, #72]	; 0x48
 8001094:	189b      	adds	r3, r3, r2
 8001096:	1a5b      	subs	r3, r3, r1
 8001098:	3b14      	subs	r3, #20
 800109a:	4298      	cmp	r0, r3
 800109c:	d203      	bcs.n	80010a6 <??evnt_schdlr_exec_53>
 800109e:	1a80      	subs	r0, r0, r2
 80010a0:	1808      	adds	r0, r1, r0
 80010a2:	3014      	adds	r0, #20
 80010a4:	6130      	str	r0, [r6, #16]

080010a6 <??evnt_schdlr_exec_53>:
 80010a6:	f8d9 1024 	ldr.w	r1, [r9, #36]	; 0x24
 80010aa:	f8c9 4028 	str.w	r4, [r9, #40]	; 0x28
 80010ae:	4620      	mov	r0, r4
 80010b0:	690a      	ldr	r2, [r1, #16]
 80010b2:	4790      	blx	r2
 80010b4:	6931      	ldr	r1, [r6, #16]
 80010b6:	f8d9 0048 	ldr.w	r0, [r9, #72]	; 0x48
 80010ba:	6a62      	ldr	r2, [r4, #36]	; 0x24
 80010bc:	1a08      	subs	r0, r1, r0
 80010be:	3814      	subs	r0, #20
 80010c0:	ebc0 1140 	rsb	r1, r0, r0, lsl #5
 80010c4:	eb01 0190 	add.w	r1, r1, r0, lsr #2
 80010c8:	e00c      	b.n	80010e4 <??evnt_schdlr_exec_56>

080010ca <??evnt_schdlr_exec_14>:
 80010ca:	f8c9 4028 	str.w	r4, [r9, #40]	; 0x28
 80010ce:	2001      	movs	r0, #1
 80010d0:	ebc8 1148 	rsb	r1, r8, r8, lsl #5
 80010d4:	f884 008b 	strb.w	r0, [r4, #139]	; 0x8b
 80010d8:	f104 0290 	add.w	r2, r4, #144	; 0x90
 80010dc:	7255      	strb	r5, [r2, #9]
 80010de:	6a62      	ldr	r2, [r4, #36]	; 0x24
 80010e0:	eb01 0198 	add.w	r1, r1, r8, lsr #2

080010e4 <??evnt_schdlr_exec_56>:
 80010e4:	6aa3      	ldr	r3, [r4, #40]	; 0x28
 80010e6:	4620      	mov	r0, r4
 80010e8:	4798      	blx	r3
 80010ea:	0005      	movs	r5, r0
 80010ec:	d041      	beq.n	8001172 <??evnt_schdlr_exec_57>
 80010ee:	4620      	mov	r0, r4
 80010f0:	f001 f80c 	bl	800210c <evnt_schdlr_gnrc_evnt_cmplt>
 80010f4:	e03d      	b.n	8001172 <??evnt_schdlr_exec_57>

080010f6 <??evnt_schdlr_exec_16>:
 80010f6:	251f      	movs	r5, #31

080010f8 <??evnt_schdlr_exec_27>:
 80010f8:	2000      	movs	r0, #0
 80010fa:	f00b fa61 	bl	800c5c0 <llhwc_slptmr_stop>
 80010fe:	2001      	movs	r0, #1
 8001100:	f00b faf0 	bl	800c6e4 <llhwc_pwr_switch>
 8001104:	f104 0690 	add.w	r6, r4, #144	; 0x90
 8001108:	2000      	movs	r0, #0
 800110a:	7230      	strb	r0, [r6, #8]
 800110c:	2011      	movs	r0, #17
 800110e:	f7ff f88f 	bl	8000230 <bsp_debug_gpio_toggle>
 8001112:	2100      	movs	r1, #0
 8001114:	2000      	movs	r0, #0
 8001116:	f00c fb09 	bl	800d72c <llhwc_cmn_control_aclk>
 800111a:	7a70      	ldrb	r0, [r6, #9]
 800111c:	b108      	cbz	r0, 8001122 <??evnt_schdlr_exec_58>
 800111e:	1e40      	subs	r0, r0, #1
 8001120:	7270      	strb	r0, [r6, #9]

08001122 <??evnt_schdlr_exec_58>:
 8001122:	f8d9 1024 	ldr.w	r1, [r9, #36]	; 0x24
 8001126:	4620      	mov	r0, r4
 8001128:	694a      	ldr	r2, [r1, #20]
 800112a:	4790      	blx	r2
 800112c:	f1b8 0f00 	cmp.w	r8, #0
 8001130:	d11f      	bne.n	8001172 <??evnt_schdlr_exec_57>
 8001132:	e016      	b.n	8001162 <??evnt_schdlr_exec_59>

08001134 <??evnt_schdlr_exec_29>:
 8001134:	f00a ff4c 	bl	800bfd0 <llhwc_is_in_augmented_mode>
 8001138:	2801      	cmp	r0, #1
 800113a:	d101      	bne.n	8001140 <??evnt_schdlr_exec_30>

0800113c <??evnt_schdlr_exec_31>:
 800113c:	f88d 0004 	strb.w	r0, [sp, #4]

08001140 <??evnt_schdlr_exec_30>:
 8001140:	f89d 0004 	ldrb.w	r0, [sp, #4]
 8001144:	f00a fe76 	bl	800be34 <llhwc_enable_augment_event>

08001148 <??evnt_schdlr_exec_28>:
 8001148:	f8d9 1024 	ldr.w	r1, [r9, #36]	; 0x24
 800114c:	f8c9 4028 	str.w	r4, [r9, #40]	; 0x28
 8001150:	4620      	mov	r0, r4
 8001152:	690a      	ldr	r2, [r1, #16]
 8001154:	4790      	blx	r2
 8001156:	4620      	mov	r0, r4
 8001158:	f00a fe69 	bl	800be2e <llhwc_set_evnt_hndl>
 800115c:	e009      	b.n	8001172 <??evnt_schdlr_exec_57>

0800115e <??evnt_schdlr_exec_60>:
 800115e:	f00c fcb4 	bl	800daca <llhwc_phy_get_nxt_seq_from_queue>

08001162 <??evnt_schdlr_exec_59>:
 8001162:	f00c fc57 	bl	800da14 <llhwc_phy_is_phy_driver_busy>
 8001166:	2801      	cmp	r0, #1
 8001168:	d0f9      	beq.n	800115e <??evnt_schdlr_exec_60>
 800116a:	f7ff fa68 	bl	800063e <evnt_schdlr_hndl_next_evnt>
 800116e:	e000      	b.n	8001172 <??evnt_schdlr_exec_57>

08001170 <??evnt_schdlr_exec_0>:
 8001170:	b17c      	cbz	r4, 8001192 <??evnt_schdlr_exec_1>

08001172 <??evnt_schdlr_exec_57>:
 8001172:	e9d4 0124 	ldrd	r0, r1, [r4, #144]	; 0x90
 8001176:	2300      	movs	r3, #0
 8001178:	f8df 2534 	ldr.w	r2, [pc, #1332]	; 80016b0 <??DataTable14_1>
 800117c:	4299      	cmp	r1, r3
 800117e:	d808      	bhi.n	8001192 <??evnt_schdlr_exec_1>
 8001180:	4290      	cmp	r0, r2
 8001182:	d206      	bcs.n	8001192 <??evnt_schdlr_exec_1>
 8001184:	e001      	b.n	800118a <??evnt_schdlr_exec_61>

08001186 <??evnt_schdlr_exec_62>:
 8001186:	f00c fca0 	bl	800daca <llhwc_phy_get_nxt_seq_from_queue>

0800118a <??evnt_schdlr_exec_61>:
 800118a:	f00c fc43 	bl	800da14 <llhwc_phy_is_phy_driver_busy>
 800118e:	2801      	cmp	r0, #1
 8001190:	d0f9      	beq.n	8001186 <??evnt_schdlr_exec_62>

08001192 <??evnt_schdlr_exec_1>:
 8001192:	2010      	movs	r0, #16
 8001194:	f7ff f84a 	bl	800022c <bsp_debug_gpio_clear>
 8001198:	4628      	mov	r0, r5
 800119a:	b019      	add	sp, #100	; 0x64
 800119c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

080011a0 <?_2>:
	...
 80011b4:	0690 2000 0000 0000 0000 0000               ... ........

080011c0 <evnt_schdlr_init>:
 80011c0:	b538      	push	{r3, r4, r5, lr}
 80011c2:	4c49      	ldr	r4, [pc, #292]	; (80012e8 <??DataTable11>)
 80011c4:	223c      	movs	r2, #60	; 0x3c
 80011c6:	2100      	movs	r1, #0
 80011c8:	4620      	mov	r0, r4
 80011ca:	f00d fd0e 	bl	800ebea <ble_memset>
 80011ce:	2231      	movs	r2, #49	; 0x31
 80011d0:	64a2      	str	r2, [r4, #72]	; 0x48
 80011d2:	f8df 5624 	ldr.w	r5, [pc, #1572]	; 80017f8 <??DataTable15_2>
 80011d6:	6828      	ldr	r0, [r5, #0]
 80011d8:	f04f 31ff 	mov.w	r1, #4294967295	; 0xffffffff
 80011dc:	f013 f943 	bl	8014466 <os_rcrsv_mutex_wait>
 80011e0:	f010 f8bb 	bl	801135a <evnt_schdlr_multi_role_instance>
 80011e4:	2800      	cmp	r0, #0
 80011e6:	bf14      	ite	ne
 80011e8:	2101      	movne	r1, #1
 80011ea:	2100      	moveq	r1, #0
 80011ec:	6260      	str	r0, [r4, #36]	; 0x24
 80011ee:	4608      	mov	r0, r1
 80011f0:	f7fe ffee 	bl	80001d0 <bsp_assert>
 80011f4:	6a60      	ldr	r0, [r4, #36]	; 0x24
 80011f6:	6801      	ldr	r1, [r0, #0]
 80011f8:	4788      	blx	r1
 80011fa:	2200      	movs	r2, #0
 80011fc:	6022      	str	r2, [r4, #0]
 80011fe:	f20f 6201 	addw	r2, pc, #1537	; 0x601
 8001202:	2105      	movs	r1, #5
 8001204:	2000      	movs	r0, #0
 8001206:	f7ff f84b 	bl	80002a0 <emngr_handle_init>
 800120a:	f20f 4219 	addw	r2, pc, #1049	; 0x419
 800120e:	2105      	movs	r1, #5
 8001210:	2001      	movs	r0, #1
 8001212:	f7ff f845 	bl	80002a0 <emngr_handle_init>
 8001216:	f8df 0c10 	ldr.w	r0, [pc, #3088]	; 8001e28 <??DataTable21>
 800121a:	6520      	str	r0, [r4, #80]	; 0x50
 800121c:	f60f 4035 	addw	r0, pc, #3125	; 0xc35
 8001220:	f008 fca9 	bl	8009b76 <llhwc_rgstr_evnt_schdlr_cb>
 8001224:	6828      	ldr	r0, [r5, #0]
 8001226:	e8bd 4032 	ldmia.w	sp!, {r1, r4, r5, lr}
 800122a:	f013 b922 	b.w	8014472 <os_rcrsv_mutex_release>

0800122e <evnt_schdlr_reset>:
 800122e:	f04f 31ff 	mov.w	r1, #4294967295	; 0xffffffff
 8001232:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8001236:	f8df 55c0 	ldr.w	r5, [pc, #1472]	; 80017f8 <??DataTable15_2>
 800123a:	6828      	ldr	r0, [r5, #0]
 800123c:	4e2a      	ldr	r6, [pc, #168]	; (80012e8 <??DataTable11>)
 800123e:	2700      	movs	r7, #0
 8001240:	f013 f911 	bl	8014466 <os_rcrsv_mutex_wait>
 8001244:	6af0      	ldr	r0, [r6, #44]	; 0x2c
 8001246:	b120      	cbz	r0, 8001252 <??evnt_schdlr_reset_0>
 8001248:	f004 fb5f 	bl	800590a <os_timer_stop>
 800124c:	b108      	cbz	r0, 8001252 <??evnt_schdlr_reset_0>
 800124e:	271f      	movs	r7, #31
 8001250:	e01c      	b.n	800128c <??evnt_schdlr_reset_1>

08001252 <??evnt_schdlr_reset_0>:
 8001252:	6a70      	ldr	r0, [r6, #36]	; 0x24
 8001254:	f106 0438 	add.w	r4, r6, #56	; 0x38
 8001258:	6841      	ldr	r1, [r0, #4]
 800125a:	4788      	blx	r1
 800125c:	7027      	strb	r7, [r4, #0]
 800125e:	6037      	str	r7, [r6, #0]
 8001260:	e00c      	b.n	800127c <??evnt_schdlr_reset_2>

08001262 <??evnt_schdlr_reset_3>:
 8001262:	2000      	movs	r0, #0
 8001264:	f7ff f887 	bl	8000376 <emngr_get_event>
 8001268:	ea5f 0800 	movs.w	r8, r0
 800126c:	bf0c      	ite	eq
 800126e:	2000      	moveq	r0, #0
 8001270:	2001      	movne	r0, #1
 8001272:	f7fe ffad 	bl	80001d0 <bsp_assert>
 8001276:	4640      	mov	r0, r8
 8001278:	f003 ffd0 	bl	800521c <os_mem_pool_free>

0800127c <??evnt_schdlr_reset_2>:
 800127c:	2000      	movs	r0, #0
 800127e:	f7ff f8b7 	bl	80003f0 <emngr_get_handle_events>
 8001282:	2800      	cmp	r0, #0
 8001284:	d1ed      	bne.n	8001262 <??evnt_schdlr_reset_3>
 8001286:	62b0      	str	r0, [r6, #40]	; 0x28
 8001288:	2131      	movs	r1, #49	; 0x31
 800128a:	6121      	str	r1, [r4, #16]

0800128c <??evnt_schdlr_reset_1>:
 800128c:	6828      	ldr	r0, [r5, #0]
 800128e:	f013 f8f0 	bl	8014472 <os_rcrsv_mutex_release>
 8001292:	6a70      	ldr	r0, [r6, #36]	; 0x24
 8001294:	6a01      	ldr	r1, [r0, #32]
 8001296:	4788      	blx	r1
 8001298:	b918      	cbnz	r0, 80012a2 <??evnt_schdlr_reset_4>
 800129a:	6a70      	ldr	r0, [r6, #36]	; 0x24
 800129c:	6a41      	ldr	r1, [r0, #36]	; 0x24
 800129e:	4788      	blx	r1
 80012a0:	b110      	cbz	r0, 80012a8 <??evnt_schdlr_reset_5>

080012a2 <??evnt_schdlr_reset_4>:
 80012a2:	f7ff f9cc 	bl	800063e <evnt_schdlr_hndl_next_evnt>
 80012a6:	e002      	b.n	80012ae <??evnt_schdlr_reset_6>

080012a8 <??evnt_schdlr_reset_5>:
 80012a8:	2001      	movs	r0, #1
 80012aa:	f00c fa27 	bl	800d6fc <llhwc_cmn_evnt_notify>

080012ae <??evnt_schdlr_reset_6>:
 80012ae:	4638      	mov	r0, r7
 80012b0:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

080012b4 <evnt_schdlr_destroy>:
 80012b4:	b538      	push	{r3, r4, r5, lr}
 80012b6:	f8df 4540 	ldr.w	r4, [pc, #1344]	; 80017f8 <??DataTable15_2>
 80012ba:	6820      	ldr	r0, [r4, #0]
 80012bc:	f04f 31ff 	mov.w	r1, #4294967295	; 0xffffffff
 80012c0:	f013 f8d1 	bl	8014466 <os_rcrsv_mutex_wait>
 80012c4:	f7ff ffb3 	bl	800122e <evnt_schdlr_reset>
 80012c8:	4605      	mov	r5, r0
 80012ca:	6820      	ldr	r0, [r4, #0]
 80012cc:	f013 f8d1 	bl	8014472 <os_rcrsv_mutex_release>
 80012d0:	4628      	mov	r0, r5
 80012d2:	bd32      	pop	{r1, r4, r5, pc}

080012d4 <evnt_schdlr_events_count>:
 80012d4:	b510      	push	{r4, lr}
 80012d6:	f8df 4ca4 	ldr.w	r4, [pc, #3236]	; 8001f7c <??DataTable22>
 80012da:	6820      	ldr	r0, [r4, #0]
 80012dc:	6a02      	ldr	r2, [r0, #32]
 80012de:	4790      	blx	r2
 80012e0:	7d21      	ldrb	r1, [r4, #20]
 80012e2:	1a40      	subs	r0, r0, r1
 80012e4:	b2c0      	uxtb	r0, r0
 80012e6:	bd10      	pop	{r4, pc}

080012e8 <??DataTable11>:
 80012e8:	0000 2000                                   ... 

080012ec <??DataTable11_1>:
 80012ec:	50dd 0801                                   .P..

080012f0 <??DataTable11_2>:
 80012f0:	0640 2000                                   @.. 

080012f4 <??DataTable11_3>:
 80012f4:	6e98 8312                                   .n..

080012f8 <evnt_schdlr_rgstr_evnt>:
 80012f8:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80012fc:	4680      	mov	r8, r0
 80012fe:	4689      	mov	r9, r1
 8001300:	4614      	mov	r4, r2
 8001302:	461d      	mov	r5, r3
 8001304:	200c      	movs	r0, #12
 8001306:	f7fe ff8f 	bl	8000228 <bsp_debug_gpio_set>
 800130a:	f001 f8b3 	bl	8002474 <evnt_schdlr_alloc_evnt>
 800130e:	0006      	movs	r6, r0
 8001310:	bf14      	ite	ne
 8001312:	2001      	movne	r0, #1
 8001314:	2000      	moveq	r0, #0
 8001316:	f7fe ff5b 	bl	80001d0 <bsp_assert>
 800131a:	f1b9 0f00 	cmp.w	r9, #0
 800131e:	bf08      	it	eq
 8001320:	f1b8 4f00 	cmpeq.w	r8, #2147483648	; 0x80000000
 8001324:	d104      	bne.n	8001330 <??evnt_schdlr_rgstr_evnt_0>
 8001326:	2001      	movs	r0, #1
 8001328:	f04f 4880 	mov.w	r8, #1073741824	; 0x40000000
 800132c:	f886 0046 	strb.w	r0, [r6, #70]	; 0x46

08001330 <??evnt_schdlr_rgstr_evnt_0>:
 8001330:	990a      	ldr	r1, [sp, #40]	; 0x28
 8001332:	9f08      	ldr	r7, [sp, #32]
 8001334:	4628      	mov	r0, r5
 8001336:	f106 0a90 	add.w	sl, r6, #144	; 0x90
 800133a:	e9ca 8900 	strd	r8, r9, [sl]
 800133e:	f106 0564 	add.w	r5, r6, #100	; 0x64
 8001342:	60ec      	str	r4, [r5, #12]
 8001344:	2200      	movs	r2, #0
 8001346:	f88a 2008 	strb.w	r2, [sl, #8]
 800134a:	6028      	str	r0, [r5, #0]
 800134c:	6069      	str	r1, [r5, #4]
 800134e:	60af      	str	r7, [r5, #8]
 8001350:	f008 4080 	and.w	r0, r8, #1073741824	; 0x40000000
 8001354:	f019 0101 	ands.w	r1, r9, #1
 8001358:	bf08      	it	eq
 800135a:	2800      	cmpeq	r0, #0
 800135c:	d038      	beq.n	80013d0 <??evnt_schdlr_rgstr_evnt_1>
 800135e:	6a20      	ldr	r0, [r4, #32]
 8001360:	f8df 3ca0 	ldr.w	r3, [pc, #3232]	; 8002004 <??DataTable23>
 8001364:	0080      	lsls	r0, r0, #2
 8001366:	fba0 3203 	umull	r3, r2, r0, r3
 800136a:	0992      	lsrs	r2, r2, #6
 800136c:	60b2      	str	r2, [r6, #8]
 800136e:	e9d4 0102 	ldrd	r0, r1, [r4, #8]
 8001372:	f00b fe01 	bl	800cf78 <US_TO_SLP_TMR_PROTECTED>
 8001376:	60f0      	str	r0, [r6, #12]
 8001378:	e9d4 0104 	ldrd	r0, r1, [r4, #16]
 800137c:	f00b fdfc 	bl	800cf78 <US_TO_SLP_TMR_PROTECTED>
 8001380:	6130      	str	r0, [r6, #16]
 8001382:	69a0      	ldr	r0, [r4, #24]
 8001384:	f8df 2c7c 	ldr.w	r2, [pc, #3196]	; 8002004 <??DataTable23>
 8001388:	0080      	lsls	r0, r0, #2
 800138a:	fba0 2102 	umull	r2, r1, r0, r2
 800138e:	0989      	lsrs	r1, r1, #6
 8001390:	6171      	str	r1, [r6, #20]
 8001392:	69e0      	ldr	r0, [r4, #28]
 8001394:	f8df 2c6c 	ldr.w	r2, [pc, #3180]	; 8002004 <??DataTable23>
 8001398:	0080      	lsls	r0, r0, #2
 800139a:	fba0 2102 	umull	r2, r1, r0, r2
 800139e:	0989      	lsrs	r1, r1, #6
 80013a0:	61b1      	str	r1, [r6, #24]
 80013a2:	e9d4 0100 	ldrd	r0, r1, [r4]
 80013a6:	f00b fde7 	bl	800cf78 <US_TO_SLP_TMR_PROTECTED>
 80013aa:	61f0      	str	r0, [r6, #28]
 80013ac:	f104 0024 	add.w	r0, r4, #36	; 0x24
 80013b0:	68c2      	ldr	r2, [r0, #12]
 80013b2:	f106 0124 	add.w	r1, r6, #36	; 0x24
 80013b6:	608a      	str	r2, [r1, #8]
 80013b8:	7843      	ldrb	r3, [r0, #1]
 80013ba:	f886 3021 	strb.w	r3, [r6, #33]	; 0x21
 80013be:	6842      	ldr	r2, [r0, #4]
 80013c0:	600a      	str	r2, [r1, #0]
 80013c2:	7803      	ldrb	r3, [r0, #0]
 80013c4:	f886 3020 	strb.w	r3, [r6, #32]
 80013c8:	6882      	ldr	r2, [r0, #8]
 80013ca:	604a      	str	r2, [r1, #4]
 80013cc:	6900      	ldr	r0, [r0, #16]
 80013ce:	60c8      	str	r0, [r1, #12]

080013d0 <??evnt_schdlr_rgstr_evnt_1>:
 80013d0:	f418 7fc0 	tst.w	r8, #384	; 0x180
 80013d4:	d005      	beq.n	80013e2 <??evnt_schdlr_rgstr_evnt_2>
 80013d6:	2000      	movs	r0, #0
 80013d8:	2101      	movs	r1, #1
 80013da:	7670      	strb	r0, [r6, #25]
 80013dc:	60f0      	str	r0, [r6, #12]
 80013de:	6130      	str	r0, [r6, #16]
 80013e0:	7531      	strb	r1, [r6, #20]

080013e2 <??evnt_schdlr_rgstr_evnt_2>:
 80013e2:	2000      	movs	r0, #0
 80013e4:	6168      	str	r0, [r5, #20]
 80013e6:	61a8      	str	r0, [r5, #24]
 80013e8:	2201      	movs	r2, #1
 80013ea:	772a      	strb	r2, [r5, #28]
 80013ec:	e9da 0100 	ldrd	r0, r1, [sl]
 80013f0:	f8df 4cd8 	ldr.w	r4, [pc, #3288]	; 80020cc <??DataTable24>
 80013f4:	2900      	cmp	r1, #0
 80013f6:	bf08      	it	eq
 80013f8:	2802      	cmpeq	r0, #2
 80013fa:	d106      	bne.n	800140a <??evnt_schdlr_rgstr_evnt_3>
 80013fc:	68e8      	ldr	r0, [r5, #12]
 80013fe:	f890 1021 	ldrb.w	r1, [r0, #33]	; 0x21
 8001402:	2901      	cmp	r1, #1
 8001404:	bf04      	itt	eq
 8001406:	2000      	moveq	r0, #0
 8001408:	6020      	streq	r0, [r4, #0]

0800140a <??evnt_schdlr_rgstr_evnt_3>:
 800140a:	6a61      	ldr	r1, [r4, #36]	; 0x24
 800140c:	4630      	mov	r0, r6
 800140e:	698a      	ldr	r2, [r1, #24]
 8001410:	4790      	blx	r2
 8001412:	b150      	cbz	r0, 800142a <??evnt_schdlr_rgstr_evnt_4>
 8001414:	2000      	movs	r0, #0
 8001416:	2101      	movs	r1, #1
 8001418:	4589      	cmp	r9, r1
 800141a:	bf04      	itt	eq
 800141c:	4580      	cmpeq	r8, r0
 800141e:	2600      	moveq	r6, #0
 8001420:	d049      	beq.n	80014b6 <??evnt_schdlr_rgstr_evnt_5>
 8001422:	4630      	mov	r0, r6
 8001424:	f001 f833 	bl	800248e <evnt_schdlr_free_evnt>
 8001428:	e04f      	b.n	80014ca <??evnt_schdlr_rgstr_evnt_6>

0800142a <??evnt_schdlr_rgstr_evnt_4>:
 800142a:	6a60      	ldr	r0, [r4, #36]	; 0x24
 800142c:	6a01      	ldr	r1, [r0, #32]
 800142e:	4788      	blx	r1
 8001430:	4605      	mov	r5, r0
 8001432:	6a60      	ldr	r0, [r4, #36]	; 0x24
 8001434:	6a41      	ldr	r1, [r0, #36]	; 0x24
 8001436:	4788      	blx	r1
 8001438:	1945      	adds	r5, r0, r5
 800143a:	2d01      	cmp	r5, #1
 800143c:	bf04      	itt	eq
 800143e:	6ae0      	ldreq	r0, [r4, #44]	; 0x2c
 8001440:	2800      	cmpeq	r0, #0
 8001442:	d10e      	bne.n	8001462 <??evnt_schdlr_rgstr_evnt_7>
 8001444:	2200      	movs	r2, #0
 8001446:	2100      	movs	r1, #0
 8001448:	f8df 0c84 	ldr.w	r0, [pc, #3204]	; 80020d0 <??DataTable24_1>
 800144c:	f004 f981 	bl	8005752 <os_timer_create>
 8001450:	62e0      	str	r0, [r4, #44]	; 0x2c
 8001452:	2101      	movs	r1, #1
 8001454:	f004 f9be 	bl	80057d4 <os_timer_set_prio>
 8001458:	6ae0      	ldr	r0, [r4, #44]	; 0x2c
 800145a:	b100      	cbz	r0, 800145e <??evnt_schdlr_rgstr_evnt_8>
 800145c:	2001      	movs	r0, #1

0800145e <??evnt_schdlr_rgstr_evnt_8>:
 800145e:	f7fe feb7 	bl	80001d0 <bsp_assert>

08001462 <??evnt_schdlr_rgstr_evnt_7>:
 8001462:	6a60      	ldr	r0, [r4, #36]	; 0x24
 8001464:	6a01      	ldr	r1, [r0, #32]
 8001466:	4788      	blx	r1
 8001468:	2801      	cmp	r0, #1
 800146a:	bf08      	it	eq
 800146c:	f00b fdb4 	bleq	800cfd8 <llhwc_cmn_set_controller_activity>
 8001470:	e9da 0100 	ldrd	r0, r1, [sl]
 8001474:	f010 5f38 	tst.w	r0, #771751936	; 0x2e000000
 8001478:	d117      	bne.n	80014aa <??evnt_schdlr_rgstr_evnt_9>
 800147a:	2300      	movs	r3, #0
 800147c:	f04f 4280 	mov.w	r2, #1073741824	; 0x40000000
 8001480:	4299      	cmp	r1, r3
 8001482:	bf08      	it	eq
 8001484:	4290      	cmpeq	r0, r2
 8001486:	d104      	bne.n	8001492 <??evnt_schdlr_rgstr_evnt_10>
 8001488:	f896 0046 	ldrb.w	r0, [r6, #70]	; 0x46
 800148c:	2801      	cmp	r0, #1
 800148e:	d10a      	bne.n	80014a6 <??evnt_schdlr_rgstr_evnt_11>
 8001490:	e00b      	b.n	80014aa <??evnt_schdlr_rgstr_evnt_9>

08001492 <??evnt_schdlr_rgstr_evnt_10>:
 8001492:	2900      	cmp	r1, #0
 8001494:	bf08      	it	eq
 8001496:	f5b0 2f00 	cmpeq.w	r0, #524288	; 0x80000
 800149a:	d104      	bne.n	80014a6 <??evnt_schdlr_rgstr_evnt_11>
 800149c:	6a60      	ldr	r0, [r4, #36]	; 0x24
 800149e:	6a01      	ldr	r1, [r0, #32]
 80014a0:	4788      	blx	r1
 80014a2:	2801      	cmp	r0, #1
 80014a4:	d001      	beq.n	80014aa <??evnt_schdlr_rgstr_evnt_9>

080014a6 <??evnt_schdlr_rgstr_evnt_11>:
 80014a6:	f7ff f8ca 	bl	800063e <evnt_schdlr_hndl_next_evnt>

080014aa <??evnt_schdlr_rgstr_evnt_9>:
 80014aa:	2000      	movs	r0, #0
 80014ac:	2101      	movs	r1, #1
 80014ae:	4589      	cmp	r9, r1
 80014b0:	bf08      	it	eq
 80014b2:	4580      	cmpeq	r8, r0
 80014b4:	d103      	bne.n	80014be <??evnt_schdlr_rgstr_evnt_12>

080014b6 <??evnt_schdlr_rgstr_evnt_5>:
 80014b6:	4630      	mov	r0, r6
 80014b8:	f00f f9cb 	bl	8010852 <evnt_schdlr_check_if_evnt_exist>
 80014bc:	4606      	mov	r6, r0

080014be <??evnt_schdlr_rgstr_evnt_12>:
 80014be:	2e00      	cmp	r6, #0
 80014c0:	bf18      	it	ne
 80014c2:	2f00      	cmpne	r7, #0
 80014c4:	d002      	beq.n	80014cc <??evnt_schdlr_rgstr_evnt_13>
 80014c6:	6ef0      	ldr	r0, [r6, #108]	; 0x6c
 80014c8:	b900      	cbnz	r0, 80014cc <??evnt_schdlr_rgstr_evnt_13>

080014ca <??evnt_schdlr_rgstr_evnt_6>:
 80014ca:	2600      	movs	r6, #0

080014cc <??evnt_schdlr_rgstr_evnt_13>:
 80014cc:	200c      	movs	r0, #12
 80014ce:	f7fe fead 	bl	800022c <bsp_debug_gpio_clear>
 80014d2:	4630      	mov	r0, r6
 80014d4:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}

080014d8 <??DataTable12>:
 80014d8:	0840 2000                                   @.. 

080014dc <??DataTable12_1>:
 80014dc:	0884 2000                                   ... 

080014e0 <evnt_schdlr_dont_schedule_evnt>:
 80014e0:	b510      	push	{r4, lr}
 80014e2:	4604      	mov	r4, r0
 80014e4:	f012 ffb7 	bl	8014456 <os_disable_isr>
 80014e8:	2004      	movs	r0, #4
 80014ea:	f884 0098 	strb.w	r0, [r4, #152]	; 0x98
 80014ee:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80014f2:	f012 bfb2 	b.w	801445a <os_enable_isr>

080014f6 <evnt_schdlr_unrgstr_evnt>:
 80014f6:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80014fa:	4604      	mov	r4, r0
 80014fc:	200f      	movs	r0, #15
 80014fe:	f7fe fe93 	bl	8000228 <bsp_debug_gpio_set>
 8001502:	2c00      	cmp	r4, #0
 8001504:	bf14      	ite	ne
 8001506:	2001      	movne	r0, #1
 8001508:	2000      	moveq	r0, #0
 800150a:	f7fe fe61 	bl	80001d0 <bsp_assert>
 800150e:	f104 0590 	add.w	r5, r4, #144	; 0x90
 8001512:	2004      	movs	r0, #4
 8001514:	7228      	strb	r0, [r5, #8]
 8001516:	f8df 7bb4 	ldr.w	r7, [pc, #2996]	; 80020cc <??DataTable24>
 800151a:	6af8      	ldr	r0, [r7, #44]	; 0x2c
 800151c:	b120      	cbz	r0, 8001528 <??evnt_schdlr_unrgstr_evnt_0>
 800151e:	f004 f9f4 	bl	800590a <os_timer_stop>
 8001522:	b108      	cbz	r0, 8001528 <??evnt_schdlr_unrgstr_evnt_0>
 8001524:	251f      	movs	r5, #31
 8001526:	e059      	b.n	80015dc <??evnt_schdlr_unrgstr_evnt_1>

08001528 <??evnt_schdlr_unrgstr_evnt_0>:
 8001528:	e9d5 6800 	ldrd	r6, r8, [r5]
 800152c:	f006 4080 	and.w	r0, r6, #1073741824	; 0x40000000
 8001530:	f018 0101 	ands.w	r1, r8, #1
 8001534:	bf08      	it	eq
 8001536:	2800      	cmpeq	r0, #0
 8001538:	d006      	beq.n	8001548 <??evnt_schdlr_unrgstr_evnt_2>
 800153a:	6ab8      	ldr	r0, [r7, #40]	; 0x28
 800153c:	4284      	cmp	r4, r0
 800153e:	d103      	bne.n	8001548 <??evnt_schdlr_unrgstr_evnt_2>
 8001540:	2100      	movs	r1, #0
 8001542:	62b9      	str	r1, [r7, #40]	; 0x28
 8001544:	f884 108b 	strb.w	r1, [r4, #139]	; 0x8b

08001548 <??evnt_schdlr_unrgstr_evnt_2>:
 8001548:	f012 ff85 	bl	8014456 <os_disable_isr>
 800154c:	6ab8      	ldr	r0, [r7, #40]	; 0x28
 800154e:	42a0      	cmp	r0, r4
 8001550:	bf04      	itt	eq
 8001552:	f894 108b 	ldrbeq.w	r1, [r4, #139]	; 0x8b
 8001556:	2901      	cmpeq	r1, #1
 8001558:	d11b      	bne.n	8001592 <??evnt_schdlr_unrgstr_evnt_3>
 800155a:	2204      	movs	r2, #4
 800155c:	f880 2098 	strb.w	r2, [r0, #152]	; 0x98
 8001560:	f107 0038 	add.w	r0, r7, #56	; 0x38
 8001564:	7801      	ldrb	r1, [r0, #0]
 8001566:	1c49      	adds	r1, r1, #1
 8001568:	7001      	strb	r1, [r0, #0]
 800156a:	f016 0f70 	tst.w	r6, #112	; 0x70
 800156e:	bf18      	it	ne
 8001570:	f009 f91a 	blne	800a7a8 <llhwc_stop_scan>
 8001574:	f012 ff71 	bl	801445a <os_enable_isr>

08001578 <??evnt_schdlr_unrgstr_evnt_4>:
 8001578:	f894 008b 	ldrb.w	r0, [r4, #139]	; 0x8b
 800157c:	2801      	cmp	r0, #1
 800157e:	d10a      	bne.n	8001596 <??evnt_schdlr_unrgstr_evnt_5>
 8001580:	2000      	movs	r0, #0
 8001582:	f7fe ff35 	bl	80003f0 <emngr_get_handle_events>
 8001586:	2800      	cmp	r0, #0
 8001588:	d0f6      	beq.n	8001578 <??evnt_schdlr_unrgstr_evnt_4>
 800158a:	2000      	movs	r0, #0
 800158c:	f7fe ff73 	bl	8000476 <emngr_handle_event>
 8001590:	e7f2      	b.n	8001578 <??evnt_schdlr_unrgstr_evnt_4>

08001592 <??evnt_schdlr_unrgstr_evnt_3>:
 8001592:	f012 ff62 	bl	801445a <os_enable_isr>

08001596 <??evnt_schdlr_unrgstr_evnt_5>:
 8001596:	f012 ff5e 	bl	8014456 <os_disable_isr>
 800159a:	6a79      	ldr	r1, [r7, #36]	; 0x24
 800159c:	4620      	mov	r0, r4
 800159e:	69ca      	ldr	r2, [r1, #28]
 80015a0:	4790      	blx	r2
 80015a2:	0005      	movs	r5, r0
 80015a4:	d11a      	bne.n	80015dc <??evnt_schdlr_unrgstr_evnt_1>
 80015a6:	4620      	mov	r0, r4
 80015a8:	f000 ff71 	bl	800248e <evnt_schdlr_free_evnt>
 80015ac:	f012 ff55 	bl	801445a <os_enable_isr>
 80015b0:	6a78      	ldr	r0, [r7, #36]	; 0x24
 80015b2:	6a01      	ldr	r1, [r0, #32]
 80015b4:	4788      	blx	r1
 80015b6:	b948      	cbnz	r0, 80015cc <??evnt_schdlr_unrgstr_evnt_6>
 80015b8:	6a78      	ldr	r0, [r7, #36]	; 0x24
 80015ba:	6a41      	ldr	r1, [r0, #36]	; 0x24
 80015bc:	4788      	blx	r1
 80015be:	b928      	cbnz	r0, 80015cc <??evnt_schdlr_unrgstr_evnt_6>
 80015c0:	f107 002c 	add.w	r0, r7, #44	; 0x2c
 80015c4:	f004 fa13 	bl	80059ee <os_timer_stop_free>
 80015c8:	0005      	movs	r5, r0
 80015ca:	d107      	bne.n	80015dc <??evnt_schdlr_unrgstr_evnt_1>

080015cc <??evnt_schdlr_unrgstr_evnt_6>:
 80015cc:	6a78      	ldr	r0, [r7, #36]	; 0x24
 80015ce:	6a01      	ldr	r1, [r0, #32]
 80015d0:	4788      	blx	r1
 80015d2:	2801      	cmp	r0, #1
 80015d4:	bf04      	itt	eq
 80015d6:	2000      	moveq	r0, #0
 80015d8:	f00b fcfe 	bleq	800cfd8 <llhwc_cmn_set_controller_activity>

080015dc <??evnt_schdlr_unrgstr_evnt_1>:
 80015dc:	6a78      	ldr	r0, [r7, #36]	; 0x24
 80015de:	6a01      	ldr	r1, [r0, #32]
 80015e0:	4788      	blx	r1
 80015e2:	b918      	cbnz	r0, 80015ec <??evnt_schdlr_unrgstr_evnt_7>
 80015e4:	6a78      	ldr	r0, [r7, #36]	; 0x24
 80015e6:	6a41      	ldr	r1, [r0, #36]	; 0x24
 80015e8:	4788      	blx	r1
 80015ea:	b108      	cbz	r0, 80015f0 <??evnt_schdlr_unrgstr_evnt_8>

080015ec <??evnt_schdlr_unrgstr_evnt_7>:
 80015ec:	f7ff f827 	bl	800063e <evnt_schdlr_hndl_next_evnt>

080015f0 <??evnt_schdlr_unrgstr_evnt_8>:
 80015f0:	6a78      	ldr	r0, [r7, #36]	; 0x24
 80015f2:	b170      	cbz	r0, 8001612 <??evnt_schdlr_unrgstr_evnt_9>
 80015f4:	6a00      	ldr	r0, [r0, #32]
 80015f6:	4780      	blx	r0
 80015f8:	b958      	cbnz	r0, 8001612 <??evnt_schdlr_unrgstr_evnt_9>
 80015fa:	f107 0038 	add.w	r0, r7, #56	; 0x38
 80015fe:	6942      	ldr	r2, [r0, #20]
 8001600:	b13a      	cbz	r2, 8001612 <??evnt_schdlr_unrgstr_evnt_9>
 8001602:	f8df 0cc0 	ldr.w	r0, [pc, #3264]	; 80022c4 <??DataTable33>
 8001606:	7801      	ldrb	r1, [r0, #0]
 8001608:	07cb      	lsls	r3, r1, #31
 800160a:	d502      	bpl.n	8001612 <??evnt_schdlr_unrgstr_evnt_9>
 800160c:	2100      	movs	r1, #0
 800160e:	2000      	movs	r0, #0
 8001610:	4790      	blx	r2

08001612 <??evnt_schdlr_unrgstr_evnt_9>:
 8001612:	200f      	movs	r0, #15
 8001614:	f7fe fe0a 	bl	800022c <bsp_debug_gpio_clear>
 8001618:	4628      	mov	r0, r5
 800161a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
	...

08001620 <??DataTable13>:
 8001620:	088d 0800                                   ....

08001624 <evnt_schdlr_prdc_clbr_evnt_clbk>:
 8001624:	e92d 41fc 	stmdb	sp!, {r2, r3, r4, r5, r6, r7, r8, lr}
 8001628:	4604      	mov	r4, r0
 800162a:	2600      	movs	r6, #0
 800162c:	b104      	cbz	r4, 8001630 <??evnt_schdlr_prdc_clbr_evnt_clbk_0>
 800162e:	2001      	movs	r0, #1

08001630 <??evnt_schdlr_prdc_clbr_evnt_clbk_0>:
 8001630:	f7fe fdce 	bl	80001d0 <bsp_assert>
 8001634:	f012 ff0f 	bl	8014456 <os_disable_isr>
 8001638:	f8df 5a90 	ldr.w	r5, [pc, #2704]	; 80020cc <??DataTable24>
 800163c:	6aa8      	ldr	r0, [r5, #40]	; 0x28
 800163e:	2800      	cmp	r0, #0
 8001640:	bf18      	it	ne
 8001642:	4284      	cmpne	r4, r0
 8001644:	d12d      	bne.n	80016a2 <??evnt_schdlr_prdc_clbr_evnt_clbk_1>
 8001646:	f104 0845 	add.w	r8, r4, #69	; 0x45
 800164a:	f898 0000 	ldrb.w	r0, [r8]
 800164e:	2801      	cmp	r0, #1
 8001650:	d01b      	beq.n	800168a <??evnt_schdlr_prdc_clbr_evnt_clbk_2>
 8001652:	6a68      	ldr	r0, [r5, #36]	; 0x24
 8001654:	6881      	ldr	r1, [r0, #8]
 8001656:	4788      	blx	r1
 8001658:	b318      	cbz	r0, 80016a2 <??evnt_schdlr_prdc_clbr_evnt_clbk_1>
 800165a:	6d00      	ldr	r0, [r0, #80]	; 0x50
 800165c:	6caf      	ldr	r7, [r5, #72]	; 0x48
 800165e:	1bc7      	subs	r7, r0, r7
 8001660:	4668      	mov	r0, sp
 8001662:	f00a fd1a 	bl	800c09a <llhwc_slptmr_get>
 8001666:	9800      	ldr	r0, [sp, #0]
 8001668:	42b8      	cmp	r0, r7
 800166a:	d21a      	bcs.n	80016a2 <??evnt_schdlr_prdc_clbr_evnt_clbk_1>
 800166c:	370f      	adds	r7, #15
 800166e:	1a3f      	subs	r7, r7, r0
 8001670:	ebc7 1647 	rsb	r6, r7, r7, lsl #5
 8001674:	6ba1      	ldr	r1, [r4, #56]	; 0x38
 8001676:	f898 0003 	ldrb.w	r0, [r8, #3]
 800167a:	eb06 0697 	add.w	r6, r6, r7, lsr #2
 800167e:	4341      	muls	r1, r0
 8001680:	428e      	cmp	r6, r1
 8001682:	bf24      	itt	cs
 8001684:	6b61      	ldrcs	r1, [r4, #52]	; 0x34
 8001686:	428e      	cmpcs	r6, r1
 8001688:	d30b      	bcc.n	80016a2 <??evnt_schdlr_prdc_clbr_evnt_clbk_1>

0800168a <??evnt_schdlr_prdc_clbr_evnt_clbk_2>:
 800168a:	62ac      	str	r4, [r5, #40]	; 0x28
 800168c:	2001      	movs	r0, #1
 800168e:	f884 008b 	strb.w	r0, [r4, #139]	; 0x8b
 8001692:	6426      	str	r6, [r4, #64]	; 0x40
 8001694:	f012 fee1 	bl	801445a <os_enable_isr>
 8001698:	4620      	mov	r0, r4
 800169a:	f000 f80d 	bl	80016b8 <evnt_schdlr_prdc_clbr_exec>
 800169e:	e8bd 81f3 	ldmia.w	sp!, {r0, r1, r4, r5, r6, r7, r8, pc}

080016a2 <??evnt_schdlr_prdc_clbr_evnt_clbk_1>:
 80016a2:	f012 feda 	bl	801445a <os_enable_isr>
 80016a6:	e8bd 81f3 	ldmia.w	sp!, {r0, r1, r4, r5, r6, r7, r8, pc}
	...

080016ac <??DataTable14>:
 80016ac:	0929 0800                                   )...

080016b0 <??DataTable14_1>:
 80016b0:	0001 2000                                   ... 

080016b4 <??DataTable14_2>:
 80016b4:	0648 2000                                   H.. 

080016b8 <evnt_schdlr_prdc_clbr_exec>:
 80016b8:	b5fe      	push	{r1, r2, r3, r4, r5, r6, r7, lr}
 80016ba:	4605      	mov	r5, r0
 80016bc:	f00c fa7d 	bl	800dbba <llhwc_phy_get_num_of_prdc_clbr_chnls>
 80016c0:	4606      	mov	r6, r0
 80016c2:	6c2c      	ldr	r4, [r5, #64]	; 0x40
 80016c4:	2208      	movs	r2, #8
 80016c6:	2100      	movs	r1, #0
 80016c8:	4668      	mov	r0, sp
 80016ca:	f02f fc70 	bl	8030fae <memset>
 80016ce:	202f      	movs	r0, #47	; 0x2f
 80016d0:	f7fe fdaa 	bl	8000228 <bsp_debug_gpio_set>
 80016d4:	2000      	movs	r0, #0
 80016d6:	f00c f811 	bl	800d6fc <llhwc_cmn_evnt_notify>
 80016da:	2d00      	cmp	r5, #0
 80016dc:	bf14      	ite	ne
 80016de:	2001      	movne	r0, #1
 80016e0:	2000      	moveq	r0, #0
 80016e2:	f7fe fd75 	bl	80001d0 <bsp_assert>
 80016e6:	f105 0745 	add.w	r7, r5, #69	; 0x45
 80016ea:	b154      	cbz	r4, 8001702 <??evnt_schdlr_prdc_clbr_exec_0>
 80016ec:	6ba9      	ldr	r1, [r5, #56]	; 0x38
 80016ee:	78f8      	ldrb	r0, [r7, #3]
 80016f0:	4341      	muls	r1, r0
 80016f2:	428c      	cmp	r4, r1
 80016f4:	d307      	bcc.n	8001706 <??evnt_schdlr_prdc_clbr_exec_1>
 80016f6:	6b69      	ldr	r1, [r5, #52]	; 0x34
 80016f8:	428c      	cmp	r4, r1
 80016fa:	4180      	sbcs	r0, r0
 80016fc:	43c0      	mvns	r0, r0
 80016fe:	0fc0      	lsrs	r0, r0, #31
 8001700:	e002      	b.n	8001708 <??evnt_schdlr_prdc_clbr_exec_2>

08001702 <??evnt_schdlr_prdc_clbr_exec_0>:
 8001702:	2001      	movs	r0, #1
 8001704:	e000      	b.n	8001708 <??evnt_schdlr_prdc_clbr_exec_2>

08001706 <??evnt_schdlr_prdc_clbr_exec_1>:
 8001706:	2000      	movs	r0, #0

08001708 <??evnt_schdlr_prdc_clbr_exec_2>:
 8001708:	f7fe fd62 	bl	80001d0 <bsp_assert>
 800170c:	6b69      	ldr	r1, [r5, #52]	; 0x34
 800170e:	6be8      	ldr	r0, [r5, #60]	; 0x3c
 8001710:	1841      	adds	r1, r0, r1
 8001712:	1e48      	subs	r0, r1, #1
 8001714:	4180      	sbcs	r0, r0
 8001716:	43c0      	mvns	r0, r0
 8001718:	0fc0      	lsrs	r0, r0, #31
 800171a:	f7fe fd59 	bl	80001d0 <bsp_assert>
 800171e:	78f8      	ldrb	r0, [r7, #3]
 8001720:	2801      	cmp	r0, #1
 8001722:	bf04      	itt	eq
 8001724:	f8df 0c1c 	ldreq.w	r0, [pc, #3100]	; 8002344 <??DataTable36>
 8001728:	f00a fcb7 	bleq	800c09a <llhwc_slptmr_get>
 800172c:	b174      	cbz	r4, 800174c <??evnt_schdlr_prdc_clbr_exec_3>
 800172e:	78f8      	ldrb	r0, [r7, #3]
 8001730:	2801      	cmp	r0, #1
 8001732:	bf07      	ittee	eq
 8001734:	6ba9      	ldreq	r1, [r5, #56]	; 0x38
 8001736:	1a64      	subeq	r4, r4, r1
 8001738:	6be8      	ldrne	r0, [r5, #60]	; 0x3c
 800173a:	1a24      	subne	r4, r4, r0
 800173c:	6b69      	ldr	r1, [r5, #52]	; 0x34
 800173e:	4632      	mov	r2, r6
 8001740:	fbb4 f0f1 	udiv	r0, r4, r1
 8001744:	4286      	cmp	r6, r0
 8001746:	d902      	bls.n	800174e <??evnt_schdlr_prdc_clbr_exec_4>
 8001748:	4602      	mov	r2, r0
 800174a:	e000      	b.n	800174e <??evnt_schdlr_prdc_clbr_exec_4>

0800174c <??evnt_schdlr_prdc_clbr_exec_3>:
 800174c:	4632      	mov	r2, r6

0800174e <??evnt_schdlr_prdc_clbr_exec_4>:
 800174e:	b2d2      	uxtb	r2, r2
 8001750:	f105 0147 	add.w	r1, r5, #71	; 0x47
 8001754:	f105 0048 	add.w	r0, r5, #72	; 0x48
 8001758:	f00a fa43 	bl	800bbe2 <llhwc_prdc_clbr_exec>
 800175c:	78b8      	ldrb	r0, [r7, #2]
 800175e:	4286      	cmp	r6, r0
 8001760:	bfac      	ite	ge
 8001762:	2001      	movge	r0, #1
 8001764:	2000      	movlt	r0, #0
 8001766:	f7fe fd33 	bl	80001d0 <bsp_assert>
 800176a:	78b8      	ldrb	r0, [r7, #2]
 800176c:	42b0      	cmp	r0, r6
 800176e:	d133      	bne.n	80017d8 <??evnt_schdlr_prdc_clbr_exec_5>
 8001770:	2100      	movs	r1, #0
 8001772:	2001      	movs	r0, #1
 8001774:	70b9      	strb	r1, [r7, #2]
 8001776:	70f8      	strb	r0, [r7, #3]
 8001778:	f7fe fd9c 	bl	80002b4 <emngr_handle_remove>
 800177c:	2000      	movs	r0, #0
 800177e:	7038      	strb	r0, [r7, #0]
 8001780:	f8df 0bc4 	ldr.w	r0, [pc, #3012]	; 8002348 <??DataTable36_1>
 8001784:	7881      	ldrb	r1, [r0, #2]
 8001786:	f105 0450 	add.w	r4, r5, #80	; 0x50
 800178a:	2901      	cmp	r1, #1
 800178c:	d109      	bne.n	80017a2 <??evnt_schdlr_prdc_clbr_exec_6>
 800178e:	2200      	movs	r2, #0
 8001790:	6022      	str	r2, [r4, #0]
 8001792:	6062      	str	r2, [r4, #4]
 8001794:	78c2      	ldrb	r2, [r0, #3]
 8001796:	f002 02fe 	and.w	r2, r2, #254	; 0xfe
 800179a:	f042 0202 	orr.w	r2, r2, #2
 800179e:	70c2      	strb	r2, [r0, #3]
 80017a0:	e01a      	b.n	80017d8 <??evnt_schdlr_prdc_clbr_exec_5>

080017a2 <??evnt_schdlr_prdc_clbr_exec_6>:
 80017a2:	f8df 6928 	ldr.w	r6, [pc, #2344]	; 80020cc <??DataTable24>
 80017a6:	6b71      	ldr	r1, [r6, #52]	; 0x34
 80017a8:	6bf0      	ldr	r0, [r6, #60]	; 0x3c
 80017aa:	1841      	adds	r1, r0, r1
 80017ac:	6021      	str	r1, [r4, #0]
 80017ae:	4668      	mov	r0, sp
 80017b0:	f00a fc73 	bl	800c09a <llhwc_slptmr_get>
 80017b4:	4669      	mov	r1, sp
 80017b6:	4620      	mov	r0, r4
 80017b8:	f012 ffd0 	bl	801475c <ble_time_comp>
 80017bc:	2800      	cmp	r0, #0
 80017be:	bfcc      	ite	gt
 80017c0:	2001      	movgt	r0, #1
 80017c2:	2000      	movle	r0, #0
 80017c4:	f7fe fd04 	bl	80001d0 <bsp_assert>
 80017c8:	6c30      	ldr	r0, [r6, #64]	; 0x40
 80017ca:	b128      	cbz	r0, 80017d8 <??evnt_schdlr_prdc_clbr_exec_5>
 80017cc:	6c70      	ldr	r0, [r6, #68]	; 0x44
 80017ce:	1e40      	subs	r0, r0, #1
 80017d0:	6470      	str	r0, [r6, #68]	; 0x44
 80017d2:	bf08      	it	eq
 80017d4:	f00a fa17 	bleq	800bc06 <llhwc_prdc_clbr_deinit>

080017d8 <??evnt_schdlr_prdc_clbr_exec_5>:
 80017d8:	4628      	mov	r0, r5
 80017da:	f000 fc97 	bl	800210c <evnt_schdlr_gnrc_evnt_cmplt>
 80017de:	2000      	movs	r0, #0
 80017e0:	f7fe fd28 	bl	8000234 <bsp_set_phy_clbr_state>
 80017e4:	202f      	movs	r0, #47	; 0x2f
 80017e6:	f7fe fd21 	bl	800022c <bsp_debug_gpio_clear>
 80017ea:	b003      	add	sp, #12
 80017ec:	bdf0      	pop	{r4, r5, r6, r7, pc}
	...

080017f0 <??DataTable15>:
 80017f0:	03e8 2000                                   ... 

080017f4 <??DataTable15_1>:
 80017f4:	0690 2000                                   ... 

080017f8 <??DataTable15_2>:
 80017f8:	18c0 2000                                   ... 

080017fc <??DataTable15_3>:
 80017fc:	06b0 2000                                   ... 

08001800 <evnt_schdlr_hw_evnt_cmplt>:
 8001800:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8001804:	4605      	mov	r5, r0
 8001806:	b084      	sub	sp, #16
 8001808:	2400      	movs	r4, #0
 800180a:	208c      	movs	r0, #140	; 0x8c
 800180c:	2700      	movs	r7, #0
 800180e:	46a1      	mov	r9, r4
 8001810:	46a3      	mov	fp, r4
 8001812:	f7fe fd09 	bl	8000228 <bsp_debug_gpio_set>
 8001816:	f8df 88b4 	ldr.w	r8, [pc, #2228]	; 80020cc <??DataTable24>
 800181a:	bb2d      	cbnz	r5, 8001868 <??evnt_schdlr_hw_evnt_cmplt_0>
 800181c:	f8d8 4028 	ldr.w	r4, [r8, #40]	; 0x28
 8001820:	2c00      	cmp	r4, #0
 8001822:	f000 8205 	beq.w	8001c30 <??evnt_schdlr_hw_evnt_cmplt_1>
 8001826:	f884 908b 	strb.w	r9, [r4, #139]	; 0x8b
 800182a:	2100      	movs	r1, #0
 800182c:	f8c8 1028 	str.w	r1, [r8, #40]	; 0x28
 8001830:	f104 0590 	add.w	r5, r4, #144	; 0x90
 8001834:	2002      	movs	r0, #2
 8001836:	7228      	strb	r0, [r5, #8]
 8001838:	6ee0      	ldr	r0, [r4, #108]	; 0x6c
 800183a:	6ea3      	ldr	r3, [r4, #104]	; 0x68
 800183c:	2200      	movs	r2, #0
 800183e:	f04f 7980 	mov.w	r9, #16777216	; 0x1000000
 8001842:	4798      	blx	r3
 8001844:	e9d5 0100 	ldrd	r0, r1, [r5]
 8001848:	4559      	cmp	r1, fp
 800184a:	bf08      	it	eq
 800184c:	4548      	cmpeq	r0, r9
 800184e:	d005      	beq.n	800185c <??evnt_schdlr_hw_evnt_cmplt_2>
 8001850:	f04f 7200 	mov.w	r2, #33554432	; 0x2000000
 8001854:	4559      	cmp	r1, fp
 8001856:	bf08      	it	eq
 8001858:	4290      	cmpeq	r0, r2
 800185a:	d101      	bne.n	8001860 <??evnt_schdlr_hw_evnt_cmplt_3>

0800185c <??evnt_schdlr_hw_evnt_cmplt_2>:
 800185c:	f8c4 b06c 	str.w	fp, [r4, #108]	; 0x6c

08001860 <??evnt_schdlr_hw_evnt_cmplt_3>:
 8001860:	4620      	mov	r0, r4
 8001862:	f000 faae 	bl	8001dc2 <evnt_schdlr_evnt_updtd>
 8001866:	e1df      	b.n	8001c28 <??evnt_schdlr_hw_evnt_cmplt_4>

08001868 <??evnt_schdlr_hw_evnt_cmplt_0>:
 8001868:	f8d8 0028 	ldr.w	r0, [r8, #40]	; 0x28
 800186c:	b940      	cbnz	r0, 8001880 <??evnt_schdlr_hw_evnt_cmplt_5>

0800186e <??evnt_schdlr_hw_evnt_cmplt_6>:
 800186e:	68a8      	ldr	r0, [r5, #8]
 8001870:	2800      	cmp	r0, #0
 8001872:	f000 81d5 	beq.w	8001c20 <??evnt_schdlr_hw_evnt_cmplt_7>
 8001876:	6841      	ldr	r1, [r0, #4]
 8001878:	60a9      	str	r1, [r5, #8]
 800187a:	f011 fe71 	bl	8013560 <free_buff_hdr>
 800187e:	e7f6      	b.n	800186e <??evnt_schdlr_hw_evnt_cmplt_6>

08001880 <??evnt_schdlr_hw_evnt_cmplt_5>:
 8001880:	f8df abac 	ldr.w	sl, [pc, #2988]	; 8002430 <??DataTable37>
 8001884:	f8da 0000 	ldr.w	r0, [sl]
 8001888:	f04f 31ff 	mov.w	r1, #4294967295	; 0xffffffff
 800188c:	f012 fdeb 	bl	8014466 <os_rcrsv_mutex_wait>
 8001890:	69ac      	ldr	r4, [r5, #24]
 8001892:	f8df 2ba0 	ldr.w	r2, [pc, #2976]	; 8002434 <??DataTable37_1>
 8001896:	f104 0690 	add.w	r6, r4, #144	; 0x90
 800189a:	e9d6 0100 	ldrd	r0, r1, [r6]
 800189e:	4210      	tst	r0, r2
 80018a0:	bf18      	it	ne
 80018a2:	f04f 0901 	movne.w	r9, #1
 80018a6:	7a30      	ldrb	r0, [r6, #8]
 80018a8:	2804      	cmp	r0, #4
 80018aa:	d129      	bne.n	8001900 <??evnt_schdlr_hw_evnt_cmplt_8>
 80018ac:	f1b9 0f00 	cmp.w	r9, #0
 80018b0:	bf1e      	ittt	ne
 80018b2:	f105 0021 	addne.w	r0, r5, #33	; 0x21
 80018b6:	78c1      	ldrbne	r1, [r0, #3]
 80018b8:	2901      	cmpne	r1, #1
 80018ba:	d110      	bne.n	80018de <??evnt_schdlr_hw_evnt_cmplt_9>
 80018bc:	f108 0038 	add.w	r0, r8, #56	; 0x38
 80018c0:	f104 018a 	add.w	r1, r4, #138	; 0x8a
 80018c4:	f881 b001 	strb.w	fp, [r1, #1]
 80018c8:	7801      	ldrb	r1, [r0, #0]
 80018ca:	f8c8 b028 	str.w	fp, [r8, #40]	; 0x28
 80018ce:	1e4a      	subs	r2, r1, #1
 80018d0:	7002      	strb	r2, [r0, #0]
 80018d2:	e004      	b.n	80018de <??evnt_schdlr_hw_evnt_cmplt_9>

080018d4 <??evnt_schdlr_hw_evnt_cmplt_10>:
 80018d4:	6841      	ldr	r1, [r0, #4]
 80018d6:	1c7f      	adds	r7, r7, #1
 80018d8:	60a9      	str	r1, [r5, #8]
 80018da:	f011 fe41 	bl	8013560 <free_buff_hdr>

080018de <??evnt_schdlr_hw_evnt_cmplt_9>:
 80018de:	68a8      	ldr	r0, [r5, #8]
 80018e0:	b118      	cbz	r0, 80018ea <??evnt_schdlr_hw_evnt_cmplt_11>
 80018e2:	f895 1020 	ldrb.w	r1, [r5, #32]
 80018e6:	428f      	cmp	r7, r1
 80018e8:	d3f4      	bcc.n	80018d4 <??evnt_schdlr_hw_evnt_cmplt_10>

080018ea <??evnt_schdlr_hw_evnt_cmplt_11>:
 80018ea:	f108 0138 	add.w	r1, r8, #56	; 0x38
 80018ee:	7848      	ldrb	r0, [r1, #1]
 80018f0:	b108      	cbz	r0, 80018f6 <??evnt_schdlr_hw_evnt_cmplt_12>
 80018f2:	1e40      	subs	r0, r0, #1
 80018f4:	7048      	strb	r0, [r1, #1]

080018f6 <??evnt_schdlr_hw_evnt_cmplt_12>:
 80018f6:	f8da 0000 	ldr.w	r0, [sl]
 80018fa:	f012 fdba 	bl	8014472 <os_rcrsv_mutex_release>
 80018fe:	e18f      	b.n	8001c20 <??evnt_schdlr_hw_evnt_cmplt_7>

08001900 <??evnt_schdlr_hw_evnt_cmplt_8>:
 8001900:	f105 0022 	add.w	r0, r5, #34	; 0x22
 8001904:	f014 fcff 	bl	8016306 <db_calc_rssi_compensated_value>
 8001908:	f105 0023 	add.w	r0, r5, #35	; 0x23
 800190c:	f014 fcfb 	bl	8016306 <db_calc_rssi_compensated_value>
 8001910:	f105 0021 	add.w	r0, r5, #33	; 0x21
 8001914:	78c1      	ldrb	r1, [r0, #3]
 8001916:	2901      	cmp	r1, #1
 8001918:	d00e      	beq.n	8001938 <??evnt_schdlr_hw_evnt_cmplt_13>
 800191a:	e9d6 0100 	ldrd	r0, r1, [r6]
 800191e:	f410 7fc0 	tst.w	r0, #384	; 0x180
 8001922:	d109      	bne.n	8001938 <??evnt_schdlr_hw_evnt_cmplt_13>
 8001924:	2900      	cmp	r1, #0
 8001926:	bf08      	it	eq
 8001928:	f5b0 3f00 	cmpeq.w	r0, #131072	; 0x20000
 800192c:	d004      	beq.n	8001938 <??evnt_schdlr_hw_evnt_cmplt_13>
 800192e:	2900      	cmp	r1, #0
 8001930:	bf08      	it	eq
 8001932:	f5b0 2f80 	cmpeq.w	r0, #262144	; 0x40000
 8001936:	d12a      	bne.n	800198e <??evnt_schdlr_hw_evnt_cmplt_14>

08001938 <??evnt_schdlr_hw_evnt_cmplt_13>:
 8001938:	f104 028a 	add.w	r2, r4, #138	; 0x8a
 800193c:	f882 b001 	strb.w	fp, [r2, #1]
 8001940:	f108 0138 	add.w	r1, r8, #56	; 0x38
 8001944:	7848      	ldrb	r0, [r1, #1]
 8001946:	b908      	cbnz	r0, 800194c <??evnt_schdlr_hw_evnt_cmplt_15>
 8001948:	f8c8 b028 	str.w	fp, [r8, #40]	; 0x28

0800194c <??evnt_schdlr_hw_evnt_cmplt_15>:
 800194c:	e9d6 0100 	ldrd	r0, r1, [r6]
 8001950:	f410 7fc0 	tst.w	r0, #384	; 0x180
 8001954:	d01b      	beq.n	800198e <??evnt_schdlr_hw_evnt_cmplt_14>
 8001956:	2900      	cmp	r1, #0
 8001958:	bf08      	it	eq
 800195a:	2880      	cmpeq	r0, #128	; 0x80
 800195c:	d10b      	bne.n	8001976 <??evnt_schdlr_hw_evnt_cmplt_16>
 800195e:	f895 0020 	ldrb.w	r0, [r5, #32]
 8001962:	2800      	cmp	r0, #0
 8001964:	bf04      	itt	eq
 8001966:	f895 1021 	ldrbeq.w	r1, [r5, #33]	; 0x21
 800196a:	2900      	cmpeq	r1, #0
 800196c:	d003      	beq.n	8001976 <??evnt_schdlr_hw_evnt_cmplt_16>
 800196e:	7810      	ldrb	r0, [r2, #0]
 8001970:	b908      	cbnz	r0, 8001976 <??evnt_schdlr_hw_evnt_cmplt_16>
 8001972:	2101      	movs	r1, #1
 8001974:	7011      	strb	r1, [r2, #0]

08001976 <??evnt_schdlr_hw_evnt_cmplt_16>:
 8001976:	f105 0021 	add.w	r0, r5, #33	; 0x21
 800197a:	7901      	ldrb	r1, [r0, #4]
 800197c:	6f20      	ldr	r0, [r4, #112]	; 0x70
 800197e:	f880 1121 	strb.w	r1, [r0, #289]	; 0x121
 8001982:	f105 0121 	add.w	r1, r5, #33	; 0x21
 8001986:	78c8      	ldrb	r0, [r1, #3]
 8001988:	6f21      	ldr	r1, [r4, #112]	; 0x70
 800198a:	f881 0120 	strb.w	r0, [r1, #288]	; 0x120

0800198e <??evnt_schdlr_hw_evnt_cmplt_14>:
 800198e:	f8da 0000 	ldr.w	r0, [sl]
 8001992:	f012 fd6e 	bl	8014472 <os_rcrsv_mutex_release>
 8001996:	e9d6 0100 	ldrd	r0, r1, [r6]
 800199a:	f410 7fc0 	tst.w	r0, #384	; 0x180
 800199e:	f000 808e 	beq.w	8001abe <??evnt_schdlr_hw_evnt_cmplt_17>
 80019a2:	f895 0020 	ldrb.w	r0, [r5, #32]
 80019a6:	2800      	cmp	r0, #0
 80019a8:	bf04      	itt	eq
 80019aa:	f895 0021 	ldrbeq.w	r0, [r5, #33]	; 0x21
 80019ae:	2800      	cmpeq	r0, #0
 80019b0:	d102      	bne.n	80019b8 <??evnt_schdlr_hw_evnt_cmplt_18>
 80019b2:	7af0      	ldrb	r0, [r6, #11]
 80019b4:	1c40      	adds	r0, r0, #1
 80019b6:	72f0      	strb	r0, [r6, #11]

080019b8 <??evnt_schdlr_hw_evnt_cmplt_18>:
 80019b8:	7a70      	ldrb	r0, [r6, #9]
 80019ba:	b108      	cbz	r0, 80019c0 <??evnt_schdlr_hw_evnt_cmplt_19>
 80019bc:	1e40      	subs	r0, r0, #1
 80019be:	7270      	strb	r0, [r6, #9]

080019c0 <??evnt_schdlr_hw_evnt_cmplt_19>:
 80019c0:	7f6f      	ldrb	r7, [r5, #29]
 80019c2:	46d9      	mov	r9, fp
 80019c4:	46ca      	mov	sl, r9
 80019c6:	9702      	str	r7, [sp, #8]
 80019c8:	2c00      	cmp	r4, #0
 80019ca:	bf14      	ite	ne
 80019cc:	2001      	movne	r0, #1
 80019ce:	2000      	moveq	r0, #0
 80019d0:	f7fe fbfe 	bl	80001d0 <bsp_assert>
 80019d4:	f885 901d 	strb.w	r9, [r5, #29]
 80019d8:	2f00      	cmp	r7, #0
 80019da:	d058      	beq.n	8001a8e <??evnt_schdlr_hw_evnt_cmplt_20>
 80019dc:	f105 0321 	add.w	r3, r5, #33	; 0x21
 80019e0:	f108 0e38 	add.w	lr, r8, #56	; 0x38
 80019e4:	9500      	str	r5, [sp, #0]
 80019e6:	9301      	str	r3, [sp, #4]
 80019e8:	f8cd e00c 	str.w	lr, [sp, #12]
 80019ec:	463d      	mov	r5, r7

080019ee <??evnt_schdlr_hw_evnt_cmplt_21>:
 80019ee:	f8df 2a48 	ldr.w	r2, [pc, #2632]	; 8002438 <??DataTable37_2>
 80019f2:	f852 002a 	ldr.w	r0, [r2, sl, lsl #2]
 80019f6:	2800      	cmp	r0, #0
 80019f8:	d048      	beq.n	8001a8c <??evnt_schdlr_hw_evnt_cmplt_22>
 80019fa:	f104 000c 	add.w	r0, r4, #12
 80019fe:	f001 f916 	bl	8002c2e <packet_dequeue>
 8001a02:	4607      	mov	r7, r0
 8001a04:	f108 0050 	add.w	r0, r8, #80	; 0x50
 8001a08:	4287      	cmp	r7, r0
 8001a0a:	d02a      	beq.n	8001a62 <??evnt_schdlr_hw_evnt_cmplt_23>
 8001a0c:	7bb9      	ldrb	r1, [r7, #14]
 8001a0e:	0788      	lsls	r0, r1, #30
 8001a10:	d51d      	bpl.n	8001a4e <??evnt_schdlr_hw_evnt_cmplt_24>
 8001a12:	6839      	ldr	r1, [r7, #0]
 8001a14:	8978      	ldrh	r0, [r7, #10]
 8001a16:	4408      	add	r0, r1
 8001a18:	89b9      	ldrh	r1, [r7, #12]
 8001a1a:	4401      	add	r1, r0
 8001a1c:	7908      	ldrb	r0, [r1, #4]
 8001a1e:	7e61      	ldrb	r1, [r4, #25]
 8001a20:	1e4a      	subs	r2, r1, #1
 8001a22:	7662      	strb	r2, [r4, #25]
 8001a24:	9901      	ldr	r1, [sp, #4]
 8001a26:	798a      	ldrb	r2, [r1, #6]
 8001a28:	1c52      	adds	r2, r2, #1
 8001a2a:	718a      	strb	r2, [r1, #6]
 8001a2c:	2802      	cmp	r0, #2
 8001a2e:	d10e      	bne.n	8001a4e <??evnt_schdlr_hw_evnt_cmplt_24>
 8001a30:	6f20      	ldr	r0, [r4, #112]	; 0x70
 8001a32:	f890 1123 	ldrb.w	r1, [r0, #291]	; 0x123
 8001a36:	2905      	cmp	r1, #5
 8001a38:	d009      	beq.n	8001a4e <??evnt_schdlr_hw_evnt_cmplt_24>
 8001a3a:	f100 0158 	add.w	r1, r0, #88	; 0x58
 8001a3e:	6008      	str	r0, [r1, #0]
 8001a40:	200d      	movs	r0, #13
 8001a42:	7108      	strb	r0, [r1, #4]
 8001a44:	2002      	movs	r0, #2
 8001a46:	f04f 0b01 	mov.w	fp, #1
 8001a4a:	f7fe fc48 	bl	80002de <emngr_post_event>

08001a4e <??evnt_schdlr_hw_evnt_cmplt_24>:
 8001a4e:	4638      	mov	r0, r7
 8001a50:	f011 fd86 	bl	8013560 <free_buff_hdr>
 8001a54:	b108      	cbz	r0, 8001a5a <??evnt_schdlr_hw_evnt_cmplt_25>
 8001a56:	f109 0901 	add.w	r9, r9, #1

08001a5a <??evnt_schdlr_hw_evnt_cmplt_25>:
 8001a5a:	9800      	ldr	r0, [sp, #0]
 8001a5c:	7f41      	ldrb	r1, [r0, #29]
 8001a5e:	1c49      	adds	r1, r1, #1
 8001a60:	7741      	strb	r1, [r0, #29]

08001a62 <??evnt_schdlr_hw_evnt_cmplt_23>:
 8001a62:	7e20      	ldrb	r0, [r4, #24]
 8001a64:	f10a 0a01 	add.w	sl, sl, #1
 8001a68:	fa5f fa8a 	uxtb.w	sl, sl
 8001a6c:	1e41      	subs	r1, r0, #1
 8001a6e:	7621      	strb	r1, [r4, #24]
 8001a70:	f8df 09c4 	ldr.w	r0, [pc, #2500]	; 8002438 <??DataTable37_2>
 8001a74:	f850 102a 	ldr.w	r1, [r0, sl, lsl #2]
 8001a78:	9803      	ldr	r0, [sp, #12]
 8001a7a:	1e6d      	subs	r5, r5, #1
 8001a7c:	6982      	ldr	r2, [r0, #24]
 8001a7e:	4291      	cmp	r1, r2
 8001a80:	d004      	beq.n	8001a8c <??evnt_schdlr_hw_evnt_cmplt_22>
 8001a82:	f1ba 0f08 	cmp.w	sl, #8
 8001a86:	da01      	bge.n	8001a8c <??evnt_schdlr_hw_evnt_cmplt_22>
 8001a88:	2d00      	cmp	r5, #0
 8001a8a:	d1b0      	bne.n	80019ee <??evnt_schdlr_hw_evnt_cmplt_21>

08001a8c <??evnt_schdlr_hw_evnt_cmplt_22>:
 8001a8c:	9d00      	ldr	r5, [sp, #0]

08001a8e <??evnt_schdlr_hw_evnt_cmplt_20>:
 8001a8e:	f104 000c 	add.w	r0, r4, #12
 8001a92:	f001 f8b8 	bl	8002c06 <packet_get_frst_pkt>
 8001a96:	9a02      	ldr	r2, [sp, #8]
 8001a98:	f8df 199c 	ldr.w	r1, [pc, #2460]	; 8002438 <??DataTable37_2>
 8001a9c:	6800      	ldr	r0, [r0, #0]
 8001a9e:	f851 1022 	ldr.w	r1, [r1, r2, lsl #2]
 8001aa2:	4281      	cmp	r1, r0
 8001aa4:	d008      	beq.n	8001ab8 <??evnt_schdlr_hw_evnt_cmplt_26>
 8001aa6:	f108 0238 	add.w	r2, r8, #56	; 0x38
 8001aaa:	6990      	ldr	r0, [r2, #24]
 8001aac:	4281      	cmp	r1, r0
 8001aae:	bf04      	itt	eq
 8001ab0:	f104 000c 	addeq.w	r0, r4, #12
 8001ab4:	f001 f897 	bleq	8002be6 <packet_insert_empty_frst>

08001ab8 <??evnt_schdlr_hw_evnt_cmplt_26>:
 8001ab8:	f885 901c 	strb.w	r9, [r5, #28]
 8001abc:	e001      	b.n	8001ac2 <??evnt_schdlr_hw_evnt_cmplt_27>

08001abe <??evnt_schdlr_hw_evnt_cmplt_17>:
 8001abe:	f886 b009 	strb.w	fp, [r6, #9]

08001ac2 <??evnt_schdlr_hw_evnt_cmplt_27>:
 8001ac2:	e9d6 2300 	ldrd	r2, r3, [r6]
 8001ac6:	2b00      	cmp	r3, #0
 8001ac8:	bf08      	it	eq
 8001aca:	f5b2 7f80 	cmpeq.w	r2, #256	; 0x100
 8001ace:	d116      	bne.n	8001afe <??evnt_schdlr_hw_evnt_cmplt_28>
 8001ad0:	f895 0020 	ldrb.w	r0, [r5, #32]
 8001ad4:	2800      	cmp	r0, #0
 8001ad6:	bf04      	itt	eq
 8001ad8:	f895 0021 	ldrbeq.w	r0, [r5, #33]	; 0x21
 8001adc:	2800      	cmpeq	r0, #0
 8001ade:	d027      	beq.n	8001b30 <??evnt_schdlr_hw_evnt_cmplt_29>
 8001ae0:	4629      	mov	r1, r5
 8001ae2:	f104 0058 	add.w	r0, r4, #88	; 0x58
 8001ae6:	f012 fe7d 	bl	80147e4 <ble_time_set>
 8001aea:	4629      	mov	r1, r5
 8001aec:	f104 0050 	add.w	r0, r4, #80	; 0x50
 8001af0:	f012 fe78 	bl	80147e4 <ble_time_set>
 8001af4:	2001      	movs	r0, #1
 8001af6:	f884 008a 	strb.w	r0, [r4, #138]	; 0x8a
 8001afa:	2100      	movs	r1, #0
 8001afc:	6021      	str	r1, [r4, #0]

08001afe <??evnt_schdlr_hw_evnt_cmplt_28>:
 8001afe:	e9d6 2300 	ldrd	r2, r3, [r6]
 8001b02:	2b00      	cmp	r3, #0
 8001b04:	bf01      	itttt	eq
 8001b06:	2a02      	cmpeq	r2, #2
 8001b08:	6f20      	ldreq	r0, [r4, #112]	; 0x70
 8001b0a:	f890 1021 	ldrbeq.w	r1, [r0, #33]	; 0x21
 8001b0e:	2901      	cmpeq	r1, #1
 8001b10:	d10e      	bne.n	8001b30 <??evnt_schdlr_hw_evnt_cmplt_29>
 8001b12:	f8d8 1000 	ldr.w	r1, [r8]
 8001b16:	f240 1255 	movw	r2, #341	; 0x155
 8001b1a:	1c49      	adds	r1, r1, #1
 8001b1c:	f8c8 1000 	str.w	r1, [r8]
 8001b20:	4291      	cmp	r1, r2
 8001b22:	bf01      	itttt	eq
 8001b24:	f890 0065 	ldrbeq.w	r0, [r0, #101]	; 0x65
 8001b28:	2800      	cmpeq	r0, #0
 8001b2a:	2101      	moveq	r1, #1
 8001b2c:	f885 1021 	strbeq.w	r1, [r5, #33]	; 0x21

08001b30 <??evnt_schdlr_hw_evnt_cmplt_29>:
 8001b30:	e9d6 0100 	ldrd	r0, r1, [r6]
 8001b34:	f410 7fc0 	tst.w	r0, #384	; 0x180
 8001b38:	bf1c      	itt	ne
 8001b3a:	68a2      	ldrne	r2, [r4, #8]
 8001b3c:	2a00      	cmpne	r2, #0
 8001b3e:	d003      	beq.n	8001b48 <??evnt_schdlr_hw_evnt_cmplt_30>
 8001b40:	68a9      	ldr	r1, [r5, #8]
 8001b42:	6ee0      	ldr	r0, [r4, #108]	; 0x6c
 8001b44:	4790      	blx	r2
 8001b46:	e061      	b.n	8001c0c <??evnt_schdlr_hw_evnt_cmplt_31>

08001b48 <??evnt_schdlr_hw_evnt_cmplt_30>:
 8001b48:	f895 2020 	ldrb.w	r2, [r5, #32]
 8001b4c:	2a00      	cmp	r2, #0
 8001b4e:	bf02      	ittt	eq
 8001b50:	f105 0321 	addeq.w	r3, r5, #33	; 0x21
 8001b54:	781a      	ldrbeq	r2, [r3, #0]
 8001b56:	2a00      	cmpeq	r2, #0
 8001b58:	d01e      	beq.n	8001b98 <??evnt_schdlr_hw_evnt_cmplt_32>
 8001b5a:	2900      	cmp	r1, #0
 8001b5c:	bf08      	it	eq
 8001b5e:	2880      	cmpeq	r0, #128	; 0x80
 8001b60:	d105      	bne.n	8001b6e <??evnt_schdlr_hw_evnt_cmplt_33>
 8001b62:	f104 0150 	add.w	r1, r4, #80	; 0x50
 8001b66:	f104 0058 	add.w	r0, r4, #88	; 0x58
 8001b6a:	f012 fe3b 	bl	80147e4 <ble_time_set>

08001b6e <??evnt_schdlr_hw_evnt_cmplt_33>:
 8001b6e:	2000      	movs	r0, #0
 8001b70:	72f0      	strb	r0, [r6, #11]
 8001b72:	7270      	strb	r0, [r6, #9]
 8001b74:	2002      	movs	r0, #2
 8001b76:	7230      	strb	r0, [r6, #8]
 8001b78:	f1bb 0f00 	cmp.w	fp, #0
 8001b7c:	d104      	bne.n	8001b88 <??evnt_schdlr_hw_evnt_cmplt_34>
 8001b7e:	4622      	mov	r2, r4
 8001b80:	4629      	mov	r1, r5
 8001b82:	6ee0      	ldr	r0, [r4, #108]	; 0x6c
 8001b84:	6e63      	ldr	r3, [r4, #100]	; 0x64
 8001b86:	e036      	b.n	8001bf6 <??evnt_schdlr_hw_evnt_cmplt_35>

08001b88 <??evnt_schdlr_hw_evnt_cmplt_34>:
 8001b88:	68a8      	ldr	r0, [r5, #8]
 8001b8a:	2800      	cmp	r0, #0
 8001b8c:	d03e      	beq.n	8001c0c <??evnt_schdlr_hw_evnt_cmplt_31>
 8001b8e:	6841      	ldr	r1, [r0, #4]
 8001b90:	60a9      	str	r1, [r5, #8]
 8001b92:	f011 fce5 	bl	8013560 <free_buff_hdr>
 8001b96:	e7f7      	b.n	8001b88 <??evnt_schdlr_hw_evnt_cmplt_34>

08001b98 <??evnt_schdlr_hw_evnt_cmplt_32>:
 8001b98:	6ea2      	ldr	r2, [r4, #104]	; 0x68
 8001b9a:	b372      	cbz	r2, 8001bfa <??evnt_schdlr_hw_evnt_cmplt_36>
 8001b9c:	7ada      	ldrb	r2, [r3, #11]
 8001b9e:	0793      	lsls	r3, r2, #30
 8001ba0:	d51d      	bpl.n	8001bde <??evnt_schdlr_hw_evnt_cmplt_37>
 8001ba2:	2900      	cmp	r1, #0
 8001ba4:	bf08      	it	eq
 8001ba6:	f5b0 7f80 	cmpeq.w	r0, #256	; 0x100
 8001baa:	d10e      	bne.n	8001bca <??evnt_schdlr_hw_evnt_cmplt_38>
 8001bac:	4629      	mov	r1, r5
 8001bae:	f104 0058 	add.w	r0, r4, #88	; 0x58
 8001bb2:	f012 fe17 	bl	80147e4 <ble_time_set>
 8001bb6:	4629      	mov	r1, r5
 8001bb8:	f104 0050 	add.w	r0, r4, #80	; 0x50
 8001bbc:	f012 fe12 	bl	80147e4 <ble_time_set>
 8001bc0:	2001      	movs	r0, #1
 8001bc2:	f884 008a 	strb.w	r0, [r4, #138]	; 0x8a
 8001bc6:	2100      	movs	r1, #0
 8001bc8:	6021      	str	r1, [r4, #0]

08001bca <??evnt_schdlr_hw_evnt_cmplt_38>:
 8001bca:	e9d6 2300 	ldrd	r2, r3, [r6]
 8001bce:	2b00      	cmp	r3, #0
 8001bd0:	bf08      	it	eq
 8001bd2:	2a80      	cmpeq	r2, #128	; 0x80
 8001bd4:	d106      	bne.n	8001be4 <??evnt_schdlr_hw_evnt_cmplt_39>
 8001bd6:	2001      	movs	r0, #1
 8001bd8:	f884 008a 	strb.w	r0, [r4, #138]	; 0x8a
 8001bdc:	e002      	b.n	8001be4 <??evnt_schdlr_hw_evnt_cmplt_39>

08001bde <??evnt_schdlr_hw_evnt_cmplt_37>:
 8001bde:	f410 7fc0 	tst.w	r0, #384	; 0x180
 8001be2:	d00a      	beq.n	8001bfa <??evnt_schdlr_hw_evnt_cmplt_36>

08001be4 <??evnt_schdlr_hw_evnt_cmplt_39>:
 8001be4:	2002      	movs	r0, #2
 8001be6:	7230      	strb	r0, [r6, #8]
 8001be8:	f1bb 0f00 	cmp.w	fp, #0
 8001bec:	d10e      	bne.n	8001c0c <??evnt_schdlr_hw_evnt_cmplt_31>
 8001bee:	4622      	mov	r2, r4
 8001bf0:	4629      	mov	r1, r5
 8001bf2:	6ee0      	ldr	r0, [r4, #108]	; 0x6c
 8001bf4:	6ea3      	ldr	r3, [r4, #104]	; 0x68

08001bf6 <??evnt_schdlr_hw_evnt_cmplt_35>:
 8001bf6:	4798      	blx	r3
 8001bf8:	e008      	b.n	8001c0c <??evnt_schdlr_hw_evnt_cmplt_31>

08001bfa <??evnt_schdlr_hw_evnt_cmplt_36>:
 8001bfa:	2000      	movs	r0, #0
 8001bfc:	7230      	strb	r0, [r6, #8]
 8001bfe:	f8d8 1024 	ldr.w	r1, [r8, #36]	; 0x24
 8001c02:	4620      	mov	r0, r4
 8001c04:	6a8a      	ldr	r2, [r1, #40]	; 0x28
 8001c06:	4790      	blx	r2
 8001c08:	f7fe fd19 	bl	800063e <evnt_schdlr_hndl_next_evnt>

08001c0c <??evnt_schdlr_hw_evnt_cmplt_31>:
 8001c0c:	e9d6 0100 	ldrd	r0, r1, [r6]
 8001c10:	2900      	cmp	r1, #0
 8001c12:	bf08      	it	eq
 8001c14:	2880      	cmpeq	r0, #128	; 0x80
 8001c16:	d103      	bne.n	8001c20 <??evnt_schdlr_hw_evnt_cmplt_7>
 8001c18:	6ee0      	ldr	r0, [r4, #108]	; 0x6c
 8001c1a:	4629      	mov	r1, r5
 8001c1c:	f012 ffcc 	bl	8014bb8 <conn_mngr_update_ststic>

08001c20 <??evnt_schdlr_hw_evnt_cmplt_7>:
 8001c20:	4628      	mov	r0, r5
 8001c22:	f003 fafb 	bl	800521c <os_mem_pool_free>
 8001c26:	b11c      	cbz	r4, 8001c30 <??evnt_schdlr_hw_evnt_cmplt_1>

08001c28 <??evnt_schdlr_hw_evnt_cmplt_4>:
 8001c28:	e9d4 0124 	ldrd	r0, r1, [r4, #144]	; 0x90
 8001c2c:	f000 fb8e 	bl	800234c <evnt_schdlr_call_end_of_activity_callback>

08001c30 <??evnt_schdlr_hw_evnt_cmplt_1>:
 8001c30:	b005      	add	sp, #20
 8001c32:	208c      	movs	r0, #140	; 0x8c
 8001c34:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8001c38:	f7fe baf8 	b.w	800022c <bsp_debug_gpio_clear>

08001c3c <evnt_schdlr_add_data_pkt>:
 8001c3c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8001c3e:	4604      	mov	r4, r0
 8001c40:	460d      	mov	r5, r1
 8001c42:	2600      	movs	r6, #0
 8001c44:	b104      	cbz	r4, 8001c48 <??evnt_schdlr_add_data_pkt_0>
 8001c46:	2001      	movs	r0, #1

08001c48 <??evnt_schdlr_add_data_pkt_0>:
 8001c48:	f7fe fac2 	bl	80001d0 <bsp_assert>
 8001c4c:	2d00      	cmp	r5, #0
 8001c4e:	bf14      	ite	ne
 8001c50:	2001      	movne	r0, #1
 8001c52:	2000      	moveq	r0, #0
 8001c54:	f7fe fabc 	bl	80001d0 <bsp_assert>
 8001c58:	e9d4 0124 	ldrd	r0, r1, [r4, #144]	; 0x90
 8001c5c:	f410 7fc0 	tst.w	r0, #384	; 0x180
 8001c60:	bf08      	it	eq
 8001c62:	2611      	moveq	r6, #17
 8001c64:	d021      	beq.n	8001caa <??evnt_schdlr_add_data_pkt_1>
 8001c66:	f8df 77c8 	ldr.w	r7, [pc, #1992]	; 8002430 <??DataTable37>
 8001c6a:	6838      	ldr	r0, [r7, #0]
 8001c6c:	f04f 31ff 	mov.w	r1, #4294967295	; 0xffffffff
 8001c70:	f012 fbf9 	bl	8014466 <os_rcrsv_mutex_wait>
 8001c74:	6f20      	ldr	r0, [r4, #112]	; 0x70
 8001c76:	f200 1023 	addw	r0, r0, #291	; 0x123
 8001c7a:	7801      	ldrb	r1, [r0, #0]
 8001c7c:	2907      	cmp	r1, #7
 8001c7e:	bf1e      	ittt	ne
 8001c80:	7840      	ldrbne	r0, [r0, #1]
 8001c82:	2807      	cmpne	r0, #7
 8001c84:	2808      	cmpne	r0, #8
 8001c86:	d102      	bne.n	8001c8e <??evnt_schdlr_add_data_pkt_2>
 8001c88:	f104 0078 	add.w	r0, r4, #120	; 0x78
 8001c8c:	e001      	b.n	8001c92 <??evnt_schdlr_add_data_pkt_3>

08001c8e <??evnt_schdlr_add_data_pkt_2>:
 8001c8e:	f104 000c 	add.w	r0, r4, #12

08001c92 <??evnt_schdlr_add_data_pkt_3>:
 8001c92:	7ba9      	ldrb	r1, [r5, #14]
 8001c94:	078a      	lsls	r2, r1, #30
 8001c96:	d502      	bpl.n	8001c9e <??evnt_schdlr_add_data_pkt_4>
 8001c98:	7e61      	ldrb	r1, [r4, #25]
 8001c9a:	1c49      	adds	r1, r1, #1
 8001c9c:	7661      	strb	r1, [r4, #25]

08001c9e <??evnt_schdlr_add_data_pkt_4>:
 8001c9e:	4629      	mov	r1, r5
 8001ca0:	f000 ff7a 	bl	8002b98 <packet_enqueue>
 8001ca4:	6838      	ldr	r0, [r7, #0]
 8001ca6:	f012 fbe4 	bl	8014472 <os_rcrsv_mutex_release>

08001caa <??evnt_schdlr_add_data_pkt_1>:
 8001caa:	4630      	mov	r0, r6
 8001cac:	bdf2      	pop	{r1, r4, r5, r6, r7, pc}

08001cae <evnt_schdlr_send_pndng_data_pkt>:
 8001cae:	b570      	push	{r4, r5, r6, lr}
 8001cb0:	0004      	movs	r4, r0
 8001cb2:	bf14      	ite	ne
 8001cb4:	2001      	movne	r0, #1
 8001cb6:	2000      	moveq	r0, #0
 8001cb8:	f8df 5774 	ldr.w	r5, [pc, #1908]	; 8002430 <??DataTable37>
 8001cbc:	f7fe fa88 	bl	80001d0 <bsp_assert>
 8001cc0:	6828      	ldr	r0, [r5, #0]
 8001cc2:	f04f 31ff 	mov.w	r1, #4294967295	; 0xffffffff
 8001cc6:	f8df 6404 	ldr.w	r6, [pc, #1028]	; 80020cc <??DataTable24>
 8001cca:	f012 fbcc 	bl	8014466 <os_rcrsv_mutex_wait>
 8001cce:	e009      	b.n	8001ce4 <??evnt_schdlr_send_pndng_data_pkt_0>

08001cd0 <??evnt_schdlr_send_pndng_data_pkt_1>:
 8001cd0:	f104 000c 	add.w	r0, r4, #12
 8001cd4:	f000 ffab 	bl	8002c2e <packet_dequeue>
 8001cd8:	f106 0150 	add.w	r1, r6, #80	; 0x50
 8001cdc:	4288      	cmp	r0, r1
 8001cde:	bf18      	it	ne
 8001ce0:	f011 fc3e 	blne	8013560 <free_buff_hdr>

08001ce4 <??evnt_schdlr_send_pndng_data_pkt_0>:
 8001ce4:	68e0      	ldr	r0, [r4, #12]
 8001ce6:	2800      	cmp	r0, #0
 8001ce8:	d1f2      	bne.n	8001cd0 <??evnt_schdlr_send_pndng_data_pkt_1>
 8001cea:	6fa0      	ldr	r0, [r4, #120]	; 0x78
 8001cec:	6fe1      	ldr	r1, [r4, #124]	; 0x7c
 8001cee:	60e0      	str	r0, [r4, #12]
 8001cf0:	f894 0080 	ldrb.w	r0, [r4, #128]	; 0x80
 8001cf4:	6121      	str	r1, [r4, #16]
 8001cf6:	2100      	movs	r1, #0
 8001cf8:	67a1      	str	r1, [r4, #120]	; 0x78
 8001cfa:	67e1      	str	r1, [r4, #124]	; 0x7c
 8001cfc:	2101      	movs	r1, #1
 8001cfe:	7520      	strb	r0, [r4, #20]
 8001d00:	f884 1080 	strb.w	r1, [r4, #128]	; 0x80
 8001d04:	6828      	ldr	r0, [r5, #0]
 8001d06:	f012 fbb4 	bl	8014472 <os_rcrsv_mutex_release>
 8001d0a:	2000      	movs	r0, #0
 8001d0c:	bd70      	pop	{r4, r5, r6, pc}

08001d0e <evnt_schdlr_add_ctrl_pkt>:
 8001d0e:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8001d10:	4604      	mov	r4, r0
 8001d12:	460d      	mov	r5, r1
 8001d14:	2600      	movs	r6, #0
 8001d16:	b104      	cbz	r4, 8001d1a <??evnt_schdlr_add_ctrl_pkt_0>
 8001d18:	2001      	movs	r0, #1

08001d1a <??evnt_schdlr_add_ctrl_pkt_0>:
 8001d1a:	f7fe fa59 	bl	80001d0 <bsp_assert>
 8001d1e:	2d00      	cmp	r5, #0
 8001d20:	bf14      	ite	ne
 8001d22:	2001      	movne	r0, #1
 8001d24:	2000      	moveq	r0, #0
 8001d26:	f7fe fa53 	bl	80001d0 <bsp_assert>
 8001d2a:	e9d4 0124 	ldrd	r0, r1, [r4, #144]	; 0x90
 8001d2e:	f410 7fc0 	tst.w	r0, #384	; 0x180
 8001d32:	bf08      	it	eq
 8001d34:	2611      	moveq	r6, #17
 8001d36:	d015      	beq.n	8001d64 <??evnt_schdlr_add_ctrl_pkt_1>
 8001d38:	f8df 76f4 	ldr.w	r7, [pc, #1780]	; 8002430 <??DataTable37>
 8001d3c:	6838      	ldr	r0, [r7, #0]
 8001d3e:	f04f 31ff 	mov.w	r1, #4294967295	; 0xffffffff
 8001d42:	f012 fb90 	bl	8014466 <os_rcrsv_mutex_wait>
 8001d46:	7ba8      	ldrb	r0, [r5, #14]
 8001d48:	4629      	mov	r1, r5
 8001d4a:	f040 0002 	orr.w	r0, r0, #2
 8001d4e:	73a8      	strb	r0, [r5, #14]
 8001d50:	7e60      	ldrb	r0, [r4, #25]
 8001d52:	1c40      	adds	r0, r0, #1
 8001d54:	7660      	strb	r0, [r4, #25]
 8001d56:	f104 000c 	add.w	r0, r4, #12
 8001d5a:	f000 ff1d 	bl	8002b98 <packet_enqueue>
 8001d5e:	6838      	ldr	r0, [r7, #0]
 8001d60:	f012 fb87 	bl	8014472 <os_rcrsv_mutex_release>

08001d64 <??evnt_schdlr_add_ctrl_pkt_1>:
 8001d64:	4630      	mov	r0, r6
 8001d66:	bdf2      	pop	{r1, r4, r5, r6, r7, pc}

08001d68 <evnt_schdlr_conn_params_updtd>:
 8001d68:	b570      	push	{r4, r5, r6, lr}
 8001d6a:	0004      	movs	r4, r0
 8001d6c:	460d      	mov	r5, r1
 8001d6e:	bf18      	it	ne
 8001d70:	2001      	movne	r0, #1
 8001d72:	f7fe fa2d 	bl	80001d0 <bsp_assert>
 8001d76:	6f26      	ldr	r6, [r4, #112]	; 0x70
 8001d78:	0728      	lsls	r0, r5, #28
 8001d7a:	d505      	bpl.n	8001d88 <??evnt_schdlr_conn_params_updtd_0>
 8001d7c:	f106 0138 	add.w	r1, r6, #56	; 0x38
 8001d80:	f104 0058 	add.w	r0, r4, #88	; 0x58
 8001d84:	f012 fd2e 	bl	80147e4 <ble_time_set>

08001d88 <??evnt_schdlr_conn_params_updtd_0>:
 8001d88:	0769      	lsls	r1, r5, #29
 8001d8a:	d50a      	bpl.n	8001da2 <??evnt_schdlr_conn_params_updtd_1>
 8001d8c:	f896 0020 	ldrb.w	r0, [r6, #32]
 8001d90:	b138      	cbz	r0, 8001da2 <??evnt_schdlr_conn_params_updtd_1>
 8001d92:	8a31      	ldrh	r1, [r6, #16]
 8001d94:	2203      	movs	r2, #3
 8001d96:	f104 0050 	add.w	r0, r4, #80	; 0x50
 8001d9a:	f012 fd79 	bl	8014890 <ble_time_add_uint>
 8001d9e:	f7fe fc4e 	bl	800063e <evnt_schdlr_hndl_next_evnt>

08001da2 <??evnt_schdlr_conn_params_updtd_1>:
 8001da2:	2000      	movs	r0, #0
 8001da4:	bd70      	pop	{r4, r5, r6, pc}

08001da6 <evnt_schdlr_updt_conn_evnt_durn>:
 8001da6:	b418      	push	{r3, r4}
 8001da8:	e9d0 2324 	ldrd	r2, r3, [r0, #144]	; 0x90
 8001dac:	2b00      	cmp	r3, #0
 8001dae:	bf08      	it	eq
 8001db0:	2a80      	cmpeq	r2, #128	; 0x80
 8001db2:	d104      	bne.n	8001dbe <??evnt_schdlr_updt_conn_evnt_durn_0>
 8001db4:	4cc5      	ldr	r4, [pc, #788]	; (80020cc <??DataTable24>)
 8001db6:	6a62      	ldr	r2, [r4, #36]	; 0x24
 8001db8:	6ad3      	ldr	r3, [r2, #44]	; 0x2c
 8001dba:	bc14      	pop	{r2, r4}

08001dbc <__iar_annotation$$tailcall>:
 8001dbc:	4718      	bx	r3

08001dbe <??evnt_schdlr_updt_conn_evnt_durn_0>:
 8001dbe:	bc11      	pop	{r0, r4}
 8001dc0:	4770      	bx	lr

08001dc2 <evnt_schdlr_evnt_updtd>:
 8001dc2:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8001dc4:	4604      	mov	r4, r0
 8001dc6:	2003      	movs	r0, #3
 8001dc8:	f7fe fa2e 	bl	8000228 <bsp_debug_gpio_set>
 8001dcc:	2c00      	cmp	r4, #0
 8001dce:	bf14      	ite	ne
 8001dd0:	2001      	movne	r0, #1
 8001dd2:	2000      	moveq	r0, #0
 8001dd4:	f7fe f9fc 	bl	80001d0 <bsp_assert>
 8001dd8:	f104 0090 	add.w	r0, r4, #144	; 0x90
 8001ddc:	2100      	movs	r1, #0
 8001dde:	7201      	strb	r1, [r0, #8]
 8001de0:	4dba      	ldr	r5, [pc, #744]	; (80020cc <??DataTable24>)
 8001de2:	6aa9      	ldr	r1, [r5, #40]	; 0x28
 8001de4:	428c      	cmp	r4, r1
 8001de6:	bf01      	itttt	eq
 8001de8:	e9d0 2300 	ldrdeq	r2, r3, [r0]
 8001dec:	f04f 4680 	moveq.w	r6, #1073741824	; 0x40000000
 8001df0:	2700      	moveq	r7, #0
 8001df2:	42bb      	cmpeq	r3, r7
 8001df4:	d105      	bne.n	8001e02 <??evnt_schdlr_evnt_updtd_0>
 8001df6:	42b2      	cmp	r2, r6
 8001df8:	d103      	bne.n	8001e02 <??evnt_schdlr_evnt_updtd_0>
 8001dfa:	62af      	str	r7, [r5, #40]	; 0x28
 8001dfc:	f884 708b 	strb.w	r7, [r4, #139]	; 0x8b
 8001e00:	e003      	b.n	8001e0a <??evnt_schdlr_evnt_updtd_1>

08001e02 <??evnt_schdlr_evnt_updtd_0>:
 8001e02:	6a69      	ldr	r1, [r5, #36]	; 0x24
 8001e04:	4620      	mov	r0, r4
 8001e06:	6a8a      	ldr	r2, [r1, #40]	; 0x28
 8001e08:	4790      	blx	r2

08001e0a <??evnt_schdlr_evnt_updtd_1>:
 8001e0a:	f895 0039 	ldrb.w	r0, [r5, #57]	; 0x39
 8001e0e:	b910      	cbnz	r0, 8001e16 <??evnt_schdlr_evnt_updtd_2>
 8001e10:	f7fe fc15 	bl	800063e <evnt_schdlr_hndl_next_evnt>
 8001e14:	e002      	b.n	8001e1c <??evnt_schdlr_evnt_updtd_3>

08001e16 <??evnt_schdlr_evnt_updtd_2>:
 8001e16:	1e40      	subs	r0, r0, #1
 8001e18:	f885 0039 	strb.w	r0, [r5, #57]	; 0x39

08001e1c <??evnt_schdlr_evnt_updtd_3>:
 8001e1c:	2003      	movs	r0, #3
 8001e1e:	f7fe fa05 	bl	800022c <bsp_debug_gpio_clear>
 8001e22:	2000      	movs	r0, #0
 8001e24:	bdf2      	pop	{r1, r4, r5, r6, r7, pc}
	...

08001e28 <??DataTable21>:
 8001e28:	8200 4802                                   ...H

08001e2c <evnt_schdlr_rgstr_wait_for_evnt_cmplt>:
 8001e2c:	b538      	push	{r3, r4, r5, lr}
 8001e2e:	4605      	mov	r5, r0
 8001e30:	000c      	movs	r4, r1
 8001e32:	bf14      	ite	ne
 8001e34:	2001      	movne	r0, #1
 8001e36:	2000      	moveq	r0, #0
 8001e38:	f7fe f9ca 	bl	80001d0 <bsp_assert>
 8001e3c:	60a5      	str	r5, [r4, #8]
 8001e3e:	bd31      	pop	{r0, r4, r5, pc}

08001e40 <evnt_schdlr_rgstr_error_cbk_evnt_cmplt>:
 8001e40:	b538      	push	{r3, r4, r5, lr}
 8001e42:	4605      	mov	r5, r0
 8001e44:	000c      	movs	r4, r1
 8001e46:	bf14      	ite	ne
 8001e48:	2001      	movne	r0, #1
 8001e4a:	2000      	moveq	r0, #0
 8001e4c:	f7fe f9c0 	bl	80001d0 <bsp_assert>
 8001e50:	66a5      	str	r5, [r4, #104]	; 0x68
 8001e52:	bd31      	pop	{r0, r4, r5, pc}

08001e54 <evnt_schdlr_hndl_near_evnts>:
 8001e54:	b570      	push	{r4, r5, r6, lr}
 8001e56:	b084      	sub	sp, #16
 8001e58:	2208      	movs	r2, #8
 8001e5a:	2100      	movs	r1, #0
 8001e5c:	a802      	add	r0, sp, #8
 8001e5e:	f02f f8a6 	bl	8030fae <memset>
 8001e62:	2208      	movs	r2, #8
 8001e64:	2100      	movs	r1, #0
 8001e66:	4668      	mov	r0, sp
 8001e68:	f02f f8a1 	bl	8030fae <memset>
 8001e6c:	4d97      	ldr	r5, [pc, #604]	; (80020cc <??DataTable24>)
 8001e6e:	6a68      	ldr	r0, [r5, #36]	; 0x24
 8001e70:	6aae      	ldr	r6, [r5, #40]	; 0x28
 8001e72:	6881      	ldr	r1, [r0, #8]
 8001e74:	4788      	blx	r1
 8001e76:	4604      	mov	r4, r0
 8001e78:	200b      	movs	r0, #11
 8001e7a:	f7fe f9d5 	bl	8000228 <bsp_debug_gpio_set>
 8001e7e:	b18c      	cbz	r4, 8001ea4 <??evnt_schdlr_hndl_near_evnts_0>
 8001e80:	e9d6 0124 	ldrd	r0, r1, [r6, #144]	; 0x90
 8001e84:	b971      	cbnz	r1, 8001ea4 <??evnt_schdlr_hndl_near_evnts_0>
 8001e86:	2880      	cmp	r0, #128	; 0x80
 8001e88:	d006      	beq.n	8001e98 <??evnt_schdlr_hndl_near_evnts_1>
 8001e8a:	f5b0 7f80 	cmp.w	r0, #256	; 0x100
 8001e8e:	d010      	beq.n	8001eb2 <??evnt_schdlr_hndl_near_evnts_2>
 8001e90:	f1b0 6f80 	cmp.w	r0, #67108864	; 0x4000000
 8001e94:	d015      	beq.n	8001ec2 <??evnt_schdlr_hndl_near_evnts_3>
 8001e96:	e005      	b.n	8001ea4 <??evnt_schdlr_hndl_near_evnts_0>

08001e98 <??evnt_schdlr_hndl_near_evnts_1>:
 8001e98:	e9d4 0124 	ldrd	r0, r1, [r4, #144]	; 0x90
 8001e9c:	2900      	cmp	r1, #0
 8001e9e:	bf08      	it	eq
 8001ea0:	2880      	cmpeq	r0, #128	; 0x80
 8001ea2:	d015      	beq.n	8001ed0 <??evnt_schdlr_hndl_near_evnts_4>

08001ea4 <??evnt_schdlr_hndl_near_evnts_0>:
 8001ea4:	f009 fe23 	bl	800baee <llhwc_goto_sleep>

08001ea8 <??evnt_schdlr_hndl_near_evnts_5>:
 8001ea8:	200b      	movs	r0, #11
 8001eaa:	f7fe f9bf 	bl	800022c <bsp_debug_gpio_clear>
 8001eae:	b004      	add	sp, #16
 8001eb0:	bd70      	pop	{r4, r5, r6, pc}

08001eb2 <??evnt_schdlr_hndl_near_evnts_2>:
 8001eb2:	e9d4 0124 	ldrd	r0, r1, [r4, #144]	; 0x90
 8001eb6:	2900      	cmp	r1, #0
 8001eb8:	bf08      	it	eq
 8001eba:	f5b0 2f80 	cmpeq.w	r0, #262144	; 0x40000
 8001ebe:	d1f1      	bne.n	8001ea4 <??evnt_schdlr_hndl_near_evnts_0>
 8001ec0:	e006      	b.n	8001ed0 <??evnt_schdlr_hndl_near_evnts_4>

08001ec2 <??evnt_schdlr_hndl_near_evnts_3>:
 8001ec2:	e9d4 0124 	ldrd	r0, r1, [r4, #144]	; 0x90
 8001ec6:	2900      	cmp	r1, #0
 8001ec8:	bf08      	it	eq
 8001eca:	f5b0 1f80 	cmpeq.w	r0, #1048576	; 0x100000
 8001ece:	d1e9      	bne.n	8001ea4 <??evnt_schdlr_hndl_near_evnts_0>

08001ed0 <??evnt_schdlr_hndl_near_evnts_4>:
 8001ed0:	2008      	movs	r0, #8
 8001ed2:	f7fe f9ad 	bl	8000230 <bsp_debug_gpio_toggle>
 8001ed6:	f104 0090 	add.w	r0, r4, #144	; 0x90
 8001eda:	7a01      	ldrb	r1, [r0, #8]
 8001edc:	2904      	cmp	r1, #4
 8001ede:	d0e1      	beq.n	8001ea4 <??evnt_schdlr_hndl_near_evnts_0>
 8001ee0:	200a      	movs	r0, #10
 8001ee2:	f7fe f9a5 	bl	8000230 <bsp_debug_gpio_toggle>
 8001ee6:	f104 0050 	add.w	r0, r4, #80	; 0x50
 8001eea:	e9d0 2300 	ldrd	r2, r3, [r0]
 8001eee:	a802      	add	r0, sp, #8
 8001ef0:	e9cd 2300 	strd	r2, r3, [sp]
 8001ef4:	f00a f8d1 	bl	800c09a <llhwc_slptmr_get>
 8001ef8:	a902      	add	r1, sp, #8
 8001efa:	4668      	mov	r0, sp
 8001efc:	f012 fc41 	bl	8014782 <ble_time_diff_us>
 8001f00:	6ca9      	ldr	r1, [r5, #72]	; 0x48
 8001f02:	3114      	adds	r1, #20
 8001f04:	ebc1 1241 	rsb	r2, r1, r1, lsl #5
 8001f08:	eb02 0291 	add.w	r2, r2, r1, lsr #2
 8001f0c:	4290      	cmp	r0, r2
 8001f0e:	d2c9      	bcs.n	8001ea4 <??evnt_schdlr_hndl_near_evnts_0>
 8001f10:	283f      	cmp	r0, #63	; 0x3f
 8001f12:	d3c7      	bcc.n	8001ea4 <??evnt_schdlr_hndl_near_evnts_0>
 8001f14:	2009      	movs	r0, #9
 8001f16:	f7fe f98b 	bl	8000230 <bsp_debug_gpio_toggle>
 8001f1a:	6aa8      	ldr	r0, [r5, #40]	; 0x28
 8001f1c:	b100      	cbz	r0, 8001f20 <??evnt_schdlr_hndl_near_evnts_6>
 8001f1e:	2001      	movs	r0, #1

08001f20 <??evnt_schdlr_hndl_near_evnts_6>:
 8001f20:	f7fe f956 	bl	80001d0 <bsp_assert>
 8001f24:	f895 1039 	ldrb.w	r1, [r5, #57]	; 0x39
 8001f28:	2000      	movs	r0, #0
 8001f2a:	62a8      	str	r0, [r5, #40]	; 0x28
 8001f2c:	1c49      	adds	r1, r1, #1
 8001f2e:	f885 1039 	strb.w	r1, [r5, #57]	; 0x39
 8001f32:	f106 0150 	add.w	r1, r6, #80	; 0x50
 8001f36:	4668      	mov	r0, sp
 8001f38:	f012 fc23 	bl	8014782 <ble_time_diff_us>
 8001f3c:	6328      	str	r0, [r5, #48]	; 0x30
 8001f3e:	f8df 64fc 	ldr.w	r6, [pc, #1276]	; 800243c <??DataTable37_3>
 8001f42:	6970      	ldr	r0, [r6, #20]
 8001f44:	f040 0002 	orr.w	r0, r0, #2
 8001f48:	6170      	str	r0, [r6, #20]
 8001f4a:	6870      	ldr	r0, [r6, #4]
 8001f4c:	f020 0010 	bic.w	r0, r0, #16
 8001f50:	6070      	str	r0, [r6, #4]
 8001f52:	6831      	ldr	r1, [r6, #0]
 8001f54:	f041 0102 	orr.w	r1, r1, #2
 8001f58:	6031      	str	r1, [r6, #0]
 8001f5a:	6830      	ldr	r0, [r6, #0]
 8001f5c:	2100      	movs	r1, #0
 8001f5e:	f020 0002 	bic.w	r0, r0, #2
 8001f62:	6030      	str	r0, [r6, #0]
 8001f64:	4620      	mov	r0, r4
 8001f66:	f7fe fcfb 	bl	8000960 <evnt_schdlr_exec>
 8001f6a:	69b0      	ldr	r0, [r6, #24]
 8001f6c:	6b29      	ldr	r1, [r5, #48]	; 0x30
 8001f6e:	61b1      	str	r1, [r6, #24]
 8001f70:	6970      	ldr	r0, [r6, #20]
 8001f72:	f020 0002 	bic.w	r0, r0, #2
 8001f76:	6170      	str	r0, [r6, #20]
 8001f78:	e796      	b.n	8001ea8 <??evnt_schdlr_hndl_near_evnts_5>
	...

08001f7c <??DataTable22>:
 8001f7c:	0024 2000                                   $.. 

08001f80 <evnt_schdlr_extend_gnrc_evnt_durn>:
 8001f80:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8001f84:	4604      	mov	r4, r0
 8001f86:	460e      	mov	r6, r1
 8001f88:	4690      	mov	r8, r2
 8001f8a:	469a      	mov	sl, r3
 8001f8c:	2500      	movs	r5, #0
 8001f8e:	b104      	cbz	r4, 8001f92 <??evnt_schdlr_extend_gnrc_evnt_durn_0>
 8001f90:	2001      	movs	r0, #1

08001f92 <??evnt_schdlr_extend_gnrc_evnt_durn_0>:
 8001f92:	f7fe f91d 	bl	80001d0 <bsp_assert>
 8001f96:	e9d4 2324 	ldrd	r2, r3, [r4, #144]	; 0x90
 8001f9a:	2000      	movs	r0, #0
 8001f9c:	2101      	movs	r1, #1
 8001f9e:	428b      	cmp	r3, r1
 8001fa0:	bf04      	itt	eq
 8001fa2:	4282      	cmpeq	r2, r0
 8001fa4:	2001      	moveq	r0, #1
 8001fa6:	f7fe f913 	bl	80001d0 <bsp_assert>
 8001faa:	f884 6020 	strb.w	r6, [r4, #32]
 8001fae:	e9da 0100 	ldrd	r0, r1, [sl]
 8001fb2:	f8df 748c 	ldr.w	r7, [pc, #1164]	; 8002440 <??DataTable37_4>
 8001fb6:	f00a ffdf 	bl	800cf78 <US_TO_SLP_TMR_PROTECTED>
 8001fba:	4681      	mov	r9, r0
 8001fbc:	6d22      	ldr	r2, [r4, #80]	; 0x50
 8001fbe:	6e21      	ldr	r1, [r4, #96]	; 0x60
 8001fc0:	6cb8      	ldr	r0, [r7, #72]	; 0x48
 8001fc2:	188a      	adds	r2, r1, r2
 8001fc4:	1a12      	subs	r2, r2, r0
 8001fc6:	3a14      	subs	r2, #20
 8001fc8:	454a      	cmp	r2, r9
 8001fca:	d302      	bcc.n	8001fd2 <??evnt_schdlr_extend_gnrc_evnt_durn_1>
 8001fcc:	2000      	movs	r0, #0
 8001fce:	2100      	movs	r1, #0
 8001fd0:	e012      	b.n	8001ff8 <??evnt_schdlr_extend_gnrc_evnt_durn_2>

08001fd2 <??evnt_schdlr_extend_gnrc_evnt_durn_1>:
 8001fd2:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8001fd4:	464a      	mov	r2, r9
 8001fd6:	4641      	mov	r1, r8
 8001fd8:	6b5e      	ldr	r6, [r3, #52]	; 0x34
 8001fda:	4620      	mov	r0, r4
 8001fdc:	47b0      	blx	r6
 8001fde:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8001fe0:	4606      	mov	r6, r0
 8001fe2:	4620      	mov	r0, r4
 8001fe4:	6b5c      	ldr	r4, [r3, #52]	; 0x34
 8001fe6:	ebc6 1646 	rsb	r6, r6, r6, lsl #5
 8001fea:	464a      	mov	r2, r9
 8001fec:	4641      	mov	r1, r8
 8001fee:	47a0      	blx	r4
 8001ff0:	eb16 0090 	adds.w	r0, r6, r0, lsr #2
 8001ff4:	4629      	mov	r1, r5
 8001ff6:	d100      	bne.n	8001ffa <??evnt_schdlr_extend_gnrc_evnt_durn_3>

08001ff8 <??evnt_schdlr_extend_gnrc_evnt_durn_2>:
 8001ff8:	251f      	movs	r5, #31

08001ffa <??evnt_schdlr_extend_gnrc_evnt_durn_3>:
 8001ffa:	e9ca 0100 	strd	r0, r1, [sl]
 8001ffe:	4628      	mov	r0, r5
 8002000:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}

08002004 <??DataTable23>:
 8002004:	6e98 8312                                   .n..

08002008 <evnt_schdlr_unrgstr_gnrc_evnt>:
 8002008:	f7ff ba75 	b.w	80014f6 <evnt_schdlr_unrgstr_evnt>

0800200c <evnt_schdlr_rgstr_gnrc_evnt>:
 800200c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800200e:	b084      	sub	sp, #16
 8002010:	4604      	mov	r4, r0
 8002012:	2500      	movs	r5, #0
 8002014:	b104      	cbz	r4, 8002018 <??evnt_schdlr_rgstr_gnrc_evnt_0>
 8002016:	2001      	movs	r0, #1

08002018 <??evnt_schdlr_rgstr_gnrc_evnt_0>:
 8002018:	f7fe f8da 	bl	80001d0 <bsp_assert>
 800201c:	2005      	movs	r0, #5
 800201e:	f884 0025 	strb.w	r0, [r4, #37]	; 0x25
 8002022:	e9d4 6702 	ldrd	r6, r7, [r4, #8]
 8002026:	2f00      	cmp	r7, #0
 8002028:	bf08      	it	eq
 800202a:	2e00      	cmpeq	r6, #0
 800202c:	d00a      	beq.n	8002044 <??evnt_schdlr_rgstr_gnrc_evnt_1>
 800202e:	e9d4 0104 	ldrd	r0, r1, [r4, #16]
 8002032:	2900      	cmp	r1, #0
 8002034:	bf08      	it	eq
 8002036:	2800      	cmpeq	r0, #0
 8002038:	d004      	beq.n	8002044 <??evnt_schdlr_rgstr_gnrc_evnt_1>
 800203a:	42b9      	cmp	r1, r7
 800203c:	d342      	bcc.n	80020c4 <??evnt_schdlr_rgstr_gnrc_evnt_2>
 800203e:	d801      	bhi.n	8002044 <??evnt_schdlr_rgstr_gnrc_evnt_1>
 8002040:	42b0      	cmp	r0, r6
 8002042:	d33f      	bcc.n	80020c4 <??evnt_schdlr_rgstr_gnrc_evnt_2>

08002044 <??evnt_schdlr_rgstr_gnrc_evnt_1>:
 8002044:	69a2      	ldr	r2, [r4, #24]
 8002046:	2a00      	cmp	r2, #0
 8002048:	d03c      	beq.n	80020c4 <??evnt_schdlr_rgstr_gnrc_evnt_2>
 800204a:	69e0      	ldr	r0, [r4, #28]
 800204c:	b108      	cbz	r0, 8002052 <??evnt_schdlr_rgstr_gnrc_evnt_3>
 800204e:	4290      	cmp	r0, r2
 8002050:	d338      	bcc.n	80020c4 <??evnt_schdlr_rgstr_gnrc_evnt_2>

08002052 <??evnt_schdlr_rgstr_gnrc_evnt_3>:
 8002052:	e9d4 0100 	ldrd	r0, r1, [r4]
 8002056:	2900      	cmp	r1, #0
 8002058:	bf08      	it	eq
 800205a:	2800      	cmpeq	r0, #0
 800205c:	d006      	beq.n	800206c <??evnt_schdlr_rgstr_gnrc_evnt_4>
 800205e:	18b6      	adds	r6, r6, r2
 8002060:	416f      	adcs	r7, r5
 8002062:	42b9      	cmp	r1, r7
 8002064:	d32e      	bcc.n	80020c4 <??evnt_schdlr_rgstr_gnrc_evnt_2>
 8002066:	d801      	bhi.n	800206c <??evnt_schdlr_rgstr_gnrc_evnt_4>
 8002068:	42b0      	cmp	r0, r6
 800206a:	d32b      	bcc.n	80020c4 <??evnt_schdlr_rgstr_gnrc_evnt_2>

0800206c <??evnt_schdlr_rgstr_gnrc_evnt_4>:
 800206c:	6a20      	ldr	r0, [r4, #32]
 800206e:	b150      	cbz	r0, 8002086 <??evnt_schdlr_rgstr_gnrc_evnt_5>
 8002070:	f8df 13cc 	ldr.w	r1, [pc, #972]	; 8002440 <??DataTable37_4>
 8002074:	6c8b      	ldr	r3, [r1, #72]	; 0x48
 8002076:	3314      	adds	r3, #20
 8002078:	ebc3 1143 	rsb	r1, r3, r3, lsl #5
 800207c:	188a      	adds	r2, r1, r2
 800207e:	eb02 0293 	add.w	r2, r2, r3, lsr #2
 8002082:	4290      	cmp	r0, r2
 8002084:	d31e      	bcc.n	80020c4 <??evnt_schdlr_rgstr_gnrc_evnt_2>

08002086 <??evnt_schdlr_rgstr_gnrc_evnt_5>:
 8002086:	6ae0      	ldr	r0, [r4, #44]	; 0x2c
 8002088:	b1e0      	cbz	r0, 80020c4 <??evnt_schdlr_rgstr_gnrc_evnt_2>
 800208a:	a803      	add	r0, sp, #12
 800208c:	f00a f805 	bl	800c09a <llhwc_slptmr_get>
 8002090:	e9d4 0104 	ldrd	r0, r1, [r4, #16]
 8002094:	2900      	cmp	r1, #0
 8002096:	bf08      	it	eq
 8002098:	2800      	cmpeq	r0, #0
 800209a:	d009      	beq.n	80020b0 <??evnt_schdlr_rgstr_gnrc_evnt_6>
 800209c:	f00a ff6c 	bl	800cf78 <US_TO_SLP_TMR_PROTECTED>
 80020a0:	9903      	ldr	r1, [sp, #12]
 80020a2:	1d49      	adds	r1, r1, #5
 80020a4:	4288      	cmp	r0, r1
 80020a6:	d203      	bcs.n	80020b0 <??evnt_schdlr_rgstr_gnrc_evnt_6>
 80020a8:	2003      	movs	r0, #3
 80020aa:	f884 0025 	strb.w	r0, [r4, #37]	; 0x25
 80020ae:	e009      	b.n	80020c4 <??evnt_schdlr_rgstr_gnrc_evnt_2>

080020b0 <??evnt_schdlr_rgstr_gnrc_evnt_6>:
 80020b0:	2000      	movs	r0, #0
 80020b2:	9502      	str	r5, [sp, #8]
 80020b4:	9001      	str	r0, [sp, #4]
 80020b6:	9000      	str	r0, [sp, #0]
 80020b8:	2300      	movs	r3, #0
 80020ba:	4622      	mov	r2, r4
 80020bc:	2101      	movs	r1, #1
 80020be:	f7ff f91b 	bl	80012f8 <evnt_schdlr_rgstr_evnt>
 80020c2:	4605      	mov	r5, r0

080020c4 <??evnt_schdlr_rgstr_gnrc_evnt_2>:
 80020c4:	4628      	mov	r0, r5
 80020c6:	b005      	add	sp, #20
 80020c8:	bdf0      	pop	{r4, r5, r6, r7, pc}
	...

080020cc <??DataTable24>:
 80020cc:	0000 2000                                   ... 

080020d0 <??DataTable24_1>:
 80020d0:	05fd 0800                                   ....

080020d4 <evnt_schdlr_rgstr_on_idle_evnt>:
 80020d4:	b530      	push	{r4, r5, lr}
 80020d6:	b083      	sub	sp, #12
 80020d8:	4604      	mov	r4, r0
 80020da:	2500      	movs	r5, #0
 80020dc:	b104      	cbz	r4, 80020e0 <??evnt_schdlr_rgstr_on_idle_evnt_0>
 80020de:	2001      	movs	r0, #1

080020e0 <??evnt_schdlr_rgstr_on_idle_evnt_0>:
 80020e0:	f7fe f876 	bl	80001d0 <bsp_assert>
 80020e4:	6ae0      	ldr	r0, [r4, #44]	; 0x2c
 80020e6:	2800      	cmp	r0, #0
 80020e8:	bf1c      	itt	ne
 80020ea:	6b60      	ldrne	r0, [r4, #52]	; 0x34
 80020ec:	2800      	cmpne	r0, #0
 80020ee:	d00a      	beq.n	8002106 <??evnt_schdlr_rgstr_on_idle_evnt_1>
 80020f0:	2100      	movs	r1, #0
 80020f2:	9102      	str	r1, [sp, #8]
 80020f4:	9101      	str	r1, [sp, #4]
 80020f6:	9100      	str	r1, [sp, #0]
 80020f8:	2300      	movs	r3, #0
 80020fa:	4622      	mov	r2, r4
 80020fc:	f04f 4080 	mov.w	r0, #1073741824	; 0x40000000
 8002100:	f7ff f8fa 	bl	80012f8 <evnt_schdlr_rgstr_evnt>
 8002104:	4605      	mov	r5, r0

08002106 <??evnt_schdlr_rgstr_on_idle_evnt_1>:
 8002106:	4628      	mov	r0, r5
 8002108:	b003      	add	sp, #12
 800210a:	bd30      	pop	{r4, r5, pc}

0800210c <evnt_schdlr_gnrc_evnt_cmplt>:
 800210c:	b558      	push	{r3, r4, r6, lr}
 800210e:	0004      	movs	r4, r0
 8002110:	bf14      	ite	ne
 8002112:	2001      	movne	r0, #1
 8002114:	2000      	moveq	r0, #0
 8002116:	f7fe f85b 	bl	80001d0 <bsp_assert>
 800211a:	e9d4 0124 	ldrd	r0, r1, [r4, #144]	; 0x90
 800211e:	2200      	movs	r2, #0
 8002120:	2301      	movs	r3, #1
 8002122:	4299      	cmp	r1, r3
 8002124:	bf08      	it	eq
 8002126:	4290      	cmpeq	r0, r2
 8002128:	d005      	beq.n	8002136 <??evnt_schdlr_gnrc_evnt_cmplt_0>
 800212a:	f04f 4680 	mov.w	r6, #1073741824	; 0x40000000
 800212e:	4291      	cmp	r1, r2
 8002130:	bf08      	it	eq
 8002132:	42b0      	cmpeq	r0, r6
 8002134:	d101      	bne.n	800213a <??evnt_schdlr_gnrc_evnt_cmplt_1>

08002136 <??evnt_schdlr_gnrc_evnt_cmplt_0>:
 8002136:	2001      	movs	r0, #1
 8002138:	e000      	b.n	800213c <??evnt_schdlr_gnrc_evnt_cmplt_2>

0800213a <??evnt_schdlr_gnrc_evnt_cmplt_1>:
 800213a:	2000      	movs	r0, #0

0800213c <??evnt_schdlr_gnrc_evnt_cmplt_2>:
 800213c:	f7fe f848 	bl	80001d0 <bsp_assert>
 8002140:	e9d4 0124 	ldrd	r0, r1, [r4, #144]	; 0x90
 8002144:	2200      	movs	r2, #0
 8002146:	2301      	movs	r3, #1
 8002148:	4299      	cmp	r1, r3
 800214a:	bf08      	it	eq
 800214c:	4290      	cmpeq	r0, r2
 800214e:	d106      	bne.n	800215e <??evnt_schdlr_gnrc_evnt_cmplt_3>
 8002150:	68a0      	ldr	r0, [r4, #8]
 8002152:	b920      	cbnz	r0, 800215e <??evnt_schdlr_gnrc_evnt_cmplt_3>
 8002154:	4620      	mov	r0, r4
 8002156:	e8bd 4052 	ldmia.w	sp!, {r1, r4, r6, lr}
 800215a:	f7ff b9cc 	b.w	80014f6 <evnt_schdlr_unrgstr_evnt>

0800215e <??evnt_schdlr_gnrc_evnt_cmplt_3>:
 800215e:	4620      	mov	r0, r4
 8002160:	e8bd 4052 	ldmia.w	sp!, {r1, r4, r6, lr}
 8002164:	e62d      	b.n	8001dc2 <evnt_schdlr_evnt_updtd>

08002166 <evnt_schdlr_confrm_grant>:
 8002166:	49b6      	ldr	r1, [pc, #728]	; (8002440 <??DataTable37_4>)
 8002168:	6a8a      	ldr	r2, [r1, #40]	; 0x28
 800216a:	4290      	cmp	r0, r2
 800216c:	d101      	bne.n	8002172 <??evnt_schdlr_confrm_grant_0>
 800216e:	2001      	movs	r0, #1
 8002170:	4770      	bx	lr

08002172 <??evnt_schdlr_confrm_grant_0>:
 8002172:	2000      	movs	r0, #0
 8002174:	4770      	bx	lr

08002176 <evnt_schdlr_set_phy_clbr_params>:
 8002176:	f44f 42fa 	mov.w	r2, #32000	; 0x7d00
 800217a:	4350      	muls	r0, r2
 800217c:	4bb0      	ldr	r3, [pc, #704]	; (8002440 <??DataTable37_4>)
 800217e:	6419      	str	r1, [r3, #64]	; 0x40
 8002180:	63d8      	str	r0, [r3, #60]	; 0x3c
 8002182:	6bd8      	ldr	r0, [r3, #60]	; 0x3c
 8002184:	6459      	str	r1, [r3, #68]	; 0x44
 8002186:	2800      	cmp	r0, #0
 8002188:	bf08      	it	eq
 800218a:	f009 bd3c 	beq.w	800bc06 <llhwc_prdc_clbr_deinit>
 800218e:	f009 bd32 	b.w	800bbf6 <llhwc_prdc_clbr_init>

08002192 <evnt_schdlr_set_dp_slp_mode>:
 8002192:	b570      	push	{r4, r5, r6, lr}
 8002194:	4605      	mov	r5, r0
 8002196:	4eaa      	ldr	r6, [pc, #680]	; (8002440 <??DataTable37_4>)
 8002198:	6ab0      	ldr	r0, [r6, #40]	; 0x28
 800219a:	b140      	cbz	r0, 80021ae <??evnt_schdlr_set_dp_slp_mode_0>
 800219c:	f890 008b 	ldrb.w	r0, [r0, #139]	; 0x8b
 80021a0:	2801      	cmp	r0, #1
 80021a2:	d104      	bne.n	80021ae <??evnt_schdlr_set_dp_slp_mode_0>
 80021a4:	2040      	movs	r0, #64	; 0x40
 80021a6:	240c      	movs	r4, #12
 80021a8:	f7fe f842 	bl	8000230 <bsp_debug_gpio_toggle>
 80021ac:	e016      	b.n	80021dc <??evnt_schdlr_set_dp_slp_mode_1>

080021ae <??evnt_schdlr_set_dp_slp_mode_0>:
 80021ae:	4628      	mov	r0, r5
 80021b0:	f00a f820 	bl	800c1f4 <llhwc_cmn_set_dp_slp_mode>
 80021b4:	0004      	movs	r4, r0
 80021b6:	bf08      	it	eq
 80021b8:	2d00      	cmpeq	r5, #0
 80021ba:	d10f      	bne.n	80021dc <??evnt_schdlr_set_dp_slp_mode_1>
 80021bc:	6a70      	ldr	r0, [r6, #36]	; 0x24
 80021be:	6a01      	ldr	r1, [r0, #32]
 80021c0:	4788      	blx	r1
 80021c2:	b918      	cbnz	r0, 80021cc <??evnt_schdlr_set_dp_slp_mode_2>
 80021c4:	6a70      	ldr	r0, [r6, #36]	; 0x24
 80021c6:	6a41      	ldr	r1, [r0, #36]	; 0x24
 80021c8:	4788      	blx	r1
 80021ca:	b138      	cbz	r0, 80021dc <??evnt_schdlr_set_dp_slp_mode_1>

080021cc <??evnt_schdlr_set_dp_slp_mode_2>:
 80021cc:	2001      	movs	r0, #1
 80021ce:	f000 feff 	bl	8002fd0 <evnt_util_set_prdc_clbr_exce_state>
 80021d2:	f7fe fa34 	bl	800063e <evnt_schdlr_hndl_next_evnt>
 80021d6:	2000      	movs	r0, #0
 80021d8:	f000 fefa 	bl	8002fd0 <evnt_util_set_prdc_clbr_exce_state>

080021dc <??evnt_schdlr_set_dp_slp_mode_1>:
 80021dc:	4620      	mov	r0, r4
 80021de:	bd70      	pop	{r4, r5, r6, pc}

080021e0 <evnt_schdlr_get_remaining_time_for_next_event>:
 80021e0:	e92d 43fe 	stmdb	sp!, {r1, r2, r3, r4, r5, r6, r7, r8, r9, lr}
 80021e4:	4606      	mov	r6, r0
 80021e6:	2000      	movs	r0, #0
 80021e8:	9001      	str	r0, [sp, #4]
 80021ea:	f012 f934 	bl	8014456 <os_disable_isr>
 80021ee:	f003 f9ef 	bl	80055d0 <os_timer_get_earliest_time>
 80021f2:	4680      	mov	r8, r0
 80021f4:	4689      	mov	r9, r1
 80021f6:	4668      	mov	r0, sp
 80021f8:	f009 ff04 	bl	800c004 <llhwc_get_dtm_curr_mode>
 80021fc:	4f90      	ldr	r7, [pc, #576]	; (8002440 <??DataTable37_4>)
 80021fe:	6ab8      	ldr	r0, [r7, #40]	; 0x28
 8002200:	2400      	movs	r4, #0
 8002202:	b118      	cbz	r0, 800220c <??evnt_schdlr_get_remaining_time_for_next_event_0>
 8002204:	f890 008b 	ldrb.w	r0, [r0, #139]	; 0x8b
 8002208:	2801      	cmp	r0, #1
 800220a:	d01b      	beq.n	8002244 <??evnt_schdlr_get_remaining_time_for_next_event_1>

0800220c <??evnt_schdlr_get_remaining_time_for_next_event_0>:
 800220c:	9800      	ldr	r0, [sp, #0]
 800220e:	f5b0 7f00 	cmp.w	r0, #512	; 0x200
 8002212:	bf18      	it	ne
 8002214:	f5b0 6f80 	cmpne.w	r0, #1024	; 0x400
 8002218:	d014      	beq.n	8002244 <??evnt_schdlr_get_remaining_time_for_next_event_1>
 800221a:	6a78      	ldr	r0, [r7, #36]	; 0x24
 800221c:	6881      	ldr	r1, [r0, #8]
 800221e:	4788      	blx	r1
 8002220:	b170      	cbz	r0, 8002240 <??evnt_schdlr_get_remaining_time_for_next_event_2>
 8002222:	6d05      	ldr	r5, [r0, #80]	; 0x50
 8002224:	a801      	add	r0, sp, #4
 8002226:	f009 ff38 	bl	800c09a <llhwc_slptmr_get>
 800222a:	9801      	ldr	r0, [sp, #4]
 800222c:	6cb9      	ldr	r1, [r7, #72]	; 0x48
 800222e:	1a2d      	subs	r5, r5, r0
 8002230:	428d      	cmp	r5, r1
 8002232:	d307      	bcc.n	8002244 <??evnt_schdlr_get_remaining_time_for_next_event_1>
 8002234:	1a6d      	subs	r5, r5, r1
 8002236:	ebc5 1445 	rsb	r4, r5, r5, lsl #5
 800223a:	eb04 0495 	add.w	r4, r4, r5, lsr #2
 800223e:	e001      	b.n	8002244 <??evnt_schdlr_get_remaining_time_for_next_event_1>

08002240 <??evnt_schdlr_get_remaining_time_for_next_event_2>:
 8002240:	f04f 34ff 	mov.w	r4, #4294967295	; 0xffffffff

08002244 <??evnt_schdlr_get_remaining_time_for_next_event_1>:
 8002244:	2500      	movs	r5, #0
 8002246:	45a9      	cmp	r9, r5
 8002248:	d802      	bhi.n	8002250 <??evnt_schdlr_get_remaining_time_for_next_event_3>
 800224a:	45a0      	cmp	r8, r4
 800224c:	bf38      	it	cc
 800224e:	4644      	movcc	r4, r8

08002250 <??evnt_schdlr_get_remaining_time_for_next_event_3>:
 8002250:	6034      	str	r4, [r6, #0]
 8002252:	f012 f902 	bl	801445a <os_enable_isr>
 8002256:	2000      	movs	r0, #0
 8002258:	b003      	add	sp, #12
 800225a:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}

0800225e <evnt_schdlr_select_tx_power_mode>:
 800225e:	b538      	push	{r3, r4, r5, lr}
 8002260:	4d78      	ldr	r5, [pc, #480]	; (8002444 <??DataTable37_5>)
 8002262:	6828      	ldr	r0, [r5, #0]
 8002264:	2400      	movs	r4, #0
 8002266:	6a02      	ldr	r2, [r0, #32]
 8002268:	4790      	blx	r2
 800226a:	7d29      	ldrb	r1, [r5, #20]
 800226c:	1a40      	subs	r0, r0, r1
 800226e:	b2c0      	uxtb	r0, r0
 8002270:	b118      	cbz	r0, 800227a <??evnt_schdlr_select_tx_power_mode_0>
 8002272:	2040      	movs	r0, #64	; 0x40
 8002274:	240c      	movs	r4, #12
 8002276:	f7fd ffdb 	bl	8000230 <bsp_debug_gpio_toggle>

0800227a <??evnt_schdlr_select_tx_power_mode_0>:
 800227a:	4620      	mov	r0, r4
 800227c:	bd32      	pop	{r1, r4, r5, pc}

0800227e <evnt_schdlr_set_setup_time>:
 800227e:	0080      	lsls	r0, r0, #2
 8002280:	4a71      	ldr	r2, [pc, #452]	; (8002448 <??DataTable37_6>)
 8002282:	fba0 2102 	umull	r2, r1, r0, r2
 8002286:	4b6e      	ldr	r3, [pc, #440]	; (8002440 <??DataTable37_4>)
 8002288:	0988      	lsrs	r0, r1, #6
 800228a:	6498      	str	r0, [r3, #72]	; 0x48
 800228c:	2000      	movs	r0, #0
 800228e:	4770      	bx	lr

08002290 <evnt_schdlr_check_start_energy_detection>:
 8002290:	486b      	ldr	r0, [pc, #428]	; (8002440 <??DataTable37_4>)
 8002292:	b510      	push	{r4, lr}
 8002294:	6a41      	ldr	r1, [r0, #36]	; 0x24
 8002296:	2400      	movs	r4, #0
 8002298:	6a08      	ldr	r0, [r1, #32]
 800229a:	4780      	blx	r0
 800229c:	b100      	cbz	r0, 80022a0 <??evnt_schdlr_check_start_energy_detection_0>
 800229e:	240c      	movs	r4, #12

080022a0 <??evnt_schdlr_check_start_energy_detection_0>:
 80022a0:	2040      	movs	r0, #64	; 0x40
 80022a2:	f7fd ffc5 	bl	8000230 <bsp_debug_gpio_toggle>
 80022a6:	4620      	mov	r0, r4
 80022a8:	bd10      	pop	{r4, pc}

080022aa <evnt_schdlr_set_pndg_evnts>:
 80022aa:	4968      	ldr	r1, [pc, #416]	; (800244c <??DataTable37_7>)
 80022ac:	7008      	strb	r0, [r1, #0]
 80022ae:	4770      	bx	lr

080022b0 <evnt_schdlr_do_events_exist>:
 80022b0:	b580      	push	{r7, lr}
 80022b2:	4863      	ldr	r0, [pc, #396]	; (8002440 <??DataTable37_4>)
 80022b4:	6a41      	ldr	r1, [r0, #36]	; 0x24
 80022b6:	6a08      	ldr	r0, [r1, #32]
 80022b8:	4780      	blx	r0
 80022ba:	1e40      	subs	r0, r0, #1
 80022bc:	4180      	sbcs	r0, r0
 80022be:	43c0      	mvns	r0, r0
 80022c0:	0fc0      	lsrs	r0, r0, #31
 80022c2:	bd02      	pop	{r1, pc}

080022c4 <??DataTable33>:
 80022c4:	0642 2000                                   B.. 

080022c8 <evnt_schdlr_set_end_of_activity_mask>:
 80022c8:	4961      	ldr	r1, [pc, #388]	; (8002450 <??DataTable37_8>)
 80022ca:	8008      	strh	r0, [r1, #0]
 80022cc:	4770      	bx	lr

080022ce <evnt_schdlr_rgstr_end_of_activity_cbk>:
 80022ce:	495c      	ldr	r1, [pc, #368]	; (8002440 <??DataTable37_4>)
 80022d0:	64c8      	str	r0, [r1, #76]	; 0x4c
 80022d2:	4770      	bx	lr

080022d4 <evnt_schdlr_get_end_of_activity_state>:
 80022d4:	b430      	push	{r4, r5}
 80022d6:	4d5e      	ldr	r5, [pc, #376]	; (8002450 <??DataTable37_8>)
 80022d8:	882c      	ldrh	r4, [r5, #0]
 80022da:	f64f 73ff 	movw	r3, #65535	; 0xffff
 80022de:	b36c      	cbz	r4, 800233c <??evnt_schdlr_get_end_of_activity_state_0>
 80022e0:	bb61      	cbnz	r1, 800233c <??evnt_schdlr_get_end_of_activity_state_0>
 80022e2:	2801      	cmp	r0, #1
 80022e4:	bf18      	it	ne
 80022e6:	2802      	cmpne	r0, #2
 80022e8:	d00d      	beq.n	8002306 <??evnt_schdlr_get_end_of_activity_state_1>
 80022ea:	2804      	cmp	r0, #4
 80022ec:	bf18      	it	ne
 80022ee:	2808      	cmpne	r0, #8
 80022f0:	d009      	beq.n	8002306 <??evnt_schdlr_get_end_of_activity_state_1>
 80022f2:	2810      	cmp	r0, #16
 80022f4:	bf18      	it	ne
 80022f6:	2820      	cmpne	r0, #32
 80022f8:	d013      	beq.n	8002322 <??evnt_schdlr_get_end_of_activity_state_2>
 80022fa:	2880      	cmp	r0, #128	; 0x80
 80022fc:	d018      	beq.n	8002330 <??evnt_schdlr_get_end_of_activity_state_3>
 80022fe:	f5b0 7f80 	cmp.w	r0, #256	; 0x100
 8002302:	d007      	beq.n	8002314 <??evnt_schdlr_get_end_of_activity_state_4>
 8002304:	e01a      	b.n	800233c <??evnt_schdlr_get_end_of_activity_state_0>

08002306 <??evnt_schdlr_get_end_of_activity_state_1>:
 8002306:	b11a      	cbz	r2, 8002310 <??evnt_schdlr_get_end_of_activity_state_5>
 8002308:	7828      	ldrb	r0, [r5, #0]
 800230a:	f3c0 0040 	ubfx	r0, r0, #1, #1
 800230e:	b1a8      	cbz	r0, 800233c <??evnt_schdlr_get_end_of_activity_state_0>

08002310 <??evnt_schdlr_get_end_of_activity_state_5>:
 8002310:	2301      	movs	r3, #1
 8002312:	e013      	b.n	800233c <??evnt_schdlr_get_end_of_activity_state_0>

08002314 <??evnt_schdlr_get_end_of_activity_state_4>:
 8002314:	b11a      	cbz	r2, 800231e <??evnt_schdlr_get_end_of_activity_state_6>
 8002316:	7828      	ldrb	r0, [r5, #0]
 8002318:	f3c0 0080 	ubfx	r0, r0, #2, #1
 800231c:	b170      	cbz	r0, 800233c <??evnt_schdlr_get_end_of_activity_state_0>

0800231e <??evnt_schdlr_get_end_of_activity_state_6>:
 800231e:	2302      	movs	r3, #2
 8002320:	e00c      	b.n	800233c <??evnt_schdlr_get_end_of_activity_state_0>

08002322 <??evnt_schdlr_get_end_of_activity_state_2>:
 8002322:	b11a      	cbz	r2, 800232c <??evnt_schdlr_get_end_of_activity_state_7>
 8002324:	7828      	ldrb	r0, [r5, #0]
 8002326:	f3c0 00c0 	ubfx	r0, r0, #3, #1
 800232a:	b138      	cbz	r0, 800233c <??evnt_schdlr_get_end_of_activity_state_0>

0800232c <??evnt_schdlr_get_end_of_activity_state_7>:
 800232c:	2303      	movs	r3, #3
 800232e:	e005      	b.n	800233c <??evnt_schdlr_get_end_of_activity_state_0>

08002330 <??evnt_schdlr_get_end_of_activity_state_3>:
 8002330:	b11a      	cbz	r2, 800233a <??evnt_schdlr_get_end_of_activity_state_8>
 8002332:	7828      	ldrb	r0, [r5, #0]
 8002334:	f3c0 1040 	ubfx	r0, r0, #5, #1
 8002338:	b100      	cbz	r0, 800233c <??evnt_schdlr_get_end_of_activity_state_0>

0800233a <??evnt_schdlr_get_end_of_activity_state_8>:
 800233a:	2305      	movs	r3, #5

0800233c <??evnt_schdlr_get_end_of_activity_state_0>:
 800233c:	4618      	mov	r0, r3
 800233e:	bc30      	pop	{r4, r5}
 8002340:	4770      	bx	lr
	...

08002344 <??DataTable36>:
 8002344:	0034 2000                                   4.. 

08002348 <??DataTable36_1>:
 8002348:	0840 2000                                   @.. 

0800234c <evnt_schdlr_call_end_of_activity_callback>:
 800234c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8002350:	4606      	mov	r6, r0
 8002352:	4f3b      	ldr	r7, [pc, #236]	; (8002440 <??DataTable37_4>)
 8002354:	6cf8      	ldr	r0, [r7, #76]	; 0x4c
 8002356:	2500      	movs	r5, #0
 8002358:	4688      	mov	r8, r1
 800235a:	f04f 34ff 	mov.w	r4, #4294967295	; 0xffffffff
 800235e:	2800      	cmp	r0, #0
 8002360:	d064      	beq.n	800242c <??evnt_schdlr_call_end_of_activity_callback_0>
 8002362:	6ab8      	ldr	r0, [r7, #40]	; 0x28
 8002364:	b920      	cbnz	r0, 8002370 <??evnt_schdlr_call_end_of_activity_callback_1>
 8002366:	6a78      	ldr	r0, [r7, #36]	; 0x24
 8002368:	b120      	cbz	r0, 8002374 <??evnt_schdlr_call_end_of_activity_callback_2>
 800236a:	6880      	ldr	r0, [r0, #8]
 800236c:	4780      	blx	r0
 800236e:	b108      	cbz	r0, 8002374 <??evnt_schdlr_call_end_of_activity_callback_2>

08002370 <??evnt_schdlr_call_end_of_activity_callback_1>:
 8002370:	e9d0 4524 	ldrd	r4, r5, [r0, #144]	; 0x90

08002374 <??evnt_schdlr_call_end_of_activity_callback_2>:
 8002374:	f8df c0d8 	ldr.w	ip, [pc, #216]	; 8002450 <??DataTable37_8>
 8002378:	f8bc 0000 	ldrh.w	r0, [ip]
 800237c:	f64f 73ff 	movw	r3, #65535	; 0xffff
 8002380:	461a      	mov	r2, r3
 8002382:	2800      	cmp	r0, #0
 8002384:	d052      	beq.n	800242c <??evnt_schdlr_call_end_of_activity_callback_0>
 8002386:	ea5f 0108 	movs.w	r1, r8
 800238a:	d12c      	bne.n	80023e6 <??evnt_schdlr_call_end_of_activity_callback_3>
 800238c:	2e01      	cmp	r6, #1
 800238e:	bf18      	it	ne
 8002390:	2e02      	cmpne	r6, #2
 8002392:	d022      	beq.n	80023da <??evnt_schdlr_call_end_of_activity_callback_4>
 8002394:	2e04      	cmp	r6, #4
 8002396:	bf18      	it	ne
 8002398:	2e08      	cmpne	r6, #8
 800239a:	d01e      	beq.n	80023da <??evnt_schdlr_call_end_of_activity_callback_4>
 800239c:	2e10      	cmp	r6, #16
 800239e:	bf18      	it	ne
 80023a0:	2e20      	cmpne	r6, #32
 80023a2:	d00c      	beq.n	80023be <??evnt_schdlr_call_end_of_activity_callback_5>
 80023a4:	2e80      	cmp	r6, #128	; 0x80
 80023a6:	d003      	beq.n	80023b0 <??evnt_schdlr_call_end_of_activity_callback_6>
 80023a8:	f5b6 7f80 	cmp.w	r6, #256	; 0x100
 80023ac:	d00e      	beq.n	80023cc <??evnt_schdlr_call_end_of_activity_callback_7>
 80023ae:	e01a      	b.n	80023e6 <??evnt_schdlr_call_end_of_activity_callback_3>

080023b0 <??evnt_schdlr_call_end_of_activity_callback_6>:
 80023b0:	f89c 0000 	ldrb.w	r0, [ip]
 80023b4:	f3c0 1040 	ubfx	r0, r0, #5, #1
 80023b8:	b1a8      	cbz	r0, 80023e6 <??evnt_schdlr_call_end_of_activity_callback_3>
 80023ba:	2205      	movs	r2, #5
 80023bc:	e013      	b.n	80023e6 <??evnt_schdlr_call_end_of_activity_callback_3>

080023be <??evnt_schdlr_call_end_of_activity_callback_5>:
 80023be:	f89c 0000 	ldrb.w	r0, [ip]
 80023c2:	f3c0 00c0 	ubfx	r0, r0, #3, #1
 80023c6:	b170      	cbz	r0, 80023e6 <??evnt_schdlr_call_end_of_activity_callback_3>
 80023c8:	2203      	movs	r2, #3
 80023ca:	e00c      	b.n	80023e6 <??evnt_schdlr_call_end_of_activity_callback_3>

080023cc <??evnt_schdlr_call_end_of_activity_callback_7>:
 80023cc:	f89c 0000 	ldrb.w	r0, [ip]
 80023d0:	f3c0 0080 	ubfx	r0, r0, #2, #1
 80023d4:	b138      	cbz	r0, 80023e6 <??evnt_schdlr_call_end_of_activity_callback_3>
 80023d6:	2202      	movs	r2, #2
 80023d8:	e005      	b.n	80023e6 <??evnt_schdlr_call_end_of_activity_callback_3>

080023da <??evnt_schdlr_call_end_of_activity_callback_4>:
 80023da:	f89c 0000 	ldrb.w	r0, [ip]
 80023de:	f3c0 0040 	ubfx	r0, r0, #1, #1
 80023e2:	b100      	cbz	r0, 80023e6 <??evnt_schdlr_call_end_of_activity_callback_3>
 80023e4:	2201      	movs	r2, #1

080023e6 <??evnt_schdlr_call_end_of_activity_callback_3>:
 80023e6:	4618      	mov	r0, r3
 80023e8:	0029      	movs	r1, r5
 80023ea:	d117      	bne.n	800241c <??evnt_schdlr_call_end_of_activity_callback_8>
 80023ec:	2c01      	cmp	r4, #1
 80023ee:	bf18      	it	ne
 80023f0:	2c02      	cmpne	r4, #2
 80023f2:	d012      	beq.n	800241a <??evnt_schdlr_call_end_of_activity_callback_9>
 80023f4:	2c04      	cmp	r4, #4
 80023f6:	bf18      	it	ne
 80023f8:	2c08      	cmpne	r4, #8
 80023fa:	d00e      	beq.n	800241a <??evnt_schdlr_call_end_of_activity_callback_9>
 80023fc:	2c10      	cmp	r4, #16
 80023fe:	bf18      	it	ne
 8002400:	2c20      	cmpne	r4, #32
 8002402:	d008      	beq.n	8002416 <??evnt_schdlr_call_end_of_activity_callback_10>
 8002404:	2c80      	cmp	r4, #128	; 0x80
 8002406:	d004      	beq.n	8002412 <??evnt_schdlr_call_end_of_activity_callback_11>
 8002408:	f5b4 7f80 	cmp.w	r4, #256	; 0x100
 800240c:	bf08      	it	eq
 800240e:	2002      	moveq	r0, #2
 8002410:	e004      	b.n	800241c <??evnt_schdlr_call_end_of_activity_callback_8>

08002412 <??evnt_schdlr_call_end_of_activity_callback_11>:
 8002412:	2005      	movs	r0, #5
 8002414:	e002      	b.n	800241c <??evnt_schdlr_call_end_of_activity_callback_8>

08002416 <??evnt_schdlr_call_end_of_activity_callback_10>:
 8002416:	2003      	movs	r0, #3
 8002418:	e000      	b.n	800241c <??evnt_schdlr_call_end_of_activity_callback_8>

0800241a <??evnt_schdlr_call_end_of_activity_callback_9>:
 800241a:	2001      	movs	r0, #1

0800241c <??evnt_schdlr_call_end_of_activity_callback_8>:
 800241c:	429a      	cmp	r2, r3
 800241e:	d005      	beq.n	800242c <??evnt_schdlr_call_end_of_activity_callback_0>
 8002420:	4601      	mov	r1, r0
 8002422:	4610      	mov	r0, r2
 8002424:	6cfa      	ldr	r2, [r7, #76]	; 0x4c
 8002426:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}

0800242a <__iar_annotation$$tailcall>:
 800242a:	4710      	bx	r2

0800242c <??evnt_schdlr_call_end_of_activity_callback_0>:
 800242c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

08002430 <??DataTable37>:
 8002430:	18c0 2000                                   ... 

08002434 <??DataTable37_1>:
 8002434:	0030 0f00                                   0...

08002438 <??DataTable37_2>:
 8002438:	0690 2000                                   ... 

0800243c <??DataTable37_3>:
 800243c:	0444 4802                                   D..H

08002440 <??DataTable37_4>:
 8002440:	0000 2000                                   ... 

08002444 <??DataTable37_5>:
 8002444:	0024 2000                                   $.. 

08002448 <??DataTable37_6>:
 8002448:	6e98 8312                                   .n..

0800244c <??DataTable37_7>:
 800244c:	0640 2000                                   @.. 

08002450 <??DataTable37_8>:
 8002450:	0642 2000                                   B.. 

08002454 <__iar_llswitch>:
 8002454:	b430      	push	{r4, r5}
 8002456:	f02e 0e01 	bic.w	lr, lr, #1

0800245a <??l1>:
 800245a:	e8be 1030 	ldmia.w	lr!, {r4, r5, ip}
 800245e:	42a0      	cmp	r0, r4
 8002460:	bf04      	itt	eq
 8002462:	42a9      	cmpeq	r1, r5
 8002464:	e003      	beq.n	800246e <??l2>
 8002466:	1e52      	subs	r2, r2, #1
 8002468:	d1f7      	bne.n	800245a <??l1>
 800246a:	f85e cb04 	ldr.w	ip, [lr], #4

0800246e <??l2>:
 800246e:	bc30      	pop	{r4, r5}
 8002470:	44e6      	add	lr, ip
 8002472:	4770      	bx	lr

08002474 <evnt_schdlr_alloc_evnt>:
 8002474:	b510      	push	{r4, lr}
 8002476:	f8df 0b10 	ldr.w	r0, [pc, #2832]	; 8002f88 <??DataTable51>
 800247a:	f002 fecd 	bl	8005218 <os_mem_pool_alloc>
 800247e:	0004      	movs	r4, r0
 8002480:	d003      	beq.n	800248a <??evnt_schdlr_alloc_evnt_0>
 8002482:	22a0      	movs	r2, #160	; 0xa0
 8002484:	2100      	movs	r1, #0
 8002486:	f00c fbb0 	bl	800ebea <ble_memset>

0800248a <??evnt_schdlr_alloc_evnt_0>:
 800248a:	4620      	mov	r0, r4
 800248c:	bd10      	pop	{r4, pc}

0800248e <evnt_schdlr_free_evnt>:
 800248e:	b510      	push	{r4, lr}
 8002490:	0004      	movs	r4, r0
 8002492:	d010      	beq.n	80024b6 <??evnt_schdlr_free_evnt_0>
 8002494:	e9d4 0124 	ldrd	r0, r1, [r4, #144]	; 0x90
 8002498:	f410 7fc0 	tst.w	r0, #384	; 0x180
 800249c:	d116      	bne.n	80024cc <??evnt_schdlr_free_evnt_1>

0800249e <??evnt_schdlr_free_evnt_2>:
 800249e:	e9d4 0124 	ldrd	r0, r1, [r4, #144]	; 0x90
 80024a2:	2900      	cmp	r1, #0
 80024a4:	bf08      	it	eq
 80024a6:	f5b0 5f00 	cmpeq.w	r0, #8192	; 0x2000
 80024aa:	d004      	beq.n	80024b6 <??evnt_schdlr_free_evnt_0>
 80024ac:	4620      	mov	r0, r4
 80024ae:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80024b2:	f002 beb3 	b.w	800521c <os_mem_pool_free>

080024b6 <??evnt_schdlr_free_evnt_0>:
 80024b6:	bd10      	pop	{r4, pc}

080024b8 <??evnt_schdlr_free_evnt_3>:
 80024b8:	f104 000c 	add.w	r0, r4, #12
 80024bc:	f000 fbb7 	bl	8002c2e <packet_dequeue>
 80024c0:	f8df 1ac8 	ldr.w	r1, [pc, #2760]	; 8002f8c <??DataTable51_1>
 80024c4:	4288      	cmp	r0, r1
 80024c6:	bf18      	it	ne
 80024c8:	f011 f84a 	blne	8013560 <free_buff_hdr>

080024cc <??evnt_schdlr_free_evnt_1>:
 80024cc:	68e0      	ldr	r0, [r4, #12]
 80024ce:	2800      	cmp	r0, #0
 80024d0:	d1f2      	bne.n	80024b8 <??evnt_schdlr_free_evnt_3>

080024d2 <??evnt_schdlr_free_evnt_4>:
 80024d2:	6fa0      	ldr	r0, [r4, #120]	; 0x78
 80024d4:	2800      	cmp	r0, #0
 80024d6:	d0e2      	beq.n	800249e <??evnt_schdlr_free_evnt_2>
 80024d8:	f104 0078 	add.w	r0, r4, #120	; 0x78
 80024dc:	f000 fba7 	bl	8002c2e <packet_dequeue>
 80024e0:	f8df 1aa8 	ldr.w	r1, [pc, #2728]	; 8002f8c <??DataTable51_1>
 80024e4:	4288      	cmp	r0, r1
 80024e6:	d0f4      	beq.n	80024d2 <??evnt_schdlr_free_evnt_4>
 80024e8:	f011 f83a 	bl	8013560 <free_buff_hdr>
 80024ec:	e7f1      	b.n	80024d2 <??evnt_schdlr_free_evnt_4>

080024ee <get_pkt_data>:
 80024ee:	b570      	push	{r4, r5, r6, lr}
 80024f0:	0006      	movs	r6, r0
 80024f2:	460d      	mov	r5, r1
 80024f4:	4614      	mov	r4, r2
 80024f6:	bf18      	it	ne
 80024f8:	2001      	movne	r0, #1
 80024fa:	f7fd fe69 	bl	80001d0 <bsp_assert>
 80024fe:	b11d      	cbz	r5, 8002508 <??get_pkt_data_0>
 8002500:	6830      	ldr	r0, [r6, #0]
 8002502:	8971      	ldrh	r1, [r6, #10]
 8002504:	4401      	add	r1, r0
 8002506:	6029      	str	r1, [r5, #0]

08002508 <??get_pkt_data_0>:
 8002508:	b10c      	cbz	r4, 800250e <??get_pkt_data_1>
 800250a:	89b0      	ldrh	r0, [r6, #12]
 800250c:	8020      	strh	r0, [r4, #0]

0800250e <??get_pkt_data_1>:
 800250e:	2000      	movs	r0, #0
 8002510:	bd70      	pop	{r4, r5, r6, pc}
	...

08002514 <get_sca_ppm>:
 8002514:	1e40      	subs	r0, r0, #1
 8002516:	2806      	cmp	r0, #6
 8002518:	d813      	bhi.n	8002542 <??get_sca_ppm_1>
 800251a:	e8df f000 	tbb	[pc, r0]

0800251e <??get_sca_ppm_0>:
 800251e:	0604 0a08 0e0c 0010                         ........

08002526 <??get_sca_ppm_2>:
 8002526:	20fa      	movs	r0, #250	; 0xfa
 8002528:	4770      	bx	lr

0800252a <??get_sca_ppm_3>:
 800252a:	2096      	movs	r0, #150	; 0x96
 800252c:	4770      	bx	lr

0800252e <??get_sca_ppm_4>:
 800252e:	2064      	movs	r0, #100	; 0x64
 8002530:	4770      	bx	lr

08002532 <??get_sca_ppm_5>:
 8002532:	204b      	movs	r0, #75	; 0x4b
 8002534:	4770      	bx	lr

08002536 <??get_sca_ppm_6>:
 8002536:	2032      	movs	r0, #50	; 0x32
 8002538:	4770      	bx	lr

0800253a <??get_sca_ppm_7>:
 800253a:	201e      	movs	r0, #30
 800253c:	4770      	bx	lr

0800253e <??get_sca_ppm_8>:
 800253e:	2014      	movs	r0, #20
 8002540:	4770      	bx	lr

08002542 <??get_sca_ppm_1>:
 8002542:	f44f 70fa 	mov.w	r0, #500	; 0x1f4
 8002546:	4770      	bx	lr

08002548 <evnt_schdlr_calc_wndw_widening>:
 8002548:	b570      	push	{r4, r5, r6, lr}
 800254a:	4604      	mov	r4, r0
 800254c:	460e      	mov	r6, r1
 800254e:	9d04      	ldr	r5, [sp, #16]
 8002550:	4611      	mov	r1, r2
 8002552:	4618      	mov	r0, r3
 8002554:	1c6d      	adds	r5, r5, #1
 8002556:	f012 f914 	bl	8014782 <ble_time_diff_us>
 800255a:	1934      	adds	r4, r6, r4
 800255c:	012d      	lsls	r5, r5, #4
 800255e:	f8df 2a30 	ldr.w	r2, [pc, #2608]	; 8002f90 <??DataTable51_2>
 8002562:	f8df 1a30 	ldr.w	r1, [pc, #2608]	; 8002f94 <??DataTable51_3>
 8002566:	4290      	cmp	r0, r2
 8002568:	d308      	bcc.n	800257c <??evnt_schdlr_calc_wndw_widening_0>
 800256a:	1808      	adds	r0, r1, r0
 800256c:	f8df 3a28 	ldr.w	r3, [pc, #2600]	; 8002f98 <??DataTable51_4>
 8002570:	fba0 3103 	umull	r3, r1, r0, r3
 8002574:	0cc8      	lsrs	r0, r1, #19
 8002576:	fb00 5404 	mla	r4, r0, r4, r5
 800257a:	e007      	b.n	800258c <??evnt_schdlr_calc_wndw_widening_1>

0800257c <??evnt_schdlr_calc_wndw_widening_0>:
 800257c:	fb00 1404 	mla	r4, r0, r4, r1
 8002580:	f8df 6a14 	ldr.w	r6, [pc, #2580]	; 8002f98 <??DataTable51_4>
 8002584:	fba4 6206 	umull	r6, r2, r4, r6
 8002588:	eb05 44d2 	add.w	r4, r5, r2, lsr #19

0800258c <??evnt_schdlr_calc_wndw_widening_1>:
 800258c:	4620      	mov	r0, r4
 800258e:	bd70      	pop	{r4, r5, r6, pc}

08002590 <evnt_schdlr_set_slave_conn_timers>:
 8002590:	e92d 47fc 	stmdb	sp!, {r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 8002594:	0004      	movs	r4, r0
 8002596:	f04f 0800 	mov.w	r8, #0
 800259a:	bf18      	it	ne
 800259c:	2001      	movne	r0, #1
 800259e:	f7fd fe17 	bl	80001d0 <bsp_assert>
 80025a2:	f8d4 e070 	ldr.w	lr, [r4, #112]	; 0x70
 80025a6:	f50e 7993 	add.w	r9, lr, #294	; 0x126
 80025aa:	f899 0000 	ldrb.w	r0, [r9]
 80025ae:	1e40      	subs	r0, r0, #1
 80025b0:	2806      	cmp	r0, #6
 80025b2:	d813      	bhi.n	80025dc <??evnt_schdlr_set_slave_conn_timers_2>
 80025b4:	e8df f000 	tbb	[pc, r0]

080025b8 <??evnt_schdlr_set_slave_conn_timers_0>:
 80025b8:	0e10 0a0c 0608 0004                         ........

080025c0 <??evnt_schdlr_set_slave_conn_timers_3>:
 80025c0:	2614      	movs	r6, #20
 80025c2:	e00d      	b.n	80025e0 <??evnt_schdlr_set_slave_conn_timers_4>

080025c4 <??evnt_schdlr_set_slave_conn_timers_5>:
 80025c4:	261e      	movs	r6, #30
 80025c6:	e00b      	b.n	80025e0 <??evnt_schdlr_set_slave_conn_timers_4>

080025c8 <??evnt_schdlr_set_slave_conn_timers_6>:
 80025c8:	2632      	movs	r6, #50	; 0x32
 80025ca:	e009      	b.n	80025e0 <??evnt_schdlr_set_slave_conn_timers_4>

080025cc <??evnt_schdlr_set_slave_conn_timers_7>:
 80025cc:	264b      	movs	r6, #75	; 0x4b
 80025ce:	e007      	b.n	80025e0 <??evnt_schdlr_set_slave_conn_timers_4>

080025d0 <??evnt_schdlr_set_slave_conn_timers_8>:
 80025d0:	2664      	movs	r6, #100	; 0x64
 80025d2:	e005      	b.n	80025e0 <??evnt_schdlr_set_slave_conn_timers_4>

080025d4 <??evnt_schdlr_set_slave_conn_timers_9>:
 80025d4:	2696      	movs	r6, #150	; 0x96
 80025d6:	e003      	b.n	80025e0 <??evnt_schdlr_set_slave_conn_timers_4>

080025d8 <??evnt_schdlr_set_slave_conn_timers_10>:
 80025d8:	26fa      	movs	r6, #250	; 0xfa
 80025da:	e001      	b.n	80025e0 <??evnt_schdlr_set_slave_conn_timers_4>

080025dc <??evnt_schdlr_set_slave_conn_timers_2>:
 80025dc:	f44f 76fa 	mov.w	r6, #500	; 0x1f4

080025e0 <??evnt_schdlr_set_slave_conn_timers_4>:
 80025e0:	f89e 0021 	ldrb.w	r0, [lr, #33]	; 0x21
 80025e4:	1e40      	subs	r0, r0, #1
 80025e6:	2806      	cmp	r0, #6
 80025e8:	d813      	bhi.n	8002612 <??evnt_schdlr_set_slave_conn_timers_11>
 80025ea:	e8df f000 	tbb	[pc, r0]

080025ee <??evnt_schdlr_set_slave_conn_timers_1>:
 80025ee:	0e10 0a0c 0608 0004                         ........

080025f6 <??evnt_schdlr_set_slave_conn_timers_12>:
 80025f6:	2714      	movs	r7, #20
 80025f8:	e00d      	b.n	8002616 <??evnt_schdlr_set_slave_conn_timers_13>

080025fa <??evnt_schdlr_set_slave_conn_timers_14>:
 80025fa:	271e      	movs	r7, #30
 80025fc:	e00b      	b.n	8002616 <??evnt_schdlr_set_slave_conn_timers_13>

080025fe <??evnt_schdlr_set_slave_conn_timers_15>:
 80025fe:	2732      	movs	r7, #50	; 0x32
 8002600:	e009      	b.n	8002616 <??evnt_schdlr_set_slave_conn_timers_13>

08002602 <??evnt_schdlr_set_slave_conn_timers_16>:
 8002602:	274b      	movs	r7, #75	; 0x4b
 8002604:	e007      	b.n	8002616 <??evnt_schdlr_set_slave_conn_timers_13>

08002606 <??evnt_schdlr_set_slave_conn_timers_17>:
 8002606:	2764      	movs	r7, #100	; 0x64
 8002608:	e005      	b.n	8002616 <??evnt_schdlr_set_slave_conn_timers_13>

0800260a <??evnt_schdlr_set_slave_conn_timers_18>:
 800260a:	2796      	movs	r7, #150	; 0x96
 800260c:	e003      	b.n	8002616 <??evnt_schdlr_set_slave_conn_timers_13>

0800260e <??evnt_schdlr_set_slave_conn_timers_19>:
 800260e:	27fa      	movs	r7, #250	; 0xfa
 8002610:	e001      	b.n	8002616 <??evnt_schdlr_set_slave_conn_timers_13>

08002612 <??evnt_schdlr_set_slave_conn_timers_11>:
 8002612:	f44f 77fa 	mov.w	r7, #500	; 0x1f4

08002616 <??evnt_schdlr_set_slave_conn_timers_13>:
 8002616:	f10e 0238 	add.w	r2, lr, #56	; 0x38
 800261a:	f104 0c58 	add.w	ip, r4, #88	; 0x58
 800261e:	f104 0a58 	add.w	sl, r4, #88	; 0x58
 8002622:	f8be 5016 	ldrh.w	r5, [lr, #22]
 8002626:	f240 40e2 	movw	r0, #1250	; 0x4e2
 800262a:	4345      	muls	r5, r0
 800262c:	e9d2 0100 	ldrd	r0, r1, [r2]
 8002630:	e9cc 0100 	strd	r0, r1, [ip]
 8002634:	e9da 2300 	ldrd	r2, r3, [sl]
 8002638:	f104 0050 	add.w	r0, r4, #80	; 0x50
 800263c:	106d      	asrs	r5, r5, #1
 800263e:	e9c0 2300 	strd	r2, r3, [r0]
 8002642:	f8be 1010 	ldrh.w	r1, [lr, #16]
 8002646:	2203      	movs	r2, #3
 8002648:	3d96      	subs	r5, #150	; 0x96
 800264a:	f012 f921 	bl	8014890 <ble_time_add_uint>
 800264e:	f899 0006 	ldrb.w	r0, [r9, #6]
 8002652:	2801      	cmp	r0, #1
 8002654:	bf08      	it	eq
 8002656:	f44f 71b0 	moveq.w	r1, #352	; 0x160
 800265a:	d004      	beq.n	8002666 <??evnt_schdlr_set_slave_conn_timers_20>
 800265c:	2802      	cmp	r0, #2
 800265e:	bf0c      	ite	eq
 8002660:	21b4      	moveq	r1, #180	; 0xb4
 8002662:	f240 31ee 	movwne	r1, #1006	; 0x3ee

08002666 <??evnt_schdlr_set_slave_conn_timers_20>:
 8002666:	2201      	movs	r2, #1
 8002668:	f104 0058 	add.w	r0, r4, #88	; 0x58
 800266c:	f012 f98e 	bl	801498c <ble_time_rmv_uint>
 8002670:	2001      	movs	r0, #1
 8002672:	9000      	str	r0, [sp, #0]
 8002674:	f104 0350 	add.w	r3, r4, #80	; 0x50
 8002678:	f104 0258 	add.w	r2, r4, #88	; 0x58
 800267c:	4639      	mov	r1, r7
 800267e:	4630      	mov	r0, r6
 8002680:	f7ff ff62 	bl	8002548 <evnt_schdlr_calc_wndw_widening>
 8002684:	6020      	str	r0, [r4, #0]
 8002686:	4285      	cmp	r5, r0
 8002688:	d205      	bcs.n	8002696 <??evnt_schdlr_set_slave_conn_timers_21>
 800268a:	2103      	movs	r1, #3
 800268c:	f884 1098 	strb.w	r1, [r4, #152]	; 0x98
 8002690:	f04f 081f 	mov.w	r8, #31
 8002694:	e015      	b.n	80026c2 <??evnt_schdlr_set_slave_conn_timers_22>

08002696 <??evnt_schdlr_set_slave_conn_timers_21>:
 8002696:	f899 0007 	ldrb.w	r0, [r9, #7]
 800269a:	2101      	movs	r1, #1
 800269c:	f00a f992 	bl	800c9c4 <llhwc_get_hw_setup_time>
 80026a0:	6821      	ldr	r1, [r4, #0]
 80026a2:	2201      	movs	r2, #1
 80026a4:	1841      	adds	r1, r0, r1
 80026a6:	f104 0050 	add.w	r0, r4, #80	; 0x50
 80026aa:	f012 f96f 	bl	801498c <ble_time_rmv_uint>
 80026ae:	2100      	movs	r1, #0
 80026b0:	4620      	mov	r0, r4
 80026b2:	f000 f9aa 	bl	8002a0a <evnt_schdlr_calc_conn_duration>
 80026b6:	f8df 28e4 	ldr.w	r2, [pc, #2276]	; 8002f9c <??DataTable51_5>
 80026ba:	6811      	ldr	r1, [r2, #0]
 80026bc:	1808      	adds	r0, r1, r0
 80026be:	3014      	adds	r0, #20
 80026c0:	6620      	str	r0, [r4, #96]	; 0x60

080026c2 <??evnt_schdlr_set_slave_conn_timers_22>:
 80026c2:	4640      	mov	r0, r8
 80026c4:	e8bd 87f6 	ldmia.w	sp!, {r1, r2, r4, r5, r6, r7, r8, r9, sl, pc}

080026c8 <evnt_schdlr_cal_conn_eff_rx_time>:
 80026c8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80026ca:	0004      	movs	r4, r0
 80026cc:	bf14      	ite	ne
 80026ce:	2001      	movne	r0, #1
 80026d0:	2000      	moveq	r0, #0
 80026d2:	f7fd fd7d 	bl	80001d0 <bsp_assert>
 80026d6:	6f23      	ldr	r3, [r4, #112]	; 0x70
 80026d8:	f103 018e 	add.w	r1, r3, #142	; 0x8e
 80026dc:	8b4e      	ldrh	r6, [r1, #26]
 80026de:	8d0f      	ldrh	r7, [r1, #40]	; 0x28
 80026e0:	01b6      	lsls	r6, r6, #6
 80026e2:	f506 7674 	add.w	r6, r6, #976	; 0x3d0
 80026e6:	42b7      	cmp	r7, r6
 80026e8:	bfb8      	it	lt
 80026ea:	463e      	movlt	r6, r7
 80026ec:	8bca      	ldrh	r2, [r1, #30]
 80026ee:	8c88      	ldrh	r0, [r1, #36]	; 0x24
 80026f0:	0192      	lsls	r2, r2, #6
 80026f2:	f502 7274 	add.w	r2, r2, #976	; 0x3d0
 80026f6:	4290      	cmp	r0, r2
 80026f8:	bfb8      	it	lt
 80026fa:	4602      	movlt	r2, r0
 80026fc:	f8b1 c000 	ldrh.w	ip, [r1]
 8002700:	f240 40e2 	movw	r0, #1250	; 0x4e2
 8002704:	f8df 5894 	ldr.w	r5, [pc, #2196]	; 8002f9c <??DataTable51_5>
 8002708:	fb00 fc0c 	mul.w	ip, r0, ip
 800270c:	6828      	ldr	r0, [r5, #0]
 800270e:	1996      	adds	r6, r2, r6
 8002710:	3696      	adds	r6, #150	; 0x96
 8002712:	3014      	adds	r0, #20
 8002714:	ea4f 0e90 	mov.w	lr, r0, lsr #2
 8002718:	ebc0 1040 	rsb	r0, r0, r0, lsl #5
 800271c:	1986      	adds	r6, r0, r6
 800271e:	4476      	add	r6, lr
 8002720:	45b4      	cmp	ip, r6
 8002722:	d218      	bcs.n	8002756 <??evnt_schdlr_cal_conn_eff_rx_time_0>
 8002724:	f640 2691 	movw	r6, #2705	; 0xa91
 8002728:	42b7      	cmp	r7, r6
 800272a:	db14      	blt.n	8002756 <??evnt_schdlr_cal_conn_eff_rx_time_0>
 800272c:	ebac 0202 	sub.w	r2, ip, r2
 8002730:	3a96      	subs	r2, #150	; 0x96
 8002732:	1a12      	subs	r2, r2, r0
 8002734:	eba2 020e 	sub.w	r2, r2, lr
 8002738:	f203 1025 	addw	r0, r3, #293	; 0x125
 800273c:	850a      	strh	r2, [r1, #40]	; 0x28
 800273e:	84ca      	strh	r2, [r1, #38]	; 0x26
 8002740:	838a      	strh	r2, [r1, #28]
 8002742:	7800      	ldrb	r0, [r0, #0]
 8002744:	b938      	cbnz	r0, 8002756 <??evnt_schdlr_cal_conn_eff_rx_time_0>
 8002746:	2100      	movs	r1, #0
 8002748:	4620      	mov	r0, r4
 800274a:	f000 f95e 	bl	8002a0a <evnt_schdlr_calc_conn_duration>
 800274e:	6829      	ldr	r1, [r5, #0]
 8002750:	1808      	adds	r0, r1, r0
 8002752:	3014      	adds	r0, #20
 8002754:	6620      	str	r0, [r4, #96]	; 0x60

08002756 <??evnt_schdlr_cal_conn_eff_rx_time_0>:
 8002756:	bdf1      	pop	{r0, r4, r5, r6, r7, pc}

08002758 <evnt_schdlr_update_slave_conn_timers>:
 8002758:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800275c:	4604      	mov	r4, r0
 800275e:	4688      	mov	r8, r1
 8002760:	2500      	movs	r5, #0
 8002762:	b104      	cbz	r4, 8002766 <??evnt_schdlr_update_slave_conn_timers_2>
 8002764:	2001      	movs	r0, #1

08002766 <??evnt_schdlr_update_slave_conn_timers_2>:
 8002766:	f7fd fd33 	bl	80001d0 <bsp_assert>
 800276a:	f8d4 b070 	ldr.w	fp, [r4, #112]	; 0x70
 800276e:	f64f 71ff 	movw	r1, #65535	; 0xffff
 8002772:	f10b 07da 	add.w	r7, fp, #218	; 0xda
 8002776:	8878      	ldrh	r0, [r7, #2]
 8002778:	4288      	cmp	r0, r1
 800277a:	d003      	beq.n	8002784 <??evnt_schdlr_update_slave_conn_timers_3>
 800277c:	f1b8 0f01 	cmp.w	r8, #1
 8002780:	bf08      	it	eq
 8002782:	4605      	moveq	r5, r0

08002784 <??evnt_schdlr_update_slave_conn_timers_3>:
 8002784:	6820      	ldr	r0, [r4, #0]
 8002786:	f50b 7a93 	add.w	sl, fp, #294	; 0x126
 800278a:	b158      	cbz	r0, 80027a4 <??evnt_schdlr_update_slave_conn_timers_4>
 800278c:	f89a 0007 	ldrb.w	r0, [sl, #7]
 8002790:	2101      	movs	r1, #1
 8002792:	f00a f917 	bl	800c9c4 <llhwc_get_hw_setup_time>
 8002796:	6821      	ldr	r1, [r4, #0]
 8002798:	2201      	movs	r2, #1
 800279a:	1841      	adds	r1, r0, r1
 800279c:	f104 0050 	add.w	r0, r4, #80	; 0x50
 80027a0:	f012 f876 	bl	8014890 <ble_time_add_uint>

080027a4 <??evnt_schdlr_update_slave_conn_timers_4>:
 80027a4:	f104 0158 	add.w	r1, r4, #88	; 0x58
 80027a8:	f104 0050 	add.w	r0, r4, #80	; 0x50
 80027ac:	f011 ffe9 	bl	8014782 <ble_time_diff_us>
 80027b0:	f10b 0616 	add.w	r6, fp, #22
 80027b4:	8831      	ldrh	r1, [r6, #0]
 80027b6:	6823      	ldr	r3, [r4, #0]
 80027b8:	f240 42e2 	movw	r2, #1250	; 0x4e2
 80027bc:	fb02 f901 	mul.w	r9, r2, r1
 80027c0:	eb00 0053 	add.w	r0, r0, r3, lsr #1
 80027c4:	fbb0 f9f9 	udiv	r9, r0, r9
 80027c8:	f1b9 0f00 	cmp.w	r9, #0
 80027cc:	bf18      	it	ne
 80027ce:	2500      	movne	r5, #0
 80027d0:	8838      	ldrh	r0, [r7, #0]
 80027d2:	44a8      	add	r8, r5
 80027d4:	fb08 f101 	mul.w	r1, r8, r1
 80027d8:	4440      	add	r0, r8
 80027da:	8038      	strh	r0, [r7, #0]
 80027dc:	2203      	movs	r2, #3
 80027de:	f104 0050 	add.w	r0, r4, #80	; 0x50
 80027e2:	f012 f855 	bl	8014890 <ble_time_add_uint>
 80027e6:	f10b 055c 	add.w	r5, fp, #92	; 0x5c
 80027ea:	8aa8      	ldrh	r0, [r5, #20]
 80027ec:	8839      	ldrh	r1, [r7, #0]
 80027ee:	4281      	cmp	r1, r0
 80027f0:	d31f      	bcc.n	8002832 <??evnt_schdlr_update_slave_conn_timers_5>
 80027f2:	eba1 0108 	sub.w	r1, r1, r8
 80027f6:	4281      	cmp	r1, r0
 80027f8:	d21b      	bcs.n	8002832 <??evnt_schdlr_update_slave_conn_timers_5>
 80027fa:	7828      	ldrb	r0, [r5, #0]
 80027fc:	2802      	cmp	r0, #2
 80027fe:	d10d      	bne.n	800281c <??evnt_schdlr_update_slave_conn_timers_6>
 8002800:	4620      	mov	r0, r4
 8002802:	f7ff ff61 	bl	80026c8 <evnt_schdlr_cal_conn_eff_rx_time>
 8002806:	8e69      	ldrh	r1, [r5, #50]	; 0x32
 8002808:	8830      	ldrh	r0, [r6, #0]
 800280a:	2203      	movs	r2, #3
 800280c:	8031      	strh	r1, [r6, #0]
 800280e:	8668      	strh	r0, [r5, #50]	; 0x32
 8002810:	8da9      	ldrh	r1, [r5, #44]	; 0x2c
 8002812:	f104 0050 	add.w	r0, r4, #80	; 0x50
 8002816:	f012 f83b 	bl	8014890 <ble_time_add_uint>
 800281a:	e008      	b.n	800282e <??evnt_schdlr_update_slave_conn_timers_7>

0800281c <??evnt_schdlr_update_slave_conn_timers_6>:
 800281c:	2803      	cmp	r0, #3
 800281e:	d106      	bne.n	800282e <??evnt_schdlr_update_slave_conn_timers_7>
 8002820:	2205      	movs	r2, #5
 8002822:	f10b 0176 	add.w	r1, fp, #118	; 0x76
 8002826:	f10b 0030 	add.w	r0, fp, #48	; 0x30
 800282a:	f00c f98d 	bl	800eb48 <ble_memcpy>

0800282e <??evnt_schdlr_update_slave_conn_timers_7>:
 800282e:	2000      	movs	r0, #0
 8002830:	82a8      	strh	r0, [r5, #20]

08002832 <??evnt_schdlr_update_slave_conn_timers_5>:
 8002832:	f89a 0004 	ldrb.w	r0, [sl, #4]
 8002836:	b9a0      	cbnz	r0, 8002862 <??evnt_schdlr_update_slave_conn_timers_8>
 8002838:	7c37      	ldrb	r7, [r6, #16]
 800283a:	f8df 3764 	ldr.w	r3, [pc, #1892]	; 8002fa0 <??DataTable51_6>
 800283e:	2200      	movs	r2, #0
 8002840:	fb08 f807 	mul.w	r8, r8, r7
 8002844:	2025      	movs	r0, #37	; 0x25
 8002846:	f10b 0128 	add.w	r1, fp, #40	; 0x28
 800284a:	fbe8 3203 	umlal	r3, r2, r8, r3
 800284e:	0952      	lsrs	r2, r2, #5
 8002850:	fb00 8812 	mls	r8, r0, r2, r8
 8002854:	f10b 0024 	add.w	r0, fp, #36	; 0x24
 8002858:	f886 8010 	strb.w	r8, [r6, #16]
 800285c:	f006 fce4 	bl	8009228 <llhwc_get_ch_idx>
 8002860:	7437      	strb	r7, [r6, #16]

08002862 <??evnt_schdlr_update_slave_conn_timers_8>:
 8002862:	f89a 0000 	ldrb.w	r0, [sl]
 8002866:	1e40      	subs	r0, r0, #1
 8002868:	2806      	cmp	r0, #6
 800286a:	d813      	bhi.n	8002894 <??evnt_schdlr_update_slave_conn_timers_9>
 800286c:	e8df f000 	tbb	[pc, r0]

08002870 <??evnt_schdlr_update_slave_conn_timers_0>:
 8002870:	0e10 0a0c 0608 0004                         ........

08002878 <??evnt_schdlr_update_slave_conn_timers_10>:
 8002878:	2014      	movs	r0, #20
 800287a:	e00d      	b.n	8002898 <??evnt_schdlr_update_slave_conn_timers_11>

0800287c <??evnt_schdlr_update_slave_conn_timers_12>:
 800287c:	201e      	movs	r0, #30
 800287e:	e00b      	b.n	8002898 <??evnt_schdlr_update_slave_conn_timers_11>

08002880 <??evnt_schdlr_update_slave_conn_timers_13>:
 8002880:	2032      	movs	r0, #50	; 0x32
 8002882:	e009      	b.n	8002898 <??evnt_schdlr_update_slave_conn_timers_11>

08002884 <??evnt_schdlr_update_slave_conn_timers_14>:
 8002884:	204b      	movs	r0, #75	; 0x4b
 8002886:	e007      	b.n	8002898 <??evnt_schdlr_update_slave_conn_timers_11>

08002888 <??evnt_schdlr_update_slave_conn_timers_15>:
 8002888:	2064      	movs	r0, #100	; 0x64
 800288a:	e005      	b.n	8002898 <??evnt_schdlr_update_slave_conn_timers_11>

0800288c <??evnt_schdlr_update_slave_conn_timers_16>:
 800288c:	2096      	movs	r0, #150	; 0x96
 800288e:	e003      	b.n	8002898 <??evnt_schdlr_update_slave_conn_timers_11>

08002890 <??evnt_schdlr_update_slave_conn_timers_17>:
 8002890:	20fa      	movs	r0, #250	; 0xfa
 8002892:	e001      	b.n	8002898 <??evnt_schdlr_update_slave_conn_timers_11>

08002894 <??evnt_schdlr_update_slave_conn_timers_9>:
 8002894:	f44f 70fa 	mov.w	r0, #500	; 0x1f4

08002898 <??evnt_schdlr_update_slave_conn_timers_11>:
 8002898:	7af1      	ldrb	r1, [r6, #11]
 800289a:	1e49      	subs	r1, r1, #1
 800289c:	2906      	cmp	r1, #6
 800289e:	d813      	bhi.n	80028c8 <??evnt_schdlr_update_slave_conn_timers_18>
 80028a0:	e8df f001 	tbb	[pc, r1]

080028a4 <??evnt_schdlr_update_slave_conn_timers_1>:
 80028a4:	0e10 0a0c 0608 0004                         ........

080028ac <??evnt_schdlr_update_slave_conn_timers_19>:
 80028ac:	2114      	movs	r1, #20
 80028ae:	e00d      	b.n	80028cc <??evnt_schdlr_update_slave_conn_timers_20>

080028b0 <??evnt_schdlr_update_slave_conn_timers_21>:
 80028b0:	211e      	movs	r1, #30
 80028b2:	e00b      	b.n	80028cc <??evnt_schdlr_update_slave_conn_timers_20>

080028b4 <??evnt_schdlr_update_slave_conn_timers_22>:
 80028b4:	2132      	movs	r1, #50	; 0x32
 80028b6:	e009      	b.n	80028cc <??evnt_schdlr_update_slave_conn_timers_20>

080028b8 <??evnt_schdlr_update_slave_conn_timers_23>:
 80028b8:	214b      	movs	r1, #75	; 0x4b
 80028ba:	e007      	b.n	80028cc <??evnt_schdlr_update_slave_conn_timers_20>

080028bc <??evnt_schdlr_update_slave_conn_timers_24>:
 80028bc:	2164      	movs	r1, #100	; 0x64
 80028be:	e005      	b.n	80028cc <??evnt_schdlr_update_slave_conn_timers_20>

080028c0 <??evnt_schdlr_update_slave_conn_timers_25>:
 80028c0:	2196      	movs	r1, #150	; 0x96
 80028c2:	e003      	b.n	80028cc <??evnt_schdlr_update_slave_conn_timers_20>

080028c4 <??evnt_schdlr_update_slave_conn_timers_26>:
 80028c4:	21fa      	movs	r1, #250	; 0xfa
 80028c6:	e001      	b.n	80028cc <??evnt_schdlr_update_slave_conn_timers_20>

080028c8 <??evnt_schdlr_update_slave_conn_timers_18>:
 80028c8:	f44f 71fa 	mov.w	r1, #500	; 0x1f4

080028cc <??evnt_schdlr_update_slave_conn_timers_20>:
 80028cc:	f8cd 9000 	str.w	r9, [sp]
 80028d0:	f104 0350 	add.w	r3, r4, #80	; 0x50
 80028d4:	f104 0258 	add.w	r2, r4, #88	; 0x58
 80028d8:	f7ff fe36 	bl	8002548 <evnt_schdlr_calc_wndw_widening>
 80028dc:	6020      	str	r0, [r4, #0]
 80028de:	f89a 0007 	ldrb.w	r0, [sl, #7]
 80028e2:	2101      	movs	r1, #1
 80028e4:	f104 098a 	add.w	r9, r4, #138	; 0x8a
 80028e8:	f00a f86c 	bl	800c9c4 <llhwc_get_hw_setup_time>
 80028ec:	6821      	ldr	r1, [r4, #0]
 80028ee:	2201      	movs	r2, #1
 80028f0:	1841      	adds	r1, r0, r1
 80028f2:	f104 0050 	add.w	r0, r4, #80	; 0x50
 80028f6:	f012 f849 	bl	801498c <ble_time_rmv_uint>
 80028fa:	f899 1000 	ldrb.w	r1, [r9]
 80028fe:	4620      	mov	r0, r4
 8002900:	f000 f883 	bl	8002a0a <evnt_schdlr_calc_conn_duration>
 8002904:	f8df 2694 	ldr.w	r2, [pc, #1684]	; 8002f9c <??DataTable51_5>
 8002908:	6811      	ldr	r1, [r2, #0]
 800290a:	1808      	adds	r0, r1, r0
 800290c:	3014      	adds	r0, #20
 800290e:	6620      	str	r0, [r4, #96]	; 0x60
 8002910:	f899 3014 	ldrb.w	r3, [r9, #20]
 8002914:	2b01      	cmp	r3, #1
 8002916:	d103      	bne.n	8002920 <??evnt_schdlr_update_slave_conn_timers_27>
 8002918:	6811      	ldr	r1, [r2, #0]
 800291a:	1a40      	subs	r0, r0, r1
 800291c:	380d      	subs	r0, #13
 800291e:	6620      	str	r0, [r4, #96]	; 0x60

08002920 <??evnt_schdlr_update_slave_conn_timers_27>:
 8002920:	2000      	movs	r0, #0
 8002922:	e8bd 8ff2 	ldmia.w	sp!, {r1, r4, r5, r6, r7, r8, r9, sl, fp, pc}

08002926 <evnt_schdlr_update_master_conn_timers>:
 8002926:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 800292a:	0004      	movs	r4, r0
 800292c:	460d      	mov	r5, r1
 800292e:	bf18      	it	ne
 8002930:	2001      	movne	r0, #1
 8002932:	f7fd fc4d 	bl	80001d0 <bsp_assert>
 8002936:	f8d4 8070 	ldr.w	r8, [r4, #112]	; 0x70
 800293a:	2203      	movs	r2, #3
 800293c:	f104 0050 	add.w	r0, r4, #80	; 0x50
 8002940:	f108 0716 	add.w	r7, r8, #22
 8002944:	8839      	ldrh	r1, [r7, #0]
 8002946:	f108 065c 	add.w	r6, r8, #92	; 0x5c
 800294a:	4369      	muls	r1, r5
 800294c:	f011 ffa0 	bl	8014890 <ble_time_add_uint>
 8002950:	8ab0      	ldrh	r0, [r6, #20]
 8002952:	f8b8 10da 	ldrh.w	r1, [r8, #218]	; 0xda
 8002956:	4281      	cmp	r1, r0
 8002958:	d33f      	bcc.n	80029da <??evnt_schdlr_update_master_conn_timers_0>
 800295a:	1b49      	subs	r1, r1, r5
 800295c:	4281      	cmp	r1, r0
 800295e:	d23c      	bcs.n	80029da <??evnt_schdlr_update_master_conn_timers_0>
 8002960:	7830      	ldrb	r0, [r6, #0]
 8002962:	2802      	cmp	r0, #2
 8002964:	d12e      	bne.n	80029c4 <??evnt_schdlr_update_master_conn_timers_1>
 8002966:	4620      	mov	r0, r4
 8002968:	f7ff feae 	bl	80026c8 <evnt_schdlr_cal_conn_eff_rx_time>
 800296c:	8e71      	ldrh	r1, [r6, #50]	; 0x32
 800296e:	8838      	ldrh	r0, [r7, #0]
 8002970:	8039      	strh	r1, [r7, #0]
 8002972:	f108 0138 	add.w	r1, r8, #56	; 0x38
 8002976:	8670      	strh	r0, [r6, #50]	; 0x32
 8002978:	f104 0058 	add.w	r0, r4, #88	; 0x58
 800297c:	f011 ff32 	bl	80147e4 <ble_time_set>
 8002980:	f898 0090 	ldrb.w	r0, [r8, #144]	; 0x90
 8002984:	b128      	cbz	r0, 8002992 <??evnt_schdlr_update_master_conn_timers_2>
 8002986:	8db1      	ldrh	r1, [r6, #44]	; 0x2c
 8002988:	2203      	movs	r2, #3
 800298a:	f104 0050 	add.w	r0, r4, #80	; 0x50
 800298e:	f011 ff7f 	bl	8014890 <ble_time_add_uint>

08002992 <??evnt_schdlr_update_master_conn_timers_2>:
 8002992:	f8df 2610 	ldr.w	r2, [pc, #1552]	; 8002fa4 <??DataTable51_7>
 8002996:	6a53      	ldr	r3, [r2, #36]	; 0x24
 8002998:	8839      	ldrh	r1, [r7, #0]
 800299a:	4620      	mov	r0, r4
 800299c:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 800299e:	f8df 9608 	ldr.w	r9, [pc, #1544]	; 8002fa8 <??DataTable51_8>
 80029a2:	4790      	blx	r2
 80029a4:	f899 0000 	ldrb.w	r0, [r9]
 80029a8:	2802      	cmp	r0, #2
 80029aa:	bf04      	itt	eq
 80029ac:	4620      	moveq	r0, r4
 80029ae:	f000 f876 	bleq	8002a9e <evnt_schdlr_updt_evnt_slot_dur>
 80029b2:	2000      	movs	r0, #0
 80029b4:	f889 0000 	strb.w	r0, [r9]
 80029b8:	f104 009c 	add.w	r0, r4, #156	; 0x9c
 80029bc:	2100      	movs	r1, #0
 80029be:	7001      	strb	r1, [r0, #0]
 80029c0:	7041      	strb	r1, [r0, #1]
 80029c2:	e008      	b.n	80029d6 <??evnt_schdlr_update_master_conn_timers_3>

080029c4 <??evnt_schdlr_update_master_conn_timers_1>:
 80029c4:	2803      	cmp	r0, #3
 80029c6:	d106      	bne.n	80029d6 <??evnt_schdlr_update_master_conn_timers_3>
 80029c8:	2205      	movs	r2, #5
 80029ca:	f108 0176 	add.w	r1, r8, #118	; 0x76
 80029ce:	f108 0030 	add.w	r0, r8, #48	; 0x30
 80029d2:	f00c f8b9 	bl	800eb48 <ble_memcpy>

080029d6 <??evnt_schdlr_update_master_conn_timers_3>:
 80029d6:	2000      	movs	r0, #0
 80029d8:	82b0      	strh	r0, [r6, #20]

080029da <??evnt_schdlr_update_master_conn_timers_0>:
 80029da:	f898 012a 	ldrb.w	r0, [r8, #298]	; 0x12a
 80029de:	b990      	cbnz	r0, 8002a06 <??evnt_schdlr_update_master_conn_timers_4>
 80029e0:	7c3c      	ldrb	r4, [r7, #16]
 80029e2:	f8df 35bc 	ldr.w	r3, [pc, #1468]	; 8002fa0 <??DataTable51_6>
 80029e6:	2200      	movs	r2, #0
 80029e8:	4365      	muls	r5, r4
 80029ea:	2025      	movs	r0, #37	; 0x25
 80029ec:	f108 0128 	add.w	r1, r8, #40	; 0x28
 80029f0:	fbe5 3203 	umlal	r3, r2, r5, r3
 80029f4:	0952      	lsrs	r2, r2, #5
 80029f6:	fb00 5512 	mls	r5, r0, r2, r5
 80029fa:	f108 0024 	add.w	r0, r8, #36	; 0x24
 80029fe:	743d      	strb	r5, [r7, #16]
 8002a00:	f006 fc12 	bl	8009228 <llhwc_get_ch_idx>
 8002a04:	743c      	strb	r4, [r7, #16]

08002a06 <??evnt_schdlr_update_master_conn_timers_4>:
 8002a06:	e8bd 83f1 	ldmia.w	sp!, {r0, r4, r5, r6, r7, r8, r9, pc}

08002a0a <evnt_schdlr_calc_conn_duration>:
 8002a0a:	b4f0      	push	{r4, r5, r6, r7}
 8002a0c:	f100 0570 	add.w	r5, r0, #112	; 0x70
 8002a10:	682a      	ldr	r2, [r5, #0]
 8002a12:	f240 2071 	movw	r0, #625	; 0x271
 8002a16:	e9d5 6708 	ldrd	r6, r7, [r5, #32]
 8002a1a:	8b93      	ldrh	r3, [r2, #28]
 8002a1c:	4343      	muls	r3, r0
 8002a1e:	f102 00aa 	add.w	r0, r2, #170	; 0xaa
 8002a22:	8884      	ldrh	r4, [r0, #4]
 8002a24:	8800      	ldrh	r0, [r0, #0]
 8002a26:	1904      	adds	r4, r0, r4
 8002a28:	f104 0096 	add.w	r0, r4, #150	; 0x96
 8002a2c:	2f00      	cmp	r7, #0
 8002a2e:	bf08      	it	eq
 8002a30:	f5b6 7f80 	cmpeq.w	r6, #256	; 0x100
 8002a34:	d10f      	bne.n	8002a56 <??evnt_schdlr_calc_conn_duration_0>
 8002a36:	b971      	cbnz	r1, 8002a56 <??evnt_schdlr_calc_conn_duration_0>
 8002a38:	f892 1020 	ldrb.w	r1, [r2, #32]
 8002a3c:	0080      	lsls	r0, r0, #2
 8002a3e:	307d      	adds	r0, #125	; 0x7d
 8002a40:	eb01 0281 	add.w	r2, r1, r1, lsl #2
 8002a44:	f8df 3564 	ldr.w	r3, [pc, #1380]	; 8002fac <??DataTable51_9>
 8002a48:	fba0 3103 	umull	r3, r1, r0, r3
 8002a4c:	bcf0      	pop	{r4, r5, r6, r7}
 8002a4e:	0988      	lsrs	r0, r1, #6
 8002a50:	eb00 00c2 	add.w	r0, r0, r2, lsl #3
 8002a54:	4770      	bx	lr

08002a56 <??evnt_schdlr_calc_conn_duration_0>:
 8002a56:	4283      	cmp	r3, r0
 8002a58:	bf38      	it	cc
 8002a5a:	4604      	movcc	r4, r0
 8002a5c:	d306      	bcc.n	8002a6c <??evnt_schdlr_calc_conn_duration_1>
 8002a5e:	ebc4 04c4 	rsb	r4, r4, r4, lsl #3
 8002a62:	f204 749e 	addw	r4, r4, #1950	; 0x79e
 8002a66:	429c      	cmp	r4, r3
 8002a68:	bf88      	it	hi
 8002a6a:	461c      	movhi	r4, r3

08002a6c <??evnt_schdlr_calc_conn_duration_1>:
 8002a6c:	8ad0      	ldrh	r0, [r2, #22]
 8002a6e:	f240 41e2 	movw	r1, #1250	; 0x4e2
 8002a72:	4341      	muls	r1, r0
 8002a74:	42a1      	cmp	r1, r4
 8002a76:	d209      	bcs.n	8002a8c <??evnt_schdlr_calc_conn_duration_2>
 8002a78:	eb00 0280 	add.w	r2, r0, r0, lsl #2
 8002a7c:	f8df 051c 	ldr.w	r0, [pc, #1308]	; 8002f9c <??DataTable51_5>
 8002a80:	6800      	ldr	r0, [r0, #0]
 8002a82:	bcf0      	pop	{r4, r5, r6, r7}
 8002a84:	ebc0 00c2 	rsb	r0, r0, r2, lsl #3
 8002a88:	3814      	subs	r0, #20
 8002a8a:	4770      	bx	lr

08002a8c <??evnt_schdlr_calc_conn_duration_2>:
 8002a8c:	00a4      	lsls	r4, r4, #2
 8002a8e:	347d      	adds	r4, #125	; 0x7d
 8002a90:	f8df 1518 	ldr.w	r1, [pc, #1304]	; 8002fac <??DataTable51_9>
 8002a94:	fba4 1001 	umull	r1, r0, r4, r1
 8002a98:	bcf0      	pop	{r4, r5, r6, r7}
 8002a9a:	0980      	lsrs	r0, r0, #6
 8002a9c:	4770      	bx	lr

08002a9e <evnt_schdlr_updt_evnt_slot_dur>:
 8002a9e:	f890 109e 	ldrb.w	r1, [r0, #158]	; 0x9e
 8002aa2:	b949      	cbnz	r1, 8002ab8 <??evnt_schdlr_updt_evnt_slot_dur_0>
 8002aa4:	f8df 34f4 	ldr.w	r3, [pc, #1268]	; 8002f9c <??DataTable51_5>
 8002aa8:	6e02      	ldr	r2, [r0, #96]	; 0x60
 8002aaa:	6819      	ldr	r1, [r3, #0]
 8002aac:	1a52      	subs	r2, r2, r1
 8002aae:	3a0d      	subs	r2, #13
 8002ab0:	6602      	str	r2, [r0, #96]	; 0x60
 8002ab2:	2201      	movs	r2, #1
 8002ab4:	f880 209e 	strb.w	r2, [r0, #158]	; 0x9e

08002ab8 <??evnt_schdlr_updt_evnt_slot_dur_0>:
 8002ab8:	4770      	bx	lr

08002aba <evnt_schdlr_reset_evnt_slot_dur>:
 8002aba:	f890 109e 	ldrb.w	r1, [r0, #158]	; 0x9e
 8002abe:	2901      	cmp	r1, #1
 8002ac0:	d109      	bne.n	8002ad6 <??evnt_schdlr_reset_evnt_slot_dur_0>
 8002ac2:	f8df 34d8 	ldr.w	r3, [pc, #1240]	; 8002f9c <??DataTable51_5>
 8002ac6:	6e02      	ldr	r2, [r0, #96]	; 0x60
 8002ac8:	6819      	ldr	r1, [r3, #0]
 8002aca:	188a      	adds	r2, r1, r2
 8002acc:	320d      	adds	r2, #13
 8002ace:	6602      	str	r2, [r0, #96]	; 0x60
 8002ad0:	2200      	movs	r2, #0
 8002ad2:	f880 209e 	strb.w	r2, [r0, #158]	; 0x9e

08002ad6 <??evnt_schdlr_reset_evnt_slot_dur_0>:
 8002ad6:	4770      	bx	lr

08002ad8 <evnt_count_adv_channels>:
 8002ad8:	f20f 619c 	addw	r1, pc, #1692	; 0x69c
 8002adc:	f000 000f 	and.w	r0, r0, #15
 8002ae0:	5c08      	ldrb	r0, [r1, r0]
 8002ae2:	4770      	bx	lr

08002ae4 <evnt_schdlr_calc_adv_max_dur>:
 8002ae4:	b580      	push	{r7, lr}
 8002ae6:	2804      	cmp	r0, #4
 8002ae8:	d80d      	bhi.n	8002b06 <??evnt_schdlr_calc_adv_max_dur_1>
 8002aea:	e8df f000 	tbb	[pc, r0]

08002aee <??evnt_schdlr_calc_adv_max_dur_0>:
 8002aee:	0603 0903 0006                              ......

08002af4 <??evnt_schdlr_calc_adv_max_dur_2>:
 8002af4:	f44f 609a 	mov.w	r0, #1232	; 0x4d0
 8002af8:	bd02      	pop	{r1, pc}

08002afa <??evnt_schdlr_calc_adv_max_dur_3>:
 8002afa:	f240 1089 	movw	r0, #393	; 0x189
 8002afe:	bd02      	pop	{r1, pc}

08002b00 <??evnt_schdlr_calc_adv_max_dur_4>:
 8002b00:	f44f 70bc 	mov.w	r0, #376	; 0x178
 8002b04:	bd02      	pop	{r1, pc}

08002b06 <??evnt_schdlr_calc_adv_max_dur_1>:
 8002b06:	2000      	movs	r0, #0
 8002b08:	f7fd fb62 	bl	80001d0 <bsp_assert>
 8002b0c:	2000      	movs	r0, #0
 8002b0e:	bd02      	pop	{r1, pc}

08002b10 <evnt_schdlr_calc_prim_adv_durn_on_air>:
 8002b10:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8002b12:	4604      	mov	r4, r0
 8002b14:	6f20      	ldr	r0, [r4, #112]	; 0x70
 8002b16:	f20f 6160 	addw	r1, pc, #1632	; 0x660
 8002b1a:	f100 0720 	add.w	r7, r0, #32
 8002b1e:	783a      	ldrb	r2, [r7, #0]
 8002b20:	3030      	adds	r0, #48	; 0x30
 8002b22:	f002 020f 	and.w	r2, r2, #15
 8002b26:	5c8d      	ldrb	r5, [r1, r2]
 8002b28:	f010 fce6 	bl	80134f8 <pdu_trnsprt_hndlr_get_payload_lngth>
 8002b2c:	f00b fd26 	bl	800e57c <llhwc_phy_get_adv_chnls_switch_time>
 8002b30:	4606      	mov	r6, r0
 8002b32:	7878      	ldrb	r0, [r7, #1]
 8002b34:	2804      	cmp	r0, #4
 8002b36:	d80d      	bhi.n	8002b54 <??evnt_schdlr_calc_prim_adv_durn_on_air_1>
 8002b38:	e8df f000 	tbb	[pc, r0]

08002b3c <??evnt_schdlr_calc_prim_adv_durn_on_air_0>:
 8002b3c:	0609 0309 0006                              ......

08002b42 <??evnt_schdlr_calc_prim_adv_durn_on_air_2>:
 8002b42:	f44f 71bc 	mov.w	r1, #376	; 0x178
 8002b46:	e009      	b.n	8002b5c <??evnt_schdlr_calc_prim_adv_durn_on_air_3>

08002b48 <??evnt_schdlr_calc_prim_adv_durn_on_air_4>:
 8002b48:	f240 1189 	movw	r1, #393	; 0x189
 8002b4c:	e006      	b.n	8002b5c <??evnt_schdlr_calc_prim_adv_durn_on_air_3>

08002b4e <??evnt_schdlr_calc_prim_adv_durn_on_air_5>:
 8002b4e:	f44f 619a 	mov.w	r1, #1232	; 0x4d0
 8002b52:	e003      	b.n	8002b5c <??evnt_schdlr_calc_prim_adv_durn_on_air_3>

08002b54 <??evnt_schdlr_calc_prim_adv_durn_on_air_1>:
 8002b54:	2000      	movs	r0, #0
 8002b56:	f7fd fb3b 	bl	80001d0 <bsp_assert>
 8002b5a:	2100      	movs	r1, #0

08002b5c <??evnt_schdlr_calc_prim_adv_durn_on_air_3>:
 8002b5c:	1870      	adds	r0, r6, r1
 8002b5e:	8120      	strh	r0, [r4, #8]
 8002b60:	1e68      	subs	r0, r5, #1
 8002b62:	4346      	muls	r6, r0
 8002b64:	fb05 6501 	mla	r5, r5, r1, r6
 8002b68:	4628      	mov	r0, r5
 8002b6a:	bdf2      	pop	{r1, r4, r5, r6, r7, pc}

08002b6c <evnt_schdlr_get_pckt_durn_on_air>:
 8002b6c:	1c80      	adds	r0, r0, #2
 8002b6e:	b280      	uxth	r0, r0
 8002b70:	2901      	cmp	r1, #1
 8002b72:	d102      	bne.n	8002b7a <??evnt_schdlr_get_pckt_durn_on_air_0>
 8002b74:	00c0      	lsls	r0, r0, #3
 8002b76:	3040      	adds	r0, #64	; 0x40
 8002b78:	4770      	bx	lr

08002b7a <??evnt_schdlr_get_pckt_durn_on_air_0>:
 8002b7a:	2902      	cmp	r1, #2
 8002b7c:	d102      	bne.n	8002b84 <??evnt_schdlr_get_pckt_durn_on_air_1>
 8002b7e:	0080      	lsls	r0, r0, #2
 8002b80:	3024      	adds	r0, #36	; 0x24
 8002b82:	4770      	bx	lr

08002b84 <??evnt_schdlr_get_pckt_durn_on_air_1>:
 8002b84:	2a01      	cmp	r2, #1
 8002b86:	d003      	beq.n	8002b90 <??evnt_schdlr_get_pckt_durn_on_air_2>
 8002b88:	0100      	lsls	r0, r0, #4
 8002b8a:	f500 70d7 	add.w	r0, r0, #430	; 0x1ae
 8002b8e:	4770      	bx	lr

08002b90 <??evnt_schdlr_get_pckt_durn_on_air_2>:
 8002b90:	0180      	lsls	r0, r0, #6
 8002b92:	f500 7014 	add.w	r0, r0, #592	; 0x250
 8002b96:	4770      	bx	lr

08002b98 <packet_enqueue>:
 8002b98:	b570      	push	{r4, r5, r6, lr}
 8002b9a:	4604      	mov	r4, r0
 8002b9c:	f8df 6410 	ldr.w	r6, [pc, #1040]	; 8002fb0 <??DataTable51_10>
 8002ba0:	6830      	ldr	r0, [r6, #0]
 8002ba2:	460d      	mov	r5, r1
 8002ba4:	f04f 31ff 	mov.w	r1, #4294967295	; 0xffffffff
 8002ba8:	f011 fc5d 	bl	8014466 <os_rcrsv_mutex_wait>
 8002bac:	6820      	ldr	r0, [r4, #0]
 8002bae:	2800      	cmp	r0, #0
 8002bb0:	bf0e      	itee	eq
 8002bb2:	6025      	streq	r5, [r4, #0]
 8002bb4:	6860      	ldrne	r0, [r4, #4]
 8002bb6:	6045      	strne	r5, [r0, #4]
 8002bb8:	6065      	str	r5, [r4, #4]
 8002bba:	e00f      	b.n	8002bdc <?Subroutine0>

08002bbc <packet_insert_frst>:
 8002bbc:	b570      	push	{r4, r5, r6, lr}
 8002bbe:	4604      	mov	r4, r0
 8002bc0:	f8df 63ec 	ldr.w	r6, [pc, #1004]	; 8002fb0 <??DataTable51_10>
 8002bc4:	6830      	ldr	r0, [r6, #0]
 8002bc6:	460d      	mov	r5, r1
 8002bc8:	f04f 31ff 	mov.w	r1, #4294967295	; 0xffffffff
 8002bcc:	f011 fc4b 	bl	8014466 <os_rcrsv_mutex_wait>
 8002bd0:	6820      	ldr	r0, [r4, #0]
 8002bd2:	2800      	cmp	r0, #0
 8002bd4:	bf14      	ite	ne
 8002bd6:	6068      	strne	r0, [r5, #4]
 8002bd8:	6065      	streq	r5, [r4, #4]
 8002bda:	6025      	str	r5, [r4, #0]

08002bdc <?Subroutine0>:
 8002bdc:	6830      	ldr	r0, [r6, #0]
 8002bde:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8002be2:	f011 bc46 	b.w	8014472 <os_rcrsv_mutex_release>

08002be6 <packet_insert_empty_frst>:
 8002be6:	b538      	push	{r3, r4, r5, lr}
 8002be8:	4604      	mov	r4, r0
 8002bea:	f8df 53c4 	ldr.w	r5, [pc, #964]	; 8002fb0 <??DataTable51_10>
 8002bee:	6828      	ldr	r0, [r5, #0]
 8002bf0:	f04f 31ff 	mov.w	r1, #4294967295	; 0xffffffff
 8002bf4:	f011 fc37 	bl	8014466 <os_rcrsv_mutex_wait>
 8002bf8:	2101      	movs	r1, #1
 8002bfa:	7221      	strb	r1, [r4, #8]
 8002bfc:	6828      	ldr	r0, [r5, #0]
 8002bfe:	e8bd 4032 	ldmia.w	sp!, {r1, r4, r5, lr}
 8002c02:	f011 bc36 	b.w	8014472 <os_rcrsv_mutex_release>

08002c06 <packet_get_frst_pkt>:
 8002c06:	b538      	push	{r3, r4, r5, lr}
 8002c08:	4604      	mov	r4, r0
 8002c0a:	f8df 53a4 	ldr.w	r5, [pc, #932]	; 8002fb0 <??DataTable51_10>
 8002c0e:	6828      	ldr	r0, [r5, #0]
 8002c10:	f04f 31ff 	mov.w	r1, #4294967295	; 0xffffffff
 8002c14:	f011 fc27 	bl	8014466 <os_rcrsv_mutex_wait>
 8002c18:	7a20      	ldrb	r0, [r4, #8]
 8002c1a:	2800      	cmp	r0, #0
 8002c1c:	bf0c      	ite	eq
 8002c1e:	6824      	ldreq	r4, [r4, #0]
 8002c20:	f8df 4368 	ldrne.w	r4, [pc, #872]	; 8002f8c <??DataTable51_1>
 8002c24:	6828      	ldr	r0, [r5, #0]
 8002c26:	f011 fc24 	bl	8014472 <os_rcrsv_mutex_release>
 8002c2a:	4620      	mov	r0, r4
 8002c2c:	bd32      	pop	{r1, r4, r5, pc}

08002c2e <packet_dequeue>:
 8002c2e:	b570      	push	{r4, r5, r6, lr}
 8002c30:	4606      	mov	r6, r0
 8002c32:	f8df 537c 	ldr.w	r5, [pc, #892]	; 8002fb0 <??DataTable51_10>
 8002c36:	6828      	ldr	r0, [r5, #0]
 8002c38:	f04f 31ff 	mov.w	r1, #4294967295	; 0xffffffff
 8002c3c:	f011 fc13 	bl	8014466 <os_rcrsv_mutex_wait>
 8002c40:	6831      	ldr	r1, [r6, #0]
 8002c42:	7a30      	ldrb	r0, [r6, #8]
 8002c44:	460c      	mov	r4, r1
 8002c46:	b128      	cbz	r0, 8002c54 <??packet_dequeue_0>
 8002c48:	b10c      	cbz	r4, 8002c4e <??packet_dequeue_1>
 8002c4a:	2000      	movs	r0, #0
 8002c4c:	7230      	strb	r0, [r6, #8]

08002c4e <??packet_dequeue_1>:
 8002c4e:	f8df 433c 	ldr.w	r4, [pc, #828]	; 8002f8c <??DataTable51_1>
 8002c52:	e010      	b.n	8002c76 <??packet_dequeue_2>

08002c54 <??packet_dequeue_0>:
 8002c54:	b914      	cbnz	r4, 8002c5c <??packet_dequeue_3>
 8002c56:	f7fd fabb 	bl	80001d0 <bsp_assert>
 8002c5a:	e00c      	b.n	8002c76 <??packet_dequeue_2>

08002c5c <??packet_dequeue_3>:
 8002c5c:	6870      	ldr	r0, [r6, #4]
 8002c5e:	4281      	cmp	r1, r0
 8002c60:	d105      	bne.n	8002c6e <??packet_dequeue_4>
 8002c62:	2100      	movs	r1, #0
 8002c64:	6031      	str	r1, [r6, #0]
 8002c66:	2001      	movs	r0, #1
 8002c68:	6071      	str	r1, [r6, #4]
 8002c6a:	7230      	strb	r0, [r6, #8]
 8002c6c:	e003      	b.n	8002c76 <??packet_dequeue_2>

08002c6e <??packet_dequeue_4>:
 8002c6e:	6860      	ldr	r0, [r4, #4]
 8002c70:	2100      	movs	r1, #0
 8002c72:	6030      	str	r0, [r6, #0]
 8002c74:	6061      	str	r1, [r4, #4]

08002c76 <??packet_dequeue_2>:
 8002c76:	6828      	ldr	r0, [r5, #0]
 8002c78:	f011 fbfb 	bl	8014472 <os_rcrsv_mutex_release>
 8002c7c:	4620      	mov	r0, r4
 8002c7e:	bd70      	pop	{r4, r5, r6, pc}

08002c80 <get_evnt_type>:
 8002c80:	b500      	push	{lr}
 8002c82:	221f      	movs	r2, #31
 8002c84:	f7ff fbe6 	bl	8002454 <__iar_llswitch>

08002c88 <?<Jumptable for get_evnt_type>_0>:
 8002c88:	0001 0000 0000 0000 016d 0000 0002 0000     ........m.......
 8002c98:	0000 0000 0165 0000 0004 0000 0000 0000     ....e...........
 8002ca8:	0161 0000 0008 0000 0000 0000 0151 0000     a...........Q...
 8002cb8:	0010 0000 0000 0000 014d 0000 0020 0000     ........M... ...
 8002cc8:	0000 0000 0145 0000 0040 0000 0000 0000     ....E...@.......
 8002cd8:	013d 0000 0080 0000 0000 0000 0135 0000     =...........5...
 8002ce8:	0100 0000 0000 0000 012d 0000 0200 0000     ........-.......
 8002cf8:	0000 0000 0125 0000 0400 0000 0000 0000     ....%...........
 8002d08:	011d 0000 0800 0000 0000 0000 0115 0000     ................
 8002d18:	1000 0000 0000 0000 010d 0000 2000 0000     ............. ..
 8002d28:	0000 0000 0105 0000 4000 0000 0000 0000     .........@......
 8002d38:	00fd 0000 8000 0000 0000 0000 00f5 0000     ................
 8002d48:	0000 0002 0000 0000 010d 0000 0000 0004     ................
 8002d58:	0000 0000 0105 0000 0000 0008 0000 0000     ................
 8002d68:	00fd 0000 0000 0010 0000 0000 00f5 0000     ................
 8002d78:	0000 0040 0000 0000 00bd 0000 0000 0080     ..@.............
 8002d88:	0000 0000 00b5 0000 0000 0100 0000 0000     ................
 8002d98:	00ad 0000 0000 0200 0000 0000 00a5 0000     ................
 8002da8:	0000 0400 0000 0000 009d 0000 0000 0800     ................
 8002db8:	0000 0000 0095 0000 0000 1000 0000 0000     ................
 8002dc8:	008d 0000 0000 2000 0000 0000 0085 0000     ....... ........
 8002dd8:	0000 4000 0000 0000 0091 0000 0000 8000     ...@............
 8002de8:	0000 0000 0081 0000 0000 0000 0001 0000     ................
 8002df8:	007d 0000 007d 0000                         }...}...

08002e00 <??get_evnt_type_0>:
 8002e00:	a07f      	add	r0, pc, #508	; (adr r0, 8003000 <?_0>)
 8002e02:	bd00      	pop	{pc}

08002e04 <??get_evnt_type_1>:
 8002e04:	a080      	add	r0, pc, #512	; (adr r0, 8003008 <?_1>)
 8002e06:	bd00      	pop	{pc}

08002e08 <??get_evnt_type_3>:
 8002e08:	a083      	add	r0, pc, #524	; (adr r0, 8003018 <?_2>)
 8002e0a:	bd00      	pop	{pc}

08002e0c <??get_evnt_type_2>:
 8002e0c:	a086      	add	r0, pc, #536	; (adr r0, 8003028 <?_3>)
 8002e0e:	bd00      	pop	{pc}

08002e10 <??get_evnt_type_4>:
 8002e10:	a089      	add	r0, pc, #548	; (adr r0, 8003038 <?_4>)
 8002e12:	bd00      	pop	{pc}

08002e14 <??get_evnt_type_5>:
 8002e14:	a08b      	add	r0, pc, #556	; (adr r0, 8003044 <?_5>)
 8002e16:	bd00      	pop	{pc}

08002e18 <??get_evnt_type_6>:
 8002e18:	a08d      	add	r0, pc, #564	; (adr r0, 8003050 <?_6>)
 8002e1a:	bd00      	pop	{pc}

08002e1c <??get_evnt_type_7>:
 8002e1c:	a090      	add	r0, pc, #576	; (adr r0, 8003060 <?_7>)
 8002e1e:	bd00      	pop	{pc}

08002e20 <??get_evnt_type_8>:
 8002e20:	a092      	add	r0, pc, #584	; (adr r0, 800306c <?_8>)
 8002e22:	bd00      	pop	{pc}

08002e24 <??get_evnt_type_9>:
 8002e24:	a094      	add	r0, pc, #592	; (adr r0, 8003078 <?_9>)
 8002e26:	bd00      	pop	{pc}

08002e28 <??get_evnt_type_10>:
 8002e28:	a095      	add	r0, pc, #596	; (adr r0, 8003080 <?_10>)
 8002e2a:	bd00      	pop	{pc}

08002e2c <??get_evnt_type_11>:
 8002e2c:	a096      	add	r0, pc, #600	; (adr r0, 8003088 <?_11>)
 8002e2e:	bd00      	pop	{pc}

08002e30 <??get_evnt_type_12>:
 8002e30:	a098      	add	r0, pc, #608	; (adr r0, 8003094 <?_12>)
 8002e32:	bd00      	pop	{pc}

08002e34 <??get_evnt_type_13>:
 8002e34:	a099      	add	r0, pc, #612	; (adr r0, 800309c <?_13>)
 8002e36:	bd00      	pop	{pc}

08002e38 <??get_evnt_type_14>:
 8002e38:	a09a      	add	r0, pc, #616	; (adr r0, 80030a4 <?_14>)
 8002e3a:	bd00      	pop	{pc}

08002e3c <??get_evnt_type_15>:
 8002e3c:	a09c      	add	r0, pc, #624	; (adr r0, 80030b0 <?_15>)
 8002e3e:	bd00      	pop	{pc}

08002e40 <??get_evnt_type_20>:
 8002e40:	a09e      	add	r0, pc, #632	; (adr r0, 80030bc <?_16>)
 8002e42:	bd00      	pop	{pc}

08002e44 <??get_evnt_type_21>:
 8002e44:	a0a0      	add	r0, pc, #640	; (adr r0, 80030c8 <?_17>)
 8002e46:	bd00      	pop	{pc}

08002e48 <??get_evnt_type_22>:
 8002e48:	a0a1      	add	r0, pc, #644	; (adr r0, 80030d0 <?_18>)
 8002e4a:	bd00      	pop	{pc}

08002e4c <??get_evnt_type_23>:
 8002e4c:	a0a2      	add	r0, pc, #648	; (adr r0, 80030d8 <?_19>)
 8002e4e:	bd00      	pop	{pc}

08002e50 <??get_evnt_type_24>:
 8002e50:	a0a3      	add	r0, pc, #652	; (adr r0, 80030e0 <?_20>)
 8002e52:	bd00      	pop	{pc}

08002e54 <??get_evnt_type_25>:
 8002e54:	a0a5      	add	r0, pc, #660	; (adr r0, 80030ec <?_21>)
 8002e56:	bd00      	pop	{pc}

08002e58 <??get_evnt_type_26>:
 8002e58:	a0a8      	add	r0, pc, #672	; (adr r0, 80030fc <?_22>)
 8002e5a:	bd00      	pop	{pc}

08002e5c <??get_evnt_type_27>:
 8002e5c:	a0aa      	add	r0, pc, #680	; (adr r0, 8003108 <?_23>)
 8002e5e:	bd00      	pop	{pc}

08002e60 <??get_evnt_type_16>:
 8002e60:	a0ac      	add	r0, pc, #688	; (adr r0, 8003114 <?_24>)
 8002e62:	bd00      	pop	{pc}

08002e64 <??get_evnt_type_17>:
 8002e64:	a0ae      	add	r0, pc, #696	; (adr r0, 8003120 <?_25>)
 8002e66:	bd00      	pop	{pc}

08002e68 <??get_evnt_type_18>:
 8002e68:	a0b0      	add	r0, pc, #704	; (adr r0, 800312c <?_26>)
 8002e6a:	bd00      	pop	{pc}

08002e6c <??get_evnt_type_19>:
 8002e6c:	a0b1      	add	r0, pc, #708	; (adr r0, 8003134 <?_27>)
 8002e6e:	bd00      	pop	{pc}

08002e70 <??get_evnt_type_29>:
 8002e70:	a0b3      	add	r0, pc, #716	; (adr r0, 8003140 <?_28>)
 8002e72:	bd00      	pop	{pc}

08002e74 <??get_evnt_type_28>:
 8002e74:	a0b5      	add	r0, pc, #724	; (adr r0, 800314c <?_29>)
 8002e76:	bd00      	pop	{pc}

08002e78 <??get_evnt_type_30>:
 8002e78:	a0b8      	add	r0, pc, #736	; (adr r0, 800315c <?_30>)
 8002e7a:	bd00      	pop	{pc}

08002e7c <??get_evnt_type_31>:
 8002e7c:	a0ba      	add	r0, pc, #744	; (adr r0, 8003168 <?_31>)
 8002e7e:	bd00      	pop	{pc}

08002e80 <evnt_schdlr_backoff_prcdr>:
 8002e80:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8002e84:	4603      	mov	r3, r0
 8002e86:	4847      	ldr	r0, [pc, #284]	; (8002fa4 <??DataTable51_7>)
 8002e88:	6a80      	ldr	r0, [r0, #40]	; 0x28
 8002e8a:	4d4a      	ldr	r5, [pc, #296]	; (8002fb4 <??DataTable51_11>)
 8002e8c:	4694      	mov	ip, r2
 8002e8e:	782f      	ldrb	r7, [r5, #0]
 8002e90:	786e      	ldrb	r6, [r5, #1]
 8002e92:	f04f 0800 	mov.w	r8, #0
 8002e96:	f04f 0902 	mov.w	r9, #2
 8002e9a:	2800      	cmp	r0, #0
 8002e9c:	bf1e      	ittt	ne
 8002e9e:	468e      	movne	lr, r1
 8002ea0:	f850 2f70 	ldrne.w	r2, [r0, #112]!
 8002ea4:	2900      	cmpne	r1, #0
 8002ea6:	d048      	beq.n	8002f3a <??evnt_schdlr_backoff_prcdr_0>
 8002ea8:	e9d0 0108 	ldrd	r0, r1, [r0, #32]
 8002eac:	2900      	cmp	r1, #0
 8002eae:	bf08      	it	eq
 8002eb0:	2810      	cmpeq	r0, #16
 8002eb2:	d142      	bne.n	8002f3a <??evnt_schdlr_backoff_prcdr_0>
 8002eb4:	f112 0430 	adds.w	r4, r2, #48	; 0x30
 8002eb8:	d03f      	beq.n	8002f3a <??evnt_schdlr_backoff_prcdr_0>
 8002eba:	e9d4 0100 	ldrd	r0, r1, [r4]
 8002ebe:	2900      	cmp	r1, #0
 8002ec0:	bf08      	it	eq
 8002ec2:	2820      	cmpeq	r0, #32
 8002ec4:	d10e      	bne.n	8002ee4 <??evnt_schdlr_backoff_prcdr_1>
 8002ec6:	0018      	movs	r0, r3
 8002ec8:	bf1c      	itt	ne
 8002eca:	2b06      	cmpne	r3, #6
 8002ecc:	f1bc 0f01 	cmpne.w	ip, #1
 8002ed0:	d131      	bne.n	8002f36 <??evnt_schdlr_backoff_prcdr_2>
 8002ed2:	7a20      	ldrb	r0, [r4, #8]
 8002ed4:	1e40      	subs	r0, r0, #1
 8002ed6:	7220      	strb	r0, [r4, #8]
 8002ed8:	b2c0      	uxtb	r0, r0
 8002eda:	bb60      	cbnz	r0, 8002f36 <??evnt_schdlr_backoff_prcdr_2>
 8002edc:	2010      	movs	r0, #16
 8002ede:	e9c4 0100 	strd	r0, r1, [r4]
 8002ee2:	e028      	b.n	8002f36 <??evnt_schdlr_backoff_prcdr_2>

08002ee4 <??evnt_schdlr_backoff_prcdr_1>:
 8002ee4:	2900      	cmp	r1, #0
 8002ee6:	bf08      	it	eq
 8002ee8:	2810      	cmpeq	r0, #16
 8002eea:	d124      	bne.n	8002f36 <??evnt_schdlr_backoff_prcdr_2>
 8002eec:	0018      	movs	r0, r3
 8002eee:	bf1c      	itt	ne
 8002ef0:	2b06      	cmpne	r3, #6
 8002ef2:	f1bc 0f01 	cmpne.w	ip, #1
 8002ef6:	d11e      	bne.n	8002f36 <??evnt_schdlr_backoff_prcdr_2>
 8002ef8:	f1be 0f02 	cmp.w	lr, #2
 8002efc:	d123      	bne.n	8002f46 <??evnt_schdlr_backoff_prcdr_3>
 8002efe:	1c7f      	adds	r7, r7, #1
 8002f00:	2600      	movs	r6, #0
 8002f02:	b2f8      	uxtb	r0, r7
 8002f04:	2801      	cmp	r0, #1
 8002f06:	d106      	bne.n	8002f16 <??evnt_schdlr_backoff_prcdr_4>
 8002f08:	7a60      	ldrb	r0, [r4, #9]
 8002f0a:	2700      	movs	r7, #0
 8002f0c:	0840      	lsrs	r0, r0, #1
 8002f0e:	7260      	strb	r0, [r4, #9]
 8002f10:	d101      	bne.n	8002f16 <??evnt_schdlr_backoff_prcdr_4>
 8002f12:	2001      	movs	r0, #1

08002f14 <??evnt_schdlr_backoff_prcdr_5>:
 8002f14:	7260      	strb	r0, [r4, #9]

08002f16 <??evnt_schdlr_backoff_prcdr_4>:
 8002f16:	2101      	movs	r1, #1
 8002f18:	f102 0038 	add.w	r0, r2, #56	; 0x38
 8002f1c:	f008 fe45 	bl	800bbaa <llhwc_gen_rnd_num>
 8002f20:	b958      	cbnz	r0, 8002f3a <??evnt_schdlr_backoff_prcdr_0>
 8002f22:	7a62      	ldrb	r2, [r4, #9]
 8002f24:	7a21      	ldrb	r1, [r4, #8]
 8002f26:	1e50      	subs	r0, r2, #1
 8002f28:	4001      	ands	r1, r0
 8002f2a:	1c49      	adds	r1, r1, #1
 8002f2c:	7221      	strb	r1, [r4, #8]
 8002f2e:	b2c9      	uxtb	r1, r1
 8002f30:	b909      	cbnz	r1, 8002f36 <??evnt_schdlr_backoff_prcdr_2>
 8002f32:	2001      	movs	r0, #1
 8002f34:	7220      	strb	r0, [r4, #8]

08002f36 <??evnt_schdlr_backoff_prcdr_2>:
 8002f36:	e9d4 8900 	ldrd	r8, r9, [r4]

08002f3a <??evnt_schdlr_backoff_prcdr_0>:
 8002f3a:	706e      	strb	r6, [r5, #1]
 8002f3c:	702f      	strb	r7, [r5, #0]
 8002f3e:	4640      	mov	r0, r8
 8002f40:	4649      	mov	r1, r9
 8002f42:	e8bd 83f4 	ldmia.w	sp!, {r2, r4, r5, r6, r7, r8, r9, pc}

08002f46 <??evnt_schdlr_backoff_prcdr_3>:
 8002f46:	f1be 0f01 	cmp.w	lr, #1
 8002f4a:	d1e4      	bne.n	8002f16 <??evnt_schdlr_backoff_prcdr_4>
 8002f4c:	1c76      	adds	r6, r6, #1
 8002f4e:	2020      	movs	r0, #32
 8002f50:	2700      	movs	r7, #0
 8002f52:	b2f3      	uxtb	r3, r6
 8002f54:	e9c4 0100 	strd	r0, r1, [r4]
 8002f58:	2b01      	cmp	r3, #1
 8002f5a:	d1dc      	bne.n	8002f16 <??evnt_schdlr_backoff_prcdr_4>
 8002f5c:	7a60      	ldrb	r0, [r4, #9]
 8002f5e:	2600      	movs	r6, #0
 8002f60:	0040      	lsls	r0, r0, #1
 8002f62:	7260      	strb	r0, [r4, #9]
 8002f64:	b2c0      	uxtb	r0, r0
 8002f66:	2811      	cmp	r0, #17
 8002f68:	dbd5      	blt.n	8002f16 <??evnt_schdlr_backoff_prcdr_4>
 8002f6a:	2010      	movs	r0, #16
 8002f6c:	e7d2      	b.n	8002f14 <??evnt_schdlr_backoff_prcdr_5>

08002f6e <evnt_schdlr_optm_conn_param>:
 8002f6e:	4a0d      	ldr	r2, [pc, #52]	; (8002fa4 <??DataTable51_7>)
 8002f70:	6a53      	ldr	r3, [r2, #36]	; 0x24
 8002f72:	6c5a      	ldr	r2, [r3, #68]	; 0x44

08002f74 <__iar_annotation$$tailcall>:
 8002f74:	4710      	bx	r2

08002f76 <evnt_schdlr_conn_parm_req>:
 8002f76:	490b      	ldr	r1, [pc, #44]	; (8002fa4 <??DataTable51_7>)
 8002f78:	6a4a      	ldr	r2, [r1, #36]	; 0x24
 8002f7a:	6c91      	ldr	r1, [r2, #72]	; 0x48

08002f7c <__iar_annotation$$tailcall>:
 8002f7c:	4708      	bx	r1

08002f7e <evnt_schdlr_calc_win_offset>:
 8002f7e:	4a09      	ldr	r2, [pc, #36]	; (8002fa4 <??DataTable51_7>)
 8002f80:	6a53      	ldr	r3, [r2, #36]	; 0x24
 8002f82:	6cda      	ldr	r2, [r3, #76]	; 0x4c

08002f84 <__iar_annotation$$tailcall>:
 8002f84:	4710      	bx	r2
	...

08002f88 <??DataTable51>:
 8002f88:	3614 2000                                   .6. 

08002f8c <??DataTable51_1>:
 8002f8c:	0050 2000                                   P.. 

08002f90 <??DataTable51_2>:
 8002f90:	0901 003d                                   ..=.

08002f94 <??DataTable51_3>:
 8002f94:	a120 0007                                    ...

08002f98 <??DataTable51_4>:
 8002f98:	bd06 8637                                   ..7.

08002f9c <??DataTable51_5>:
 8002f9c:	0048 2000                                   H.. 

08002fa0 <??DataTable51_6>:
 8002fa0:	c8a6 dd67                                   ..g.

08002fa4 <??DataTable51_7>:
 8002fa4:	0000 2000                                   ... 

08002fa8 <??DataTable51_8>:
 8002fa8:	174c 2000                                   L.. 

08002fac <??DataTable51_9>:
 8002fac:	6e98 8312                                   .n..

08002fb0 <??DataTable51_10>:
 8002fb0:	18c0 2000                                   ... 

08002fb4 <??DataTable51_11>:
 8002fb4:	06c4 2000                                   ... 

08002fb8 <evnt_util_is_connect_setup>:
 8002fb8:	b510      	push	{r4, lr}
 8002fba:	0004      	movs	r4, r0
 8002fbc:	bf14      	ite	ne
 8002fbe:	2001      	movne	r0, #1
 8002fc0:	2000      	moveq	r0, #0
 8002fc2:	f7fd f905 	bl	80001d0 <bsp_assert>
 8002fc6:	f894 008a 	ldrb.w	r0, [r4, #138]	; 0x8a
 8002fca:	bd10      	pop	{r4, pc}

08002fcc <evnt_utils_update_sleep_clock_accuracy>:
 8002fcc:	f013 b9eb 	b.w	80163a6 <db_set_slp_clk_accuracy>

08002fd0 <evnt_util_set_prdc_clbr_exce_state>:
 8002fd0:	b538      	push	{r3, r4, r5, lr}
 8002fd2:	4605      	mov	r5, r0
 8002fd4:	f7fd fb23 	bl	800061e <evnt_schdlr_get_prdc_clbr_evnt_hndl>
 8002fd8:	4604      	mov	r4, r0
 8002fda:	0028      	movs	r0, r5
 8002fdc:	bf16      	itet	ne
 8002fde:	2d01      	cmpne	r5, #1
 8002fe0:	2001      	moveq	r0, #1
 8002fe2:	2000      	movne	r0, #0
 8002fe4:	f7fd f8f4 	bl	80001d0 <bsp_assert>
 8002fe8:	f894 0044 	ldrb.w	r0, [r4, #68]	; 0x44
 8002fec:	b12c      	cbz	r4, 8002ffa <??evnt_util_set_prdc_clbr_exce_state_0>
 8002fee:	b10d      	cbz	r5, 8002ff4 <??evnt_util_set_prdc_clbr_exce_state_1>
 8002ff0:	1c40      	adds	r0, r0, #1
 8002ff2:	e002      	b.n	8002ffa <??evnt_util_set_prdc_clbr_exce_state_0>

08002ff4 <??evnt_util_set_prdc_clbr_exce_state_1>:
 8002ff4:	0001      	movs	r1, r0
 8002ff6:	bf18      	it	ne
 8002ff8:	1e40      	subne	r0, r0, #1

08002ffa <??evnt_util_set_prdc_clbr_exce_state_0>:
 8002ffa:	f884 0044 	strb.w	r0, [r4, #68]	; 0x44
 8002ffe:	bd31      	pop	{r0, r4, r5, pc}

08003000 <?_0>:
 8003000:	4441 5f56 4e49 0044                         ADV_IND.

08003008 <?_1>:
 8003008:	4441 5f56 4944 4552 5443 495f 444e 0000     ADV_DIRECT_IND..

08003018 <?_2>:
 8003018:	4441 5f56 4353 4e41 495f 444e 0000 0000     ADV_SCAN_IND....

08003028 <?_3>:
 8003028:	4441 5f56 4f4e 434e 4e4f 5f4e 4e49 0044     ADV_NONCONN_IND.

08003038 <?_4>:
 8003038:	4341 5654 535f 4143 004e 0000               ACTV_SCAN...

08003044 <?_5>:
 8003044:	5350 5f56 4353 4e41 0000 0000               PSV_SCAN....

08003050 <?_6>:
 8003050:	4c42 5f45 4e49 5449 455f 4e56 0054 0000     BLE_INIT_EVNT...

08003060 <?_7>:
 8003060:	4f43 4e4e 4d5f 5341 4554 0052               CONN_MASTER.

0800306c <?_8>:
 800306c:	4f43 4e4e 535f 414c 4556 0000               CONN_SLAVE..

08003078 <?_9>:
 8003078:	5444 5f4d 5854 0000                         DTM_TX..

08003080 <?_10>:
 8003080:	5444 5f4d 5852 0000                         DTM_RX..

08003088 <?_11>:
 8003088:	5444 5f4d 4f43 544e 0000 0000               DTM_CONT....

08003094 <?_12>:
 8003094:	5444 5f4d 5453 0050                         DTM_STP.

0800309c <?_13>:
 800309c:	5541 5f58 4441 0056                         AUX_ADV.

080030a4 <?_14>:
 80030a4:	5350 5f56 4e49 5449 0000 0000               PSV_INIT....

080030b0 <?_15>:
 80030b0:	5541 5f58 4843 4941 004e 0000               AUX_CHAIN...

080030bc <?_16>:
 80030bc:	5250 4344 415f 5644 0000 0000               PRDC_ADV....

080030c8 <?_17>:
 80030c8:	5845 5f54 4441 0056                         EXT_ADV.

080030d0 <?_18>:
 80030d0:	5845 5f54 4353 004e                         EXT_SCN.

080030d8 <?_19>:
 80030d8:	5541 5f58 4353 004e                         AUX_SCN.

080030e0 <?_20>:
 80030e0:	5250 4344 535f 4e43 0000 0000               PRDC_SCN....

080030ec <?_21>:
 80030ec:	5250 4344 535f 4e43 435f 4148 4e49 0000     PRDC_SCN_CHAIN..

080030fc <?_22>:
 80030fc:	5845 5f54 4e49 5449 0000 0000               EXT_INIT....

08003108 <?_23>:
 8003108:	5541 5f58 4e49 5449 0000 0000               AUX_INIT....

08003114 <?_24>:
 8003114:	4943 5f47 414d 5453 5245 0000               CIG_MASTER..

08003120 <?_25>:
 8003120:	4943 5f47 4c53 5641 0045 0000               CIG_SLAVE...

0800312c <?_26>:
 800312c:	4942 5f47 4441 0056                         BIG_ADV.

08003134 <?_27>:
 8003134:	4942 5f47 5953 434e 0000 0000               BIG_SYNC....

08003140 <?_28>:
 8003140:	5250 4344 435f 424c 0052 0000               PRDC_CLBR...

0800314c <?_29>:
 800314c:	5845 5254 4c4e 4f5f 5f4e 4449 454c 0000     EXTRNL_ON_IDLE..

0800315c <?_30>:
 800315c:	5845 5254 4c4e 475f 524e 0043               EXTRNL_GNRC.

08003168 <?_31>:
 8003168:	6e55 6e6b 776f 206e 6f6d 6564 0000 0000     Unknown mode....

08003178 <evnt_count_adv_channels::CHANNEL_LOOKUP>:
 8003178:	0100 0201 0201 0302                         ........

08003180 <ll_hci_init>:
 8003180:	b510      	push	{r4, lr}
 8003182:	f8df 4ba4 	ldr.w	r4, [pc, #2980]	; 8003d28 <??DataTable32>
 8003186:	0001      	movs	r1, r0
 8003188:	bf18      	it	ne
 800318a:	6220      	strne	r0, [r4, #32]
 800318c:	221c      	movs	r2, #28
 800318e:	2100      	movs	r1, #0
 8003190:	1d20      	adds	r0, r4, #4
 8003192:	f00b fd2a 	bl	800ebea <ble_memset>
 8003196:	f641 71ff 	movw	r1, #8191	; 0x1fff
 800319a:	6061      	str	r1, [r4, #4]
 800319c:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 80031a0:	60a0      	str	r0, [r4, #8]
 80031a2:	211f      	movs	r1, #31
 80031a4:	6161      	str	r1, [r4, #20]
 80031a6:	2000      	movs	r0, #0
 80031a8:	bd10      	pop	{r4, pc}

080031aa <hci_get_dis_tbl>:
 80031aa:	f8df 1b80 	ldr.w	r1, [pc, #2944]	; 8003d2c <??DataTable32_1>
 80031ae:	6001      	str	r1, [r0, #0]
 80031b0:	4770      	bx	lr

080031b2 <hci_form_hdr>:
 80031b2:	b570      	push	{r4, r5, r6, lr}
 80031b4:	4605      	mov	r5, r0
 80031b6:	460e      	mov	r6, r1
 80031b8:	f8df 0b74 	ldr.w	r0, [pc, #2932]	; 8003d30 <??DataTable32_2>
 80031bc:	f002 f82c 	bl	8005218 <os_mem_pool_alloc>
 80031c0:	0004      	movs	r4, r0
 80031c2:	bf14      	ite	ne
 80031c4:	2001      	movne	r0, #1
 80031c6:	2000      	moveq	r0, #0
 80031c8:	f7fd f802 	bl	80001d0 <bsp_assert>
 80031cc:	1e70      	subs	r0, r6, #1
 80031ce:	4180      	sbcs	r0, r0
 80031d0:	6025      	str	r5, [r4, #0]
 80031d2:	43c0      	mvns	r0, r0
 80031d4:	81a6      	strh	r6, [r4, #12]
 80031d6:	0fc0      	lsrs	r0, r0, #31
 80031d8:	f7fc fffa 	bl	80001d0 <bsp_assert>
 80031dc:	2000      	movs	r0, #0
 80031de:	8160      	strh	r0, [r4, #10]
 80031e0:	2108      	movs	r1, #8
 80031e2:	73a1      	strb	r1, [r4, #14]
 80031e4:	4620      	mov	r0, r4
 80031e6:	bd70      	pop	{r4, r5, r6, pc}

080031e8 <hci_le_enhanced_conn_cmplt_evnt>:
 80031e8:	e92d 4ffe 	stmdb	sp!, {r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80031ec:	f8df 8b38 	ldr.w	r8, [pc, #2872]	; 8003d28 <??DataTable32>
 80031f0:	f8d8 401c 	ldr.w	r4, [r8, #28]
 80031f4:	2c00      	cmp	r4, #0
 80031f6:	f000 8097 	beq.w	8003328 <??hci_le_enhanced_conn_cmplt_evnt_0>
 80031fa:	f8d8 4014 	ldr.w	r4, [r8, #20]
 80031fe:	9001      	str	r0, [sp, #4]
 8003200:	468a      	mov	sl, r1
 8003202:	f88d 2000 	strb.w	r2, [sp]
 8003206:	469b      	mov	fp, r3
 8003208:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 800320a:	9e10      	ldr	r6, [sp, #64]	; 0x40
 800320c:	9f11      	ldr	r7, [sp, #68]	; 0x44
 800320e:	f8dd 9048 	ldr.w	r9, [sp, #72]	; 0x48
 8003212:	05a1      	lsls	r1, r4, #22
 8003214:	d52a      	bpl.n	800326c <??hci_le_enhanced_conn_cmplt_evnt_1>
 8003216:	f8df 0b1c 	ldr.w	r0, [pc, #2844]	; 8003d34 <??DataTable32_3>
 800321a:	f001 fffd 	bl	8005218 <os_mem_pool_alloc>
 800321e:	0004      	movs	r4, r0
 8003220:	f000 8082 	beq.w	8003328 <??hci_le_enhanced_conn_cmplt_evnt_0>
 8003224:	203e      	movs	r0, #62	; 0x3e
 8003226:	7020      	strb	r0, [r4, #0]
 8003228:	211f      	movs	r1, #31
 800322a:	220a      	movs	r2, #10
 800322c:	7061      	strb	r1, [r4, #1]
 800322e:	70a2      	strb	r2, [r4, #2]
 8003230:	9801      	ldr	r0, [sp, #4]
 8003232:	f884 a004 	strb.w	sl, [r4, #4]
 8003236:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 800323a:	70e0      	strb	r0, [r4, #3]
 800323c:	f884 a005 	strb.w	sl, [r4, #5]
 8003240:	f89d 0000 	ldrb.w	r0, [sp]
 8003244:	f884 b007 	strb.w	fp, [r4, #7]
 8003248:	71a0      	strb	r0, [r4, #6]
 800324a:	980c      	ldr	r0, [sp, #48]	; 0x30
 800324c:	b128      	cbz	r0, 800325a <??hci_le_enhanced_conn_cmplt_evnt_2>
 800324e:	4601      	mov	r1, r0
 8003250:	2206      	movs	r2, #6
 8003252:	f104 0008 	add.w	r0, r4, #8
 8003256:	f00b fc77 	bl	800eb48 <ble_memcpy>

0800325a <??hci_le_enhanced_conn_cmplt_evnt_2>:
 800325a:	990d      	ldr	r1, [sp, #52]	; 0x34
 800325c:	2900      	cmp	r1, #0
 800325e:	d03b      	beq.n	80032d8 <??hci_le_enhanced_conn_cmplt_evnt_3>
 8003260:	2206      	movs	r2, #6
 8003262:	f104 000e 	add.w	r0, r4, #14
 8003266:	f00b fc6f 	bl	800eb48 <ble_memcpy>
 800326a:	e03a      	b.n	80032e2 <??hci_le_enhanced_conn_cmplt_evnt_4>

0800326c <??hci_le_enhanced_conn_cmplt_evnt_1>:
 800326c:	07e0      	lsls	r0, r4, #31
 800326e:	d55b      	bpl.n	8003328 <??hci_le_enhanced_conn_cmplt_evnt_0>
 8003270:	f8df 0ac0 	ldr.w	r0, [pc, #2752]	; 8003d34 <??DataTable32_3>
 8003274:	f001 ffd0 	bl	8005218 <os_mem_pool_alloc>
 8003278:	0004      	movs	r4, r0
 800327a:	d055      	beq.n	8003328 <??hci_le_enhanced_conn_cmplt_evnt_0>
 800327c:	203e      	movs	r0, #62	; 0x3e
 800327e:	7020      	strb	r0, [r4, #0]
 8003280:	2113      	movs	r1, #19
 8003282:	2201      	movs	r2, #1
 8003284:	7061      	strb	r1, [r4, #1]
 8003286:	70a2      	strb	r2, [r4, #2]
 8003288:	9801      	ldr	r0, [sp, #4]
 800328a:	f884 a004 	strb.w	sl, [r4, #4]
 800328e:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8003292:	70e0      	strb	r0, [r4, #3]
 8003294:	f884 a005 	strb.w	sl, [r4, #5]
 8003298:	f89d 0000 	ldrb.w	r0, [sp]
 800329c:	f884 b007 	strb.w	fp, [r4, #7]
 80032a0:	71a0      	strb	r0, [r4, #6]
 80032a2:	980c      	ldr	r0, [sp, #48]	; 0x30
 80032a4:	b930      	cbnz	r0, 80032b4 <??hci_le_enhanced_conn_cmplt_evnt_5>
 80032a6:	2206      	movs	r2, #6
 80032a8:	2100      	movs	r1, #0
 80032aa:	f104 0008 	add.w	r0, r4, #8
 80032ae:	f00b fc9c 	bl	800ebea <ble_memset>
 80032b2:	e005      	b.n	80032c0 <??hci_le_enhanced_conn_cmplt_evnt_6>

080032b4 <??hci_le_enhanced_conn_cmplt_evnt_5>:
 80032b4:	4601      	mov	r1, r0
 80032b6:	2206      	movs	r2, #6
 80032b8:	f104 0008 	add.w	r0, r4, #8
 80032bc:	f00b fc44 	bl	800eb48 <ble_memcpy>

080032c0 <??hci_le_enhanced_conn_cmplt_evnt_6>:
 80032c0:	73a5      	strb	r5, [r4, #14]
 80032c2:	7426      	strb	r6, [r4, #16]
 80032c4:	0a2d      	lsrs	r5, r5, #8
 80032c6:	0a36      	lsrs	r6, r6, #8
 80032c8:	73e5      	strb	r5, [r4, #15]
 80032ca:	7466      	strb	r6, [r4, #17]
 80032cc:	74a7      	strb	r7, [r4, #18]
 80032ce:	0a3f      	lsrs	r7, r7, #8
 80032d0:	74e7      	strb	r7, [r4, #19]
 80032d2:	f884 9014 	strb.w	r9, [r4, #20]
 80032d6:	e01c      	b.n	8003312 <??hci_le_enhanced_conn_cmplt_evnt_7>

080032d8 <??hci_le_enhanced_conn_cmplt_evnt_3>:
 80032d8:	2206      	movs	r2, #6
 80032da:	f104 000e 	add.w	r0, r4, #14
 80032de:	f00b fc84 	bl	800ebea <ble_memset>

080032e2 <??hci_le_enhanced_conn_cmplt_evnt_4>:
 80032e2:	990e      	ldr	r1, [sp, #56]	; 0x38
 80032e4:	b129      	cbz	r1, 80032f2 <??hci_le_enhanced_conn_cmplt_evnt_8>
 80032e6:	2206      	movs	r2, #6
 80032e8:	f104 0014 	add.w	r0, r4, #20
 80032ec:	f00b fc2c 	bl	800eb48 <ble_memcpy>
 80032f0:	e004      	b.n	80032fc <??hci_le_enhanced_conn_cmplt_evnt_9>

080032f2 <??hci_le_enhanced_conn_cmplt_evnt_8>:
 80032f2:	2206      	movs	r2, #6
 80032f4:	f104 0014 	add.w	r0, r4, #20
 80032f8:	f00b fc77 	bl	800ebea <ble_memset>

080032fc <??hci_le_enhanced_conn_cmplt_evnt_9>:
 80032fc:	76a5      	strb	r5, [r4, #26]
 80032fe:	7726      	strb	r6, [r4, #28]
 8003300:	0a2d      	lsrs	r5, r5, #8
 8003302:	0a36      	lsrs	r6, r6, #8
 8003304:	76e5      	strb	r5, [r4, #27]
 8003306:	7766      	strb	r6, [r4, #29]
 8003308:	77a7      	strb	r7, [r4, #30]
 800330a:	0a3f      	lsrs	r7, r7, #8
 800330c:	77e7      	strb	r7, [r4, #31]
 800330e:	f884 9020 	strb.w	r9, [r4, #32]

08003312 <??hci_le_enhanced_conn_cmplt_evnt_7>:
 8003312:	7861      	ldrb	r1, [r4, #1]
 8003314:	4620      	mov	r0, r4
 8003316:	1c89      	adds	r1, r1, #2
 8003318:	f7ff ff4b 	bl	80031b2 <hci_form_hdr>
 800331c:	f8d8 1020 	ldr.w	r1, [r8, #32]
 8003320:	b003      	add	sp, #12
 8003322:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}

08003326 <__iar_annotation$$tailcall>:
 8003326:	4708      	bx	r1

08003328 <??hci_le_enhanced_conn_cmplt_evnt_0>:
 8003328:	b003      	add	sp, #12
 800332a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0800332e <hci_disconn_cmplt_evnt>:
 800332e:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8003332:	4605      	mov	r5, r0
 8003334:	f8df 69f0 	ldr.w	r6, [pc, #2544]	; 8003d28 <??DataTable32>
 8003338:	7a30      	ldrb	r0, [r6, #8]
 800333a:	460f      	mov	r7, r1
 800333c:	4690      	mov	r8, r2
 800333e:	06c1      	lsls	r1, r0, #27
 8003340:	d518      	bpl.n	8003374 <??hci_disconn_cmplt_evnt_0>
 8003342:	f8df 09f0 	ldr.w	r0, [pc, #2544]	; 8003d34 <??DataTable32_3>
 8003346:	f001 ff67 	bl	8005218 <os_mem_pool_alloc>
 800334a:	0004      	movs	r4, r0
 800334c:	d012      	beq.n	8003374 <??hci_disconn_cmplt_evnt_0>
 800334e:	2005      	movs	r0, #5
 8003350:	7020      	strb	r0, [r4, #0]
 8003352:	70e7      	strb	r7, [r4, #3]
 8003354:	2104      	movs	r1, #4
 8003356:	0a3f      	lsrs	r7, r7, #8
 8003358:	7061      	strb	r1, [r4, #1]
 800335a:	70a5      	strb	r5, [r4, #2]
 800335c:	7127      	strb	r7, [r4, #4]
 800335e:	f884 8005 	strb.w	r8, [r4, #5]
 8003362:	f8df 09cc 	ldr.w	r0, [pc, #2508]	; 8003d30 <??DataTable32_2>
 8003366:	f001 ff57 	bl	8005218 <os_mem_pool_alloc>
 800336a:	0005      	movs	r5, r0
 800336c:	bf14      	ite	ne
 800336e:	2001      	movne	r0, #1
 8003370:	2000      	moveq	r0, #0
 8003372:	e168      	b.n	8003646 <?Subroutine0>

08003374 <??hci_disconn_cmplt_evnt_0>:
 8003374:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

08003378 <hci_le_data_buff_ovrflw_event>:
 8003378:	b570      	push	{r4, r5, r6, lr}
 800337a:	4604      	mov	r4, r0
 800337c:	f8df 69a8 	ldr.w	r6, [pc, #2472]	; 8003d28 <??DataTable32>
 8003380:	68b0      	ldr	r0, [r6, #8]
 8003382:	0181      	lsls	r1, r0, #6
 8003384:	d513      	bpl.n	80033ae <??hci_le_data_buff_ovrflw_event_0>
 8003386:	f8df 09ac 	ldr.w	r0, [pc, #2476]	; 8003d34 <??DataTable32_3>
 800338a:	f001 ff45 	bl	8005218 <os_mem_pool_alloc>
 800338e:	0005      	movs	r5, r0
 8003390:	d00d      	beq.n	80033ae <??hci_le_data_buff_ovrflw_event_0>
 8003392:	201a      	movs	r0, #26
 8003394:	7028      	strb	r0, [r5, #0]
 8003396:	2101      	movs	r1, #1
 8003398:	7069      	strb	r1, [r5, #1]
 800339a:	70ac      	strb	r4, [r5, #2]
 800339c:	f8df 0990 	ldr.w	r0, [pc, #2448]	; 8003d30 <??DataTable32_2>
 80033a0:	f001 ff3a 	bl	8005218 <os_mem_pool_alloc>
 80033a4:	0004      	movs	r4, r0
 80033a6:	bf14      	ite	ne
 80033a8:	2001      	movne	r0, #1
 80033aa:	2000      	moveq	r0, #0
 80033ac:	e2cc      	b.n	8003948 <?Subroutine1>

080033ae <??hci_le_data_buff_ovrflw_event_0>:
 80033ae:	bd70      	pop	{r4, r5, r6, pc}

080033b0 <hci_read_rmt_ver_info_cmplt_evnt>:
 80033b0:	b57d      	push	{r0, r2, r3, r4, r5, r6, lr}
 80033b2:	f8df 6974 	ldr.w	r6, [pc, #2420]	; 8003d28 <??DataTable32>
 80033b6:	68b0      	ldr	r0, [r6, #8]
 80033b8:	460d      	mov	r5, r1
 80033ba:	b081      	sub	sp, #4
 80033bc:	0501      	lsls	r1, r0, #20
 80033be:	d528      	bpl.n	8003412 <??hci_read_rmt_ver_info_cmplt_evnt_0>
 80033c0:	f8df 0970 	ldr.w	r0, [pc, #2416]	; 8003d34 <??DataTable32_3>
 80033c4:	f001 ff28 	bl	8005218 <os_mem_pool_alloc>
 80033c8:	0004      	movs	r4, r0
 80033ca:	d022      	beq.n	8003412 <??hci_read_rmt_ver_info_cmplt_evnt_0>
 80033cc:	200c      	movs	r0, #12
 80033ce:	7020      	strb	r0, [r4, #0]
 80033d0:	2108      	movs	r1, #8
 80033d2:	7061      	strb	r1, [r4, #1]
 80033d4:	2201      	movs	r2, #1
 80033d6:	a901      	add	r1, sp, #4
 80033d8:	1ca0      	adds	r0, r4, #2
 80033da:	f00b fbb5 	bl	800eb48 <ble_memcpy>
 80033de:	70e5      	strb	r5, [r4, #3]
 80033e0:	0a2d      	lsrs	r5, r5, #8
 80033e2:	7125      	strb	r5, [r4, #4]
 80033e4:	2201      	movs	r2, #1
 80033e6:	a902      	add	r1, sp, #8
 80033e8:	1d60      	adds	r0, r4, #5
 80033ea:	f00b fbad 	bl	800eb48 <ble_memcpy>
 80033ee:	2202      	movs	r2, #2
 80033f0:	a903      	add	r1, sp, #12
 80033f2:	1da0      	adds	r0, r4, #6
 80033f4:	f00b fba8 	bl	800eb48 <ble_memcpy>
 80033f8:	2202      	movs	r2, #2
 80033fa:	a908      	add	r1, sp, #32
 80033fc:	f104 0008 	add.w	r0, r4, #8
 8003400:	f00b fba2 	bl	800eb48 <ble_memcpy>
 8003404:	7861      	ldrb	r1, [r4, #1]
 8003406:	4620      	mov	r0, r4
 8003408:	1c89      	adds	r1, r1, #2
 800340a:	f7ff fed2 	bl	80031b2 <hci_form_hdr>
 800340e:	6a31      	ldr	r1, [r6, #32]
 8003410:	4788      	blx	r1

08003412 <??hci_read_rmt_ver_info_cmplt_evnt_0>:
 8003412:	b004      	add	sp, #16
 8003414:	bd70      	pop	{r4, r5, r6, pc}

08003416 <hci_le_read_rmt_used_features_cmplt_evnt>:
 8003416:	b5f1      	push	{r0, r4, r5, r6, r7, lr}
 8003418:	b082      	sub	sp, #8
 800341a:	2004      	movs	r0, #4
 800341c:	f88d 0000 	strb.w	r0, [sp]
 8003420:	f8df 7904 	ldr.w	r7, [pc, #2308]	; 8003d28 <??DataTable32>
 8003424:	69f8      	ldr	r0, [r7, #28]
 8003426:	460d      	mov	r5, r1
 8003428:	4616      	mov	r6, r2
 800342a:	b328      	cbz	r0, 8003478 <??hci_le_read_rmt_used_features_cmplt_evnt_0>
 800342c:	7d38      	ldrb	r0, [r7, #20]
 800342e:	0701      	lsls	r1, r0, #28
 8003430:	d522      	bpl.n	8003478 <??hci_le_read_rmt_used_features_cmplt_evnt_0>
 8003432:	f8df 0900 	ldr.w	r0, [pc, #2304]	; 8003d34 <??DataTable32_3>
 8003436:	f001 feef 	bl	8005218 <os_mem_pool_alloc>
 800343a:	0004      	movs	r4, r0
 800343c:	d01c      	beq.n	8003478 <??hci_le_read_rmt_used_features_cmplt_evnt_0>
 800343e:	203e      	movs	r0, #62	; 0x3e
 8003440:	7020      	strb	r0, [r4, #0]
 8003442:	210c      	movs	r1, #12
 8003444:	7061      	strb	r1, [r4, #1]
 8003446:	2201      	movs	r2, #1
 8003448:	4669      	mov	r1, sp
 800344a:	1ca0      	adds	r0, r4, #2
 800344c:	f00b fb7c 	bl	800eb48 <ble_memcpy>
 8003450:	2201      	movs	r2, #1
 8003452:	a902      	add	r1, sp, #8
 8003454:	1ce0      	adds	r0, r4, #3
 8003456:	f00b fb77 	bl	800eb48 <ble_memcpy>
 800345a:	7125      	strb	r5, [r4, #4]
 800345c:	0a2d      	lsrs	r5, r5, #8
 800345e:	7165      	strb	r5, [r4, #5]
 8003460:	2208      	movs	r2, #8
 8003462:	4631      	mov	r1, r6
 8003464:	1da0      	adds	r0, r4, #6
 8003466:	f00b fb6f 	bl	800eb48 <ble_memcpy>
 800346a:	7861      	ldrb	r1, [r4, #1]
 800346c:	4620      	mov	r0, r4
 800346e:	1c89      	adds	r1, r1, #2
 8003470:	f7ff fe9f 	bl	80031b2 <hci_form_hdr>
 8003474:	6a39      	ldr	r1, [r7, #32]
 8003476:	4788      	blx	r1

08003478 <??hci_le_read_rmt_used_features_cmplt_evnt_0>:
 8003478:	b003      	add	sp, #12
 800347a:	bdf0      	pop	{r4, r5, r6, r7, pc}

0800347c <hci_construct_hw_err_evnt>:
 800347c:	b570      	push	{r4, r5, r6, lr}
 800347e:	4604      	mov	r4, r0
 8003480:	f8df 68a4 	ldr.w	r6, [pc, #2212]	; 8003d28 <??DataTable32>
 8003484:	68b0      	ldr	r0, [r6, #8]
 8003486:	0401      	lsls	r1, r0, #16
 8003488:	d513      	bpl.n	80034b2 <??hci_construct_hw_err_evnt_0>
 800348a:	f8df 08a8 	ldr.w	r0, [pc, #2216]	; 8003d34 <??DataTable32_3>
 800348e:	f001 fec3 	bl	8005218 <os_mem_pool_alloc>
 8003492:	0005      	movs	r5, r0
 8003494:	d00d      	beq.n	80034b2 <??hci_construct_hw_err_evnt_0>
 8003496:	2010      	movs	r0, #16
 8003498:	7028      	strb	r0, [r5, #0]
 800349a:	2101      	movs	r1, #1
 800349c:	7069      	strb	r1, [r5, #1]
 800349e:	70ac      	strb	r4, [r5, #2]
 80034a0:	f8df 088c 	ldr.w	r0, [pc, #2188]	; 8003d30 <??DataTable32_2>
 80034a4:	f001 feb8 	bl	8005218 <os_mem_pool_alloc>
 80034a8:	0004      	movs	r4, r0
 80034aa:	bf14      	ite	ne
 80034ac:	2001      	movne	r0, #1
 80034ae:	2000      	moveq	r0, #0
 80034b0:	e24a      	b.n	8003948 <?Subroutine1>

080034b2 <??hci_construct_hw_err_evnt_0>:
 80034b2:	bd70      	pop	{r4, r5, r6, pc}

080034b4 <hci_send_le_adv_report_pkt>:
 80034b4:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80034b8:	4605      	mov	r5, r0
 80034ba:	f8df 886c 	ldr.w	r8, [pc, #2156]	; 8003d28 <??DataTable32>
 80034be:	f8d8 001c 	ldr.w	r0, [r8, #28]
 80034c2:	460e      	mov	r6, r1
 80034c4:	2800      	cmp	r0, #0
 80034c6:	d062      	beq.n	800358e <??hci_send_le_adv_report_pkt_0>
 80034c8:	f898 0014 	ldrb.w	r0, [r8, #20]
 80034cc:	0781      	lsls	r1, r0, #30
 80034ce:	d55e      	bpl.n	800358e <??hci_send_le_adv_report_pkt_0>
 80034d0:	f8df 0860 	ldr.w	r0, [pc, #2144]	; 8003d34 <??DataTable32_3>
 80034d4:	f001 fea0 	bl	8005218 <os_mem_pool_alloc>
 80034d8:	0004      	movs	r4, r0
 80034da:	d058      	beq.n	800358e <??hci_send_le_adv_report_pkt_0>
 80034dc:	68a8      	ldr	r0, [r5, #8]
 80034de:	8a69      	ldrh	r1, [r5, #18]
 80034e0:	7d2f      	ldrb	r7, [r5, #20]
 80034e2:	2202      	movs	r2, #2
 80034e4:	eb00 0901 	add.w	r9, r0, r1
 80034e8:	203e      	movs	r0, #62	; 0x3e
 80034ea:	7020      	strb	r0, [r4, #0]
 80034ec:	f107 010c 	add.w	r1, r7, #12
 80034f0:	7061      	strb	r1, [r4, #1]
 80034f2:	70a2      	strb	r2, [r4, #2]
 80034f4:	70e6      	strb	r6, [r4, #3]
 80034f6:	7e68      	ldrb	r0, [r5, #25]
 80034f8:	2206      	movs	r2, #6
 80034fa:	7120      	strb	r0, [r4, #4]
 80034fc:	7ea9      	ldrb	r1, [r5, #26]
 80034fe:	1da0      	adds	r0, r4, #6
 8003500:	7161      	strb	r1, [r4, #5]
 8003502:	4629      	mov	r1, r5
 8003504:	f00b fb20 	bl	800eb48 <ble_memcpy>
 8003508:	7327      	strb	r7, [r4, #12]
 800350a:	463a      	mov	r2, r7
 800350c:	4649      	mov	r1, r9
 800350e:	f104 000d 	add.w	r0, r4, #13
 8003512:	f00b fb19 	bl	800eb48 <ble_memcpy>
 8003516:	7e28      	ldrb	r0, [r5, #24]
 8003518:	19e1      	adds	r1, r4, r7
 800351a:	2e02      	cmp	r6, #2
 800351c:	7348      	strb	r0, [r1, #13]
 800351e:	d12c      	bne.n	800357a <??hci_send_le_adv_report_pkt_1>
 8003520:	6a68      	ldr	r0, [r5, #36]	; 0x24
 8003522:	8de9      	ldrh	r1, [r5, #46]	; 0x2e
 8003524:	f895 b030 	ldrb.w	fp, [r5, #48]	; 0x30
 8003528:	19e2      	adds	r2, r4, r7
 800352a:	eb00 0a01 	add.w	sl, r0, r1
 800352e:	eb0b 0007 	add.w	r0, fp, r7
 8003532:	3016      	adds	r0, #22
 8003534:	7060      	strb	r0, [r4, #1]
 8003536:	f105 0035 	add.w	r0, r5, #53	; 0x35
 800353a:	7801      	ldrb	r1, [r0, #0]
 800353c:	19e3      	adds	r3, r4, r7
 800353e:	f107 0610 	add.w	r6, r7, #16
 8003542:	7391      	strb	r1, [r2, #14]
 8003544:	7840      	ldrb	r0, [r0, #1]
 8003546:	2206      	movs	r2, #6
 8003548:	f105 011c 	add.w	r1, r5, #28
 800354c:	73d8      	strb	r0, [r3, #15]
 800354e:	b2f6      	uxtb	r6, r6
 8003550:	19a0      	adds	r0, r4, r6
 8003552:	f00b faf9 	bl	800eb48 <ble_memcpy>
 8003556:	8e28      	ldrh	r0, [r5, #48]	; 0x30
 8003558:	f106 0907 	add.w	r9, r6, #7
 800355c:	1da1      	adds	r1, r4, #6
 800355e:	fa5f f989 	uxtb.w	r9, r9
 8003562:	5588      	strb	r0, [r1, r6]
 8003564:	465a      	mov	r2, fp
 8003566:	4651      	mov	r1, sl
 8003568:	eb04 0009 	add.w	r0, r4, r9
 800356c:	f00b faec 	bl	800eb48 <ble_memcpy>
 8003570:	f895 0034 	ldrb.w	r0, [r5, #52]	; 0x34
 8003574:	44d9      	add	r9, fp
 8003576:	f804 0009 	strb.w	r0, [r4, r9]

0800357a <??hci_send_le_adv_report_pkt_1>:
 800357a:	7861      	ldrb	r1, [r4, #1]
 800357c:	4620      	mov	r0, r4
 800357e:	1c89      	adds	r1, r1, #2
 8003580:	f7ff fe17 	bl	80031b2 <hci_form_hdr>
 8003584:	f8d8 1020 	ldr.w	r1, [r8, #32]
 8003588:	e8bd 4ff4 	ldmia.w	sp!, {r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}

0800358c <__iar_annotation$$tailcall>:
 800358c:	4708      	bx	r1

0800358e <??hci_send_le_adv_report_pkt_0>:
 800358e:	e8bd 8ff1 	ldmia.w	sp!, {r0, r4, r5, r6, r7, r8, r9, sl, fp, pc}

08003592 <hci_send_le_dir_adv_report_pkt>:
 8003592:	b570      	push	{r4, r5, r6, lr}
 8003594:	4606      	mov	r6, r0
 8003596:	f8df 5790 	ldr.w	r5, [pc, #1936]	; 8003d28 <??DataTable32>
 800359a:	69e8      	ldr	r0, [r5, #28]
 800359c:	b368      	cbz	r0, 80035fa <??hci_send_le_dir_adv_report_pkt_0>
 800359e:	6968      	ldr	r0, [r5, #20]
 80035a0:	0541      	lsls	r1, r0, #21
 80035a2:	d52a      	bpl.n	80035fa <??hci_send_le_dir_adv_report_pkt_0>
 80035a4:	f8df 078c 	ldr.w	r0, [pc, #1932]	; 8003d34 <??DataTable32_3>
 80035a8:	f001 fe36 	bl	8005218 <os_mem_pool_alloc>
 80035ac:	0004      	movs	r4, r0
 80035ae:	d024      	beq.n	80035fa <??hci_send_le_dir_adv_report_pkt_0>
 80035b0:	203e      	movs	r0, #62	; 0x3e
 80035b2:	7020      	strb	r0, [r4, #0]
 80035b4:	2112      	movs	r1, #18
 80035b6:	220b      	movs	r2, #11
 80035b8:	2001      	movs	r0, #1
 80035ba:	7061      	strb	r1, [r4, #1]
 80035bc:	70a2      	strb	r2, [r4, #2]
 80035be:	70e0      	strb	r0, [r4, #3]
 80035c0:	7c71      	ldrb	r1, [r6, #17]
 80035c2:	2206      	movs	r2, #6
 80035c4:	7121      	strb	r1, [r4, #4]
 80035c6:	7cb0      	ldrb	r0, [r6, #18]
 80035c8:	4631      	mov	r1, r6
 80035ca:	7160      	strb	r0, [r4, #5]
 80035cc:	1da0      	adds	r0, r4, #6
 80035ce:	f00b fabb 	bl	800eb48 <ble_memcpy>
 80035d2:	7cf0      	ldrb	r0, [r6, #19]
 80035d4:	2206      	movs	r2, #6
 80035d6:	f106 0108 	add.w	r1, r6, #8
 80035da:	7320      	strb	r0, [r4, #12]
 80035dc:	f104 000d 	add.w	r0, r4, #13
 80035e0:	f00b fab2 	bl	800eb48 <ble_memcpy>
 80035e4:	7c30      	ldrb	r0, [r6, #16]
 80035e6:	7861      	ldrb	r1, [r4, #1]
 80035e8:	74e0      	strb	r0, [r4, #19]
 80035ea:	4620      	mov	r0, r4
 80035ec:	1c89      	adds	r1, r1, #2
 80035ee:	f7ff fde0 	bl	80031b2 <hci_form_hdr>
 80035f2:	6a29      	ldr	r1, [r5, #32]
 80035f4:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}

080035f8 <__iar_annotation$$tailcall>:
 80035f8:	4708      	bx	r1

080035fa <??hci_send_le_dir_adv_report_pkt_0>:
 80035fa:	bd70      	pop	{r4, r5, r6, pc}

080035fc <hci_encrpt_chng_evnt>:
 80035fc:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8003600:	4605      	mov	r5, r0
 8003602:	f8df 6724 	ldr.w	r6, [pc, #1828]	; 8003d28 <??DataTable32>
 8003606:	7a30      	ldrb	r0, [r6, #8]
 8003608:	460f      	mov	r7, r1
 800360a:	4690      	mov	r8, r2
 800360c:	0601      	lsls	r1, r0, #24
 800360e:	d518      	bpl.n	8003642 <??hci_encrpt_chng_evnt_0>
 8003610:	f8df 0720 	ldr.w	r0, [pc, #1824]	; 8003d34 <??DataTable32_3>
 8003614:	f001 fe00 	bl	8005218 <os_mem_pool_alloc>
 8003618:	0004      	movs	r4, r0
 800361a:	d012      	beq.n	8003642 <??hci_encrpt_chng_evnt_0>
 800361c:	2008      	movs	r0, #8
 800361e:	7020      	strb	r0, [r4, #0]
 8003620:	70e7      	strb	r7, [r4, #3]
 8003622:	2104      	movs	r1, #4
 8003624:	0a3f      	lsrs	r7, r7, #8
 8003626:	7061      	strb	r1, [r4, #1]
 8003628:	70a5      	strb	r5, [r4, #2]
 800362a:	7127      	strb	r7, [r4, #4]
 800362c:	f884 8005 	strb.w	r8, [r4, #5]
 8003630:	f8df 06fc 	ldr.w	r0, [pc, #1788]	; 8003d30 <??DataTable32_2>
 8003634:	f001 fdf0 	bl	8005218 <os_mem_pool_alloc>
 8003638:	0005      	movs	r5, r0
 800363a:	bf14      	ite	ne
 800363c:	2001      	movne	r0, #1
 800363e:	2000      	moveq	r0, #0
 8003640:	e001      	b.n	8003646 <?Subroutine0>

08003642 <??hci_encrpt_chng_evnt_0>:
 8003642:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

08003646 <?Subroutine0>:
 8003646:	f7fc fdc3 	bl	80001d0 <bsp_assert>
 800364a:	602c      	str	r4, [r5, #0]
 800364c:	2006      	movs	r0, #6
 800364e:	81a8      	strh	r0, [r5, #12]
 8003650:	2001      	movs	r0, #1
 8003652:	f7fc fdbd 	bl	80001d0 <bsp_assert>
 8003656:	2000      	movs	r0, #0
 8003658:	2108      	movs	r1, #8
 800365a:	8168      	strh	r0, [r5, #10]
 800365c:	73a9      	strb	r1, [r5, #14]
 800365e:	4628      	mov	r0, r5
 8003660:	6a32      	ldr	r2, [r6, #32]
 8003662:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}

08003666 <__iar_annotation$$tailcall>:
 8003666:	4710      	bx	r2

08003668 <hci_encrpt_key_rfrsh_cmplt_evnt>:
 8003668:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800366a:	4604      	mov	r4, r0
 800366c:	f8df 66b8 	ldr.w	r6, [pc, #1720]	; 8003d28 <??DataTable32>
 8003670:	68b0      	ldr	r0, [r6, #8]
 8003672:	460f      	mov	r7, r1
 8003674:	0401      	lsls	r1, r0, #16
 8003676:	d523      	bpl.n	80036c0 <??hci_encrpt_key_rfrsh_cmplt_evnt_0>
 8003678:	f8df 06b8 	ldr.w	r0, [pc, #1720]	; 8003d34 <??DataTable32_3>
 800367c:	f001 fdcc 	bl	8005218 <os_mem_pool_alloc>
 8003680:	0005      	movs	r5, r0
 8003682:	d01d      	beq.n	80036c0 <??hci_encrpt_key_rfrsh_cmplt_evnt_0>
 8003684:	2030      	movs	r0, #48	; 0x30
 8003686:	7028      	strb	r0, [r5, #0]
 8003688:	70ef      	strb	r7, [r5, #3]
 800368a:	2103      	movs	r1, #3
 800368c:	0a3f      	lsrs	r7, r7, #8
 800368e:	7069      	strb	r1, [r5, #1]
 8003690:	70ac      	strb	r4, [r5, #2]
 8003692:	712f      	strb	r7, [r5, #4]
 8003694:	f8df 0698 	ldr.w	r0, [pc, #1688]	; 8003d30 <??DataTable32_2>
 8003698:	f001 fdbe 	bl	8005218 <os_mem_pool_alloc>
 800369c:	0004      	movs	r4, r0
 800369e:	bf14      	ite	ne
 80036a0:	2001      	movne	r0, #1
 80036a2:	2000      	moveq	r0, #0
 80036a4:	f7fc fd94 	bl	80001d0 <bsp_assert>
 80036a8:	6025      	str	r5, [r4, #0]
 80036aa:	2005      	movs	r0, #5
 80036ac:	81a0      	strh	r0, [r4, #12]
 80036ae:	2001      	movs	r0, #1
 80036b0:	f7fc fd8e 	bl	80001d0 <bsp_assert>
 80036b4:	2000      	movs	r0, #0
 80036b6:	2108      	movs	r1, #8
 80036b8:	8160      	strh	r0, [r4, #10]
 80036ba:	73a1      	strb	r1, [r4, #14]
 80036bc:	4620      	mov	r0, r4
 80036be:	e0df      	b.n	8003880 <?Subroutine2>

080036c0 <??hci_encrpt_key_rfrsh_cmplt_evnt_0>:
 80036c0:	bdf1      	pop	{r0, r4, r5, r6, r7, pc}

080036c2 <hci_le_long_trm_key_rqst_evnt>:
 80036c2:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 80036c6:	4607      	mov	r7, r0
 80036c8:	f8df 665c 	ldr.w	r6, [pc, #1628]	; 8003d28 <??DataTable32>
 80036cc:	69f0      	ldr	r0, [r6, #28]
 80036ce:	4688      	mov	r8, r1
 80036d0:	4691      	mov	r9, r2
 80036d2:	2500      	movs	r5, #0
 80036d4:	b350      	cbz	r0, 800372c <??hci_le_long_trm_key_rqst_evnt_0>
 80036d6:	7d30      	ldrb	r0, [r6, #20]
 80036d8:	06c1      	lsls	r1, r0, #27
 80036da:	bf58      	it	pl
 80036dc:	251a      	movpl	r5, #26
 80036de:	d525      	bpl.n	800372c <??hci_le_long_trm_key_rqst_evnt_0>
 80036e0:	f8df 0650 	ldr.w	r0, [pc, #1616]	; 8003d34 <??DataTable32_3>
 80036e4:	f001 fd98 	bl	8005218 <os_mem_pool_alloc>
 80036e8:	0004      	movs	r4, r0
 80036ea:	d104      	bne.n	80036f6 <??hci_le_long_trm_key_rqst_evnt_1>
 80036ec:	203f      	movs	r0, #63	; 0x3f
 80036ee:	2507      	movs	r5, #7
 80036f0:	f7fc fd9e 	bl	8000230 <bsp_debug_gpio_toggle>
 80036f4:	e01a      	b.n	800372c <??hci_le_long_trm_key_rqst_evnt_0>

080036f6 <??hci_le_long_trm_key_rqst_evnt_1>:
 80036f6:	203e      	movs	r0, #62	; 0x3e
 80036f8:	7020      	strb	r0, [r4, #0]
 80036fa:	210d      	movs	r1, #13
 80036fc:	2205      	movs	r2, #5
 80036fe:	70e7      	strb	r7, [r4, #3]
 8003700:	7061      	strb	r1, [r4, #1]
 8003702:	70a2      	strb	r2, [r4, #2]
 8003704:	0a3f      	lsrs	r7, r7, #8
 8003706:	7127      	strb	r7, [r4, #4]
 8003708:	2208      	movs	r2, #8
 800370a:	4641      	mov	r1, r8
 800370c:	1d60      	adds	r0, r4, #5
 800370e:	f00b fa1b 	bl	800eb48 <ble_memcpy>
 8003712:	7861      	ldrb	r1, [r4, #1]
 8003714:	f884 900d 	strb.w	r9, [r4, #13]
 8003718:	ea4f 2919 	mov.w	r9, r9, lsr #8
 800371c:	f884 900e 	strb.w	r9, [r4, #14]
 8003720:	1c89      	adds	r1, r1, #2
 8003722:	4620      	mov	r0, r4
 8003724:	f7ff fd45 	bl	80031b2 <hci_form_hdr>
 8003728:	6a31      	ldr	r1, [r6, #32]
 800372a:	4788      	blx	r1

0800372c <??hci_le_long_trm_key_rqst_evnt_0>:
 800372c:	4628      	mov	r0, r5
 800372e:	e8bd 83f2 	ldmia.w	sp!, {r1, r4, r5, r6, r7, r8, r9, pc}

08003732 <hci_authn_pyld_tout_exprd_evnt>:
 8003732:	b570      	push	{r4, r5, r6, lr}
 8003734:	4604      	mov	r4, r0
 8003736:	f8df 65f0 	ldr.w	r6, [pc, #1520]	; 8003d28 <??DataTable32>
 800373a:	6930      	ldr	r0, [r6, #16]
 800373c:	0201      	lsls	r1, r0, #8
 800373e:	d519      	bpl.n	8003774 <??hci_authn_pyld_tout_exprd_evnt_0>
 8003740:	f8df 05f0 	ldr.w	r0, [pc, #1520]	; 8003d34 <??DataTable32_3>
 8003744:	f001 fd68 	bl	8005218 <os_mem_pool_alloc>
 8003748:	0005      	movs	r5, r0
 800374a:	d013      	beq.n	8003774 <??hci_authn_pyld_tout_exprd_evnt_0>
 800374c:	2057      	movs	r0, #87	; 0x57
 800374e:	7028      	strb	r0, [r5, #0]
 8003750:	70ac      	strb	r4, [r5, #2]
 8003752:	2102      	movs	r1, #2
 8003754:	0a24      	lsrs	r4, r4, #8
 8003756:	7069      	strb	r1, [r5, #1]
 8003758:	70ec      	strb	r4, [r5, #3]
 800375a:	f8df 05d4 	ldr.w	r0, [pc, #1492]	; 8003d30 <??DataTable32_2>
 800375e:	f001 fd5b 	bl	8005218 <os_mem_pool_alloc>
 8003762:	0004      	movs	r4, r0
 8003764:	bf14      	ite	ne
 8003766:	2001      	movne	r0, #1
 8003768:	2000      	moveq	r0, #0
 800376a:	f7fc fd31 	bl	80001d0 <bsp_assert>
 800376e:	6025      	str	r5, [r4, #0]
 8003770:	2004      	movs	r0, #4
 8003772:	e0ed      	b.n	8003950 <??Subroutine3_0>

08003774 <??hci_authn_pyld_tout_exprd_evnt_0>:
 8003774:	bd70      	pop	{r4, r5, r6, pc}

08003776 <hci_le_rem_conn_param_req_event>:
 8003776:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800377a:	4605      	mov	r5, r0
 800377c:	f8df 75a8 	ldr.w	r7, [pc, #1448]	; 8003d28 <??DataTable32>
 8003780:	69f8      	ldr	r0, [r7, #28]
 8003782:	2600      	movs	r6, #0
 8003784:	4688      	mov	r8, r1
 8003786:	4691      	mov	r9, r2
 8003788:	469a      	mov	sl, r3
 800378a:	2800      	cmp	r0, #0
 800378c:	d043      	beq.n	8003816 <??hci_le_rem_conn_param_req_event_0>
 800378e:	7d38      	ldrb	r0, [r7, #20]
 8003790:	0681      	lsls	r1, r0, #26
 8003792:	d540      	bpl.n	8003816 <??hci_le_rem_conn_param_req_event_0>
 8003794:	f8df 059c 	ldr.w	r0, [pc, #1436]	; 8003d34 <??DataTable32_3>
 8003798:	f001 fd3e 	bl	8005218 <os_mem_pool_alloc>
 800379c:	0004      	movs	r4, r0
 800379e:	d104      	bne.n	80037aa <??hci_le_rem_conn_param_req_event_1>
 80037a0:	203f      	movs	r0, #63	; 0x3f
 80037a2:	2607      	movs	r6, #7
 80037a4:	f7fc fd44 	bl	8000230 <bsp_debug_gpio_toggle>
 80037a8:	e036      	b.n	8003818 <??hci_le_rem_conn_param_req_event_2>

080037aa <??hci_le_rem_conn_param_req_event_1>:
 80037aa:	9808      	ldr	r0, [sp, #32]
 80037ac:	213e      	movs	r1, #62	; 0x3e
 80037ae:	7021      	strb	r1, [r4, #0]
 80037b0:	72e0      	strb	r0, [r4, #11]
 80037b2:	70e5      	strb	r5, [r4, #3]
 80037b4:	f884 8005 	strb.w	r8, [r4, #5]
 80037b8:	f884 9007 	strb.w	r9, [r4, #7]
 80037bc:	f884 a009 	strb.w	sl, [r4, #9]
 80037c0:	0a00      	lsrs	r0, r0, #8
 80037c2:	220b      	movs	r2, #11
 80037c4:	2306      	movs	r3, #6
 80037c6:	0a2d      	lsrs	r5, r5, #8
 80037c8:	ea4f 2818 	mov.w	r8, r8, lsr #8
 80037cc:	ea4f 2919 	mov.w	r9, r9, lsr #8
 80037d0:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 80037d4:	7320      	strb	r0, [r4, #12]
 80037d6:	7062      	strb	r2, [r4, #1]
 80037d8:	70a3      	strb	r3, [r4, #2]
 80037da:	7125      	strb	r5, [r4, #4]
 80037dc:	f884 8006 	strb.w	r8, [r4, #6]
 80037e0:	f884 9008 	strb.w	r9, [r4, #8]
 80037e4:	f884 a00a 	strb.w	sl, [r4, #10]
 80037e8:	f8df 0544 	ldr.w	r0, [pc, #1348]	; 8003d30 <??DataTable32_2>
 80037ec:	f001 fd14 	bl	8005218 <os_mem_pool_alloc>
 80037f0:	0005      	movs	r5, r0
 80037f2:	bf14      	ite	ne
 80037f4:	2001      	movne	r0, #1
 80037f6:	2000      	moveq	r0, #0
 80037f8:	f7fc fcea 	bl	80001d0 <bsp_assert>
 80037fc:	602c      	str	r4, [r5, #0]
 80037fe:	200d      	movs	r0, #13
 8003800:	81a8      	strh	r0, [r5, #12]
 8003802:	2001      	movs	r0, #1
 8003804:	f7fc fce4 	bl	80001d0 <bsp_assert>
 8003808:	2108      	movs	r1, #8
 800380a:	816e      	strh	r6, [r5, #10]
 800380c:	73a9      	strb	r1, [r5, #14]
 800380e:	6a3a      	ldr	r2, [r7, #32]
 8003810:	4628      	mov	r0, r5
 8003812:	4790      	blx	r2
 8003814:	e000      	b.n	8003818 <??hci_le_rem_conn_param_req_event_2>

08003816 <??hci_le_rem_conn_param_req_event_0>:
 8003816:	261a      	movs	r6, #26

08003818 <??hci_le_rem_conn_param_req_event_2>:
 8003818:	4630      	mov	r0, r6
 800381a:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}

0800381e <hci_le_chnl_sel_algo_evnt>:
 800381e:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8003820:	4605      	mov	r5, r0
 8003822:	f8df 6504 	ldr.w	r6, [pc, #1284]	; 8003d28 <??DataTable32>
 8003826:	69f0      	ldr	r0, [r6, #28]
 8003828:	460f      	mov	r7, r1
 800382a:	b340      	cbz	r0, 800387e <??hci_le_chnl_sel_algo_evnt_0>
 800382c:	6970      	ldr	r0, [r6, #20]
 800382e:	0301      	lsls	r1, r0, #12
 8003830:	d525      	bpl.n	800387e <??hci_le_chnl_sel_algo_evnt_0>
 8003832:	f8df 0500 	ldr.w	r0, [pc, #1280]	; 8003d34 <??DataTable32_3>
 8003836:	f001 fcef 	bl	8005218 <os_mem_pool_alloc>
 800383a:	0004      	movs	r4, r0
 800383c:	d01f      	beq.n	800387e <??hci_le_chnl_sel_algo_evnt_0>
 800383e:	203e      	movs	r0, #62	; 0x3e
 8003840:	7020      	strb	r0, [r4, #0]
 8003842:	70e5      	strb	r5, [r4, #3]
 8003844:	2104      	movs	r1, #4
 8003846:	2214      	movs	r2, #20
 8003848:	0a2d      	lsrs	r5, r5, #8
 800384a:	7061      	strb	r1, [r4, #1]
 800384c:	70a2      	strb	r2, [r4, #2]
 800384e:	7125      	strb	r5, [r4, #4]
 8003850:	7167      	strb	r7, [r4, #5]
 8003852:	f8df 04dc 	ldr.w	r0, [pc, #1244]	; 8003d30 <??DataTable32_2>
 8003856:	f001 fcdf 	bl	8005218 <os_mem_pool_alloc>
 800385a:	0005      	movs	r5, r0
 800385c:	bf14      	ite	ne
 800385e:	2001      	movne	r0, #1
 8003860:	2000      	moveq	r0, #0
 8003862:	f7fc fcb5 	bl	80001d0 <bsp_assert>
 8003866:	602c      	str	r4, [r5, #0]
 8003868:	2006      	movs	r0, #6
 800386a:	81a8      	strh	r0, [r5, #12]
 800386c:	2001      	movs	r0, #1
 800386e:	f7fc fcaf 	bl	80001d0 <bsp_assert>
 8003872:	2000      	movs	r0, #0
 8003874:	2108      	movs	r1, #8
 8003876:	8168      	strh	r0, [r5, #10]
 8003878:	73a9      	strb	r1, [r5, #14]
 800387a:	4628      	mov	r0, r5
 800387c:	e000      	b.n	8003880 <?Subroutine2>

0800387e <??hci_le_chnl_sel_algo_evnt_0>:
 800387e:	bdf1      	pop	{r0, r4, r5, r6, r7, pc}

08003880 <?Subroutine2>:
 8003880:	6a32      	ldr	r2, [r6, #32]

08003882 <??Subroutine2_0>:
 8003882:	e8bd 40f2 	ldmia.w	sp!, {r1, r4, r5, r6, r7, lr}

08003886 <__iar_annotation$$tailcall>:
 8003886:	4710      	bx	r2

08003888 <hci_num_of_cmpltd_pckts_cmplt_evnt>:
 8003888:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800388a:	4604      	mov	r4, r0
 800388c:	460d      	mov	r5, r1
 800388e:	4616      	mov	r6, r2
 8003890:	f8df 04a0 	ldr.w	r0, [pc, #1184]	; 8003d34 <??DataTable32_3>
 8003894:	f001 fcc0 	bl	8005218 <os_mem_pool_alloc>
 8003898:	b338      	cbz	r0, 80038ea <??hci_num_of_cmpltd_pckts_cmplt_evnt_0>
 800389a:	2113      	movs	r1, #19
 800389c:	7001      	strb	r1, [r0, #0]
 800389e:	00a1      	lsls	r1, r4, #2
 80038a0:	1c49      	adds	r1, r1, #1
 80038a2:	7041      	strb	r1, [r0, #1]
 80038a4:	7084      	strb	r4, [r0, #2]
 80038a6:	0021      	movs	r1, r4
 80038a8:	d017      	beq.n	80038da <??hci_num_of_cmpltd_pckts_cmplt_evnt_1>
 80038aa:	0062      	lsls	r2, r4, #1
 80038ac:	1cd2      	adds	r2, r2, #3
 80038ae:	b2d2      	uxtb	r2, r2
 80038b0:	4601      	mov	r1, r0
 80038b2:	4402      	add	r2, r0

080038b4 <??hci_num_of_cmpltd_pckts_cmplt_evnt_2>:
 80038b4:	882b      	ldrh	r3, [r5, #0]
 80038b6:	70cb      	strb	r3, [r1, #3]
 80038b8:	f835 7b02 	ldrh.w	r7, [r5], #2
 80038bc:	0a3f      	lsrs	r7, r7, #8
 80038be:	f007 070f 	and.w	r7, r7, #15
 80038c2:	710f      	strb	r7, [r1, #4]
 80038c4:	8833      	ldrh	r3, [r6, #0]
 80038c6:	1c89      	adds	r1, r1, #2
 80038c8:	f802 3b01 	strb.w	r3, [r2], #1
 80038cc:	f836 7b02 	ldrh.w	r7, [r6], #2
 80038d0:	0a3f      	lsrs	r7, r7, #8
 80038d2:	f802 7b01 	strb.w	r7, [r2], #1
 80038d6:	1e64      	subs	r4, r4, #1
 80038d8:	d1ec      	bne.n	80038b4 <??hci_num_of_cmpltd_pckts_cmplt_evnt_2>

080038da <??hci_num_of_cmpltd_pckts_cmplt_evnt_1>:
 80038da:	7841      	ldrb	r1, [r0, #1]
 80038dc:	1c89      	adds	r1, r1, #2
 80038de:	f7ff fc68 	bl	80031b2 <hci_form_hdr>
 80038e2:	f8df 1444 	ldr.w	r1, [pc, #1092]	; 8003d28 <??DataTable32>
 80038e6:	6a0a      	ldr	r2, [r1, #32]
 80038e8:	e7cb      	b.n	8003882 <??Subroutine2_0>

080038ea <??hci_num_of_cmpltd_pckts_cmplt_evnt_0>:
 80038ea:	bdf1      	pop	{r0, r4, r5, r6, r7, pc}

080038ec <hci_send_acl_data_from_cntrlr_to_host>:
 80038ec:	b570      	push	{r4, r5, r6, lr}
 80038ee:	460c      	mov	r4, r1
 80038f0:	f3c0 050b 	ubfx	r5, r0, #0, #12
 80038f4:	7ba0      	ldrb	r0, [r4, #14]
 80038f6:	07c1      	lsls	r1, r0, #31
 80038f8:	bf4c      	ite	mi
 80038fa:	f44f 5600 	movmi.w	r6, #8192	; 0x2000
 80038fe:	f44f 5680 	movpl.w	r6, #4096	; 0x1000
 8003902:	8961      	ldrh	r1, [r4, #10]
 8003904:	1e48      	subs	r0, r1, #1
 8003906:	4180      	sbcs	r0, r0
 8003908:	0fc0      	lsrs	r0, r0, #31
 800390a:	f7fc fc61 	bl	80001d0 <bsp_assert>
 800390e:	6821      	ldr	r1, [r4, #0]
 8003910:	8960      	ldrh	r0, [r4, #10]
 8003912:	4335      	orrs	r5, r6
 8003914:	540d      	strb	r5, [r1, r0]
 8003916:	6821      	ldr	r1, [r4, #0]
 8003918:	8960      	ldrh	r0, [r4, #10]
 800391a:	0a2d      	lsrs	r5, r5, #8
 800391c:	4408      	add	r0, r1
 800391e:	7045      	strb	r5, [r0, #1]
 8003920:	89a1      	ldrh	r1, [r4, #12]
 8003922:	6822      	ldr	r2, [r4, #0]
 8003924:	1f08      	subs	r0, r1, #4
 8003926:	8961      	ldrh	r1, [r4, #10]
 8003928:	4411      	add	r1, r2
 800392a:	7088      	strb	r0, [r1, #2]
 800392c:	89a0      	ldrh	r0, [r4, #12]
 800392e:	6821      	ldr	r1, [r4, #0]
 8003930:	8962      	ldrh	r2, [r4, #10]
 8003932:	1f00      	subs	r0, r0, #4
 8003934:	1200      	asrs	r0, r0, #8
 8003936:	440a      	add	r2, r1
 8003938:	70d0      	strb	r0, [r2, #3]
 800393a:	2010      	movs	r0, #16
 800393c:	f8df 13e8 	ldr.w	r1, [pc, #1000]	; 8003d28 <??DataTable32>
 8003940:	73a0      	strb	r0, [r4, #14]
 8003942:	6a0a      	ldr	r2, [r1, #32]
 8003944:	4620      	mov	r0, r4
 8003946:	e00d      	b.n	8003964 <??Subroutine4_0>

08003948 <?Subroutine1>:
 8003948:	f7fc fc42 	bl	80001d0 <bsp_assert>
 800394c:	6025      	str	r5, [r4, #0]
 800394e:	2003      	movs	r0, #3

08003950 <??Subroutine3_0>:
 8003950:	81a0      	strh	r0, [r4, #12]
 8003952:	2001      	movs	r0, #1
 8003954:	f7fc fc3c 	bl	80001d0 <bsp_assert>
 8003958:	2000      	movs	r0, #0
 800395a:	2108      	movs	r1, #8
 800395c:	8160      	strh	r0, [r4, #10]
 800395e:	73a1      	strb	r1, [r4, #14]
 8003960:	4620      	mov	r0, r4
 8003962:	6a32      	ldr	r2, [r6, #32]

08003964 <??Subroutine4_0>:
 8003964:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}

08003968 <__iar_annotation$$tailcall>:
 8003968:	4710      	bx	r2

0800396a <hci_free_acl_data_buff>:
 800396a:	1f00      	subs	r0, r0, #4
 800396c:	f001 bc56 	b.w	800521c <os_mem_pool_free>

08003970 <hci_le_conn_update_cmplt_event>:
 8003970:	b53d      	push	{r0, r2, r3, r4, r5, lr}
 8003972:	460d      	mov	r5, r1
 8003974:	b082      	sub	sp, #8
 8003976:	2103      	movs	r1, #3
 8003978:	f88d 1000 	strb.w	r1, [sp]
 800397c:	f8df 03b4 	ldr.w	r0, [pc, #948]	; 8003d34 <??DataTable32_3>
 8003980:	f001 fc4a 	bl	8005218 <os_mem_pool_alloc>
 8003984:	0004      	movs	r4, r0
 8003986:	d029      	beq.n	80039dc <??hci_le_conn_update_cmplt_event_0>
 8003988:	203e      	movs	r0, #62	; 0x3e
 800398a:	7020      	strb	r0, [r4, #0]
 800398c:	210a      	movs	r1, #10
 800398e:	7061      	strb	r1, [r4, #1]
 8003990:	2201      	movs	r2, #1
 8003992:	4669      	mov	r1, sp
 8003994:	1ca0      	adds	r0, r4, #2
 8003996:	f00b f8d7 	bl	800eb48 <ble_memcpy>
 800399a:	2201      	movs	r2, #1
 800399c:	a902      	add	r1, sp, #8
 800399e:	1ce0      	adds	r0, r4, #3
 80039a0:	f00b f8d2 	bl	800eb48 <ble_memcpy>
 80039a4:	7125      	strb	r5, [r4, #4]
 80039a6:	0a2d      	lsrs	r5, r5, #8
 80039a8:	7165      	strb	r5, [r4, #5]
 80039aa:	2202      	movs	r2, #2
 80039ac:	a903      	add	r1, sp, #12
 80039ae:	1da0      	adds	r0, r4, #6
 80039b0:	f00b f8ca 	bl	800eb48 <ble_memcpy>
 80039b4:	2202      	movs	r2, #2
 80039b6:	a904      	add	r1, sp, #16
 80039b8:	f104 0008 	add.w	r0, r4, #8
 80039bc:	f00b f8c4 	bl	800eb48 <ble_memcpy>
 80039c0:	2202      	movs	r2, #2
 80039c2:	a908      	add	r1, sp, #32
 80039c4:	f104 000a 	add.w	r0, r4, #10
 80039c8:	f00b f8be 	bl	800eb48 <ble_memcpy>
 80039cc:	7861      	ldrb	r1, [r4, #1]
 80039ce:	4620      	mov	r0, r4
 80039d0:	1c89      	adds	r1, r1, #2
 80039d2:	f7ff fbee 	bl	80031b2 <hci_form_hdr>
 80039d6:	49d4      	ldr	r1, [pc, #848]	; (8003d28 <??DataTable32>)
 80039d8:	6a0a      	ldr	r2, [r1, #32]
 80039da:	4790      	blx	r2

080039dc <??hci_le_conn_update_cmplt_event_0>:
 80039dc:	b005      	add	sp, #20
 80039de:	bd30      	pop	{r4, r5, pc}

080039e0 <hci_le_phy_update_complete_event>:
 80039e0:	b57d      	push	{r0, r2, r3, r4, r5, r6, lr}
 80039e2:	b081      	sub	sp, #4
 80039e4:	200c      	movs	r0, #12
 80039e6:	f88d 0000 	strb.w	r0, [sp]
 80039ea:	4ecf      	ldr	r6, [pc, #828]	; (8003d28 <??DataTable32>)
 80039ec:	69f0      	ldr	r0, [r6, #28]
 80039ee:	460d      	mov	r5, r1
 80039f0:	b348      	cbz	r0, 8003a46 <??hci_le_phy_update_complete_event_0>
 80039f2:	6970      	ldr	r0, [r6, #20]
 80039f4:	0501      	lsls	r1, r0, #20
 80039f6:	d526      	bpl.n	8003a46 <??hci_le_phy_update_complete_event_0>
 80039f8:	48ce      	ldr	r0, [pc, #824]	; (8003d34 <??DataTable32_3>)
 80039fa:	f001 fc0d 	bl	8005218 <os_mem_pool_alloc>
 80039fe:	0004      	movs	r4, r0
 8003a00:	d021      	beq.n	8003a46 <??hci_le_phy_update_complete_event_0>
 8003a02:	203e      	movs	r0, #62	; 0x3e
 8003a04:	7020      	strb	r0, [r4, #0]
 8003a06:	2106      	movs	r1, #6
 8003a08:	7061      	strb	r1, [r4, #1]
 8003a0a:	2201      	movs	r2, #1
 8003a0c:	4669      	mov	r1, sp
 8003a0e:	1ca0      	adds	r0, r4, #2
 8003a10:	f00b f89a 	bl	800eb48 <ble_memcpy>
 8003a14:	2201      	movs	r2, #1
 8003a16:	a901      	add	r1, sp, #4
 8003a18:	1ce0      	adds	r0, r4, #3
 8003a1a:	f00b f895 	bl	800eb48 <ble_memcpy>
 8003a1e:	7125      	strb	r5, [r4, #4]
 8003a20:	0a2d      	lsrs	r5, r5, #8
 8003a22:	7165      	strb	r5, [r4, #5]
 8003a24:	2201      	movs	r2, #1
 8003a26:	a902      	add	r1, sp, #8
 8003a28:	1da0      	adds	r0, r4, #6
 8003a2a:	f00b f88d 	bl	800eb48 <ble_memcpy>
 8003a2e:	2201      	movs	r2, #1
 8003a30:	a903      	add	r1, sp, #12
 8003a32:	1de0      	adds	r0, r4, #7
 8003a34:	f00b f888 	bl	800eb48 <ble_memcpy>
 8003a38:	7861      	ldrb	r1, [r4, #1]
 8003a3a:	4620      	mov	r0, r4
 8003a3c:	1c89      	adds	r1, r1, #2
 8003a3e:	f7ff fbb8 	bl	80031b2 <hci_form_hdr>
 8003a42:	6a31      	ldr	r1, [r6, #32]
 8003a44:	4788      	blx	r1

08003a46 <??hci_le_phy_update_complete_event_0>:
 8003a46:	b004      	add	sp, #16
 8003a48:	bd70      	pop	{r4, r5, r6, pc}

08003a4a <hci_le_data_length_chg_event>:
 8003a4a:	e92d 47fc 	stmdb	sp!, {r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 8003a4e:	4607      	mov	r7, r0
 8003a50:	2007      	movs	r0, #7
 8003a52:	f88d 0000 	strb.w	r0, [sp]
 8003a56:	4eb4      	ldr	r6, [pc, #720]	; (8003d28 <??DataTable32>)
 8003a58:	69f0      	ldr	r0, [r6, #28]
 8003a5a:	4688      	mov	r8, r1
 8003a5c:	4691      	mov	r9, r2
 8003a5e:	469a      	mov	sl, r3
 8003a60:	b380      	cbz	r0, 8003ac4 <??hci_le_data_length_chg_event_0>
 8003a62:	7d30      	ldrb	r0, [r6, #20]
 8003a64:	0641      	lsls	r1, r0, #25
 8003a66:	d52d      	bpl.n	8003ac4 <??hci_le_data_length_chg_event_0>
 8003a68:	48b2      	ldr	r0, [pc, #712]	; (8003d34 <??DataTable32_3>)
 8003a6a:	f001 fbd5 	bl	8005218 <os_mem_pool_alloc>
 8003a6e:	0004      	movs	r4, r0
 8003a70:	d028      	beq.n	8003ac4 <??hci_le_data_length_chg_event_0>
 8003a72:	9d0a      	ldr	r5, [sp, #40]	; 0x28
 8003a74:	203e      	movs	r0, #62	; 0x3e
 8003a76:	7020      	strb	r0, [r4, #0]
 8003a78:	210b      	movs	r1, #11
 8003a7a:	7061      	strb	r1, [r4, #1]
 8003a7c:	2201      	movs	r2, #1
 8003a7e:	4669      	mov	r1, sp
 8003a80:	1ca0      	adds	r0, r4, #2
 8003a82:	f00b f861 	bl	800eb48 <ble_memcpy>
 8003a86:	7861      	ldrb	r1, [r4, #1]
 8003a88:	70e7      	strb	r7, [r4, #3]
 8003a8a:	f884 8005 	strb.w	r8, [r4, #5]
 8003a8e:	f884 9007 	strb.w	r9, [r4, #7]
 8003a92:	f884 a009 	strb.w	sl, [r4, #9]
 8003a96:	72e5      	strb	r5, [r4, #11]
 8003a98:	0a3f      	lsrs	r7, r7, #8
 8003a9a:	ea4f 2818 	mov.w	r8, r8, lsr #8
 8003a9e:	ea4f 2919 	mov.w	r9, r9, lsr #8
 8003aa2:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8003aa6:	0a2d      	lsrs	r5, r5, #8
 8003aa8:	7127      	strb	r7, [r4, #4]
 8003aaa:	f884 8006 	strb.w	r8, [r4, #6]
 8003aae:	f884 9008 	strb.w	r9, [r4, #8]
 8003ab2:	f884 a00a 	strb.w	sl, [r4, #10]
 8003ab6:	7325      	strb	r5, [r4, #12]
 8003ab8:	1c89      	adds	r1, r1, #2
 8003aba:	4620      	mov	r0, r4
 8003abc:	f7ff fb79 	bl	80031b2 <hci_form_hdr>
 8003ac0:	6a31      	ldr	r1, [r6, #32]
 8003ac2:	4788      	blx	r1

08003ac4 <??hci_le_data_length_chg_event_0>:
 8003ac4:	e8bd 87f3 	ldmia.w	sp!, {r0, r1, r4, r5, r6, r7, r8, r9, sl, pc}

08003ac8 <hci_le_energy_dctn_cmplt_evnt>:
 8003ac8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8003aca:	4606      	mov	r6, r0
 8003acc:	4d96      	ldr	r5, [pc, #600]	; (8003d28 <??DataTable32>)
 8003ace:	7828      	ldrb	r0, [r5, #0]
 8003ad0:	460c      	mov	r4, r1
 8003ad2:	0701      	lsls	r1, r0, #28
 8003ad4:	d51e      	bpl.n	8003b14 <??hci_le_energy_dctn_cmplt_evnt_0>
 8003ad6:	4897      	ldr	r0, [pc, #604]	; (8003d34 <??DataTable32_3>)
 8003ad8:	f001 fb9e 	bl	8005218 <os_mem_pool_alloc>
 8003adc:	b1d0      	cbz	r0, 8003b14 <??hci_le_energy_dctn_cmplt_evnt_0>
 8003ade:	21ff      	movs	r1, #255	; 0xff
 8003ae0:	7001      	strb	r1, [r0, #0]
 8003ae2:	0061      	lsls	r1, r4, #1
 8003ae4:	1c49      	adds	r1, r1, #1
 8003ae6:	7041      	strb	r1, [r0, #1]
 8003ae8:	7841      	ldrb	r1, [r0, #1]
 8003aea:	2204      	movs	r2, #4
 8003aec:	7082      	strb	r2, [r0, #2]
 8003aee:	1c89      	adds	r1, r1, #2
 8003af0:	0023      	movs	r3, r4
 8003af2:	d009      	beq.n	8003b08 <??hci_le_energy_dctn_cmplt_evnt_1>
 8003af4:	4602      	mov	r2, r0

08003af6 <??hci_le_energy_dctn_cmplt_evnt_2>:
 8003af6:	8837      	ldrh	r7, [r6, #0]
 8003af8:	70d7      	strb	r7, [r2, #3]
 8003afa:	f836 3b02 	ldrh.w	r3, [r6], #2
 8003afe:	0a1b      	lsrs	r3, r3, #8
 8003b00:	7113      	strb	r3, [r2, #4]
 8003b02:	1c92      	adds	r2, r2, #2
 8003b04:	1e64      	subs	r4, r4, #1
 8003b06:	d1f6      	bne.n	8003af6 <??hci_le_energy_dctn_cmplt_evnt_2>

08003b08 <??hci_le_energy_dctn_cmplt_evnt_1>:
 8003b08:	f7ff fb53 	bl	80031b2 <hci_form_hdr>
 8003b0c:	6a29      	ldr	r1, [r5, #32]
 8003b0e:	e8bd 40f4 	ldmia.w	sp!, {r2, r4, r5, r6, r7, lr}

08003b12 <__iar_annotation$$tailcall>:
 8003b12:	4708      	bx	r1

08003b14 <??hci_le_energy_dctn_cmplt_evnt_0>:
 8003b14:	bdf1      	pop	{r0, r4, r5, r6, r7, pc}

08003b16 <hci_alloc_msg>:
 8003b16:	b510      	push	{r4, lr}
 8003b18:	4885      	ldr	r0, [pc, #532]	; (8003d30 <??DataTable32_2>)
 8003b1a:	f001 fb7d 	bl	8005218 <os_mem_pool_alloc>
 8003b1e:	4604      	mov	r4, r0
 8003b20:	2210      	movs	r2, #16
 8003b22:	2100      	movs	r1, #0
 8003b24:	f00b f861 	bl	800ebea <ble_memset>
 8003b28:	4620      	mov	r0, r4
 8003b2a:	bd10      	pop	{r4, pc}

08003b2c <hci_free_msg>:
 8003b2c:	f001 bb76 	b.w	800521c <os_mem_pool_free>

08003b30 <hci_end_of_activity_evnt>:
 8003b30:	b533      	push	{r0, r1, r4, r5, lr}
 8003b32:	4d7d      	ldr	r5, [pc, #500]	; (8003d28 <??DataTable32>)
 8003b34:	7828      	ldrb	r0, [r5, #0]
 8003b36:	b081      	sub	sp, #4
 8003b38:	06c1      	lsls	r1, r0, #27
 8003b3a:	d51a      	bpl.n	8003b72 <??hci_end_of_activity_evnt_0>
 8003b3c:	487d      	ldr	r0, [pc, #500]	; (8003d34 <??DataTable32_3>)
 8003b3e:	f001 fb6b 	bl	8005218 <os_mem_pool_alloc>
 8003b42:	0004      	movs	r4, r0
 8003b44:	d015      	beq.n	8003b72 <??hci_end_of_activity_evnt_0>
 8003b46:	20ff      	movs	r0, #255	; 0xff
 8003b48:	7020      	strb	r0, [r4, #0]
 8003b4a:	2105      	movs	r1, #5
 8003b4c:	7061      	strb	r1, [r4, #1]
 8003b4e:	70a1      	strb	r1, [r4, #2]
 8003b50:	2202      	movs	r2, #2
 8003b52:	a901      	add	r1, sp, #4
 8003b54:	1ce0      	adds	r0, r4, #3
 8003b56:	f00a fff7 	bl	800eb48 <ble_memcpy>
 8003b5a:	2202      	movs	r2, #2
 8003b5c:	a902      	add	r1, sp, #8
 8003b5e:	1d60      	adds	r0, r4, #5
 8003b60:	f00a fff2 	bl	800eb48 <ble_memcpy>
 8003b64:	7861      	ldrb	r1, [r4, #1]
 8003b66:	4620      	mov	r0, r4
 8003b68:	1c89      	adds	r1, r1, #2
 8003b6a:	f7ff fb22 	bl	80031b2 <hci_form_hdr>
 8003b6e:	6a29      	ldr	r1, [r5, #32]
 8003b70:	4788      	blx	r1

08003b72 <??hci_end_of_activity_evnt_0>:
 8003b72:	b003      	add	sp, #12
 8003b74:	bd30      	pop	{r4, r5, pc}

08003b76 <hci_event_get_queue_id>:
 8003b76:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8003b78:	4607      	mov	r7, r0
 8003b7a:	460c      	mov	r4, r1
 8003b7c:	6838      	ldr	r0, [r7, #0]
 8003b7e:	8979      	ldrh	r1, [r7, #10]
 8003b80:	2606      	movs	r6, #6
 8003b82:	1845      	adds	r5, r0, r1
 8003b84:	bf14      	ite	ne
 8003b86:	2001      	movne	r0, #1
 8003b88:	2000      	moveq	r0, #0
 8003b8a:	f7fc fb21 	bl	80001d0 <bsp_assert>
 8003b8e:	b10c      	cbz	r4, 8003b94 <??hci_event_get_queue_id_0>
 8003b90:	2004      	movs	r0, #4
 8003b92:	7020      	strb	r0, [r4, #0]

08003b94 <??hci_event_get_queue_id_0>:
 8003b94:	7bb9      	ldrb	r1, [r7, #14]
 8003b96:	2908      	cmp	r1, #8
 8003b98:	d005      	beq.n	8003ba6 <??hci_event_get_queue_id_1>
 8003b9a:	2910      	cmp	r1, #16
 8003b9c:	d10a      	bne.n	8003bb4 <??hci_event_get_queue_id_2>
 8003b9e:	2607      	movs	r6, #7
 8003ba0:	b164      	cbz	r4, 8003bbc <??hci_event_get_queue_id_3>
 8003ba2:	2027      	movs	r0, #39	; 0x27
 8003ba4:	e004      	b.n	8003bb0 <??hci_event_get_queue_id_4>

08003ba6 <??hci_event_get_queue_id_1>:
 8003ba6:	7829      	ldrb	r1, [r5, #0]
 8003ba8:	293e      	cmp	r1, #62	; 0x3e
 8003baa:	d103      	bne.n	8003bb4 <??hci_event_get_queue_id_2>
 8003bac:	b134      	cbz	r4, 8003bbc <??hci_event_get_queue_id_3>
 8003bae:	2004      	movs	r0, #4

08003bb0 <??hci_event_get_queue_id_4>:
 8003bb0:	7020      	strb	r0, [r4, #0]
 8003bb2:	e000      	b.n	8003bb6 <??hci_event_get_queue_id_5>

08003bb4 <??hci_event_get_queue_id_2>:
 8003bb4:	b114      	cbz	r4, 8003bbc <??hci_event_get_queue_id_3>

08003bb6 <??hci_event_get_queue_id_5>:
 8003bb6:	7820      	ldrb	r0, [r4, #0]
 8003bb8:	1c40      	adds	r0, r0, #1
 8003bba:	7020      	strb	r0, [r4, #0]

08003bbc <??hci_event_get_queue_id_3>:
 8003bbc:	4630      	mov	r0, r6
 8003bbe:	bdf2      	pop	{r1, r4, r5, r6, r7, pc}

08003bc0 <hci_queue_send_pckt>:
 8003bc0:	b538      	push	{r3, r4, r5, lr}
 8003bc2:	0004      	movs	r4, r0
 8003bc4:	bf14      	ite	ne
 8003bc6:	2001      	movne	r0, #1
 8003bc8:	2000      	moveq	r0, #0
 8003bca:	f7fc fb01 	bl	80001d0 <bsp_assert>
 8003bce:	4669      	mov	r1, sp
 8003bd0:	4620      	mov	r0, r4
 8003bd2:	f7ff ffd0 	bl	8003b76 <hci_event_get_queue_id>
 8003bd6:	4605      	mov	r5, r0
 8003bd8:	f7fc fc0a 	bl	80003f0 <emngr_get_handle_events>
 8003bdc:	f89d 1000 	ldrb.w	r1, [sp]
 8003be0:	1e49      	subs	r1, r1, #1
 8003be2:	4288      	cmp	r0, r1
 8003be4:	d109      	bne.n	8003bfa <??hci_queue_send_pckt_0>
 8003be6:	2d07      	cmp	r5, #7
 8003be8:	d007      	beq.n	8003bfa <??hci_queue_send_pckt_0>
 8003bea:	4953      	ldr	r1, [pc, #332]	; (8003d38 <??DataTable32_4>)
 8003bec:	680a      	ldr	r2, [r1, #0]
 8003bee:	4620      	mov	r0, r4
 8003bf0:	4790      	blx	r2
 8003bf2:	4620      	mov	r0, r4
 8003bf4:	f001 fa03 	bl	8004ffe <ll_intf_free_ll_pkt_hndlr>
 8003bf8:	e003      	b.n	8003c02 <??hci_queue_send_pckt_1>

08003bfa <??hci_queue_send_pckt_0>:
 8003bfa:	4621      	mov	r1, r4
 8003bfc:	4628      	mov	r0, r5
 8003bfe:	f7fc fb6e 	bl	80002de <emngr_post_event>

08003c02 <??hci_queue_send_pckt_1>:
 8003c02:	2001      	movs	r0, #1
 8003c04:	bd32      	pop	{r1, r4, r5, pc}

08003c06 <hci_init_events_queues>:
 8003c06:	b510      	push	{r4, lr}
 8003c08:	f20f 0425 	addw	r4, pc, #37	; 0x25
 8003c0c:	4622      	mov	r2, r4
 8003c0e:	2105      	movs	r1, #5
 8003c10:	2006      	movs	r0, #6
 8003c12:	f7fc fb45 	bl	80002a0 <emngr_handle_init>
 8003c16:	4622      	mov	r2, r4
 8003c18:	2111      	movs	r1, #17
 8003c1a:	2008      	movs	r0, #8
 8003c1c:	f7fc fb40 	bl	80002a0 <emngr_handle_init>
 8003c20:	4622      	mov	r2, r4
 8003c22:	2128      	movs	r1, #40	; 0x28
 8003c24:	2007      	movs	r0, #7
 8003c26:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8003c2a:	f7fc bb39 	b.w	80002a0 <emngr_handle_init>
	...

08003c30 <hci_post_event_cbk>:
 8003c30:	b570      	push	{r4, r5, r6, lr}
 8003c32:	4604      	mov	r4, r0
 8003c34:	2100      	movs	r1, #0
 8003c36:	f7ff ff9e 	bl	8003b76 <hci_event_get_queue_id>
 8003c3a:	4605      	mov	r5, r0
 8003c3c:	4e3f      	ldr	r6, [pc, #252]	; (8003d3c <??DataTable32_5>)
 8003c3e:	6830      	ldr	r0, [r6, #0]
 8003c40:	b100      	cbz	r0, 8003c44 <??hci_post_event_cbk_0>
 8003c42:	2001      	movs	r0, #1

08003c44 <??hci_post_event_cbk_0>:
 8003c44:	f7fc fac4 	bl	80001d0 <bsp_assert>
 8003c48:	6831      	ldr	r1, [r6, #0]
 8003c4a:	4620      	mov	r0, r4
 8003c4c:	4788      	blx	r1
 8003c4e:	b968      	cbnz	r0, 8003c6c <??hci_post_event_cbk_1>
 8003c50:	4621      	mov	r1, r4
 8003c52:	4628      	mov	r0, r5
 8003c54:	f7fc fb64 	bl	8000320 <emngr_post_event_first>
 8003c58:	f010 fbfd 	bl	8014456 <os_disable_isr>
 8003c5c:	2101      	movs	r1, #1
 8003c5e:	4628      	mov	r0, r5
 8003c60:	f7fc fbcd 	bl	80003fe <emngr_set_event_handle_busy>
 8003c64:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8003c68:	f010 bbf7 	b.w	801445a <os_enable_isr>

08003c6c <??hci_post_event_cbk_1>:
 8003c6c:	bd70      	pop	{r4, r5, r6, pc}

08003c6e <hci_default_ll_queue_full>:
 8003c6e:	2000      	movs	r0, #0
 8003c70:	f7fc baae 	b.w	80001d0 <bsp_assert>

08003c74 <hci_rgstr_hst_cbk>:
 8003c74:	4931      	ldr	r1, [pc, #196]	; (8003d3c <??DataTable32_5>)
 8003c76:	6008      	str	r0, [r1, #0]
 8003c78:	4770      	bx	lr

08003c7a <hci_rgstr_hst_cbk_ll_queue_full>:
 8003c7a:	492f      	ldr	r1, [pc, #188]	; (8003d38 <??DataTable32_4>)
 8003c7c:	6008      	str	r0, [r1, #0]
 8003c7e:	4770      	bx	lr

08003c80 <hci_ll_set_le_event_mask>:
 8003c80:	7802      	ldrb	r2, [r0, #0]
 8003c82:	7843      	ldrb	r3, [r0, #1]
 8003c84:	f890 c002 	ldrb.w	ip, [r0, #2]
 8003c88:	4927      	ldr	r1, [pc, #156]	; (8003d28 <??DataTable32>)
 8003c8a:	ea42 2203 	orr.w	r2, r2, r3, lsl #8
 8003c8e:	78c3      	ldrb	r3, [r0, #3]
 8003c90:	ea42 420c 	orr.w	r2, r2, ip, lsl #16
 8003c94:	ea42 6203 	orr.w	r2, r2, r3, lsl #24
 8003c98:	614a      	str	r2, [r1, #20]
 8003c9a:	7902      	ldrb	r2, [r0, #4]
 8003c9c:	7943      	ldrb	r3, [r0, #5]
 8003c9e:	f890 c006 	ldrb.w	ip, [r0, #6]
 8003ca2:	79c0      	ldrb	r0, [r0, #7]
 8003ca4:	ea42 2203 	orr.w	r2, r2, r3, lsl #8
 8003ca8:	ea42 420c 	orr.w	r2, r2, ip, lsl #16
 8003cac:	ea42 6200 	orr.w	r2, r2, r0, lsl #24
 8003cb0:	618a      	str	r2, [r1, #24]
 8003cb2:	4770      	bx	lr

08003cb4 <hci_ll_set_event_mask>:
 8003cb4:	7802      	ldrb	r2, [r0, #0]
 8003cb6:	7843      	ldrb	r3, [r0, #1]
 8003cb8:	f890 c002 	ldrb.w	ip, [r0, #2]
 8003cbc:	491a      	ldr	r1, [pc, #104]	; (8003d28 <??DataTable32>)
 8003cbe:	ea42 2203 	orr.w	r2, r2, r3, lsl #8
 8003cc2:	78c3      	ldrb	r3, [r0, #3]
 8003cc4:	ea42 420c 	orr.w	r2, r2, ip, lsl #16
 8003cc8:	ea42 6203 	orr.w	r2, r2, r3, lsl #24
 8003ccc:	608a      	str	r2, [r1, #8]
 8003cce:	7902      	ldrb	r2, [r0, #4]
 8003cd0:	7943      	ldrb	r3, [r0, #5]
 8003cd2:	f890 c006 	ldrb.w	ip, [r0, #6]
 8003cd6:	79c0      	ldrb	r0, [r0, #7]
 8003cd8:	ea42 2203 	orr.w	r2, r2, r3, lsl #8
 8003cdc:	ea42 420c 	orr.w	r2, r2, ip, lsl #16
 8003ce0:	ea42 6200 	orr.w	r2, r2, r0, lsl #24
 8003ce4:	604a      	str	r2, [r1, #4]
 8003ce6:	f002 5200 	and.w	r2, r2, #536870912	; 0x20000000
 8003cea:	61ca      	str	r2, [r1, #28]
 8003cec:	4770      	bx	lr

08003cee <hci_ll_set_event_mask_page2>:
 8003cee:	7802      	ldrb	r2, [r0, #0]
 8003cf0:	7843      	ldrb	r3, [r0, #1]
 8003cf2:	f890 c002 	ldrb.w	ip, [r0, #2]
 8003cf6:	490c      	ldr	r1, [pc, #48]	; (8003d28 <??DataTable32>)
 8003cf8:	ea42 2203 	orr.w	r2, r2, r3, lsl #8
 8003cfc:	78c3      	ldrb	r3, [r0, #3]
 8003cfe:	ea42 420c 	orr.w	r2, r2, ip, lsl #16
 8003d02:	ea42 6203 	orr.w	r2, r2, r3, lsl #24
 8003d06:	610a      	str	r2, [r1, #16]
 8003d08:	7902      	ldrb	r2, [r0, #4]
 8003d0a:	7943      	ldrb	r3, [r0, #5]
 8003d0c:	f890 c006 	ldrb.w	ip, [r0, #6]
 8003d10:	79c0      	ldrb	r0, [r0, #7]
 8003d12:	ea42 2203 	orr.w	r2, r2, r3, lsl #8
 8003d16:	ea42 420c 	orr.w	r2, r2, ip, lsl #16
 8003d1a:	ea42 6200 	orr.w	r2, r2, r0, lsl #24
 8003d1e:	60ca      	str	r2, [r1, #12]
 8003d20:	4770      	bx	lr

08003d22 <hci_ll_set_custom_event_mask>:
 8003d22:	4901      	ldr	r1, [pc, #4]	; (8003d28 <??DataTable32>)
 8003d24:	7008      	strb	r0, [r1, #0]
 8003d26:	4770      	bx	lr

08003d28 <??DataTable32>:
 8003d28:	06cc 2000                                   ... 

08003d2c <??DataTable32_1>:
 8003d2c:	18d8 0803                                   ....

08003d30 <??DataTable32_2>:
 8003d30:	3624 2000                                   $6. 

08003d34 <??DataTable32_3>:
 8003d34:	170c 2000                                   ... 

08003d38 <??DataTable32_4>:
 8003d38:	0060 2000                                   `.. 

08003d3c <??DataTable32_5>:
 8003d3c:	06c8 2000                                   ... 

08003d40 <ll_intf_init>:
 8003d40:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8003d42:	b08c      	sub	sp, #48	; 0x30
 8003d44:	4604      	mov	r4, r0
 8003d46:	222c      	movs	r2, #44	; 0x2c
 8003d48:	2100      	movs	r1, #0
 8003d4a:	a801      	add	r0, sp, #4
 8003d4c:	f02d f92f 	bl	8030fae <memset>
 8003d50:	f010 fc6e 	bl	8014630 <sys_shared_init>
 8003d54:	f7ff ff57 	bl	8003c06 <hci_init_events_queues>
 8003d58:	48cd      	ldr	r0, [pc, #820]	; (8004090 <??DataTable3>)
 8003d5a:	f7ff fa11 	bl	8003180 <ll_hci_init>
 8003d5e:	222c      	movs	r2, #44	; 0x2c
 8003d60:	49cc      	ldr	r1, [pc, #816]	; (8004094 <??DataTable3_1>)
 8003d62:	a801      	add	r0, sp, #4
 8003d64:	f00a fef0 	bl	800eb48 <ble_memcpy>
 8003d68:	4668      	mov	r0, sp
 8003d6a:	f007 fee5 	bl	800bb38 <llhwc_get_rtl_vrsn>
 8003d6e:	f89d 0003 	ldrb.w	r0, [sp, #3]
 8003d72:	08c1      	lsrs	r1, r0, #3
 8003d74:	eb00 7211 	add.w	r2, r0, r1, lsr #28
 8003d78:	a901      	add	r1, sp, #4
 8003d7a:	0912      	lsrs	r2, r2, #4
 8003d7c:	eba0 1002 	sub.w	r0, r0, r2, lsl #4
 8003d80:	f89d 2002 	ldrb.w	r2, [sp, #2]
 8003d84:	0915      	lsrs	r5, r2, #4
 8003d86:	3530      	adds	r5, #48	; 0x30
 8003d88:	718d      	strb	r5, [r1, #6]
 8003d8a:	08d6      	lsrs	r6, r2, #3
 8003d8c:	eb02 7516 	add.w	r5, r2, r6, lsr #28
 8003d90:	4ec1      	ldr	r6, [pc, #772]	; (8004098 <??DataTable3_2>)
 8003d92:	3030      	adds	r0, #48	; 0x30
 8003d94:	092d      	lsrs	r5, r5, #4
 8003d96:	eba2 1205 	sub.w	r2, r2, r5, lsl #4
 8003d9a:	f89d 5001 	ldrb.w	r5, [sp, #1]
 8003d9e:	7108      	strb	r0, [r1, #4]
 8003da0:	3230      	adds	r2, #48	; 0x30
 8003da2:	f005 030f 	and.w	r3, r5, #15
 8003da6:	fb83 7606 	smull	r7, r6, r3, r6
 8003daa:	092d      	lsrs	r5, r5, #4
 8003dac:	71ca      	strb	r2, [r1, #7]
 8003dae:	10b6      	asrs	r6, r6, #2
 8003db0:	eb06 76d6 	add.w	r6, r6, r6, lsr #31
 8003db4:	eb06 0e86 	add.w	lr, r6, r6, lsl #2
 8003db8:	eba3 034e 	sub.w	r3, r3, lr, lsl #1
 8003dbc:	3341      	adds	r3, #65	; 0x41
 8003dbe:	720b      	strb	r3, [r1, #8]
 8003dc0:	2d06      	cmp	r5, #6
 8003dc2:	d824      	bhi.n	8003e0e <??ll_intf_init_1>
 8003dc4:	e8df f005 	tbb	[pc, r5]

08003dc8 <??ll_intf_init_0>:
 8003dc8:	171e 0e12 0823 0004                         ....#...

08003dd0 <??ll_intf_init_2>:
 8003dd0:	2545      	movs	r5, #69	; 0x45
 8003dd2:	728d      	strb	r5, [r1, #10]
 8003dd4:	2643      	movs	r6, #67	; 0x43
 8003dd6:	e018      	b.n	8003e0a <??ll_intf_init_3>

08003dd8 <??ll_intf_init_4>:
 8003dd8:	2553      	movs	r5, #83	; 0x53
 8003dda:	728d      	strb	r5, [r1, #10]
 8003ddc:	264f      	movs	r6, #79	; 0x4f
 8003dde:	72ce      	strb	r6, [r1, #11]
 8003de0:	2557      	movs	r5, #87	; 0x57
 8003de2:	e017      	b.n	8003e14 <??ll_intf_init_5>

08003de4 <??ll_intf_init_6>:
 8003de4:	264c      	movs	r6, #76	; 0x4c
 8003de6:	728e      	strb	r6, [r1, #10]
 8003de8:	2550      	movs	r5, #80	; 0x50
 8003dea:	e002      	b.n	8003df2 <??ll_intf_init_7>

08003dec <??ll_intf_init_8>:
 8003dec:	2645      	movs	r6, #69	; 0x45
 8003dee:	728e      	strb	r6, [r1, #10]
 8003df0:	2541      	movs	r5, #65	; 0x41

08003df2 <??ll_intf_init_7>:
 8003df2:	72cd      	strb	r5, [r1, #11]
 8003df4:	e00f      	b.n	8003e16 <??ll_intf_init_9>

08003df6 <??ll_intf_init_10>:
 8003df6:	264c      	movs	r6, #76	; 0x4c
 8003df8:	728e      	strb	r6, [r1, #10]
 8003dfa:	2543      	movs	r5, #67	; 0x43
 8003dfc:	2641      	movs	r6, #65	; 0x41
 8003dfe:	72cd      	strb	r5, [r1, #11]
 8003e00:	730e      	strb	r6, [r1, #12]
 8003e02:	e008      	b.n	8003e16 <??ll_intf_init_9>

08003e04 <??ll_intf_init_11>:
 8003e04:	2547      	movs	r5, #71	; 0x47
 8003e06:	728d      	strb	r5, [r1, #10]
 8003e08:	2641      	movs	r6, #65	; 0x41

08003e0a <??ll_intf_init_3>:
 8003e0a:	72ce      	strb	r6, [r1, #11]
 8003e0c:	e003      	b.n	8003e16 <??ll_intf_init_9>

08003e0e <??ll_intf_init_1>:
 8003e0e:	2558      	movs	r5, #88	; 0x58
 8003e10:	728d      	strb	r5, [r1, #10]
 8003e12:	72cd      	strb	r5, [r1, #11]

08003e14 <??ll_intf_init_5>:
 8003e14:	730d      	strb	r5, [r1, #12]

08003e16 <??ll_intf_init_9>:
 8003e16:	f89d 5000 	ldrb.w	r5, [sp]
 8003e1a:	b2c0      	uxtb	r0, r0
 8003e1c:	092e      	lsrs	r6, r5, #4
 8003e1e:	3630      	adds	r6, #48	; 0x30
 8003e20:	734e      	strb	r6, [r1, #13]
 8003e22:	08ef      	lsrs	r7, r5, #3
 8003e24:	eb05 7617 	add.w	r6, r5, r7, lsr #28
 8003e28:	0936      	lsrs	r6, r6, #4
 8003e2a:	eba5 1506 	sub.w	r5, r5, r6, lsl #4
 8003e2e:	f89d 601d 	ldrb.w	r6, [sp, #29]
 8003e32:	3530      	adds	r5, #48	; 0x30
 8003e34:	738d      	strb	r5, [r1, #14]
 8003e36:	42b0      	cmp	r0, r6
 8003e38:	bf02      	ittt	eq
 8003e3a:	7988      	ldrbeq	r0, [r1, #6]
 8003e3c:	f89d 601f 	ldrbeq.w	r6, [sp, #31]
 8003e40:	42b0      	cmpeq	r0, r6
 8003e42:	d11c      	bne.n	8003e7e <??ll_intf_init_12>
 8003e44:	7f08      	ldrb	r0, [r1, #28]
 8003e46:	b2d2      	uxtb	r2, r2
 8003e48:	4282      	cmp	r2, r0
 8003e4a:	bf02      	ittt	eq
 8003e4c:	f89d 0021 	ldrbeq.w	r0, [sp, #33]	; 0x21
 8003e50:	b2db      	uxtbeq	r3, r3
 8003e52:	4283      	cmpeq	r3, r0
 8003e54:	d113      	bne.n	8003e7e <??ll_intf_init_12>
 8003e56:	7a8a      	ldrb	r2, [r1, #10]
 8003e58:	f89d 0023 	ldrb.w	r0, [sp, #35]	; 0x23
 8003e5c:	4282      	cmp	r2, r0
 8003e5e:	bf02      	ittt	eq
 8003e60:	7aca      	ldrbeq	r2, [r1, #11]
 8003e62:	f89d 0024 	ldrbeq.w	r0, [sp, #36]	; 0x24
 8003e66:	4282      	cmpeq	r2, r0
 8003e68:	d109      	bne.n	8003e7e <??ll_intf_init_12>
 8003e6a:	7b4a      	ldrb	r2, [r1, #13]
 8003e6c:	f891 0022 	ldrb.w	r0, [r1, #34]	; 0x22
 8003e70:	4282      	cmp	r2, r0
 8003e72:	bf02      	ittt	eq
 8003e74:	f89d 2027 	ldrbeq.w	r2, [sp, #39]	; 0x27
 8003e78:	b2e8      	uxtbeq	r0, r5
 8003e7a:	4290      	cmpeq	r0, r2
 8003e7c:	d00d      	beq.n	8003e9a <??ll_intf_init_13>

08003e7e <??ll_intf_init_12>:
 8003e7e:	7a88      	ldrb	r0, [r1, #10]
 8003e80:	2853      	cmp	r0, #83	; 0x53
 8003e82:	bf04      	itt	eq
 8003e84:	7ac8      	ldrbeq	r0, [r1, #11]
 8003e86:	284f      	cmpeq	r0, #79	; 0x4f
 8003e88:	d10b      	bne.n	8003ea2 <??ll_intf_init_14>
 8003e8a:	7b08      	ldrb	r0, [r1, #12]
 8003e8c:	2857      	cmp	r0, #87	; 0x57
 8003e8e:	bf01      	itttt	eq
 8003e90:	7b48      	ldrbeq	r0, [r1, #13]
 8003e92:	2830      	cmpeq	r0, #48	; 0x30
 8003e94:	b2ed      	uxtbeq	r5, r5
 8003e96:	2d35      	cmpeq	r5, #53	; 0x35
 8003e98:	d103      	bne.n	8003ea2 <??ll_intf_init_14>

08003e9a <??ll_intf_init_13>:
 8003e9a:	2029      	movs	r0, #41	; 0x29
 8003e9c:	f7fc f9c8 	bl	8000230 <bsp_debug_gpio_toggle>
 8003ea0:	e008      	b.n	8003eb4 <??ll_intf_init_15>

08003ea2 <??ll_intf_init_14>:
 8003ea2:	2029      	movs	r0, #41	; 0x29
 8003ea4:	f7fc f9c4 	bl	8000230 <bsp_debug_gpio_toggle>
 8003ea8:	2029      	movs	r0, #41	; 0x29
 8003eaa:	f7fc f9c1 	bl	8000230 <bsp_debug_gpio_toggle>
 8003eae:	2000      	movs	r0, #0
 8003eb0:	f7fc f98e 	bl	80001d0 <bsp_assert>

08003eb4 <??ll_intf_init_15>:
 8003eb4:	b90c      	cbnz	r4, 8003eba <??ll_intf_init_16>
 8003eb6:	241e      	movs	r4, #30
 8003eb8:	e024      	b.n	8003f04 <??ll_intf_init_17>

08003eba <??ll_intf_init_16>:
 8003eba:	4d78      	ldr	r5, [pc, #480]	; (800409c <??DataTable3_3>)
 8003ebc:	602c      	str	r4, [r5, #0]
 8003ebe:	f010 fbd9 	bl	8014674 <ble_mem_init>
 8003ec2:	f010 fc11 	bl	80146e8 <ble_mem_shared_reset>
 8003ec6:	f012 f931 	bl	801612c <db_reset>
 8003eca:	f00d fb05 	bl	80114d8 <non_conn_mngr_reset>
 8003ece:	f00f fb8d 	bl	80135ec <prvcy_mngr_reset>
 8003ed2:	1e40      	subs	r0, r0, #1
 8003ed4:	4180      	sbcs	r0, r0
 8003ed6:	0fc0      	lsrs	r0, r0, #31
 8003ed8:	f7fc f97a 	bl	80001d0 <bsp_assert>
 8003edc:	f005 fe24 	bl	8009b28 <llhwc_init>
 8003ee0:	4604      	mov	r4, r0
 8003ee2:	1e40      	subs	r0, r0, #1
 8003ee4:	4180      	sbcs	r0, r0
 8003ee6:	0fc0      	lsrs	r0, r0, #31
 8003ee8:	f7fc f972 	bl	80001d0 <bsp_assert>
 8003eec:	f011 fb6e 	bl	80155cc <conn_mngr_init>
 8003ef0:	f7fd f966 	bl	80011c0 <evnt_schdlr_init>
 8003ef4:	6828      	ldr	r0, [r5, #0]
 8003ef6:	6d00      	ldr	r0, [r0, #80]	; 0x50
 8003ef8:	f7fe f9e9 	bl	80022ce <evnt_schdlr_rgstr_end_of_activity_cbk>
 8003efc:	2100      	movs	r1, #0
 8003efe:	200a      	movs	r0, #10
 8003f00:	f7fe f939 	bl	8002176 <evnt_schdlr_set_phy_clbr_params>

08003f04 <??ll_intf_init_17>:
 8003f04:	4620      	mov	r0, r4
 8003f06:	b00d      	add	sp, #52	; 0x34
 8003f08:	bdf0      	pop	{r4, r5, r6, r7, pc}

08003f0a <ll_intf_disconnect>:
 8003f0a:	2200      	movs	r2, #0
 8003f0c:	2300      	movs	r3, #0
 8003f0e:	b510      	push	{r4, lr}
 8003f10:	f5b0 6f70 	cmp.w	r0, #3840	; 0xf00
 8003f14:	bfb8      	it	lt
 8003f16:	2201      	movlt	r2, #1
 8003f18:	2905      	cmp	r1, #5
 8003f1a:	bf18      	it	ne
 8003f1c:	291a      	cmpne	r1, #26
 8003f1e:	d007      	beq.n	8003f30 <??ll_intf_disconnect_0>
 8003f20:	2929      	cmp	r1, #41	; 0x29
 8003f22:	bf18      	it	ne
 8003f24:	293b      	cmpne	r1, #59	; 0x3b
 8003f26:	d003      	beq.n	8003f30 <??ll_intf_disconnect_0>
 8003f28:	f1a1 0413 	sub.w	r4, r1, #19
 8003f2c:	2c03      	cmp	r4, #3
 8003f2e:	d200      	bcs.n	8003f32 <??ll_intf_disconnect_1>

08003f30 <??ll_intf_disconnect_0>:
 8003f30:	2301      	movs	r3, #1

08003f32 <??ll_intf_disconnect_1>:
 8003f32:	421a      	tst	r2, r3
 8003f34:	bf0c      	ite	eq
 8003f36:	2012      	moveq	r0, #18
 8003f38:	f003 fbc6 	blne	80076c8 <llcp_disconnect>
 8003f3c:	b2c0      	uxtb	r0, r0
 8003f3e:	bd10      	pop	{r4, pc}

08003f40 <ll_intf_read_local_ver_info>:
 8003f40:	e92d 41fc 	stmdb	sp!, {r2, r3, r4, r5, r6, r7, r8, lr}
 8003f44:	0007      	movs	r7, r0
 8003f46:	4688      	mov	r8, r1
 8003f48:	4615      	mov	r5, r2
 8003f4a:	461e      	mov	r6, r3
 8003f4c:	bf18      	it	ne
 8003f4e:	2d00      	cmpne	r5, #0
 8003f50:	d004      	beq.n	8003f5c <??ll_intf_read_local_ver_info_0>
 8003f52:	2e00      	cmp	r6, #0
 8003f54:	bf1c      	itt	ne
 8003f56:	9c08      	ldrne	r4, [sp, #32]
 8003f58:	2c00      	cmpne	r4, #0
 8003f5a:	d101      	bne.n	8003f60 <??ll_intf_read_local_ver_info_1>

08003f5c <??ll_intf_read_local_ver_info_0>:
 8003f5c:	2012      	movs	r0, #18
 8003f5e:	e01f      	b.n	8003fa0 <??ll_intf_read_local_ver_info_2>

08003f60 <??ll_intf_read_local_ver_info_1>:
 8003f60:	4668      	mov	r0, sp
 8003f62:	f012 fa40 	bl	80163e6 <db_get_local_vrsn_info>
 8003f66:	f89d 1006 	ldrb.w	r1, [sp, #6]
 8003f6a:	7039      	strb	r1, [r7, #0]
 8003f6c:	f8bd 2000 	ldrh.w	r2, [sp]
 8003f70:	f888 2000 	strb.w	r2, [r8]
 8003f74:	f8bd 1000 	ldrh.w	r1, [sp]
 8003f78:	0a09      	lsrs	r1, r1, #8
 8003f7a:	f888 1001 	strb.w	r1, [r8, #1]
 8003f7e:	f89d 1007 	ldrb.w	r1, [sp, #7]
 8003f82:	7029      	strb	r1, [r5, #0]
 8003f84:	f8bd 2002 	ldrh.w	r2, [sp, #2]
 8003f88:	7032      	strb	r2, [r6, #0]
 8003f8a:	f8bd 1002 	ldrh.w	r1, [sp, #2]
 8003f8e:	0a09      	lsrs	r1, r1, #8
 8003f90:	7071      	strb	r1, [r6, #1]
 8003f92:	f8bd 1004 	ldrh.w	r1, [sp, #4]
 8003f96:	7021      	strb	r1, [r4, #0]
 8003f98:	f8bd 2004 	ldrh.w	r2, [sp, #4]
 8003f9c:	0a12      	lsrs	r2, r2, #8
 8003f9e:	7062      	strb	r2, [r4, #1]

08003fa0 <??ll_intf_read_local_ver_info_2>:
 8003fa0:	b2c0      	uxtb	r0, r0
 8003fa2:	e8bd 81f6 	ldmia.w	sp!, {r1, r2, r4, r5, r6, r7, r8, pc}
	...

08003fa8 <ll_intf_read_cntrlr_ver_info>:
 8003fa8:	b538      	push	{r3, r4, r5, lr}
 8003faa:	4604      	mov	r4, r0
 8003fac:	2012      	movs	r0, #18
 8003fae:	2c00      	cmp	r4, #0
 8003fb0:	d06c      	beq.n	800408c <??ll_intf_read_cntrlr_ver_info_1>
 8003fb2:	292c      	cmp	r1, #44	; 0x2c
 8003fb4:	d36a      	bcc.n	800408c <??ll_intf_read_cntrlr_ver_info_1>
 8003fb6:	222c      	movs	r2, #44	; 0x2c
 8003fb8:	4936      	ldr	r1, [pc, #216]	; (8004094 <??DataTable3_1>)
 8003fba:	4620      	mov	r0, r4
 8003fbc:	f00a fdc4 	bl	800eb48 <ble_memcpy>
 8003fc0:	4668      	mov	r0, sp
 8003fc2:	f007 fdb9 	bl	800bb38 <llhwc_get_rtl_vrsn>
 8003fc6:	f89d 0003 	ldrb.w	r0, [sp, #3]
 8003fca:	08c2      	lsrs	r2, r0, #3
 8003fcc:	eb00 7312 	add.w	r3, r0, r2, lsr #28
 8003fd0:	091b      	lsrs	r3, r3, #4
 8003fd2:	eba0 1003 	sub.w	r0, r0, r3, lsl #4
 8003fd6:	3030      	adds	r0, #48	; 0x30
 8003fd8:	7120      	strb	r0, [r4, #4]
 8003fda:	f89d 0002 	ldrb.w	r0, [sp, #2]
 8003fde:	0902      	lsrs	r2, r0, #4
 8003fe0:	3230      	adds	r2, #48	; 0x30
 8003fe2:	71a2      	strb	r2, [r4, #6]
 8003fe4:	08c3      	lsrs	r3, r0, #3
 8003fe6:	eb00 7213 	add.w	r2, r0, r3, lsr #28
 8003fea:	0912      	lsrs	r2, r2, #4
 8003fec:	eba0 1002 	sub.w	r0, r0, r2, lsl #4
 8003ff0:	4a29      	ldr	r2, [pc, #164]	; (8004098 <??DataTable3_2>)
 8003ff2:	3030      	adds	r0, #48	; 0x30
 8003ff4:	71e0      	strb	r0, [r4, #7]
 8003ff6:	f89d 0001 	ldrb.w	r0, [sp, #1]
 8003ffa:	f000 000f 	and.w	r0, r0, #15
 8003ffe:	fb80 3202 	smull	r3, r2, r0, r2
 8004002:	1092      	asrs	r2, r2, #2
 8004004:	eb02 72d2 	add.w	r2, r2, r2, lsr #31
 8004008:	eb02 0582 	add.w	r5, r2, r2, lsl #2
 800400c:	eba0 0045 	sub.w	r0, r0, r5, lsl #1
 8004010:	3041      	adds	r0, #65	; 0x41
 8004012:	7220      	strb	r0, [r4, #8]
 8004014:	f89d 0001 	ldrb.w	r0, [sp, #1]
 8004018:	0900      	lsrs	r0, r0, #4
 800401a:	2806      	cmp	r0, #6
 800401c:	d824      	bhi.n	8004068 <??ll_intf_read_cntrlr_ver_info_2>
 800401e:	e8df f000 	tbb	[pc, r0]

08004022 <??ll_intf_read_cntrlr_ver_info_0>:
 8004022:	0804 120e 1723 001e                         ....#...

0800402a <??ll_intf_read_cntrlr_ver_info_3>:
 800402a:	2147      	movs	r1, #71	; 0x47
 800402c:	72a1      	strb	r1, [r4, #10]
 800402e:	2041      	movs	r0, #65	; 0x41
 8004030:	e018      	b.n	8004064 <??ll_intf_read_cntrlr_ver_info_4>

08004032 <??ll_intf_read_cntrlr_ver_info_5>:
 8004032:	214c      	movs	r1, #76	; 0x4c
 8004034:	72a1      	strb	r1, [r4, #10]
 8004036:	2043      	movs	r0, #67	; 0x43
 8004038:	72e0      	strb	r0, [r4, #11]
 800403a:	2141      	movs	r1, #65	; 0x41
 800403c:	e017      	b.n	800406e <??ll_intf_read_cntrlr_ver_info_6>

0800403e <??ll_intf_read_cntrlr_ver_info_7>:
 800403e:	2045      	movs	r0, #69	; 0x45
 8004040:	72a0      	strb	r0, [r4, #10]
 8004042:	2141      	movs	r1, #65	; 0x41
 8004044:	e002      	b.n	800404c <??ll_intf_read_cntrlr_ver_info_8>

08004046 <??ll_intf_read_cntrlr_ver_info_9>:
 8004046:	204c      	movs	r0, #76	; 0x4c
 8004048:	72a0      	strb	r0, [r4, #10]
 800404a:	2150      	movs	r1, #80	; 0x50

0800404c <??ll_intf_read_cntrlr_ver_info_8>:
 800404c:	72e1      	strb	r1, [r4, #11]
 800404e:	e00f      	b.n	8004070 <??ll_intf_read_cntrlr_ver_info_10>

08004050 <??ll_intf_read_cntrlr_ver_info_11>:
 8004050:	2053      	movs	r0, #83	; 0x53
 8004052:	72a0      	strb	r0, [r4, #10]
 8004054:	214f      	movs	r1, #79	; 0x4f
 8004056:	2057      	movs	r0, #87	; 0x57
 8004058:	72e1      	strb	r1, [r4, #11]
 800405a:	7320      	strb	r0, [r4, #12]
 800405c:	e008      	b.n	8004070 <??ll_intf_read_cntrlr_ver_info_10>

0800405e <??ll_intf_read_cntrlr_ver_info_12>:
 800405e:	2145      	movs	r1, #69	; 0x45
 8004060:	72a1      	strb	r1, [r4, #10]
 8004062:	2043      	movs	r0, #67	; 0x43

08004064 <??ll_intf_read_cntrlr_ver_info_4>:
 8004064:	72e0      	strb	r0, [r4, #11]
 8004066:	e003      	b.n	8004070 <??ll_intf_read_cntrlr_ver_info_10>

08004068 <??ll_intf_read_cntrlr_ver_info_2>:
 8004068:	2158      	movs	r1, #88	; 0x58
 800406a:	72a1      	strb	r1, [r4, #10]
 800406c:	72e1      	strb	r1, [r4, #11]

0800406e <??ll_intf_read_cntrlr_ver_info_6>:
 800406e:	7321      	strb	r1, [r4, #12]

08004070 <??ll_intf_read_cntrlr_ver_info_10>:
 8004070:	f89d 0000 	ldrb.w	r0, [sp]
 8004074:	0901      	lsrs	r1, r0, #4
 8004076:	3130      	adds	r1, #48	; 0x30
 8004078:	7361      	strb	r1, [r4, #13]
 800407a:	08c2      	lsrs	r2, r0, #3
 800407c:	eb00 7112 	add.w	r1, r0, r2, lsr #28
 8004080:	0909      	lsrs	r1, r1, #4
 8004082:	eba0 1001 	sub.w	r0, r0, r1, lsl #4
 8004086:	3030      	adds	r0, #48	; 0x30
 8004088:	73a0      	strb	r0, [r4, #14]
 800408a:	2000      	movs	r0, #0

0800408c <??ll_intf_read_cntrlr_ver_info_1>:
 800408c:	bd32      	pop	{r1, r4, r5, pc}
	...

08004090 <??DataTable3>:
 8004090:	3bc1 0800                                   .;..

08004094 <??DataTable3_1>:
 8004094:	192c 0803                                   ,...

08004098 <??DataTable3_2>:
 8004098:	6667 6666                                   gfff

0800409c <??DataTable3_3>:
 800409c:	06f0 2000                                   ... 

080040a0 <ll_intf_read_local_supported_cmds>:
 80040a0:	b580      	push	{r7, lr}
 80040a2:	2800      	cmp	r0, #0
 80040a4:	bf0c      	ite	eq
 80040a6:	2012      	moveq	r0, #18
 80040a8:	f012 f9da 	blne	8016460 <db_get_supprtd_cmds>
 80040ac:	b2c0      	uxtb	r0, r0
 80040ae:	bd02      	pop	{r1, pc}

080040b0 <ll_intf_le_read_buffer_size>:
 80040b0:	2800      	cmp	r0, #0
 80040b2:	bf1c      	itt	ne
 80040b4:	2900      	cmpne	r1, #0
 80040b6:	f012 ba0e 	bne.w	80164d6 <db_get_data_buffer_size>
 80040ba:	2012      	movs	r0, #18
 80040bc:	4770      	bx	lr

080040be <ll_intf_read_local_supported_features>:
 80040be:	b580      	push	{r7, lr}
 80040c0:	2800      	cmp	r0, #0
 80040c2:	bf0c      	ite	eq
 80040c4:	2012      	moveq	r0, #18
 80040c6:	f012 f9c1 	blne	801644c <db_get_feature_info>
 80040ca:	b2c0      	uxtb	r0, r0
 80040cc:	bd02      	pop	{r1, pc}

080040ce <ll_intf_read_bd_addr>:
 80040ce:	b580      	push	{r7, lr}
 80040d0:	2800      	cmp	r0, #0
 80040d2:	bf0c      	ite	eq
 80040d4:	2012      	moveq	r0, #18
 80040d6:	f012 f9d7 	blne	8016488 <db_get_bd_address>
 80040da:	b2c0      	uxtb	r0, r0
 80040dc:	bd02      	pop	{r1, pc}

080040de <ll_intf_write_bd_addr>:
 80040de:	b580      	push	{r7, lr}
 80040e0:	2800      	cmp	r0, #0
 80040e2:	bf0c      	ite	eq
 80040e4:	2012      	moveq	r0, #18
 80040e6:	f012 f9d9 	blne	801649c <db_set_bd_address>
 80040ea:	b2c0      	uxtb	r0, r0
 80040ec:	bd02      	pop	{r1, pc}

080040ee <ll_intf_le_read_local_supported_features>:
 80040ee:	2800      	cmp	r0, #0
 80040f0:	bf18      	it	ne
 80040f2:	f012 b98a 	bne.w	801640a <db_get_le_feature_info>
 80040f6:	2012      	movs	r0, #18
 80040f8:	4770      	bx	lr

080040fa <ll_intf_le_read_supported_states>:
 80040fa:	2800      	cmp	r0, #0
 80040fc:	bf18      	it	ne
 80040fe:	f012 b9b9 	bne.w	8016474 <db_get_supprtd_states>
 8004102:	2012      	movs	r0, #18
 8004104:	4770      	bx	lr

08004106 <ll_intf_le_read_max_data_length>:
 8004106:	b5fe      	push	{r1, r2, r3, r4, r5, r6, r7, lr}
 8004108:	0007      	movs	r7, r0
 800410a:	460c      	mov	r4, r1
 800410c:	4615      	mov	r5, r2
 800410e:	461e      	mov	r6, r3
 8004110:	bf18      	it	ne
 8004112:	2c00      	cmpne	r4, #0
 8004114:	d003      	beq.n	800411e <??ll_intf_le_read_max_data_length_0>
 8004116:	2d00      	cmp	r5, #0
 8004118:	bf18      	it	ne
 800411a:	2e00      	cmpne	r6, #0
 800411c:	d102      	bne.n	8004124 <??ll_intf_le_read_max_data_length_1>

0800411e <??ll_intf_le_read_max_data_length_0>:
 800411e:	2012      	movs	r0, #18
 8004120:	b003      	add	sp, #12
 8004122:	bdf0      	pop	{r4, r5, r6, r7, pc}

08004124 <??ll_intf_le_read_max_data_length_1>:
 8004124:	4668      	mov	r0, sp
 8004126:	f012 f9c4 	bl	80164b2 <db_get_max_data_length>
 800412a:	f8bd 1000 	ldrh.w	r1, [sp]
 800412e:	7039      	strb	r1, [r7, #0]
 8004130:	f8bd 2000 	ldrh.w	r2, [sp]
 8004134:	0a12      	lsrs	r2, r2, #8
 8004136:	707a      	strb	r2, [r7, #1]
 8004138:	f8bd 1002 	ldrh.w	r1, [sp, #2]
 800413c:	7021      	strb	r1, [r4, #0]
 800413e:	f8bd 2002 	ldrh.w	r2, [sp, #2]
 8004142:	0a12      	lsrs	r2, r2, #8
 8004144:	7062      	strb	r2, [r4, #1]
 8004146:	f8bd 1004 	ldrh.w	r1, [sp, #4]
 800414a:	7029      	strb	r1, [r5, #0]
 800414c:	f8bd 2004 	ldrh.w	r2, [sp, #4]
 8004150:	0a12      	lsrs	r2, r2, #8
 8004152:	706a      	strb	r2, [r5, #1]
 8004154:	f8bd 1006 	ldrh.w	r1, [sp, #6]
 8004158:	7031      	strb	r1, [r6, #0]
 800415a:	f8bd 2006 	ldrh.w	r2, [sp, #6]
 800415e:	0a12      	lsrs	r2, r2, #8
 8004160:	7072      	strb	r2, [r6, #1]
 8004162:	b003      	add	sp, #12
 8004164:	bdf0      	pop	{r4, r5, r6, r7, pc}

08004166 <ll_intf_le_set_adv_enable>:
 8004166:	0001      	movs	r1, r0
 8004168:	d003      	beq.n	8004172 <??ll_intf_le_set_adv_enable_0>
 800416a:	2801      	cmp	r0, #1
 800416c:	d003      	beq.n	8004176 <??ll_intf_le_set_adv_enable_1>
 800416e:	2012      	movs	r0, #18
 8004170:	4770      	bx	lr

08004172 <??ll_intf_le_set_adv_enable_0>:
 8004172:	2001      	movs	r0, #1
 8004174:	e000      	b.n	8004178 <??ll_intf_le_set_adv_enable_2>

08004176 <??ll_intf_le_set_adv_enable_1>:
 8004176:	2000      	movs	r0, #0

08004178 <??ll_intf_le_set_adv_enable_2>:
 8004178:	f00d be30 	b.w	8011ddc <non_conn_mngr_adv_enable>

0800417c <ll_intf_le_set_adv_data>:
 800417c:	460a      	mov	r2, r1
 800417e:	4601      	mov	r1, r0
 8004180:	2920      	cmp	r1, #32
 8004182:	da04      	bge.n	800418e <??ll_intf_le_set_adv_data_0>
 8004184:	2a00      	cmp	r2, #0
 8004186:	bf1c      	itt	ne
 8004188:	4610      	movne	r0, r2
 800418a:	f00d bde2 	bne.w	8011d52 <non_conn_mngr_set_adv_data>

0800418e <??ll_intf_le_set_adv_data_0>:
 800418e:	2012      	movs	r0, #18
 8004190:	4770      	bx	lr

08004192 <ll_intf_le_set_adv_params>:
 8004192:	b578      	push	{r3, r4, r5, r6, lr}
 8004194:	b089      	sub	sp, #36	; 0x24
 8004196:	4604      	mov	r4, r0
 8004198:	7920      	ldrb	r0, [r4, #4]
 800419a:	2801      	cmp	r0, #1
 800419c:	d01c      	beq.n	80041d8 <??ll_intf_le_set_adv_params_0>
 800419e:	8822      	ldrh	r2, [r4, #0]
 80041a0:	8865      	ldrh	r5, [r4, #2]
 80041a2:	f643 73e1 	movw	r3, #16353	; 0x3fe1
 80041a6:	f1a2 0120 	sub.w	r1, r2, #32
 80041aa:	4299      	cmp	r1, r3
 80041ac:	4189      	sbcs	r1, r1
 80041ae:	f1a5 0620 	sub.w	r6, r5, #32
 80041b2:	429e      	cmp	r6, r3
 80041b4:	419b      	sbcs	r3, r3
 80041b6:	0fdb      	lsrs	r3, r3, #31
 80041b8:	ea03 71d1 	and.w	r1, r3, r1, lsr #31
 80041bc:	4295      	cmp	r5, r2
 80041be:	4192      	sbcs	r2, r2
 80041c0:	43d2      	mvns	r2, r2
 80041c2:	ea01 71d2 	and.w	r1, r1, r2, lsr #31
 80041c6:	2804      	cmp	r0, #4
 80041c8:	d007      	beq.n	80041da <??ll_intf_le_set_adv_params_1>
 80041ca:	7ba2      	ldrb	r2, [r4, #14]
 80041cc:	2a04      	cmp	r2, #4
 80041ce:	bfb4      	ite	lt
 80041d0:	2201      	movlt	r2, #1
 80041d2:	2200      	movge	r2, #0
 80041d4:	4011      	ands	r1, r2
 80041d6:	e000      	b.n	80041da <??ll_intf_le_set_adv_params_1>

080041d8 <??ll_intf_le_set_adv_params_0>:
 80041d8:	2101      	movs	r1, #1

080041da <??ll_intf_le_set_adv_params_1>:
 80041da:	2804      	cmp	r0, #4
 80041dc:	bfd4      	ite	le
 80041de:	2001      	movle	r0, #1
 80041e0:	2000      	movgt	r0, #0
 80041e2:	4001      	ands	r1, r0
 80041e4:	7960      	ldrb	r0, [r4, #5]
 80041e6:	2804      	cmp	r0, #4
 80041e8:	bfb4      	ite	lt
 80041ea:	2001      	movlt	r0, #1
 80041ec:	2000      	movge	r0, #0
 80041ee:	4001      	ands	r1, r0
 80041f0:	79a0      	ldrb	r0, [r4, #6]
 80041f2:	2802      	cmp	r0, #2
 80041f4:	bfb4      	ite	lt
 80041f6:	2001      	movlt	r0, #1
 80041f8:	2000      	movge	r0, #0
 80041fa:	4001      	ands	r1, r0
 80041fc:	7b60      	ldrb	r0, [r4, #13]
 80041fe:	b118      	cbz	r0, 8004208 <??ll_intf_le_set_adv_params_2>
 8004200:	2807      	cmp	r0, #7
 8004202:	bfd8      	it	le
 8004204:	2001      	movle	r0, #1
 8004206:	dd00      	ble.n	800420a <??ll_intf_le_set_adv_params_3>

08004208 <??ll_intf_le_set_adv_params_2>:
 8004208:	2000      	movs	r0, #0

0800420a <??ll_intf_le_set_adv_params_3>:
 800420a:	4201      	tst	r1, r0
 800420c:	bf08      	it	eq
 800420e:	2012      	moveq	r0, #18
 8004210:	d024      	beq.n	800425c <??ll_intf_le_set_adv_params_4>
 8004212:	8820      	ldrh	r0, [r4, #0]
 8004214:	2206      	movs	r2, #6
 8004216:	1de1      	adds	r1, r4, #7
 8004218:	9003      	str	r0, [sp, #12]
 800421a:	8860      	ldrh	r0, [r4, #2]
 800421c:	9004      	str	r0, [sp, #16]
 800421e:	7920      	ldrb	r0, [r4, #4]
 8004220:	f88d 0015 	strb.w	r0, [sp, #21]
 8004224:	7960      	ldrb	r0, [r4, #5]
 8004226:	f88d 001f 	strb.w	r0, [sp, #31]
 800422a:	79a0      	ldrb	r0, [r4, #6]
 800422c:	f88d 0016 	strb.w	r0, [sp, #22]
 8004230:	7b60      	ldrb	r0, [r4, #13]
 8004232:	f88d 0014 	strb.w	r0, [sp, #20]
 8004236:	f10d 0017 	add.w	r0, sp, #23
 800423a:	f00a fc85 	bl	800eb48 <ble_memcpy>
 800423e:	7ba0      	ldrb	r0, [r4, #14]
 8004240:	b138      	cbz	r0, 8004252 <??ll_intf_le_set_adv_params_5>
 8004242:	2801      	cmp	r0, #1
 8004244:	bf14      	ite	ne
 8004246:	2802      	cmpne	r0, #2
 8004248:	1c40      	addeq	r0, r0, #1
 800424a:	d002      	beq.n	8004252 <??ll_intf_le_set_adv_params_5>
 800424c:	2803      	cmp	r0, #3
 800424e:	d102      	bne.n	8004256 <??ll_intf_le_set_adv_params_6>
 8004250:	2001      	movs	r0, #1

08004252 <??ll_intf_le_set_adv_params_5>:
 8004252:	f88d 0020 	strb.w	r0, [sp, #32]

08004256 <??ll_intf_le_set_adv_params_6>:
 8004256:	4668      	mov	r0, sp
 8004258:	f00d fd4f 	bl	8011cfa <non_conn_mngr_set_adv_params>

0800425c <??ll_intf_le_set_adv_params_4>:
 800425c:	b00a      	add	sp, #40	; 0x28
 800425e:	bd70      	pop	{r4, r5, r6, pc}

08004260 <ll_intf_reset>:
 8004260:	b5fe      	push	{r1, r2, r3, r4, r5, r6, r7, lr}
 8004262:	2100      	movs	r1, #0
 8004264:	f8ad 1000 	strh.w	r1, [sp]
 8004268:	2000      	movs	r0, #0
 800426a:	f7fe f82d 	bl	80022c8 <evnt_schdlr_set_end_of_activity_mask>
 800426e:	f008 f80c 	bl	800c28a <llhwc_cmn_is_dp_slp_enabled>
 8004272:	b110      	cbz	r0, 800427a <??ll_intf_reset_0>
 8004274:	2000      	movs	r0, #0
 8004276:	f007 ffbd 	bl	800c1f4 <llhwc_cmn_set_dp_slp_mode>

0800427a <??ll_intf_reset_0>:
 800427a:	f011 f9b6 	bl	80155ea <conn_mngr_reset>
 800427e:	f011 ff55 	bl	801612c <db_reset>
 8004282:	f00d f929 	bl	80114d8 <non_conn_mngr_reset>
 8004286:	2100      	movs	r1, #0
 8004288:	2000      	movs	r0, #0
 800428a:	f7fd ff74 	bl	8002176 <evnt_schdlr_set_phy_clbr_params>
 800428e:	f7fc ffce 	bl	800122e <evnt_schdlr_reset>
 8004292:	f010 f903 	bl	801449c <state_mngr_reset>
 8004296:	f005 fc8d 	bl	8009bb4 <llhwc_is_dtm_enabled>
 800429a:	b110      	cbz	r0, 80042a2 <??ll_intf_reset_1>
 800429c:	4668      	mov	r0, sp
 800429e:	f005 fc92 	bl	8009bc6 <llhwc_stp_dtm>

080042a2 <??ll_intf_reset_1>:
 80042a2:	f00f f9a3 	bl	80135ec <prvcy_mngr_reset>
 80042a6:	f004 fee2 	bl	800906e <llhwc_reset>
 80042aa:	bf00      	nop
 80042ac:	a11c      	add	r1, pc, #112	; (adr r1, 8004320 <?_1>)
 80042ae:	680a      	ldr	r2, [r1, #0]
 80042b0:	4606      	mov	r6, r0
 80042b2:	a801      	add	r0, sp, #4
 80042b4:	6002      	str	r2, [r0, #0]
 80042b6:	af01      	add	r7, sp, #4
 80042b8:	2503      	movs	r5, #3
 80042ba:	e007      	b.n	80042cc <??ll_intf_reset_2>

080042bc <??ll_intf_reset_3>:
 80042bc:	f000 ffae 	bl	800521c <os_mem_pool_free>
 80042c0:	4620      	mov	r0, r4
 80042c2:	f000 ffab 	bl	800521c <os_mem_pool_free>
 80042c6:	202b      	movs	r0, #43	; 0x2b
 80042c8:	f7fb ffb0 	bl	800022c <bsp_debug_gpio_clear>

080042cc <??ll_intf_reset_2>:
 80042cc:	783c      	ldrb	r4, [r7, #0]
 80042ce:	4620      	mov	r0, r4
 80042d0:	f7fc f88e 	bl	80003f0 <emngr_get_handle_events>
 80042d4:	b178      	cbz	r0, 80042f6 <??ll_intf_reset_4>
 80042d6:	4620      	mov	r0, r4
 80042d8:	f7fc f84d 	bl	8000376 <emngr_get_event>
 80042dc:	0004      	movs	r4, r0
 80042de:	d0f5      	beq.n	80042cc <??ll_intf_reset_2>
 80042e0:	202b      	movs	r0, #43	; 0x2b
 80042e2:	f7fb ffa1 	bl	8000228 <bsp_debug_gpio_set>
 80042e6:	6820      	ldr	r0, [r4, #0]
 80042e8:	f7fb ff74 	bl	80001d4 <bsp_is_ptr_in_ble_mem>
 80042ec:	2800      	cmp	r0, #0
 80042ee:	6820      	ldr	r0, [r4, #0]
 80042f0:	d0e4      	beq.n	80042bc <??ll_intf_reset_3>
 80042f2:	1f00      	subs	r0, r0, #4
 80042f4:	e7e2      	b.n	80042bc <??ll_intf_reset_3>

080042f6 <??ll_intf_reset_4>:
 80042f6:	1c7f      	adds	r7, r7, #1
 80042f8:	1e6d      	subs	r5, r5, #1
 80042fa:	d1e7      	bne.n	80042cc <??ll_intf_reset_2>
 80042fc:	f010 f9f4 	bl	80146e8 <ble_mem_shared_reset>
 8004300:	2002      	movs	r0, #2
 8004302:	f008 fe69 	bl	800cfd8 <llhwc_cmn_set_controller_activity>
 8004306:	f007 fe63 	bl	800bfd0 <llhwc_is_in_augmented_mode>
 800430a:	2801      	cmp	r0, #1
 800430c:	bf08      	it	eq
 800430e:	f007 fdaa 	bleq	800be66 <llhwc_stop_augmented_mode>
 8004312:	2100      	movs	r1, #0
 8004314:	200a      	movs	r0, #10
 8004316:	f7fd ff2e 	bl	8002176 <evnt_schdlr_set_phy_clbr_params>
 800431a:	4630      	mov	r0, r6
 800431c:	b003      	add	sp, #12
 800431e:	bdf0      	pop	{r4, r5, r6, r7, pc}

08004320 <?_1>:
 8004320:	0706 0008                                   ....

08004324 <ll_intf_le_set_host_channel_classification>:
 8004324:	b538      	push	{r3, r4, r5, lr}
 8004326:	0004      	movs	r4, r0
 8004328:	bf08      	it	eq
 800432a:	2512      	moveq	r5, #18
 800432c:	d005      	beq.n	800433a <??ll_intf_le_set_host_channel_classification_0>
 800432e:	f012 f90c 	bl	801654a <db_set_host_ch_clasfcn>
 8004332:	4605      	mov	r5, r0
 8004334:	4620      	mov	r0, r4
 8004336:	f003 fe7f 	bl	8008038 <llcp_update_chnl_map>

0800433a <??ll_intf_le_set_host_channel_classification_0>:
 800433a:	b2e8      	uxtb	r0, r5
 800433c:	bd32      	pop	{r1, r4, r5, pc}

0800433e <ll_intf_le_encrypt>:
 800433e:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8004340:	b08c      	sub	sp, #48	; 0x30
 8004342:	4614      	mov	r4, r2
 8004344:	2800      	cmp	r0, #0
 8004346:	bf18      	it	ne
 8004348:	2900      	cmpne	r1, #0
 800434a:	d000      	beq.n	800434e <??ll_intf_le_encrypt_0>
 800434c:	b90c      	cbnz	r4, 8004352 <??ll_intf_le_encrypt_1>

0800434e <??ll_intf_le_encrypt_0>:
 800434e:	2112      	movs	r1, #18
 8004350:	e03e      	b.n	80043d0 <??ll_intf_le_encrypt_2>

08004352 <??ll_intf_le_encrypt_1>:
 8004352:	ab08      	add	r3, sp, #32
 8004354:	ad04      	add	r5, sp, #16
 8004356:	2204      	movs	r2, #4

08004358 <??ll_intf_le_encrypt_3>:
 8004358:	f810 6b01 	ldrb.w	r6, [r0], #1
 800435c:	1e52      	subs	r2, r2, #1
 800435e:	f803 6b01 	strb.w	r6, [r3], #1
 8004362:	f811 6b01 	ldrb.w	r6, [r1], #1
 8004366:	f805 6b01 	strb.w	r6, [r5], #1
 800436a:	f810 7b01 	ldrb.w	r7, [r0], #1
 800436e:	f803 7b01 	strb.w	r7, [r3], #1
 8004372:	f811 7b01 	ldrb.w	r7, [r1], #1
 8004376:	f805 7b01 	strb.w	r7, [r5], #1
 800437a:	f810 6b01 	ldrb.w	r6, [r0], #1
 800437e:	f803 6b01 	strb.w	r6, [r3], #1
 8004382:	f811 6b01 	ldrb.w	r6, [r1], #1
 8004386:	f805 6b01 	strb.w	r6, [r5], #1
 800438a:	f810 7b01 	ldrb.w	r7, [r0], #1
 800438e:	f803 7b01 	strb.w	r7, [r3], #1
 8004392:	f811 7b01 	ldrb.w	r7, [r1], #1
 8004396:	f805 7b01 	strb.w	r7, [r5], #1
 800439a:	d1dd      	bne.n	8004358 <??ll_intf_le_encrypt_3>
 800439c:	466a      	mov	r2, sp
 800439e:	a908      	add	r1, sp, #32
 80043a0:	a804      	add	r0, sp, #16
 80043a2:	f005 fbec 	bl	8009b7e <llhwc_128_encrypt>
 80043a6:	4601      	mov	r1, r0
 80043a8:	466a      	mov	r2, sp
 80043aa:	2004      	movs	r0, #4

080043ac <??ll_intf_le_encrypt_4>:
 80043ac:	f812 3b01 	ldrb.w	r3, [r2], #1
 80043b0:	1e40      	subs	r0, r0, #1
 80043b2:	f804 3b01 	strb.w	r3, [r4], #1
 80043b6:	f812 5b01 	ldrb.w	r5, [r2], #1
 80043ba:	f804 5b01 	strb.w	r5, [r4], #1
 80043be:	f812 3b01 	ldrb.w	r3, [r2], #1
 80043c2:	f804 3b01 	strb.w	r3, [r4], #1
 80043c6:	f812 5b01 	ldrb.w	r5, [r2], #1
 80043ca:	f804 5b01 	strb.w	r5, [r4], #1
 80043ce:	d1ed      	bne.n	80043ac <??ll_intf_le_encrypt_4>

080043d0 <??ll_intf_le_encrypt_2>:
 80043d0:	b2c8      	uxtb	r0, r1
 80043d2:	b00d      	add	sp, #52	; 0x34
 80043d4:	bdf0      	pop	{r4, r5, r6, r7, pc}

080043d6 <ll_intf_rcvd_long_trm_key>:
 80043d6:	f5b0 6f70 	cmp.w	r0, #3840	; 0xf00
 80043da:	bfb8      	it	lt
 80043dc:	f003 bfb4 	blt.w	8008348 <llcp_start_encryption>
 80043e0:	2012      	movs	r0, #18
 80043e2:	4770      	bx	lr

080043e4 <ll_intf_le_rand_data>:
 80043e4:	b580      	push	{r7, lr}
 80043e6:	2800      	cmp	r0, #0
 80043e8:	bf0e      	itee	eq
 80043ea:	2012      	moveq	r0, #18
 80043ec:	2108      	movne	r1, #8
 80043ee:	f007 fbdc 	blne	800bbaa <llhwc_gen_rnd_num>
 80043f2:	b2c0      	uxtb	r0, r0
 80043f4:	bd02      	pop	{r1, pc}

080043f6 <ll_intf_le_strt_encrpt>:
 80043f6:	f5b0 6f70 	cmp.w	r0, #3840	; 0xf00
 80043fa:	da03      	bge.n	8004404 <??ll_intf_le_strt_encrpt_0>
 80043fc:	2900      	cmp	r1, #0
 80043fe:	bf18      	it	ne
 8004400:	2b00      	cmpne	r3, #0
 8004402:	d101      	bne.n	8004408 <??ll_intf_le_strt_encrpt_1>

08004404 <??ll_intf_le_strt_encrpt_0>:
 8004404:	2012      	movs	r0, #18
 8004406:	4770      	bx	lr

08004408 <??ll_intf_le_strt_encrpt_1>:
 8004408:	f002 be3f 	b.w	800708a <llcp_encryption_req>

0800440c <ll_intf_le_receiver_test>:
 800440c:	b530      	push	{r4, r5, lr}
 800440e:	b085      	sub	sp, #20
 8004410:	4604      	mov	r4, r0
 8004412:	f010 f89a 	bl	801454a <state_mngr_get_num_states>
 8004416:	b120      	cbz	r0, 8004422 <??ll_intf_le_receiver_test_0>
 8004418:	2040      	movs	r0, #64	; 0x40
 800441a:	240c      	movs	r4, #12
 800441c:	f7fb ff08 	bl	8000230 <bsp_debug_gpio_toggle>
 8004420:	e011      	b.n	8004446 <??ll_intf_le_receiver_test_1>

08004422 <??ll_intf_le_receiver_test_0>:
 8004422:	2c28      	cmp	r4, #40	; 0x28
 8004424:	da0e      	bge.n	8004444 <??ll_intf_le_receiver_test_2>
 8004426:	9004      	str	r0, [sp, #16]
 8004428:	2101      	movs	r1, #1
 800442a:	2500      	movs	r5, #0
 800442c:	9000      	str	r0, [sp, #0]
 800442e:	9103      	str	r1, [sp, #12]
 8004430:	9502      	str	r5, [sp, #8]
 8004432:	9501      	str	r5, [sp, #4]
 8004434:	f44f 6280 	mov.w	r2, #1024	; 0x400
 8004438:	2300      	movs	r3, #0
 800443a:	4620      	mov	r0, r4
 800443c:	f005 fc1e 	bl	8009c7c <llhwc_start_dtm>
 8004440:	4604      	mov	r4, r0
 8004442:	e000      	b.n	8004446 <??ll_intf_le_receiver_test_1>

08004444 <??ll_intf_le_receiver_test_2>:
 8004444:	2412      	movs	r4, #18

08004446 <??ll_intf_le_receiver_test_1>:
 8004446:	e077      	b.n	8004538 <??ll_intf_le_enhanced_receiver_test_1>

08004448 <ll_intf_le_transmitter_test>:
 8004448:	b5f0      	push	{r4, r5, r6, r7, lr}
 800444a:	b085      	sub	sp, #20
 800444c:	4604      	mov	r4, r0
 800444e:	460e      	mov	r6, r1
 8004450:	4617      	mov	r7, r2
 8004452:	2500      	movs	r5, #0
 8004454:	f010 f879 	bl	801454a <state_mngr_get_num_states>
 8004458:	b120      	cbz	r0, 8004464 <??ll_intf_le_transmitter_test_0>
 800445a:	2040      	movs	r0, #64	; 0x40
 800445c:	240c      	movs	r4, #12
 800445e:	f7fb fee7 	bl	8000230 <bsp_debug_gpio_toggle>
 8004462:	e030      	b.n	80044c6 <??ll_intf_le_transmitter_test_1>

08004464 <??ll_intf_le_transmitter_test_0>:
 8004464:	2c28      	cmp	r4, #40	; 0x28
 8004466:	bfb8      	it	lt
 8004468:	2f08      	cmplt	r7, #8
 800446a:	da08      	bge.n	800447e <??ll_intf_le_transmitter_test_2>
 800446c:	00f0      	lsls	r0, r6, #3
 800446e:	3050      	adds	r0, #80	; 0x50
 8004470:	f240 1179 	movw	r1, #377	; 0x179
 8004474:	4288      	cmp	r0, r1
 8004476:	d204      	bcs.n	8004482 <??ll_intf_le_transmitter_test_3>
 8004478:	f240 2571 	movw	r5, #625	; 0x271
 800447c:	e015      	b.n	80044aa <??ll_intf_le_transmitter_test_4>

0800447e <??ll_intf_le_transmitter_test_2>:
 800447e:	2412      	movs	r4, #18
 8004480:	e021      	b.n	80044c6 <??ll_intf_le_transmitter_test_1>

08004482 <??ll_intf_le_transmitter_test_3>:
 8004482:	f240 31e9 	movw	r1, #1001	; 0x3e9
 8004486:	4288      	cmp	r0, r1
 8004488:	bf38      	it	cc
 800448a:	f240 45e2 	movwcc	r5, #1250	; 0x4e2
 800448e:	d30c      	bcc.n	80044aa <??ll_intf_le_transmitter_test_4>
 8004490:	f240 6159 	movw	r1, #1625	; 0x659
 8004494:	4288      	cmp	r0, r1
 8004496:	bf38      	it	cc
 8004498:	f240 7553 	movwcc	r5, #1875	; 0x753
 800449c:	d305      	bcc.n	80044aa <??ll_intf_le_transmitter_test_4>
 800449e:	f640 0149 	movw	r1, #2121	; 0x849
 80044a2:	4288      	cmp	r0, r1
 80044a4:	bf38      	it	cc
 80044a6:	f640 15c4 	movwcc	r5, #2500	; 0x9c4

080044aa <??ll_intf_le_transmitter_test_4>:
 80044aa:	2000      	movs	r0, #0
 80044ac:	9004      	str	r0, [sp, #16]
 80044ae:	2101      	movs	r1, #1
 80044b0:	9103      	str	r1, [sp, #12]
 80044b2:	9502      	str	r5, [sp, #8]
 80044b4:	9601      	str	r6, [sp, #4]
 80044b6:	9700      	str	r7, [sp, #0]
 80044b8:	f44f 7200 	mov.w	r2, #512	; 0x200
 80044bc:	2300      	movs	r3, #0
 80044be:	4620      	mov	r0, r4
 80044c0:	f005 fbdc 	bl	8009c7c <llhwc_start_dtm>
 80044c4:	4604      	mov	r4, r0

080044c6 <??ll_intf_le_transmitter_test_1>:
 80044c6:	4620      	mov	r0, r4
 80044c8:	b005      	add	sp, #20
 80044ca:	bdf0      	pop	{r4, r5, r6, r7, pc}

080044cc <ll_intf_le_test_end>:
 80044cc:	b510      	push	{r4, lr}
 80044ce:	0004      	movs	r4, r0
 80044d0:	bf08      	it	eq
 80044d2:	2412      	moveq	r4, #18
 80044d4:	d00b      	beq.n	80044ee <??ll_intf_le_test_end_0>
 80044d6:	f010 f838 	bl	801454a <state_mngr_get_num_states>
 80044da:	b120      	cbz	r0, 80044e6 <??ll_intf_le_test_end_1>
 80044dc:	2040      	movs	r0, #64	; 0x40
 80044de:	240c      	movs	r4, #12
 80044e0:	f7fb fea6 	bl	8000230 <bsp_debug_gpio_toggle>
 80044e4:	e003      	b.n	80044ee <??ll_intf_le_test_end_0>

080044e6 <??ll_intf_le_test_end_1>:
 80044e6:	4620      	mov	r0, r4
 80044e8:	f005 fb6d 	bl	8009bc6 <llhwc_stp_dtm>
 80044ec:	4604      	mov	r4, r0

080044ee <??ll_intf_le_test_end_0>:
 80044ee:	4620      	mov	r0, r4
 80044f0:	bd10      	pop	{r4, pc}

080044f2 <ll_intf_le_enhanced_receiver_test>:
 80044f2:	b530      	push	{r4, r5, lr}
 80044f4:	b085      	sub	sp, #20
 80044f6:	4604      	mov	r4, r0
 80044f8:	460d      	mov	r5, r1
 80044fa:	f010 f826 	bl	801454a <state_mngr_get_num_states>
 80044fe:	b120      	cbz	r0, 800450a <??ll_intf_le_enhanced_receiver_test_0>
 8004500:	2040      	movs	r0, #64	; 0x40
 8004502:	240c      	movs	r4, #12
 8004504:	f7fb fe94 	bl	8000230 <bsp_debug_gpio_toggle>
 8004508:	e016      	b.n	8004538 <??ll_intf_le_enhanced_receiver_test_1>

0800450a <??ll_intf_le_enhanced_receiver_test_0>:
 800450a:	2c28      	cmp	r4, #40	; 0x28
 800450c:	bfa8      	it	ge
 800450e:	2412      	movge	r4, #18
 8004510:	da12      	bge.n	8004538 <??ll_intf_le_enhanced_receiver_test_1>
 8004512:	0028      	movs	r0, r5
 8004514:	d001      	beq.n	800451a <??ll_intf_le_enhanced_receiver_test_2>
 8004516:	2d04      	cmp	r5, #4
 8004518:	db01      	blt.n	800451e <??ll_intf_le_enhanced_receiver_test_3>

0800451a <??ll_intf_le_enhanced_receiver_test_2>:
 800451a:	2411      	movs	r4, #17
 800451c:	e00c      	b.n	8004538 <??ll_intf_le_enhanced_receiver_test_1>

0800451e <??ll_intf_le_enhanced_receiver_test_3>:
 800451e:	2000      	movs	r0, #0
 8004520:	9004      	str	r0, [sp, #16]
 8004522:	9002      	str	r0, [sp, #8]
 8004524:	9001      	str	r0, [sp, #4]
 8004526:	9000      	str	r0, [sp, #0]
 8004528:	9503      	str	r5, [sp, #12]
 800452a:	f44f 6280 	mov.w	r2, #1024	; 0x400
 800452e:	2300      	movs	r3, #0
 8004530:	4620      	mov	r0, r4
 8004532:	f005 fba3 	bl	8009c7c <llhwc_start_dtm>
 8004536:	4604      	mov	r4, r0

08004538 <??ll_intf_le_enhanced_receiver_test_1>:
 8004538:	4620      	mov	r0, r4
 800453a:	b005      	add	sp, #20
 800453c:	bd30      	pop	{r4, r5, pc}
	...

08004540 <ll_intf_le_enhanced_transmitter_test>:
 8004540:	e92d 41f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, lr}
 8004544:	b085      	sub	sp, #20
 8004546:	4604      	mov	r4, r0
 8004548:	460d      	mov	r5, r1
 800454a:	4690      	mov	r8, r2
 800454c:	461e      	mov	r6, r3
 800454e:	2700      	movs	r7, #0
 8004550:	f00f fffb 	bl	801454a <state_mngr_get_num_states>
 8004554:	b120      	cbz	r0, 8004560 <??ll_intf_le_enhanced_transmitter_test_1>
 8004556:	2040      	movs	r0, #64	; 0x40
 8004558:	240c      	movs	r4, #12
 800455a:	f7fb fe69 	bl	8000230 <bsp_debug_gpio_toggle>
 800455e:	e039      	b.n	80045d4 <??ll_intf_le_enhanced_transmitter_test_2>

08004560 <??ll_intf_le_enhanced_transmitter_test_1>:
 8004560:	2c28      	cmp	r4, #40	; 0x28
 8004562:	bfb8      	it	lt
 8004564:	f1b8 0f08 	cmplt.w	r8, #8
 8004568:	da04      	bge.n	8004574 <??ll_intf_le_enhanced_transmitter_test_3>
 800456a:	b10e      	cbz	r6, 8004570 <??ll_intf_le_enhanced_transmitter_test_4>
 800456c:	2e05      	cmp	r6, #5
 800456e:	db03      	blt.n	8004578 <??ll_intf_le_enhanced_transmitter_test_5>

08004570 <??ll_intf_le_enhanced_transmitter_test_4>:
 8004570:	2411      	movs	r4, #17
 8004572:	e02f      	b.n	80045d4 <??ll_intf_le_enhanced_transmitter_test_2>

08004574 <??ll_intf_le_enhanced_transmitter_test_3>:
 8004574:	2412      	movs	r4, #18
 8004576:	e02d      	b.n	80045d4 <??ll_intf_le_enhanced_transmitter_test_2>

08004578 <??ll_intf_le_enhanced_transmitter_test_5>:
 8004578:	1e70      	subs	r0, r6, #1
 800457a:	2803      	cmp	r0, #3
 800457c:	d810      	bhi.n	80045a0 <??ll_intf_le_enhanced_transmitter_test_6>
 800457e:	e8df f000 	tbb	[pc, r0]

08004582 <??ll_intf_le_enhanced_transmitter_test_0>:
 8004582:	0502 0c08                                   ....

08004586 <??ll_intf_le_enhanced_transmitter_test_7>:
 8004586:	00ef      	lsls	r7, r5, #3
 8004588:	3750      	adds	r7, #80	; 0x50
 800458a:	e009      	b.n	80045a0 <??ll_intf_le_enhanced_transmitter_test_6>

0800458c <??ll_intf_le_enhanced_transmitter_test_8>:
 800458c:	00af      	lsls	r7, r5, #2
 800458e:	372c      	adds	r7, #44	; 0x2c
 8004590:	e006      	b.n	80045a0 <??ll_intf_le_enhanced_transmitter_test_6>

08004592 <??ll_intf_le_enhanced_transmitter_test_9>:
 8004592:	01af      	lsls	r7, r5, #6
 8004594:	f507 7734 	add.w	r7, r7, #720	; 0x2d0
 8004598:	e002      	b.n	80045a0 <??ll_intf_le_enhanced_transmitter_test_6>

0800459a <??ll_intf_le_enhanced_transmitter_test_10>:
 800459a:	012f      	lsls	r7, r5, #4
 800459c:	f507 77e7 	add.w	r7, r7, #462	; 0x1ce

080045a0 <??ll_intf_le_enhanced_transmitter_test_6>:
 80045a0:	f207 3769 	addw	r7, r7, #873	; 0x369
 80045a4:	f24d 1cb7 	movw	ip, #53687	; 0xd1b7
 80045a8:	fb0c f707 	mul.w	r7, ip, r7
 80045ac:	f240 2071 	movw	r0, #625	; 0x271
 80045b0:	2100      	movs	r1, #0
 80045b2:	44bc      	add	ip, r7
 80045b4:	ea4f 675c 	mov.w	r7, ip, lsr #25
 80045b8:	4347      	muls	r7, r0
 80045ba:	9104      	str	r1, [sp, #16]
 80045bc:	9603      	str	r6, [sp, #12]
 80045be:	9702      	str	r7, [sp, #8]
 80045c0:	9501      	str	r5, [sp, #4]
 80045c2:	f8cd 8000 	str.w	r8, [sp]
 80045c6:	f44f 7200 	mov.w	r2, #512	; 0x200
 80045ca:	2300      	movs	r3, #0
 80045cc:	4620      	mov	r0, r4
 80045ce:	f005 fb55 	bl	8009c7c <llhwc_start_dtm>
 80045d2:	4604      	mov	r4, r0

080045d4 <??ll_intf_le_enhanced_transmitter_test_2>:
 80045d4:	4620      	mov	r0, r4
 80045d6:	e38b      	b.n	8004cf0 <?Subroutine2>

080045d8 <ll_intf_wrte_authn_pyld_tout>:
 80045d8:	f5b0 6f70 	cmp.w	r0, #3840	; 0xf00
 80045dc:	da03      	bge.n	80045e6 <??ll_intf_wrte_authn_pyld_tout_0>
 80045de:	000a      	movs	r2, r1
 80045e0:	bf18      	it	ne
 80045e2:	f011 bb58 	bne.w	8015c96 <conn_mngr_write_athntct_timeout>

080045e6 <??ll_intf_wrte_authn_pyld_tout_0>:
 80045e6:	2012      	movs	r0, #18
 80045e8:	4770      	bx	lr

080045ea <ll_intf_read_authn_pyld_tout>:
 80045ea:	f5b0 6f70 	cmp.w	r0, #3840	; 0xf00
 80045ee:	da00      	bge.n	80045f2 <??ll_intf_read_authn_pyld_tout_0>
 80045f0:	b909      	cbnz	r1, 80045f6 <??ll_intf_read_authn_pyld_tout_1>

080045f2 <??ll_intf_read_authn_pyld_tout_0>:
 80045f2:	2012      	movs	r0, #18
 80045f4:	4770      	bx	lr

080045f6 <??ll_intf_read_authn_pyld_tout_1>:
 80045f6:	f011 bb3f 	b.w	8015c78 <conn_mngr_read_athntct_timeout>

080045fa <ll_intf_le_set_resolvable_private_addr_timeout>:
 80045fa:	0001      	movs	r1, r0
 80045fc:	d003      	beq.n	8004606 <??ll_intf_le_set_resolvable_private_addr_timeou_0>
 80045fe:	f24a 12b9 	movw	r2, #41401	; 0xa1b9
 8004602:	4290      	cmp	r0, r2
 8004604:	db01      	blt.n	800460a <??ll_intf_le_set_resolvable_private_addr_timeou_1>

08004606 <??ll_intf_le_set_resolvable_private_addr_timeou_0>:
 8004606:	2012      	movs	r0, #18
 8004608:	4770      	bx	lr

0800460a <??ll_intf_le_set_resolvable_private_addr_timeou_1>:
 800460a:	f00f be35 	b.w	8014278 <prvcy_mngr_resolvable_private_addr_timeout>

0800460e <ll_intf_le_add_device_rsolv_list>:
 800460e:	b51c      	push	{r2, r3, r4, lr}
 8004610:	2802      	cmp	r0, #2
 8004612:	bfb4      	ite	lt
 8004614:	2401      	movlt	r4, #1
 8004616:	2400      	movge	r4, #0
 8004618:	2900      	cmp	r1, #0
 800461a:	bf18      	it	ne
 800461c:	2a00      	cmpne	r2, #0
 800461e:	d003      	beq.n	8004628 <??ll_intf_le_add_device_rsolv_list_0>
 8004620:	2b00      	cmp	r3, #0
 8004622:	bf18      	it	ne
 8004624:	2c00      	cmpne	r4, #0
 8004626:	d101      	bne.n	800462c <??ll_intf_le_add_device_rsolv_list_1>

08004628 <??ll_intf_le_add_device_rsolv_list_0>:
 8004628:	2012      	movs	r0, #18
 800462a:	bd16      	pop	{r1, r2, r4, pc}

0800462c <??ll_intf_le_add_device_rsolv_list_1>:
 800462c:	9300      	str	r3, [sp, #0]
 800462e:	4613      	mov	r3, r2
 8004630:	460a      	mov	r2, r1
 8004632:	4601      	mov	r1, r0
 8004634:	2000      	movs	r0, #0
 8004636:	f00f fa20 	bl	8013a7a <prvcy_mngr_add_rmv_clr_fw_reslvng_list>
 800463a:	bd16      	pop	{r1, r2, r4, pc}

0800463c <ll_intf_le_remove_device_rsolv_list>:
 800463c:	b580      	push	{r7, lr}
 800463e:	460a      	mov	r2, r1
 8004640:	2802      	cmp	r0, #2
 8004642:	bfb4      	ite	lt
 8004644:	2101      	movlt	r1, #1
 8004646:	2100      	movge	r1, #0
 8004648:	2a00      	cmp	r2, #0
 800464a:	bf18      	it	ne
 800464c:	2900      	cmpne	r1, #0
 800464e:	d101      	bne.n	8004654 <??ll_intf_le_remove_device_rsolv_list_0>
 8004650:	2012      	movs	r0, #18
 8004652:	bd02      	pop	{r1, pc}

08004654 <??ll_intf_le_remove_device_rsolv_list_0>:
 8004654:	2100      	movs	r1, #0
 8004656:	9100      	str	r1, [sp, #0]
 8004658:	4601      	mov	r1, r0
 800465a:	2300      	movs	r3, #0
 800465c:	2001      	movs	r0, #1
 800465e:	e006      	b.n	800466e <?Subroutine0>

08004660 <ll_intf_le_clear_rsolv_list>:
 8004660:	b580      	push	{r7, lr}
 8004662:	2000      	movs	r0, #0
 8004664:	9000      	str	r0, [sp, #0]
 8004666:	2300      	movs	r3, #0
 8004668:	2200      	movs	r2, #0
 800466a:	2100      	movs	r1, #0
 800466c:	2002      	movs	r0, #2

0800466e <?Subroutine0>:
 800466e:	f00f fa04 	bl	8013a7a <prvcy_mngr_add_rmv_clr_fw_reslvng_list>
 8004672:	bd02      	pop	{r1, pc}

08004674 <ll_intf_le_read_rsolv_list_size>:
 8004674:	2800      	cmp	r0, #0
 8004676:	bf18      	it	ne
 8004678:	f00f bd8d 	bne.w	8014196 <prvcy_mngr_rslvng_list_size>
 800467c:	2012      	movs	r0, #18
 800467e:	4770      	bx	lr

08004680 <ll_intf_le_read_peer_rsolvabl_addr>:
 8004680:	460b      	mov	r3, r1
 8004682:	4611      	mov	r1, r2
 8004684:	2802      	cmp	r0, #2
 8004686:	bfb4      	ite	lt
 8004688:	2001      	movlt	r0, #1
 800468a:	2000      	movge	r0, #0
 800468c:	2b00      	cmp	r3, #0
 800468e:	bf18      	it	ne
 8004690:	2900      	cmpne	r1, #0
 8004692:	d000      	beq.n	8004696 <??ll_intf_le_read_peer_rsolvabl_addr_0>
 8004694:	b908      	cbnz	r0, 800469a <??ll_intf_le_read_peer_rsolvabl_addr_1>

08004696 <??ll_intf_le_read_peer_rsolvabl_addr_0>:
 8004696:	2012      	movs	r0, #18
 8004698:	4770      	bx	lr

0800469a <??ll_intf_le_read_peer_rsolvabl_addr_1>:
 800469a:	2200      	movs	r2, #0
 800469c:	e00d      	b.n	80046ba <?Subroutine3>

0800469e <ll_intf_le_read_lcl_rsolvabl_addr>:
 800469e:	460b      	mov	r3, r1
 80046a0:	4611      	mov	r1, r2
 80046a2:	2802      	cmp	r0, #2
 80046a4:	bfb4      	ite	lt
 80046a6:	2001      	movlt	r0, #1
 80046a8:	2000      	movge	r0, #0
 80046aa:	2b00      	cmp	r3, #0
 80046ac:	bf18      	it	ne
 80046ae:	2900      	cmpne	r1, #0
 80046b0:	d000      	beq.n	80046b4 <??ll_intf_le_read_lcl_rsolvabl_addr_0>
 80046b2:	b908      	cbnz	r0, 80046b8 <??ll_intf_le_read_lcl_rsolvabl_addr_1>

080046b4 <??ll_intf_le_read_lcl_rsolvabl_addr_0>:
 80046b4:	2012      	movs	r0, #18
 80046b6:	4770      	bx	lr

080046b8 <??ll_intf_le_read_lcl_rsolvabl_addr_1>:
 80046b8:	2201      	movs	r2, #1

080046ba <?Subroutine3>:
 80046ba:	4618      	mov	r0, r3
 80046bc:	f00f bd6f 	b.w	801419e <prvcy_mngr_read_loc_peer_rslvng_addr>

080046c0 <ll_intf_le_set_addr_rsln_enble>:
 80046c0:	2802      	cmp	r0, #2
 80046c2:	bfb8      	it	lt
 80046c4:	f00f bd9e 	blt.w	8014204 <prvcy_mngr_set_addr_rsln_enble>
 80046c8:	2012      	movs	r0, #18
 80046ca:	4770      	bx	lr

080046cc <ll_intf_le_set_privacy_mode>:
 80046cc:	b418      	push	{r3, r4}
 80046ce:	2802      	cmp	r0, #2
 80046d0:	bfb4      	ite	lt
 80046d2:	2301      	movlt	r3, #1
 80046d4:	2300      	movge	r3, #0
 80046d6:	2a02      	cmp	r2, #2
 80046d8:	bfb4      	ite	lt
 80046da:	2401      	movlt	r4, #1
 80046dc:	2400      	movge	r4, #0
 80046de:	2900      	cmp	r1, #0
 80046e0:	bf14      	ite	ne
 80046e2:	4223      	tstne	r3, r4
 80046e4:	2012      	moveq	r0, #18
 80046e6:	d002      	beq.n	80046ee <??ll_intf_le_set_privacy_mode_0>
 80046e8:	bc18      	pop	{r3, r4}
 80046ea:	f00f bddb 	b.w	80142a4 <prvcy_mngr_set_prvcy_mode>

080046ee <??ll_intf_le_set_privacy_mode_0>:
 80046ee:	bc12      	pop	{r1, r4}
 80046f0:	4770      	bx	lr

080046f2 <ll_intf_le_set_data_length>:
 80046f2:	b570      	push	{r4, r5, r6, lr}
 80046f4:	4604      	mov	r4, r0
 80046f6:	2012      	movs	r0, #18
 80046f8:	b084      	sub	sp, #16
 80046fa:	460e      	mov	r6, r1
 80046fc:	4615      	mov	r5, r2
 80046fe:	f5b4 6f70 	cmp.w	r4, #3840	; 0xf00
 8004702:	da19      	bge.n	8004738 <??ll_intf_le_set_data_length_0>
 8004704:	f1a6 011b 	sub.w	r1, r6, #27
 8004708:	29e1      	cmp	r1, #225	; 0xe1
 800470a:	bf3e      	ittt	cc
 800470c:	f5a5 71a4 	subcc.w	r1, r5, #328	; 0x148
 8004710:	f244 1249 	movwcc	r2, #16713	; 0x4149
 8004714:	4291      	cmpcc	r1, r2
 8004716:	d20f      	bcs.n	8004738 <??ll_intf_le_set_data_length_0>
 8004718:	462a      	mov	r2, r5
 800471a:	4631      	mov	r1, r6
 800471c:	4620      	mov	r0, r4
 800471e:	f002 fb79 	bl	8006e14 <llcp_data_length_update>
 8004722:	283a      	cmp	r0, #58	; 0x3a
 8004724:	d108      	bne.n	8004738 <??ll_intf_le_set_data_length_0>
 8004726:	f8ad 6000 	strh.w	r6, [sp]
 800472a:	f8ad 5002 	strh.w	r5, [sp, #2]
 800472e:	466a      	mov	r2, sp
 8004730:	4621      	mov	r1, r4
 8004732:	2003      	movs	r0, #3
 8004734:	f003 feac 	bl	8008490 <llcp_enqueue_host_control>

08004738 <??ll_intf_le_set_data_length_0>:
 8004738:	b004      	add	sp, #16
 800473a:	bd70      	pop	{r4, r5, r6, pc}

0800473c <ll_intf_le_remote_conn_parm_req_reply>:
 800473c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800473e:	b084      	sub	sp, #16
 8004740:	f5b0 6f70 	cmp.w	r0, #3840	; 0xf00
 8004744:	bfb4      	ite	lt
 8004746:	2401      	movlt	r4, #1
 8004748:	2400      	movge	r4, #0
 800474a:	880b      	ldrh	r3, [r1, #0]
 800474c:	f640 427b 	movw	r2, #3195	; 0xc7b
 8004750:	1f9d      	subs	r5, r3, #6
 8004752:	4295      	cmp	r5, r2
 8004754:	41ad      	sbcs	r5, r5
 8004756:	ea04 74d5 	and.w	r4, r4, r5, lsr #31
 800475a:	884d      	ldrh	r5, [r1, #2]
 800475c:	1fae      	subs	r6, r5, #6
 800475e:	4296      	cmp	r6, r2
 8004760:	888e      	ldrh	r6, [r1, #4]
 8004762:	4192      	sbcs	r2, r2
 8004764:	ea04 74d2 	and.w	r4, r4, r2, lsr #31
 8004768:	f5b6 7ffa 	cmp.w	r6, #500	; 0x1f4
 800476c:	bfb4      	ite	lt
 800476e:	2201      	movlt	r2, #1
 8004770:	2200      	movge	r2, #0
 8004772:	88cf      	ldrh	r7, [r1, #6]
 8004774:	4014      	ands	r4, r2
 8004776:	f640 4c77 	movw	ip, #3191	; 0xc77
 800477a:	f1a7 020a 	sub.w	r2, r7, #10
 800477e:	4562      	cmp	r2, ip
 8004780:	4192      	sbcs	r2, r2
 8004782:	1c76      	adds	r6, r6, #1
 8004784:	436e      	muls	r6, r5
 8004786:	eb07 0c87 	add.w	ip, r7, r7, lsl #2
 800478a:	ea04 74d2 	and.w	r4, r4, r2, lsr #31
 800478e:	0076      	lsls	r6, r6, #1
 8004790:	ebb6 0f4c 	cmp.w	r6, ip, lsl #1
 8004794:	bfb4      	ite	lt
 8004796:	2201      	movlt	r2, #1
 8004798:	2200      	movge	r2, #0
 800479a:	4014      	ands	r4, r2
 800479c:	894a      	ldrh	r2, [r1, #10]
 800479e:	890e      	ldrh	r6, [r1, #8]
 80047a0:	42b2      	cmp	r2, r6
 80047a2:	4192      	sbcs	r2, r2
 80047a4:	43d2      	mvns	r2, r2
 80047a6:	0fd2      	lsrs	r2, r2, #31
 80047a8:	4014      	ands	r4, r2
 80047aa:	429d      	cmp	r5, r3
 80047ac:	4192      	sbcs	r2, r2
 80047ae:	43d2      	mvns	r2, r2
 80047b0:	ea14 7fd2 	tst.w	r4, r2, lsr #31
 80047b4:	bf08      	it	eq
 80047b6:	2012      	moveq	r0, #18
 80047b8:	d013      	beq.n	80047e2 <??ll_intf_le_remote_conn_parm_req_reply_0>
 80047ba:	f8ad 3000 	strh.w	r3, [sp]
 80047be:	884a      	ldrh	r2, [r1, #2]
 80047c0:	f8ad 2002 	strh.w	r2, [sp, #2]
 80047c4:	888a      	ldrh	r2, [r1, #4]
 80047c6:	f8ad 2004 	strh.w	r2, [sp, #4]
 80047ca:	88ca      	ldrh	r2, [r1, #6]
 80047cc:	f8ad 2006 	strh.w	r2, [sp, #6]
 80047d0:	890a      	ldrh	r2, [r1, #8]
 80047d2:	f8ad 2008 	strh.w	r2, [sp, #8]
 80047d6:	894a      	ldrh	r2, [r1, #10]
 80047d8:	4669      	mov	r1, sp
 80047da:	f8ad 200a 	strh.w	r2, [sp, #10]
 80047de:	f003 fb61 	bl	8007ea4 <llcp_pram_pstv_rply>

080047e2 <??ll_intf_le_remote_conn_parm_req_reply_0>:
 80047e2:	b005      	add	sp, #20
 80047e4:	bdf0      	pop	{r4, r5, r6, r7, pc}

080047e6 <ll_intf_le_remote_conn_parm_req_neg_reply>:
 80047e6:	f5b0 6f70 	cmp.w	r0, #3840	; 0xf00
 80047ea:	bfb8      	it	lt
 80047ec:	f003 bbb0 	blt.w	8007f50 <llcp_pram_ngtv_rply>
 80047f0:	2012      	movs	r0, #18
 80047f2:	4770      	bx	lr

080047f4 <ll_intf_le_read_channel_map>:
 80047f4:	f5b0 6f70 	cmp.w	r0, #3840	; 0xf00
 80047f8:	da00      	bge.n	80047fc <??ll_intf_le_read_channel_map_0>
 80047fa:	b909      	cbnz	r1, 8004800 <??ll_intf_le_read_channel_map_1>

080047fc <??ll_intf_le_read_channel_map_0>:
 80047fc:	2012      	movs	r0, #18
 80047fe:	4770      	bx	lr

08004800 <??ll_intf_le_read_channel_map_1>:
 8004800:	f011 b9e0 	b.w	8015bc4 <conn_mngr_get_channel_map>

08004804 <ll_intf_le_read_adv_channel_tx_power>:
 8004804:	b538      	push	{r3, r4, r5, lr}
 8004806:	0004      	movs	r4, r0
 8004808:	bf08      	it	eq
 800480a:	2512      	moveq	r5, #18
 800480c:	d00d      	beq.n	800482a <??ll_intf_le_read_adv_channel_tx_power_0>
 800480e:	f011 fd02 	bl	8016216 <db_get_advertising_channel_tx_power>
 8004812:	4605      	mov	r5, r0
 8004814:	f994 0000 	ldrsb.w	r0, [r4]
 8004818:	4621      	mov	r1, r4
 800481a:	f011 fd92 	bl	8016342 <db_get_radiative_tx_pwr>
 800481e:	f994 0000 	ldrsb.w	r0, [r4]
 8004822:	2815      	cmp	r0, #21
 8004824:	bfa4      	itt	ge
 8004826:	2114      	movge	r1, #20
 8004828:	7021      	strbge	r1, [r4, #0]

0800482a <??ll_intf_le_read_adv_channel_tx_power_0>:
 800482a:	4628      	mov	r0, r5
 800482c:	bd32      	pop	{r1, r4, r5, pc}

0800482e <ll_intf_read_transmit_power_level>:
 800482e:	b538      	push	{r3, r4, r5, lr}
 8004830:	4614      	mov	r4, r2
 8004832:	f5b0 6f70 	cmp.w	r0, #3840	; 0xf00
 8004836:	bfb8      	it	lt
 8004838:	2902      	cmplt	r1, #2
 800483a:	da00      	bge.n	800483e <??ll_intf_read_transmit_power_level_0>
 800483c:	b90c      	cbnz	r4, 8004842 <??ll_intf_read_transmit_power_level_1>

0800483e <??ll_intf_read_transmit_power_level_0>:
 800483e:	2512      	movs	r5, #18
 8004840:	e013      	b.n	800486a <??ll_intf_read_transmit_power_level_2>

08004842 <??ll_intf_read_transmit_power_level_1>:
 8004842:	f011 fcff 	bl	8016244 <db_get_channel_tx_power>
 8004846:	4605      	mov	r5, r0
 8004848:	f994 0000 	ldrsb.w	r0, [r4]
 800484c:	4621      	mov	r1, r4
 800484e:	f011 fd78 	bl	8016342 <db_get_radiative_tx_pwr>
 8004852:	f994 0000 	ldrsb.w	r0, [r4]
 8004856:	f110 0f1e 	cmn.w	r0, #30
 800485a:	bfb8      	it	lt
 800485c:	f06f 001d 	mvnlt.w	r0, #29
 8004860:	db02      	blt.n	8004868 <??ll_intf_read_transmit_power_level_3>
 8004862:	2815      	cmp	r0, #21
 8004864:	bfa8      	it	ge
 8004866:	2014      	movge	r0, #20

08004868 <??ll_intf_read_transmit_power_level_3>:
 8004868:	7020      	strb	r0, [r4, #0]

0800486a <??ll_intf_read_transmit_power_level_2>:
 800486a:	4628      	mov	r0, r5
 800486c:	bd32      	pop	{r1, r4, r5, pc}

0800486e <ll_intf_le_read_sugg_default_data_length>:
 800486e:	2800      	cmp	r0, #0
 8004870:	bf1c      	itt	ne
 8004872:	2900      	cmpne	r1, #0
 8004874:	f011 be42 	bne.w	80164fc <db_get_suggested_data_length>
 8004878:	2012      	movs	r0, #18
 800487a:	4770      	bx	lr

0800487c <ll_intf_le_wrt_sugg_default_data_length>:
 800487c:	f1a0 021b 	sub.w	r2, r0, #27
 8004880:	2ae1      	cmp	r2, #225	; 0xe1
 8004882:	d207      	bcs.n	8004894 <??ll_intf_le_wrt_sugg_default_data_length_0>
 8004884:	f5a1 72a4 	sub.w	r2, r1, #328	; 0x148
 8004888:	f244 1349 	movw	r3, #16713	; 0x4149
 800488c:	429a      	cmp	r2, r3
 800488e:	bf38      	it	cc
 8004890:	f011 be3f 	bcc.w	8016512 <db_set_suggested_data_length>

08004894 <??ll_intf_le_wrt_sugg_default_data_length_0>:
 8004894:	2012      	movs	r0, #18
 8004896:	4770      	bx	lr

08004898 <ll_intf_le_create_conn>:
 8004898:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800489a:	b092      	sub	sp, #72	; 0x48
 800489c:	4604      	mov	r4, r0
 800489e:	8820      	ldrh	r0, [r4, #0]
 80048a0:	f643 73fd 	movw	r3, #16381	; 0x3ffd
 80048a4:	8862      	ldrh	r2, [r4, #2]
 80048a6:	1f01      	subs	r1, r0, #4
 80048a8:	4299      	cmp	r1, r3
 80048aa:	4189      	sbcs	r1, r1
 80048ac:	1f15      	subs	r5, r2, #4
 80048ae:	429d      	cmp	r5, r3
 80048b0:	419b      	sbcs	r3, r3
 80048b2:	0fdb      	lsrs	r3, r3, #31
 80048b4:	ea03 71d1 	and.w	r1, r3, r1, lsr #31
 80048b8:	7923      	ldrb	r3, [r4, #4]
 80048ba:	2b01      	cmp	r3, #1
 80048bc:	bfd4      	ite	le
 80048be:	2301      	movle	r3, #1
 80048c0:	2300      	movgt	r3, #0
 80048c2:	4019      	ands	r1, r3
 80048c4:	7963      	ldrb	r3, [r4, #5]
 80048c6:	2b04      	cmp	r3, #4
 80048c8:	bfb4      	ite	lt
 80048ca:	2301      	movlt	r3, #1
 80048cc:	2300      	movge	r3, #0
 80048ce:	4019      	ands	r1, r3
 80048d0:	7b23      	ldrb	r3, [r4, #12]
 80048d2:	2b04      	cmp	r3, #4
 80048d4:	bfb4      	ite	lt
 80048d6:	2301      	movlt	r3, #1
 80048d8:	2300      	movge	r3, #0
 80048da:	4019      	ands	r1, r3
 80048dc:	89e3      	ldrh	r3, [r4, #14]
 80048de:	f640 467b 	movw	r6, #3195	; 0xc7b
 80048e2:	1f9d      	subs	r5, r3, #6
 80048e4:	42b5      	cmp	r5, r6
 80048e6:	41ad      	sbcs	r5, r5
 80048e8:	ea01 71d5 	and.w	r1, r1, r5, lsr #31
 80048ec:	8a25      	ldrh	r5, [r4, #16]
 80048ee:	1faf      	subs	r7, r5, #6
 80048f0:	42b7      	cmp	r7, r6
 80048f2:	41b6      	sbcs	r6, r6
 80048f4:	ea01 71d6 	and.w	r1, r1, r6, lsr #31
 80048f8:	8a66      	ldrh	r6, [r4, #18]
 80048fa:	f5b6 7ffa 	cmp.w	r6, #500	; 0x1f4
 80048fe:	bfb4      	ite	lt
 8004900:	2701      	movlt	r7, #1
 8004902:	2700      	movge	r7, #0
 8004904:	4039      	ands	r1, r7
 8004906:	8aa7      	ldrh	r7, [r4, #20]
 8004908:	f640 4e77 	movw	lr, #3191	; 0xc77
 800490c:	f1a7 0c0a 	sub.w	ip, r7, #10
 8004910:	45f4      	cmp	ip, lr
 8004912:	eb6c 0c0c 	sbc.w	ip, ip, ip
 8004916:	ea01 71dc 	and.w	r1, r1, ip, lsr #31
 800491a:	4290      	cmp	r0, r2
 800491c:	4192      	sbcs	r2, r2
 800491e:	43d2      	mvns	r2, r2
 8004920:	ea01 71d2 	and.w	r1, r1, r2, lsr #31
 8004924:	8b22      	ldrh	r2, [r4, #24]
 8004926:	f8b4 c016 	ldrh.w	ip, [r4, #22]
 800492a:	4562      	cmp	r2, ip
 800492c:	4192      	sbcs	r2, r2
 800492e:	43d2      	mvns	r2, r2
 8004930:	0fd2      	lsrs	r2, r2, #31
 8004932:	4011      	ands	r1, r2
 8004934:	429d      	cmp	r5, r3
 8004936:	4192      	sbcs	r2, r2
 8004938:	1c76      	adds	r6, r6, #1
 800493a:	4375      	muls	r5, r6
 800493c:	43d2      	mvns	r2, r2
 800493e:	ea01 71d2 	and.w	r1, r1, r2, lsr #31
 8004942:	006d      	lsls	r5, r5, #1
 8004944:	eb07 0287 	add.w	r2, r7, r7, lsl #2
 8004948:	ebb5 0f42 	cmp.w	r5, r2, lsl #1
 800494c:	bfb4      	ite	lt
 800494e:	2201      	movlt	r2, #1
 8004950:	2200      	movge	r2, #0
 8004952:	4211      	tst	r1, r2
 8004954:	bf08      	it	eq
 8004956:	2012      	moveq	r0, #18
 8004958:	d032      	beq.n	80049c0 <??ll_intf_le_create_conn_0>
 800495a:	f8ad 0000 	strh.w	r0, [sp]
 800495e:	8860      	ldrh	r0, [r4, #2]
 8004960:	f8ad 0002 	strh.w	r0, [sp, #2]
 8004964:	7920      	ldrb	r0, [r4, #4]
 8004966:	b908      	cbnz	r0, 800496c <??ll_intf_le_create_conn_1>
 8004968:	2005      	movs	r0, #5
 800496a:	e001      	b.n	8004970 <??ll_intf_le_create_conn_2>

0800496c <??ll_intf_le_create_conn_1>:
 800496c:	2801      	cmp	r0, #1
 800496e:	d101      	bne.n	8004974 <??ll_intf_le_create_conn_3>

08004970 <??ll_intf_le_create_conn_2>:
 8004970:	f88d 000d 	strb.w	r0, [sp, #13]

08004974 <??ll_intf_le_create_conn_3>:
 8004974:	7960      	ldrb	r0, [r4, #5]
 8004976:	2206      	movs	r2, #6
 8004978:	1da1      	adds	r1, r4, #6
 800497a:	f88d 000f 	strb.w	r0, [sp, #15]
 800497e:	f10d 0005 	add.w	r0, sp, #5
 8004982:	f00a f8e1 	bl	800eb48 <ble_memcpy>
 8004986:	7b20      	ldrb	r0, [r4, #12]
 8004988:	2201      	movs	r2, #1
 800498a:	2300      	movs	r3, #0
 800498c:	f88d 000e 	strb.w	r0, [sp, #14]
 8004990:	89e0      	ldrh	r0, [r4, #14]
 8004992:	f8ad 0022 	strh.w	r0, [sp, #34]	; 0x22
 8004996:	8a20      	ldrh	r0, [r4, #16]
 8004998:	f8ad 0024 	strh.w	r0, [sp, #36]	; 0x24
 800499c:	8a60      	ldrh	r0, [r4, #18]
 800499e:	f8ad 0028 	strh.w	r0, [sp, #40]	; 0x28
 80049a2:	8aa0      	ldrh	r0, [r4, #20]
 80049a4:	f8ad 002a 	strh.w	r0, [sp, #42]	; 0x2a
 80049a8:	8ae0      	ldrh	r0, [r4, #22]
 80049aa:	f8ad 002c 	strh.w	r0, [sp, #44]	; 0x2c
 80049ae:	8b21      	ldrh	r1, [r4, #24]
 80049b0:	f88d 2032 	strb.w	r2, [sp, #50]	; 0x32
 80049b4:	2240      	movs	r2, #64	; 0x40
 80049b6:	f8ad 102e 	strh.w	r1, [sp, #46]	; 0x2e
 80049ba:	4668      	mov	r0, sp
 80049bc:	f00d fc8e 	bl	80122dc <non_conn_mngr_conn_create>

080049c0 <??ll_intf_le_create_conn_0>:
 80049c0:	b013      	add	sp, #76	; 0x4c
 80049c2:	bdf0      	pop	{r4, r5, r6, r7, pc}

080049c4 <ll_intf_le_set_scan_params>:
 80049c4:	b57c      	push	{r2, r3, r4, r5, r6, lr}
 80049c6:	7802      	ldrb	r2, [r0, #0]
 80049c8:	2a02      	cmp	r2, #2
 80049ca:	bfb4      	ite	lt
 80049cc:	2101      	movlt	r1, #1
 80049ce:	2100      	movge	r1, #0
 80049d0:	8843      	ldrh	r3, [r0, #2]
 80049d2:	f643 75fd 	movw	r5, #16381	; 0x3ffd
 80049d6:	1f1c      	subs	r4, r3, #4
 80049d8:	42ac      	cmp	r4, r5
 80049da:	41a4      	sbcs	r4, r4
 80049dc:	ea01 71d4 	and.w	r1, r1, r4, lsr #31
 80049e0:	8884      	ldrh	r4, [r0, #4]
 80049e2:	1f26      	subs	r6, r4, #4
 80049e4:	42ae      	cmp	r6, r5
 80049e6:	41ad      	sbcs	r5, r5
 80049e8:	ea01 71d5 	and.w	r1, r1, r5, lsr #31
 80049ec:	7985      	ldrb	r5, [r0, #6]
 80049ee:	2d04      	cmp	r5, #4
 80049f0:	bfb4      	ite	lt
 80049f2:	2501      	movlt	r5, #1
 80049f4:	2500      	movge	r5, #0
 80049f6:	4029      	ands	r1, r5
 80049f8:	79c5      	ldrb	r5, [r0, #7]
 80049fa:	2d04      	cmp	r5, #4
 80049fc:	bfd4      	ite	le
 80049fe:	2501      	movle	r5, #1
 8004a00:	2500      	movgt	r5, #0
 8004a02:	4029      	ands	r1, r5
 8004a04:	42a3      	cmp	r3, r4
 8004a06:	41a4      	sbcs	r4, r4
 8004a08:	43e4      	mvns	r4, r4
 8004a0a:	ea11 7fd4 	tst.w	r1, r4, lsr #31
 8004a0e:	d101      	bne.n	8004a14 <??ll_intf_le_set_scan_params_0>
 8004a10:	2012      	movs	r0, #18
 8004a12:	bd76      	pop	{r1, r2, r4, r5, r6, pc}

08004a14 <??ll_intf_le_set_scan_params_0>:
 8004a14:	f88d 2004 	strb.w	r2, [sp, #4]
 8004a18:	f8ad 3000 	strh.w	r3, [sp]
 8004a1c:	8882      	ldrh	r2, [r0, #4]
 8004a1e:	f8ad 2002 	strh.w	r2, [sp, #2]
 8004a22:	7981      	ldrb	r1, [r0, #6]
 8004a24:	f88d 1006 	strb.w	r1, [sp, #6]
 8004a28:	79c1      	ldrb	r1, [r0, #7]
 8004a2a:	f88d 1005 	strb.w	r1, [sp, #5]
 8004a2e:	79c0      	ldrb	r0, [r0, #7]
 8004a30:	2800      	cmp	r0, #0
 8004a32:	bf18      	it	ne
 8004a34:	2801      	cmpne	r0, #1
 8004a36:	d006      	beq.n	8004a46 <??ll_intf_le_set_scan_params_1>
 8004a38:	2802      	cmp	r0, #2
 8004a3a:	bf08      	it	eq
 8004a3c:	2006      	moveq	r0, #6
 8004a3e:	d002      	beq.n	8004a46 <??ll_intf_le_set_scan_params_1>
 8004a40:	2803      	cmp	r0, #3
 8004a42:	d102      	bne.n	8004a4a <??ll_intf_le_set_scan_params_2>
 8004a44:	2004      	movs	r0, #4

08004a46 <??ll_intf_le_set_scan_params_1>:
 8004a46:	f88d 0007 	strb.w	r0, [sp, #7]

08004a4a <??ll_intf_le_set_scan_params_2>:
 8004a4a:	4668      	mov	r0, sp
 8004a4c:	f00c fead 	bl	80117aa <non_conn_mngr_set_scan_params>
 8004a50:	bd76      	pop	{r1, r2, r4, r5, r6, pc}

08004a52 <ll_intf_le_set_scan_enable>:
 8004a52:	2802      	cmp	r0, #2
 8004a54:	da06      	bge.n	8004a64 <??ll_intf_le_set_scan_enable_0>
 8004a56:	b910      	cbnz	r0, 8004a5e <??ll_intf_le_set_scan_enable_1>
 8004a58:	2001      	movs	r0, #1

08004a5a <??ll_intf_le_set_scan_enable_2>:
 8004a5a:	f00c bec7 	b.w	80117ec <non_conn_mngr_scan_enable>

08004a5e <??ll_intf_le_set_scan_enable_1>:
 8004a5e:	2000      	movs	r0, #0
 8004a60:	2902      	cmp	r1, #2
 8004a62:	dbfa      	blt.n	8004a5a <??ll_intf_le_set_scan_enable_2>

08004a64 <??ll_intf_le_set_scan_enable_0>:
 8004a64:	2012      	movs	r0, #18
 8004a66:	4770      	bx	lr

08004a68 <ll_intf_le_set_scan_rsp_data>:
 8004a68:	460a      	mov	r2, r1
 8004a6a:	4601      	mov	r1, r0
 8004a6c:	2920      	cmp	r1, #32
 8004a6e:	da00      	bge.n	8004a72 <??ll_intf_le_set_scan_rsp_data_0>
 8004a70:	b90a      	cbnz	r2, 8004a76 <??ll_intf_le_set_scan_rsp_data_1>

08004a72 <??ll_intf_le_set_scan_rsp_data_0>:
 8004a72:	2012      	movs	r0, #18
 8004a74:	4770      	bx	lr

08004a76 <??ll_intf_le_set_scan_rsp_data_1>:
 8004a76:	4610      	mov	r0, r2
 8004a78:	f00d b993 	b.w	8011da2 <non_conn_mngr_set_scan_rsp_data>

08004a7c <ll_intf_le_add_device_white_list>:
 8004a7c:	460b      	mov	r3, r1
 8004a7e:	4601      	mov	r1, r0
 8004a80:	29ff      	cmp	r1, #255	; 0xff
 8004a82:	d004      	beq.n	8004a8e <??ll_intf_le_add_device_white_list_0>
 8004a84:	2902      	cmp	r1, #2
 8004a86:	da00      	bge.n	8004a8a <??ll_intf_le_add_device_white_list_1>
 8004a88:	b90b      	cbnz	r3, 8004a8e <??ll_intf_le_add_device_white_list_0>

08004a8a <??ll_intf_le_add_device_white_list_1>:
 8004a8a:	2012      	movs	r0, #18
 8004a8c:	4770      	bx	lr

08004a8e <??ll_intf_le_add_device_white_list_0>:
 8004a8e:	2200      	movs	r2, #0
 8004a90:	e009      	b.n	8004aa6 <?Subroutine4>

08004a92 <ll_intf_le_remove_device_white_list>:
 8004a92:	460b      	mov	r3, r1
 8004a94:	4601      	mov	r1, r0
 8004a96:	29ff      	cmp	r1, #255	; 0xff
 8004a98:	d004      	beq.n	8004aa4 <??ll_intf_le_remove_device_white_list_0>
 8004a9a:	2902      	cmp	r1, #2
 8004a9c:	da00      	bge.n	8004aa0 <??ll_intf_le_remove_device_white_list_1>
 8004a9e:	b90b      	cbnz	r3, 8004aa4 <??ll_intf_le_remove_device_white_list_0>

08004aa0 <??ll_intf_le_remove_device_white_list_1>:
 8004aa0:	2012      	movs	r0, #18
 8004aa2:	4770      	bx	lr

08004aa4 <??ll_intf_le_remove_device_white_list_0>:
 8004aa4:	2201      	movs	r2, #1

08004aa6 <?Subroutine4>:
 8004aa6:	4618      	mov	r0, r3
 8004aa8:	f00c bd6b 	b.w	8011582 <non_conn_mngr_add_rmv_clr_device_white_list>

08004aac <ll_intf_le_clear_white_list>:
 8004aac:	b5e0      	push	{r5, r6, r7, lr}
 8004aae:	2202      	movs	r2, #2
 8004ab0:	2100      	movs	r1, #0
 8004ab2:	4668      	mov	r0, sp
 8004ab4:	f00c fd65 	bl	8011582 <non_conn_mngr_add_rmv_clr_device_white_list>
 8004ab8:	b003      	add	sp, #12
 8004aba:	bd00      	pop	{pc}

08004abc <ll_intf_le_read_white_list_size>:
 8004abc:	b510      	push	{r4, lr}
 8004abe:	2400      	movs	r4, #0
 8004ac0:	2800      	cmp	r0, #0
 8004ac2:	bf0c      	ite	eq
 8004ac4:	2412      	moveq	r4, #18
 8004ac6:	f007 f842 	blne	800bb4e <llhwc_get_white_list_size>
 8004aca:	4620      	mov	r0, r4
 8004acc:	bd10      	pop	{r4, pc}

08004ace <ll_intf_le_set_random_addr>:
 8004ace:	2800      	cmp	r0, #0
 8004ad0:	bf18      	it	ne
 8004ad2:	f00d be7c 	bne.w	80127ce <non_conn_mngr_set_random_address>
 8004ad6:	2012      	movs	r0, #18
 8004ad8:	4770      	bx	lr

08004ada <ll_intf_read_remote_version_info>:
 8004ada:	b510      	push	{r4, lr}
 8004adc:	4604      	mov	r4, r0
 8004ade:	f5b0 6f70 	cmp.w	r0, #3840	; 0xf00
 8004ae2:	da0b      	bge.n	8004afc <??ll_intf_read_remote_version_info_0>
 8004ae4:	f002 fcdb 	bl	800749e <llcp_read_remote_version>
 8004ae8:	b2c1      	uxtb	r1, r0
 8004aea:	293a      	cmp	r1, #58	; 0x3a
 8004aec:	d104      	bne.n	8004af8 <??ll_intf_read_remote_version_info_1>
 8004aee:	2200      	movs	r2, #0
 8004af0:	4621      	mov	r1, r4
 8004af2:	2000      	movs	r0, #0
 8004af4:	f003 fccc 	bl	8008490 <llcp_enqueue_host_control>

08004af8 <??ll_intf_read_remote_version_info_1>:
 8004af8:	b2c0      	uxtb	r0, r0
 8004afa:	bd10      	pop	{r4, pc}

08004afc <??ll_intf_read_remote_version_info_0>:
 8004afc:	2012      	movs	r0, #18
 8004afe:	e7fb      	b.n	8004af8 <??ll_intf_read_remote_version_info_1>

08004b00 <ll_intf_le_read_remote_used_features>:
 8004b00:	b510      	push	{r4, lr}
 8004b02:	4604      	mov	r4, r0
 8004b04:	f5b0 6f70 	cmp.w	r0, #3840	; 0xf00
 8004b08:	da0c      	bge.n	8004b24 <??ll_intf_le_read_remote_used_features_0>
 8004b0a:	2100      	movs	r1, #0
 8004b0c:	f002 fd33 	bl	8007576 <llcp_read_remote_features>
 8004b10:	b2c1      	uxtb	r1, r0
 8004b12:	293a      	cmp	r1, #58	; 0x3a
 8004b14:	d104      	bne.n	8004b20 <??ll_intf_le_read_remote_used_features_1>
 8004b16:	2200      	movs	r2, #0
 8004b18:	4621      	mov	r1, r4
 8004b1a:	2001      	movs	r0, #1
 8004b1c:	f003 fcb8 	bl	8008490 <llcp_enqueue_host_control>

08004b20 <??ll_intf_le_read_remote_used_features_1>:
 8004b20:	b2c0      	uxtb	r0, r0
 8004b22:	bd10      	pop	{r4, pc}

08004b24 <??ll_intf_le_read_remote_used_features_0>:
 8004b24:	2012      	movs	r0, #18
 8004b26:	e7fb      	b.n	8004b20 <??ll_intf_le_read_remote_used_features_1>

08004b28 <ll_intf_read_rssi>:
 8004b28:	b510      	push	{r4, lr}
 8004b2a:	460c      	mov	r4, r1
 8004b2c:	f5b0 6f70 	cmp.w	r0, #3840	; 0xf00
 8004b30:	da00      	bge.n	8004b34 <??ll_intf_read_rssi_0>
 8004b32:	b90c      	cbnz	r4, 8004b38 <??ll_intf_read_rssi_1>

08004b34 <??ll_intf_read_rssi_0>:
 8004b34:	2012      	movs	r0, #18
 8004b36:	e00b      	b.n	8004b50 <??ll_intf_read_rssi_2>

08004b38 <??ll_intf_read_rssi_1>:
 8004b38:	f011 f88f 	bl	8015c5a <conn_mngr_get_rssi>
 8004b3c:	f994 1000 	ldrsb.w	r1, [r4]
 8004b40:	f111 0f80 	cmn.w	r1, #128	; 0x80
 8004b44:	d001      	beq.n	8004b4a <??ll_intf_read_rssi_3>
 8004b46:	2915      	cmp	r1, #21
 8004b48:	db02      	blt.n	8004b50 <??ll_intf_read_rssi_2>

08004b4a <??ll_intf_read_rssi_3>:
 8004b4a:	f06f 017e 	mvn.w	r1, #126	; 0x7e
 8004b4e:	7021      	strb	r1, [r4, #0]

08004b50 <??ll_intf_read_rssi_2>:
 8004b50:	b2c0      	uxtb	r0, r0
 8004b52:	bd10      	pop	{r4, pc}

08004b54 <ll_intf_le_conn_update>:
 8004b54:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8004b56:	b088      	sub	sp, #32
 8004b58:	4606      	mov	r6, r0
 8004b5a:	f5b0 6f70 	cmp.w	r0, #3840	; 0xf00
 8004b5e:	da32      	bge.n	8004bc6 <??ll_intf_le_conn_update_0>
 8004b60:	f640 407b 	movw	r0, #3195	; 0xc7b
 8004b64:	1f8c      	subs	r4, r1, #6
 8004b66:	4284      	cmp	r4, r0
 8004b68:	bf3c      	itt	cc
 8004b6a:	1f94      	subcc	r4, r2, #6
 8004b6c:	4284      	cmpcc	r4, r0
 8004b6e:	d22a      	bcs.n	8004bc6 <??ll_intf_le_conn_update_0>
 8004b70:	f5b3 7ffa 	cmp.w	r3, #500	; 0x1f4
 8004b74:	da27      	bge.n	8004bc6 <??ll_intf_le_conn_update_0>
 8004b76:	980e      	ldr	r0, [sp, #56]	; 0x38
 8004b78:	f640 4577 	movw	r5, #3191	; 0xc77
 8004b7c:	f1a0 040a 	sub.w	r4, r0, #10
 8004b80:	42ac      	cmp	r4, r5
 8004b82:	d220      	bcs.n	8004bc6 <??ll_intf_le_conn_update_0>
 8004b84:	428a      	cmp	r2, r1
 8004b86:	bf22      	ittt	cs
 8004b88:	9c10      	ldrcs	r4, [sp, #64]	; 0x40
 8004b8a:	9d0f      	ldrcs	r5, [sp, #60]	; 0x3c
 8004b8c:	42ac      	cmpcs	r4, r5
 8004b8e:	d31a      	bcc.n	8004bc6 <??ll_intf_le_conn_update_0>
 8004b90:	f8ad 2002 	strh.w	r2, [sp, #2]
 8004b94:	1c5f      	adds	r7, r3, #1
 8004b96:	f8ad 1000 	strh.w	r1, [sp]
 8004b9a:	437a      	muls	r2, r7
 8004b9c:	f64f 71ff 	movw	r1, #65535	; 0xffff
 8004ba0:	f8ad 400a 	strh.w	r4, [sp, #10]
 8004ba4:	f8ad 100c 	strh.w	r1, [sp, #12]
 8004ba8:	240b      	movs	r4, #11
 8004baa:	0052      	lsls	r2, r2, #1
 8004bac:	eb00 0180 	add.w	r1, r0, r0, lsl #2
 8004bb0:	f8ad 3004 	strh.w	r3, [sp, #4]
 8004bb4:	f8ad 0006 	strh.w	r0, [sp, #6]
 8004bb8:	f8ad 5008 	strh.w	r5, [sp, #8]
 8004bbc:	f88d 400e 	strb.w	r4, [sp, #14]
 8004bc0:	ebb2 0f41 	cmp.w	r2, r1, lsl #1
 8004bc4:	db01      	blt.n	8004bca <??ll_intf_le_conn_update_1>

08004bc6 <??ll_intf_le_conn_update_0>:
 8004bc6:	2012      	movs	r0, #18
 8004bc8:	e010      	b.n	8004bec <??ll_intf_le_conn_update_2>

08004bca <??ll_intf_le_conn_update_1>:
 8004bca:	4669      	mov	r1, sp
 8004bcc:	4630      	mov	r0, r6
 8004bce:	f003 f843 	bl	8007c58 <llcp_update_param_req>
 8004bd2:	b2c1      	uxtb	r1, r0
 8004bd4:	293a      	cmp	r1, #58	; 0x3a
 8004bd6:	d109      	bne.n	8004bec <??ll_intf_le_conn_update_2>
 8004bd8:	2210      	movs	r2, #16
 8004bda:	4669      	mov	r1, sp
 8004bdc:	a804      	add	r0, sp, #16
 8004bde:	f009 ffb3 	bl	800eb48 <ble_memcpy>
 8004be2:	aa04      	add	r2, sp, #16
 8004be4:	4631      	mov	r1, r6
 8004be6:	2006      	movs	r0, #6
 8004be8:	f003 fc52 	bl	8008490 <llcp_enqueue_host_control>

08004bec <??ll_intf_le_conn_update_2>:
 8004bec:	b2c0      	uxtb	r0, r0
 8004bee:	b009      	add	sp, #36	; 0x24
 8004bf0:	bdf0      	pop	{r4, r5, r6, r7, pc}

08004bf2 <ll_intf_le_create_conn_cancel>:
 8004bf2:	b510      	push	{r4, lr}
 8004bf4:	2004      	movs	r0, #4
 8004bf6:	f00f fcf7 	bl	80145e8 <state_mngr_check_state>
 8004bfa:	b920      	cbnz	r0, 8004c06 <??ll_intf_le_create_conn_cancel_0>
 8004bfc:	2040      	movs	r0, #64	; 0x40
 8004bfe:	240c      	movs	r4, #12
 8004c00:	f7fb fb16 	bl	8000230 <bsp_debug_gpio_toggle>
 8004c04:	e002      	b.n	8004c0c <??ll_intf_le_create_conn_cancel_1>

08004c06 <??ll_intf_le_create_conn_cancel_0>:
 8004c06:	f00d fc47 	bl	8012498 <non_conn_mngr_conn_create_cancel>
 8004c0a:	4604      	mov	r4, r0

08004c0c <??ll_intf_le_create_conn_cancel_1>:
 8004c0c:	b2e0      	uxtb	r0, r4
 8004c0e:	bd10      	pop	{r4, pc}

08004c10 <ll_intf_le_set_default_phy_cmd>:
 8004c10:	b538      	push	{r3, r4, r5, lr}
 8004c12:	2804      	cmp	r0, #4
 8004c14:	bfb4      	ite	lt
 8004c16:	2501      	movlt	r5, #1
 8004c18:	2500      	movge	r5, #0
 8004c1a:	2908      	cmp	r1, #8
 8004c1c:	bfb8      	it	lt
 8004c1e:	2a08      	cmplt	r2, #8
 8004c20:	da0c      	bge.n	8004c3c <??ll_intf_le_set_default_phy_cmd_0>
 8004c22:	08cc      	lsrs	r4, r1, #3
 8004c24:	d10a      	bne.n	8004c3c <??ll_intf_le_set_default_phy_cmd_0>
 8004c26:	08d3      	lsrs	r3, r2, #3
 8004c28:	d108      	bne.n	8004c3c <??ll_intf_le_set_default_phy_cmd_0>
 8004c2a:	b90d      	cbnz	r5, 8004c30 <??ll_intf_le_set_default_phy_cmd_1>
 8004c2c:	2012      	movs	r0, #18
 8004c2e:	e009      	b.n	8004c44 <??ll_intf_le_set_default_phy_cmd_2>

08004c30 <??ll_intf_le_set_default_phy_cmd_1>:
 8004c30:	0003      	movs	r3, r0
 8004c32:	d105      	bne.n	8004c40 <??ll_intf_le_set_default_phy_cmd_3>
 8004c34:	000b      	movs	r3, r1
 8004c36:	d001      	beq.n	8004c3c <??ll_intf_le_set_default_phy_cmd_0>
 8004c38:	0013      	movs	r3, r2
 8004c3a:	d101      	bne.n	8004c40 <??ll_intf_le_set_default_phy_cmd_3>

08004c3c <??ll_intf_le_set_default_phy_cmd_0>:
 8004c3c:	2011      	movs	r0, #17
 8004c3e:	e001      	b.n	8004c44 <??ll_intf_le_set_default_phy_cmd_2>

08004c40 <??ll_intf_le_set_default_phy_cmd_3>:
 8004c40:	f011 fc8b 	bl	801655a <db_le_set_default_phy_cmd>

08004c44 <??ll_intf_le_set_default_phy_cmd_2>:
 8004c44:	b2c0      	uxtb	r0, r0
 8004c46:	bd32      	pop	{r1, r4, r5, pc}

08004c48 <ll_intf_le_read_phy_cmd>:
 8004c48:	b580      	push	{r7, lr}
 8004c4a:	f5b0 6f70 	cmp.w	r0, #3840	; 0xf00
 8004c4e:	da03      	bge.n	8004c58 <??ll_intf_le_read_phy_cmd_0>
 8004c50:	2900      	cmp	r1, #0
 8004c52:	bf18      	it	ne
 8004c54:	2a00      	cmpne	r2, #0
 8004c56:	d101      	bne.n	8004c5c <??ll_intf_le_read_phy_cmd_1>

08004c58 <??ll_intf_le_read_phy_cmd_0>:
 8004c58:	2012      	movs	r0, #18
 8004c5a:	e001      	b.n	8004c60 <??ll_intf_le_read_phy_cmd_2>

08004c5c <??ll_intf_le_read_phy_cmd_1>:
 8004c5c:	f001 fed9 	bl	8006a12 <llcp_le_read_phy_cmd>

08004c60 <??ll_intf_le_read_phy_cmd_2>:
 8004c60:	b2c0      	uxtb	r0, r0
 8004c62:	bd02      	pop	{r1, pc}

08004c64 <ll_intf_le_set_phy_cmd>:
 8004c64:	e92d 41f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, lr}
 8004c68:	b085      	sub	sp, #20
 8004c6a:	4605      	mov	r5, r0
 8004c6c:	4688      	mov	r8, r1
 8004c6e:	4617      	mov	r7, r2
 8004c70:	461e      	mov	r6, r3
 8004c72:	f5b0 6f70 	cmp.w	r0, #3840	; 0xf00
 8004c76:	bfb4      	ite	lt
 8004c78:	2001      	movlt	r0, #1
 8004c7a:	2000      	movge	r0, #0
 8004c7c:	2903      	cmp	r1, #3
 8004c7e:	bfd4      	ite	le
 8004c80:	2101      	movle	r1, #1
 8004c82:	2100      	movgt	r1, #0
 8004c84:	2a08      	cmp	r2, #8
 8004c86:	bfb4      	ite	lt
 8004c88:	2201      	movlt	r2, #1
 8004c8a:	2200      	movge	r2, #0
 8004c8c:	2b08      	cmp	r3, #8
 8004c8e:	bfb4      	ite	lt
 8004c90:	2301      	movlt	r3, #1
 8004c92:	2300      	movge	r3, #0
 8004c94:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 8004c96:	2c02      	cmp	r4, #2
 8004c98:	bfd4      	ite	le
 8004c9a:	f04f 0c01 	movle.w	ip, #1
 8004c9e:	f04f 0c00 	movgt.w	ip, #0
 8004ca2:	4008      	ands	r0, r1
 8004ca4:	ea10 0f0c 	tst.w	r0, ip
 8004ca8:	bf08      	it	eq
 8004caa:	2012      	moveq	r0, #18
 8004cac:	d01f      	beq.n	8004cee <??ll_intf_le_set_phy_cmd_0>
 8004cae:	421a      	tst	r2, r3
 8004cb0:	d003      	beq.n	8004cba <??ll_intf_le_set_phy_cmd_1>
 8004cb2:	08f9      	lsrs	r1, r7, #3
 8004cb4:	d101      	bne.n	8004cba <??ll_intf_le_set_phy_cmd_1>
 8004cb6:	08f0      	lsrs	r0, r6, #3
 8004cb8:	d001      	beq.n	8004cbe <??ll_intf_le_set_phy_cmd_2>

08004cba <??ll_intf_le_set_phy_cmd_1>:
 8004cba:	2011      	movs	r0, #17
 8004cbc:	e017      	b.n	8004cee <??ll_intf_le_set_phy_cmd_0>

08004cbe <??ll_intf_le_set_phy_cmd_2>:
 8004cbe:	b2e0      	uxtb	r0, r4
 8004cc0:	9000      	str	r0, [sp, #0]
 8004cc2:	4633      	mov	r3, r6
 8004cc4:	463a      	mov	r2, r7
 8004cc6:	4641      	mov	r1, r8
 8004cc8:	4628      	mov	r0, r5
 8004cca:	f001 fec3 	bl	8006a54 <llcp_le_set_phy_cmd>
 8004cce:	b2c1      	uxtb	r1, r0
 8004cd0:	293a      	cmp	r1, #58	; 0x3a
 8004cd2:	d10c      	bne.n	8004cee <??ll_intf_le_set_phy_cmd_0>
 8004cd4:	f88d 8004 	strb.w	r8, [sp, #4]
 8004cd8:	f88d 7005 	strb.w	r7, [sp, #5]
 8004cdc:	f88d 6006 	strb.w	r6, [sp, #6]
 8004ce0:	f88d 4007 	strb.w	r4, [sp, #7]
 8004ce4:	aa01      	add	r2, sp, #4
 8004ce6:	4629      	mov	r1, r5
 8004ce8:	2004      	movs	r0, #4
 8004cea:	f003 fbd1 	bl	8008490 <llcp_enqueue_host_control>

08004cee <??ll_intf_le_set_phy_cmd_0>:
 8004cee:	b2c0      	uxtb	r0, r0

08004cf0 <?Subroutine2>:
 8004cf0:	b006      	add	sp, #24
 8004cf2:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

08004cf6 <ll_intf_acl_data_from_host_to_cntrlr>:
 8004cf6:	b538      	push	{r3, r4, r5, lr}
 8004cf8:	4605      	mov	r5, r0
 8004cfa:	460c      	mov	r4, r1
 8004cfc:	202a      	movs	r0, #42	; 0x2a
 8004cfe:	f7fb fa93 	bl	8000228 <bsp_debug_gpio_set>
 8004d02:	b15c      	cbz	r4, 8004d1c <??ll_intf_acl_data_from_host_to_cntrlr_0>
 8004d04:	4628      	mov	r0, r5
 8004d06:	f5b0 6f70 	cmp.w	r0, #3840	; 0xf00
 8004d0a:	da09      	bge.n	8004d20 <??ll_intf_acl_data_from_host_to_cntrlr_1>
 8004d0c:	4621      	mov	r1, r4
 8004d0e:	f010 fdf3 	bl	80158f8 <conn_mngr_send_pkt>
 8004d12:	4605      	mov	r5, r0
 8004d14:	202a      	movs	r0, #42	; 0x2a
 8004d16:	f7fb fa89 	bl	800022c <bsp_debug_gpio_clear>
 8004d1a:	e005      	b.n	8004d28 <??ll_intf_acl_data_from_host_to_cntrlr_2>

08004d1c <??ll_intf_acl_data_from_host_to_cntrlr_0>:
 8004d1c:	2512      	movs	r5, #18
 8004d1e:	e003      	b.n	8004d28 <??ll_intf_acl_data_from_host_to_cntrlr_2>

08004d20 <??ll_intf_acl_data_from_host_to_cntrlr_1>:
 8004d20:	4620      	mov	r0, r4
 8004d22:	2512      	movs	r5, #18
 8004d24:	f000 f96b 	bl	8004ffe <ll_intf_free_ll_pkt_hndlr>

08004d28 <??ll_intf_acl_data_from_host_to_cntrlr_2>:
 8004d28:	b2e8      	uxtb	r0, r5
 8004d2a:	bd32      	pop	{r1, r4, r5, pc}

08004d2c <ll_intf_le_read_tx_pwr>:
 8004d2c:	b570      	push	{r4, r5, r6, lr}
 8004d2e:	0005      	movs	r5, r0
 8004d30:	460c      	mov	r4, r1
 8004d32:	bf14      	ite	ne
 8004d34:	2c00      	cmpne	r4, #0
 8004d36:	2612      	moveq	r6, #18
 8004d38:	d018      	beq.n	8004d6c <??ll_intf_le_read_tx_pwr_0>
 8004d3a:	f011 faa0 	bl	801627e <db_get_min_max_supprtd_tx_power_values>
 8004d3e:	4606      	mov	r6, r0
 8004d40:	f995 0000 	ldrsb.w	r0, [r5]
 8004d44:	4629      	mov	r1, r5
 8004d46:	f011 fafc 	bl	8016342 <db_get_radiative_tx_pwr>
 8004d4a:	f994 0000 	ldrsb.w	r0, [r4]
 8004d4e:	4621      	mov	r1, r4
 8004d50:	f011 faf7 	bl	8016342 <db_get_radiative_tx_pwr>
 8004d54:	f995 0000 	ldrsb.w	r0, [r5]
 8004d58:	2815      	cmp	r0, #21
 8004d5a:	bfa4      	itt	ge
 8004d5c:	2114      	movge	r1, #20
 8004d5e:	7029      	strbge	r1, [r5, #0]
 8004d60:	f994 0000 	ldrsb.w	r0, [r4]
 8004d64:	2815      	cmp	r0, #21
 8004d66:	bfa4      	itt	ge
 8004d68:	2114      	movge	r1, #20
 8004d6a:	7021      	strbge	r1, [r4, #0]

08004d6c <??ll_intf_le_read_tx_pwr_0>:
 8004d6c:	4630      	mov	r0, r6
 8004d6e:	bd70      	pop	{r4, r5, r6, pc}

08004d70 <ll_intf_le_read_rf_path_compensation>:
 8004d70:	2800      	cmp	r0, #0
 8004d72:	bf1c      	itt	ne
 8004d74:	2900      	cmpne	r1, #0
 8004d76:	f011 babf 	bne.w	80162f8 <db_get_rf_path_compensation_value>
 8004d7a:	2012      	movs	r0, #18
 8004d7c:	4770      	bx	lr

08004d7e <ll_intf_le_write_rf_path_compensation>:
 8004d7e:	b51c      	push	{r2, r3, r4, lr}
 8004d80:	f246 6467 	movw	r4, #26215	; 0x6667
 8004d84:	4344      	muls	r4, r0
 8004d86:	2300      	movs	r3, #0
 8004d88:	f88d 3000 	strb.w	r3, [sp]
 8004d8c:	14a2      	asrs	r2, r4, #18
 8004d8e:	eb02 72d2 	add.w	r2, r2, r2, lsr #31
 8004d92:	f240 1301 	movw	r3, #257	; 0x101
 8004d96:	b212      	sxth	r2, r2
 8004d98:	3280      	adds	r2, #128	; 0x80
 8004d9a:	429a      	cmp	r2, r3
 8004d9c:	d209      	bcs.n	8004db2 <??ll_intf_le_write_rf_path_compensation_0>
 8004d9e:	f246 6467 	movw	r4, #26215	; 0x6667
 8004da2:	434c      	muls	r4, r1
 8004da4:	14a2      	asrs	r2, r4, #18
 8004da6:	eb02 72d2 	add.w	r2, r2, r2, lsr #31
 8004daa:	b212      	sxth	r2, r2
 8004dac:	3280      	adds	r2, #128	; 0x80
 8004dae:	429a      	cmp	r2, r3
 8004db0:	d301      	bcc.n	8004db6 <??ll_intf_le_write_rf_path_compensation_1>

08004db2 <??ll_intf_le_write_rf_path_compensation_0>:
 8004db2:	2012      	movs	r0, #18
 8004db4:	bd16      	pop	{r1, r2, r4, pc}

08004db6 <??ll_intf_le_write_rf_path_compensation_1>:
 8004db6:	466a      	mov	r2, sp
 8004db8:	f011 fa87 	bl	80162ca <db_set_rf_path_compensation_value>
 8004dbc:	bd16      	pop	{r1, r2, r4, pc}

08004dbe <ll_intf_set_conn_tx_power_level>:
 8004dbe:	b538      	push	{r3, r4, r5, lr}
 8004dc0:	4604      	mov	r4, r0
 8004dc2:	8820      	ldrh	r0, [r4, #0]
 8004dc4:	460d      	mov	r5, r1
 8004dc6:	f5b0 6f70 	cmp.w	r0, #3840	; 0xf00
 8004dca:	bfa8      	it	ge
 8004dcc:	2430      	movge	r4, #48	; 0x30
 8004dce:	da11      	bge.n	8004df4 <??ll_intf_set_conn_tx_power_level_0>
 8004dd0:	2808      	cmp	r0, #8
 8004dd2:	bfa8      	it	ge
 8004dd4:	2402      	movge	r4, #2
 8004dd6:	da0d      	bge.n	8004df4 <??ll_intf_set_conn_tx_power_level_0>
 8004dd8:	f995 0000 	ldrsb.w	r0, [r5]
 8004ddc:	f011 fac9 	bl	8016372 <db_get_phy_conf_tx_pwr>
 8004de0:	4629      	mov	r1, r5
 8004de2:	4620      	mov	r0, r4
 8004de4:	f011 f8d5 	bl	8015f92 <conn_mngr_set_conn_tx_power_level>
 8004de8:	4604      	mov	r4, r0
 8004dea:	f995 0000 	ldrsb.w	r0, [r5]
 8004dee:	4629      	mov	r1, r5
 8004df0:	f011 faa7 	bl	8016342 <db_get_radiative_tx_pwr>

08004df4 <??ll_intf_set_conn_tx_power_level_0>:
 8004df4:	4620      	mov	r0, r4
 8004df6:	bd32      	pop	{r1, r4, r5, pc}

08004df8 <ll_intf_le_write_tx_pwr>:
 8004df8:	b501      	push	{r0, lr}
 8004dfa:	b082      	sub	sp, #8
 8004dfc:	2100      	movs	r1, #0
 8004dfe:	f99d 0008 	ldrsb.w	r0, [sp, #8]
 8004e02:	f8ad 1000 	strh.w	r1, [sp]
 8004e06:	a902      	add	r1, sp, #8
 8004e08:	f011 fab3 	bl	8016372 <db_get_phy_conf_tx_pwr>
 8004e0c:	4669      	mov	r1, sp
 8004e0e:	f10d 0001 	add.w	r0, sp, #1
 8004e12:	f000 ff32 	bl	8005c7a <ll_tx_pwr_if_get_min_max_supprtd_tx_power_levels>
 8004e16:	f99d 0008 	ldrsb.w	r0, [sp, #8]
 8004e1a:	f99d 1001 	ldrsb.w	r1, [sp, #1]
 8004e1e:	4288      	cmp	r0, r1
 8004e20:	bfa3      	ittte	ge
 8004e22:	f99d 0000 	ldrsbge.w	r0, [sp]
 8004e26:	f99d 1008 	ldrsbge.w	r1, [sp, #8]
 8004e2a:	4288      	cmpge	r0, r1
 8004e2c:	2011      	movlt	r0, #17
 8004e2e:	db0e      	blt.n	8004e4e <??ll_intf_le_write_tx_pwr_0>
 8004e30:	f99d 0008 	ldrsb.w	r0, [sp, #8]
 8004e34:	2201      	movs	r2, #1
 8004e36:	2101      	movs	r1, #1
 8004e38:	f000 ff2e 	bl	8005c98 <ll_tx_pwr_if_get_tx_pwr_table_offset>
 8004e3c:	f8df 13c0 	ldr.w	r1, [pc, #960]	; 8005200 <??DataTable8>
 8004e40:	680a      	ldr	r2, [r1, #0]
 8004e42:	eb02 0080 	add.w	r0, r2, r0, lsl #2
 8004e46:	f990 0003 	ldrsb.w	r0, [r0, #3]
 8004e4a:	f011 fa3a 	bl	80162c2 <db_set_tx_power_value>

08004e4e <??ll_intf_le_write_tx_pwr_0>:
 8004e4e:	b003      	add	sp, #12
 8004e50:	bd00      	pop	{pc}

08004e52 <ll_intf_le_set_sleep_clock_accuracy>:
 8004e52:	b538      	push	{r3, r4, r5, lr}
 8004e54:	4604      	mov	r4, r0
 8004e56:	2500      	movs	r5, #0
 8004e58:	f010 fefb 	bl	8015c52 <conn_mngr_get_run_conn_no>
 8004e5c:	2800      	cmp	r0, #0
 8004e5e:	bf12      	itee	ne
 8004e60:	2502      	movne	r5, #2
 8004e62:	4620      	moveq	r0, r4
 8004e64:	f7fe f8b2 	bleq	8002fcc <evnt_utils_update_sleep_clock_accuracy>
 8004e68:	4628      	mov	r0, r5
 8004e6a:	bd32      	pop	{r1, r4, r5, pc}

08004e6c <ll_intf_le_set_phy_clbr_params>:
 8004e6c:	f7fd b983 	b.w	8002176 <evnt_schdlr_set_phy_clbr_params>

08004e70 <ll_intf_le_get_remaining_time_for_next_event>:
 8004e70:	f7fd b9b6 	b.w	80021e0 <evnt_schdlr_get_remaining_time_for_next_event>

08004e74 <ll_intf_le_set_scheduler_setup_time>:
 8004e74:	f7fd ba03 	b.w	800227e <evnt_schdlr_set_setup_time>

08004e78 <ll_intf_le_set_dp_slp_mode>:
 8004e78:	2801      	cmp	r0, #1
 8004e7a:	d003      	beq.n	8004e84 <??ll_intf_le_set_dp_slp_mode_0>
 8004e7c:	0001      	movs	r1, r0
 8004e7e:	d001      	beq.n	8004e84 <??ll_intf_le_set_dp_slp_mode_0>
 8004e80:	2012      	movs	r0, #18
 8004e82:	4770      	bx	lr

08004e84 <??ll_intf_le_set_dp_slp_mode_0>:
 8004e84:	f7fd b985 	b.w	8002192 <evnt_schdlr_set_dp_slp_mode>

08004e88 <ll_intf_le_start_augmented_mode>:
 8004e88:	b570      	push	{r4, r5, r6, lr}
 8004e8a:	4604      	mov	r4, r0
 8004e8c:	460d      	mov	r5, r1
 8004e8e:	2600      	movs	r6, #0
 8004e90:	f011 f8d4 	bl	801603c <conn_mngr_get_num_augmented_connection>
 8004e94:	b140      	cbz	r0, 8004ea8 <??ll_intf_le_start_augmented_mode_0>
 8004e96:	f007 f898 	bl	800bfca <llhwc_get_augmented_whitening>
 8004e9a:	42a8      	cmp	r0, r5
 8004e9c:	d004      	beq.n	8004ea8 <??ll_intf_le_start_augmented_mode_0>
 8004e9e:	2040      	movs	r0, #64	; 0x40
 8004ea0:	260c      	movs	r6, #12
 8004ea2:	f7fb f9c5 	bl	8000230 <bsp_debug_gpio_toggle>
 8004ea6:	e003      	b.n	8004eb0 <??ll_intf_le_start_augmented_mode_1>

08004ea8 <??ll_intf_le_start_augmented_mode_0>:
 8004ea8:	4629      	mov	r1, r5
 8004eaa:	4620      	mov	r0, r4
 8004eac:	f006 ffd5 	bl	800be5a <llhwc_start_augmented_mode>

08004eb0 <??ll_intf_le_start_augmented_mode_1>:
 8004eb0:	4630      	mov	r0, r6
 8004eb2:	bd70      	pop	{r4, r5, r6, pc}

08004eb4 <ll_intf_le_stop_augmented_mode>:
 8004eb4:	b580      	push	{r7, lr}
 8004eb6:	f006 ffd6 	bl	800be66 <llhwc_stop_augmented_mode>
 8004eba:	2000      	movs	r0, #0
 8004ebc:	bd02      	pop	{r1, pc}

08004ebe <ll_intf_le_start_energy_detection>:
 8004ebe:	b538      	push	{r3, r4, r5, lr}
 8004ec0:	4604      	mov	r4, r0
 8004ec2:	460d      	mov	r5, r1
 8004ec4:	f7fd f9e4 	bl	8002290 <evnt_schdlr_check_start_energy_detection>
 8004ec8:	b928      	cbnz	r0, 8004ed6 <??ll_intf_le_start_energy_detection_0>
 8004eca:	4629      	mov	r1, r5
 8004ecc:	4620      	mov	r0, r4
 8004ece:	e8bd 4034 	ldmia.w	sp!, {r2, r4, r5, lr}
 8004ed2:	f007 b845 	b.w	800bf60 <llhwc_start_energy_detection>

08004ed6 <??ll_intf_le_start_energy_detection_0>:
 8004ed6:	bd32      	pop	{r1, r4, r5, pc}

08004ed8 <ll_intf_le_select_slp_clk_src>:
 8004ed8:	b570      	push	{r4, r5, r6, lr}
 8004eda:	4604      	mov	r4, r0
 8004edc:	460e      	mov	r6, r1
 8004ede:	f008 f896 	bl	800d00e <llhwc_cmn_reset_slptmr_src>
 8004ee2:	2500      	movs	r5, #0
 8004ee4:	f008 f8a4 	bl	800d030 <llhwc_cmn_reset_rco_clbr>
 8004ee8:	0020      	movs	r0, r4
 8004eea:	d106      	bne.n	8004efa <??ll_intf_le_select_slp_clk_src_0>
 8004eec:	f44f 40fa 	mov.w	r0, #32000	; 0x7d00

08004ef0 <??ll_intf_le_select_slp_clk_src_1>:
 8004ef0:	8030      	strh	r0, [r6, #0]

08004ef2 <??ll_intf_le_select_slp_clk_src_2>:
 8004ef2:	49c4      	ldr	r1, [pc, #784]	; (8005204 <??DataTable8_1>)
 8004ef4:	750c      	strb	r4, [r1, #20]

08004ef6 <??ll_intf_le_select_slp_clk_src_3>:
 8004ef6:	4628      	mov	r0, r5
 8004ef8:	bd70      	pop	{r4, r5, r6, pc}

08004efa <??ll_intf_le_select_slp_clk_src_0>:
 8004efa:	2c01      	cmp	r4, #1
 8004efc:	d103      	bne.n	8004f06 <??ll_intf_le_select_slp_clk_src_4>
 8004efe:	4631      	mov	r1, r6
 8004f00:	f008 f8d0 	bl	800d0a4 <llhwc_cmn_initial_rco_clbr>
 8004f04:	e7f5      	b.n	8004ef2 <??ll_intf_le_select_slp_clk_src_2>

08004f06 <??ll_intf_le_select_slp_clk_src_4>:
 8004f06:	2c02      	cmp	r4, #2
 8004f08:	bf08      	it	eq
 8004f0a:	f44f 4000 	moveq.w	r0, #32768	; 0x8000
 8004f0e:	d0ef      	beq.n	8004ef0 <??ll_intf_le_select_slp_clk_src_1>
 8004f10:	2512      	movs	r5, #18
 8004f12:	e7f0      	b.n	8004ef6 <??ll_intf_le_select_slp_clk_src_3>

08004f14 <ll_intf_le_set_rco_clbr_evnt_params>:
 8004f14:	4abb      	ldr	r2, [pc, #748]	; (8005204 <??DataTable8_1>)
 8004f16:	b510      	push	{r4, lr}
 8004f18:	7d13      	ldrb	r3, [r2, #20]
 8004f1a:	2400      	movs	r4, #0
 8004f1c:	2b01      	cmp	r3, #1
 8004f1e:	bf14      	ite	ne
 8004f20:	2412      	movne	r4, #18
 8004f22:	f008 f90d 	bleq	800d140 <llhwc_cmn_runtime_rco_clbr_params>
 8004f26:	4620      	mov	r0, r4
 8004f28:	bd10      	pop	{r4, pc}

08004f2a <ll_intf_select_tx_power_table>:
 8004f2a:	b510      	push	{r4, lr}
 8004f2c:	4604      	mov	r4, r0
 8004f2e:	f7fd f996 	bl	800225e <evnt_schdlr_select_tx_power_mode>
 8004f32:	b2c1      	uxtb	r1, r0
 8004f34:	b929      	cbnz	r1, 8004f42 <??ll_intf_select_tx_power_table_0>
 8004f36:	4620      	mov	r0, r4
 8004f38:	f000 fe53 	bl	8005be2 <ll_tx_pwr_if_select_tx_power_mode>
 8004f3c:	0001      	movs	r1, r0
 8004f3e:	bf18      	it	ne
 8004f40:	2012      	movne	r0, #18

08004f42 <??ll_intf_select_tx_power_table_0>:
 8004f42:	b2c0      	uxtb	r0, r0
 8004f44:	bd10      	pop	{r4, pc}

08004f46 <ll_intf_config_ll_ctx_params>:
 8004f46:	b570      	push	{r4, r5, r6, lr}
 8004f48:	4604      	mov	r4, r0
 8004f4a:	460d      	mov	r5, r1
 8004f4c:	2600      	movs	r6, #0
 8004f4e:	f00d fce7 	bl	8012920 <os_wrapper_is_rtos_used>
 8004f52:	b908      	cbnz	r0, 8004f58 <??ll_intf_config_ll_ctx_params_0>
 8004f54:	2c02      	cmp	r4, #2
 8004f56:	da01      	bge.n	8004f5c <??ll_intf_config_ll_ctx_params_1>

08004f58 <??ll_intf_config_ll_ctx_params_0>:
 8004f58:	2d02      	cmp	r5, #2
 8004f5a:	db01      	blt.n	8004f60 <??ll_intf_config_ll_ctx_params_2>

08004f5c <??ll_intf_config_ll_ctx_params_1>:
 8004f5c:	2612      	movs	r6, #18
 8004f5e:	e003      	b.n	8004f68 <??ll_intf_config_ll_ctx_params_3>

08004f60 <??ll_intf_config_ll_ctx_params_2>:
 8004f60:	4629      	mov	r1, r5
 8004f62:	4620      	mov	r0, r4
 8004f64:	f008 fc0c 	bl	800d780 <llhwc_cmn_sys_configure_ll_ctx>

08004f68 <??ll_intf_config_ll_ctx_params_3>:
 8004f68:	4630      	mov	r0, r6
 8004f6a:	bd70      	pop	{r4, r5, r6, pc}

08004f6c <ll_init_start_unmod_carrier>:
 8004f6c:	b578      	push	{r3, r4, r5, r6, lr}
 8004f6e:	b085      	sub	sp, #20
 8004f70:	4604      	mov	r4, r0
 8004f72:	460e      	mov	r6, r1
 8004f74:	4615      	mov	r5, r2
 8004f76:	f7fd f99b 	bl	80022b0 <evnt_schdlr_do_events_exist>
 8004f7a:	b120      	cbz	r0, 8004f86 <??ll_init_start_unmod_carrier_0>
 8004f7c:	2040      	movs	r0, #64	; 0x40
 8004f7e:	240c      	movs	r4, #12
 8004f80:	f7fb f956 	bl	8000230 <bsp_debug_gpio_toggle>
 8004f84:	e021      	b.n	8004fca <??ll_init_start_unmod_carrier_1>

08004f86 <??ll_init_start_unmod_carrier_0>:
 8004f86:	2d01      	cmp	r5, #1
 8004f88:	bf18      	it	ne
 8004f8a:	2d02      	cmpne	r5, #2
 8004f8c:	d108      	bne.n	8004fa0 <??ll_init_start_unmod_carrier_2>
 8004f8e:	2c28      	cmp	r4, #40	; 0x28
 8004f90:	da06      	bge.n	8004fa0 <??ll_init_start_unmod_carrier_2>
 8004f92:	f506 5000 	add.w	r0, r6, #8192	; 0x2000
 8004f96:	1d00      	adds	r0, r0, #4
 8004f98:	f244 0109 	movw	r1, #16393	; 0x4009
 8004f9c:	4288      	cmp	r0, r1
 8004f9e:	d301      	bcc.n	8004fa4 <??ll_init_start_unmod_carrier_3>

08004fa0 <??ll_init_start_unmod_carrier_2>:
 8004fa0:	2412      	movs	r4, #18
 8004fa2:	e012      	b.n	8004fca <??ll_init_start_unmod_carrier_1>

08004fa4 <??ll_init_start_unmod_carrier_3>:
 8004fa4:	4629      	mov	r1, r5
 8004fa6:	4630      	mov	r0, r6
 8004fa8:	f008 fbfe 	bl	800d7a8 <llhwc_cmn_set_freq_correction_reg>
 8004fac:	2001      	movs	r0, #1
 8004fae:	9004      	str	r0, [sp, #16]
 8004fb0:	2100      	movs	r1, #0
 8004fb2:	26ff      	movs	r6, #255	; 0xff
 8004fb4:	9503      	str	r5, [sp, #12]
 8004fb6:	9102      	str	r1, [sp, #8]
 8004fb8:	9101      	str	r1, [sp, #4]
 8004fba:	9600      	str	r6, [sp, #0]
 8004fbc:	f44f 6200 	mov.w	r2, #2048	; 0x800
 8004fc0:	2300      	movs	r3, #0
 8004fc2:	4620      	mov	r0, r4
 8004fc4:	f004 fe5a 	bl	8009c7c <llhwc_start_dtm>
 8004fc8:	4604      	mov	r4, r0

08004fca <??ll_init_start_unmod_carrier_1>:
 8004fca:	4620      	mov	r0, r4
 8004fcc:	b006      	add	sp, #24
 8004fce:	bd70      	pop	{r4, r5, r6, pc}

08004fd0 <ll_init_stop_unmod_carrier>:
 8004fd0:	b580      	push	{r7, lr}
 8004fd2:	2000      	movs	r0, #0
 8004fd4:	f8ad 0000 	strh.w	r0, [sp]
 8004fd8:	4668      	mov	r0, sp
 8004fda:	f004 fdf4 	bl	8009bc6 <llhwc_stp_dtm>
 8004fde:	bd02      	pop	{r1, pc}

08004fe0 <ll_intf_alloc_ll_pkt>:
 8004fe0:	4889      	ldr	r0, [pc, #548]	; (8005208 <??DataTable8_2>)
 8004fe2:	f000 b91d 	b.w	8005220 <os_shrd_mem_alloc>

08004fe6 <ll_intf_free_ll_pkt>:
 8004fe6:	b510      	push	{r4, lr}
 8004fe8:	4604      	mov	r4, r0
 8004fea:	f7fb f8f3 	bl	80001d4 <bsp_is_ptr_in_ble_mem>
 8004fee:	2800      	cmp	r0, #0
 8004ff0:	bf14      	ite	ne
 8004ff2:	1f20      	subne	r0, r4, #4
 8004ff4:	4620      	moveq	r0, r4
 8004ff6:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8004ffa:	f000 b90f 	b.w	800521c <os_mem_pool_free>

08004ffe <ll_intf_free_ll_pkt_hndlr>:
 8004ffe:	b510      	push	{r4, lr}
 8005000:	4604      	mov	r4, r0
 8005002:	202b      	movs	r0, #43	; 0x2b
 8005004:	f7fb f910 	bl	8000228 <bsp_debug_gpio_set>
 8005008:	6820      	ldr	r0, [r4, #0]
 800500a:	f7fb f8e3 	bl	80001d4 <bsp_is_ptr_in_ble_mem>
 800500e:	2800      	cmp	r0, #0
 8005010:	6820      	ldr	r0, [r4, #0]
 8005012:	bf18      	it	ne
 8005014:	1f00      	subne	r0, r0, #4
 8005016:	f000 f901 	bl	800521c <os_mem_pool_free>
 800501a:	4620      	mov	r0, r4
 800501c:	f000 f8fe 	bl	800521c <os_mem_pool_free>
 8005020:	202b      	movs	r0, #43	; 0x2b
 8005022:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8005026:	f7fb b901 	b.w	800022c <bsp_debug_gpio_clear>

0800502a <ll_intf_set_ecosystem_base_interval>:
 800502a:	4601      	mov	r1, r0
 800502c:	2000      	movs	r0, #0
 800502e:	460a      	mov	r2, r1
 8005030:	2a02      	cmp	r2, #2
 8005032:	da01      	bge.n	8005038 <??ll_intf_set_ecosystem_base_interval_0>
 8005034:	b921      	cbnz	r1, 8005040 <??ll_intf_set_ecosystem_base_interval_1>
 8005036:	4770      	bx	lr

08005038 <??ll_intf_set_ecosystem_base_interval_0>:
 8005038:	f647 51f1 	movw	r1, #32241	; 0x7df1
 800503c:	428a      	cmp	r2, r1
 800503e:	db00      	blt.n	8005042 <??ll_intf_set_ecosystem_base_interval_2>

08005040 <??ll_intf_set_ecosystem_base_interval_1>:
 8005040:	2030      	movs	r0, #48	; 0x30

08005042 <??ll_intf_set_ecosystem_base_interval_2>:
 8005042:	4770      	bx	lr

08005044 <ll_intf_curb_sleep_state>:
 8005044:	b510      	push	{r4, lr}
 8005046:	2400      	movs	r4, #0
 8005048:	0001      	movs	r1, r0
 800504a:	bf18      	it	ne
 800504c:	2801      	cmpne	r0, #1
 800504e:	d001      	beq.n	8005054 <??ll_intf_curb_sleep_state_0>
 8005050:	200c      	movs	r0, #12
 8005052:	bd10      	pop	{r4, pc}

08005054 <??ll_intf_curb_sleep_state_0>:
 8005054:	f007 fb13 	bl	800c67e <llhwc_cmn_curb_sleep_state>
 8005058:	f110 0f01 	cmn.w	r0, #1
 800505c:	d103      	bne.n	8005066 <??ll_intf_curb_sleep_state_1>
 800505e:	2040      	movs	r0, #64	; 0x40
 8005060:	240c      	movs	r4, #12
 8005062:	f7fb f8e5 	bl	8000230 <bsp_debug_gpio_toggle>

08005066 <??ll_intf_curb_sleep_state_1>:
 8005066:	4620      	mov	r0, r4
 8005068:	bd10      	pop	{r4, pc}

0800506a <ll_init_start_cont_dtm>:
 800506a:	b500      	push	{lr}
 800506c:	b085      	sub	sp, #20
 800506e:	2300      	movs	r3, #0
 8005070:	9200      	str	r2, [sp, #0]
 8005072:	9304      	str	r3, [sp, #16]
 8005074:	9103      	str	r1, [sp, #12]
 8005076:	9302      	str	r3, [sp, #8]
 8005078:	9301      	str	r3, [sp, #4]
 800507a:	f44f 6200 	mov.w	r2, #2048	; 0x800
 800507e:	f004 fdfd 	bl	8009c7c <llhwc_start_dtm>
 8005082:	b005      	add	sp, #20
 8005084:	bd00      	pop	{pc}

08005086 <ll_intf_le_read_phy_reg>:
 8005086:	b538      	push	{r3, r4, r5, lr}
 8005088:	4604      	mov	r4, r0
 800508a:	460d      	mov	r5, r1
 800508c:	f009 fa81 	bl	800e592 <llhwc_phy_get_phy_strt_state>
 8005090:	b908      	cbnz	r0, 8005096 <??ll_intf_le_read_phy_reg_0>
 8005092:	200c      	movs	r0, #12
 8005094:	bd32      	pop	{r1, r4, r5, pc}

08005096 <??ll_intf_le_read_phy_reg_0>:
 8005096:	4620      	mov	r0, r4
 8005098:	f008 fbaa 	bl	800d7f0 <llhwc_cmn_read_phy_reg>
 800509c:	7028      	strb	r0, [r5, #0]
 800509e:	2000      	movs	r0, #0
 80050a0:	bd32      	pop	{r1, r4, r5, pc}

080050a2 <ll_intf_le_write_phy_reg>:
 80050a2:	b538      	push	{r3, r4, r5, lr}
 80050a4:	4604      	mov	r4, r0
 80050a6:	460d      	mov	r5, r1
 80050a8:	f009 fa73 	bl	800e592 <llhwc_phy_get_phy_strt_state>
 80050ac:	b908      	cbnz	r0, 80050b2 <??ll_intf_le_write_phy_reg_0>
 80050ae:	200c      	movs	r0, #12
 80050b0:	bd32      	pop	{r1, r4, r5, pc}

080050b2 <??ll_intf_le_write_phy_reg_0>:
 80050b2:	4629      	mov	r1, r5
 80050b4:	4620      	mov	r0, r4
 80050b6:	f008 fb9d 	bl	800d7f4 <llhwc_cmn_write_phy_reg>
 80050ba:	2000      	movs	r0, #0
 80050bc:	bd32      	pop	{r1, r4, r5, pc}

080050be <ll_intf_set_temperature_sensor_state>:
 80050be:	f008 bb9b 	b.w	800d7f8 <llhwc_cmn_set_temperature_sensor_state>

080050c2 <ll_intf_set_temperature_value>:
 80050c2:	b280      	uxth	r0, r0
 80050c4:	f008 bba4 	b.w	800d810 <llhwc_cmn_set_temperature_value>

080050c8 <ll_intf_le_tx_test_packet_number>:
 80050c8:	b510      	push	{r4, lr}
 80050ca:	0004      	movs	r4, r0
 80050cc:	bf14      	ite	ne
 80050ce:	2001      	movne	r0, #1
 80050d0:	2000      	moveq	r0, #0
 80050d2:	f7fb f87d 	bl	80001d0 <bsp_assert>
 80050d6:	4620      	mov	r0, r4
 80050d8:	f006 ff7d 	bl	800bfd6 <llhwc_get_tx_test_pckt_num>
 80050dc:	2000      	movs	r0, #0
 80050de:	bd10      	pop	{r4, pc}

080050e0 <ll_intf_read_raw_rssi>:
 80050e0:	b51c      	push	{r2, r3, r4, lr}
 80050e2:	0004      	movs	r4, r0
 80050e4:	bf14      	ite	ne
 80050e6:	2001      	movne	r0, #1
 80050e8:	2000      	moveq	r0, #0
 80050ea:	f7fb f871 	bl	80001d0 <bsp_assert>
 80050ee:	4668      	mov	r0, sp
 80050f0:	f006 ff7c 	bl	800bfec <llhwc_get_last_rx_rssi>
 80050f4:	f9bd 0000 	ldrsh.w	r0, [sp]
 80050f8:	6020      	str	r0, [r4, #0]
 80050fa:	2000      	movs	r0, #0
 80050fc:	bd16      	pop	{r1, r2, r4, pc}

080050fe <ll_intf_set_end_of_activity_mask>:
 80050fe:	b580      	push	{r7, lr}
 8005100:	f7fd f8e2 	bl	80022c8 <evnt_schdlr_set_end_of_activity_mask>
 8005104:	2000      	movs	r0, #0
 8005106:	bd02      	pop	{r1, pc}

08005108 <ll_intf_get_link_status>:
 8005108:	b53e      	push	{r1, r2, r3, r4, r5, lr}
 800510a:	460d      	mov	r5, r1
 800510c:	2300      	movs	r3, #0
 800510e:	4604      	mov	r4, r0
 8005110:	f88d 3000 	strb.w	r3, [sp]
 8005114:	220a      	movs	r2, #10
 8005116:	2100      	movs	r1, #0
 8005118:	f009 fd67 	bl	800ebea <ble_memset>
 800511c:	2214      	movs	r2, #20
 800511e:	21ff      	movs	r1, #255	; 0xff
 8005120:	4628      	mov	r0, r5
 8005122:	f009 fd62 	bl	800ebea <ble_memset>
 8005126:	a801      	add	r0, sp, #4
 8005128:	f006 ff6c 	bl	800c004 <llhwc_get_dtm_curr_mode>
 800512c:	9801      	ldr	r0, [sp, #4]
 800512e:	f5b0 7f00 	cmp.w	r0, #512	; 0x200
 8005132:	d005      	beq.n	8005140 <??ll_intf_get_link_status_0>
 8005134:	f5b0 6f80 	cmp.w	r0, #1024	; 0x400
 8005138:	d104      	bne.n	8005144 <??ll_intf_get_link_status_1>
 800513a:	2007      	movs	r0, #7

0800513c <??ll_intf_get_link_status_2>:
 800513c:	7020      	strb	r0, [r4, #0]
 800513e:	e00b      	b.n	8005158 <??ll_intf_get_link_status_3>

08005140 <??ll_intf_get_link_status_0>:
 8005140:	2006      	movs	r0, #6
 8005142:	e7fb      	b.n	800513c <??ll_intf_get_link_status_2>

08005144 <??ll_intf_get_link_status_1>:
 8005144:	466a      	mov	r2, sp
 8005146:	4629      	mov	r1, r5
 8005148:	4620      	mov	r0, r4
 800514a:	f010 ff8f 	bl	801606c <conn_mngr_get_link_status>
 800514e:	466a      	mov	r2, sp
 8005150:	4629      	mov	r1, r5
 8005152:	4620      	mov	r0, r4
 8005154:	f00d fb52 	bl	80127fc <non_conn_mngr_get_link_status>

08005158 <??ll_intf_get_link_status_3>:
 8005158:	2000      	movs	r0, #0
 800515a:	b003      	add	sp, #12
 800515c:	bd30      	pop	{r4, r5, pc}

0800515e <ll_intf_rgstr_hst_cbk>:
 800515e:	b510      	push	{r4, lr}
 8005160:	0004      	movs	r4, r0
 8005162:	bf14      	ite	ne
 8005164:	2001      	movne	r0, #1
 8005166:	2000      	moveq	r0, #0
 8005168:	f7fb f832 	bl	80001d0 <bsp_assert>
 800516c:	4620      	mov	r0, r4
 800516e:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8005172:	f7fe bd7f 	b.w	8003c74 <hci_rgstr_hst_cbk>

08005176 <ll_intf_rgstr_hst_cbk_ll_queue_full>:
 8005176:	b510      	push	{r4, lr}
 8005178:	0004      	movs	r4, r0
 800517a:	bf14      	ite	ne
 800517c:	2001      	movne	r0, #1
 800517e:	2000      	moveq	r0, #0
 8005180:	f7fb f826 	bl	80001d0 <bsp_assert>
 8005184:	4620      	mov	r0, r4
 8005186:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800518a:	f7fe bd76 	b.w	8003c7a <hci_rgstr_hst_cbk_ll_queue_full>

0800518e <ll_intf_chng_evnt_hndlr_state>:
 800518e:	b501      	push	{r0, lr}
 8005190:	f89d 0000 	ldrb.w	r0, [sp]
 8005194:	f3c0 0040 	ubfx	r0, r0, #1, #1
 8005198:	b118      	cbz	r0, 80051a2 <??ll_intf_chng_evnt_hndlr_state_0>
 800519a:	2100      	movs	r1, #0
 800519c:	2007      	movs	r0, #7
 800519e:	f7fb f92e 	bl	80003fe <emngr_set_event_handle_busy>

080051a2 <??ll_intf_chng_evnt_hndlr_state_0>:
 80051a2:	f89d 0000 	ldrb.w	r0, [sp]
 80051a6:	f3c0 00c0 	ubfx	r0, r0, #3, #1
 80051aa:	b118      	cbz	r0, 80051b4 <??ll_intf_chng_evnt_hndlr_state_1>
 80051ac:	2100      	movs	r1, #0
 80051ae:	2008      	movs	r0, #8
 80051b0:	f7fb f925 	bl	80003fe <emngr_set_event_handle_busy>

080051b4 <??ll_intf_chng_evnt_hndlr_state_1>:
 80051b4:	f89d 0000 	ldrb.w	r0, [sp]
 80051b8:	07c1      	lsls	r1, r0, #31
 80051ba:	d505      	bpl.n	80051c8 <??ll_intf_chng_evnt_hndlr_state_2>
 80051bc:	2100      	movs	r1, #0
 80051be:	2006      	movs	r0, #6
 80051c0:	e8bd 4004 	ldmia.w	sp!, {r2, lr}
 80051c4:	f7fb b91b 	b.w	80003fe <emngr_set_event_handle_busy>

080051c8 <??ll_intf_chng_evnt_hndlr_state_2>:
 80051c8:	bd01      	pop	{r0, pc}

080051ca <ll_intf_set_event_mask>:
 80051ca:	f7fe bd73 	b.w	8003cb4 <hci_ll_set_event_mask>

080051ce <ll_intf_set_event_mask_page2>:
 80051ce:	f7fe bd8e 	b.w	8003cee <hci_ll_set_event_mask_page2>

080051d2 <ll_intf_set_le_event_mask>:
 80051d2:	f7fe bd55 	b.w	8003c80 <hci_ll_set_le_event_mask>
	...

080051d8 <ll_intf_clear_event>:
 80051d8:	b51c      	push	{r2, r3, r4, lr}
 80051da:	bf00      	nop
 80051dc:	a30d      	add	r3, pc, #52	; (adr r3, 8005214 <?_2>)
 80051de:	681c      	ldr	r4, [r3, #0]
 80051e0:	2102      	movs	r1, #2
 80051e2:	2808      	cmp	r0, #8
 80051e4:	9400      	str	r4, [sp, #0]
 80051e6:	f8ad 0002 	strh.w	r0, [sp, #2]
 80051ea:	da06      	bge.n	80051fa <??ll_intf_clear_event_0>
 80051ec:	4b07      	ldr	r3, [pc, #28]	; (800520c <??DataTable8_3>)
 80051ee:	466a      	mov	r2, sp
 80051f0:	2100      	movs	r1, #0
 80051f2:	2007      	movs	r0, #7
 80051f4:	f7fb f9a2 	bl	800053c <emngr_remove_conditional_event>
 80051f8:	4601      	mov	r1, r0

080051fa <??ll_intf_clear_event_0>:
 80051fa:	4608      	mov	r0, r1
 80051fc:	bd16      	pop	{r1, r2, r4, pc}
	...

08005200 <??DataTable8>:
 8005200:	0704 2000                                   ... 

08005204 <??DataTable8_1>:
 8005204:	0884 2000                                   ... 

08005208 <??DataTable8_2>:
 8005208:	3634 2000                                   46. 

0800520c <??DataTable8_3>:
 800520c:	28a9 0801                                   .(..

08005210 <ll_intf_set_custom_event_mask>:
 8005210:	f7fe bd87 	b.w	8003d22 <hci_ll_set_custom_event_mask>

08005214 <?_2>:
 8005214:	0000 0000                                   ....

08005218 <os_mem_pool_alloc>:
 8005218:	f009 bc35 	b.w	800ea86 <mem_pool_alloc>

0800521c <os_mem_pool_free>:
 800521c:	f009 bc59 	b.w	800ead2 <mem_pool_free>

08005220 <os_shrd_mem_alloc>:
 8005220:	b580      	push	{r7, lr}
 8005222:	f009 fc30 	bl	800ea86 <mem_pool_alloc>
 8005226:	b100      	cbz	r0, 800522a <??os_shrd_mem_alloc_0>
 8005228:	1d00      	adds	r0, r0, #4

0800522a <??os_shrd_mem_alloc_0>:
 800522a:	bd02      	pop	{r1, pc}

0800522c <queue_free>:
 800522c:	2800      	cmp	r0, #0
 800522e:	d100      	bne.n	8005232 <??queue_free_0>
 8005230:	4770      	bx	lr

08005232 <??queue_free_0>:
 8005232:	b510      	push	{r4, lr}
 8005234:	6800      	ldr	r0, [r0, #0]
 8005236:	2800      	cmp	r0, #0
 8005238:	e003      	b.n	8005242 <??queue_free_1>

0800523a <??queue_free_2>:
 800523a:	6844      	ldr	r4, [r0, #4]
 800523c:	f7ff ffee 	bl	800521c <os_mem_pool_free>
 8005240:	0020      	movs	r0, r4

08005242 <??queue_free_1>:
 8005242:	d1fa      	bne.n	800523a <??queue_free_2>
 8005244:	bd10      	pop	{r4, pc}

08005246 <queue_enqueue>:
 8005246:	b570      	push	{r4, r5, r6, lr}
 8005248:	4605      	mov	r5, r0
 800524a:	460e      	mov	r6, r1
 800524c:	f8df 0360 	ldr.w	r0, [pc, #864]	; 80055b0 <??DataTable9>
 8005250:	f7ff ffe2 	bl	8005218 <os_mem_pool_alloc>
 8005254:	0004      	movs	r4, r0
 8005256:	d013      	beq.n	8005280 <??queue_enqueue_0>
 8005258:	60a5      	str	r5, [r4, #8]
 800525a:	6026      	str	r6, [r4, #0]
 800525c:	2000      	movs	r0, #0
 800525e:	6060      	str	r0, [r4, #4]
 8005260:	f00f f8f9 	bl	8014456 <os_disable_isr>
 8005264:	6828      	ldr	r0, [r5, #0]
 8005266:	b910      	cbnz	r0, 800526e <??queue_enqueue_1>
 8005268:	4620      	mov	r0, r4
 800526a:	602c      	str	r4, [r5, #0]
 800526c:	e002      	b.n	8005274 <??queue_enqueue_2>

0800526e <??queue_enqueue_1>:
 800526e:	6868      	ldr	r0, [r5, #4]
 8005270:	6044      	str	r4, [r0, #4]
 8005272:	4620      	mov	r0, r4

08005274 <??queue_enqueue_2>:
 8005274:	6068      	str	r0, [r5, #4]
 8005276:	7a28      	ldrb	r0, [r5, #8]
 8005278:	1c40      	adds	r0, r0, #1
 800527a:	7228      	strb	r0, [r5, #8]
 800527c:	f00f f8ed 	bl	801445a <os_enable_isr>

08005280 <??queue_enqueue_0>:
 8005280:	4620      	mov	r0, r4
 8005282:	bd70      	pop	{r4, r5, r6, pc}

08005284 <queue_insert_frst>:
 8005284:	b570      	push	{r4, r5, r6, lr}
 8005286:	4605      	mov	r5, r0
 8005288:	460e      	mov	r6, r1
 800528a:	48c9      	ldr	r0, [pc, #804]	; (80055b0 <??DataTable9>)
 800528c:	f7ff ffc4 	bl	8005218 <os_mem_pool_alloc>
 8005290:	0004      	movs	r4, r0
 8005292:	d015      	beq.n	80052c0 <??queue_insert_frst_0>
 8005294:	60a5      	str	r5, [r4, #8]
 8005296:	6026      	str	r6, [r4, #0]
 8005298:	2000      	movs	r0, #0
 800529a:	6060      	str	r0, [r4, #4]
 800529c:	4ec5      	ldr	r6, [pc, #788]	; (80055b4 <??DataTable9_1>)
 800529e:	6830      	ldr	r0, [r6, #0]
 80052a0:	f04f 31ff 	mov.w	r1, #4294967295	; 0xffffffff
 80052a4:	f00f f8df 	bl	8014466 <os_rcrsv_mutex_wait>
 80052a8:	6828      	ldr	r0, [r5, #0]
 80052aa:	2800      	cmp	r0, #0
 80052ac:	bf0c      	ite	eq
 80052ae:	606c      	streq	r4, [r5, #4]
 80052b0:	6060      	strne	r0, [r4, #4]
 80052b2:	602c      	str	r4, [r5, #0]
 80052b4:	7a28      	ldrb	r0, [r5, #8]
 80052b6:	1c40      	adds	r0, r0, #1
 80052b8:	7228      	strb	r0, [r5, #8]
 80052ba:	6830      	ldr	r0, [r6, #0]
 80052bc:	f00f f8d9 	bl	8014472 <os_rcrsv_mutex_release>

080052c0 <??queue_insert_frst_0>:
 80052c0:	4620      	mov	r0, r4
 80052c2:	bd70      	pop	{r4, r5, r6, pc}

080052c4 <queue_dequeue>:
 80052c4:	b570      	push	{r4, r5, r6, lr}
 80052c6:	4606      	mov	r6, r0
 80052c8:	4dba      	ldr	r5, [pc, #744]	; (80055b4 <??DataTable9_1>)
 80052ca:	6828      	ldr	r0, [r5, #0]
 80052cc:	f04f 31ff 	mov.w	r1, #4294967295	; 0xffffffff
 80052d0:	f00f f8c9 	bl	8014466 <os_rcrsv_mutex_wait>
 80052d4:	6830      	ldr	r0, [r6, #0]
 80052d6:	0004      	movs	r4, r0
 80052d8:	d104      	bne.n	80052e4 <??queue_dequeue_0>
 80052da:	6828      	ldr	r0, [r5, #0]
 80052dc:	2600      	movs	r6, #0
 80052de:	f00f f8c8 	bl	8014472 <os_rcrsv_mutex_release>
 80052e2:	e010      	b.n	8005306 <??queue_dequeue_1>

080052e4 <??queue_dequeue_0>:
 80052e4:	6871      	ldr	r1, [r6, #4]
 80052e6:	4288      	cmp	r0, r1
 80052e8:	bf06      	itte	eq
 80052ea:	2000      	moveq	r0, #0
 80052ec:	6070      	streq	r0, [r6, #4]
 80052ee:	6860      	ldrne	r0, [r4, #4]
 80052f0:	6030      	str	r0, [r6, #0]
 80052f2:	7a30      	ldrb	r0, [r6, #8]
 80052f4:	1e41      	subs	r1, r0, #1
 80052f6:	7231      	strb	r1, [r6, #8]
 80052f8:	6828      	ldr	r0, [r5, #0]
 80052fa:	f00f f8ba 	bl	8014472 <os_rcrsv_mutex_release>
 80052fe:	6826      	ldr	r6, [r4, #0]
 8005300:	4620      	mov	r0, r4
 8005302:	f7ff ff8b 	bl	800521c <os_mem_pool_free>

08005306 <??queue_dequeue_1>:
 8005306:	4630      	mov	r0, r6
 8005308:	bd70      	pop	{r4, r5, r6, pc}

0800530a <queue_search>:
 800530a:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800530e:	4606      	mov	r6, r0
 8005310:	4fa8      	ldr	r7, [pc, #672]	; (80055b4 <??DataTable9_1>)
 8005312:	6838      	ldr	r0, [r7, #0]
 8005314:	4688      	mov	r8, r1
 8005316:	4693      	mov	fp, r2
 8005318:	469a      	mov	sl, r3
 800531a:	f04f 31ff 	mov.w	r1, #4294967295	; 0xffffffff
 800531e:	2400      	movs	r4, #0
 8005320:	2546      	movs	r5, #70	; 0x46
 8005322:	f00f f8a0 	bl	8014466 <os_rcrsv_mutex_wait>
 8005326:	46a1      	mov	r9, r4
 8005328:	2e00      	cmp	r6, #0
 800532a:	bf1c      	itt	ne
 800532c:	6834      	ldrne	r4, [r6, #0]
 800532e:	2c00      	cmpne	r4, #0
 8005330:	d00c      	beq.n	800534c <??queue_search_0>

08005332 <??queue_search_1>:
 8005332:	6820      	ldr	r0, [r4, #0]
 8005334:	465a      	mov	r2, fp
 8005336:	eb00 010a 	add.w	r1, r0, sl
 800533a:	4640      	mov	r0, r8
 800533c:	f009 fc8f 	bl	800ec5e <ble_memcmp>
 8005340:	2800      	cmp	r0, #0
 8005342:	bf1c      	itt	ne
 8005344:	6864      	ldrne	r4, [r4, #4]
 8005346:	2c00      	cmpne	r4, #0
 8005348:	d1f3      	bne.n	8005332 <??queue_search_1>
 800534a:	4605      	mov	r5, r0

0800534c <??queue_search_0>:
 800534c:	6838      	ldr	r0, [r7, #0]
 800534e:	f00f f890 	bl	8014472 <os_rcrsv_mutex_release>
 8005352:	b905      	cbnz	r5, 8005356 <??queue_search_2>
 8005354:	46a1      	mov	r9, r4

08005356 <??queue_search_2>:
 8005356:	4648      	mov	r0, r9
 8005358:	e8bd 8ff2 	ldmia.w	sp!, {r1, r4, r5, r6, r7, r8, r9, sl, fp, pc}

0800535c <queue_search_node>:
 800535c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800535e:	4604      	mov	r4, r0
 8005360:	4f94      	ldr	r7, [pc, #592]	; (80055b4 <??DataTable9_1>)
 8005362:	6838      	ldr	r0, [r7, #0]
 8005364:	460d      	mov	r5, r1
 8005366:	f04f 31ff 	mov.w	r1, #4294967295	; 0xffffffff
 800536a:	2600      	movs	r6, #0
 800536c:	f00f f87b 	bl	8014466 <os_rcrsv_mutex_wait>
 8005370:	2c00      	cmp	r4, #0
 8005372:	bf1c      	itt	ne
 8005374:	6820      	ldrne	r0, [r4, #0]
 8005376:	2800      	cmpne	r0, #0
 8005378:	d006      	beq.n	8005388 <??queue_search_node_0>
 800537a:	e001      	b.n	8005380 <??queue_search_node_1>

0800537c <??queue_search_node_2>:
 800537c:	6840      	ldr	r0, [r0, #4]
 800537e:	b118      	cbz	r0, 8005388 <??queue_search_node_0>

08005380 <??queue_search_node_1>:
 8005380:	6801      	ldr	r1, [r0, #0]
 8005382:	42a9      	cmp	r1, r5
 8005384:	d1fa      	bne.n	800537c <??queue_search_node_2>
 8005386:	4606      	mov	r6, r0

08005388 <??queue_search_node_0>:
 8005388:	6838      	ldr	r0, [r7, #0]
 800538a:	f00f f872 	bl	8014472 <os_rcrsv_mutex_release>
 800538e:	4630      	mov	r0, r6
 8005390:	bdf2      	pop	{r1, r4, r5, r6, r7, pc}

08005392 <queue_delete>:
 8005392:	b570      	push	{r4, r5, r6, lr}
 8005394:	4604      	mov	r4, r0
 8005396:	2600      	movs	r6, #0
 8005398:	2500      	movs	r5, #0
 800539a:	b334      	cbz	r4, 80053ea <??queue_delete_0>
 800539c:	4d85      	ldr	r5, [pc, #532]	; (80055b4 <??DataTable9_1>)
 800539e:	6828      	ldr	r0, [r5, #0]
 80053a0:	f04f 31ff 	mov.w	r1, #4294967295	; 0xffffffff
 80053a4:	f00f f85f 	bl	8014466 <os_rcrsv_mutex_wait>
 80053a8:	68a1      	ldr	r1, [r4, #8]
 80053aa:	680a      	ldr	r2, [r1, #0]
 80053ac:	4608      	mov	r0, r1
 80053ae:	4294      	cmp	r4, r2
 80053b0:	d106      	bne.n	80053c0 <??queue_delete_1>
 80053b2:	6862      	ldr	r2, [r4, #4]
 80053b4:	6002      	str	r2, [r0, #0]
 80053b6:	6849      	ldr	r1, [r1, #4]
 80053b8:	428c      	cmp	r4, r1
 80053ba:	d10c      	bne.n	80053d6 <??queue_delete_2>
 80053bc:	6042      	str	r2, [r0, #4]
 80053be:	e00a      	b.n	80053d6 <??queue_delete_2>

080053c0 <??queue_delete_1>:
 80053c0:	b100      	cbz	r0, 80053c4 <??queue_delete_3>

080053c2 <??queue_delete_4>:
 80053c2:	4616      	mov	r6, r2

080053c4 <??queue_delete_3>:
 80053c4:	6872      	ldr	r2, [r6, #4]
 80053c6:	42a2      	cmp	r2, r4
 80053c8:	d1fb      	bne.n	80053c2 <??queue_delete_4>
 80053ca:	6862      	ldr	r2, [r4, #4]
 80053cc:	6072      	str	r2, [r6, #4]
 80053ce:	6849      	ldr	r1, [r1, #4]
 80053d0:	428c      	cmp	r4, r1
 80053d2:	bf08      	it	eq
 80053d4:	6046      	streq	r6, [r0, #4]

080053d6 <??queue_delete_2>:
 80053d6:	7a01      	ldrb	r1, [r0, #8]
 80053d8:	1e4a      	subs	r2, r1, #1
 80053da:	7202      	strb	r2, [r0, #8]
 80053dc:	6828      	ldr	r0, [r5, #0]
 80053de:	f00f f848 	bl	8014472 <os_rcrsv_mutex_release>
 80053e2:	6825      	ldr	r5, [r4, #0]
 80053e4:	4620      	mov	r0, r4
 80053e6:	f7ff ff19 	bl	800521c <os_mem_pool_free>

080053ea <??queue_delete_0>:
 80053ea:	4628      	mov	r0, r5
 80053ec:	bd70      	pop	{r4, r5, r6, pc}

080053ee <queue_delete_data>:
 80053ee:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80053f2:	4604      	mov	r4, r0
 80053f4:	4e6f      	ldr	r6, [pc, #444]	; (80055b4 <??DataTable9_1>)
 80053f6:	6830      	ldr	r0, [r6, #0]
 80053f8:	4689      	mov	r9, r1
 80053fa:	4690      	mov	r8, r2
 80053fc:	469b      	mov	fp, r3
 80053fe:	f04f 31ff 	mov.w	r1, #4294967295	; 0xffffffff
 8005402:	f00f f830 	bl	8014466 <os_rcrsv_mutex_wait>
 8005406:	f04f 0a00 	mov.w	sl, #0
 800540a:	2c00      	cmp	r4, #0
 800540c:	bf1c      	itt	ne
 800540e:	6825      	ldrne	r5, [r4, #0]
 8005410:	2d00      	cmpne	r5, #0
 8005412:	d02a      	beq.n	800546a <??queue_delete_data_0>
 8005414:	6828      	ldr	r0, [r5, #0]
 8005416:	4642      	mov	r2, r8
 8005418:	eb00 010b 	add.w	r1, r0, fp
 800541c:	4648      	mov	r0, r9
 800541e:	f009 fc1e 	bl	800ec5e <ble_memcmp>
 8005422:	b990      	cbnz	r0, 800544a <??queue_delete_data_1>
 8005424:	6868      	ldr	r0, [r5, #4]
 8005426:	6020      	str	r0, [r4, #0]
 8005428:	68a9      	ldr	r1, [r5, #8]
 800542a:	684a      	ldr	r2, [r1, #4]
 800542c:	4295      	cmp	r5, r2
 800542e:	bf08      	it	eq
 8005430:	6060      	streq	r0, [r4, #4]
 8005432:	7a20      	ldrb	r0, [r4, #8]
 8005434:	f8d5 a000 	ldr.w	sl, [r5]
 8005438:	1e41      	subs	r1, r0, #1
 800543a:	7221      	strb	r1, [r4, #8]
 800543c:	6830      	ldr	r0, [r6, #0]
 800543e:	f00f f818 	bl	8014472 <os_rcrsv_mutex_release>

08005442 <??queue_delete_data_2>:
 8005442:	4628      	mov	r0, r5
 8005444:	f7ff feea 	bl	800521c <os_mem_pool_free>
 8005448:	e012      	b.n	8005470 <??queue_delete_data_3>

0800544a <??queue_delete_data_1>:
 800544a:	6827      	ldr	r7, [r4, #0]
 800544c:	e009      	b.n	8005462 <??queue_delete_data_4>

0800544e <??queue_delete_data_5>:
 800544e:	460d      	mov	r5, r1
 8005450:	6828      	ldr	r0, [r5, #0]
 8005452:	4642      	mov	r2, r8
 8005454:	eb00 010b 	add.w	r1, r0, fp
 8005458:	4648      	mov	r0, r9
 800545a:	f009 fc00 	bl	800ec5e <ble_memcmp>
 800545e:	b150      	cbz	r0, 8005476 <??queue_delete_data_6>
 8005460:	687f      	ldr	r7, [r7, #4]

08005462 <??queue_delete_data_4>:
 8005462:	6879      	ldr	r1, [r7, #4]
 8005464:	2900      	cmp	r1, #0
 8005466:	d1f2      	bne.n	800544e <??queue_delete_data_5>
 8005468:	b128      	cbz	r0, 8005476 <??queue_delete_data_6>

0800546a <??queue_delete_data_0>:
 800546a:	6830      	ldr	r0, [r6, #0]
 800546c:	f00f f801 	bl	8014472 <os_rcrsv_mutex_release>

08005470 <??queue_delete_data_3>:
 8005470:	4650      	mov	r0, sl
 8005472:	e8bd 8ff2 	ldmia.w	sp!, {r1, r4, r5, r6, r7, r8, r9, sl, fp, pc}

08005476 <??queue_delete_data_6>:
 8005476:	6869      	ldr	r1, [r5, #4]
 8005478:	6079      	str	r1, [r7, #4]
 800547a:	6868      	ldr	r0, [r5, #4]
 800547c:	b918      	cbnz	r0, 8005486 <??queue_delete_data_7>
 800547e:	68a9      	ldr	r1, [r5, #8]
 8005480:	6848      	ldr	r0, [r1, #4]
 8005482:	b100      	cbz	r0, 8005486 <??queue_delete_data_7>
 8005484:	6067      	str	r7, [r4, #4]

08005486 <??queue_delete_data_7>:
 8005486:	7a20      	ldrb	r0, [r4, #8]
 8005488:	1e41      	subs	r1, r0, #1
 800548a:	7221      	strb	r1, [r4, #8]
 800548c:	6830      	ldr	r0, [r6, #0]
 800548e:	f00e fff0 	bl	8014472 <os_rcrsv_mutex_release>
 8005492:	f8d5 a000 	ldr.w	sl, [r5]
 8005496:	e7d4      	b.n	8005442 <??queue_delete_data_2>

08005498 <queue_delete_node>:
 8005498:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800549a:	0004      	movs	r4, r0
 800549c:	bf14      	ite	ne
 800549e:	6825      	ldrne	r5, [r4, #0]
 80054a0:	2500      	moveq	r5, #0
 80054a2:	2700      	movs	r7, #0
 80054a4:	4790      	blx	r2
 80054a6:	0006      	movs	r6, r0
 80054a8:	bf18      	it	ne
 80054aa:	2d00      	cmpne	r5, #0
 80054ac:	d018      	beq.n	80054e0 <??queue_delete_node_0>
 80054ae:	4f41      	ldr	r7, [pc, #260]	; (80055b4 <??DataTable9_1>)
 80054b0:	6838      	ldr	r0, [r7, #0]
 80054b2:	f04f 31ff 	mov.w	r1, #4294967295	; 0xffffffff
 80054b6:	f00e ffd6 	bl	8014466 <os_rcrsv_mutex_wait>
 80054ba:	6820      	ldr	r0, [r4, #0]
 80054bc:	4286      	cmp	r6, r0
 80054be:	d112      	bne.n	80054e6 <??queue_delete_node_1>
 80054c0:	6861      	ldr	r1, [r4, #4]
 80054c2:	6870      	ldr	r0, [r6, #4]
 80054c4:	428e      	cmp	r6, r1
 80054c6:	bf08      	it	eq
 80054c8:	6060      	streq	r0, [r4, #4]
 80054ca:	6020      	str	r0, [r4, #0]

080054cc <??queue_delete_node_2>:
 80054cc:	7a20      	ldrb	r0, [r4, #8]
 80054ce:	1e41      	subs	r1, r0, #1
 80054d0:	7221      	strb	r1, [r4, #8]
 80054d2:	6838      	ldr	r0, [r7, #0]
 80054d4:	f00e ffcd 	bl	8014472 <os_rcrsv_mutex_release>
 80054d8:	6837      	ldr	r7, [r6, #0]
 80054da:	4630      	mov	r0, r6
 80054dc:	f7ff fe9e 	bl	800521c <os_mem_pool_free>

080054e0 <??queue_delete_node_0>:
 80054e0:	4638      	mov	r0, r7
 80054e2:	bdf2      	pop	{r1, r4, r5, r6, r7, pc}

080054e4 <??queue_delete_node_3>:
 80054e4:	4605      	mov	r5, r0

080054e6 <??queue_delete_node_1>:
 80054e6:	6868      	ldr	r0, [r5, #4]
 80054e8:	42b0      	cmp	r0, r6
 80054ea:	d1fb      	bne.n	80054e4 <??queue_delete_node_3>
 80054ec:	6871      	ldr	r1, [r6, #4]
 80054ee:	6069      	str	r1, [r5, #4]
 80054f0:	6870      	ldr	r0, [r6, #4]
 80054f2:	2800      	cmp	r0, #0
 80054f4:	d1ea      	bne.n	80054cc <??queue_delete_node_2>
 80054f6:	6065      	str	r5, [r4, #4]
 80054f8:	e7e8      	b.n	80054cc <??queue_delete_node_2>

080054fa <queue_sort_recur>:
 80054fa:	e92d 41f1 	stmdb	sp!, {r0, r4, r5, r6, r7, r8, lr}
 80054fe:	4617      	mov	r7, r2
 8005500:	b081      	sub	sp, #4
 8005502:	4688      	mov	r8, r1
 8005504:	2f01      	cmp	r7, #1
 8005506:	dd2a      	ble.n	800555e <??queue_sort_recur_0>
 8005508:	eb07 76d7 	add.w	r6, r7, r7, lsr #31
 800550c:	4601      	mov	r1, r0
 800550e:	1076      	asrs	r6, r6, #1
 8005510:	1e70      	subs	r0, r6, #1
 8005512:	2801      	cmp	r0, #1
 8005514:	db02      	blt.n	800551c <??queue_sort_recur_1>

08005516 <??queue_sort_recur_2>:
 8005516:	6849      	ldr	r1, [r1, #4]
 8005518:	1e40      	subs	r0, r0, #1
 800551a:	d1fc      	bne.n	8005516 <??queue_sort_recur_2>

0800551c <??queue_sort_recur_1>:
 800551c:	9d01      	ldr	r5, [sp, #4]
 800551e:	684c      	ldr	r4, [r1, #4]
 8005520:	2000      	movs	r0, #0
 8005522:	6048      	str	r0, [r1, #4]
 8005524:	2e01      	cmp	r6, #1
 8005526:	dd05      	ble.n	8005534 <??queue_sort_recur_3>
 8005528:	4632      	mov	r2, r6
 800552a:	4641      	mov	r1, r8
 800552c:	4628      	mov	r0, r5
 800552e:	f7ff ffe4 	bl	80054fa <queue_sort_recur>
 8005532:	4605      	mov	r5, r0

08005534 <??queue_sort_recur_3>:
 8005534:	1bbf      	subs	r7, r7, r6
 8005536:	2f01      	cmp	r7, #1
 8005538:	dd05      	ble.n	8005546 <??queue_sort_recur_4>
 800553a:	463a      	mov	r2, r7
 800553c:	4641      	mov	r1, r8
 800553e:	4620      	mov	r0, r4
 8005540:	f7ff ffdb 	bl	80054fa <queue_sort_recur>
 8005544:	4604      	mov	r4, r0

08005546 <??queue_sort_recur_4>:
 8005546:	af01      	add	r7, sp, #4

08005548 <??queue_sort_recur_5>:
 8005548:	6821      	ldr	r1, [r4, #0]
 800554a:	6828      	ldr	r0, [r5, #0]
 800554c:	47c0      	blx	r8
 800554e:	2801      	cmp	r0, #1
 8005550:	da08      	bge.n	8005564 <??queue_sort_recur_6>
 8005552:	603d      	str	r5, [r7, #0]
 8005554:	1d2f      	adds	r7, r5, #4
 8005556:	686d      	ldr	r5, [r5, #4]
 8005558:	2d00      	cmp	r5, #0
 800555a:	d1f5      	bne.n	8005548 <??queue_sort_recur_5>
 800555c:	603c      	str	r4, [r7, #0]

0800555e <??queue_sort_recur_0>:
 800555e:	9801      	ldr	r0, [sp, #4]
 8005560:	e8bd 81f6 	ldmia.w	sp!, {r1, r2, r4, r5, r6, r7, r8, pc}

08005564 <??queue_sort_recur_6>:
 8005564:	603c      	str	r4, [r7, #0]
 8005566:	1d27      	adds	r7, r4, #4
 8005568:	6864      	ldr	r4, [r4, #4]
 800556a:	2c00      	cmp	r4, #0
 800556c:	d1ec      	bne.n	8005548 <??queue_sort_recur_5>
 800556e:	603d      	str	r5, [r7, #0]
 8005570:	e7f5      	b.n	800555e <??queue_sort_recur_0>

08005572 <queue_sort>:
 8005572:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8005574:	4604      	mov	r4, r0
 8005576:	4f0f      	ldr	r7, [pc, #60]	; (80055b4 <??DataTable9_1>)
 8005578:	6838      	ldr	r0, [r7, #0]
 800557a:	460d      	mov	r5, r1
 800557c:	f04f 31ff 	mov.w	r1, #4294967295	; 0xffffffff
 8005580:	2600      	movs	r6, #0
 8005582:	f00e ff70 	bl	8014466 <os_rcrsv_mutex_wait>
 8005586:	2c00      	cmp	r4, #0
 8005588:	bf14      	ite	ne
 800558a:	6820      	ldrne	r0, [r4, #0]
 800558c:	2000      	moveq	r0, #0
 800558e:	7a22      	ldrb	r2, [r4, #8]
 8005590:	4629      	mov	r1, r5
 8005592:	f7ff ffb2 	bl	80054fa <queue_sort_recur>
 8005596:	6020      	str	r0, [r4, #0]
 8005598:	b104      	cbz	r4, 800559c <??queue_sort_0>

0800559a <??queue_sort_1>:
 800559a:	4606      	mov	r6, r0

0800559c <??queue_sort_0>:
 800559c:	6870      	ldr	r0, [r6, #4]
 800559e:	2800      	cmp	r0, #0
 80055a0:	d1fb      	bne.n	800559a <??queue_sort_1>
 80055a2:	6066      	str	r6, [r4, #4]
 80055a4:	6838      	ldr	r0, [r7, #0]
 80055a6:	f00e ff64 	bl	8014472 <os_rcrsv_mutex_release>
 80055aa:	2000      	movs	r0, #0
 80055ac:	bdf2      	pop	{r1, r4, r5, r6, r7, pc}
	...

080055b0 <??DataTable9>:
 80055b0:	16f4 2000                                   ... 

080055b4 <??DataTable9_1>:
 80055b4:	18c0 2000                                   ... 

080055b8 <queue_is_empty>:
 80055b8:	4601      	mov	r1, r0
 80055ba:	2045      	movs	r0, #69	; 0x45
 80055bc:	2900      	cmp	r1, #0
 80055be:	bf1e      	ittt	ne
 80055c0:	6809      	ldrne	r1, [r1, #0]
 80055c2:	2900      	cmpne	r1, #0
 80055c4:	2000      	movne	r0, #0
 80055c6:	4770      	bx	lr

080055c8 <os_timer_rgstr_timer_activity_cbk>:
 80055c8:	f8df 15d0 	ldr.w	r1, [pc, #1488]	; 8005b9c <??DataTable11>
 80055cc:	6088      	str	r0, [r1, #8]
 80055ce:	4770      	bx	lr

080055d0 <os_timer_get_earliest_time>:
 80055d0:	b538      	push	{r3, r4, r5, lr}
 80055d2:	f00e ff40 	bl	8014456 <os_disable_isr>
 80055d6:	f000 f84f 	bl	8005678 <os_timer_get_current_time>
 80055da:	f8df 25c0 	ldr.w	r2, [pc, #1472]	; 8005b9c <??DataTable11>
 80055de:	6812      	ldr	r2, [r2, #0]
 80055e0:	b302      	cbz	r2, 8005624 <??os_timer_get_earliest_time_0>
 80055e2:	7d13      	ldrb	r3, [r2, #20]
 80055e4:	6892      	ldr	r2, [r2, #8]
 80055e6:	f003 0301 	and.w	r3, r3, #1
 80055ea:	428b      	cmp	r3, r1
 80055ec:	bf08      	it	eq
 80055ee:	4282      	cmpeq	r2, r0
 80055f0:	d004      	beq.n	80055fc <??os_timer_get_earliest_time_1>
 80055f2:	428b      	cmp	r3, r1
 80055f4:	d805      	bhi.n	8005602 <??os_timer_get_earliest_time_2>
 80055f6:	bf28      	it	cs
 80055f8:	4282      	cmpcs	r2, r0
 80055fa:	d202      	bcs.n	8005602 <??os_timer_get_earliest_time_2>

080055fc <??os_timer_get_earliest_time_1>:
 80055fc:	2400      	movs	r4, #0
 80055fe:	2500      	movs	r5, #0
 8005600:	e002      	b.n	8005608 <??os_timer_get_earliest_time_3>

08005602 <??os_timer_get_earliest_time_2>:
 8005602:	1a14      	subs	r4, r2, r0
 8005604:	eb63 0501 	sbc.w	r5, r3, r1

08005608 <??os_timer_get_earliest_time_3>:
 8005608:	f00e ff27 	bl	801445a <os_enable_isr>
 800560c:	201f      	movs	r0, #31
 800560e:	fba0 2304 	umull	r2, r3, r0, r4
 8005612:	08a4      	lsrs	r4, r4, #2
 8005614:	ea44 7485 	orr.w	r4, r4, r5, lsl #30
 8005618:	fb00 3305 	mla	r3, r0, r5, r3
 800561c:	1910      	adds	r0, r2, r4
 800561e:	eb43 0195 	adc.w	r1, r3, r5, lsr #2
 8005622:	bd34      	pop	{r2, r4, r5, pc}

08005624 <??os_timer_get_earliest_time_0>:
 8005624:	f00e ff19 	bl	801445a <os_enable_isr>
 8005628:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 800562c:	4601      	mov	r1, r0
 800562e:	bd34      	pop	{r2, r4, r5, pc}

08005630 <remove_stopped_and_expired_timers>:
 8005630:	f04f 31ff 	mov.w	r1, #4294967295	; 0xffffffff
 8005634:	b538      	push	{r3, r4, r5, lr}
 8005636:	f8df 5568 	ldr.w	r5, [pc, #1384]	; 8005ba0 <??DataTable11_1>
 800563a:	6828      	ldr	r0, [r5, #0]
 800563c:	2400      	movs	r4, #0
 800563e:	f00e ff12 	bl	8014466 <os_rcrsv_mutex_wait>
 8005642:	f8df 1558 	ldr.w	r1, [pc, #1368]	; 8005b9c <??DataTable11>
 8005646:	6808      	ldr	r0, [r1, #0]
 8005648:	4602      	mov	r2, r0
 800564a:	e005      	b.n	8005658 <??remove_stopped_and_expired_timers_0>

0800564c <??remove_stopped_and_expired_timers_1>:
 800564c:	4604      	mov	r4, r0
 800564e:	e002      	b.n	8005656 <??remove_stopped_and_expired_timers_2>

08005650 <??remove_stopped_and_expired_timers_3>:
 8005650:	b10c      	cbz	r4, 8005656 <??remove_stopped_and_expired_timers_2>
 8005652:	6803      	ldr	r3, [r0, #0]
 8005654:	6023      	str	r3, [r4, #0]

08005656 <??remove_stopped_and_expired_timers_2>:
 8005656:	6800      	ldr	r0, [r0, #0]

08005658 <??remove_stopped_and_expired_timers_0>:
 8005658:	b140      	cbz	r0, 800566c <??remove_stopped_and_expired_timers_4>
 800565a:	7d83      	ldrb	r3, [r0, #22]
 800565c:	2b02      	cmp	r3, #2
 800565e:	bf18      	it	ne
 8005660:	2b01      	cmpne	r3, #1
 8005662:	d1f3      	bne.n	800564c <??remove_stopped_and_expired_timers_1>
 8005664:	4290      	cmp	r0, r2
 8005666:	d1f3      	bne.n	8005650 <??remove_stopped_and_expired_timers_3>
 8005668:	6812      	ldr	r2, [r2, #0]
 800566a:	e7f4      	b.n	8005656 <??remove_stopped_and_expired_timers_2>

0800566c <??remove_stopped_and_expired_timers_4>:
 800566c:	600a      	str	r2, [r1, #0]
 800566e:	6828      	ldr	r0, [r5, #0]
 8005670:	e8bd 4032 	ldmia.w	sp!, {r1, r4, r5, lr}
 8005674:	f00e befd 	b.w	8014472 <os_rcrsv_mutex_release>

08005678 <os_timer_get_current_time>:
 8005678:	b570      	push	{r4, r5, r6, lr}
 800567a:	f010 ffc7 	bl	801660c <get_current_time>
 800567e:	4604      	mov	r4, r0
 8005680:	f8df 551c 	ldr.w	r5, [pc, #1308]	; 8005ba0 <??DataTable11_1>
 8005684:	6828      	ldr	r0, [r5, #0]
 8005686:	f04f 31ff 	mov.w	r1, #4294967295	; 0xffffffff
 800568a:	f8df 6510 	ldr.w	r6, [pc, #1296]	; 8005b9c <??DataTable11>
 800568e:	f00e feea 	bl	8014466 <os_rcrsv_mutex_wait>
 8005692:	6870      	ldr	r0, [r6, #4]
 8005694:	4284      	cmp	r4, r0
 8005696:	d20c      	bcs.n	80056b2 <??os_timer_get_current_time_0>
 8005698:	6830      	ldr	r0, [r6, #0]
 800569a:	f64f 72fe 	movw	r2, #65534	; 0xfffe
 800569e:	e003      	b.n	80056a8 <??os_timer_get_current_time_1>

080056a0 <??os_timer_get_current_time_2>:
 80056a0:	8a81      	ldrh	r1, [r0, #20]
 80056a2:	4011      	ands	r1, r2
 80056a4:	8281      	strh	r1, [r0, #20]
 80056a6:	6800      	ldr	r0, [r0, #0]

080056a8 <??os_timer_get_current_time_1>:
 80056a8:	2800      	cmp	r0, #0
 80056aa:	d1f9      	bne.n	80056a0 <??os_timer_get_current_time_2>
 80056ac:	f8df 14f4 	ldr.w	r1, [pc, #1268]	; 8005ba4 <??DataTable11_2>
 80056b0:	6008      	str	r0, [r1, #0]

080056b2 <??os_timer_get_current_time_0>:
 80056b2:	6828      	ldr	r0, [r5, #0]
 80056b4:	f00e fedd 	bl	8014472 <os_rcrsv_mutex_release>
 80056b8:	6074      	str	r4, [r6, #4]
 80056ba:	4620      	mov	r0, r4
 80056bc:	2100      	movs	r1, #0
 80056be:	bd70      	pop	{r4, r5, r6, pc}

080056c0 <add_timer_to_List>:
 80056c0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80056c4:	4606      	mov	r6, r0
 80056c6:	7df0      	ldrb	r0, [r6, #23]
 80056c8:	460c      	mov	r4, r1
 80056ca:	2700      	movs	r7, #0
 80056cc:	6074      	str	r4, [r6, #4]
 80056ce:	07c1      	lsls	r1, r0, #31
 80056d0:	d504      	bpl.n	80056dc <??add_timer_to_List_0>
 80056d2:	68b0      	ldr	r0, [r6, #8]
 80056d4:	b110      	cbz	r0, 80056dc <??add_timer_to_List_0>
 80056d6:	1824      	adds	r4, r4, r0
 80056d8:	2500      	movs	r5, #0
 80056da:	e004      	b.n	80056e6 <??add_timer_to_List_1>

080056dc <??add_timer_to_List_0>:
 80056dc:	f7ff ffcc 	bl	8005678 <os_timer_get_current_time>
 80056e0:	2500      	movs	r5, #0
 80056e2:	1904      	adds	r4, r0, r4
 80056e4:	414d      	adcs	r5, r1

080056e6 <??add_timer_to_List_1>:
 80056e6:	8ab1      	ldrh	r1, [r6, #20]
 80056e8:	60b4      	str	r4, [r6, #8]
 80056ea:	f8df 84b4 	ldr.w	r8, [pc, #1204]	; 8005ba0 <??DataTable11_1>
 80056ee:	f365 0100 	bfi	r1, r5, #0, #1
 80056f2:	82b1      	strh	r1, [r6, #20]
 80056f4:	75b7      	strb	r7, [r6, #22]
 80056f6:	f8d8 0000 	ldr.w	r0, [r8]
 80056fa:	f04f 31ff 	mov.w	r1, #4294967295	; 0xffffffff
 80056fe:	f00e feb2 	bl	8014466 <os_rcrsv_mutex_wait>
 8005702:	f8df 1498 	ldr.w	r1, [pc, #1176]	; 8005b9c <??DataTable11>
 8005706:	f8d1 c000 	ldr.w	ip, [r1]
 800570a:	4660      	mov	r0, ip
 800570c:	e001      	b.n	8005712 <??add_timer_to_List_2>

0800570e <??add_timer_to_List_3>:
 800570e:	4607      	mov	r7, r0
 8005710:	6800      	ldr	r0, [r0, #0]

08005712 <??add_timer_to_List_2>:
 8005712:	b140      	cbz	r0, 8005726 <??add_timer_to_List_4>
 8005714:	7d03      	ldrb	r3, [r0, #20]
 8005716:	6882      	ldr	r2, [r0, #8]
 8005718:	f003 0301 	and.w	r3, r3, #1
 800571c:	429d      	cmp	r5, r3
 800571e:	d8f6      	bhi.n	800570e <??add_timer_to_List_3>
 8005720:	bf28      	it	cs
 8005722:	4294      	cmpcs	r4, r2
 8005724:	d2f3      	bcs.n	800570e <??add_timer_to_List_3>

08005726 <??add_timer_to_List_4>:
 8005726:	6030      	str	r0, [r6, #0]
 8005728:	4560      	cmp	r0, ip
 800572a:	bf0c      	ite	eq
 800572c:	600e      	streq	r6, [r1, #0]
 800572e:	603e      	strne	r6, [r7, #0]
 8005730:	f8d8 0000 	ldr.w	r0, [r8]
 8005734:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 8005738:	f00e be9b 	b.w	8014472 <os_rcrsv_mutex_release>

0800573c <os_timer_init>:
 800573c:	f8df 045c 	ldr.w	r0, [pc, #1116]	; 8005b9c <??DataTable11>
 8005740:	2100      	movs	r1, #0
 8005742:	6001      	str	r1, [r0, #0]
 8005744:	6081      	str	r1, [r0, #8]
 8005746:	2105      	movs	r1, #5
 8005748:	f20f 20e5 	addw	r0, pc, #741	; 0x2e5
 800574c:	f00d b8d2 	b.w	80128f4 <intr_hndlr_reg>

08005750 <os_timer_reset>:
 8005750:	4770      	bx	lr

08005752 <os_timer_create>:
 8005752:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8005754:	4605      	mov	r5, r0
 8005756:	460e      	mov	r6, r1
 8005758:	4617      	mov	r7, r2
 800575a:	2050      	movs	r0, #80	; 0x50
 800575c:	f7fa fd64 	bl	8000228 <bsp_debug_gpio_set>
 8005760:	f8df 0444 	ldr.w	r0, [pc, #1092]	; 8005ba8 <??DataTable11_3>
 8005764:	f7ff fd58 	bl	8005218 <os_mem_pool_alloc>
 8005768:	0004      	movs	r4, r0
 800576a:	d02e      	beq.n	80057ca <??os_timer_create_0>
 800576c:	0028      	movs	r0, r5
 800576e:	d028      	beq.n	80057c2 <??os_timer_create_1>
 8005770:	2002      	movs	r0, #2
 8005772:	75a0      	strb	r0, [r4, #22]
 8005774:	2000      	movs	r0, #0
 8005776:	7de1      	ldrb	r1, [r4, #23]
 8005778:	6060      	str	r0, [r4, #4]
 800577a:	7d20      	ldrb	r0, [r4, #20]
 800577c:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 8005780:	f006 0601 	and.w	r6, r6, #1
 8005784:	430e      	orrs	r6, r1
 8005786:	2100      	movs	r1, #0
 8005788:	f000 0001 	and.w	r0, r0, #1
 800578c:	75e6      	strb	r6, [r4, #23]
 800578e:	60e5      	str	r5, [r4, #12]
 8005790:	f8df 540c 	ldr.w	r5, [pc, #1036]	; 8005ba0 <??DataTable11_1>
 8005794:	6127      	str	r7, [r4, #16]
 8005796:	60a1      	str	r1, [r4, #8]
 8005798:	82a0      	strh	r0, [r4, #20]
 800579a:	6021      	str	r1, [r4, #0]
 800579c:	6828      	ldr	r0, [r5, #0]
 800579e:	f04f 31ff 	mov.w	r1, #4294967295	; 0xffffffff
 80057a2:	f8df 6408 	ldr.w	r6, [pc, #1032]	; 8005bac <??DataTable11_4>
 80057a6:	f00e fe5e 	bl	8014466 <os_rcrsv_mutex_wait>
 80057aa:	6830      	ldr	r0, [r6, #0]
 80057ac:	b928      	cbnz	r0, 80057ba <??os_timer_create_2>
 80057ae:	f20f 2081 	addw	r0, pc, #641	; 0x281
 80057b2:	f010 ff09 	bl	80165c8 <hw_ll_timer_init>
 80057b6:	2001      	movs	r0, #1
 80057b8:	6030      	str	r0, [r6, #0]

080057ba <??os_timer_create_2>:
 80057ba:	6828      	ldr	r0, [r5, #0]
 80057bc:	f00e fe59 	bl	8014472 <os_rcrsv_mutex_release>
 80057c0:	e003      	b.n	80057ca <??os_timer_create_0>

080057c2 <??os_timer_create_1>:
 80057c2:	4620      	mov	r0, r4
 80057c4:	f7ff fd2a 	bl	800521c <os_mem_pool_free>
 80057c8:	2400      	movs	r4, #0

080057ca <??os_timer_create_0>:
 80057ca:	2050      	movs	r0, #80	; 0x50
 80057cc:	f7fa fd2e 	bl	800022c <bsp_debug_gpio_clear>
 80057d0:	4620      	mov	r0, r4
 80057d2:	bdf2      	pop	{r1, r4, r5, r6, r7, pc}

080057d4 <os_timer_set_prio>:
 80057d4:	b538      	push	{r3, r4, r5, lr}
 80057d6:	0004      	movs	r4, r0
 80057d8:	460d      	mov	r5, r1
 80057da:	bf18      	it	ne
 80057dc:	2001      	movne	r0, #1
 80057de:	f7fa fcf7 	bl	80001d0 <bsp_assert>
 80057e2:	7de0      	ldrb	r0, [r4, #23]
 80057e4:	f365 0041 	bfi	r0, r5, #1, #1
 80057e8:	75e0      	strb	r0, [r4, #23]
 80057ea:	bd31      	pop	{r0, r4, r5, pc}

080057ec <os_timer_is_any_near_sw_timer_hg_prio>:
 80057ec:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 80057f0:	f8df 53a8 	ldr.w	r5, [pc, #936]	; 8005b9c <??DataTable11>
 80057f4:	682c      	ldr	r4, [r5, #0]
 80057f6:	f8df 83ac 	ldr.w	r8, [pc, #940]	; 8005ba4 <??DataTable11_2>
 80057fa:	f8df 73a4 	ldr.w	r7, [pc, #932]	; 8005ba0 <??DataTable11_1>
 80057fe:	f04f 0900 	mov.w	r9, #0
 8005802:	e000      	b.n	8005806 <??os_timer_is_any_near_sw_timer_hg_prio_0>

08005804 <??os_timer_is_any_near_sw_timer_hg_prio_1>:
 8005804:	6824      	ldr	r4, [r4, #0]

08005806 <??os_timer_is_any_near_sw_timer_hg_prio_0>:
 8005806:	b36c      	cbz	r4, 8005864 <??os_timer_is_any_near_sw_timer_hg_prio_2>
 8005808:	f010 ff00 	bl	801660c <get_current_time>
 800580c:	4606      	mov	r6, r0
 800580e:	6838      	ldr	r0, [r7, #0]
 8005810:	f04f 31ff 	mov.w	r1, #4294967295	; 0xffffffff
 8005814:	f00e fe27 	bl	8014466 <os_rcrsv_mutex_wait>
 8005818:	6868      	ldr	r0, [r5, #4]
 800581a:	4286      	cmp	r6, r0
 800581c:	d20b      	bcs.n	8005836 <??os_timer_is_any_near_sw_timer_hg_prio_3>
 800581e:	6828      	ldr	r0, [r5, #0]
 8005820:	f64f 72fe 	movw	r2, #65534	; 0xfffe
 8005824:	e003      	b.n	800582e <??os_timer_is_any_near_sw_timer_hg_prio_4>

08005826 <??os_timer_is_any_near_sw_timer_hg_prio_5>:
 8005826:	8a81      	ldrh	r1, [r0, #20]
 8005828:	4011      	ands	r1, r2
 800582a:	8281      	strh	r1, [r0, #20]
 800582c:	6800      	ldr	r0, [r0, #0]

0800582e <??os_timer_is_any_near_sw_timer_hg_prio_4>:
 800582e:	2800      	cmp	r0, #0
 8005830:	d1f9      	bne.n	8005826 <??os_timer_is_any_near_sw_timer_hg_prio_5>
 8005832:	f8c8 0000 	str.w	r0, [r8]

08005836 <??os_timer_is_any_near_sw_timer_hg_prio_3>:
 8005836:	6838      	ldr	r0, [r7, #0]
 8005838:	f00e fe1b 	bl	8014472 <os_rcrsv_mutex_release>
 800583c:	606e      	str	r6, [r5, #4]
 800583e:	7d23      	ldrb	r3, [r4, #20]
 8005840:	1db0      	adds	r0, r6, #6
 8005842:	f149 0100 	adc.w	r1, r9, #0
 8005846:	f003 0301 	and.w	r3, r3, #1
 800584a:	68a2      	ldr	r2, [r4, #8]
 800584c:	4299      	cmp	r1, r3
 800584e:	d309      	bcc.n	8005864 <??os_timer_is_any_near_sw_timer_hg_prio_2>
 8005850:	d801      	bhi.n	8005856 <??os_timer_is_any_near_sw_timer_hg_prio_6>
 8005852:	4290      	cmp	r0, r2
 8005854:	d306      	bcc.n	8005864 <??os_timer_is_any_near_sw_timer_hg_prio_2>

08005856 <??os_timer_is_any_near_sw_timer_hg_prio_6>:
 8005856:	7de0      	ldrb	r0, [r4, #23]
 8005858:	f3c0 0040 	ubfx	r0, r0, #1, #1
 800585c:	2800      	cmp	r0, #0
 800585e:	d0d1      	beq.n	8005804 <??os_timer_is_any_near_sw_timer_hg_prio_1>
 8005860:	e8bd 83f2 	ldmia.w	sp!, {r1, r4, r5, r6, r7, r8, r9, pc}

08005864 <??os_timer_is_any_near_sw_timer_hg_prio_2>:
 8005864:	2000      	movs	r0, #0
 8005866:	e8bd 83f2 	ldmia.w	sp!, {r1, r4, r5, r6, r7, r8, r9, pc}

0800586a <os_timer_start_in_us>:
 800586a:	b478      	push	{r3, r4, r5, r6}
 800586c:	008a      	lsls	r2, r1, #2
 800586e:	f8df 5340 	ldr.w	r5, [pc, #832]	; 8005bb0 <??DataTable11_5>
 8005872:	fba2 5305 	umull	r5, r3, r2, r5
 8005876:	8a86      	ldrh	r6, [r0, #20]
 8005878:	f64f 0401 	movw	r4, #63489	; 0xf801
 800587c:	099a      	lsrs	r2, r3, #6
 800587e:	ebc2 1342 	rsb	r3, r2, r2, lsl #5
 8005882:	4026      	ands	r6, r4
 8005884:	1ac9      	subs	r1, r1, r3
 8005886:	eba1 0192 	sub.w	r1, r1, r2, lsr #2
 800588a:	004d      	lsls	r5, r1, #1
 800588c:	f005 053e 	and.w	r5, r5, #62	; 0x3e
 8005890:	432e      	orrs	r6, r5
 8005892:	8286      	strh	r6, [r0, #20]
 8005894:	4611      	mov	r1, r2
 8005896:	bc74      	pop	{r2, r4, r5, r6}

08005898 <os_timer_start>:
 8005898:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800589c:	f04f 0800 	mov.w	r8, #0
 80058a0:	0004      	movs	r4, r0
 80058a2:	460e      	mov	r6, r1
 80058a4:	4645      	mov	r5, r8
 80058a6:	bf1c      	itt	ne
 80058a8:	7da0      	ldrbne	r0, [r4, #22]
 80058aa:	2800      	cmpne	r0, #0
 80058ac:	d028      	beq.n	8005900 <??os_timer_start_0>
 80058ae:	4fbc      	ldr	r7, [pc, #752]	; (8005ba0 <??DataTable11_1>)
 80058b0:	6838      	ldr	r0, [r7, #0]
 80058b2:	f04f 31ff 	mov.w	r1, #4294967295	; 0xffffffff
 80058b6:	f00e fdd6 	bl	8014466 <os_rcrsv_mutex_wait>
 80058ba:	f7ff feb9 	bl	8005630 <remove_stopped_and_expired_timers>
 80058be:	7da0      	ldrb	r0, [r4, #22]
 80058c0:	2801      	cmp	r0, #1
 80058c2:	bf08      	it	eq
 80058c4:	2501      	moveq	r5, #1
 80058c6:	4631      	mov	r1, r6
 80058c8:	4620      	mov	r0, r4
 80058ca:	f7ff fef9 	bl	80056c0 <add_timer_to_List>
 80058ce:	4eb3      	ldr	r6, [pc, #716]	; (8005b9c <??DataTable11>)
 80058d0:	68b1      	ldr	r1, [r6, #8]
 80058d2:	b121      	cbz	r1, 80058de <??os_timer_start_1>
 80058d4:	6830      	ldr	r0, [r6, #0]
 80058d6:	42a0      	cmp	r0, r4
 80058d8:	bf04      	itt	eq
 80058da:	2001      	moveq	r0, #1
 80058dc:	4788      	blxeq	r1

080058de <??os_timer_start_1>:
 80058de:	6830      	ldr	r0, [r6, #0]
 80058e0:	42a0      	cmp	r0, r4
 80058e2:	d109      	bne.n	80058f8 <??os_timer_start_2>
 80058e4:	b115      	cbz	r5, 80058ec <??os_timer_start_3>
 80058e6:	7dc1      	ldrb	r1, [r0, #23]
 80058e8:	07ca      	lsls	r2, r1, #31
 80058ea:	d405      	bmi.n	80058f8 <??os_timer_start_2>

080058ec <??os_timer_start_3>:
 80058ec:	7d01      	ldrb	r1, [r0, #20]
 80058ee:	6880      	ldr	r0, [r0, #8]
 80058f0:	f001 0101 	and.w	r1, r1, #1
 80058f4:	f010 fe74 	bl	80165e0 <hw_ll_timer_start>

080058f8 <??os_timer_start_2>:
 80058f8:	6838      	ldr	r0, [r7, #0]
 80058fa:	f00e fdba 	bl	8014472 <os_rcrsv_mutex_release>
 80058fe:	e001      	b.n	8005904 <??os_timer_start_4>

08005900 <??os_timer_start_0>:
 8005900:	f04f 38ff 	mov.w	r8, #4294967295	; 0xffffffff

08005904 <??os_timer_start_4>:
 8005904:	4640      	mov	r0, r8
 8005906:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0800590a <os_timer_stop>:
 800590a:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800590e:	4604      	mov	r4, r0
 8005910:	2500      	movs	r5, #0
 8005912:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 8005916:	2c00      	cmp	r4, #0
 8005918:	d05b      	beq.n	80059d2 <??os_timer_stop_0>
 800591a:	7da0      	ldrb	r0, [r4, #22]
 800591c:	b908      	cbnz	r0, 8005922 <??os_timer_stop_1>
 800591e:	2501      	movs	r5, #1
 8005920:	e004      	b.n	800592c <??os_timer_stop_2>

08005922 <??os_timer_stop_1>:
 8005922:	2801      	cmp	r0, #1
 8005924:	d102      	bne.n	800592c <??os_timer_stop_2>
 8005926:	7de0      	ldrb	r0, [r4, #23]
 8005928:	07c1      	lsls	r1, r0, #31
 800592a:	d501      	bpl.n	8005930 <??os_timer_stop_3>

0800592c <??os_timer_stop_2>:
 800592c:	2002      	movs	r0, #2
 800592e:	75a0      	strb	r0, [r4, #22]

08005930 <??os_timer_stop_3>:
 8005930:	7d20      	ldrb	r0, [r4, #20]
 8005932:	2100      	movs	r1, #0
 8005934:	f8df 8268 	ldr.w	r8, [pc, #616]	; 8005ba0 <??DataTable11_1>
 8005938:	f000 0001 	and.w	r0, r0, #1
 800593c:	60a1      	str	r1, [r4, #8]
 800593e:	82a0      	strh	r0, [r4, #20]
 8005940:	f7ff fe76 	bl	8005630 <remove_stopped_and_expired_timers>
 8005944:	f8d8 0000 	ldr.w	r0, [r8]
 8005948:	f04f 31ff 	mov.w	r1, #4294967295	; 0xffffffff
 800594c:	4f93      	ldr	r7, [pc, #588]	; (8005b9c <??DataTable11>)
 800594e:	f00e fd8a 	bl	8014466 <os_rcrsv_mutex_wait>
 8005952:	68be      	ldr	r6, [r7, #8]
 8005954:	b146      	cbz	r6, 8005968 <??os_timer_stop_4>
 8005956:	f000 f919 	bl	8005b8c <os_timer_get_active_sw_timers_number>
 800595a:	2801      	cmp	r0, #1
 800595c:	bf08      	it	eq
 800595e:	2002      	moveq	r0, #2
 8005960:	d001      	beq.n	8005966 <??os_timer_stop_5>
 8005962:	6838      	ldr	r0, [r7, #0]
 8005964:	b900      	cbnz	r0, 8005968 <??os_timer_stop_4>

08005966 <??os_timer_stop_5>:
 8005966:	47b0      	blx	r6

08005968 <??os_timer_stop_4>:
 8005968:	6838      	ldr	r0, [r7, #0]
 800596a:	b358      	cbz	r0, 80059c4 <??os_timer_stop_6>
 800596c:	6821      	ldr	r1, [r4, #0]
 800596e:	4288      	cmp	r0, r1
 8005970:	d12a      	bne.n	80059c8 <??os_timer_stop_7>
 8005972:	b34d      	cbz	r5, 80059c8 <??os_timer_stop_7>
 8005974:	7dc2      	ldrb	r2, [r0, #23]
 8005976:	8a81      	ldrh	r1, [r0, #20]
 8005978:	07d3      	lsls	r3, r2, #31
 800597a:	d51d      	bpl.n	80059b8 <??os_timer_stop_8>
 800597c:	0acb      	lsrs	r3, r1, #11
 800597e:	f3c1 0444 	ubfx	r4, r1, #1, #5
 8005982:	f3c1 1584 	ubfx	r5, r1, #6, #5
 8005986:	fb05 3404 	mla	r4, r5, r4, r3
 800598a:	2c1f      	cmp	r4, #31
 800598c:	db14      	blt.n	80059b8 <??os_timer_stop_8>
 800598e:	060a      	lsls	r2, r1, #24
 8005990:	0e52      	lsrs	r2, r2, #25
 8005992:	098c      	lsrs	r4, r1, #6
 8005994:	fb04 3302 	mla	r3, r4, r2, r3
 8005998:	6882      	ldr	r2, [r0, #8]
 800599a:	3b1f      	subs	r3, #31
 800599c:	f363 21cf 	bfi	r1, r3, #11, #5
 80059a0:	8281      	strh	r1, [r0, #20]
 80059a2:	8a81      	ldrh	r1, [r0, #20]
 80059a4:	f64f 033f 	movw	r3, #63551	; 0xf83f
 80059a8:	1c52      	adds	r2, r2, #1
 80059aa:	4019      	ands	r1, r3
 80059ac:	6082      	str	r2, [r0, #8]
 80059ae:	8281      	strh	r1, [r0, #20]
 80059b0:	f001 0101 	and.w	r1, r1, #1
 80059b4:	4610      	mov	r0, r2
 80059b6:	e002      	b.n	80059be <??os_timer_stop_9>

080059b8 <??os_timer_stop_8>:
 80059b8:	f001 0101 	and.w	r1, r1, #1
 80059bc:	6880      	ldr	r0, [r0, #8]

080059be <??os_timer_stop_9>:
 80059be:	f010 fe0f 	bl	80165e0 <hw_ll_timer_start>
 80059c2:	e001      	b.n	80059c8 <??os_timer_stop_7>

080059c4 <??os_timer_stop_6>:
 80059c4:	f010 fe1c 	bl	8016600 <hw_ll_timer_stop>

080059c8 <??os_timer_stop_7>:
 80059c8:	f8d8 0000 	ldr.w	r0, [r8]
 80059cc:	f00e fd51 	bl	8014472 <os_rcrsv_mutex_release>
 80059d0:	2000      	movs	r0, #0

080059d2 <??os_timer_stop_0>:
 80059d2:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

080059d6 <os_timer_free>:
 80059d6:	b510      	push	{r4, lr}
 80059d8:	2400      	movs	r4, #0
 80059da:	b130      	cbz	r0, 80059ea <??os_timer_free_0>
 80059dc:	7d81      	ldrb	r1, [r0, #22]
 80059de:	2900      	cmp	r1, #0
 80059e0:	bf0c      	ite	eq
 80059e2:	f04f 34ff 	moveq.w	r4, #4294967295	; 0xffffffff
 80059e6:	f7ff fc19 	blne	800521c <os_mem_pool_free>

080059ea <??os_timer_free_0>:
 80059ea:	4620      	mov	r0, r4
 80059ec:	bd10      	pop	{r4, pc}

080059ee <os_timer_stop_free>:
 80059ee:	b538      	push	{r3, r4, r5, lr}
 80059f0:	4604      	mov	r4, r0
 80059f2:	6820      	ldr	r0, [r4, #0]
 80059f4:	f7ff ff89 	bl	800590a <os_timer_stop>
 80059f8:	4605      	mov	r5, r0
 80059fa:	6820      	ldr	r0, [r4, #0]
 80059fc:	f7ff ffeb 	bl	80059d6 <os_timer_free>
 8005a00:	2100      	movs	r1, #0
 8005a02:	6021      	str	r1, [r4, #0]
 8005a04:	4328      	orrs	r0, r5
 8005a06:	bd32      	pop	{r1, r4, r5, pc}

08005a08 <os_timer_set>:
 8005a08:	b570      	push	{r4, r5, r6, lr}
 8005a0a:	4604      	mov	r4, r0
 8005a0c:	460d      	mov	r5, r1
 8005a0e:	f00e fd22 	bl	8014456 <os_disable_isr>
 8005a12:	4620      	mov	r0, r4
 8005a14:	f7ff ff79 	bl	800590a <os_timer_stop>
 8005a18:	4606      	mov	r6, r0
 8005a1a:	4629      	mov	r1, r5
 8005a1c:	4620      	mov	r0, r4
 8005a1e:	f7ff ff3b 	bl	8005898 <os_timer_start>
 8005a22:	4604      	mov	r4, r0
 8005a24:	f00e fd19 	bl	801445a <os_enable_isr>
 8005a28:	ea44 0006 	orr.w	r0, r4, r6
 8005a2c:	bd70      	pop	{r4, r5, r6, pc}
	...

08005a30 <osTimerHandler>:
 8005a30:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8005a34:	4f5a      	ldr	r7, [pc, #360]	; (8005ba0 <??DataTable11_1>)
 8005a36:	6838      	ldr	r0, [r7, #0]
 8005a38:	f04f 35ff 	mov.w	r5, #4294967295	; 0xffffffff
 8005a3c:	4629      	mov	r1, r5
 8005a3e:	f00e fd12 	bl	8014466 <os_rcrsv_mutex_wait>
 8005a42:	4e56      	ldr	r6, [pc, #344]	; (8005b9c <??DataTable11>)
 8005a44:	6834      	ldr	r4, [r6, #0]
 8005a46:	46a0      	mov	r8, r4

08005a48 <??osTimerHandler_0>:
 8005a48:	b334      	cbz	r4, 8005a98 <??osTimerHandler_1>
 8005a4a:	f7ff fe15 	bl	8005678 <os_timer_get_current_time>
 8005a4e:	1d82      	adds	r2, r0, #6
 8005a50:	f141 0300 	adc.w	r3, r1, #0
 8005a54:	7d21      	ldrb	r1, [r4, #20]
 8005a56:	68a0      	ldr	r0, [r4, #8]
 8005a58:	f001 0101 	and.w	r1, r1, #1
 8005a5c:	428b      	cmp	r3, r1
 8005a5e:	d31b      	bcc.n	8005a98 <??osTimerHandler_1>
 8005a60:	d801      	bhi.n	8005a66 <??osTimerHandler_2>
 8005a62:	4282      	cmp	r2, r0
 8005a64:	d318      	bcc.n	8005a98 <??osTimerHandler_1>

08005a66 <??osTimerHandler_2>:
 8005a66:	f04f 0c01 	mov.w	ip, #1
 8005a6a:	6920      	ldr	r0, [r4, #16]
 8005a6c:	68e1      	ldr	r1, [r4, #12]
 8005a6e:	f884 c016 	strb.w	ip, [r4, #22]
 8005a72:	f8d4 9000 	ldr.w	r9, [r4]
 8005a76:	4788      	blx	r1
 8005a78:	7de0      	ldrb	r0, [r4, #23]
 8005a7a:	07c1      	lsls	r1, r0, #31
 8005a7c:	d505      	bpl.n	8005a8a <??osTimerHandler_3>
 8005a7e:	8aa0      	ldrh	r0, [r4, #20]
 8005a80:	0981      	lsrs	r1, r0, #6
 8005a82:	1c49      	adds	r1, r1, #1
 8005a84:	f361 108a 	bfi	r0, r1, #6, #5
 8005a88:	82a0      	strh	r0, [r4, #20]

08005a8a <??osTimerHandler_3>:
 8005a8a:	6824      	ldr	r4, [r4, #0]
 8005a8c:	454c      	cmp	r4, r9
 8005a8e:	bf1c      	itt	ne
 8005a90:	464c      	movne	r4, r9
 8005a92:	f8d6 8000 	ldrne.w	r8, [r6]
 8005a96:	e7d7      	b.n	8005a48 <??osTimerHandler_0>

08005a98 <??osTimerHandler_1>:
 8005a98:	6838      	ldr	r0, [r7, #0]
 8005a9a:	f00e fcea 	bl	8014472 <os_rcrsv_mutex_release>
 8005a9e:	f7ff fdc7 	bl	8005630 <remove_stopped_and_expired_timers>
 8005aa2:	6838      	ldr	r0, [r7, #0]
 8005aa4:	4629      	mov	r1, r5
 8005aa6:	f00e fcde 	bl	8014466 <os_rcrsv_mutex_wait>
 8005aaa:	6830      	ldr	r0, [r6, #0]
 8005aac:	4580      	cmp	r8, r0
 8005aae:	d010      	beq.n	8005ad2 <??osTimerHandler_4>
 8005ab0:	4640      	mov	r0, r8
 8005ab2:	e009      	b.n	8005ac8 <??osTimerHandler_5>

08005ab4 <??osTimerHandler_6>:
 8005ab4:	7dc2      	ldrb	r2, [r0, #23]
 8005ab6:	6804      	ldr	r4, [r0, #0]
 8005ab8:	07d3      	lsls	r3, r2, #31
 8005aba:	d504      	bpl.n	8005ac6 <??osTimerHandler_7>
 8005abc:	2901      	cmp	r1, #1
 8005abe:	bf04      	itt	eq
 8005ac0:	6841      	ldreq	r1, [r0, #4]
 8005ac2:	f7ff fdfd 	bleq	80056c0 <add_timer_to_List>

08005ac6 <??osTimerHandler_7>:
 8005ac6:	4620      	mov	r0, r4

08005ac8 <??osTimerHandler_5>:
 8005ac8:	2800      	cmp	r0, #0
 8005aca:	bf1c      	itt	ne
 8005acc:	7d81      	ldrbne	r1, [r0, #22]
 8005ace:	2900      	cmpne	r1, #0
 8005ad0:	d1f0      	bne.n	8005ab4 <??osTimerHandler_6>

08005ad2 <??osTimerHandler_4>:
 8005ad2:	6834      	ldr	r4, [r6, #0]
 8005ad4:	2c00      	cmp	r4, #0
 8005ad6:	d046      	beq.n	8005b66 <??osTimerHandler_8>
 8005ad8:	2094      	movs	r0, #148	; 0x94
 8005ada:	f7fa fba5 	bl	8000228 <bsp_debug_gpio_set>
 8005ade:	6830      	ldr	r0, [r6, #0]
 8005ae0:	4d30      	ldr	r5, [pc, #192]	; (8005ba4 <??DataTable11_2>)
 8005ae2:	2800      	cmp	r0, #0
 8005ae4:	d03b      	beq.n	8005b5e <??osTimerHandler_9>

08005ae6 <??osTimerHandler_10>:
 8005ae6:	f7ff fdc7 	bl	8005678 <os_timer_get_current_time>
 8005aea:	682a      	ldr	r2, [r5, #0]
 8005aec:	2300      	movs	r3, #0
 8005aee:	f112 0a03 	adds.w	sl, r2, #3
 8005af2:	f143 0b00 	adc.w	fp, r3, #0
 8005af6:	458b      	cmp	fp, r1
 8005af8:	d8f5      	bhi.n	8005ae6 <??osTimerHandler_10>
 8005afa:	bf28      	it	cs
 8005afc:	4582      	cmpcs	sl, r0
 8005afe:	d2f2      	bcs.n	8005ae6 <??osTimerHandler_10>
 8005b00:	7da0      	ldrb	r0, [r4, #22]
 8005b02:	6831      	ldr	r1, [r6, #0]
 8005b04:	b108      	cbz	r0, 8005b0a <??osTimerHandler_11>
 8005b06:	000c      	movs	r4, r1
 8005b08:	d029      	beq.n	8005b5e <??osTimerHandler_9>

08005b0a <??osTimerHandler_11>:
 8005b0a:	68a0      	ldr	r0, [r4, #8]
 8005b0c:	6889      	ldr	r1, [r1, #8]
 8005b0e:	4281      	cmp	r1, r0
 8005b10:	d325      	bcc.n	8005b5e <??osTimerHandler_9>
 8005b12:	7de2      	ldrb	r2, [r4, #23]
 8005b14:	07d1      	lsls	r1, r2, #31
 8005b16:	d51c      	bpl.n	8005b52 <??osTimerHandler_12>
 8005b18:	8aa1      	ldrh	r1, [r4, #20]
 8005b1a:	f3c1 0244 	ubfx	r2, r1, #1, #5
 8005b1e:	f3c1 1384 	ubfx	r3, r1, #6, #5
 8005b22:	0ac9      	lsrs	r1, r1, #11
 8005b24:	fb03 1102 	mla	r1, r3, r2, r1
 8005b28:	291f      	cmp	r1, #31
 8005b2a:	db12      	blt.n	8005b52 <??osTimerHandler_12>
 8005b2c:	1c40      	adds	r0, r0, #1
 8005b2e:	60a0      	str	r0, [r4, #8]
 8005b30:	8aa0      	ldrh	r0, [r4, #20]
 8005b32:	f3c0 010a 	ubfx	r1, r0, #0, #11
 8005b36:	0602      	lsls	r2, r0, #24
 8005b38:	0983      	lsrs	r3, r0, #6
 8005b3a:	0e52      	lsrs	r2, r2, #25
 8005b3c:	0ac0      	lsrs	r0, r0, #11
 8005b3e:	fb03 0002 	mla	r0, r3, r2, r0
 8005b42:	f1a0 021f 	sub.w	r2, r0, #31
 8005b46:	ea41 21c2 	orr.w	r1, r1, r2, lsl #11
 8005b4a:	f64f 003f 	movw	r0, #63551	; 0xf83f
 8005b4e:	4001      	ands	r1, r0
 8005b50:	82a1      	strh	r1, [r4, #20]

08005b52 <??osTimerHandler_12>:
 8005b52:	7d21      	ldrb	r1, [r4, #20]
 8005b54:	68a0      	ldr	r0, [r4, #8]
 8005b56:	f001 0101 	and.w	r1, r1, #1
 8005b5a:	f010 fd41 	bl	80165e0 <hw_ll_timer_start>

08005b5e <??osTimerHandler_9>:
 8005b5e:	2094      	movs	r0, #148	; 0x94
 8005b60:	f7fa fb64 	bl	800022c <bsp_debug_gpio_clear>
 8005b64:	2500      	movs	r5, #0

08005b66 <??osTimerHandler_8>:
 8005b66:	68b4      	ldr	r4, [r6, #8]
 8005b68:	b144      	cbz	r4, 8005b7c <??osTimerHandler_13>
 8005b6a:	f000 f80f 	bl	8005b8c <os_timer_get_active_sw_timers_number>
 8005b6e:	2801      	cmp	r0, #1
 8005b70:	bf08      	it	eq
 8005b72:	2002      	moveq	r0, #2
 8005b74:	d001      	beq.n	8005b7a <??osTimerHandler_14>
 8005b76:	6830      	ldr	r0, [r6, #0]
 8005b78:	b900      	cbnz	r0, 8005b7c <??osTimerHandler_13>

08005b7a <??osTimerHandler_14>:
 8005b7a:	47a0      	blx	r4

08005b7c <??osTimerHandler_13>:
 8005b7c:	6838      	ldr	r0, [r7, #0]
 8005b7e:	f00e fc78 	bl	8014472 <os_rcrsv_mutex_release>
 8005b82:	4628      	mov	r0, r5
 8005b84:	e8bd 8ff2 	ldmia.w	sp!, {r1, r4, r5, r6, r7, r8, r9, sl, fp, pc}

08005b88 <os_get_tmr_state>:
 8005b88:	7d80      	ldrb	r0, [r0, #22]
 8005b8a:	4770      	bx	lr

08005b8c <os_timer_get_active_sw_timers_number>:
 8005b8c:	2000      	movs	r0, #0
 8005b8e:	4903      	ldr	r1, [pc, #12]	; (8005b9c <??DataTable11>)
 8005b90:	e000      	b.n	8005b94 <??os_timer_get_active_sw_timers_number_0>

08005b92 <??os_timer_get_active_sw_timers_number_1>:
 8005b92:	1c40      	adds	r0, r0, #1

08005b94 <??os_timer_get_active_sw_timers_number_0>:
 8005b94:	6809      	ldr	r1, [r1, #0]
 8005b96:	2900      	cmp	r1, #0
 8005b98:	d1fb      	bne.n	8005b92 <??os_timer_get_active_sw_timers_number_1>
 8005b9a:	4770      	bx	lr

08005b9c <??DataTable11>:
 8005b9c:	06f4 2000                                   ... 

08005ba0 <??DataTable11_1>:
 8005ba0:	18c0 2000                                   ... 

08005ba4 <??DataTable11_2>:
 8005ba4:	0850 2000                                   P.. 

08005ba8 <??DataTable11_3>:
 8005ba8:	16fc 2000                                   ... 

08005bac <??DataTable11_4>:
 8005bac:	0700 2000                                   ... 

08005bb0 <??DataTable11_5>:
 8005bb0:	6e98 8312                                   .n..

08005bb4 <ll_tx_pwr_if_tx_power_params_init>:
 8005bb4:	b510      	push	{r4, lr}
 8005bb6:	4c85      	ldr	r4, [pc, #532]	; (8005dcc <??DataTable9>)
 8005bb8:	2208      	movs	r2, #8
 8005bba:	2100      	movs	r1, #0
 8005bbc:	4620      	mov	r0, r4
 8005bbe:	f009 f814 	bl	800ebea <ble_memset>
 8005bc2:	2000      	movs	r0, #0
 8005bc4:	f000 f80d 	bl	8005be2 <ll_tx_pwr_if_select_tx_power_mode>
 8005bc8:	2000      	movs	r0, #0
 8005bca:	6120      	str	r0, [r4, #16]
 8005bcc:	2202      	movs	r2, #2
 8005bce:	2100      	movs	r1, #0
 8005bd0:	f104 0008 	add.w	r0, r4, #8
 8005bd4:	f009 f809 	bl	800ebea <ble_memset>
 8005bd8:	2000      	movs	r0, #0
 8005bda:	8120      	strh	r0, [r4, #8]
 8005bdc:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8005be0:	e021      	b.n	8005c26 <ll_tx_pwr_if_set_initial_tx_power_levels>

08005be2 <ll_tx_pwr_if_select_tx_power_mode>:
 8005be2:	b5b0      	push	{r4, r5, r7, lr}
 8005be4:	497a      	ldr	r1, [pc, #488]	; (8005dd0 <??DataTable9_1>)
 8005be6:	4d7b      	ldr	r5, [pc, #492]	; (8005dd4 <??DataTable9_2>)
 8005be8:	2400      	movs	r4, #0
 8005bea:	2300      	movs	r3, #0
 8005bec:	460a      	mov	r2, r1
 8005bee:	782d      	ldrb	r5, [r5, #0]
 8005bf0:	e001      	b.n	8005bf6 <??ll_tx_pwr_if_select_tx_power_mode_0>

08005bf2 <??ll_tx_pwr_if_select_tx_power_mode_1>:
 8005bf2:	1c5b      	adds	r3, r3, #1
 8005bf4:	3208      	adds	r2, #8

08005bf6 <??ll_tx_pwr_if_select_tx_power_mode_0>:
 8005bf6:	42ab      	cmp	r3, r5
 8005bf8:	da06      	bge.n	8005c08 <??ll_tx_pwr_if_select_tx_power_mode_2>
 8005bfa:	79d7      	ldrb	r7, [r2, #7]
 8005bfc:	42b8      	cmp	r0, r7
 8005bfe:	d1f8      	bne.n	8005bf2 <??ll_tx_pwr_if_select_tx_power_mode_1>
 8005c00:	2208      	movs	r2, #8
 8005c02:	eb01 01c3 	add.w	r1, r1, r3, lsl #3
 8005c06:	e002      	b.n	8005c0e <??ll_tx_pwr_if_select_tx_power_mode_3>

08005c08 <??ll_tx_pwr_if_select_tx_power_mode_2>:
 8005c08:	d104      	bne.n	8005c14 <??ll_tx_pwr_if_select_tx_power_mode_4>
 8005c0a:	24ff      	movs	r4, #255	; 0xff
 8005c0c:	2208      	movs	r2, #8

08005c0e <??ll_tx_pwr_if_select_tx_power_mode_3>:
 8005c0e:	486f      	ldr	r0, [pc, #444]	; (8005dcc <??DataTable9>)
 8005c10:	f008 ff9a 	bl	800eb48 <ble_memcpy>

08005c14 <??ll_tx_pwr_if_select_tx_power_mode_4>:
 8005c14:	486d      	ldr	r0, [pc, #436]	; (8005dcc <??DataTable9>)
 8005c16:	7981      	ldrb	r1, [r0, #6]
 8005c18:	7940      	ldrb	r0, [r0, #5]
 8005c1a:	f008 fcf7 	bl	800e60c <llhwc_phy_patch_tx_power_mode_phy_reg>
 8005c1e:	f000 f802 	bl	8005c26 <ll_tx_pwr_if_set_initial_tx_power_levels>
 8005c22:	4620      	mov	r0, r4
 8005c24:	bdb0      	pop	{r4, r5, r7, pc}

08005c26 <ll_tx_pwr_if_set_initial_tx_power_levels>:
 8005c26:	4869      	ldr	r0, [pc, #420]	; (8005dcc <??DataTable9>)
 8005c28:	7901      	ldrb	r1, [r0, #4]
 8005c2a:	6802      	ldr	r2, [r0, #0]
 8005c2c:	1e49      	subs	r1, r1, #1
 8005c2e:	b2c9      	uxtb	r1, r1
 8005c30:	eb02 0181 	add.w	r1, r2, r1, lsl #2
 8005c34:	78cb      	ldrb	r3, [r1, #3]
 8005c36:	7283      	strb	r3, [r0, #10]
 8005c38:	78ca      	ldrb	r2, [r1, #3]
 8005c3a:	72c2      	strb	r2, [r0, #11]
 8005c3c:	78cb      	ldrb	r3, [r1, #3]
 8005c3e:	7303      	strb	r3, [r0, #12]
 8005c40:	78c9      	ldrb	r1, [r1, #3]
 8005c42:	7341      	strb	r1, [r0, #13]
 8005c44:	4770      	bx	lr
	...

08005c48 <ll_tx_pwr_if_get_initial_tx_power>:
 8005c48:	4601      	mov	r1, r0
 8005c4a:	2000      	movs	r0, #0
 8005c4c:	1e49      	subs	r1, r1, #1
 8005c4e:	2903      	cmp	r1, #3
 8005c50:	d812      	bhi.n	8005c78 <??ll_tx_pwr_if_get_initial_tx_power_1>
 8005c52:	e8df f001 	tbb	[pc, r1]

08005c56 <??ll_tx_pwr_if_get_initial_tx_power_0>:
 8005c56:	0602 0e0a                                   ....

08005c5a <??ll_tx_pwr_if_get_initial_tx_power_2>:
 8005c5a:	485c      	ldr	r0, [pc, #368]	; (8005dcc <??DataTable9>)
 8005c5c:	f990 000a 	ldrsb.w	r0, [r0, #10]
 8005c60:	4770      	bx	lr

08005c62 <??ll_tx_pwr_if_get_initial_tx_power_3>:
 8005c62:	485a      	ldr	r0, [pc, #360]	; (8005dcc <??DataTable9>)
 8005c64:	f990 000b 	ldrsb.w	r0, [r0, #11]
 8005c68:	4770      	bx	lr

08005c6a <??ll_tx_pwr_if_get_initial_tx_power_4>:
 8005c6a:	4858      	ldr	r0, [pc, #352]	; (8005dcc <??DataTable9>)
 8005c6c:	f990 000d 	ldrsb.w	r0, [r0, #13]
 8005c70:	4770      	bx	lr

08005c72 <??ll_tx_pwr_if_get_initial_tx_power_5>:
 8005c72:	4856      	ldr	r0, [pc, #344]	; (8005dcc <??DataTable9>)
 8005c74:	f990 000c 	ldrsb.w	r0, [r0, #12]

08005c78 <??ll_tx_pwr_if_get_initial_tx_power_1>:
 8005c78:	4770      	bx	lr

08005c7a <ll_tx_pwr_if_get_min_max_supprtd_tx_power_levels>:
 8005c7a:	b430      	push	{r4, r5}
 8005c7c:	4a53      	ldr	r2, [pc, #332]	; (8005dcc <??DataTable9>)
 8005c7e:	6814      	ldr	r4, [r2, #0]
 8005c80:	7913      	ldrb	r3, [r2, #4]
 8005c82:	78e5      	ldrb	r5, [r4, #3]
 8005c84:	7005      	strb	r5, [r0, #0]
 8005c86:	6810      	ldr	r0, [r2, #0]
 8005c88:	1e5b      	subs	r3, r3, #1
 8005c8a:	b2db      	uxtb	r3, r3
 8005c8c:	eb00 0283 	add.w	r2, r0, r3, lsl #2
 8005c90:	78d3      	ldrb	r3, [r2, #3]
 8005c92:	700b      	strb	r3, [r1, #0]
 8005c94:	bc30      	pop	{r4, r5}
 8005c96:	4770      	bx	lr

08005c98 <ll_tx_pwr_if_get_tx_pwr_table_offset>:
 8005c98:	b430      	push	{r4, r5}
 8005c9a:	4602      	mov	r2, r0
 8005c9c:	4b4b      	ldr	r3, [pc, #300]	; (8005dcc <??DataTable9>)
 8005c9e:	7918      	ldrb	r0, [r3, #4]
 8005ca0:	681b      	ldr	r3, [r3, #0]
 8005ca2:	f993 4003 	ldrsb.w	r4, [r3, #3]
 8005ca6:	1e40      	subs	r0, r0, #1
 8005ca8:	b2c0      	uxtb	r0, r0
 8005caa:	1cdd      	adds	r5, r3, #3
 8005cac:	f915 5020 	ldrsb.w	r5, [r5, r0, lsl #2]
 8005cb0:	42a2      	cmp	r2, r4
 8005cb2:	bfb8      	it	lt
 8005cb4:	4625      	movlt	r5, r4
 8005cb6:	db02      	blt.n	8005cbe <??ll_tx_pwr_if_get_tx_pwr_table_offset_0>
 8005cb8:	4295      	cmp	r5, r2
 8005cba:	bfc8      	it	gt
 8005cbc:	4615      	movgt	r5, r2

08005cbe <??ll_tx_pwr_if_get_tx_pwr_table_offset_0>:
 8005cbe:	1b2a      	subs	r2, r5, r4
 8005cc0:	b2d2      	uxtb	r2, r2
 8005cc2:	4290      	cmp	r0, r2
 8005cc4:	bfc8      	it	gt
 8005cc6:	4610      	movgt	r0, r2
 8005cc8:	2901      	cmp	r1, #1
 8005cca:	d10e      	bne.n	8005cea <??ll_tx_pwr_if_get_tx_pwr_table_offset_1>
 8005ccc:	1cd9      	adds	r1, r3, #3
 8005cce:	f911 2020 	ldrsb.w	r2, [r1, r0, lsl #2]
 8005cd2:	4295      	cmp	r5, r2
 8005cd4:	d009      	beq.n	8005cea <??ll_tx_pwr_if_get_tx_pwr_table_offset_1>

08005cd6 <??ll_tx_pwr_if_get_tx_pwr_table_offset_2>:
 8005cd6:	b140      	cbz	r0, 8005cea <??ll_tx_pwr_if_get_tx_pwr_table_offset_1>
 8005cd8:	1e40      	subs	r0, r0, #1
 8005cda:	1cda      	adds	r2, r3, #3
 8005cdc:	b2c0      	uxtb	r0, r0
 8005cde:	f912 5020 	ldrsb.w	r5, [r2, r0, lsl #2]
 8005ce2:	1821      	adds	r1, r4, r0
 8005ce4:	b249      	sxtb	r1, r1
 8005ce6:	42a9      	cmp	r1, r5
 8005ce8:	d1f5      	bne.n	8005cd6 <??ll_tx_pwr_if_get_tx_pwr_table_offset_2>

08005cea <??ll_tx_pwr_if_get_tx_pwr_table_offset_1>:
 8005cea:	bc30      	pop	{r4, r5}
 8005cec:	4770      	bx	lr

08005cee <ll_tx_pwr_if_epa_init>:
 8005cee:	2801      	cmp	r0, #1
 8005cf0:	d103      	bne.n	8005cfa <??ll_tx_pwr_if_epa_init_0>
 8005cf2:	0008      	movs	r0, r1
 8005cf4:	bf18      	it	ne
 8005cf6:	2001      	movne	r0, #1
 8005cf8:	d101      	bne.n	8005cfe <??ll_tx_pwr_if_epa_init_1>

08005cfa <??ll_tx_pwr_if_epa_init_0>:
 8005cfa:	2100      	movs	r1, #0
 8005cfc:	2000      	movs	r0, #0

08005cfe <??ll_tx_pwr_if_epa_init_1>:
 8005cfe:	4a33      	ldr	r2, [pc, #204]	; (8005dcc <??DataTable9>)
 8005d00:	7210      	strb	r0, [r2, #8]
 8005d02:	6111      	str	r1, [r2, #16]
 8005d04:	2000      	movs	r0, #0
 8005d06:	4770      	bx	lr

08005d08 <ll_tx_pwr_if_epa_enable>:
 8005d08:	b510      	push	{r4, lr}
 8005d0a:	4c30      	ldr	r4, [pc, #192]	; (8005dcc <??DataTable9>)
 8005d0c:	7a22      	ldrb	r2, [r4, #8]
 8005d0e:	2a00      	cmp	r2, #0
 8005d10:	bf1c      	itt	ne
 8005d12:	6921      	ldrne	r1, [r4, #16]
 8005d14:	2900      	cmpne	r1, #0
 8005d16:	d014      	beq.n	8005d42 <??ll_tx_pwr_if_epa_enable_0>
 8005d18:	2801      	cmp	r0, #1
 8005d1a:	d108      	bne.n	8005d2e <??ll_tx_pwr_if_epa_enable_1>
 8005d1c:	2a01      	cmp	r2, #1
 8005d1e:	bf04      	itt	eq
 8005d20:	7a62      	ldrbeq	r2, [r4, #9]
 8005d22:	2a00      	cmpeq	r2, #0
 8005d24:	d10d      	bne.n	8005d42 <??ll_tx_pwr_if_epa_enable_0>
 8005d26:	4788      	blx	r1
 8005d28:	2101      	movs	r1, #1
 8005d2a:	7261      	strb	r1, [r4, #9]
 8005d2c:	bd10      	pop	{r4, pc}

08005d2e <??ll_tx_pwr_if_epa_enable_1>:
 8005d2e:	2800      	cmp	r0, #0
 8005d30:	bf02      	ittt	eq
 8005d32:	2a01      	cmpeq	r2, #1
 8005d34:	7a60      	ldrbeq	r0, [r4, #9]
 8005d36:	2801      	cmpeq	r0, #1
 8005d38:	d103      	bne.n	8005d42 <??ll_tx_pwr_if_epa_enable_0>
 8005d3a:	2000      	movs	r0, #0
 8005d3c:	4788      	blx	r1
 8005d3e:	2000      	movs	r0, #0
 8005d40:	7260      	strb	r0, [r4, #9]

08005d42 <??ll_tx_pwr_if_epa_enable_0>:
 8005d42:	bd10      	pop	{r4, pc}

08005d44 <ll_tx_pwr_if_is_le_power_class_1_supported>:
 8005d44:	4821      	ldr	r0, [pc, #132]	; (8005dcc <??DataTable9>)
 8005d46:	6801      	ldr	r1, [r0, #0]
 8005d48:	7900      	ldrb	r0, [r0, #4]
 8005d4a:	1e42      	subs	r2, r0, #1
 8005d4c:	b2d2      	uxtb	r2, r2
 8005d4e:	eb01 0182 	add.w	r1, r1, r2, lsl #2
 8005d52:	f991 0003 	ldrsb.w	r0, [r1, #3]
 8005d56:	280b      	cmp	r0, #11
 8005d58:	db01      	blt.n	8005d5e <??ll_tx_pwr_if_is_le_power_class_1_supported_0>
 8005d5a:	2001      	movs	r0, #1
 8005d5c:	4770      	bx	lr

08005d5e <??ll_tx_pwr_if_is_le_power_class_1_supported_0>:
 8005d5e:	2000      	movs	r0, #0
 8005d60:	4770      	bx	lr

08005d62 <ll_tx_pwr_if_tx_pwr_params_config>:
 8005d62:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8005d64:	4605      	mov	r5, r0
 8005d66:	4608      	mov	r0, r1
 8005d68:	4611      	mov	r1, r2
 8005d6a:	9a06      	ldr	r2, [sp, #24]
 8005d6c:	461f      	mov	r7, r3
 8005d6e:	4c17      	ldr	r4, [pc, #92]	; (8005dcc <??DataTable9>)
 8005d70:	f7ff ff92 	bl	8005c98 <ll_tx_pwr_if_get_tx_pwr_table_offset>
 8005d74:	4606      	mov	r6, r0
 8005d76:	6820      	ldr	r0, [r4, #0]
 8005d78:	4639      	mov	r1, r7
 8005d7a:	eb00 0286 	add.w	r2, r0, r6, lsl #2
 8005d7e:	7850      	ldrb	r0, [r2, #1]
 8005d80:	f008 fc12 	bl	800e5a8 <llhwc_phy_set_tx_pwr>
 8005d84:	6820      	ldr	r0, [r4, #0]
 8005d86:	4914      	ldr	r1, [pc, #80]	; (8005dd8 <??DataTable9_3>)
 8005d88:	690b      	ldr	r3, [r1, #16]
 8005d8a:	f810 2026 	ldrb.w	r2, [r0, r6, lsl #2]
 8005d8e:	eb00 0086 	add.w	r0, r0, r6, lsl #2
 8005d92:	2d01      	cmp	r5, #1
 8005d94:	f362 5317 	bfi	r3, r2, #20, #4
 8005d98:	610b      	str	r3, [r1, #16]
 8005d9a:	7882      	ldrb	r2, [r0, #2]
 8005d9c:	680b      	ldr	r3, [r1, #0]
 8005d9e:	f362 73df 	bfi	r3, r2, #31, #1
 8005da2:	600b      	str	r3, [r1, #0]
 8005da4:	bf04      	itt	eq
 8005da6:	7880      	ldrbeq	r0, [r0, #2]
 8005da8:	2800      	cmpeq	r0, #0
 8005daa:	d10e      	bne.n	8005dca <??ll_tx_pwr_if_tx_pwr_params_config_0>
 8005dac:	7a20      	ldrb	r0, [r4, #8]
 8005dae:	2800      	cmp	r0, #0
 8005db0:	bf1c      	itt	ne
 8005db2:	6921      	ldrne	r1, [r4, #16]
 8005db4:	2900      	cmpne	r1, #0
 8005db6:	d008      	beq.n	8005dca <??ll_tx_pwr_if_tx_pwr_params_config_0>
 8005db8:	2801      	cmp	r0, #1
 8005dba:	bf04      	itt	eq
 8005dbc:	7a60      	ldrbeq	r0, [r4, #9]
 8005dbe:	2800      	cmpeq	r0, #0
 8005dc0:	d103      	bne.n	8005dca <??ll_tx_pwr_if_tx_pwr_params_config_0>
 8005dc2:	2001      	movs	r0, #1
 8005dc4:	4788      	blx	r1
 8005dc6:	2001      	movs	r0, #1
 8005dc8:	7260      	strb	r0, [r4, #9]

08005dca <??ll_tx_pwr_if_tx_pwr_params_config_0>:
 8005dca:	bdf1      	pop	{r0, r4, r5, r6, r7, pc}

08005dcc <??DataTable9>:
 8005dcc:	0704 2000                                   ... 

08005dd0 <??DataTable9_1>:
 8005dd0:	37d0 0803                                   .7..

08005dd4 <??DataTable9_2>:
 8005dd4:	37d8 0803                                   .7..

08005dd8 <??DataTable9_3>:
 8005dd8:	07d4 2000                                   ... 

08005ddc <llcp_get_instant_time>:
 8005ddc:	1a40      	subs	r0, r0, r1
 8005dde:	4350      	muls	r0, r2
 8005de0:	eb00 0080 	add.w	r0, r0, r0, lsl #2
 8005de4:	0852      	lsrs	r2, r2, #1
 8005de6:	1080      	asrs	r0, r0, #2
 8005de8:	eb02 0282 	add.w	r2, r2, r2, lsl #2
 8005dec:	eba0 00a2 	sub.w	r0, r0, r2, asr #2
 8005df0:	4770      	bx	lr

08005df2 <llcp_data_length_init>:
 8005df2:	b530      	push	{r4, r5, lr}
 8005df4:	4613      	mov	r3, r2
 8005df6:	b08b      	sub	sp, #44	; 0x2c
 8005df8:	f100 02a0 	add.w	r2, r0, #160	; 0xa0
 8005dfc:	8814      	ldrh	r4, [r2, #0]
 8005dfe:	f8ad 4000 	strh.w	r4, [sp]
 8005e02:	8855      	ldrh	r5, [r2, #2]
 8005e04:	f8ad 5002 	strh.w	r5, [sp, #2]
 8005e08:	8894      	ldrh	r4, [r2, #4]
 8005e0a:	f8ad 4004 	strh.w	r4, [sp, #4]
 8005e0e:	88d4      	ldrh	r4, [r2, #6]
 8005e10:	460a      	mov	r2, r1
 8005e12:	4601      	mov	r1, r0
 8005e14:	f8ad 4006 	strh.w	r4, [sp, #6]
 8005e18:	4668      	mov	r0, sp
 8005e1a:	f000 f830 	bl	8005e7e <llcp_cntrl_pkt_init>
 8005e1e:	b00b      	add	sp, #44	; 0x2c
 8005e20:	bd30      	pop	{r4, r5, pc}

08005e22 <llcp_cntrl_init>:
 8005e22:	b538      	push	{r3, r4, r5, lr}
 8005e24:	4604      	mov	r4, r0
 8005e26:	65a4      	str	r4, [r4, #88]	; 0x58
 8005e28:	f204 1023 	addw	r0, r4, #291	; 0x123
 8005e2c:	2222      	movs	r2, #34	; 0x22
 8005e2e:	7142      	strb	r2, [r0, #5]
 8005e30:	f894 305c 	ldrb.w	r3, [r4, #92]	; 0x5c
 8005e34:	2b01      	cmp	r3, #1
 8005e36:	bf07      	ittee	eq
 8005e38:	7001      	strbeq	r1, [r0, #0]
 8005e3a:	f104 05c8 	addeq.w	r5, r4, #200	; 0xc8
 8005e3e:	7041      	strbne	r1, [r0, #1]
 8005e40:	f104 05d0 	addne.w	r5, r4, #208	; 0xd0
 8005e44:	6828      	ldr	r0, [r5, #0]
 8005e46:	2800      	cmp	r0, #0
 8005e48:	bf0c      	ite	eq
 8005e4a:	2001      	moveq	r0, #1
 8005e4c:	2000      	movne	r0, #0
 8005e4e:	f7fa f9bf 	bl	80001d0 <bsp_assert>
 8005e52:	f104 0258 	add.w	r2, r4, #88	; 0x58
 8005e56:	2100      	movs	r1, #0
 8005e58:	f60f 20f9 	addw	r0, pc, #2809	; 0xaf9
 8005e5c:	f7ff fc79 	bl	8005752 <os_timer_create>
 8005e60:	2800      	cmp	r0, #0
 8005e62:	bf14      	ite	ne
 8005e64:	2101      	movne	r1, #1
 8005e66:	2100      	moveq	r1, #0
 8005e68:	6028      	str	r0, [r5, #0]
 8005e6a:	4608      	mov	r0, r1
 8005e6c:	f7fa f9b0 	bl	80001d0 <bsp_assert>
 8005e70:	6828      	ldr	r0, [r5, #0]
 8005e72:	f8df 1bd8 	ldr.w	r1, [pc, #3032]	; 8006a4c <??DataTable5>
 8005e76:	e8bd 4034 	ldmia.w	sp!, {r2, r4, r5, lr}
 8005e7a:	f7ff bd0d 	b.w	8005898 <os_timer_start>

08005e7e <llcp_cntrl_pkt_init>:
 8005e7e:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8005e82:	4682      	mov	sl, r0
 8005e84:	460f      	mov	r7, r1
 8005e86:	4615      	mov	r5, r2
 8005e88:	4699      	mov	r9, r3
 8005e8a:	f8df 1bc4 	ldr.w	r1, [pc, #3012]	; 8006a50 <??DataTable5_1>
 8005e8e:	2000      	movs	r0, #0
 8005e90:	f00d fb38 	bl	8013504 <allocate_data_packet>
 8005e94:	4604      	mov	r4, r0
 8005e96:	2600      	movs	r6, #0
 8005e98:	f8df 8bb0 	ldr.w	r8, [pc, #2992]	; 8006a4c <??DataTable5>
 8005e9c:	2c00      	cmp	r4, #0
 8005e9e:	d060      	beq.n	8005f62 <??llcp_cntrl_pkt_init_0>
 8005ea0:	462e      	mov	r6, r5
 8005ea2:	f107 0564 	add.w	r5, r7, #100	; 0x64
 8005ea6:	2e02      	cmp	r6, #2
 8005ea8:	d107      	bne.n	8005eba <??llcp_cntrl_pkt_init_1>
 8005eaa:	8b78      	ldrh	r0, [r7, #26]
 8005eac:	f04f 0901 	mov.w	r9, #1
 8005eb0:	eb00 0180 	add.w	r1, r0, r0, lsl #2
 8005eb4:	ea4f 1881 	mov.w	r8, r1, lsl #6
 8005eb8:	e009      	b.n	8005ece <??llcp_cntrl_pkt_init_2>

08005eba <??llcp_cntrl_pkt_init_1>:
 8005eba:	f1b9 0f00 	cmp.w	r9, #0
 8005ebe:	d01e      	beq.n	8005efe <??llcp_cntrl_pkt_init_3>
 8005ec0:	6e68      	ldr	r0, [r5, #100]	; 0x64
 8005ec2:	2800      	cmp	r0, #0
 8005ec4:	bf0c      	ite	eq
 8005ec6:	2001      	moveq	r0, #1
 8005ec8:	2000      	movne	r0, #0
 8005eca:	f7fa f981 	bl	80001d0 <bsp_assert>

08005ece <??llcp_cntrl_pkt_init_2>:
 8005ece:	663f      	str	r7, [r7, #96]	; 0x60
 8005ed0:	2001      	movs	r0, #1
 8005ed2:	7028      	strb	r0, [r5, #0]
 8005ed4:	2122      	movs	r1, #34	; 0x22
 8005ed6:	f887 1128 	strb.w	r1, [r7, #296]	; 0x128
 8005eda:	6e68      	ldr	r0, [r5, #100]	; 0x64
 8005edc:	b978      	cbnz	r0, 8005efe <??llcp_cntrl_pkt_init_3>
 8005ede:	663f      	str	r7, [r7, #96]	; 0x60
 8005ee0:	f107 0260 	add.w	r2, r7, #96	; 0x60
 8005ee4:	2100      	movs	r1, #0
 8005ee6:	f60f 206d 	addw	r0, pc, #2669	; 0xa6d
 8005eea:	f7ff fc32 	bl	8005752 <os_timer_create>
 8005eee:	2800      	cmp	r0, #0
 8005ef0:	bf14      	ite	ne
 8005ef2:	2101      	movne	r1, #1
 8005ef4:	2100      	moveq	r1, #0
 8005ef6:	6668      	str	r0, [r5, #100]	; 0x64
 8005ef8:	4608      	mov	r0, r1
 8005efa:	f7fa f969 	bl	80001d0 <bsp_assert>

08005efe <??llcp_cntrl_pkt_init_3>:
 8005efe:	4651      	mov	r1, sl
 8005f00:	4622      	mov	r2, r4
 8005f02:	4630      	mov	r0, r6
 8005f04:	f00c ff6e 	bl	8012de4 <pdu_trnsprt_hndlr_form_cntrl_pdu>
 8005f08:	2e0d      	cmp	r6, #13
 8005f0a:	bf18      	it	ne
 8005f0c:	2e11      	cmpne	r6, #17
 8005f0e:	d105      	bne.n	8005f1c <??llcp_cntrl_pkt_init_4>
 8005f10:	6ee8      	ldr	r0, [r5, #108]	; 0x6c
 8005f12:	b118      	cbz	r0, 8005f1c <??llcp_cntrl_pkt_init_4>
 8005f14:	f107 00d0 	add.w	r0, r7, #208	; 0xd0
 8005f18:	f7ff fd69 	bl	80059ee <os_timer_stop_free>

08005f1c <??llcp_cntrl_pkt_init_4>:
 8005f1c:	2e0f      	cmp	r6, #15
 8005f1e:	bf18      	it	ne
 8005f20:	2e10      	cmpne	r6, #16
 8005f22:	d004      	beq.n	8005f2e <??llcp_cntrl_pkt_init_5>
 8005f24:	2e17      	cmp	r6, #23
 8005f26:	bf1c      	itt	ne
 8005f28:	2e1a      	cmpne	r6, #26
 8005f2a:	2e1b      	cmpne	r6, #27
 8005f2c:	d108      	bne.n	8005f40 <??llcp_cntrl_pkt_init_6>

08005f2e <??llcp_cntrl_pkt_init_5>:
 8005f2e:	7ba0      	ldrb	r0, [r4, #14]
 8005f30:	4621      	mov	r1, r4
 8005f32:	f040 0002 	orr.w	r0, r0, #2
 8005f36:	73a0      	strb	r0, [r4, #14]
 8005f38:	6de8      	ldr	r0, [r5, #92]	; 0x5c
 8005f3a:	f7fb fe7f 	bl	8001c3c <evnt_schdlr_add_data_pkt>
 8005f3e:	e003      	b.n	8005f48 <??llcp_cntrl_pkt_init_7>

08005f40 <??llcp_cntrl_pkt_init_6>:
 8005f40:	6de8      	ldr	r0, [r5, #92]	; 0x5c
 8005f42:	4621      	mov	r1, r4
 8005f44:	f7fb fee3 	bl	8001d0e <evnt_schdlr_add_ctrl_pkt>

08005f48 <??llcp_cntrl_pkt_init_7>:
 8005f48:	4606      	mov	r6, r0
 8005f4a:	1e70      	subs	r0, r6, #1
 8005f4c:	4180      	sbcs	r0, r0
 8005f4e:	0fc0      	lsrs	r0, r0, #31
 8005f50:	f7fa f93e 	bl	80001d0 <bsp_assert>
 8005f54:	f1b9 0f00 	cmp.w	r9, #0
 8005f58:	d003      	beq.n	8005f62 <??llcp_cntrl_pkt_init_0>
 8005f5a:	6e68      	ldr	r0, [r5, #100]	; 0x64
 8005f5c:	4641      	mov	r1, r8
 8005f5e:	f7ff fc9b 	bl	8005898 <os_timer_start>

08005f62 <??llcp_cntrl_pkt_init_0>:
 8005f62:	e08d      	b.n	8006080 <??llcp_set_req_chnls_in_min_chnls_prcdr_1>

08005f64 <llcp_version_exchange_init>:
 8005f64:	b530      	push	{r4, r5, lr}
 8005f66:	b08d      	sub	sp, #52	; 0x34
 8005f68:	4604      	mov	r4, r0
 8005f6a:	460d      	mov	r5, r1
 8005f6c:	4668      	mov	r0, sp
 8005f6e:	f010 fa3a 	bl	80163e6 <db_get_local_vrsn_info>
 8005f72:	f8bd 0002 	ldrh.w	r0, [sp, #2]
 8005f76:	f8bd 1000 	ldrh.w	r1, [sp]
 8005f7a:	462b      	mov	r3, r5
 8005f7c:	f8ad 0008 	strh.w	r0, [sp, #8]
 8005f80:	f89d 0006 	ldrb.w	r0, [sp, #6]
 8005f84:	f8ad 100a 	strh.w	r1, [sp, #10]
 8005f88:	220c      	movs	r2, #12
 8005f8a:	f88d 000c 	strb.w	r0, [sp, #12]
 8005f8e:	4621      	mov	r1, r4
 8005f90:	a802      	add	r0, sp, #8
 8005f92:	f7ff ff74 	bl	8005e7e <llcp_cntrl_pkt_init>
 8005f96:	b00d      	add	sp, #52	; 0x34
 8005f98:	bd30      	pop	{r4, r5, pc}

08005f9a <llcp_feature_exchange_init>:
 8005f9a:	b578      	push	{r3, r4, r5, r6, lr}
 8005f9c:	b08b      	sub	sp, #44	; 0x2c
 8005f9e:	4604      	mov	r4, r0
 8005fa0:	460d      	mov	r5, r1
 8005fa2:	4616      	mov	r6, r2
 8005fa4:	4668      	mov	r0, sp
 8005fa6:	f010 fa30 	bl	801640a <db_get_le_feature_info>
 8005faa:	2d09      	cmp	r5, #9
 8005fac:	d106      	bne.n	8005fbc <??llcp_feature_exchange_init_0>
 8005fae:	f89d 1000 	ldrb.w	r1, [sp]
 8005fb2:	f894 0046 	ldrb.w	r0, [r4, #70]	; 0x46
 8005fb6:	4001      	ands	r1, r0
 8005fb8:	f88d 1000 	strb.w	r1, [sp]

08005fbc <??llcp_feature_exchange_init_0>:
 8005fbc:	4633      	mov	r3, r6
 8005fbe:	462a      	mov	r2, r5
 8005fc0:	4621      	mov	r1, r4
 8005fc2:	4668      	mov	r0, sp
 8005fc4:	f7ff ff5b 	bl	8005e7e <llcp_cntrl_pkt_init>
 8005fc8:	b00c      	add	sp, #48	; 0x30
 8005fca:	bd70      	pop	{r4, r5, r6, pc}

08005fcc <llcp_set_req_chnls_in_min_chnls_prcdr>:
 8005fcc:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8005fd0:	4604      	mov	r4, r0
 8005fd2:	2600      	movs	r6, #0
 8005fd4:	2700      	movs	r7, #0
 8005fd6:	2500      	movs	r5, #0
 8005fd8:	b104      	cbz	r4, 8005fdc <??llcp_set_req_chnls_in_min_chnls_prcdr_0>
 8005fda:	2001      	movs	r0, #1

08005fdc <??llcp_set_req_chnls_in_min_chnls_prcdr_0>:
 8005fdc:	4688      	mov	r8, r1
 8005fde:	f7fa f8f7 	bl	80001d0 <bsp_assert>
 8005fe2:	4640      	mov	r0, r8
 8005fe4:	f00f fe09 	bl	8015bfa <conn_mngr_calc_num_of_used_data_chnls>
 8005fe8:	4602      	mov	r2, r0
 8005fea:	2a01      	cmp	r2, #1
 8005fec:	bfd8      	it	le
 8005fee:	261e      	movle	r6, #30
 8005ff0:	f894 0136 	ldrb.w	r0, [r4, #310]	; 0x136
 8005ff4:	4282      	cmp	r2, r0
 8005ff6:	da43      	bge.n	8006080 <??llcp_set_req_chnls_in_min_chnls_prcdr_1>
 8005ff8:	1a82      	subs	r2, r0, r2
 8005ffa:	f8df 3c68 	ldr.w	r3, [pc, #3176]	; 8006c64 <??DataTable7>
 8005ffe:	2401      	movs	r4, #1
 8006000:	e012      	b.n	8006028 <??llcp_set_req_chnls_in_min_chnls_prcdr_2>

08006002 <??llcp_set_req_chnls_in_min_chnls_prcdr_3>:
 8006002:	1f78      	subs	r0, r7, #5
 8006004:	2803      	cmp	r0, #3
 8006006:	bf98      	it	ls
 8006008:	2504      	movls	r5, #4

0800600a <??llcp_set_req_chnls_in_min_chnls_prcdr_4>:
 800600a:	57d9      	ldrsb	r1, [r3, r7]
 800600c:	f818 e005 	ldrb.w	lr, [r8, r5]
 8006010:	fa04 f101 	lsl.w	r1, r4, r1
 8006014:	ea1e 0f01 	tst.w	lr, r1
 8006018:	d104      	bne.n	8006024 <??llcp_set_req_chnls_in_min_chnls_prcdr_5>
 800601a:	ea41 010e 	orr.w	r1, r1, lr
 800601e:	f808 1005 	strb.w	r1, [r8, r5]
 8006022:	1e52      	subs	r2, r2, #1

08006024 <??llcp_set_req_chnls_in_min_chnls_prcdr_5>:
 8006024:	1c7f      	adds	r7, r7, #1
 8006026:	b2ff      	uxtb	r7, r7

08006028 <??llcp_set_req_chnls_in_min_chnls_prcdr_2>:
 8006028:	b2d0      	uxtb	r0, r2
 800602a:	b348      	cbz	r0, 8006080 <??llcp_set_req_chnls_in_min_chnls_prcdr_1>
 800602c:	2f08      	cmp	r7, #8
 800602e:	dc08      	bgt.n	8006042 <??llcp_set_req_chnls_in_min_chnls_prcdr_6>
 8006030:	2f01      	cmp	r7, #1
 8006032:	bfd8      	it	le
 8006034:	2501      	movle	r5, #1
 8006036:	dde8      	ble.n	800600a <??llcp_set_req_chnls_in_min_chnls_prcdr_4>
 8006038:	1eb8      	subs	r0, r7, #2
 800603a:	2802      	cmp	r0, #2
 800603c:	d8e1      	bhi.n	8006002 <??llcp_set_req_chnls_in_min_chnls_prcdr_3>
 800603e:	2502      	movs	r5, #2
 8006040:	e7e3      	b.n	800600a <??llcp_set_req_chnls_in_min_chnls_prcdr_4>

08006042 <??llcp_set_req_chnls_in_min_chnls_prcdr_6>:
 8006042:	46c4      	mov	ip, r8
 8006044:	2102      	movs	r1, #2

08006046 <??llcp_set_req_chnls_in_min_chnls_prcdr_7>:
 8006046:	f04f 0e00 	mov.w	lr, #0

0800604a <??llcp_set_req_chnls_in_min_chnls_prcdr_8>:
 800604a:	f89c a000 	ldrb.w	sl, [ip]
 800604e:	fa04 f90e 	lsl.w	r9, r4, lr
 8006052:	ea1a 0f09 	tst.w	sl, r9
 8006056:	d109      	bne.n	800606c <??llcp_set_req_chnls_in_min_chnls_prcdr_9>
 8006058:	ea49 090a 	orr.w	r9, r9, sl
 800605c:	f88c 9000 	strb.w	r9, [ip]
 8006060:	1e52      	subs	r2, r2, #1
 8006062:	fa5f f982 	uxtb.w	r9, r2
 8006066:	f1b9 0f00 	cmp.w	r9, #0
 800606a:	d009      	beq.n	8006080 <??llcp_set_req_chnls_in_min_chnls_prcdr_1>

0800606c <??llcp_set_req_chnls_in_min_chnls_prcdr_9>:
 800606c:	f10e 0e01 	add.w	lr, lr, #1
 8006070:	f1be 0f08 	cmp.w	lr, #8
 8006074:	dbe9      	blt.n	800604a <??llcp_set_req_chnls_in_min_chnls_prcdr_8>
 8006076:	f10c 0c01 	add.w	ip, ip, #1
 800607a:	1e49      	subs	r1, r1, #1
 800607c:	d0d4      	beq.n	8006028 <??llcp_set_req_chnls_in_min_chnls_prcdr_2>
 800607e:	e7e2      	b.n	8006046 <??llcp_set_req_chnls_in_min_chnls_prcdr_7>

08006080 <??llcp_set_req_chnls_in_min_chnls_prcdr_1>:
 8006080:	4630      	mov	r0, r6
 8006082:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
	...

08006088 <llcp_pkt_received>:
 8006088:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 800608c:	460d      	mov	r5, r1
 800608e:	b090      	sub	sp, #64	; 0x40
 8006090:	4681      	mov	r9, r0
 8006092:	4690      	mov	r8, r2
 8006094:	2100      	movs	r1, #0
 8006096:	2303      	movs	r3, #3
 8006098:	910d      	str	r1, [sp, #52]	; 0x34
 800609a:	f88d 3005 	strb.w	r3, [sp, #5]
 800609e:	222c      	movs	r2, #44	; 0x2c
 80060a0:	a802      	add	r0, sp, #8
 80060a2:	f008 fda2 	bl	800ebea <ble_memset>
 80060a6:	6829      	ldr	r1, [r5, #0]
 80060a8:	8968      	ldrh	r0, [r5, #10]
 80060aa:	2700      	movs	r7, #0
 80060ac:	4408      	add	r0, r1
 80060ae:	7901      	ldrb	r1, [r0, #4]
 80060b0:	f88d 1004 	strb.w	r1, [sp, #4]
 80060b4:	2911      	cmp	r1, #17
 80060b6:	bf08      	it	eq
 80060b8:	7947      	ldrbeq	r7, [r0, #5]
 80060ba:	4608      	mov	r0, r1
 80060bc:	2826      	cmp	r0, #38	; 0x26
 80060be:	d206      	bcs.n	80060ce <??llcp_pkt_received_1>
 80060c0:	89a9      	ldrh	r1, [r5, #12]
 80060c2:	f8df 2c80 	ldr.w	r2, [pc, #3200]	; 8006d44 <??DataTable8>
 80060c6:	5c10      	ldrb	r0, [r2, r0]
 80060c8:	1f09      	subs	r1, r1, #4
 80060ca:	4281      	cmp	r1, r0
 80060cc:	d00f      	beq.n	80060ee <??llcp_pkt_received_2>

080060ce <??llcp_pkt_received_1>:
 80060ce:	f89d 1004 	ldrb.w	r1, [sp, #4]
 80060d2:	2300      	movs	r3, #0
 80060d4:	2207      	movs	r2, #7
 80060d6:	f88d 1008 	strb.w	r1, [sp, #8]
 80060da:	4649      	mov	r1, r9
 80060dc:	a802      	add	r0, sp, #8
 80060de:	f7ff fece 	bl	8005e7e <llcp_cntrl_pkt_init>
 80060e2:	4628      	mov	r0, r5
 80060e4:	2420      	movs	r4, #32
 80060e6:	f00d fa3b 	bl	8013560 <free_buff_hdr>
 80060ea:	f000 bc22 	b.w	8006932 <??llcp_pkt_received_3>

080060ee <??llcp_pkt_received_2>:
 80060ee:	462b      	mov	r3, r5
 80060f0:	aa02      	add	r2, sp, #8
 80060f2:	a901      	add	r1, sp, #4
 80060f4:	f10d 0005 	add.w	r0, sp, #5
 80060f8:	f00d f852 	bl	80131a0 <pdu_trnsprt_hndlr_parse_data_cntrl>
 80060fc:	4604      	mov	r4, r0
 80060fe:	f509 768f 	add.w	r6, r9, #286	; 0x11e
 8006102:	7970      	ldrb	r0, [r6, #5]
 8006104:	2807      	cmp	r0, #7
 8006106:	bf1e      	ittt	ne
 8006108:	79b0      	ldrbne	r0, [r6, #6]
 800610a:	2807      	cmpne	r0, #7
 800610c:	2808      	cmpne	r0, #8
 800610e:	d119      	bne.n	8006144 <??llcp_pkt_received_4>
 8006110:	f89d 0004 	ldrb.w	r0, [sp, #4]
 8006114:	1ec0      	subs	r0, r0, #3
 8006116:	2803      	cmp	r0, #3
 8006118:	d914      	bls.n	8006144 <??llcp_pkt_received_4>
 800611a:	f89d 0004 	ldrb.w	r0, [sp, #4]
 800611e:	280a      	cmp	r0, #10
 8006120:	bf18      	it	ne
 8006122:	280b      	cmpne	r0, #11
 8006124:	d00e      	beq.n	8006144 <??llcp_pkt_received_4>
 8006126:	2802      	cmp	r0, #2
 8006128:	bf1c      	itt	ne
 800612a:	280d      	cmpne	r0, #13
 800612c:	2811      	cmpne	r0, #17
 800612e:	d009      	beq.n	8006144 <??llcp_pkt_received_4>
 8006130:	7870      	ldrb	r0, [r6, #1]
 8006132:	28aa      	cmp	r0, #170	; 0xaa
 8006134:	bf08      	it	eq
 8006136:	213d      	moveq	r1, #61	; 0x3d
 8006138:	f000 8381 	beq.w	800683e <??llcp_pkt_received_5>
 800613c:	f109 00b8 	add.w	r0, r9, #184	; 0xb8
 8006140:	6485      	str	r5, [r0, #72]	; 0x48
 8006142:	e3f6      	b.n	8006932 <??llcp_pkt_received_3>

08006144 <??llcp_pkt_received_4>:
 8006144:	4628      	mov	r0, r5
 8006146:	f00d fa0b 	bl	8013560 <free_buff_hdr>
 800614a:	79b1      	ldrb	r1, [r6, #6]
 800614c:	2900      	cmp	r1, #0
 800614e:	bf1c      	itt	ne
 8006150:	7970      	ldrbne	r0, [r6, #5]
 8006152:	2809      	cmpne	r0, #9
 8006154:	d010      	beq.n	8006178 <??llcp_pkt_received_6>
 8006156:	2810      	cmp	r0, #16
 8006158:	bf18      	it	ne
 800615a:	2907      	cmpne	r1, #7
 800615c:	d00c      	beq.n	8006178 <??llcp_pkt_received_6>
 800615e:	290a      	cmp	r1, #10
 8006160:	bf1c      	itt	ne
 8006162:	2901      	cmpne	r1, #1
 8006164:	290c      	cmpne	r1, #12
 8006166:	d007      	beq.n	8006178 <??llcp_pkt_received_6>
 8006168:	f89d 2004 	ldrb.w	r2, [sp, #4]
 800616c:	2a11      	cmp	r2, #17
 800616e:	f000 819a 	beq.w	80064a6 <??llcp_pkt_received_7>
 8006172:	280f      	cmp	r0, #15
 8006174:	f040 83b9 	bne.w	80068ea <??llcp_pkt_received_8>

08006178 <??llcp_pkt_received_6>:
 8006178:	f89d 2004 	ldrb.w	r2, [sp, #4]
 800617c:	2a19      	cmp	r2, #25
 800617e:	f200 83aa 	bhi.w	80068d6 <??llcp_pkt_received_9>
 8006182:	e8df f012 	tbh	[pc, r2, lsl #1]

08006186 <??llcp_pkt_received_0>:
 8006186:	002a 001a 009f 0039 00b3 00ba 00ce 0228     *.....9.......(.
 8006196:	00a4 00a4 0046 0161 00a9 0170 00a4 005c     ....F.a...p...\.
 80061a6:	0083 0190 024b 024b 00ae 00ae 02a2 02d2     ....K.K.........
 80061b6:	02e5 0367                                   ..g.

080061ba <??llcp_pkt_received_10>:
 80061ba:	a902      	add	r1, sp, #8
 80061bc:	4648      	mov	r0, r9
 80061be:	f001 ffa4 	bl	800810a <llcp_update_chnl_map_received>

080061c2 <??llcp_pkt_received_11>:
 80061c2:	4604      	mov	r4, r0

080061c4 <??llcp_pkt_received_12>:
 80061c4:	2c24      	cmp	r4, #36	; 0x24
 80061c6:	f040 83b4 	bne.w	8006932 <??llcp_pkt_received_3>
 80061ca:	f89d 1004 	ldrb.w	r1, [sp, #4]
 80061ce:	2223      	movs	r2, #35	; 0x23
 80061d0:	f88d 2009 	strb.w	r2, [sp, #9]
 80061d4:	f88d 1008 	strb.w	r1, [sp, #8]
 80061d8:	e38f      	b.n	80068fa <??llcp_pkt_received_13>

080061da <??llcp_pkt_received_14>:
 80061da:	290a      	cmp	r1, #10
 80061dc:	d107      	bne.n	80061ee <??llcp_pkt_received_15>
 80061de:	f109 01b8 	add.w	r1, r9, #184	; 0xb8
 80061e2:	6988      	ldr	r0, [r1, #24]
 80061e4:	b118      	cbz	r0, 80061ee <??llcp_pkt_received_15>
 80061e6:	f109 00d0 	add.w	r0, r9, #208	; 0xd0
 80061ea:	f7ff fc00 	bl	80059ee <os_timer_stop_free>

080061ee <??llcp_pkt_received_15>:
 80061ee:	a902      	add	r1, sp, #8
 80061f0:	4648      	mov	r0, r9
 80061f2:	f001 fca6 	bl	8007b42 <llcp_update_conn_param_received>
 80061f6:	e7e4      	b.n	80061c2 <??llcp_pkt_received_11>

080061f8 <??llcp_pkt_received_16>:
 80061f8:	20aa      	movs	r0, #170	; 0xaa
 80061fa:	7070      	strb	r0, [r6, #1]
 80061fc:	a902      	add	r1, sp, #8
 80061fe:	4648      	mov	r0, r9
 8006200:	f001 f815 	bl	800722e <llcp_enc_req_received>

08006204 <??llcp_pkt_received_17>:
 8006204:	4604      	mov	r4, r0
 8006206:	1e40      	subs	r0, r0, #1
 8006208:	4180      	sbcs	r0, r0
 800620a:	0fc0      	lsrs	r0, r0, #31
 800620c:	f7f9 ffe0 	bl	80001d0 <bsp_assert>
 8006210:	e7d8      	b.n	80061c4 <??llcp_pkt_received_12>

08006212 <??llcp_pkt_received_18>:
 8006212:	2900      	cmp	r1, #0
 8006214:	bf04      	itt	eq
 8006216:	7930      	ldrbeq	r0, [r6, #4]
 8006218:	2801      	cmpeq	r0, #1
 800621a:	d1d3      	bne.n	80061c4 <??llcp_pkt_received_12>
 800621c:	21aa      	movs	r1, #170	; 0xaa
 800621e:	7071      	strb	r1, [r6, #1]
 8006220:	2300      	movs	r3, #0
 8006222:	220b      	movs	r2, #11
 8006224:	4649      	mov	r1, r9
 8006226:	2000      	movs	r0, #0
 8006228:	f7ff fe29 	bl	8005e7e <llcp_cntrl_pkt_init>
 800622c:	2008      	movs	r0, #8
 800622e:	7030      	strb	r0, [r6, #0]
 8006230:	71b0      	strb	r0, [r6, #6]
 8006232:	f109 02b8 	add.w	r2, r9, #184	; 0xb8
 8006236:	69d0      	ldr	r0, [r2, #28]
 8006238:	f7ff fb67 	bl	800590a <os_timer_stop>
 800623c:	e7c2      	b.n	80061c4 <??llcp_pkt_received_12>

0800623e <??llcp_pkt_received_19>:
 800623e:	7971      	ldrb	r1, [r6, #5]
 8006240:	2901      	cmp	r1, #1
 8006242:	d003      	beq.n	800624c <??llcp_pkt_received_20>
 8006244:	290a      	cmp	r1, #10
 8006246:	d103      	bne.n	8006250 <??llcp_pkt_received_21>
 8006248:	79f0      	ldrb	r0, [r6, #7]
 800624a:	b950      	cbnz	r0, 8006262 <??llcp_pkt_received_22>

0800624c <??llcp_pkt_received_20>:
 800624c:	2423      	movs	r4, #35	; 0x23
 800624e:	e011      	b.n	8006274 <??llcp_pkt_received_23>

08006250 <??llcp_pkt_received_21>:
 8006250:	2902      	cmp	r1, #2
 8006252:	d004      	beq.n	800625e <??llcp_pkt_received_24>
 8006254:	79f0      	ldrb	r0, [r6, #7]
 8006256:	2800      	cmp	r0, #0
 8006258:	bf08      	it	eq
 800625a:	290c      	cmpeq	r1, #12
 800625c:	d101      	bne.n	8006262 <??llcp_pkt_received_22>

0800625e <??llcp_pkt_received_24>:
 800625e:	242a      	movs	r4, #42	; 0x2a
 8006260:	e008      	b.n	8006274 <??llcp_pkt_received_23>

08006262 <??llcp_pkt_received_22>:
 8006262:	a902      	add	r1, sp, #8
 8006264:	4648      	mov	r0, r9
 8006266:	f001 fdaf 	bl	8007dc8 <llcp_update_param_req_received>
 800626a:	4604      	mov	r4, r0
 800626c:	2c2a      	cmp	r4, #42	; 0x2a
 800626e:	bf18      	it	ne
 8006270:	2c23      	cmpne	r4, #35	; 0x23
 8006272:	d1a7      	bne.n	80061c4 <??llcp_pkt_received_12>

08006274 <??llcp_pkt_received_23>:
 8006274:	210f      	movs	r1, #15
 8006276:	f88d 1008 	strb.w	r1, [sp, #8]
 800627a:	f88d 4009 	strb.w	r4, [sp, #9]
 800627e:	2300      	movs	r3, #0
 8006280:	2211      	movs	r2, #17

08006282 <??llcp_pkt_received_25>:
 8006282:	4649      	mov	r1, r9
 8006284:	a802      	add	r0, sp, #8
 8006286:	f7ff fdfa 	bl	8005e7e <llcp_cntrl_pkt_init>
 800628a:	e79b      	b.n	80061c4 <??llcp_pkt_received_12>

0800628c <??llcp_pkt_received_26>:
 800628c:	79f0      	ldrb	r0, [r6, #7]
 800628e:	b980      	cbnz	r0, 80062b2 <??llcp_pkt_received_27>
 8006290:	7970      	ldrb	r0, [r6, #5]
 8006292:	280a      	cmp	r0, #10
 8006294:	d105      	bne.n	80062a2 <??llcp_pkt_received_28>
 8006296:	f109 00c8 	add.w	r0, r9, #200	; 0xc8
 800629a:	f7ff fba8 	bl	80059ee <os_timer_stop_free>
 800629e:	2000      	movs	r0, #0
 80062a0:	7170      	strb	r0, [r6, #5]

080062a2 <??llcp_pkt_received_28>:
 80062a2:	f109 00b8 	add.w	r0, r9, #184	; 0xb8
 80062a6:	8cc0      	ldrh	r0, [r0, #38]	; 0x26
 80062a8:	f109 017c 	add.w	r1, r9, #124	; 0x7c
 80062ac:	f001 fdfa 	bl	8007ea4 <llcp_pram_pstv_rply>
 80062b0:	4604      	mov	r4, r0

080062b2 <??llcp_pkt_received_27>:
 80062b2:	79f0      	ldrb	r0, [r6, #7]
 80062b4:	2801      	cmp	r0, #1
 80062b6:	d185      	bne.n	80061c4 <??llcp_pkt_received_12>
 80062b8:	2110      	movs	r1, #16
 80062ba:	f88d 1008 	strb.w	r1, [sp, #8]
 80062be:	2300      	movs	r3, #0
 80062c0:	2207      	movs	r2, #7
 80062c2:	e7de      	b.n	8006282 <??llcp_pkt_received_25>

080062c4 <??llcp_pkt_received_29>:
 80062c4:	a902      	add	r1, sp, #8
 80062c6:	4648      	mov	r0, r9
 80062c8:	f001 fa52 	bl	8007770 <llcp_disconnect_received>
 80062cc:	e79a      	b.n	8006204 <??llcp_pkt_received_17>

080062ce <??llcp_pkt_received_30>:
 80062ce:	a902      	add	r1, sp, #8
 80062d0:	4648      	mov	r0, r9
 80062d2:	f001 f988 	bl	80075e6 <llcp_read_remote_features_received>
 80062d6:	e774      	b.n	80061c2 <??llcp_pkt_received_11>

080062d8 <??llcp_pkt_received_31>:
 80062d8:	a902      	add	r1, sp, #8
 80062da:	4648      	mov	r0, r9
 80062dc:	f001 f916 	bl	800750c <llcp_read_remote_version_received>
 80062e0:	e790      	b.n	8006204 <??llcp_pkt_received_17>

080062e2 <??llcp_pkt_received_32>:
 80062e2:	a902      	add	r1, sp, #8
 80062e4:	4648      	mov	r0, r9
 80062e6:	f000 fddd 	bl	8006ea4 <llcp_data_length_update_received>
 80062ea:	e78b      	b.n	8006204 <??llcp_pkt_received_17>

080062ec <??llcp_pkt_received_33>:
 80062ec:	20aa      	movs	r0, #170	; 0xaa
 80062ee:	7070      	strb	r0, [r6, #1]
 80062f0:	a902      	add	r1, sp, #8
 80062f2:	4648      	mov	r0, r9
 80062f4:	f000 ff81 	bl	80071fa <llcp_enc_rsp_received>
 80062f8:	e784      	b.n	8006204 <??llcp_pkt_received_17>

080062fa <??llcp_pkt_received_34>:
 80062fa:	7970      	ldrb	r0, [r6, #5]
 80062fc:	2807      	cmp	r0, #7
 80062fe:	f47f af61 	bne.w	80061c4 <??llcp_pkt_received_12>
 8006302:	21bb      	movs	r1, #187	; 0xbb
 8006304:	2001      	movs	r0, #1
 8006306:	7071      	strb	r1, [r6, #1]
 8006308:	7130      	strb	r0, [r6, #4]
 800630a:	2300      	movs	r3, #0
 800630c:	2206      	movs	r2, #6
 800630e:	4649      	mov	r1, r9
 8006310:	2000      	movs	r0, #0
 8006312:	f7ff fdb4 	bl	8005e7e <llcp_cntrl_pkt_init>
 8006316:	f109 00b8 	add.w	r0, r9, #184	; 0xb8
 800631a:	2100      	movs	r1, #0
 800631c:	6301      	str	r1, [r0, #48]	; 0x30
 800631e:	6341      	str	r1, [r0, #52]	; 0x34
 8006320:	e750      	b.n	80061c4 <??llcp_pkt_received_12>

08006322 <??llcp_pkt_received_35>:
 8006322:	f109 07b8 	add.w	r7, r9, #184	; 0xb8
 8006326:	2907      	cmp	r1, #7
 8006328:	d13b      	bne.n	80063a2 <??llcp_pkt_received_36>
 800632a:	69b8      	ldr	r0, [r7, #24]
 800632c:	b118      	cbz	r0, 8006336 <??llcp_pkt_received_37>
 800632e:	f109 00d0 	add.w	r0, r9, #208	; 0xd0
 8006332:	f7ff fb5c 	bl	80059ee <os_timer_stop_free>

08006336 <??llcp_pkt_received_37>:
 8006336:	2000      	movs	r0, #0
 8006338:	6338      	str	r0, [r7, #48]	; 0x30
 800633a:	f8c7 8034 	str.w	r8, [r7, #52]	; 0x34
 800633e:	2300      	movs	r3, #0
 8006340:	2206      	movs	r2, #6
 8006342:	4649      	mov	r1, r9
 8006344:	f7ff fd9b 	bl	8005e7e <llcp_cntrl_pkt_init>
 8006348:	7831      	ldrb	r1, [r6, #0]
 800634a:	f8df 0b54 	ldr.w	r0, [pc, #2900]	; 8006ea0 <??DataTable10>
 800634e:	6800      	ldr	r0, [r0, #0]
 8006350:	2908      	cmp	r1, #8
 8006352:	d105      	bne.n	8006360 <??llcp_pkt_received_38>
 8006354:	6bc2      	ldr	r2, [r0, #60]	; 0x3c
 8006356:	b30a      	cbz	r2, 800639c <??llcp_pkt_received_39>
 8006358:	8cf9      	ldrh	r1, [r7, #38]	; 0x26
 800635a:	2000      	movs	r0, #0
 800635c:	4790      	blx	r2
 800635e:	e01d      	b.n	800639c <??llcp_pkt_received_39>

08006360 <??llcp_pkt_received_38>:
 8006360:	6b83      	ldr	r3, [r0, #56]	; 0x38
 8006362:	b11b      	cbz	r3, 800636c <??llcp_pkt_received_40>
 8006364:	8cf9      	ldrh	r1, [r7, #38]	; 0x26
 8006366:	2201      	movs	r2, #1
 8006368:	2000      	movs	r0, #0
 800636a:	4798      	blx	r3

0800636c <??llcp_pkt_received_40>:
 800636c:	2105      	movs	r1, #5
 800636e:	72b1      	strb	r1, [r6, #10]
 8006370:	69f8      	ldr	r0, [r7, #28]
 8006372:	2800      	cmp	r0, #0
 8006374:	bf0c      	ite	eq
 8006376:	2001      	moveq	r0, #1
 8006378:	2000      	movne	r0, #0
 800637a:	f7f9 ff29 	bl	80001d0 <bsp_assert>
 800637e:	f109 0268 	add.w	r2, r9, #104	; 0x68
 8006382:	2100      	movs	r1, #0
 8006384:	f20f 50cd 	addw	r0, pc, #1485	; 0x5cd
 8006388:	f7ff f9e3 	bl	8005752 <os_timer_create>
 800638c:	2800      	cmp	r0, #0
 800638e:	bf14      	ite	ne
 8006390:	2101      	movne	r1, #1
 8006392:	2100      	moveq	r1, #0
 8006394:	61f8      	str	r0, [r7, #28]
 8006396:	4608      	mov	r0, r1
 8006398:	f7f9 ff1a 	bl	80001d0 <bsp_assert>

0800639c <??llcp_pkt_received_39>:
 800639c:	2007      	movs	r0, #7
 800639e:	7030      	strb	r0, [r6, #0]
 80063a0:	e045      	b.n	800642e <??llcp_pkt_received_41>

080063a2 <??llcp_pkt_received_36>:
 80063a2:	7971      	ldrb	r1, [r6, #5]
 80063a4:	2907      	cmp	r1, #7
 80063a6:	d142      	bne.n	800642e <??llcp_pkt_received_41>
 80063a8:	f109 00c8 	add.w	r0, r9, #200	; 0xc8
 80063ac:	f7ff fb1f 	bl	80059ee <os_timer_stop_free>
 80063b0:	2001      	movs	r0, #1
 80063b2:	6338      	str	r0, [r7, #48]	; 0x30
 80063b4:	f8c7 8034 	str.w	r8, [r7, #52]	; 0x34
 80063b8:	7831      	ldrb	r1, [r6, #0]
 80063ba:	2200      	movs	r2, #0
 80063bc:	72b2      	strb	r2, [r6, #10]
 80063be:	f8df 0ae0 	ldr.w	r0, [pc, #2784]	; 8006ea0 <??DataTable10>
 80063c2:	6800      	ldr	r0, [r0, #0]
 80063c4:	2908      	cmp	r1, #8
 80063c6:	d105      	bne.n	80063d4 <??llcp_pkt_received_42>
 80063c8:	6bc2      	ldr	r2, [r0, #60]	; 0x3c
 80063ca:	b30a      	cbz	r2, 8006410 <??llcp_pkt_received_43>
 80063cc:	8cf9      	ldrh	r1, [r7, #38]	; 0x26
 80063ce:	2000      	movs	r0, #0
 80063d0:	4790      	blx	r2
 80063d2:	e01d      	b.n	8006410 <??llcp_pkt_received_43>

080063d4 <??llcp_pkt_received_42>:
 80063d4:	6b83      	ldr	r3, [r0, #56]	; 0x38
 80063d6:	b11b      	cbz	r3, 80063e0 <??llcp_pkt_received_44>
 80063d8:	8cf9      	ldrh	r1, [r7, #38]	; 0x26
 80063da:	2201      	movs	r2, #1
 80063dc:	2000      	movs	r0, #0
 80063de:	4798      	blx	r3

080063e0 <??llcp_pkt_received_44>:
 80063e0:	2105      	movs	r1, #5
 80063e2:	72b1      	strb	r1, [r6, #10]
 80063e4:	69f8      	ldr	r0, [r7, #28]
 80063e6:	2800      	cmp	r0, #0
 80063e8:	bf0c      	ite	eq
 80063ea:	2001      	moveq	r0, #1
 80063ec:	2000      	movne	r0, #0
 80063ee:	f7f9 feef 	bl	80001d0 <bsp_assert>
 80063f2:	f109 0268 	add.w	r2, r9, #104	; 0x68
 80063f6:	2100      	movs	r1, #0
 80063f8:	f20f 5059 	addw	r0, pc, #1369	; 0x559
 80063fc:	f7ff f9a9 	bl	8005752 <os_timer_create>
 8006400:	2800      	cmp	r0, #0
 8006402:	bf14      	ite	ne
 8006404:	2101      	movne	r1, #1
 8006406:	2100      	moveq	r1, #0
 8006408:	61f8      	str	r0, [r7, #28]
 800640a:	4608      	mov	r0, r1
 800640c:	f7f9 fee0 	bl	80001d0 <bsp_assert>

08006410 <??llcp_pkt_received_43>:
 8006410:	2007      	movs	r0, #7
 8006412:	2100      	movs	r1, #0
 8006414:	7030      	strb	r0, [r6, #0]
 8006416:	7171      	strb	r1, [r6, #5]
 8006418:	68b8      	ldr	r0, [r7, #8]
 800641a:	f7fb fc48 	bl	8001cae <evnt_schdlr_send_pndng_data_pkt>
 800641e:	6cb9      	ldr	r1, [r7, #72]	; 0x48
 8006420:	b129      	cbz	r1, 800642e <??llcp_pkt_received_41>
 8006422:	4642      	mov	r2, r8
 8006424:	4648      	mov	r0, r9
 8006426:	f7ff fe2f 	bl	8006088 <llcp_pkt_received>
 800642a:	2000      	movs	r0, #0
 800642c:	64b8      	str	r0, [r7, #72]	; 0x48

0800642e <??llcp_pkt_received_41>:
 800642e:	69f8      	ldr	r0, [r7, #28]
 8006430:	f7ff fa6b 	bl	800590a <os_timer_stop>
 8006434:	a90d      	add	r1, sp, #52	; 0x34
 8006436:	4648      	mov	r0, r9
 8006438:	f00f fd1d 	bl	8015e76 <conn_mngr_get_ping_timeout_value>
 800643c:	990d      	ldr	r1, [sp, #52]	; 0x34
 800643e:	69f8      	ldr	r0, [r7, #28]
 8006440:	0149      	lsls	r1, r1, #5
 8006442:	f7ff fa29 	bl	8005898 <os_timer_start>
 8006446:	e6bd      	b.n	80061c4 <??llcp_pkt_received_12>

08006448 <??llcp_pkt_received_45>:
 8006448:	7970      	ldrb	r0, [r6, #5]
 800644a:	2807      	cmp	r0, #7
 800644c:	f47f aeba 	bne.w	80061c4 <??llcp_pkt_received_12>
 8006450:	21aa      	movs	r1, #170	; 0xaa
 8006452:	2003      	movs	r0, #3
 8006454:	7071      	strb	r1, [r6, #1]
 8006456:	7130      	strb	r0, [r6, #4]
 8006458:	2300      	movs	r3, #0
 800645a:	220b      	movs	r2, #11
 800645c:	4649      	mov	r1, r9
 800645e:	2000      	movs	r0, #0
 8006460:	f7ff fd0d 	bl	8005e7e <llcp_cntrl_pkt_init>
 8006464:	e6ae      	b.n	80061c4 <??llcp_pkt_received_12>

08006466 <??llcp_pkt_received_46>:
 8006466:	7970      	ldrb	r0, [r6, #5]
 8006468:	2809      	cmp	r0, #9
 800646a:	bf18      	it	ne
 800646c:	2807      	cmpne	r0, #7
 800646e:	f47f aea9 	bne.w	80061c4 <??llcp_pkt_received_12>
 8006472:	f109 00c8 	add.w	r0, r9, #200	; 0xc8
 8006476:	f7ff faba 	bl	80059ee <os_timer_stop_free>
 800647a:	7971      	ldrb	r1, [r6, #5]
 800647c:	2000      	movs	r0, #0
 800647e:	72b0      	strb	r0, [r6, #10]
 8006480:	2907      	cmp	r1, #7
 8006482:	d10d      	bne.n	80064a0 <??llcp_pkt_received_47>
 8006484:	f8df 0a18 	ldr.w	r0, [pc, #2584]	; 8006ea0 <??DataTable10>
 8006488:	6801      	ldr	r1, [r0, #0]
 800648a:	6b8b      	ldr	r3, [r1, #56]	; 0x38
 800648c:	b133      	cbz	r3, 800649c <??llcp_pkt_received_48>
 800648e:	f109 00b8 	add.w	r0, r9, #184	; 0xb8
 8006492:	8cc1      	ldrh	r1, [r0, #38]	; 0x26
 8006494:	f89d 0008 	ldrb.w	r0, [sp, #8]
 8006498:	2200      	movs	r2, #0
 800649a:	4798      	blx	r3

0800649c <??llcp_pkt_received_48>:
 800649c:	20bb      	movs	r0, #187	; 0xbb
 800649e:	7070      	strb	r0, [r6, #1]

080064a0 <??llcp_pkt_received_47>:
 80064a0:	2100      	movs	r1, #0
 80064a2:	7171      	strb	r1, [r6, #5]
 80064a4:	e68e      	b.n	80061c4 <??llcp_pkt_received_12>

080064a6 <??llcp_pkt_received_7>:
 80064a6:	2f0f      	cmp	r7, #15
 80064a8:	d132      	bne.n	8006510 <??llcp_pkt_received_49>
 80064aa:	7970      	ldrb	r0, [r6, #5]
 80064ac:	280a      	cmp	r0, #10
 80064ae:	f47f ae89 	bne.w	80061c4 <??llcp_pkt_received_12>
 80064b2:	f109 00c8 	add.w	r0, r9, #200	; 0xc8
 80064b6:	f7ff fa9a 	bl	80059ee <os_timer_stop_free>
 80064ba:	2000      	movs	r0, #0
 80064bc:	72b0      	strb	r0, [r6, #10]
 80064be:	7170      	strb	r0, [r6, #5]
 80064c0:	f89d 0009 	ldrb.w	r0, [sp, #9]
 80064c4:	281a      	cmp	r0, #26
 80064c6:	bf04      	itt	eq
 80064c8:	79f0      	ldrbeq	r0, [r6, #7]
 80064ca:	2800      	cmpeq	r0, #0
 80064cc:	d038      	beq.n	8006540 <??llcp_pkt_received_50>
 80064ce:	79f0      	ldrb	r0, [r6, #7]
 80064d0:	2801      	cmp	r0, #1
 80064d2:	d109      	bne.n	80064e8 <??llcp_pkt_received_51>
 80064d4:	f109 0178 	add.w	r1, r9, #120	; 0x78
 80064d8:	f8b9 00b8 	ldrh.w	r0, [r9, #184]	; 0xb8
 80064dc:	8f4a      	ldrh	r2, [r1, #58]	; 0x3a
 80064de:	4282      	cmp	r2, r0
 80064e0:	d002      	beq.n	80064e8 <??llcp_pkt_received_51>
 80064e2:	8748      	strh	r0, [r1, #58]	; 0x3a
 80064e4:	8708      	strh	r0, [r1, #56]	; 0x38
 80064e6:	86c8      	strh	r0, [r1, #54]	; 0x36

080064e8 <??llcp_pkt_received_51>:
 80064e8:	f8df 09b4 	ldr.w	r0, [pc, #2484]	; 8006ea0 <??DataTable10>
 80064ec:	6801      	ldr	r1, [r0, #0]
 80064ee:	6a8e      	ldr	r6, [r1, #40]	; 0x28
 80064f0:	2e00      	cmp	r6, #0
 80064f2:	f43f ae67 	beq.w	80061c4 <??llcp_pkt_received_12>
 80064f6:	f8b9 101a 	ldrh.w	r1, [r9, #26]
 80064fa:	f109 00b8 	add.w	r0, r9, #184	; 0xb8
 80064fe:	9100      	str	r1, [sp, #0]
 8006500:	8c83      	ldrh	r3, [r0, #36]	; 0x24
 8006502:	8cc1      	ldrh	r1, [r0, #38]	; 0x26
 8006504:	f8b9 2016 	ldrh.w	r2, [r9, #22]
 8006508:	f89d 0009 	ldrb.w	r0, [sp, #9]

0800650c <??llcp_pkt_received_52>:
 800650c:	47b0      	blx	r6
 800650e:	e659      	b.n	80061c4 <??llcp_pkt_received_12>

08006510 <??llcp_pkt_received_49>:
 8006510:	2f10      	cmp	r7, #16
 8006512:	d142      	bne.n	800659a <??llcp_pkt_received_53>
 8006514:	290a      	cmp	r1, #10
 8006516:	f47f ae55 	bne.w	80061c4 <??llcp_pkt_received_12>
 800651a:	7970      	ldrb	r0, [r6, #5]
 800651c:	280c      	cmp	r0, #12
 800651e:	f43f ae51 	beq.w	80061c4 <??llcp_pkt_received_12>
 8006522:	f109 00d0 	add.w	r0, r9, #208	; 0xd0
 8006526:	f7ff fa62 	bl	80059ee <os_timer_stop_free>
 800652a:	2000      	movs	r0, #0
 800652c:	72b0      	strb	r0, [r6, #10]
 800652e:	71b0      	strb	r0, [r6, #6]
 8006530:	f89d c009 	ldrb.w	ip, [sp, #9]
 8006534:	f1bc 0f1a 	cmp.w	ip, #26
 8006538:	bf04      	itt	eq
 800653a:	79f0      	ldrbeq	r0, [r6, #7]
 800653c:	2800      	cmpeq	r0, #0
 800653e:	d11a      	bne.n	8006576 <??llcp_pkt_received_54>

08006540 <??llcp_pkt_received_50>:
 8006540:	f109 00b8 	add.w	r0, r9, #184	; 0xb8
 8006544:	8cc0      	ldrh	r0, [r0, #38]	; 0x26
 8006546:	f109 017c 	add.w	r1, r9, #124	; 0x7c
 800654a:	f001 fa29 	bl	80079a0 <llcp_update_conn_param>

0800654e <??llcp_pkt_received_55>:
 800654e:	2f16      	cmp	r7, #22
 8006550:	bf04      	itt	eq
 8006552:	7970      	ldrbeq	r0, [r6, #5]
 8006554:	280c      	cmpeq	r0, #12
 8006556:	f47f ae35 	bne.w	80061c4 <??llcp_pkt_received_12>
 800655a:	f109 00c8 	add.w	r0, r9, #200	; 0xc8
 800655e:	f7ff fa46 	bl	80059ee <os_timer_stop_free>
 8006562:	2000      	movs	r0, #0
 8006564:	7170      	strb	r0, [r6, #5]
 8006566:	f89d 3009 	ldrb.w	r3, [sp, #9]
 800656a:	7bf2      	ldrb	r2, [r6, #15]
 800656c:	7bb1      	ldrb	r1, [r6, #14]
 800656e:	4648      	mov	r0, r9
 8006570:	f00f fcfc 	bl	8015f6c <conn_mngr_send_le_phy_update_complete_event>
 8006574:	e626      	b.n	80061c4 <??llcp_pkt_received_12>

08006576 <??llcp_pkt_received_54>:
 8006576:	f8df 0928 	ldr.w	r0, [pc, #2344]	; 8006ea0 <??DataTable10>
 800657a:	6801      	ldr	r1, [r0, #0]
 800657c:	6a8e      	ldr	r6, [r1, #40]	; 0x28
 800657e:	2e00      	cmp	r6, #0
 8006580:	f43f ae20 	beq.w	80061c4 <??llcp_pkt_received_12>
 8006584:	f8b9 101a 	ldrh.w	r1, [r9, #26]
 8006588:	f109 00b8 	add.w	r0, r9, #184	; 0xb8
 800658c:	9100      	str	r1, [sp, #0]
 800658e:	8c83      	ldrh	r3, [r0, #36]	; 0x24
 8006590:	8cc1      	ldrh	r1, [r0, #38]	; 0x26
 8006592:	f8b9 2016 	ldrh.w	r2, [r9, #22]
 8006596:	4660      	mov	r0, ip
 8006598:	e7b8      	b.n	800650c <??llcp_pkt_received_52>

0800659a <??llcp_pkt_received_53>:
 800659a:	2f03      	cmp	r7, #3
 800659c:	d1d7      	bne.n	800654e <??llcp_pkt_received_55>
 800659e:	7970      	ldrb	r0, [r6, #5]
 80065a0:	2807      	cmp	r0, #7
 80065a2:	f47f ae0f 	bne.w	80061c4 <??llcp_pkt_received_12>
 80065a6:	f109 00c8 	add.w	r0, r9, #200	; 0xc8
 80065aa:	f7ff fa20 	bl	80059ee <os_timer_stop_free>
 80065ae:	2000      	movs	r0, #0
 80065b0:	72b0      	strb	r0, [r6, #10]
 80065b2:	2100      	movs	r1, #0
 80065b4:	7171      	strb	r1, [r6, #5]
 80065b6:	f8df 08e8 	ldr.w	r0, [pc, #2280]	; 8006ea0 <??DataTable10>
 80065ba:	6802      	ldr	r2, [r0, #0]
 80065bc:	6b93      	ldr	r3, [r2, #56]	; 0x38
 80065be:	b913      	cbnz	r3, 80065c6 <??llcp_pkt_received_56>

080065c0 <??llcp_pkt_received_57>:
 80065c0:	20bb      	movs	r0, #187	; 0xbb
 80065c2:	7070      	strb	r0, [r6, #1]
 80065c4:	e5fe      	b.n	80061c4 <??llcp_pkt_received_12>

080065c6 <??llcp_pkt_received_56>:
 80065c6:	f109 00b8 	add.w	r0, r9, #184	; 0xb8
 80065ca:	8cc1      	ldrh	r1, [r0, #38]	; 0x26
 80065cc:	f89d 0009 	ldrb.w	r0, [sp, #9]
 80065d0:	2200      	movs	r2, #0
 80065d2:	4798      	blx	r3
 80065d4:	e7f4      	b.n	80065c0 <??llcp_pkt_received_57>

080065d6 <??llcp_pkt_received_58>:
 80065d6:	f89d 0008 	ldrb.w	r0, [sp, #8]
 80065da:	280e      	cmp	r0, #14
 80065dc:	d008      	beq.n	80065f0 <??llcp_pkt_received_59>
 80065de:	280f      	cmp	r0, #15
 80065e0:	d02e      	beq.n	8006640 <??llcp_pkt_received_60>
 80065e2:	2812      	cmp	r0, #18
 80065e4:	d01a      	beq.n	800661c <??llcp_pkt_received_61>
 80065e6:	2814      	cmp	r0, #20
 80065e8:	d01c      	beq.n	8006624 <??llcp_pkt_received_62>
 80065ea:	2816      	cmp	r0, #22
 80065ec:	d058      	beq.n	80066a0 <??llcp_pkt_received_63>
 80065ee:	e5e9      	b.n	80061c4 <??llcp_pkt_received_12>

080065f0 <??llcp_pkt_received_59>:
 80065f0:	f109 00c8 	add.w	r0, r9, #200	; 0xc8
 80065f4:	f7ff f9fb 	bl	80059ee <os_timer_stop_free>
 80065f8:	2000      	movs	r0, #0
 80065fa:	72b0      	strb	r0, [r6, #10]
 80065fc:	7170      	strb	r0, [r6, #5]
 80065fe:	f8df 08a0 	ldr.w	r0, [pc, #2208]	; 8006ea0 <??DataTable10>
 8006602:	6802      	ldr	r2, [r0, #0]
 8006604:	6913      	ldr	r3, [r2, #16]
 8006606:	2b00      	cmp	r3, #0
 8006608:	f43f addc 	beq.w	80061c4 <??llcp_pkt_received_12>
 800660c:	f109 00b8 	add.w	r0, r9, #184	; 0xb8
 8006610:	8cc1      	ldrh	r1, [r0, #38]	; 0x26
 8006612:	f109 0246 	add.w	r2, r9, #70	; 0x46
 8006616:	201a      	movs	r0, #26
 8006618:	4798      	blx	r3
 800661a:	e5d3      	b.n	80061c4 <??llcp_pkt_received_12>

0800661c <??llcp_pkt_received_61>:
 800661c:	4648      	mov	r0, r9
 800661e:	f000 feff 	bl	8007420 <llcp_ping_received>
 8006622:	e5cf      	b.n	80061c4 <??llcp_pkt_received_12>

08006624 <??llcp_pkt_received_62>:
 8006624:	f899 0046 	ldrb.w	r0, [r9, #70]	; 0x46
 8006628:	f000 00df 	and.w	r0, r0, #223	; 0xdf
 800662c:	f889 0046 	strb.w	r0, [r9, #70]	; 0x46
 8006630:	f109 00c8 	add.w	r0, r9, #200	; 0xc8
 8006634:	f7ff f9db 	bl	80059ee <os_timer_stop_free>
 8006638:	2000      	movs	r0, #0
 800663a:	72b0      	strb	r0, [r6, #10]
 800663c:	7170      	strb	r0, [r6, #5]
 800663e:	e5c1      	b.n	80061c4 <??llcp_pkt_received_12>

08006640 <??llcp_pkt_received_60>:
 8006640:	f899 0046 	ldrb.w	r0, [r9, #70]	; 0x46
 8006644:	f109 07b8 	add.w	r7, r9, #184	; 0xb8
 8006648:	f000 00fd 	and.w	r0, r0, #253	; 0xfd
 800664c:	f889 0046 	strb.w	r0, [r9, #70]	; 0x46
 8006650:	f109 00c8 	add.w	r0, r9, #200	; 0xc8
 8006654:	f7ff f9cb 	bl	80059ee <os_timer_stop_free>
 8006658:	2000      	movs	r0, #0
 800665a:	72b0      	strb	r0, [r6, #10]
 800665c:	7170      	strb	r0, [r6, #5]
 800665e:	79f0      	ldrb	r0, [r6, #7]
 8006660:	b928      	cbnz	r0, 800666e <??llcp_pkt_received_64>
 8006662:	8cf8      	ldrh	r0, [r7, #38]	; 0x26
 8006664:	f109 017c 	add.w	r1, r9, #124	; 0x7c
 8006668:	f001 f99a 	bl	80079a0 <llcp_update_conn_param>
 800666c:	e5aa      	b.n	80061c4 <??llcp_pkt_received_12>

0800666e <??llcp_pkt_received_64>:
 800666e:	f109 0078 	add.w	r0, r9, #120	; 0x78
 8006672:	8839      	ldrh	r1, [r7, #0]
 8006674:	8f42      	ldrh	r2, [r0, #58]	; 0x3a
 8006676:	428a      	cmp	r2, r1
 8006678:	d002      	beq.n	8006680 <??llcp_pkt_received_65>
 800667a:	8741      	strh	r1, [r0, #58]	; 0x3a
 800667c:	8701      	strh	r1, [r0, #56]	; 0x38
 800667e:	86c1      	strh	r1, [r0, #54]	; 0x36

08006680 <??llcp_pkt_received_65>:
 8006680:	f8df 081c 	ldr.w	r0, [pc, #2076]	; 8006ea0 <??DataTable10>
 8006684:	6801      	ldr	r1, [r0, #0]
 8006686:	6a8e      	ldr	r6, [r1, #40]	; 0x28
 8006688:	2e00      	cmp	r6, #0
 800668a:	f43f ad9b 	beq.w	80061c4 <??llcp_pkt_received_12>
 800668e:	f8b9 001a 	ldrh.w	r0, [r9, #26]
 8006692:	9000      	str	r0, [sp, #0]
 8006694:	8cbb      	ldrh	r3, [r7, #36]	; 0x24
 8006696:	f8b9 2016 	ldrh.w	r2, [r9, #22]
 800669a:	8cf9      	ldrh	r1, [r7, #38]	; 0x26
 800669c:	201a      	movs	r0, #26
 800669e:	e735      	b.n	800650c <??llcp_pkt_received_52>

080066a0 <??llcp_pkt_received_63>:
 80066a0:	f109 00c8 	add.w	r0, r9, #200	; 0xc8
 80066a4:	f7ff f9a3 	bl	80059ee <os_timer_stop_free>
 80066a8:	2000      	movs	r0, #0
 80066aa:	7170      	strb	r0, [r6, #5]
 80066ac:	f109 0778 	add.w	r7, r9, #120	; 0x78
 80066b0:	7839      	ldrb	r1, [r7, #0]
 80066b2:	2901      	cmp	r1, #1
 80066b4:	d107      	bne.n	80066c6 <??llcp_pkt_received_66>
 80066b6:	7bf2      	ldrb	r2, [r6, #15]
 80066b8:	7bb1      	ldrb	r1, [r6, #14]
 80066ba:	2300      	movs	r3, #0
 80066bc:	4648      	mov	r0, r9
 80066be:	f00f fc55 	bl	8015f6c <conn_mngr_send_le_phy_update_complete_event>
 80066c2:	2000      	movs	r0, #0
 80066c4:	7038      	strb	r0, [r7, #0]

080066c6 <??llcp_pkt_received_66>:
 80066c6:	75b0      	strb	r0, [r6, #22]
 80066c8:	e57c      	b.n	80061c4 <??llcp_pkt_received_12>

080066ca <??llcp_pkt_received_67>:
 80066ca:	79f0      	ldrb	r0, [r6, #7]
 80066cc:	2800      	cmp	r0, #0
 80066ce:	bf04      	itt	eq
 80066d0:	290c      	cmpeq	r1, #12
 80066d2:	2124      	moveq	r1, #36	; 0x24
 80066d4:	f000 80b3 	beq.w	800683e <??llcp_pkt_received_5>
 80066d8:	210c      	movs	r1, #12
 80066da:	71b1      	strb	r1, [r6, #6]
 80066dc:	b9a0      	cbnz	r0, 8006708 <??llcp_pkt_received_68>
 80066de:	7970      	ldrb	r0, [r6, #5]
 80066e0:	2801      	cmp	r0, #1
 80066e2:	bf1c      	itt	ne
 80066e4:	2802      	cmpne	r0, #2
 80066e6:	280a      	cmpne	r0, #10
 80066e8:	d017      	beq.n	800671a <??llcp_pkt_received_69>
 80066ea:	280c      	cmp	r0, #12
 80066ec:	d117      	bne.n	800671e <??llcp_pkt_received_70>
 80066ee:	2423      	movs	r4, #35	; 0x23

080066f0 <??llcp_pkt_received_71>:
 80066f0:	f89d 1004 	ldrb.w	r1, [sp, #4]
 80066f4:	f88d 4009 	strb.w	r4, [sp, #9]
 80066f8:	2300      	movs	r3, #0
 80066fa:	f88d 1008 	strb.w	r1, [sp, #8]
 80066fe:	2211      	movs	r2, #17
 8006700:	4649      	mov	r1, r9
 8006702:	a802      	add	r0, sp, #8
 8006704:	f7ff fbbb 	bl	8005e7e <llcp_cntrl_pkt_init>

08006708 <??llcp_pkt_received_68>:
 8006708:	79f0      	ldrb	r0, [r6, #7]
 800670a:	2801      	cmp	r0, #1
 800670c:	f47f ad5a 	bne.w	80061c4 <??llcp_pkt_received_12>
 8006710:	a902      	add	r1, sp, #8
 8006712:	4648      	mov	r0, r9
 8006714:	f000 fa3f 	bl	8006b96 <llcp_ll_phy_req_received>
 8006718:	e553      	b.n	80061c2 <??llcp_pkt_received_11>

0800671a <??llcp_pkt_received_69>:
 800671a:	242a      	movs	r4, #42	; 0x2a
 800671c:	e7e8      	b.n	80066f0 <??llcp_pkt_received_71>

0800671e <??llcp_pkt_received_70>:
 800671e:	a902      	add	r1, sp, #8
 8006720:	4648      	mov	r0, r9
 8006722:	f000 fa38 	bl	8006b96 <llcp_ll_phy_req_received>
 8006726:	4604      	mov	r4, r0
 8006728:	e7ee      	b.n	8006708 <??llcp_pkt_received_68>

0800672a <??llcp_pkt_received_72>:
 800672a:	79f0      	ldrb	r0, [r6, #7]
 800672c:	b938      	cbnz	r0, 800673e <??llcp_pkt_received_73>
 800672e:	9902      	ldr	r1, [sp, #8]
 8006730:	4648      	mov	r0, r9
 8006732:	f000 f92e 	bl	8006992 <llcp_phy_selection>
 8006736:	4648      	mov	r0, r9
 8006738:	f000 fa96 	bl	8006c68 <llcp_ll_phy_update_ind>
 800673c:	4604      	mov	r4, r0

0800673e <??llcp_pkt_received_73>:
 800673e:	79f0      	ldrb	r0, [r6, #7]
 8006740:	2801      	cmp	r0, #1
 8006742:	f47f ad3f 	bne.w	80061c4 <??llcp_pkt_received_12>
 8006746:	2117      	movs	r1, #23
 8006748:	f88d 1008 	strb.w	r1, [sp, #8]
 800674c:	2300      	movs	r3, #0
 800674e:	e0bb      	b.n	80068c8 <??llcp_pkt_received_74>

08006750 <??llcp_pkt_received_75>:
 8006750:	79f0      	ldrb	r0, [r6, #7]
 8006752:	2400      	movs	r4, #0
 8006754:	2801      	cmp	r0, #1
 8006756:	d17b      	bne.n	8006850 <??llcp_pkt_received_76>
 8006758:	f109 07b8 	add.w	r7, r9, #184	; 0xb8
 800675c:	69b8      	ldr	r0, [r7, #24]
 800675e:	b118      	cbz	r0, 8006768 <??llcp_pkt_received_77>
 8006760:	f109 00d0 	add.w	r0, r9, #208	; 0xd0
 8006764:	f7ff f943 	bl	80059ee <os_timer_stop_free>

08006768 <??llcp_pkt_received_77>:
 8006768:	6938      	ldr	r0, [r7, #16]
 800676a:	b118      	cbz	r0, 8006774 <??llcp_pkt_received_78>
 800676c:	f109 00c8 	add.w	r0, r9, #200	; 0xc8
 8006770:	f7ff f93d 	bl	80059ee <os_timer_stop_free>

08006774 <??llcp_pkt_received_78>:
 8006774:	f89d 0008 	ldrb.w	r0, [sp, #8]
 8006778:	2803      	cmp	r0, #3
 800677a:	bf1c      	itt	ne
 800677c:	f89d 1009 	ldrbne.w	r1, [sp, #9]
 8006780:	2903      	cmpne	r1, #3
 8006782:	d060      	beq.n	8006846 <??llcp_pkt_received_79>
 8006784:	2804      	cmp	r0, #4
 8006786:	bfd8      	it	le
 8006788:	2904      	cmple	r1, #4
 800678a:	dc5c      	bgt.n	8006846 <??llcp_pkt_received_79>
 800678c:	2800      	cmp	r0, #0
 800678e:	bf08      	it	eq
 8006790:	2900      	cmpeq	r1, #0
 8006792:	d115      	bne.n	80067c0 <??llcp_pkt_received_80>
 8006794:	f109 0778 	add.w	r7, r9, #120	; 0x78
 8006798:	7838      	ldrb	r0, [r7, #0]
 800679a:	2801      	cmp	r0, #1
 800679c:	d106      	bne.n	80067ac <??llcp_pkt_received_81>
 800679e:	7bf2      	ldrb	r2, [r6, #15]
 80067a0:	7bb1      	ldrb	r1, [r6, #14]
 80067a2:	2300      	movs	r3, #0
 80067a4:	4648      	mov	r0, r9
 80067a6:	f00f fbe1 	bl	8015f6c <conn_mngr_send_le_phy_update_complete_event>
 80067aa:	703c      	strb	r4, [r7, #0]

080067ac <??llcp_pkt_received_81>:
 80067ac:	7971      	ldrb	r1, [r6, #5]
 80067ae:	290c      	cmp	r1, #12
 80067b0:	bf08      	it	eq
 80067b2:	7174      	strbeq	r4, [r6, #5]
 80067b4:	79b0      	ldrb	r0, [r6, #6]
 80067b6:	280c      	cmp	r0, #12
 80067b8:	bf08      	it	eq
 80067ba:	71b4      	strbeq	r4, [r6, #6]
 80067bc:	75b4      	strb	r4, [r6, #22]
 80067be:	e0b8      	b.n	8006932 <??llcp_pkt_received_3>

080067c0 <??llcp_pkt_received_80>:
 80067c0:	f8bd 500a 	ldrh.w	r5, [sp, #10]
 80067c4:	f8b9 2016 	ldrh.w	r2, [r9, #22]
 80067c8:	8c79      	ldrh	r1, [r7, #34]	; 0x22
 80067ca:	4628      	mov	r0, r5
 80067cc:	f7ff fb06 	bl	8005ddc <llcp_get_instant_time>
 80067d0:	8c79      	ldrh	r1, [r7, #34]	; 0x22
 80067d2:	4680      	mov	r8, r0
 80067d4:	4628      	mov	r0, r5
 80067d6:	f000 f8b0 	bl	800693a <llcp_check_instant>
 80067da:	bb70      	cbnz	r0, 800683a <??llcp_pkt_received_82>
 80067dc:	f109 0558 	add.w	r5, r9, #88	; 0x58
 80067e0:	f8c5 9000 	str.w	r9, [r5]
 80067e4:	2008      	movs	r0, #8
 80067e6:	7128      	strb	r0, [r5, #4]
 80067e8:	210c      	movs	r1, #12
 80067ea:	71b1      	strb	r1, [r6, #6]
 80067ec:	f8bd 000a 	ldrh.w	r0, [sp, #10]
 80067f0:	2201      	movs	r2, #1
 80067f2:	83e8      	strh	r0, [r5, #30]
 80067f4:	f89d 0009 	ldrb.w	r0, [sp, #9]
 80067f8:	7728      	strb	r0, [r5, #28]
 80067fa:	f89d 1008 	ldrb.w	r1, [sp, #8]
 80067fe:	7769      	strb	r1, [r5, #29]
 8006800:	75b2      	strb	r2, [r6, #22]
 8006802:	6978      	ldr	r0, [r7, #20]
 8006804:	2800      	cmp	r0, #0
 8006806:	bf0c      	ite	eq
 8006808:	2001      	moveq	r0, #1
 800680a:	2000      	movne	r0, #0
 800680c:	f7f9 fce0 	bl	80001d0 <bsp_assert>
 8006810:	462a      	mov	r2, r5
 8006812:	2100      	movs	r1, #0
 8006814:	f20f 103d 	addw	r0, pc, #317	; 0x13d
 8006818:	f7fe ff9b 	bl	8005752 <os_timer_create>
 800681c:	2800      	cmp	r0, #0
 800681e:	bf14      	ite	ne
 8006820:	2101      	movne	r1, #1
 8006822:	2100      	moveq	r1, #0
 8006824:	6178      	str	r0, [r7, #20]
 8006826:	4608      	mov	r0, r1
 8006828:	f7f9 fcd2 	bl	80001d0 <bsp_assert>
 800682c:	6978      	ldr	r0, [r7, #20]
 800682e:	84bc      	strh	r4, [r7, #36]	; 0x24
 8006830:	ea4f 1148 	mov.w	r1, r8, lsl #5
 8006834:	f7ff f830 	bl	8005898 <os_timer_start>
 8006838:	e07b      	b.n	8006932 <??llcp_pkt_received_3>

0800683a <??llcp_pkt_received_82>:
 800683a:	2428      	movs	r4, #40	; 0x28
 800683c:	2128      	movs	r1, #40	; 0x28

0800683e <??llcp_pkt_received_5>:
 800683e:	4648      	mov	r0, r9
 8006840:	f00f fa7a 	bl	8015d38 <conn_mngr_disconnect>
 8006844:	e075      	b.n	8006932 <??llcp_pkt_received_3>

08006846 <??llcp_pkt_received_79>:
 8006846:	211e      	movs	r1, #30
 8006848:	4648      	mov	r0, r9
 800684a:	f00f fa75 	bl	8015d38 <conn_mngr_disconnect>
 800684e:	e040      	b.n	80068d2 <??llcp_pkt_received_83>

08006850 <??llcp_pkt_received_76>:
 8006850:	2018      	movs	r0, #24
 8006852:	e036      	b.n	80068c2 <??llcp_pkt_received_84>

08006854 <??llcp_pkt_received_85>:
 8006854:	79f0      	ldrb	r0, [r6, #7]
 8006856:	2400      	movs	r4, #0
 8006858:	bb90      	cbnz	r0, 80068c0 <??llcp_pkt_received_86>
 800685a:	72b4      	strb	r4, [r6, #10]
 800685c:	f89d 0009 	ldrb.w	r0, [sp, #9]
 8006860:	1e80      	subs	r0, r0, #2
 8006862:	2823      	cmp	r0, #35	; 0x23
 8006864:	d82a      	bhi.n	80068bc <??llcp_pkt_received_87>
 8006866:	f89d 0008 	ldrb.w	r0, [sp, #8]
 800686a:	b338      	cbz	r0, 80068bc <??llcp_pkt_received_87>
 800686c:	2808      	cmp	r0, #8
 800686e:	da25      	bge.n	80068bc <??llcp_pkt_received_87>
 8006870:	f109 0078 	add.w	r0, r9, #120	; 0x78
 8006874:	7484      	strb	r4, [r0, #18]
 8006876:	f209 1035 	addw	r0, r9, #309	; 0x135
 800687a:	a902      	add	r1, sp, #8
 800687c:	2203      	movs	r2, #3
 800687e:	f02a fb32 	bl	8030ee6 <__aeabi_memcpy>
 8006882:	2001      	movs	r0, #1
 8006884:	7670      	strb	r0, [r6, #25]
 8006886:	7bf1      	ldrb	r1, [r6, #15]
 8006888:	7df0      	ldrb	r0, [r6, #23]
 800688a:	4201      	tst	r1, r0
 800688c:	d051      	beq.n	8006932 <??llcp_pkt_received_3>
 800688e:	f109 0030 	add.w	r0, r9, #48	; 0x30
 8006892:	f00f f9b2 	bl	8015bfa <conn_mngr_calc_num_of_used_data_chnls>
 8006896:	f89d 1009 	ldrb.w	r1, [sp, #9]
 800689a:	4288      	cmp	r0, r1
 800689c:	d249      	bcs.n	8006932 <??llcp_pkt_received_3>
 800689e:	2205      	movs	r2, #5
 80068a0:	f109 0130 	add.w	r1, r9, #48	; 0x30
 80068a4:	a80e      	add	r0, sp, #56	; 0x38
 80068a6:	f008 f94f 	bl	800eb48 <ble_memcpy>
 80068aa:	a90e      	add	r1, sp, #56	; 0x38
 80068ac:	4648      	mov	r0, r9
 80068ae:	f7ff fb8d 	bl	8005fcc <llcp_set_req_chnls_in_min_chnls_prcdr>
 80068b2:	a90e      	add	r1, sp, #56	; 0x38
 80068b4:	4648      	mov	r0, r9
 80068b6:	f001 fb89 	bl	8007fcc <llcp_update_chnl_map_per_connection>
 80068ba:	e03a      	b.n	8006932 <??llcp_pkt_received_3>

080068bc <??llcp_pkt_received_87>:
 80068bc:	2430      	movs	r4, #48	; 0x30
 80068be:	e038      	b.n	8006932 <??llcp_pkt_received_3>

080068c0 <??llcp_pkt_received_86>:
 80068c0:	2019      	movs	r0, #25

080068c2 <??llcp_pkt_received_84>:
 80068c2:	f88d 0008 	strb.w	r0, [sp, #8]
 80068c6:	2300      	movs	r3, #0

080068c8 <??llcp_pkt_received_74>:
 80068c8:	2207      	movs	r2, #7
 80068ca:	4649      	mov	r1, r9
 80068cc:	a802      	add	r0, sp, #8
 80068ce:	f7ff fad6 	bl	8005e7e <llcp_cntrl_pkt_init>

080068d2 <??llcp_pkt_received_83>:
 80068d2:	241e      	movs	r4, #30
 80068d4:	e02d      	b.n	8006932 <??llcp_pkt_received_3>

080068d6 <??llcp_pkt_received_9>:
 80068d6:	f88d 2008 	strb.w	r2, [sp, #8]
 80068da:	2300      	movs	r3, #0
 80068dc:	2207      	movs	r2, #7
 80068de:	4649      	mov	r1, r9
 80068e0:	a802      	add	r0, sp, #8
 80068e2:	f7ff facc 	bl	8005e7e <llcp_cntrl_pkt_init>
 80068e6:	2411      	movs	r4, #17
 80068e8:	e023      	b.n	8006932 <??llcp_pkt_received_3>

080068ea <??llcp_pkt_received_8>:
 80068ea:	2a0f      	cmp	r2, #15
 80068ec:	bf04      	itt	eq
 80068ee:	2801      	cmpeq	r0, #1
 80068f0:	2423      	moveq	r4, #35	; 0x23
 80068f2:	f88d 2008 	strb.w	r2, [sp, #8]
 80068f6:	f88d 4009 	strb.w	r4, [sp, #9]

080068fa <??llcp_pkt_received_13>:
 80068fa:	4955      	ldr	r1, [pc, #340]	; (8006a50 <??DataTable5_1>)
 80068fc:	2000      	movs	r0, #0
 80068fe:	f00c fe01 	bl	8013504 <allocate_data_packet>
 8006902:	0006      	movs	r6, r0
 8006904:	d015      	beq.n	8006932 <??llcp_pkt_received_3>
 8006906:	4632      	mov	r2, r6
 8006908:	a902      	add	r1, sp, #8
 800690a:	2011      	movs	r0, #17
 800690c:	f00c fa6a 	bl	8012de4 <pdu_trnsprt_hndlr_form_cntrl_pdu>
 8006910:	f109 07b8 	add.w	r7, r9, #184	; 0xb8
 8006914:	69b8      	ldr	r0, [r7, #24]
 8006916:	b118      	cbz	r0, 8006920 <??llcp_pkt_received_88>
 8006918:	f109 00d0 	add.w	r0, r9, #208	; 0xd0
 800691c:	f7ff f867 	bl	80059ee <os_timer_stop_free>

08006920 <??llcp_pkt_received_88>:
 8006920:	68b8      	ldr	r0, [r7, #8]
 8006922:	4631      	mov	r1, r6
 8006924:	f7fb f9f3 	bl	8001d0e <evnt_schdlr_add_ctrl_pkt>
 8006928:	1e40      	subs	r0, r0, #1
 800692a:	4180      	sbcs	r0, r0
 800692c:	0fc0      	lsrs	r0, r0, #31
 800692e:	f7f9 fc4f 	bl	80001d0 <bsp_assert>

08006932 <??llcp_pkt_received_3>:
 8006932:	4620      	mov	r0, r4
 8006934:	b011      	add	sp, #68	; 0x44
 8006936:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}

0800693a <llcp_check_instant>:
 800693a:	4602      	mov	r2, r0
 800693c:	1a52      	subs	r2, r2, r1
 800693e:	2000      	movs	r0, #0
 8006940:	b212      	sxth	r2, r2
 8006942:	2a02      	cmp	r2, #2
 8006944:	db03      	blt.n	800694e <??llcp_check_instant_0>
 8006946:	f647 71ff 	movw	r1, #32767	; 0x7fff
 800694a:	428a      	cmp	r2, r1
 800694c:	d100      	bne.n	8006950 <??llcp_check_instant_1>

0800694e <??llcp_check_instant_0>:
 800694e:	2028      	movs	r0, #40	; 0x28

08006950 <??llcp_check_instant_1>:
 8006950:	4770      	bx	lr
	...

08006954 <llcp_post_timer_evnt_clbk>:
 8006954:	b510      	push	{r4, lr}
 8006956:	4604      	mov	r4, r0
 8006958:	205e      	movs	r0, #94	; 0x5e
 800695a:	f7f9 fc65 	bl	8000228 <bsp_debug_gpio_set>
 800695e:	4621      	mov	r1, r4
 8006960:	2002      	movs	r0, #2
 8006962:	f7f9 fcbc 	bl	80002de <emngr_post_event>
 8006966:	205e      	movs	r0, #94	; 0x5e
 8006968:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800696c:	f7f9 bc5e 	b.w	800022c <bsp_debug_gpio_clear>

08006970 <llcp_mngr_termination_recevied_clbk>:
 8006970:	b538      	push	{r3, r4, r5, lr}
 8006972:	4605      	mov	r5, r0
 8006974:	460c      	mov	r4, r1
 8006976:	e003      	b.n	8006980 <??llcp_mngr_termination_recevied_clbk_0>

08006978 <??llcp_mngr_termination_recevied_clbk_1>:
 8006978:	4620      	mov	r0, r4
 800697a:	f00c fdf1 	bl	8013560 <free_buff_hdr>
 800697e:	6864      	ldr	r4, [r4, #4]

08006980 <??llcp_mngr_termination_recevied_clbk_0>:
 8006980:	2c00      	cmp	r4, #0
 8006982:	d1f9      	bne.n	8006978 <??llcp_mngr_termination_recevied_clbk_1>
 8006984:	f895 1128 	ldrb.w	r1, [r5, #296]	; 0x128
 8006988:	4628      	mov	r0, r5
 800698a:	e8bd 4034 	ldmia.w	sp!, {r2, r4, r5, lr}
 800698e:	f00f b9d3 	b.w	8015d38 <conn_mngr_disconnect>

08006992 <llcp_phy_selection>:
 8006992:	b4f2      	push	{r1, r4, r5, r6, r7}
 8006994:	f100 0374 	add.w	r3, r0, #116	; 0x74
 8006998:	785e      	ldrb	r6, [r3, #1]
 800699a:	f89d 1000 	ldrb.w	r1, [sp]
 800699e:	781c      	ldrb	r4, [r3, #0]
 80069a0:	f89d 5001 	ldrb.w	r5, [sp, #1]
 80069a4:	f89d 7000 	ldrb.w	r7, [sp]
 80069a8:	4031      	ands	r1, r6
 80069aa:	ea05 0204 	and.w	r2, r5, r4
 80069ae:	42bd      	cmp	r5, r7
 80069b0:	d109      	bne.n	80069c6 <??llcp_phy_selection_0>
 80069b2:	2d01      	cmp	r5, #1
 80069b4:	bf1c      	itt	ne
 80069b6:	2d02      	cmpne	r5, #2
 80069b8:	2d04      	cmpne	r5, #4
 80069ba:	d104      	bne.n	80069c6 <??llcp_phy_selection_0>
 80069bc:	42b4      	cmp	r4, r6
 80069be:	d002      	beq.n	80069c6 <??llcp_phy_selection_0>
 80069c0:	2000      	movs	r0, #0
 80069c2:	7018      	strb	r0, [r3, #0]
 80069c4:	e020      	b.n	8006a08 <??llcp_phy_selection_1>

080069c6 <??llcp_phy_selection_0>:
 80069c6:	b172      	cbz	r2, 80069e6 <??llcp_phy_selection_2>
 80069c8:	0794      	lsls	r4, r2, #30
 80069ca:	bf48      	it	mi
 80069cc:	2202      	movmi	r2, #2
 80069ce:	d403      	bmi.n	80069d8 <??llcp_phy_selection_3>
 80069d0:	07d2      	lsls	r2, r2, #31
 80069d2:	bf4c      	ite	mi
 80069d4:	2201      	movmi	r2, #1
 80069d6:	2204      	movpl	r2, #4

080069d8 <??llcp_phy_selection_3>:
 80069d8:	701a      	strb	r2, [r3, #0]
 80069da:	781a      	ldrb	r2, [r3, #0]
 80069dc:	f890 412c 	ldrb.w	r4, [r0, #300]	; 0x12c
 80069e0:	42a2      	cmp	r2, r4
 80069e2:	d101      	bne.n	80069e8 <??llcp_phy_selection_4>
 80069e4:	2200      	movs	r2, #0

080069e6 <??llcp_phy_selection_2>:
 80069e6:	701a      	strb	r2, [r3, #0]

080069e8 <??llcp_phy_selection_4>:
 80069e8:	b171      	cbz	r1, 8006a08 <??llcp_phy_selection_1>
 80069ea:	078a      	lsls	r2, r1, #30
 80069ec:	bf48      	it	mi
 80069ee:	2102      	movmi	r1, #2
 80069f0:	d403      	bmi.n	80069fa <??llcp_phy_selection_5>
 80069f2:	07c9      	lsls	r1, r1, #31
 80069f4:	bf4c      	ite	mi
 80069f6:	2101      	movmi	r1, #1
 80069f8:	2104      	movpl	r1, #4

080069fa <??llcp_phy_selection_5>:
 80069fa:	7059      	strb	r1, [r3, #1]
 80069fc:	f500 7096 	add.w	r0, r0, #300	; 0x12c
 8006a00:	7859      	ldrb	r1, [r3, #1]
 8006a02:	7842      	ldrb	r2, [r0, #1]
 8006a04:	4291      	cmp	r1, r2
 8006a06:	d101      	bne.n	8006a0c <??llcp_phy_selection_6>

08006a08 <??llcp_phy_selection_1>:
 8006a08:	2000      	movs	r0, #0
 8006a0a:	7058      	strb	r0, [r3, #1]

08006a0c <??llcp_phy_selection_6>:
 8006a0c:	2000      	movs	r0, #0
 8006a0e:	bcf2      	pop	{r1, r4, r5, r6, r7}
 8006a10:	4770      	bx	lr

08006a12 <llcp_le_read_phy_cmd>:
 8006a12:	4603      	mov	r3, r0
 8006a14:	2000      	movs	r0, #0
 8006a16:	b410      	push	{r4}
 8006a18:	2b08      	cmp	r3, #8
 8006a1a:	da0b      	bge.n	8006a34 <??llcp_le_read_phy_cmd_0>
 8006a1c:	f8df 4ca4 	ldr.w	r4, [pc, #3236]	; 80076c4 <??DataTable20>
 8006a20:	f854 3023 	ldr.w	r3, [r4, r3, lsl #2]
 8006a24:	b133      	cbz	r3, 8006a34 <??llcp_le_read_phy_cmd_0>
 8006a26:	f503 7396 	add.w	r3, r3, #300	; 0x12c
 8006a2a:	781c      	ldrb	r4, [r3, #0]
 8006a2c:	2c04      	cmp	r4, #4
 8006a2e:	d104      	bne.n	8006a3a <??llcp_le_read_phy_cmd_1>
 8006a30:	2403      	movs	r4, #3
 8006a32:	e002      	b.n	8006a3a <??llcp_le_read_phy_cmd_1>

08006a34 <??llcp_le_read_phy_cmd_0>:
 8006a34:	2002      	movs	r0, #2
 8006a36:	bc10      	pop	{r4}
 8006a38:	4770      	bx	lr

08006a3a <??llcp_le_read_phy_cmd_1>:
 8006a3a:	700c      	strb	r4, [r1, #0]
 8006a3c:	7859      	ldrb	r1, [r3, #1]
 8006a3e:	2904      	cmp	r1, #4
 8006a40:	bf08      	it	eq
 8006a42:	2103      	moveq	r1, #3
 8006a44:	7011      	strb	r1, [r2, #0]
 8006a46:	bc10      	pop	{r4}
 8006a48:	4770      	bx	lr
	...

08006a4c <??DataTable5>:
 8006a4c:	8800 0013                                   ....

08006a50 <??DataTable5_1>:
 8006a50:	363c 2000                                   <6. 

08006a54 <llcp_le_set_phy_cmd>:
 8006a54:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8006a58:	b08b      	sub	sp, #44	; 0x2c
 8006a5a:	f04f 0900 	mov.w	r9, #0
 8006a5e:	2808      	cmp	r0, #8
 8006a60:	da07      	bge.n	8006a72 <??llcp_le_set_phy_cmd_0>
 8006a62:	f8df 4c60 	ldr.w	r4, [pc, #3168]	; 80076c4 <??DataTable20>
 8006a66:	f854 8020 	ldr.w	r8, [r4, r0, lsl #2]
 8006a6a:	2400      	movs	r4, #0
 8006a6c:	f1b8 0f00 	cmp.w	r8, #0
 8006a70:	d102      	bne.n	8006a78 <??llcp_le_set_phy_cmd_1>

08006a72 <??llcp_le_set_phy_cmd_0>:
 8006a72:	f04f 0902 	mov.w	r9, #2
 8006a76:	e08c      	b.n	8006b92 <??llcp_le_set_phy_cmd_2>

08006a78 <??llcp_le_set_phy_cmd_1>:
 8006a78:	9812      	ldr	r0, [sp, #72]	; 0x48
 8006a7a:	2802      	cmp	r0, #2
 8006a7c:	bf18      	it	ne
 8006a7e:	2001      	movne	r0, #1
 8006a80:	f508 7797 	add.w	r7, r8, #302	; 0x12e
 8006a84:	8038      	strh	r0, [r7, #0]
 8006a86:	f208 1623 	addw	r6, r8, #291	; 0x123
 8006a8a:	7830      	ldrb	r0, [r6, #0]
 8006a8c:	b940      	cbnz	r0, 8006aa0 <??llcp_le_set_phy_cmd_3>
 8006a8e:	7870      	ldrb	r0, [r6, #1]
 8006a90:	2801      	cmp	r0, #1
 8006a92:	bf18      	it	ne
 8006a94:	2802      	cmpne	r0, #2
 8006a96:	d003      	beq.n	8006aa0 <??llcp_le_set_phy_cmd_3>
 8006a98:	280a      	cmp	r0, #10
 8006a9a:	bf18      	it	ne
 8006a9c:	280c      	cmpne	r0, #12
 8006a9e:	d102      	bne.n	8006aa6 <??llcp_le_set_phy_cmd_4>

08006aa0 <??llcp_le_set_phy_cmd_3>:
 8006aa0:	f04f 093a 	mov.w	r9, #58	; 0x3a
 8006aa4:	e075      	b.n	8006b92 <??llcp_le_set_phy_cmd_2>

08006aa6 <??llcp_le_set_phy_cmd_4>:
 8006aa6:	f108 055c 	add.w	r5, r8, #92	; 0x5c
 8006aaa:	2001      	movs	r0, #1
 8006aac:	7728      	strb	r0, [r5, #28]
 8006aae:	2903      	cmp	r1, #3
 8006ab0:	d064      	beq.n	8006b7c <??llcp_le_set_phy_cmd_5>
 8006ab2:	7a70      	ldrb	r0, [r6, #9]
 8006ab4:	7628      	strb	r0, [r5, #24]
 8006ab6:	f896 c00a 	ldrb.w	ip, [r6, #10]
 8006aba:	07c8      	lsls	r0, r1, #31
 8006abc:	f885 c019 	strb.w	ip, [r5, #25]
 8006ac0:	d406      	bmi.n	8006ad0 <??llcp_le_set_phy_cmd_6>
 8006ac2:	70ba      	strb	r2, [r7, #2]
 8006ac4:	7a70      	ldrb	r0, [r6, #9]
 8006ac6:	4290      	cmp	r0, r2
 8006ac8:	d003      	beq.n	8006ad2 <??llcp_le_set_phy_cmd_7>
 8006aca:	762a      	strb	r2, [r5, #24]
 8006acc:	2401      	movs	r4, #1
 8006ace:	e000      	b.n	8006ad2 <??llcp_le_set_phy_cmd_7>

08006ad0 <??llcp_le_set_phy_cmd_6>:
 8006ad0:	70bc      	strb	r4, [r7, #2]

08006ad2 <??llcp_le_set_phy_cmd_7>:
 8006ad2:	0788      	lsls	r0, r1, #30
 8006ad4:	d405      	bmi.n	8006ae2 <??llcp_le_set_phy_cmd_8>
 8006ad6:	70fb      	strb	r3, [r7, #3]
 8006ad8:	7ab0      	ldrb	r0, [r6, #10]
 8006ada:	4298      	cmp	r0, r3
 8006adc:	d003      	beq.n	8006ae6 <??llcp_le_set_phy_cmd_9>
 8006ade:	766b      	strb	r3, [r5, #25]
 8006ae0:	e003      	b.n	8006aea <??llcp_le_set_phy_cmd_10>

08006ae2 <??llcp_le_set_phy_cmd_8>:
 8006ae2:	f887 9003 	strb.w	r9, [r7, #3]

08006ae6 <??llcp_le_set_phy_cmd_9>:
 8006ae6:	2c00      	cmp	r4, #0
 8006ae8:	d04a      	beq.n	8006b80 <??llcp_le_set_phy_cmd_11>

08006aea <??llcp_le_set_phy_cmd_10>:
 8006aea:	7830      	ldrb	r0, [r6, #0]
 8006aec:	2800      	cmp	r0, #0
 8006aee:	d150      	bne.n	8006b92 <??llcp_le_set_phy_cmd_2>
 8006af0:	200c      	movs	r0, #12
 8006af2:	7030      	strb	r0, [r6, #0]
 8006af4:	7e29      	ldrb	r1, [r5, #24]
 8006af6:	f88d 1000 	strb.w	r1, [sp]
 8006afa:	7e68      	ldrb	r0, [r5, #25]
 8006afc:	f8df 1c98 	ldr.w	r1, [pc, #3224]	; 8007798 <??DataTable22>
 8006b00:	f88d 0001 	strb.w	r0, [sp, #1]
 8006b04:	2000      	movs	r0, #0
 8006b06:	f00c fcfd 	bl	8013504 <allocate_data_packet>
 8006b0a:	0004      	movs	r4, r0
 8006b0c:	d033      	beq.n	8006b76 <??llcp_le_set_phy_cmd_12>
 8006b0e:	6ee8      	ldr	r0, [r5, #108]	; 0x6c
 8006b10:	2800      	cmp	r0, #0
 8006b12:	bf0c      	ite	eq
 8006b14:	2001      	moveq	r0, #1
 8006b16:	2000      	movne	r0, #0
 8006b18:	f7f9 fb5a 	bl	80001d0 <bsp_assert>
 8006b1c:	f8c5 8004 	str.w	r8, [r5, #4]
 8006b20:	2001      	movs	r0, #1
 8006b22:	7228      	strb	r0, [r5, #8]
 8006b24:	2122      	movs	r1, #34	; 0x22
 8006b26:	7171      	strb	r1, [r6, #5]
 8006b28:	6ee8      	ldr	r0, [r5, #108]	; 0x6c
 8006b2a:	b980      	cbnz	r0, 8006b4e <??llcp_le_set_phy_cmd_13>
 8006b2c:	f8c5 8004 	str.w	r8, [r5, #4]
 8006b30:	f108 0260 	add.w	r2, r8, #96	; 0x60
 8006b34:	2100      	movs	r1, #0
 8006b36:	f8df 0c64 	ldr.w	r0, [pc, #3172]	; 800779c <??DataTable22_1>
 8006b3a:	f7fe fe0a 	bl	8005752 <os_timer_create>
 8006b3e:	2800      	cmp	r0, #0
 8006b40:	bf14      	ite	ne
 8006b42:	2101      	movne	r1, #1
 8006b44:	2100      	moveq	r1, #0
 8006b46:	66e8      	str	r0, [r5, #108]	; 0x6c
 8006b48:	4608      	mov	r0, r1
 8006b4a:	f7f9 fb41 	bl	80001d0 <bsp_assert>

08006b4e <??llcp_le_set_phy_cmd_13>:
 8006b4e:	4622      	mov	r2, r4
 8006b50:	4669      	mov	r1, sp
 8006b52:	2016      	movs	r0, #22
 8006b54:	f00c f946 	bl	8012de4 <pdu_trnsprt_hndlr_form_cntrl_pdu>
 8006b58:	6e68      	ldr	r0, [r5, #100]	; 0x64
 8006b5a:	4621      	mov	r1, r4
 8006b5c:	f7fb f8d7 	bl	8001d0e <evnt_schdlr_add_ctrl_pkt>
 8006b60:	4681      	mov	r9, r0
 8006b62:	1e40      	subs	r0, r0, #1
 8006b64:	4180      	sbcs	r0, r0
 8006b66:	0fc0      	lsrs	r0, r0, #31
 8006b68:	f7f9 fb32 	bl	80001d0 <bsp_assert>
 8006b6c:	6ee8      	ldr	r0, [r5, #108]	; 0x6c
 8006b6e:	f8df 1c30 	ldr.w	r1, [pc, #3120]	; 80077a0 <??DataTable22_2>
 8006b72:	f7fe fe91 	bl	8005898 <os_timer_start>

08006b76 <??llcp_le_set_phy_cmd_12>:
 8006b76:	2002      	movs	r0, #2
 8006b78:	71b8      	strb	r0, [r7, #6]
 8006b7a:	e00a      	b.n	8006b92 <??llcp_le_set_phy_cmd_2>

08006b7c <??llcp_le_set_phy_cmd_5>:
 8006b7c:	70bc      	strb	r4, [r7, #2]
 8006b7e:	70fc      	strb	r4, [r7, #3]

08006b80 <??llcp_le_set_phy_cmd_11>:
 8006b80:	f8c8 8058 	str.w	r8, [r8, #88]	; 0x58
 8006b84:	2009      	movs	r0, #9
 8006b86:	7028      	strb	r0, [r5, #0]
 8006b88:	f108 0158 	add.w	r1, r8, #88	; 0x58
 8006b8c:	2002      	movs	r0, #2
 8006b8e:	f7f9 fba6 	bl	80002de <emngr_post_event>

08006b92 <??llcp_le_set_phy_cmd_2>:
 8006b92:	4648      	mov	r0, r9
 8006b94:	e3bd      	b.n	8007312 <?Subroutine2>

08006b96 <llcp_ll_phy_req_received>:
 8006b96:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8006b9a:	4680      	mov	r8, r0
 8006b9c:	b08c      	sub	sp, #48	; 0x30
 8006b9e:	f208 1725 	addw	r7, r8, #293	; 0x125
 8006ba2:	7af8      	ldrb	r0, [r7, #11]
 8006ba4:	2600      	movs	r6, #0
 8006ba6:	460c      	mov	r4, r1
 8006ba8:	2800      	cmp	r0, #0
 8006baa:	bf1c      	itt	ne
 8006bac:	7b38      	ldrbne	r0, [r7, #12]
 8006bae:	2800      	cmpne	r0, #0
 8006bb0:	d108      	bne.n	8006bc4 <??llcp_ll_phy_req_received_0>
 8006bb2:	f10d 0201 	add.w	r2, sp, #1
 8006bb6:	4669      	mov	r1, sp
 8006bb8:	f10d 0002 	add.w	r0, sp, #2
 8006bbc:	f00f fcd8 	bl	8016570 <db_le_get_default_phy_cmd>
 8006bc0:	7af8      	ldrb	r0, [r7, #11]
 8006bc2:	b110      	cbz	r0, 8006bca <??llcp_ll_phy_req_received_1>

08006bc4 <??llcp_ll_phy_req_received_0>:
 8006bc4:	7af8      	ldrb	r0, [r7, #11]
 8006bc6:	f88d 0000 	strb.w	r0, [sp]

08006bca <??llcp_ll_phy_req_received_1>:
 8006bca:	7b38      	ldrb	r0, [r7, #12]
 8006bcc:	b108      	cbz	r0, 8006bd2 <??llcp_ll_phy_req_received_2>
 8006bce:	f88d 0001 	strb.w	r0, [sp, #1]

08006bd2 <??llcp_ll_phy_req_received_2>:
 8006bd2:	7838      	ldrb	r0, [r7, #0]
 8006bd4:	b978      	cbnz	r0, 8006bf6 <??llcp_ll_phy_req_received_3>
 8006bd6:	f89d 1000 	ldrb.w	r1, [sp]
 8006bda:	f108 005c 	add.w	r0, r8, #92	; 0x5c
 8006bde:	7601      	strb	r1, [r0, #24]
 8006be0:	f89d 2001 	ldrb.w	r2, [sp, #1]
 8006be4:	7642      	strb	r2, [r0, #25]
 8006be6:	6821      	ldr	r1, [r4, #0]
 8006be8:	4640      	mov	r0, r8
 8006bea:	f7ff fed2 	bl	8006992 <llcp_phy_selection>
 8006bee:	4640      	mov	r0, r8
 8006bf0:	f000 f83a 	bl	8006c68 <llcp_ll_phy_update_ind>
 8006bf4:	4606      	mov	r6, r0

08006bf6 <??llcp_ll_phy_req_received_3>:
 8006bf6:	7838      	ldrb	r0, [r7, #0]
 8006bf8:	2801      	cmp	r0, #1
 8006bfa:	d131      	bne.n	8006c60 <??llcp_ll_phy_req_received_4>
 8006bfc:	f89d 0000 	ldrb.w	r0, [sp]
 8006c00:	f89d 1001 	ldrb.w	r1, [sp, #1]
 8006c04:	f108 055c 	add.w	r5, r8, #92	; 0x5c
 8006c08:	f88d 0004 	strb.w	r0, [sp, #4]
 8006c0c:	f89d 0000 	ldrb.w	r0, [sp]
 8006c10:	f88d 1005 	strb.w	r1, [sp, #5]
 8006c14:	2600      	movs	r6, #0
 8006c16:	7668      	strb	r0, [r5, #25]
 8006c18:	7861      	ldrb	r1, [r4, #1]
 8006c1a:	2000      	movs	r0, #0
 8006c1c:	7629      	strb	r1, [r5, #24]
 8006c1e:	f8df 1b78 	ldr.w	r1, [pc, #2936]	; 8007798 <??DataTable22>
 8006c22:	f00c fc6f 	bl	8013504 <allocate_data_packet>
 8006c26:	4604      	mov	r4, r0
 8006c28:	b194      	cbz	r4, 8006c50 <??llcp_ll_phy_req_received_5>
 8006c2a:	4622      	mov	r2, r4
 8006c2c:	a901      	add	r1, sp, #4
 8006c2e:	2017      	movs	r0, #23
 8006c30:	f00c f8d8 	bl	8012de4 <pdu_trnsprt_hndlr_form_cntrl_pdu>
 8006c34:	7ba0      	ldrb	r0, [r4, #14]
 8006c36:	4621      	mov	r1, r4
 8006c38:	f040 0002 	orr.w	r0, r0, #2
 8006c3c:	73a0      	strb	r0, [r4, #14]
 8006c3e:	6e68      	ldr	r0, [r5, #100]	; 0x64
 8006c40:	f7fa fffc 	bl	8001c3c <evnt_schdlr_add_data_pkt>
 8006c44:	4606      	mov	r6, r0
 8006c46:	1e40      	subs	r0, r0, #1
 8006c48:	4180      	sbcs	r0, r0
 8006c4a:	0fc0      	lsrs	r0, r0, #31
 8006c4c:	f7f9 fac0 	bl	80001d0 <bsp_assert>

08006c50 <??llcp_ll_phy_req_received_5>:
 8006c50:	2007      	movs	r0, #7
 8006c52:	7028      	strb	r0, [r5, #0]
 8006c54:	210c      	movs	r1, #12
 8006c56:	4640      	mov	r0, r8
 8006c58:	f7ff f8e3 	bl	8005e22 <llcp_cntrl_init>
 8006c5c:	2003      	movs	r0, #3
 8006c5e:	73f8      	strb	r0, [r7, #15]

08006c60 <??llcp_ll_phy_req_received_4>:
 8006c60:	4630      	mov	r0, r6
 8006c62:	e0d4      	b.n	8006e0e <?Subroutine3>

08006c64 <??DataTable7>:
 8006c64:	0064 2000                                   d.. 

08006c68 <llcp_ll_phy_update_ind>:
 8006c68:	b5f0      	push	{r4, r5, r6, r7, lr}
 8006c6a:	4606      	mov	r6, r0
 8006c6c:	b08b      	sub	sp, #44	; 0x2c
 8006c6e:	f106 055c 	add.w	r5, r6, #92	; 0x5c
 8006c72:	6ee9      	ldr	r1, [r5, #108]	; 0x6c
 8006c74:	b119      	cbz	r1, 8006c7e <??llcp_ll_phy_update_ind_0>
 8006c76:	f106 00c8 	add.w	r0, r6, #200	; 0xc8
 8006c7a:	f7fe feb8 	bl	80059ee <os_timer_stop_free>

08006c7e <??llcp_ll_phy_update_ind_0>:
 8006c7e:	7e28      	ldrb	r0, [r5, #24]
 8006c80:	2101      	movs	r1, #1
 8006c82:	8369      	strh	r1, [r5, #26]
 8006c84:	f206 1723 	addw	r7, r6, #291	; 0x123
 8006c88:	2800      	cmp	r0, #0
 8006c8a:	bf04      	itt	eq
 8006c8c:	7e68      	ldrbeq	r0, [r5, #25]
 8006c8e:	2800      	cmpeq	r0, #0
 8006c90:	d135      	bne.n	8006cfe <??llcp_ll_phy_update_ind_1>
 8006c92:	2100      	movs	r1, #0
 8006c94:	8369      	strh	r1, [r5, #26]
 8006c96:	7478      	strb	r0, [r7, #17]
 8006c98:	2206      	movs	r2, #6
 8006c9a:	f106 0174 	add.w	r1, r6, #116	; 0x74
 8006c9e:	4668      	mov	r0, sp
 8006ca0:	f007 ff52 	bl	800eb48 <ble_memcpy>
 8006ca4:	f8df 1af0 	ldr.w	r1, [pc, #2800]	; 8007798 <??DataTable22>
 8006ca8:	2000      	movs	r0, #0
 8006caa:	f00c fc2b 	bl	8013504 <allocate_data_packet>
 8006cae:	0004      	movs	r4, r0
 8006cb0:	d00d      	beq.n	8006cce <??llcp_ll_phy_update_ind_2>
 8006cb2:	4622      	mov	r2, r4
 8006cb4:	4669      	mov	r1, sp
 8006cb6:	2018      	movs	r0, #24
 8006cb8:	f00c f894 	bl	8012de4 <pdu_trnsprt_hndlr_form_cntrl_pdu>
 8006cbc:	6e68      	ldr	r0, [r5, #100]	; 0x64
 8006cbe:	4621      	mov	r1, r4
 8006cc0:	f7fb f825 	bl	8001d0e <evnt_schdlr_add_ctrl_pkt>
 8006cc4:	1e40      	subs	r0, r0, #1
 8006cc6:	4180      	sbcs	r0, r0
 8006cc8:	0fc0      	lsrs	r0, r0, #31
 8006cca:	f7f9 fa81 	bl	80001d0 <bsp_assert>

08006cce <??llcp_ll_phy_update_ind_2>:
 8006cce:	7f28      	ldrb	r0, [r5, #28]
 8006cd0:	2801      	cmp	r0, #1
 8006cd2:	d107      	bne.n	8006ce4 <??llcp_ll_phy_update_ind_3>
 8006cd4:	7aba      	ldrb	r2, [r7, #10]
 8006cd6:	7a79      	ldrb	r1, [r7, #9]
 8006cd8:	2300      	movs	r3, #0
 8006cda:	4630      	mov	r0, r6
 8006cdc:	f00f f946 	bl	8015f6c <conn_mngr_send_le_phy_update_complete_event>
 8006ce0:	2000      	movs	r0, #0
 8006ce2:	7728      	strb	r0, [r5, #28]

08006ce4 <??llcp_ll_phy_update_ind_3>:
 8006ce4:	7839      	ldrb	r1, [r7, #0]
 8006ce6:	290c      	cmp	r1, #12
 8006ce8:	bf04      	itt	eq
 8006cea:	2000      	moveq	r0, #0
 8006cec:	7038      	strbeq	r0, [r7, #0]
 8006cee:	7879      	ldrb	r1, [r7, #1]
 8006cf0:	290c      	cmp	r1, #12
 8006cf2:	bf04      	itt	eq
 8006cf4:	2000      	moveq	r0, #0
 8006cf6:	7078      	strbeq	r0, [r7, #1]
 8006cf8:	2100      	movs	r1, #0
 8006cfa:	7179      	strb	r1, [r7, #5]
 8006cfc:	e01e      	b.n	8006d3c <??llcp_ll_phy_update_ind_4>

08006cfe <??llcp_ll_phy_update_ind_1>:
 8006cfe:	2002      	movs	r0, #2
 8006d00:	8368      	strh	r0, [r5, #26]
 8006d02:	65b6      	str	r6, [r6, #88]	; 0x58
 8006d04:	2108      	movs	r1, #8
 8006d06:	7029      	strb	r1, [r5, #0]
 8006d08:	2001      	movs	r0, #1
 8006d0a:	2228      	movs	r2, #40	; 0x28
 8006d0c:	7478      	strb	r0, [r7, #17]
 8006d0e:	717a      	strb	r2, [r7, #5]
 8006d10:	6f28      	ldr	r0, [r5, #112]	; 0x70
 8006d12:	2800      	cmp	r0, #0
 8006d14:	bf0c      	ite	eq
 8006d16:	2001      	moveq	r0, #1
 8006d18:	2000      	movne	r0, #0
 8006d1a:	f7f9 fa59 	bl	80001d0 <bsp_assert>
 8006d1e:	f106 0258 	add.w	r2, r6, #88	; 0x58
 8006d22:	2100      	movs	r1, #0
 8006d24:	f8df 0a74 	ldr.w	r0, [pc, #2676]	; 800779c <??DataTable22_1>
 8006d28:	f7fe fd13 	bl	8005752 <os_timer_create>
 8006d2c:	2800      	cmp	r0, #0
 8006d2e:	bf14      	ite	ne
 8006d30:	2101      	movne	r1, #1
 8006d32:	2100      	moveq	r1, #0
 8006d34:	6728      	str	r0, [r5, #112]	; 0x70
 8006d36:	4608      	mov	r0, r1
 8006d38:	f7f9 fa4a 	bl	80001d0 <bsp_assert>

08006d3c <??llcp_ll_phy_update_ind_4>:
 8006d3c:	2000      	movs	r0, #0
 8006d3e:	b00b      	add	sp, #44	; 0x2c
 8006d40:	bdf0      	pop	{r4, r5, r6, r7, pc}
	...

08006d44 <??DataTable8>:
 8006d44:	1958 0803                                   X...

08006d48 <llcp_min_used_chnls_prcdr>:
 8006d48:	e92d 41f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, lr}
 8006d4c:	4605      	mov	r5, r0
 8006d4e:	b08b      	sub	sp, #44	; 0x2c
 8006d50:	f205 1723 	addw	r7, r5, #291	; 0x123
 8006d54:	78b8      	ldrb	r0, [r7, #2]
 8006d56:	243a      	movs	r4, #58	; 0x3a
 8006d58:	2801      	cmp	r0, #1
 8006d5a:	d156      	bne.n	8006e0a <??llcp_min_used_chnls_prcdr_0>
 8006d5c:	f105 0648 	add.w	r6, r5, #72	; 0x48
 8006d60:	79b0      	ldrb	r0, [r6, #6]
 8006d62:	b120      	cbz	r0, 8006d6e <??llcp_min_used_chnls_prcdr_1>
 8006d64:	7831      	ldrb	r1, [r6, #0]
 8006d66:	07c8      	lsls	r0, r1, #31
 8006d68:	bf58      	it	pl
 8006d6a:	241a      	movpl	r4, #26
 8006d6c:	d54e      	bpl.n	8006e0c <??llcp_min_used_chnls_prcdr_2>

08006d6e <??llcp_min_used_chnls_prcdr_1>:
 8006d6e:	7838      	ldrb	r0, [r7, #0]
 8006d70:	2800      	cmp	r0, #0
 8006d72:	d14b      	bne.n	8006e0c <??llcp_min_used_chnls_prcdr_2>
 8006d74:	210d      	movs	r1, #13
 8006d76:	7039      	strb	r1, [r7, #0]
 8006d78:	7cb9      	ldrb	r1, [r7, #18]
 8006d7a:	2001      	movs	r0, #1
 8006d7c:	7538      	strb	r0, [r7, #20]
 8006d7e:	f88d 1000 	strb.w	r1, [sp]
 8006d82:	7cf8      	ldrb	r0, [r7, #19]
 8006d84:	f8df 1a10 	ldr.w	r1, [pc, #2576]	; 8007798 <??DataTable22>
 8006d88:	2400      	movs	r4, #0
 8006d8a:	f88d 0001 	strb.w	r0, [sp, #1]
 8006d8e:	2000      	movs	r0, #0
 8006d90:	f00c fbb8 	bl	8013504 <allocate_data_packet>
 8006d94:	4680      	mov	r8, r0
 8006d96:	f1b8 0f00 	cmp.w	r8, #0
 8006d9a:	d037      	beq.n	8006e0c <??llcp_min_used_chnls_prcdr_2>
 8006d9c:	f8d5 00c8 	ldr.w	r0, [r5, #200]	; 0xc8
 8006da0:	2800      	cmp	r0, #0
 8006da2:	bf0c      	ite	eq
 8006da4:	2001      	moveq	r0, #1
 8006da6:	2000      	movne	r0, #0
 8006da8:	f7f9 fa12 	bl	80001d0 <bsp_assert>
 8006dac:	2001      	movs	r0, #1
 8006dae:	61b5      	str	r5, [r6, #24]
 8006db0:	7730      	strb	r0, [r6, #28]
 8006db2:	2122      	movs	r1, #34	; 0x22
 8006db4:	7179      	strb	r1, [r7, #5]
 8006db6:	f8d5 00c8 	ldr.w	r0, [r5, #200]	; 0xc8
 8006dba:	b980      	cbnz	r0, 8006dde <??llcp_min_used_chnls_prcdr_3>
 8006dbc:	61b5      	str	r5, [r6, #24]
 8006dbe:	f105 0260 	add.w	r2, r5, #96	; 0x60
 8006dc2:	2100      	movs	r1, #0
 8006dc4:	f8df 09d4 	ldr.w	r0, [pc, #2516]	; 800779c <??DataTable22_1>
 8006dc8:	f7fe fcc3 	bl	8005752 <os_timer_create>
 8006dcc:	2800      	cmp	r0, #0
 8006dce:	bf14      	ite	ne
 8006dd0:	2101      	movne	r1, #1
 8006dd2:	2100      	moveq	r1, #0
 8006dd4:	f8c5 00c8 	str.w	r0, [r5, #200]	; 0xc8
 8006dd8:	4608      	mov	r0, r1
 8006dda:	f7f9 f9f9 	bl	80001d0 <bsp_assert>

08006dde <??llcp_min_used_chnls_prcdr_3>:
 8006dde:	4642      	mov	r2, r8
 8006de0:	4669      	mov	r1, sp
 8006de2:	2019      	movs	r0, #25
 8006de4:	f00b fffe 	bl	8012de4 <pdu_trnsprt_hndlr_form_cntrl_pdu>
 8006de8:	6fb0      	ldr	r0, [r6, #120]	; 0x78
 8006dea:	4641      	mov	r1, r8
 8006dec:	f7fa ff8f 	bl	8001d0e <evnt_schdlr_add_ctrl_pkt>
 8006df0:	4604      	mov	r4, r0
 8006df2:	1e40      	subs	r0, r0, #1
 8006df4:	4180      	sbcs	r0, r0
 8006df6:	0fc0      	lsrs	r0, r0, #31
 8006df8:	f7f9 f9ea 	bl	80001d0 <bsp_assert>
 8006dfc:	f8d5 00c8 	ldr.w	r0, [r5, #200]	; 0xc8
 8006e00:	f8df 199c 	ldr.w	r1, [pc, #2460]	; 80077a0 <??DataTable22_2>
 8006e04:	f7fe fd48 	bl	8005898 <os_timer_start>
 8006e08:	e000      	b.n	8006e0c <??llcp_min_used_chnls_prcdr_2>

08006e0a <??llcp_min_used_chnls_prcdr_0>:
 8006e0a:	241e      	movs	r4, #30

08006e0c <??llcp_min_used_chnls_prcdr_2>:
 8006e0c:	4620      	mov	r0, r4

08006e0e <?Subroutine3>:
 8006e0e:	b00c      	add	sp, #48	; 0x30
 8006e10:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

08006e14 <llcp_data_length_update>:
 8006e14:	b570      	push	{r4, r5, r6, lr}
 8006e16:	460b      	mov	r3, r1
 8006e18:	2808      	cmp	r0, #8
 8006e1a:	da0c      	bge.n	8006e36 <??llcp_data_length_update_0>
 8006e1c:	f8df 18a4 	ldr.w	r1, [pc, #2212]	; 80076c4 <??DataTable20>
 8006e20:	f851 0020 	ldr.w	r0, [r1, r0, lsl #2]
 8006e24:	b138      	cbz	r0, 8006e36 <??llcp_data_length_update_0>
 8006e26:	f100 0546 	add.w	r5, r0, #70	; 0x46
 8006e2a:	782c      	ldrb	r4, [r5, #0]
 8006e2c:	213a      	movs	r1, #58	; 0x3a
 8006e2e:	06a6      	lsls	r6, r4, #26
 8006e30:	d403      	bmi.n	8006e3a <??llcp_data_length_update_1>
 8006e32:	211a      	movs	r1, #26
 8006e34:	e031      	b.n	8006e9a <??llcp_data_length_update_2>

08006e36 <??llcp_data_length_update_0>:
 8006e36:	2102      	movs	r1, #2
 8006e38:	e02f      	b.n	8006e9a <??llcp_data_length_update_2>

08006e3a <??llcp_data_length_update_1>:
 8006e3a:	f890 4123 	ldrb.w	r4, [r0, #291]	; 0x123
 8006e3e:	bb64      	cbnz	r4, 8006e9a <??llcp_data_length_update_2>
 8006e40:	2109      	movs	r1, #9
 8006e42:	f880 1123 	strb.w	r1, [r0, #291]	; 0x123
 8006e46:	f100 04a0 	add.w	r4, r0, #160	; 0xa0
 8006e4a:	8961      	ldrh	r1, [r4, #10]
 8006e4c:	8926      	ldrh	r6, [r4, #8]
 8006e4e:	8061      	strh	r1, [r4, #2]
 8006e50:	8026      	strh	r6, [r4, #0]
 8006e52:	7a29      	ldrb	r1, [r5, #8]
 8006e54:	b111      	cbz	r1, 8006e5c <??llcp_data_length_update_3>
 8006e56:	7869      	ldrb	r1, [r5, #1]
 8006e58:	070d      	lsls	r5, r1, #28
 8006e5a:	d402      	bmi.n	8006e62 <??llcp_data_length_update_4>

08006e5c <??llcp_data_length_update_3>:
 8006e5c:	f640 0148 	movw	r1, #2120	; 0x848
 8006e60:	e002      	b.n	8006e68 <??llcp_data_length_update_5>

08006e62 <??llcp_data_length_update_4>:
 8006e62:	0199      	lsls	r1, r3, #6
 8006e64:	f501 7174 	add.w	r1, r1, #976	; 0x3d0

08006e68 <??llcp_data_length_update_5>:
 8006e68:	4291      	cmp	r1, r2
 8006e6a:	bf38      	it	cc
 8006e6c:	460a      	movcc	r2, r1
 8006e6e:	0411      	lsls	r1, r2, #16
 8006e70:	0c89      	lsrs	r1, r1, #18
 8006e72:	390f      	subs	r1, #15
 8006e74:	b28d      	uxth	r5, r1
 8006e76:	2dfc      	cmp	r5, #252	; 0xfc
 8006e78:	bfa8      	it	ge
 8006e7a:	21fb      	movge	r1, #251	; 0xfb
 8006e7c:	2efc      	cmp	r6, #252	; 0xfc
 8006e7e:	bfa4      	itt	ge
 8006e80:	25fb      	movge	r5, #251	; 0xfb
 8006e82:	8025      	strhge	r5, [r4, #0]
 8006e84:	b289      	uxth	r1, r1
 8006e86:	428b      	cmp	r3, r1
 8006e88:	bf88      	it	hi
 8006e8a:	460b      	movhi	r3, r1
 8006e8c:	80e2      	strh	r2, [r4, #6]
 8006e8e:	80a3      	strh	r3, [r4, #4]
 8006e90:	2201      	movs	r2, #1
 8006e92:	2114      	movs	r1, #20
 8006e94:	f7fe ffad 	bl	8005df2 <llcp_data_length_init>
 8006e98:	4601      	mov	r1, r0

08006e9a <??llcp_data_length_update_2>:
 8006e9a:	4608      	mov	r0, r1
 8006e9c:	bd70      	pop	{r4, r5, r6, pc}
	...

08006ea0 <??DataTable10>:
 8006ea0:	06f0 2000                                   ... 

08006ea4 <llcp_data_length_update_received>:
 8006ea4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8006ea8:	4681      	mov	r9, r0
 8006eaa:	f109 0247 	add.w	r2, r9, #71	; 0x47
 8006eae:	b083      	sub	sp, #12
 8006eb0:	79d0      	ldrb	r0, [r2, #7]
 8006eb2:	880d      	ldrh	r5, [r1, #0]
 8006eb4:	f8b1 a002 	ldrh.w	sl, [r1, #2]
 8006eb8:	888c      	ldrh	r4, [r1, #4]
 8006eba:	f8b1 8006 	ldrh.w	r8, [r1, #6]
 8006ebe:	f244 2190 	movw	r1, #17040	; 0x4290
 8006ec2:	b110      	cbz	r0, 8006eca <??llcp_data_length_update_received_0>
 8006ec4:	7812      	ldrb	r2, [r2, #0]
 8006ec6:	0710      	lsls	r0, r2, #28
 8006ec8:	d403      	bmi.n	8006ed2 <??llcp_data_length_update_received_1>

08006eca <??llcp_data_length_update_received_0>:
 8006eca:	f640 0248 	movw	r2, #2120	; 0x848
 8006ece:	4610      	mov	r0, r2
 8006ed0:	e001      	b.n	8006ed6 <??llcp_data_length_update_received_2>

08006ed2 <??llcp_data_length_update_received_1>:
 8006ed2:	460a      	mov	r2, r1
 8006ed4:	4608      	mov	r0, r1

08006ed6 <??llcp_data_length_update_received_2>:
 8006ed6:	2c1b      	cmp	r4, #27
 8006ed8:	bfb8      	it	lt
 8006eda:	241b      	movlt	r4, #27
 8006edc:	db02      	blt.n	8006ee4 <??llcp_data_length_update_received_3>
 8006ede:	2cfb      	cmp	r4, #251	; 0xfb
 8006ee0:	bfc8      	it	gt
 8006ee2:	24fb      	movgt	r4, #251	; 0xfb

08006ee4 <??llcp_data_length_update_received_3>:
 8006ee4:	f5b8 7fa4 	cmp.w	r8, #328	; 0x148
 8006ee8:	bfb8      	it	lt
 8006eea:	f44f 78a4 	movlt.w	r8, #328	; 0x148
 8006eee:	db02      	blt.n	8006ef6 <??llcp_data_length_update_received_4>
 8006ef0:	4542      	cmp	r2, r8
 8006ef2:	bf38      	it	cc
 8006ef4:	4690      	movcc	r8, r2

08006ef6 <??llcp_data_length_update_received_4>:
 8006ef6:	2d1b      	cmp	r5, #27
 8006ef8:	bfb8      	it	lt
 8006efa:	251b      	movlt	r5, #27
 8006efc:	db02      	blt.n	8006f04 <??llcp_data_length_update_received_5>
 8006efe:	2dfb      	cmp	r5, #251	; 0xfb
 8006f00:	bfc8      	it	gt
 8006f02:	25fb      	movgt	r5, #251	; 0xfb

08006f04 <??llcp_data_length_update_received_5>:
 8006f04:	f5ba 7fa4 	cmp.w	sl, #328	; 0x148
 8006f08:	bfb8      	it	lt
 8006f0a:	f44f 7aa4 	movlt.w	sl, #328	; 0x148
 8006f0e:	db02      	blt.n	8006f16 <??llcp_data_length_update_received_6>
 8006f10:	4550      	cmp	r0, sl
 8006f12:	bf38      	it	cc
 8006f14:	4682      	movcc	sl, r0

08006f16 <??llcp_data_length_update_received_6>:
 8006f16:	f209 1723 	addw	r7, r9, #291	; 0x123
 8006f1a:	7838      	ldrb	r0, [r7, #0]
 8006f1c:	f109 06a0 	add.w	r6, r9, #160	; 0xa0
 8006f20:	2809      	cmp	r0, #9
 8006f22:	d02f      	beq.n	8006f84 <??llcp_data_length_update_received_7>
 8006f24:	2cfb      	cmp	r4, #251	; 0xfb
 8006f26:	bfce      	itee	gt
 8006f28:	4608      	movgt	r0, r1
 8006f2a:	01a0      	lslle	r0, r4, #6
 8006f2c:	f500 7074 	addle.w	r0, r0, #976	; 0x3d0
 8006f30:	2dfb      	cmp	r5, #251	; 0xfb
 8006f32:	bfce      	itee	gt
 8006f34:	460a      	movgt	r2, r1
 8006f36:	01aa      	lslle	r2, r5, #6
 8006f38:	f502 7274 	addle.w	r2, r2, #976	; 0x3d0
 8006f3c:	4540      	cmp	r0, r8
 8006f3e:	bf38      	it	cc
 8006f40:	4680      	movcc	r8, r0
 8006f42:	4552      	cmp	r2, sl
 8006f44:	bf38      	it	cc
 8006f46:	4692      	movcc	sl, r2
 8006f48:	4642      	mov	r2, r8
 8006f4a:	b290      	uxth	r0, r2
 8006f4c:	4288      	cmp	r0, r1
 8006f4e:	bfc8      	it	gt
 8006f50:	460a      	movgt	r2, r1
 8006f52:	4650      	mov	r0, sl
 8006f54:	b283      	uxth	r3, r0
 8006f56:	428b      	cmp	r3, r1
 8006f58:	bfc8      	it	gt
 8006f5a:	4608      	movgt	r0, r1
 8006f5c:	8072      	strh	r2, [r6, #2]
 8006f5e:	0412      	lsls	r2, r2, #16
 8006f60:	0c92      	lsrs	r2, r2, #18
 8006f62:	f1a2 010f 	sub.w	r1, r2, #15
 8006f66:	0402      	lsls	r2, r0, #16
 8006f68:	0c92      	lsrs	r2, r2, #18
 8006f6a:	3a0f      	subs	r2, #15
 8006f6c:	b28b      	uxth	r3, r1
 8006f6e:	2bfb      	cmp	r3, #251	; 0xfb
 8006f70:	bfc8      	it	gt
 8006f72:	21fb      	movgt	r1, #251	; 0xfb
 8006f74:	80f0      	strh	r0, [r6, #6]
 8006f76:	4610      	mov	r0, r2
 8006f78:	b292      	uxth	r2, r2
 8006f7a:	8031      	strh	r1, [r6, #0]
 8006f7c:	2afb      	cmp	r2, #251	; 0xfb
 8006f7e:	bfc8      	it	gt
 8006f80:	20fb      	movgt	r0, #251	; 0xfb
 8006f82:	80b0      	strh	r0, [r6, #4]

08006f84 <??llcp_data_length_update_received_7>:
 8006f84:	f109 0ba8 	add.w	fp, r9, #168	; 0xa8
 8006f88:	2208      	movs	r2, #8
 8006f8a:	4659      	mov	r1, fp
 8006f8c:	a801      	add	r0, sp, #4
 8006f8e:	f007 fddb 	bl	800eb48 <ble_memcpy>
 8006f92:	f8b9 10a6 	ldrh.w	r1, [r9, #166]	; 0xa6
 8006f96:	fa1f fa8a 	uxth.w	sl, sl
 8006f9a:	4551      	cmp	r1, sl
 8006f9c:	bf88      	it	hi
 8006f9e:	4651      	movhi	r1, sl
 8006fa0:	8231      	strh	r1, [r6, #16]
 8006fa2:	f8b9 00a2 	ldrh.w	r0, [r9, #162]	; 0xa2
 8006fa6:	fa1f f888 	uxth.w	r8, r8
 8006faa:	4540      	cmp	r0, r8
 8006fac:	bf88      	it	hi
 8006fae:	4640      	movhi	r0, r8
 8006fb0:	4602      	mov	r2, r0
 8006fb2:	82b0      	strh	r0, [r6, #20]
 8006fb4:	f5b2 6f29 	cmp.w	r2, #2704	; 0xa90
 8006fb8:	bfb8      	it	lt
 8006fba:	f44f 6229 	movlt.w	r2, #2704	; 0xa90
 8006fbe:	82f2      	strh	r2, [r6, #22]
 8006fc0:	7aba      	ldrb	r2, [r7, #10]
 8006fc2:	2a04      	cmp	r2, #4
 8006fc4:	bf08      	it	eq
 8006fc6:	8af0      	ldrheq	r0, [r6, #22]
 8006fc8:	8170      	strh	r0, [r6, #10]
 8006fca:	8830      	ldrh	r0, [r6, #0]
 8006fcc:	42a0      	cmp	r0, r4
 8006fce:	bfa8      	it	ge
 8006fd0:	4620      	movge	r0, r4
 8006fd2:	8130      	strh	r0, [r6, #8]
 8006fd4:	8932      	ldrh	r2, [r6, #8]
 8006fd6:	8970      	ldrh	r0, [r6, #10]
 8006fd8:	0192      	lsls	r2, r2, #6
 8006fda:	f502 7274 	add.w	r2, r2, #976	; 0x3d0
 8006fde:	4290      	cmp	r0, r2
 8006fe0:	bfb8      	it	lt
 8006fe2:	4602      	movlt	r2, r0
 8006fe4:	f8b9 3016 	ldrh.w	r3, [r9, #22]
 8006fe8:	f240 40e2 	movw	r0, #1250	; 0x4e2
 8006fec:	f8b9 10b0 	ldrh.w	r1, [r9, #176]	; 0xb0
 8006ff0:	4343      	muls	r3, r0
 8006ff2:	1a9a      	subs	r2, r3, r2
 8006ff4:	f5a2 7296 	sub.w	r2, r2, #300	; 0x12c
 8006ff8:	428a      	cmp	r2, r1
 8006ffa:	bf88      	it	hi
 8006ffc:	460a      	movhi	r2, r1
 8006ffe:	f5b2 6f29 	cmp.w	r2, #2704	; 0xa90
 8007002:	bf38      	it	cc
 8007004:	f44f 6229 	movcc.w	r2, #2704	; 0xa90
 8007008:	8272      	strh	r2, [r6, #18]
 800700a:	8332      	strh	r2, [r6, #24]
 800700c:	7a78      	ldrb	r0, [r7, #9]
 800700e:	2804      	cmp	r0, #4
 8007010:	bf0c      	ite	eq
 8007012:	8a70      	ldrheq	r0, [r6, #18]
 8007014:	4608      	movne	r0, r1
 8007016:	81f0      	strh	r0, [r6, #14]
 8007018:	88b0      	ldrh	r0, [r6, #4]
 800701a:	42a8      	cmp	r0, r5
 800701c:	bfa8      	it	ge
 800701e:	4628      	movge	r0, r5
 8007020:	81b0      	strh	r0, [r6, #12]
 8007022:	2208      	movs	r2, #8
 8007024:	4659      	mov	r1, fp
 8007026:	a801      	add	r0, sp, #4
 8007028:	f007 fe19 	bl	800ec5e <ble_memcmp>
 800702c:	4604      	mov	r4, r0
 800702e:	7838      	ldrb	r0, [r7, #0]
 8007030:	2809      	cmp	r0, #9
 8007032:	d00b      	beq.n	800704c <??llcp_data_length_update_received_8>
 8007034:	7878      	ldrb	r0, [r7, #1]
 8007036:	1e40      	subs	r0, r0, #1
 8007038:	4180      	sbcs	r0, r0
 800703a:	0fc0      	lsrs	r0, r0, #31
 800703c:	f7f9 f8c8 	bl	80001d0 <bsp_assert>
 8007040:	2200      	movs	r2, #0
 8007042:	2115      	movs	r1, #21
 8007044:	4648      	mov	r0, r9
 8007046:	f7fe fed4 	bl	8005df2 <llcp_data_length_init>
 800704a:	e006      	b.n	800705a <??llcp_data_length_update_received_9>

0800704c <??llcp_data_length_update_received_8>:
 800704c:	f109 00c8 	add.w	r0, r9, #200	; 0xc8
 8007050:	f7fe fccd 	bl	80059ee <os_timer_stop_free>
 8007054:	2000      	movs	r0, #0
 8007056:	7038      	strb	r0, [r7, #0]
 8007058:	7178      	strb	r0, [r7, #5]

0800705a <??llcp_data_length_update_received_9>:
 800705a:	b2e4      	uxtb	r4, r4
 800705c:	b18c      	cbz	r4, 8007082 <??llcp_data_length_update_received_10>
 800705e:	89f1      	ldrh	r1, [r6, #14]
 8007060:	8970      	ldrh	r0, [r6, #10]
 8007062:	1841      	adds	r1, r0, r1
 8007064:	6a30      	ldr	r0, [r6, #32]
 8007066:	f7fa fe9e 	bl	8001da6 <evnt_schdlr_updt_conn_evnt_durn>
 800706a:	f8df 0be8 	ldr.w	r0, [pc, #3048]	; 8007c54 <??DataTable25>
 800706e:	6801      	ldr	r1, [r0, #0]
 8007070:	6b0c      	ldr	r4, [r1, #48]	; 0x30
 8007072:	b134      	cbz	r4, 8007082 <??llcp_data_length_update_received_10>
 8007074:	8970      	ldrh	r0, [r6, #10]
 8007076:	9000      	str	r0, [sp, #0]
 8007078:	8933      	ldrh	r3, [r6, #8]
 800707a:	89f2      	ldrh	r2, [r6, #14]
 800707c:	89b1      	ldrh	r1, [r6, #12]
 800707e:	8ff0      	ldrh	r0, [r6, #62]	; 0x3e
 8007080:	47a0      	blx	r4

08007082 <??llcp_data_length_update_received_10>:
 8007082:	2000      	movs	r0, #0
 8007084:	b003      	add	sp, #12
 8007086:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0800708a <llcp_encryption_req>:
 800708a:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800708e:	b08d      	sub	sp, #52	; 0x34
 8007090:	4606      	mov	r6, r0
 8007092:	468a      	mov	sl, r1
 8007094:	4693      	mov	fp, r2
 8007096:	4699      	mov	r9, r3
 8007098:	2808      	cmp	r0, #8
 800709a:	bfba      	itte	lt
 800709c:	f8df 1624 	ldrlt.w	r1, [pc, #1572]	; 80076c4 <??DataTable20>
 80070a0:	f851 4020 	ldrlt.w	r4, [r1, r0, lsl #2]
 80070a4:	2400      	movge	r4, #0
 80070a6:	253a      	movs	r5, #58	; 0x3a
 80070a8:	b90c      	cbnz	r4, 80070ae <??llcp_encryption_req_0>
 80070aa:	2502      	movs	r5, #2
 80070ac:	e0a1      	b.n	80071f2 <??llcp_encryption_req_1>

080070ae <??llcp_encryption_req_0>:
 80070ae:	f894 0125 	ldrb.w	r0, [r4, #293]	; 0x125
 80070b2:	b108      	cbz	r0, 80070b8 <??llcp_encryption_req_2>
 80070b4:	2512      	movs	r5, #18
 80070b6:	e09c      	b.n	80071f2 <??llcp_encryption_req_1>

080070b8 <??llcp_encryption_req_2>:
 80070b8:	4668      	mov	r0, sp
 80070ba:	f00f f9a6 	bl	801640a <db_get_le_feature_info>
 80070be:	f104 0846 	add.w	r8, r4, #70	; 0x46
 80070c2:	f898 0000 	ldrb.w	r0, [r8]
 80070c6:	07c1      	lsls	r1, r0, #31
 80070c8:	f140 8092 	bpl.w	80071f0 <??llcp_encryption_req_3>
 80070cc:	f00f f9b6 	bl	801643c <db_check_encryption>
 80070d0:	2800      	cmp	r0, #0
 80070d2:	f000 808b 	beq.w	80071ec <??llcp_encryption_req_4>
 80070d6:	f504 7782 	add.w	r7, r4, #260	; 0x104
 80070da:	7ff8      	ldrb	r0, [r7, #31]
 80070dc:	b1b0      	cbz	r0, 800710c <??llcp_encryption_req_5>
 80070de:	2807      	cmp	r0, #7
 80070e0:	d01b      	beq.n	800711a <??llcp_encryption_req_6>
 80070e2:	2210      	movs	r2, #16
 80070e4:	4649      	mov	r1, r9
 80070e6:	f504 7083 	add.w	r0, r4, #262	; 0x106
 80070ea:	f007 fd2d 	bl	800eb48 <ble_memcpy>
 80070ee:	2208      	movs	r2, #8
 80070f0:	4651      	mov	r1, sl
 80070f2:	f504 708b 	add.w	r0, r4, #278	; 0x116
 80070f6:	f007 fd27 	bl	800eb48 <ble_memcpy>
 80070fa:	f8a7 b000 	strh.w	fp, [r7]
 80070fe:	2200      	movs	r2, #0
 8007100:	4631      	mov	r1, r6
 8007102:	2005      	movs	r0, #5
 8007104:	f001 f9c4 	bl	8008490 <llcp_enqueue_host_control>
 8007108:	4605      	mov	r5, r0
 800710a:	e072      	b.n	80071f2 <??llcp_encryption_req_1>

0800710c <??llcp_encryption_req_5>:
 800710c:	2001      	movs	r0, #1
 800710e:	f888 0016 	strb.w	r0, [r8, #22]
 8007112:	2107      	movs	r1, #7
 8007114:	4620      	mov	r0, r4
 8007116:	f7fe fe84 	bl	8005e22 <llcp_cntrl_init>

0800711a <??llcp_encryption_req_6>:
 800711a:	7fb9      	ldrb	r1, [r7, #30]
 800711c:	f504 7083 	add.w	r0, r4, #262	; 0x106
 8007120:	2900      	cmp	r1, #0
 8007122:	d139      	bne.n	8007198 <??llcp_encryption_req_7>
 8007124:	2210      	movs	r2, #16
 8007126:	4649      	mov	r1, r9
 8007128:	f007 fd0e 	bl	800eb48 <ble_memcpy>
 800712c:	2208      	movs	r2, #8
 800712e:	4651      	mov	r1, sl
 8007130:	a802      	add	r0, sp, #8
 8007132:	f007 fd09 	bl	800eb48 <ble_memcpy>
 8007136:	f8ad b01c 	strh.w	fp, [sp, #28]
 800713a:	2104      	movs	r1, #4
 800713c:	a806      	add	r0, sp, #24
 800713e:	f004 fd34 	bl	800bbaa <llhwc_gen_rnd_num>
 8007142:	2800      	cmp	r0, #0
 8007144:	d155      	bne.n	80071f2 <??llcp_encryption_req_1>
 8007146:	2108      	movs	r1, #8
 8007148:	a804      	add	r0, sp, #16
 800714a:	f004 fd2e 	bl	800bbaa <llhwc_gen_rnd_num>
 800714e:	2800      	cmp	r0, #0
 8007150:	d14f      	bne.n	80071f2 <??llcp_encryption_req_1>
 8007152:	9806      	ldr	r0, [sp, #24]
 8007154:	f104 06c0 	add.w	r6, r4, #192	; 0xc0
 8007158:	2208      	movs	r2, #8
 800715a:	6230      	str	r0, [r6, #32]
 800715c:	a904      	add	r1, sp, #16
 800715e:	f104 00f0 	add.w	r0, r4, #240	; 0xf0
 8007162:	f007 fcf1 	bl	800eb48 <ble_memcpy>
 8007166:	f8df 1630 	ldr.w	r1, [pc, #1584]	; 8007798 <??DataTable22>
 800716a:	2000      	movs	r0, #0
 800716c:	f00c f9ca 	bl	8013504 <allocate_data_packet>
 8007170:	4604      	mov	r4, r0
 8007172:	2500      	movs	r5, #0
 8007174:	2c00      	cmp	r4, #0
 8007176:	d03c      	beq.n	80071f2 <??llcp_encryption_req_1>
 8007178:	4622      	mov	r2, r4
 800717a:	a902      	add	r1, sp, #8
 800717c:	2003      	movs	r0, #3
 800717e:	f00b fe31 	bl	8012de4 <pdu_trnsprt_hndlr_form_cntrl_pdu>
 8007182:	6830      	ldr	r0, [r6, #0]
 8007184:	4621      	mov	r1, r4
 8007186:	f7fa fdc2 	bl	8001d0e <evnt_schdlr_add_ctrl_pkt>
 800718a:	4605      	mov	r5, r0
 800718c:	1e40      	subs	r0, r0, #1
 800718e:	4180      	sbcs	r0, r0
 8007190:	0fc0      	lsrs	r0, r0, #31
 8007192:	f7f9 f81d 	bl	80001d0 <bsp_assert>
 8007196:	e02c      	b.n	80071f2 <??llcp_encryption_req_1>

08007198 <??llcp_encryption_req_7>:
 8007198:	2108      	movs	r1, #8
 800719a:	76b9      	strb	r1, [r7, #26]
 800719c:	2210      	movs	r2, #16
 800719e:	4649      	mov	r1, r9
 80071a0:	f007 fcd2 	bl	800eb48 <ble_memcpy>
 80071a4:	2208      	movs	r2, #8
 80071a6:	4651      	mov	r1, sl
 80071a8:	f504 708b 	add.w	r0, r4, #278	; 0x116
 80071ac:	f007 fccc 	bl	800eb48 <ble_memcpy>
 80071b0:	f8a7 b000 	strh.w	fp, [r7]
 80071b4:	f8df 15e0 	ldr.w	r1, [pc, #1504]	; 8007798 <??DataTable22>
 80071b8:	2000      	movs	r0, #0
 80071ba:	f00c f9a3 	bl	8013504 <allocate_data_packet>
 80071be:	4606      	mov	r6, r0
 80071c0:	2500      	movs	r5, #0
 80071c2:	34c0      	adds	r4, #192	; 0xc0
 80071c4:	b176      	cbz	r6, 80071e4 <??llcp_encryption_req_8>
 80071c6:	4632      	mov	r2, r6
 80071c8:	2100      	movs	r1, #0
 80071ca:	200a      	movs	r0, #10
 80071cc:	f00b fe0a 	bl	8012de4 <pdu_trnsprt_hndlr_form_cntrl_pdu>
 80071d0:	6820      	ldr	r0, [r4, #0]
 80071d2:	4631      	mov	r1, r6
 80071d4:	f7fa fd9b 	bl	8001d0e <evnt_schdlr_add_ctrl_pkt>
 80071d8:	4605      	mov	r5, r0
 80071da:	1e40      	subs	r0, r0, #1
 80071dc:	4180      	sbcs	r0, r0
 80071de:	0fc0      	lsrs	r0, r0, #31
 80071e0:	f7f8 fff6 	bl	80001d0 <bsp_assert>

080071e4 <??llcp_encryption_req_8>:
 80071e4:	6960      	ldr	r0, [r4, #20]
 80071e6:	f7fe fb90 	bl	800590a <os_timer_stop>
 80071ea:	e002      	b.n	80071f2 <??llcp_encryption_req_1>

080071ec <??llcp_encryption_req_4>:
 80071ec:	2511      	movs	r5, #17
 80071ee:	e000      	b.n	80071f2 <??llcp_encryption_req_1>

080071f0 <??llcp_encryption_req_3>:
 80071f0:	251a      	movs	r5, #26

080071f2 <??llcp_encryption_req_1>:
 80071f2:	4628      	mov	r0, r5
 80071f4:	b00d      	add	sp, #52	; 0x34
 80071f6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

080071fa <llcp_enc_rsp_received>:
 80071fa:	b510      	push	{r4, lr}
 80071fc:	4604      	mov	r4, r0
 80071fe:	f894 2123 	ldrb.w	r2, [r4, #291]	; 0x123
 8007202:	2000      	movs	r0, #0
 8007204:	2a07      	cmp	r2, #7
 8007206:	d111      	bne.n	800722c <??llcp_enc_rsp_received_0>
 8007208:	f851 0b04 	ldr.w	r0, [r1], #4
 800720c:	2208      	movs	r2, #8
 800720e:	f8c4 00e4 	str.w	r0, [r4, #228]	; 0xe4
 8007212:	f104 00f8 	add.w	r0, r4, #248	; 0xf8
 8007216:	f007 fc97 	bl	800eb48 <ble_memcpy>
 800721a:	f104 02f0 	add.w	r2, r4, #240	; 0xf0
 800721e:	f504 7183 	add.w	r1, r4, #262	; 0x106
 8007222:	4610      	mov	r0, r2
 8007224:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8007228:	f002 bca9 	b.w	8009b7e <llhwc_128_encrypt>

0800722c <??llcp_enc_rsp_received_0>:
 800722c:	bd10      	pop	{r4, pc}

0800722e <llcp_enc_req_received>:
 800722e:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8007232:	b08b      	sub	sp, #44	; 0x2c
 8007234:	4680      	mov	r8, r0
 8007236:	460f      	mov	r7, r1
 8007238:	2400      	movs	r4, #0
 800723a:	f00f f8ff 	bl	801643c <db_check_encryption>
 800723e:	2800      	cmp	r0, #0
 8007240:	d047      	beq.n	80072d2 <??llcp_enc_req_received_0>
 8007242:	f508 7587 	add.w	r5, r8, #270	; 0x10e
 8007246:	7de8      	ldrb	r0, [r5, #23]
 8007248:	2801      	cmp	r0, #1
 800724a:	d161      	bne.n	8007310 <??llcp_enc_req_received_1>
 800724c:	f108 065c 	add.w	r6, r8, #92	; 0x5c
 8007250:	2007      	movs	r0, #7
 8007252:	7030      	strb	r0, [r6, #0]
 8007254:	2107      	movs	r1, #7
 8007256:	4640      	mov	r0, r8
 8007258:	f7fe fde3 	bl	8005e22 <llcp_cntrl_init>
 800725c:	6938      	ldr	r0, [r7, #16]
 800725e:	f108 09e0 	add.w	r9, r8, #224	; 0xe0
 8007262:	2208      	movs	r2, #8
 8007264:	f8c9 0000 	str.w	r0, [r9]
 8007268:	f107 0108 	add.w	r1, r7, #8
 800726c:	f108 00f0 	add.w	r0, r8, #240	; 0xf0
 8007270:	f007 fc6a 	bl	800eb48 <ble_memcpy>
 8007274:	2208      	movs	r2, #8
 8007276:	4639      	mov	r1, r7
 8007278:	f508 7083 	add.w	r0, r8, #262	; 0x106
 800727c:	f007 fc64 	bl	800eb48 <ble_memcpy>
 8007280:	8ab8      	ldrh	r0, [r7, #20]
 8007282:	7028      	strb	r0, [r5, #0]
 8007284:	8ab9      	ldrh	r1, [r7, #20]
 8007286:	4668      	mov	r0, sp
 8007288:	0a09      	lsrs	r1, r1, #8
 800728a:	7069      	strb	r1, [r5, #1]
 800728c:	2104      	movs	r1, #4
 800728e:	f004 fc8c 	bl	800bbaa <llhwc_gen_rnd_num>
 8007292:	0004      	movs	r4, r0
 8007294:	d13c      	bne.n	8007310 <??llcp_enc_req_received_1>
 8007296:	2108      	movs	r1, #8
 8007298:	a801      	add	r0, sp, #4
 800729a:	f004 fc86 	bl	800bbaa <llhwc_gen_rnd_num>
 800729e:	0004      	movs	r4, r0
 80072a0:	d136      	bne.n	8007310 <??llcp_enc_req_received_1>
 80072a2:	9800      	ldr	r0, [sp, #0]
 80072a4:	2208      	movs	r2, #8
 80072a6:	a901      	add	r1, sp, #4
 80072a8:	f8c9 0004 	str.w	r0, [r9, #4]
 80072ac:	f108 00f8 	add.w	r0, r8, #248	; 0xf8
 80072b0:	f007 fc4a 	bl	800eb48 <ble_memcpy>
 80072b4:	f8df 14e0 	ldr.w	r1, [pc, #1248]	; 8007798 <??DataTable22>
 80072b8:	2000      	movs	r0, #0
 80072ba:	f00c f923 	bl	8013504 <allocate_data_packet>
 80072be:	0005      	movs	r5, r0
 80072c0:	d026      	beq.n	8007310 <??llcp_enc_req_received_1>
 80072c2:	462a      	mov	r2, r5
 80072c4:	4669      	mov	r1, sp
 80072c6:	2004      	movs	r0, #4
 80072c8:	f00b fd8c 	bl	8012de4 <pdu_trnsprt_hndlr_form_cntrl_pdu>
 80072cc:	4629      	mov	r1, r5
 80072ce:	6e70      	ldr	r0, [r6, #100]	; 0x64
 80072d0:	e017      	b.n	8007302 <??llcp_enc_req_received_2>

080072d2 <??llcp_enc_req_received_0>:
 80072d2:	241a      	movs	r4, #26
 80072d4:	703c      	strb	r4, [r7, #0]
 80072d6:	f8df 14c0 	ldr.w	r1, [pc, #1216]	; 8007798 <??DataTable22>
 80072da:	2000      	movs	r0, #0
 80072dc:	f00c f912 	bl	8013504 <allocate_data_packet>
 80072e0:	0005      	movs	r5, r0
 80072e2:	d015      	beq.n	8007310 <??llcp_enc_req_received_1>
 80072e4:	462a      	mov	r2, r5
 80072e6:	4639      	mov	r1, r7
 80072e8:	200d      	movs	r0, #13
 80072ea:	f00b fd7b 	bl	8012de4 <pdu_trnsprt_hndlr_form_cntrl_pdu>
 80072ee:	f108 075c 	add.w	r7, r8, #92	; 0x5c
 80072f2:	6f78      	ldr	r0, [r7, #116]	; 0x74
 80072f4:	b118      	cbz	r0, 80072fe <??llcp_enc_req_received_3>
 80072f6:	f108 00d0 	add.w	r0, r8, #208	; 0xd0
 80072fa:	f7fe fb78 	bl	80059ee <os_timer_stop_free>

080072fe <??llcp_enc_req_received_3>:
 80072fe:	4629      	mov	r1, r5
 8007300:	6e78      	ldr	r0, [r7, #100]	; 0x64

08007302 <??llcp_enc_req_received_2>:
 8007302:	f7fa fd04 	bl	8001d0e <evnt_schdlr_add_ctrl_pkt>
 8007306:	1e40      	subs	r0, r0, #1
 8007308:	4180      	sbcs	r0, r0
 800730a:	0fc0      	lsrs	r0, r0, #31
 800730c:	f7f8 ff60 	bl	80001d0 <bsp_assert>

08007310 <??llcp_enc_req_received_1>:
 8007310:	4620      	mov	r0, r4

08007312 <?Subroutine2>:
 8007312:	b00b      	add	sp, #44	; 0x2c
 8007314:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}

08007318 <llcp_req_lng_trm_key>:
 8007318:	b578      	push	{r3, r4, r5, r6, lr}
 800731a:	b08b      	sub	sp, #44	; 0x2c
 800731c:	4605      	mov	r5, r0
 800731e:	f895 3124 	ldrb.w	r3, [r5, #292]	; 0x124
 8007322:	2006      	movs	r0, #6
 8007324:	2b07      	cmp	r3, #7
 8007326:	d127      	bne.n	8007378 <??llcp_req_lng_trm_key_0>
 8007328:	f8df 4928 	ldr.w	r4, [pc, #2344]	; 8007c54 <??DataTable25>
 800732c:	6823      	ldr	r3, [r4, #0]
 800732e:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8007330:	b123      	cbz	r3, 800733c <??llcp_req_lng_trm_key_1>
 8007332:	f105 04c0 	add.w	r4, r5, #192	; 0xc0
 8007336:	8be0      	ldrh	r0, [r4, #30]
 8007338:	4798      	blx	r3
 800733a:	b300      	cbz	r0, 800737e <??llcp_req_lng_trm_key_2>

0800733c <??llcp_req_lng_trm_key_1>:
 800733c:	f88d 0000 	strb.w	r0, [sp]
 8007340:	f8df 1454 	ldr.w	r1, [pc, #1108]	; 8007798 <??DataTable22>
 8007344:	2000      	movs	r0, #0
 8007346:	f00c f8dd 	bl	8013504 <allocate_data_packet>
 800734a:	0004      	movs	r4, r0
 800734c:	d017      	beq.n	800737e <??llcp_req_lng_trm_key_2>
 800734e:	4622      	mov	r2, r4
 8007350:	4669      	mov	r1, sp
 8007352:	200d      	movs	r0, #13
 8007354:	f00b fd46 	bl	8012de4 <pdu_trnsprt_hndlr_form_cntrl_pdu>
 8007358:	f105 06c0 	add.w	r6, r5, #192	; 0xc0
 800735c:	6930      	ldr	r0, [r6, #16]
 800735e:	b118      	cbz	r0, 8007368 <??llcp_req_lng_trm_key_3>
 8007360:	f105 00d0 	add.w	r0, r5, #208	; 0xd0
 8007364:	f7fe fb43 	bl	80059ee <os_timer_stop_free>

08007368 <??llcp_req_lng_trm_key_3>:
 8007368:	6830      	ldr	r0, [r6, #0]
 800736a:	4621      	mov	r1, r4
 800736c:	f7fa fccf 	bl	8001d0e <evnt_schdlr_add_ctrl_pkt>
 8007370:	1e40      	subs	r0, r0, #1
 8007372:	4180      	sbcs	r0, r0
 8007374:	0fc0      	lsrs	r0, r0, #31
 8007376:	e000      	b.n	800737a <??llcp_req_lng_trm_key_4>

08007378 <??llcp_req_lng_trm_key_0>:
 8007378:	2000      	movs	r0, #0

0800737a <??llcp_req_lng_trm_key_4>:
 800737a:	f7f8 ff29 	bl	80001d0 <bsp_assert>

0800737e <??llcp_req_lng_trm_key_2>:
 800737e:	2000      	movs	r0, #0
 8007380:	b00c      	add	sp, #48	; 0x30
 8007382:	bd70      	pop	{r4, r5, r6, pc}

08007384 <llcp_ping_req>:
 8007384:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8007388:	4606      	mov	r6, r0
 800738a:	f506 7791 	add.w	r7, r6, #290	; 0x122
 800738e:	7838      	ldrb	r0, [r7, #0]
 8007390:	243a      	movs	r4, #58	; 0x3a
 8007392:	2801      	cmp	r0, #1
 8007394:	bf04      	itt	eq
 8007396:	7878      	ldrbeq	r0, [r7, #1]
 8007398:	2800      	cmpeq	r0, #0
 800739a:	d13e      	bne.n	800741a <??llcp_ping_req_0>
 800739c:	2206      	movs	r2, #6
 800739e:	707a      	strb	r2, [r7, #1]
 80073a0:	f8df 13f4 	ldr.w	r1, [pc, #1012]	; 8007798 <??DataTable22>
 80073a4:	f00c f8ae 	bl	8013504 <allocate_data_packet>
 80073a8:	4680      	mov	r8, r0
 80073aa:	2400      	movs	r4, #0
 80073ac:	f1b8 0f00 	cmp.w	r8, #0
 80073b0:	d033      	beq.n	800741a <??llcp_ping_req_0>
 80073b2:	f106 0564 	add.w	r5, r6, #100	; 0x64
 80073b6:	6e68      	ldr	r0, [r5, #100]	; 0x64
 80073b8:	2800      	cmp	r0, #0
 80073ba:	bf0c      	ite	eq
 80073bc:	2001      	moveq	r0, #1
 80073be:	2000      	movne	r0, #0
 80073c0:	f7f8 ff06 	bl	80001d0 <bsp_assert>
 80073c4:	6636      	str	r6, [r6, #96]	; 0x60
 80073c6:	2001      	movs	r0, #1
 80073c8:	7028      	strb	r0, [r5, #0]
 80073ca:	2122      	movs	r1, #34	; 0x22
 80073cc:	71b9      	strb	r1, [r7, #6]
 80073ce:	6e68      	ldr	r0, [r5, #100]	; 0x64
 80073d0:	b978      	cbnz	r0, 80073f2 <??llcp_ping_req_1>
 80073d2:	6636      	str	r6, [r6, #96]	; 0x60
 80073d4:	f106 0260 	add.w	r2, r6, #96	; 0x60
 80073d8:	2100      	movs	r1, #0
 80073da:	f8df 03c0 	ldr.w	r0, [pc, #960]	; 800779c <??DataTable22_1>
 80073de:	f7fe f9b8 	bl	8005752 <os_timer_create>
 80073e2:	2800      	cmp	r0, #0
 80073e4:	bf14      	ite	ne
 80073e6:	2101      	movne	r1, #1
 80073e8:	2100      	moveq	r1, #0
 80073ea:	6668      	str	r0, [r5, #100]	; 0x64
 80073ec:	4608      	mov	r0, r1
 80073ee:	f7f8 feef 	bl	80001d0 <bsp_assert>

080073f2 <??llcp_ping_req_1>:
 80073f2:	4642      	mov	r2, r8
 80073f4:	2100      	movs	r1, #0
 80073f6:	2012      	movs	r0, #18
 80073f8:	f00b fcf4 	bl	8012de4 <pdu_trnsprt_hndlr_form_cntrl_pdu>
 80073fc:	6de8      	ldr	r0, [r5, #92]	; 0x5c
 80073fe:	4641      	mov	r1, r8
 8007400:	f7fa fc85 	bl	8001d0e <evnt_schdlr_add_ctrl_pkt>
 8007404:	4604      	mov	r4, r0
 8007406:	1e40      	subs	r0, r0, #1
 8007408:	4180      	sbcs	r0, r0
 800740a:	0fc0      	lsrs	r0, r0, #31
 800740c:	f7f8 fee0 	bl	80001d0 <bsp_assert>
 8007410:	6e68      	ldr	r0, [r5, #100]	; 0x64
 8007412:	f8df 1588 	ldr.w	r1, [pc, #1416]	; 800799c <??DataTable23>
 8007416:	f7fe fa3f 	bl	8005898 <os_timer_start>

0800741a <??llcp_ping_req_0>:
 800741a:	4620      	mov	r0, r4
 800741c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

08007420 <llcp_ping_received>:
 8007420:	b57c      	push	{r2, r3, r4, r5, r6, lr}
 8007422:	4605      	mov	r5, r0
 8007424:	f205 1423 	addw	r4, r5, #291	; 0x123
 8007428:	7820      	ldrb	r0, [r4, #0]
 800742a:	2806      	cmp	r0, #6
 800742c:	d01d      	beq.n	800746a <??llcp_ping_received_0>
 800742e:	7861      	ldrb	r1, [r4, #1]
 8007430:	1e48      	subs	r0, r1, #1
 8007432:	4180      	sbcs	r0, r0
 8007434:	0fc0      	lsrs	r0, r0, #31
 8007436:	f7f8 fecb 	bl	80001d0 <bsp_assert>
 800743a:	f8df 135c 	ldr.w	r1, [pc, #860]	; 8007798 <??DataTable22>
 800743e:	2000      	movs	r0, #0
 8007440:	f00c f860 	bl	8013504 <allocate_data_packet>
 8007444:	0004      	movs	r4, r0
 8007446:	d028      	beq.n	800749a <??llcp_ping_received_1>
 8007448:	4622      	mov	r2, r4
 800744a:	2100      	movs	r1, #0
 800744c:	2013      	movs	r0, #19
 800744e:	f00b fcc9 	bl	8012de4 <pdu_trnsprt_hndlr_form_cntrl_pdu>
 8007452:	f105 006c 	add.w	r0, r5, #108	; 0x6c
 8007456:	6d40      	ldr	r0, [r0, #84]	; 0x54
 8007458:	4621      	mov	r1, r4
 800745a:	f7fa fc58 	bl	8001d0e <evnt_schdlr_add_ctrl_pkt>
 800745e:	1e40      	subs	r0, r0, #1
 8007460:	4180      	sbcs	r0, r0
 8007462:	0fc0      	lsrs	r0, r0, #31
 8007464:	f7f8 feb4 	bl	80001d0 <bsp_assert>
 8007468:	e017      	b.n	800749a <??llcp_ping_received_1>

0800746a <??llcp_ping_received_0>:
 800746a:	f105 00c8 	add.w	r0, r5, #200	; 0xc8
 800746e:	f7fe fabe 	bl	80059ee <os_timer_stop_free>
 8007472:	2000      	movs	r0, #0
 8007474:	7160      	strb	r0, [r4, #5]
 8007476:	f105 066c 	add.w	r6, r5, #108	; 0x6c
 800747a:	6eb0      	ldr	r0, [r6, #104]	; 0x68
 800747c:	f7fe fa45 	bl	800590a <os_timer_stop>
 8007480:	4669      	mov	r1, sp
 8007482:	4628      	mov	r0, r5
 8007484:	f00e fcf7 	bl	8015e76 <conn_mngr_get_ping_timeout_value>
 8007488:	9900      	ldr	r1, [sp, #0]
 800748a:	6eb0      	ldr	r0, [r6, #104]	; 0x68
 800748c:	0149      	lsls	r1, r1, #5
 800748e:	f7fe fa03 	bl	8005898 <os_timer_start>
 8007492:	200a      	movs	r0, #10
 8007494:	7030      	strb	r0, [r6, #0]
 8007496:	2100      	movs	r1, #0
 8007498:	7021      	strb	r1, [r4, #0]

0800749a <??llcp_ping_received_1>:
 800749a:	2000      	movs	r0, #0
 800749c:	bd76      	pop	{r1, r2, r4, r5, r6, pc}

0800749e <llcp_read_remote_version>:
 800749e:	b570      	push	{r4, r5, r6, lr}
 80074a0:	2808      	cmp	r0, #8
 80074a2:	bfba      	itte	lt
 80074a4:	4987      	ldrlt	r1, [pc, #540]	; (80076c4 <??DataTable20>)
 80074a6:	f851 0020 	ldrlt.w	r0, [r1, r0, lsl #2]
 80074aa:	2000      	movge	r0, #0
 80074ac:	223a      	movs	r2, #58	; 0x3a
 80074ae:	2400      	movs	r4, #0
 80074b0:	b908      	cbnz	r0, 80074b6 <??llcp_read_remote_version_0>
 80074b2:	2202      	movs	r2, #2
 80074b4:	e028      	b.n	8007508 <??llcp_read_remote_version_1>

080074b6 <??llcp_read_remote_version_0>:
 80074b6:	f100 0644 	add.w	r6, r0, #68	; 0x44
 80074ba:	7833      	ldrb	r3, [r6, #0]
 80074bc:	f200 1523 	addw	r5, r0, #291	; 0x123
 80074c0:	7829      	ldrb	r1, [r5, #0]
 80074c2:	b93b      	cbnz	r3, 80074d4 <??llcp_read_remote_version_2>
 80074c4:	bb01      	cbnz	r1, 8007508 <??llcp_read_remote_version_1>
 80074c6:	2103      	movs	r1, #3
 80074c8:	7029      	strb	r1, [r5, #0]
 80074ca:	2101      	movs	r1, #1
 80074cc:	f7fe fd4a 	bl	8005f64 <llcp_version_exchange_init>
 80074d0:	4602      	mov	r2, r0
 80074d2:	e019      	b.n	8007508 <??llcp_read_remote_version_1>

080074d4 <??llcp_read_remote_version_2>:
 80074d4:	b959      	cbnz	r1, 80074ee <??llcp_read_remote_version_3>
 80074d6:	2103      	movs	r1, #3
 80074d8:	7029      	strb	r1, [r5, #0]
 80074da:	61f0      	str	r0, [r6, #28]
 80074dc:	2204      	movs	r2, #4
 80074de:	f880 2064 	strb.w	r2, [r0, #100]	; 0x64
 80074e2:	f100 0160 	add.w	r1, r0, #96	; 0x60
 80074e6:	2002      	movs	r0, #2
 80074e8:	f7f8 fef9 	bl	80002de <emngr_post_event>
 80074ec:	e00b      	b.n	8007506 <??llcp_read_remote_version_4>

080074ee <??llcp_read_remote_version_3>:
 80074ee:	7e29      	ldrb	r1, [r5, #24]
 80074f0:	29ff      	cmp	r1, #255	; 0xff
 80074f2:	d104      	bne.n	80074fe <??llcp_read_remote_version_5>

080074f4 <??llcp_read_remote_version_6>:
 80074f4:	2203      	movs	r2, #3
 80074f6:	4420      	add	r0, r4
 80074f8:	f880 213b 	strb.w	r2, [r0, #315]	; 0x13b
 80074fc:	e003      	b.n	8007506 <??llcp_read_remote_version_4>

080074fe <??llcp_read_remote_version_5>:
 80074fe:	7e69      	ldrb	r1, [r5, #25]
 8007500:	2401      	movs	r4, #1
 8007502:	29ff      	cmp	r1, #255	; 0xff
 8007504:	d0f6      	beq.n	80074f4 <??llcp_read_remote_version_6>

08007506 <??llcp_read_remote_version_4>:
 8007506:	2200      	movs	r2, #0

08007508 <??llcp_read_remote_version_1>:
 8007508:	4610      	mov	r0, r2
 800750a:	bd70      	pop	{r4, r5, r6, pc}

0800750c <llcp_read_remote_version_received>:
 800750c:	b57c      	push	{r2, r3, r4, r5, r6, lr}
 800750e:	4606      	mov	r6, r0
 8007510:	f206 1423 	addw	r4, r6, #291	; 0x123
 8007514:	7820      	ldrb	r0, [r4, #0]
 8007516:	460d      	mov	r5, r1
 8007518:	2803      	cmp	r0, #3
 800751a:	d00e      	beq.n	800753a <??llcp_read_remote_version_received_0>
 800751c:	7861      	ldrb	r1, [r4, #1]
 800751e:	1e48      	subs	r0, r1, #1
 8007520:	4180      	sbcs	r0, r0
 8007522:	0fc0      	lsrs	r0, r0, #31
 8007524:	f7f8 fe54 	bl	80001d0 <bsp_assert>
 8007528:	f106 0140 	add.w	r1, r6, #64	; 0x40
 800752c:	7908      	ldrb	r0, [r1, #4]
 800752e:	b9c0      	cbnz	r0, 8007562 <??llcp_read_remote_version_received_1>
 8007530:	2100      	movs	r1, #0
 8007532:	4630      	mov	r0, r6
 8007534:	f7fe fd16 	bl	8005f64 <llcp_version_exchange_init>
 8007538:	e013      	b.n	8007562 <??llcp_read_remote_version_received_1>

0800753a <??llcp_read_remote_version_received_0>:
 800753a:	f106 00c8 	add.w	r0, r6, #200	; 0xc8
 800753e:	f7fe fa56 	bl	80059ee <os_timer_stop_free>
 8007542:	2000      	movs	r0, #0
 8007544:	7020      	strb	r0, [r4, #0]
 8007546:	7160      	strb	r0, [r4, #5]
 8007548:	f8df 2ae8 	ldr.w	r2, [pc, #2792]	; 8008034 <??DataTable30>
 800754c:	6810      	ldr	r0, [r2, #0]
 800754e:	68c4      	ldr	r4, [r0, #12]
 8007550:	b13c      	cbz	r4, 8007562 <??llcp_read_remote_version_received_1>
 8007552:	8868      	ldrh	r0, [r5, #2]
 8007554:	9000      	str	r0, [sp, #0]
 8007556:	882b      	ldrh	r3, [r5, #0]
 8007558:	792a      	ldrb	r2, [r5, #4]
 800755a:	f8b6 10de 	ldrh.w	r1, [r6, #222]	; 0xde
 800755e:	2000      	movs	r0, #0
 8007560:	47a0      	blx	r4

08007562 <??llcp_read_remote_version_received_1>:
 8007562:	7929      	ldrb	r1, [r5, #4]
 8007564:	f106 0040 	add.w	r0, r6, #64	; 0x40
 8007568:	7101      	strb	r1, [r0, #4]
 800756a:	882a      	ldrh	r2, [r5, #0]
 800756c:	8002      	strh	r2, [r0, #0]
 800756e:	8869      	ldrh	r1, [r5, #2]
 8007570:	8041      	strh	r1, [r0, #2]
 8007572:	2000      	movs	r0, #0
 8007574:	bd76      	pop	{r1, r2, r4, r5, r6, pc}

08007576 <llcp_read_remote_features>:
 8007576:	b5f0      	push	{r4, r5, r6, r7, lr}
 8007578:	b08b      	sub	sp, #44	; 0x2c
 800757a:	460d      	mov	r5, r1
 800757c:	2808      	cmp	r0, #8
 800757e:	bfba      	itte	lt
 8007580:	4950      	ldrlt	r1, [pc, #320]	; (80076c4 <??DataTable20>)
 8007582:	f851 4020 	ldrlt.w	r4, [r1, r0, lsl #2]
 8007586:	2400      	movge	r4, #0
 8007588:	273a      	movs	r7, #58	; 0x3a
 800758a:	b90c      	cbnz	r4, 8007590 <??llcp_read_remote_features_0>
 800758c:	2702      	movs	r7, #2
 800758e:	e027      	b.n	80075e0 <??llcp_read_remote_features_1>

08007590 <??llcp_read_remote_features_0>:
 8007590:	2208      	movs	r2, #8
 8007592:	2100      	movs	r1, #0
 8007594:	4668      	mov	r0, sp
 8007596:	f007 fb28 	bl	800ebea <ble_memset>
 800759a:	f104 064e 	add.w	r6, r4, #78	; 0x4e
 800759e:	7830      	ldrb	r0, [r6, #0]
 80075a0:	b988      	cbnz	r0, 80075c6 <??llcp_read_remote_features_2>
 80075a2:	f204 1123 	addw	r1, r4, #291	; 0x123
 80075a6:	7808      	ldrb	r0, [r1, #0]
 80075a8:	b9d0      	cbnz	r0, 80075e0 <??llcp_read_remote_features_1>
 80075aa:	7888      	ldrb	r0, [r1, #2]
 80075ac:	2204      	movs	r2, #4
 80075ae:	700a      	strb	r2, [r1, #0]
 80075b0:	2800      	cmp	r0, #0
 80075b2:	bf0c      	ite	eq
 80075b4:	2108      	moveq	r1, #8
 80075b6:	210e      	movne	r1, #14
 80075b8:	2201      	movs	r2, #1
 80075ba:	4620      	mov	r0, r4
 80075bc:	f7fe fced 	bl	8005f9a <llcp_feature_exchange_init>
 80075c0:	4607      	mov	r7, r0
 80075c2:	7075      	strb	r5, [r6, #1]
 80075c4:	e00c      	b.n	80075e0 <??llcp_read_remote_features_1>

080075c6 <??llcp_read_remote_features_2>:
 80075c6:	b95d      	cbnz	r5, 80075e0 <??llcp_read_remote_features_1>
 80075c8:	2004      	movs	r0, #4
 80075ca:	f884 0123 	strb.w	r0, [r4, #291]	; 0x123
 80075ce:	f104 0160 	add.w	r1, r4, #96	; 0x60
 80075d2:	2205      	movs	r2, #5
 80075d4:	600c      	str	r4, [r1, #0]
 80075d6:	710a      	strb	r2, [r1, #4]
 80075d8:	2002      	movs	r0, #2
 80075da:	f7f8 fe80 	bl	80002de <emngr_post_event>
 80075de:	2700      	movs	r7, #0

080075e0 <??llcp_read_remote_features_1>:
 80075e0:	4638      	mov	r0, r7
 80075e2:	b00b      	add	sp, #44	; 0x2c
 80075e4:	bdf0      	pop	{r4, r5, r6, r7, pc}

080075e6 <llcp_read_remote_features_received>:
 80075e6:	b5f0      	push	{r4, r5, r6, r7, lr}
 80075e8:	2400      	movs	r4, #0
 80075ea:	b08b      	sub	sp, #44	; 0x2c
 80075ec:	4605      	mov	r5, r0
 80075ee:	460e      	mov	r6, r1
 80075f0:	2a08      	cmp	r2, #8
 80075f2:	d11e      	bne.n	8007632 <??llcp_read_remote_features_received_0>
 80075f4:	f205 1023 	addw	r0, r5, #291	; 0x123
 80075f8:	7883      	ldrb	r3, [r0, #2]
 80075fa:	2b01      	cmp	r3, #1
 80075fc:	d020      	beq.n	8007640 <??llcp_read_remote_features_received_1>

080075fe <??llcp_read_remote_features_received_2>:
 80075fe:	7032      	strb	r2, [r6, #0]
 8007600:	4965      	ldr	r1, [pc, #404]	; (8007798 <??DataTable22>)
 8007602:	2000      	movs	r0, #0
 8007604:	f00b ff7e 	bl	8013504 <allocate_data_packet>
 8007608:	0004      	movs	r4, r0
 800760a:	d00f      	beq.n	800762c <??llcp_read_remote_features_received_3>
 800760c:	4622      	mov	r2, r4
 800760e:	4631      	mov	r1, r6
 8007610:	2007      	movs	r0, #7
 8007612:	f00b fbe7 	bl	8012de4 <pdu_trnsprt_hndlr_form_cntrl_pdu>
 8007616:	f105 0060 	add.w	r0, r5, #96	; 0x60
 800761a:	6e00      	ldr	r0, [r0, #96]	; 0x60
 800761c:	4621      	mov	r1, r4
 800761e:	f7fa fb76 	bl	8001d0e <evnt_schdlr_add_ctrl_pkt>
 8007622:	1e40      	subs	r0, r0, #1
 8007624:	4180      	sbcs	r0, r0
 8007626:	0fc0      	lsrs	r0, r0, #31
 8007628:	f7f8 fdd2 	bl	80001d0 <bsp_assert>

0800762c <??llcp_read_remote_features_received_3>:
 800762c:	2419      	movs	r4, #25

0800762e <??llcp_read_remote_features_received_4>:
 800762e:	f000 bed4 	b.w	80083da <?Subroutine4>

08007632 <??llcp_read_remote_features_received_0>:
 8007632:	2a0e      	cmp	r2, #14
 8007634:	d125      	bne.n	8007682 <??llcp_read_remote_features_received_5>
 8007636:	f205 1123 	addw	r1, r5, #291	; 0x123
 800763a:	7888      	ldrb	r0, [r1, #2]
 800763c:	2800      	cmp	r0, #0
 800763e:	d1de      	bne.n	80075fe <??llcp_read_remote_features_received_2>

08007640 <??llcp_read_remote_features_received_1>:
 8007640:	f205 1123 	addw	r1, r5, #291	; 0x123
 8007644:	7848      	ldrb	r0, [r1, #1]
 8007646:	f105 0746 	add.w	r7, r5, #70	; 0x46
 800764a:	1e40      	subs	r0, r0, #1
 800764c:	4180      	sbcs	r0, r0
 800764e:	0fc0      	lsrs	r0, r0, #31
 8007650:	f7f8 fdbe 	bl	80001d0 <bsp_assert>
 8007654:	2208      	movs	r2, #8
 8007656:	4631      	mov	r1, r6
 8007658:	4638      	mov	r0, r7
 800765a:	f007 fa75 	bl	800eb48 <ble_memcpy>
 800765e:	2001      	movs	r0, #1
 8007660:	7238      	strb	r0, [r7, #8]
 8007662:	4668      	mov	r0, sp
 8007664:	f00e fed1 	bl	801640a <db_get_le_feature_info>
 8007668:	f89d 1000 	ldrb.w	r1, [sp]
 800766c:	7838      	ldrb	r0, [r7, #0]
 800766e:	2300      	movs	r3, #0
 8007670:	2209      	movs	r2, #9
 8007672:	4001      	ands	r1, r0
 8007674:	f88d 1000 	strb.w	r1, [sp]
 8007678:	4629      	mov	r1, r5
 800767a:	4668      	mov	r0, sp
 800767c:	f7fe fbff 	bl	8005e7e <llcp_cntrl_pkt_init>
 8007680:	e7d5      	b.n	800762e <??llcp_read_remote_features_received_4>

08007682 <??llcp_read_remote_features_received_5>:
 8007682:	2a09      	cmp	r2, #9
 8007684:	d1bb      	bne.n	80075fe <??llcp_read_remote_features_received_2>
 8007686:	f105 0746 	add.w	r7, r5, #70	; 0x46
 800768a:	2001      	movs	r0, #1
 800768c:	7238      	strb	r0, [r7, #8]
 800768e:	2208      	movs	r2, #8
 8007690:	4638      	mov	r0, r7
 8007692:	f007 fa59 	bl	800eb48 <ble_memcpy>
 8007696:	f105 00c8 	add.w	r0, r5, #200	; 0xc8
 800769a:	f7fe f9a8 	bl	80059ee <os_timer_stop_free>
 800769e:	f205 1123 	addw	r1, r5, #291	; 0x123
 80076a2:	714c      	strb	r4, [r1, #5]
 80076a4:	7a78      	ldrb	r0, [r7, #9]
 80076a6:	b950      	cbnz	r0, 80076be <??llcp_read_remote_features_received_6>
 80076a8:	2204      	movs	r2, #4
 80076aa:	700a      	strb	r2, [r1, #0]
 80076ac:	2005      	movs	r0, #5
 80076ae:	f105 0160 	add.w	r1, r5, #96	; 0x60
 80076b2:	7108      	strb	r0, [r1, #4]
 80076b4:	600d      	str	r5, [r1, #0]
 80076b6:	2002      	movs	r0, #2
 80076b8:	f7f8 fe11 	bl	80002de <emngr_post_event>
 80076bc:	e7b7      	b.n	800762e <??llcp_read_remote_features_received_4>

080076be <??llcp_read_remote_features_received_6>:
 80076be:	700c      	strb	r4, [r1, #0]
 80076c0:	e7b5      	b.n	800762e <??llcp_read_remote_features_received_4>
	...

080076c4 <??DataTable20>:
 80076c4:	03e8 2000                                   ... 

080076c8 <llcp_disconnect>:
 80076c8:	e92d 41f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, lr}
 80076cc:	b08b      	sub	sp, #44	; 0x2c
 80076ce:	2808      	cmp	r0, #8
 80076d0:	da32      	bge.n	8007738 <??llcp_disconnect_0>
 80076d2:	f8df 2c70 	ldr.w	r2, [pc, #3184]	; 8008344 <??DataTable33>
 80076d6:	f852 5020 	ldr.w	r5, [r2, r0, lsl #2]
 80076da:	b36d      	cbz	r5, 8007738 <??llcp_disconnect_0>
 80076dc:	65ad      	str	r5, [r5, #88]	; 0x58
 80076de:	f105 065c 	add.w	r6, r5, #92	; 0x5c
 80076e2:	220d      	movs	r2, #13
 80076e4:	7032      	strb	r2, [r6, #0]
 80076e6:	7631      	strb	r1, [r6, #24]
 80076e8:	f205 1423 	addw	r4, r5, #291	; 0x123
 80076ec:	7820      	ldrb	r0, [r4, #0]
 80076ee:	b908      	cbnz	r0, 80076f4 <??llcp_disconnect_1>
 80076f0:	2205      	movs	r2, #5
 80076f2:	7022      	strb	r2, [r4, #0]

080076f4 <??llcp_disconnect_1>:
 80076f4:	7161      	strb	r1, [r4, #5]
 80076f6:	2000      	movs	r0, #0
 80076f8:	f8a5 00dc 	strh.w	r0, [r5, #220]	; 0xdc
 80076fc:	f88d 1000 	strb.w	r1, [sp]
 8007700:	4925      	ldr	r1, [pc, #148]	; (8007798 <??DataTable22>)
 8007702:	f00b feff 	bl	8013504 <allocate_data_packet>
 8007706:	ea5f 0800 	movs.w	r8, r0
 800770a:	d02e      	beq.n	800776a <??llcp_disconnect_2>
 800770c:	8b68      	ldrh	r0, [r5, #26]
 800770e:	2201      	movs	r2, #1
 8007710:	6075      	str	r5, [r6, #4]
 8007712:	eb00 0180 	add.w	r1, r0, r0, lsl #2
 8007716:	018f      	lsls	r7, r1, #6
 8007718:	7232      	strb	r2, [r6, #8]
 800771a:	2122      	movs	r1, #34	; 0x22
 800771c:	7161      	strb	r1, [r4, #5]
 800771e:	6ef0      	ldr	r0, [r6, #108]	; 0x6c
 8007720:	b988      	cbnz	r0, 8007746 <??llcp_disconnect_3>
 8007722:	f105 0260 	add.w	r2, r5, #96	; 0x60
 8007726:	2100      	movs	r1, #0
 8007728:	481c      	ldr	r0, [pc, #112]	; (800779c <??DataTable22_1>)
 800772a:	f7fe f812 	bl	8005752 <os_timer_create>
 800772e:	2800      	cmp	r0, #0
 8007730:	bf14      	ite	ne
 8007732:	2101      	movne	r1, #1
 8007734:	2100      	moveq	r1, #0
 8007736:	e002      	b.n	800773e <??llcp_disconnect_4>

08007738 <??llcp_disconnect_0>:
 8007738:	2002      	movs	r0, #2
 800773a:	f7ff bb68 	b.w	8006e0e <?Subroutine3>

0800773e <??llcp_disconnect_4>:
 800773e:	66f0      	str	r0, [r6, #108]	; 0x6c
 8007740:	4608      	mov	r0, r1
 8007742:	f7f8 fd45 	bl	80001d0 <bsp_assert>

08007746 <??llcp_disconnect_3>:
 8007746:	4642      	mov	r2, r8
 8007748:	4669      	mov	r1, sp
 800774a:	2002      	movs	r0, #2
 800774c:	f00b fb4a 	bl	8012de4 <pdu_trnsprt_hndlr_form_cntrl_pdu>
 8007750:	6e70      	ldr	r0, [r6, #100]	; 0x64
 8007752:	4641      	mov	r1, r8
 8007754:	f7fa fadb 	bl	8001d0e <evnt_schdlr_add_ctrl_pkt>
 8007758:	1e40      	subs	r0, r0, #1
 800775a:	4180      	sbcs	r0, r0
 800775c:	0fc0      	lsrs	r0, r0, #31
 800775e:	f7f8 fd37 	bl	80001d0 <bsp_assert>
 8007762:	6ef0      	ldr	r0, [r6, #108]	; 0x6c
 8007764:	4639      	mov	r1, r7
 8007766:	f7fe f897 	bl	8005898 <os_timer_start>

0800776a <??llcp_disconnect_2>:
 800776a:	2000      	movs	r0, #0
 800776c:	f7ff bb4f 	b.w	8006e0e <?Subroutine3>

08007770 <llcp_disconnect_received>:
 8007770:	b510      	push	{r4, lr}
 8007772:	f500 7392 	add.w	r3, r0, #292	; 0x124
 8007776:	2405      	movs	r4, #5
 8007778:	785a      	ldrb	r2, [r3, #1]
 800777a:	701c      	strb	r4, [r3, #0]
 800777c:	7809      	ldrb	r1, [r1, #0]
 800777e:	b93a      	cbnz	r2, 8007790 <??llcp_disconnect_received_0>
 8007780:	7119      	strb	r1, [r3, #4]
 8007782:	f8d0 10c0 	ldr.w	r1, [r0, #192]	; 0xc0
 8007786:	f8df 0d04 	ldr.w	r0, [pc, #3332]	; 800848c <??DataTable35>
 800778a:	f7fa fb4f 	bl	8001e2c <evnt_schdlr_rgstr_wait_for_evnt_cmplt>
 800778e:	e001      	b.n	8007794 <??llcp_disconnect_received_1>

08007790 <??llcp_disconnect_received_0>:
 8007790:	f00e fad2 	bl	8015d38 <conn_mngr_disconnect>

08007794 <??llcp_disconnect_received_1>:
 8007794:	2000      	movs	r0, #0
 8007796:	bd10      	pop	{r4, pc}

08007798 <??DataTable22>:
 8007798:	363c 2000                                   <6. 

0800779c <??DataTable22_1>:
 800779c:	6955 0800                                   Ui..

080077a0 <??DataTable22_2>:
 80077a0:	8800 0013                                   ....

080077a4 <llcp_check_update_prcdur>:
 80077a4:	e92d 47f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, lr}
 80077a8:	b08b      	sub	sp, #44	; 0x2c
 80077aa:	4604      	mov	r4, r0
 80077ac:	f104 0770 	add.w	r7, r4, #112	; 0x70
 80077b0:	7ebe      	ldrb	r6, [r7, #26]
 80077b2:	2530      	movs	r5, #48	; 0x30
 80077b4:	4608      	mov	r0, r1
 80077b6:	2e01      	cmp	r6, #1
 80077b8:	bf1f      	itttt	ne
 80077ba:	7af9      	ldrbne	r1, [r7, #11]
 80077bc:	2902      	cmpne	r1, #2
 80077be:	88f9      	ldrhne	r1, [r7, #6]
 80077c0:	2902      	cmpne	r1, #2
 80077c2:	f040 80e8 	bne.w	8007996 <??llcp_check_update_prcdur_0>
 80077c6:	f8d7 8050 	ldr.w	r8, [r7, #80]	; 0x50
 80077ca:	8b23      	ldrh	r3, [r4, #24]
 80077cc:	2100      	movs	r1, #0
 80077ce:	f108 0e0c 	add.w	lr, r8, #12
 80077d2:	f8de 2000 	ldr.w	r2, [lr]
 80077d6:	1c5b      	adds	r3, r3, #1
 80077d8:	eb03 0983 	add.w	r9, r3, r3, lsl #2
 80077dc:	f04f 0c01 	mov.w	ip, #1
 80077e0:	ea4f 0349 	mov.w	r3, r9, lsl #1
 80077e4:	b18a      	cbz	r2, 800780a <??llcp_check_update_prcdur_1>
 80077e6:	f8de 9004 	ldr.w	r9, [lr, #4]
 80077ea:	e002      	b.n	80077f2 <??llcp_check_update_prcdur_2>

080077ec <??llcp_check_update_prcdur_3>:
 80077ec:	f10c 0c01 	add.w	ip, ip, #1
 80077f0:	6852      	ldr	r2, [r2, #4]

080077f2 <??llcp_check_update_prcdur_2>:
 80077f2:	454a      	cmp	r2, r9
 80077f4:	d1fa      	bne.n	80077ec <??llcp_check_update_prcdur_3>
 80077f6:	0002      	movs	r2, r0
 80077f8:	bf08      	it	eq
 80077fa:	2001      	moveq	r0, #1
 80077fc:	ea4f 4c0c 	mov.w	ip, ip, lsl #16
 8007800:	ea4f 3cdc 	mov.w	ip, ip, lsr #15
 8007804:	fb9c f0f0 	sdiv	r0, ip, r0
 8007808:	18c3      	adds	r3, r0, r3

0800780a <??llcp_check_update_prcdur_1>:
 800780a:	b29b      	uxth	r3, r3
 800780c:	2e01      	cmp	r6, #1
 800780e:	d130      	bne.n	8007872 <??llcp_check_update_prcdur_4>
 8007810:	f8b4 00da 	ldrh.w	r0, [r4, #218]	; 0xda
 8007814:	181d      	adds	r5, r3, r0
 8007816:	b2a9      	uxth	r1, r5
 8007818:	4640      	mov	r0, r8
 800781a:	f7fb fba8 	bl	8002f6e <evnt_schdlr_optm_conn_param>
 800781e:	83bd      	strh	r5, [r7, #28]
 8007820:	8ae2      	ldrh	r2, [r4, #22]
 8007822:	f8b4 10da 	ldrh.w	r1, [r4, #218]	; 0xda
 8007826:	b2a8      	uxth	r0, r5
 8007828:	2500      	movs	r5, #0
 800782a:	f7fe fad7 	bl	8005ddc <llcp_get_instant_time>
 800782e:	4680      	mov	r8, r0
 8007830:	8bb8      	ldrh	r0, [r7, #28]
 8007832:	222c      	movs	r2, #44	; 0x2c
 8007834:	f104 0174 	add.w	r1, r4, #116	; 0x74
 8007838:	8038      	strh	r0, [r7, #0]
 800783a:	4668      	mov	r0, sp
 800783c:	f007 f984 	bl	800eb48 <ble_memcpy>
 8007840:	f8df 1ca0 	ldr.w	r1, [pc, #3232]	; 80084e4 <??DataTable36>
 8007844:	2000      	movs	r0, #0
 8007846:	f00b fe5d 	bl	8013504 <allocate_data_packet>
 800784a:	4606      	mov	r6, r0
 800784c:	b176      	cbz	r6, 800786c <??llcp_check_update_prcdur_5>
 800784e:	4632      	mov	r2, r6
 8007850:	4669      	mov	r1, sp
 8007852:	2000      	movs	r0, #0
 8007854:	f00b fac6 	bl	8012de4 <pdu_trnsprt_hndlr_form_cntrl_pdu>
 8007858:	6d38      	ldr	r0, [r7, #80]	; 0x50
 800785a:	4631      	mov	r1, r6
 800785c:	f7fa fa57 	bl	8001d0e <evnt_schdlr_add_ctrl_pkt>
 8007860:	4605      	mov	r5, r0
 8007862:	1e40      	subs	r0, r0, #1
 8007864:	4180      	sbcs	r0, r0
 8007866:	0fc0      	lsrs	r0, r0, #31
 8007868:	f7f8 fcb2 	bl	80001d0 <bsp_assert>

0800786c <??llcp_check_update_prcdur_5>:
 800786c:	2000      	movs	r0, #0
 800786e:	76b8      	strb	r0, [r7, #26]
 8007870:	e08c      	b.n	800798c <??llcp_check_update_prcdur_6>

08007872 <??llcp_check_update_prcdur_4>:
 8007872:	7af8      	ldrb	r0, [r7, #11]
 8007874:	2802      	cmp	r0, #2
 8007876:	d15a      	bne.n	800792e <??llcp_check_update_prcdur_7>
 8007878:	f8b4 00da 	ldrh.w	r0, [r4, #218]	; 0xda
 800787c:	f8df ac64 	ldr.w	sl, [pc, #3172]	; 80084e4 <??DataTable36>
 8007880:	2500      	movs	r5, #0
 8007882:	181b      	adds	r3, r3, r0
 8007884:	80bb      	strh	r3, [r7, #4]
 8007886:	8ae2      	ldrh	r2, [r4, #22]
 8007888:	f8b4 10da 	ldrh.w	r1, [r4, #218]	; 0xda
 800788c:	b298      	uxth	r0, r3
 800788e:	f7fe faa5 	bl	8005ddc <llcp_get_instant_time>
 8007892:	4680      	mov	r8, r0
 8007894:	88b8      	ldrh	r0, [r7, #4]
 8007896:	2208      	movs	r2, #8
 8007898:	f104 0174 	add.w	r1, r4, #116	; 0x74
 800789c:	8038      	strh	r0, [r7, #0]
 800789e:	4668      	mov	r0, sp
 80078a0:	f007 f952 	bl	800eb48 <ble_memcpy>
 80078a4:	4651      	mov	r1, sl
 80078a6:	2000      	movs	r0, #0
 80078a8:	f00b fe2c 	bl	8013504 <allocate_data_packet>
 80078ac:	4606      	mov	r6, r0
 80078ae:	b176      	cbz	r6, 80078ce <??llcp_check_update_prcdur_8>
 80078b0:	4632      	mov	r2, r6
 80078b2:	4669      	mov	r1, sp
 80078b4:	2001      	movs	r0, #1
 80078b6:	f00b fa95 	bl	8012de4 <pdu_trnsprt_hndlr_form_cntrl_pdu>
 80078ba:	6d38      	ldr	r0, [r7, #80]	; 0x50
 80078bc:	4631      	mov	r1, r6
 80078be:	f7fa fa26 	bl	8001d0e <evnt_schdlr_add_ctrl_pkt>
 80078c2:	4605      	mov	r5, r0
 80078c4:	1e40      	subs	r0, r0, #1
 80078c6:	4180      	sbcs	r0, r0
 80078c8:	0fc0      	lsrs	r0, r0, #31
 80078ca:	f7f8 fc81 	bl	80001d0 <bsp_assert>

080078ce <??llcp_check_update_prcdur_8>:
 80078ce:	f504 7992 	add.w	r9, r4, #292	; 0x124
 80078d2:	f899 0000 	ldrb.w	r0, [r9]
 80078d6:	280a      	cmp	r0, #10
 80078d8:	d126      	bne.n	8007928 <??llcp_check_update_prcdur_9>
 80078da:	210f      	movs	r1, #15
 80078dc:	f88d 1000 	strb.w	r1, [sp]
 80078e0:	222a      	movs	r2, #42	; 0x2a
 80078e2:	f88d 2001 	strb.w	r2, [sp, #1]
 80078e6:	4651      	mov	r1, sl
 80078e8:	2000      	movs	r0, #0
 80078ea:	f00b fe0b 	bl	8013504 <allocate_data_packet>
 80078ee:	4606      	mov	r6, r0
 80078f0:	2500      	movs	r5, #0
 80078f2:	b1a6      	cbz	r6, 800791e <??llcp_check_update_prcdur_10>
 80078f4:	4632      	mov	r2, r6
 80078f6:	4669      	mov	r1, sp
 80078f8:	2011      	movs	r0, #17
 80078fa:	f00b fa73 	bl	8012de4 <pdu_trnsprt_hndlr_form_cntrl_pdu>
 80078fe:	6e38      	ldr	r0, [r7, #96]	; 0x60
 8007900:	b118      	cbz	r0, 800790a <??llcp_check_update_prcdur_11>
 8007902:	f104 00d0 	add.w	r0, r4, #208	; 0xd0
 8007906:	f7fe f872 	bl	80059ee <os_timer_stop_free>

0800790a <??llcp_check_update_prcdur_11>:
 800790a:	6d38      	ldr	r0, [r7, #80]	; 0x50
 800790c:	4631      	mov	r1, r6
 800790e:	f7fa f9fe 	bl	8001d0e <evnt_schdlr_add_ctrl_pkt>
 8007912:	4605      	mov	r5, r0
 8007914:	1e40      	subs	r0, r0, #1
 8007916:	4180      	sbcs	r0, r0
 8007918:	0fc0      	lsrs	r0, r0, #31
 800791a:	f7f8 fc59 	bl	80001d0 <bsp_assert>

0800791e <??llcp_check_update_prcdur_10>:
 800791e:	2000      	movs	r0, #0
 8007920:	f889 0000 	strb.w	r0, [r9]
 8007924:	f889 0004 	strb.w	r0, [r9, #4]

08007928 <??llcp_check_update_prcdur_9>:
 8007928:	2000      	movs	r0, #0
 800792a:	72f8      	strb	r0, [r7, #11]
 800792c:	e02e      	b.n	800798c <??llcp_check_update_prcdur_6>

0800792e <??llcp_check_update_prcdur_7>:
 800792e:	88f8      	ldrh	r0, [r7, #6]
 8007930:	2802      	cmp	r0, #2
 8007932:	d12d      	bne.n	8007990 <??llcp_check_update_prcdur_12>
 8007934:	f8b4 00da 	ldrh.w	r0, [r4, #218]	; 0xda
 8007938:	2500      	movs	r5, #0
 800793a:	181b      	adds	r3, r3, r0
 800793c:	80fb      	strh	r3, [r7, #6]
 800793e:	8ae2      	ldrh	r2, [r4, #22]
 8007940:	f8b4 10da 	ldrh.w	r1, [r4, #218]	; 0xda
 8007944:	b298      	uxth	r0, r3
 8007946:	f7fe fa49 	bl	8005ddc <llcp_get_instant_time>
 800794a:	4680      	mov	r8, r0
 800794c:	2206      	movs	r2, #6
 800794e:	f104 0174 	add.w	r1, r4, #116	; 0x74
 8007952:	4668      	mov	r0, sp
 8007954:	f007 f8f8 	bl	800eb48 <ble_memcpy>
 8007958:	f8df 1b88 	ldr.w	r1, [pc, #2952]	; 80084e4 <??DataTable36>
 800795c:	2000      	movs	r0, #0
 800795e:	f00b fdd1 	bl	8013504 <allocate_data_packet>
 8007962:	4606      	mov	r6, r0
 8007964:	b176      	cbz	r6, 8007984 <??llcp_check_update_prcdur_13>
 8007966:	4632      	mov	r2, r6
 8007968:	4669      	mov	r1, sp
 800796a:	2018      	movs	r0, #24
 800796c:	f00b fa3a 	bl	8012de4 <pdu_trnsprt_hndlr_form_cntrl_pdu>
 8007970:	6d38      	ldr	r0, [r7, #80]	; 0x50
 8007972:	4631      	mov	r1, r6
 8007974:	f7fa f9cb 	bl	8001d0e <evnt_schdlr_add_ctrl_pkt>
 8007978:	4605      	mov	r5, r0
 800797a:	1e40      	subs	r0, r0, #1
 800797c:	4180      	sbcs	r0, r0
 800797e:	0fc0      	lsrs	r0, r0, #31
 8007980:	f7f8 fc26 	bl	80001d0 <bsp_assert>

08007984 <??llcp_check_update_prcdur_13>:
 8007984:	2000      	movs	r0, #0
 8007986:	f504 7192 	add.w	r1, r4, #292	; 0x124
 800798a:	7108      	strb	r0, [r1, #4]

0800798c <??llcp_check_update_prcdur_6>:
 800798c:	ea4f 1148 	mov.w	r1, r8, lsl #5

08007990 <??llcp_check_update_prcdur_12>:
 8007990:	6df8      	ldr	r0, [r7, #92]	; 0x5c
 8007992:	f7fd ff81 	bl	8005898 <os_timer_start>

08007996 <??llcp_check_update_prcdur_0>:
 8007996:	4628      	mov	r0, r5
 8007998:	e213      	b.n	8007dc2 <??Subroutine0_0>
	...

0800799c <??DataTable23>:
 800799c:	8800 0013                                   ....

080079a0 <llcp_update_conn_param>:
 80079a0:	e92d 47f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, lr}
 80079a4:	b08b      	sub	sp, #44	; 0x2c
 80079a6:	468a      	mov	sl, r1
 80079a8:	2808      	cmp	r0, #8
 80079aa:	bfba      	itte	lt
 80079ac:	f8df 1994 	ldrlt.w	r1, [pc, #2452]	; 8008344 <??DataTable33>
 80079b0:	f851 8020 	ldrlt.w	r8, [r1, r0, lsl #2]
 80079b4:	f04f 0800 	movge.w	r8, #0
 80079b8:	f04f 093a 	mov.w	r9, #58	; 0x3a
 80079bc:	f1b8 0f00 	cmp.w	r8, #0
 80079c0:	bf08      	it	eq
 80079c2:	f04f 0902 	moveq.w	r9, #2
 80079c6:	f000 80a1 	beq.w	8007b0c <??llcp_update_conn_param_0>
 80079ca:	f208 1523 	addw	r5, r8, #291	; 0x123
 80079ce:	78a8      	ldrb	r0, [r5, #2]
 80079d0:	2800      	cmp	r0, #0
 80079d2:	f040 80b1 	bne.w	8007b38 <??llcp_update_conn_param_1>
 80079d6:	7828      	ldrb	r0, [r5, #0]
 80079d8:	2800      	cmp	r0, #0
 80079da:	bf18      	it	ne
 80079dc:	280a      	cmpne	r0, #10
 80079de:	d005      	beq.n	80079ec <??llcp_update_conn_param_2>
 80079e0:	7868      	ldrb	r0, [r5, #1]
 80079e2:	2801      	cmp	r0, #1
 80079e4:	bf18      	it	ne
 80079e6:	280a      	cmpne	r0, #10
 80079e8:	f040 8090 	bne.w	8007b0c <??llcp_update_conn_param_0>

080079ec <??llcp_update_conn_param_2>:
 80079ec:	f8c8 8058 	str.w	r8, [r8, #88]	; 0x58
 80079f0:	2210      	movs	r2, #16
 80079f2:	4651      	mov	r1, sl
 80079f4:	f108 007c 	add.w	r0, r8, #124	; 0x7c
 80079f8:	f007 f8a6 	bl	800eb48 <ble_memcpy>
 80079fc:	7a68      	ldrb	r0, [r5, #9]
 80079fe:	f108 078a 	add.w	r7, r8, #138	; 0x8a
 8007a02:	f108 065c 	add.w	r6, r8, #92	; 0x5c
 8007a06:	2804      	cmp	r0, #4
 8007a08:	bf1c      	itt	ne
 8007a0a:	7aa8      	ldrbne	r0, [r5, #10]
 8007a0c:	2804      	cmpne	r0, #4
 8007a0e:	d116      	bne.n	8007a3e <??llcp_update_conn_param_3>
 8007a10:	8bf9      	ldrh	r1, [r7, #30]
 8007a12:	8db8      	ldrh	r0, [r7, #44]	; 0x2c
 8007a14:	0189      	lsls	r1, r1, #6
 8007a16:	f501 7174 	add.w	r1, r1, #976	; 0x3d0
 8007a1a:	4288      	cmp	r0, r1
 8007a1c:	bfb8      	it	lt
 8007a1e:	4601      	movlt	r1, r0
 8007a20:	8c72      	ldrh	r2, [r6, #34]	; 0x22
 8007a22:	f240 40e2 	movw	r0, #1250	; 0x4e2
 8007a26:	f601 31bc 	addw	r1, r1, #3004	; 0xbbc
 8007a2a:	4342      	muls	r2, r0
 8007a2c:	428a      	cmp	r2, r1
 8007a2e:	d206      	bcs.n	8007a3e <??llcp_update_conn_param_3>
 8007a30:	f8df 9b2c 	ldr.w	r9, [pc, #2860]	; 8008560 <??DataTable37>
 8007a34:	fba1 9309 	umull	r9, r3, r1, r9
 8007a38:	0a98      	lsrs	r0, r3, #10
 8007a3a:	8470      	strh	r0, [r6, #34]	; 0x22
 8007a3c:	8430      	strh	r0, [r6, #32]

08007a3e <??llcp_update_conn_param_3>:
 8007a3e:	8c71      	ldrh	r1, [r6, #34]	; 0x22
 8007a40:	4640      	mov	r0, r8
 8007a42:	f108 04c0 	add.w	r4, r8, #192	; 0xc0
 8007a46:	f000 fccb 	bl	80083e0 <llcp_update_eff_max_tx_time>
 8007a4a:	2005      	movs	r0, #5
 8007a4c:	71b8      	strb	r0, [r7, #6]
 8007a4e:	f89a 000e 	ldrb.w	r0, [sl, #14]
 8007a52:	280b      	cmp	r0, #11
 8007a54:	d109      	bne.n	8007a6a <??llcp_update_conn_param_4>
 8007a56:	8c70      	ldrh	r0, [r6, #34]	; 0x22
 8007a58:	80b8      	strh	r0, [r7, #4]
 8007a5a:	f8ba 100c 	ldrh.w	r1, [sl, #12]
 8007a5e:	f64f 70ff 	movw	r0, #65535	; 0xffff
 8007a62:	4281      	cmp	r1, r0
 8007a64:	d110      	bne.n	8007a88 <??llcp_update_conn_param_5>
 8007a66:	2200      	movs	r2, #0
 8007a68:	85b2      	strh	r2, [r6, #44]	; 0x2c

08007a6a <??llcp_update_conn_param_4>:
 8007a6a:	2002      	movs	r0, #2
 8007a6c:	7030      	strb	r0, [r6, #0]
 8007a6e:	7869      	ldrb	r1, [r5, #1]
 8007a70:	2901      	cmp	r1, #1
 8007a72:	bf1c      	itt	ne
 8007a74:	2001      	movne	r0, #1
 8007a76:	7028      	strbne	r0, [r5, #0]
 8007a78:	2128      	movs	r1, #40	; 0x28
 8007a7a:	7169      	strb	r1, [r5, #5]
 8007a7c:	68e0      	ldr	r0, [r4, #12]
 8007a7e:	2800      	cmp	r0, #0
 8007a80:	bf0c      	ite	eq
 8007a82:	2001      	moveq	r0, #1
 8007a84:	2000      	movne	r0, #0
 8007a86:	e042      	b.n	8007b0e <??llcp_update_conn_param_6>

08007a88 <??llcp_update_conn_param_5>:
 8007a88:	8879      	ldrh	r1, [r7, #2]
 8007a8a:	6820      	ldr	r0, [r4, #0]
 8007a8c:	f7fb fa6f 	bl	8002f6e <evnt_schdlr_optm_conn_param>
 8007a90:	4681      	mov	r9, r0
 8007a92:	f8b8 0016 	ldrh.w	r0, [r8, #22]
 8007a96:	88b9      	ldrh	r1, [r7, #4]
 8007a98:	4288      	cmp	r0, r1
 8007a9a:	bf02      	ittt	eq
 8007a9c:	8ba0      	ldrheq	r0, [r4, #28]
 8007a9e:	8cb1      	ldrheq	r1, [r6, #36]	; 0x24
 8007aa0:	4288      	cmpeq	r0, r1
 8007aa2:	bf02      	ittt	eq
 8007aa4:	f8b8 001a 	ldrheq.w	r0, [r8, #26]
 8007aa8:	8cf1      	ldrheq	r1, [r6, #38]	; 0x26
 8007aaa:	4288      	cmpeq	r0, r1
 8007aac:	d1dd      	bne.n	8007a6a <??llcp_update_conn_param_4>
 8007aae:	f1b9 0f00 	cmp.w	r9, #0
 8007ab2:	d0da      	beq.n	8007a6a <??llcp_update_conn_param_4>
 8007ab4:	7868      	ldrb	r0, [r5, #1]
 8007ab6:	280a      	cmp	r0, #10
 8007ab8:	d123      	bne.n	8007b02 <??llcp_update_conn_param_7>
 8007aba:	f88d 9000 	strb.w	r9, [sp]
 8007abe:	f8df 1a24 	ldr.w	r1, [pc, #2596]	; 80084e4 <??DataTable36>
 8007ac2:	2000      	movs	r0, #0
 8007ac4:	f00b fd1e 	bl	8013504 <allocate_data_packet>
 8007ac8:	ea5f 0a00 	movs.w	sl, r0
 8007acc:	d013      	beq.n	8007af6 <??llcp_update_conn_param_8>
 8007ace:	4652      	mov	r2, sl
 8007ad0:	4669      	mov	r1, sp
 8007ad2:	200d      	movs	r0, #13
 8007ad4:	f00b f986 	bl	8012de4 <pdu_trnsprt_hndlr_form_cntrl_pdu>
 8007ad8:	6920      	ldr	r0, [r4, #16]
 8007ada:	b118      	cbz	r0, 8007ae4 <??llcp_update_conn_param_9>
 8007adc:	f108 00d0 	add.w	r0, r8, #208	; 0xd0
 8007ae0:	f7fd ff85 	bl	80059ee <os_timer_stop_free>

08007ae4 <??llcp_update_conn_param_9>:
 8007ae4:	6820      	ldr	r0, [r4, #0]
 8007ae6:	4651      	mov	r1, sl
 8007ae8:	f7fa f911 	bl	8001d0e <evnt_schdlr_add_ctrl_pkt>
 8007aec:	1e40      	subs	r0, r0, #1
 8007aee:	4180      	sbcs	r0, r0
 8007af0:	0fc0      	lsrs	r0, r0, #31
 8007af2:	f7f8 fb6d 	bl	80001d0 <bsp_assert>

08007af6 <??llcp_update_conn_param_8>:
 8007af6:	68a0      	ldr	r0, [r4, #8]
 8007af8:	b118      	cbz	r0, 8007b02 <??llcp_update_conn_param_7>
 8007afa:	f108 00c8 	add.w	r0, r8, #200	; 0xc8
 8007afe:	f7fd ff76 	bl	80059ee <os_timer_stop_free>

08007b02 <??llcp_update_conn_param_7>:
 8007b02:	2000      	movs	r0, #0
 8007b04:	7068      	strb	r0, [r5, #1]
 8007b06:	7028      	strb	r0, [r5, #0]
 8007b08:	7168      	strb	r0, [r5, #5]

08007b0a <??llcp_update_conn_param_10>:
 8007b0a:	7038      	strb	r0, [r7, #0]

08007b0c <??llcp_update_conn_param_0>:
 8007b0c:	e158      	b.n	8007dc0 <??llcp_update_param_req_0>

08007b0e <??llcp_update_conn_param_6>:
 8007b0e:	f7f8 fb5f 	bl	80001d0 <bsp_assert>
 8007b12:	f108 0258 	add.w	r2, r8, #88	; 0x58
 8007b16:	2100      	movs	r1, #0
 8007b18:	f8df 0a48 	ldr.w	r0, [pc, #2632]	; 8008564 <??DataTable37_1>
 8007b1c:	f7fd fe19 	bl	8005752 <os_timer_create>
 8007b20:	2800      	cmp	r0, #0
 8007b22:	bf14      	ite	ne
 8007b24:	2101      	movne	r1, #1
 8007b26:	2100      	moveq	r1, #0
 8007b28:	60e0      	str	r0, [r4, #12]
 8007b2a:	4608      	mov	r0, r1
 8007b2c:	f7f8 fb50 	bl	80001d0 <bsp_assert>
 8007b30:	2001      	movs	r0, #1
 8007b32:	f04f 0900 	mov.w	r9, #0
 8007b36:	e7e8      	b.n	8007b0a <??llcp_update_conn_param_10>

08007b38 <??llcp_update_conn_param_1>:
 8007b38:	2801      	cmp	r0, #1
 8007b3a:	d1e7      	bne.n	8007b0c <??llcp_update_conn_param_0>
 8007b3c:	f04f 0911 	mov.w	r9, #17
 8007b40:	e7e4      	b.n	8007b0c <??llcp_update_conn_param_0>

08007b42 <llcp_update_conn_param_received>:
 8007b42:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8007b46:	4680      	mov	r8, r0
 8007b48:	460c      	mov	r4, r1
 8007b4a:	f108 06da 	add.w	r6, r8, #218	; 0xda
 8007b4e:	f8b8 2016 	ldrh.w	r2, [r8, #22]
 8007b52:	8831      	ldrh	r1, [r6, #0]
 8007b54:	8b20      	ldrh	r0, [r4, #24]
 8007b56:	f108 055c 	add.w	r5, r8, #92	; 0x5c
 8007b5a:	f208 1723 	addw	r7, r8, #291	; 0x123
 8007b5e:	f7fe f93d 	bl	8005ddc <llcp_get_instant_time>
 8007b62:	4681      	mov	r9, r0
 8007b64:	8b20      	ldrh	r0, [r4, #24]
 8007b66:	82a8      	strh	r0, [r5, #20]
 8007b68:	7839      	ldrb	r1, [r7, #0]
 8007b6a:	290a      	cmp	r1, #10
 8007b6c:	bf04      	itt	eq
 8007b6e:	f108 00c8 	addeq.w	r0, r8, #200	; 0xc8
 8007b72:	f7fd ff3c 	bleq	80059ee <os_timer_stop_free>
 8007b76:	7878      	ldrb	r0, [r7, #1]
 8007b78:	2800      	cmp	r0, #0
 8007b7a:	bf1c      	itt	ne
 8007b7c:	280a      	cmpne	r0, #10
 8007b7e:	2801      	cmpne	r0, #1
 8007b80:	d101      	bne.n	8007b86 <??llcp_update_conn_param_received_0>
 8007b82:	2001      	movs	r0, #1
 8007b84:	e000      	b.n	8007b88 <??llcp_update_conn_param_received_1>

08007b86 <??llcp_update_conn_param_received_0>:
 8007b86:	2000      	movs	r0, #0

08007b88 <??llcp_update_conn_param_received_1>:
 8007b88:	f7f8 fb22 	bl	80001d0 <bsp_assert>
 8007b8c:	8831      	ldrh	r1, [r6, #0]
 8007b8e:	8b20      	ldrh	r0, [r4, #24]
 8007b90:	f7fe fed3 	bl	800693a <llcp_check_instant>
 8007b94:	2800      	cmp	r0, #0
 8007b96:	bf04      	itt	eq
 8007b98:	78b8      	ldrbeq	r0, [r7, #2]
 8007b9a:	2801      	cmpeq	r0, #1
 8007b9c:	d135      	bne.n	8007c0a <??llcp_update_conn_param_received_2>
 8007b9e:	f8c8 8058 	str.w	r8, [r8, #88]	; 0x58
 8007ba2:	2002      	movs	r0, #2
 8007ba4:	7028      	strb	r0, [r5, #0]
 8007ba6:	7839      	ldrb	r1, [r7, #0]
 8007ba8:	290a      	cmp	r1, #10
 8007baa:	bf07      	ittee	eq
 8007bac:	2001      	moveq	r0, #1
 8007bae:	7038      	strbeq	r0, [r7, #0]
 8007bb0:	2101      	movne	r1, #1
 8007bb2:	7079      	strbne	r1, [r7, #1]
 8007bb4:	222c      	movs	r2, #44	; 0x2c
 8007bb6:	4621      	mov	r1, r4
 8007bb8:	f108 0074 	add.w	r0, r8, #116	; 0x74
 8007bbc:	f006 ffc4 	bl	800eb48 <ble_memcpy>
 8007bc0:	2100      	movs	r1, #0
 8007bc2:	7179      	strb	r1, [r7, #5]
 8007bc4:	6f28      	ldr	r0, [r5, #112]	; 0x70
 8007bc6:	2800      	cmp	r0, #0
 8007bc8:	bf0c      	ite	eq
 8007bca:	2001      	moveq	r0, #1
 8007bcc:	2000      	movne	r0, #0
 8007bce:	f7f8 faff 	bl	80001d0 <bsp_assert>
 8007bd2:	f108 0258 	add.w	r2, r8, #88	; 0x58
 8007bd6:	2100      	movs	r1, #0
 8007bd8:	f8df 0988 	ldr.w	r0, [pc, #2440]	; 8008564 <??DataTable37_1>
 8007bdc:	f7fd fdb9 	bl	8005752 <os_timer_create>
 8007be0:	2800      	cmp	r0, #0
 8007be2:	bf14      	ite	ne
 8007be4:	2101      	movne	r1, #1
 8007be6:	2100      	moveq	r1, #0
 8007be8:	6728      	str	r0, [r5, #112]	; 0x70
 8007bea:	4608      	mov	r0, r1
 8007bec:	f7f8 faf0 	bl	80001d0 <bsp_assert>
 8007bf0:	2000      	movs	r0, #0
 8007bf2:	8070      	strh	r0, [r6, #2]
 8007bf4:	6f28      	ldr	r0, [r5, #112]	; 0x70
 8007bf6:	ea4f 1149 	mov.w	r1, r9, lsl #5
 8007bfa:	f7fd fe4d 	bl	8005898 <os_timer_start>
 8007bfe:	8e69      	ldrh	r1, [r5, #50]	; 0x32
 8007c00:	4640      	mov	r0, r8
 8007c02:	f000 fbed 	bl	80083e0 <llcp_update_eff_max_tx_time>
 8007c06:	4605      	mov	r5, r0
 8007c08:	e021      	b.n	8007c4e <??llcp_update_conn_param_received_3>

08007c0a <??llcp_update_conn_param_received_2>:
 8007c0a:	78b8      	ldrb	r0, [r7, #2]
 8007c0c:	2801      	cmp	r0, #1
 8007c0e:	d105      	bne.n	8007c1c <??llcp_update_conn_param_received_4>
 8007c10:	2128      	movs	r1, #40	; 0x28
 8007c12:	4640      	mov	r0, r8
 8007c14:	2528      	movs	r5, #40	; 0x28
 8007c16:	f00e f88f 	bl	8015d38 <conn_mngr_disconnect>
 8007c1a:	e018      	b.n	8007c4e <??llcp_update_conn_param_received_3>

08007c1c <??llcp_update_conn_param_received_4>:
 8007c1c:	2000      	movs	r0, #0
 8007c1e:	7038      	strb	r0, [r7, #0]
 8007c20:	7020      	strb	r0, [r4, #0]
 8007c22:	f8df 1944 	ldr.w	r1, [pc, #2372]	; 8008568 <??DataTable37_2>
 8007c26:	f00b fc6d 	bl	8013504 <allocate_data_packet>
 8007c2a:	ea5f 0800 	movs.w	r8, r0
 8007c2e:	d00d      	beq.n	8007c4c <??llcp_update_conn_param_received_5>
 8007c30:	4642      	mov	r2, r8
 8007c32:	4621      	mov	r1, r4
 8007c34:	2007      	movs	r0, #7
 8007c36:	f00b f8d5 	bl	8012de4 <pdu_trnsprt_hndlr_form_cntrl_pdu>
 8007c3a:	6e68      	ldr	r0, [r5, #100]	; 0x64
 8007c3c:	4641      	mov	r1, r8
 8007c3e:	f7fa f866 	bl	8001d0e <evnt_schdlr_add_ctrl_pkt>
 8007c42:	1e40      	subs	r0, r0, #1
 8007c44:	4180      	sbcs	r0, r0
 8007c46:	0fc0      	lsrs	r0, r0, #31
 8007c48:	f7f8 fac2 	bl	80001d0 <bsp_assert>

08007c4c <??llcp_update_conn_param_received_5>:
 8007c4c:	2511      	movs	r5, #17

08007c4e <??llcp_update_conn_param_received_3>:
 8007c4e:	4628      	mov	r0, r5
 8007c50:	e8bd 83f2 	ldmia.w	sp!, {r1, r4, r5, r6, r7, r8, r9, pc}

08007c54 <??DataTable25>:
 8007c54:	06f0 2000                                   ... 

08007c58 <llcp_update_param_req>:
 8007c58:	e92d 47f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, lr}
 8007c5c:	468a      	mov	sl, r1
 8007c5e:	4601      	mov	r1, r0
 8007c60:	b08b      	sub	sp, #44	; 0x2c
 8007c62:	2908      	cmp	r1, #8
 8007c64:	bfba      	itte	lt
 8007c66:	f8df 26dc 	ldrlt.w	r2, [pc, #1756]	; 8008344 <??DataTable33>
 8007c6a:	f852 8021 	ldrlt.w	r8, [r2, r1, lsl #2]
 8007c6e:	f04f 0800 	movge.w	r8, #0
 8007c72:	f04f 093a 	mov.w	r9, #58	; 0x3a
 8007c76:	f1b8 0f00 	cmp.w	r8, #0
 8007c7a:	bf08      	it	eq
 8007c7c:	f04f 0902 	moveq.w	r9, #2
 8007c80:	f000 809e 	beq.w	8007dc0 <??llcp_update_param_req_0>
 8007c84:	f108 0546 	add.w	r5, r8, #70	; 0x46
 8007c88:	7829      	ldrb	r1, [r5, #0]
 8007c8a:	f208 1723 	addw	r7, r8, #291	; 0x123
 8007c8e:	078a      	lsls	r2, r1, #30
 8007c90:	d40a      	bmi.n	8007ca8 <??llcp_update_param_req_1>
 8007c92:	78b9      	ldrb	r1, [r7, #2]
 8007c94:	2901      	cmp	r1, #1
 8007c96:	bf08      	it	eq
 8007c98:	f04f 091a 	moveq.w	r9, #26
 8007c9c:	f000 8090 	beq.w	8007dc0 <??llcp_update_param_req_0>
 8007ca0:	4651      	mov	r1, sl
 8007ca2:	f7ff fe7d 	bl	80079a0 <llcp_update_conn_param>
 8007ca6:	e08a      	b.n	8007dbe <??llcp_update_param_req_2>

08007ca8 <??llcp_update_param_req_1>:
 8007ca8:	7838      	ldrb	r0, [r7, #0]
 8007caa:	2800      	cmp	r0, #0
 8007cac:	bf02      	ittt	eq
 8007cae:	f108 049c 	addeq.w	r4, r8, #156	; 0x9c
 8007cb2:	6b20      	ldreq	r0, [r4, #48]	; 0x30
 8007cb4:	2800      	cmpeq	r0, #0
 8007cb6:	f040 8083 	bne.w	8007dc0 <??llcp_update_param_req_0>
 8007cba:	2210      	movs	r2, #16
 8007cbc:	4651      	mov	r1, sl
 8007cbe:	f108 007c 	add.w	r0, r8, #124	; 0x7c
 8007cc2:	f006 ff41 	bl	800eb48 <ble_memcpy>
 8007cc6:	8fe0      	ldrh	r0, [r4, #62]	; 0x3e
 8007cc8:	f108 0674 	add.w	r6, r8, #116	; 0x74
 8007ccc:	300a      	adds	r0, #10
 8007cce:	8330      	strh	r0, [r6, #24]
 8007cd0:	f89a 000e 	ldrb.w	r0, [sl, #14]
 8007cd4:	280b      	cmp	r0, #11
 8007cd6:	d111      	bne.n	8007cfc <??llcp_update_param_req_3>
 8007cd8:	2000      	movs	r0, #0
 8007cda:	7730      	strb	r0, [r6, #28]
 8007cdc:	f64f 70ff 	movw	r0, #65535	; 0xffff
 8007ce0:	82b0      	strh	r0, [r6, #20]
 8007ce2:	83f0      	strh	r0, [r6, #30]
 8007ce4:	8430      	strh	r0, [r6, #32]
 8007ce6:	8470      	strh	r0, [r6, #34]	; 0x22
 8007ce8:	84b0      	strh	r0, [r6, #36]	; 0x24
 8007cea:	84f0      	strh	r0, [r6, #38]	; 0x26
 8007cec:	2000      	movs	r0, #0
 8007cee:	7020      	strb	r0, [r4, #0]
 8007cf0:	8971      	ldrh	r1, [r6, #10]
 8007cf2:	8371      	strh	r1, [r6, #26]
 8007cf4:	6a60      	ldr	r0, [r4, #36]	; 0x24
 8007cf6:	f7fb f93e 	bl	8002f76 <evnt_schdlr_conn_parm_req>
 8007cfa:	e006      	b.n	8007d0a <??llcp_update_param_req_4>

08007cfc <??llcp_update_param_req_3>:
 8007cfc:	2811      	cmp	r0, #17
 8007cfe:	d104      	bne.n	8007d0a <??llcp_update_param_req_4>
 8007d00:	6831      	ldr	r1, [r6, #0]
 8007d02:	6a60      	ldr	r0, [r4, #36]	; 0x24
 8007d04:	b289      	uxth	r1, r1
 8007d06:	f7fb f93a 	bl	8002f7e <evnt_schdlr_calc_win_offset>

08007d0a <??llcp_update_param_req_4>:
 8007d0a:	2001      	movs	r0, #1
 8007d0c:	75a8      	strb	r0, [r5, #22]
 8007d0e:	210a      	movs	r1, #10
 8007d10:	4640      	mov	r0, r8
 8007d12:	f7fe f886 	bl	8005e22 <llcp_cntrl_init>
 8007d16:	222c      	movs	r2, #44	; 0x2c
 8007d18:	4631      	mov	r1, r6
 8007d1a:	4668      	mov	r0, sp
 8007d1c:	f006 ff14 	bl	800eb48 <ble_memcpy>
 8007d20:	f8df a7c0 	ldr.w	sl, [pc, #1984]	; 80084e4 <??DataTable36>
 8007d24:	4651      	mov	r1, sl
 8007d26:	2000      	movs	r0, #0
 8007d28:	f00b fbec 	bl	8013504 <allocate_data_packet>
 8007d2c:	0005      	movs	r5, r0
 8007d2e:	f04f 0900 	mov.w	r9, #0
 8007d32:	d012      	beq.n	8007d5a <??llcp_update_param_req_5>
 8007d34:	462a      	mov	r2, r5
 8007d36:	4669      	mov	r1, sp
 8007d38:	200f      	movs	r0, #15
 8007d3a:	f00b f853 	bl	8012de4 <pdu_trnsprt_hndlr_form_cntrl_pdu>
 8007d3e:	7ba8      	ldrb	r0, [r5, #14]
 8007d40:	4629      	mov	r1, r5
 8007d42:	f040 0002 	orr.w	r0, r0, #2
 8007d46:	73a8      	strb	r0, [r5, #14]
 8007d48:	6a60      	ldr	r0, [r4, #36]	; 0x24
 8007d4a:	f7f9 ff77 	bl	8001c3c <evnt_schdlr_add_data_pkt>
 8007d4e:	4681      	mov	r9, r0
 8007d50:	1e40      	subs	r0, r0, #1
 8007d52:	4180      	sbcs	r0, r0
 8007d54:	0fc0      	lsrs	r0, r0, #31
 8007d56:	f7f8 fa3b 	bl	80001d0 <bsp_assert>

08007d5a <??llcp_update_param_req_5>:
 8007d5a:	78b8      	ldrb	r0, [r7, #2]
 8007d5c:	bb48      	cbnz	r0, 8007db2 <??llcp_update_param_req_6>
 8007d5e:	7878      	ldrb	r0, [r7, #1]
 8007d60:	280a      	cmp	r0, #10
 8007d62:	bf18      	it	ne
 8007d64:	2801      	cmpne	r0, #1
 8007d66:	d12b      	bne.n	8007dc0 <??llcp_update_param_req_0>
 8007d68:	210f      	movs	r1, #15
 8007d6a:	f88d 1000 	strb.w	r1, [sp]
 8007d6e:	2223      	movs	r2, #35	; 0x23
 8007d70:	f88d 2001 	strb.w	r2, [sp, #1]
 8007d74:	4651      	mov	r1, sl
 8007d76:	2000      	movs	r0, #0
 8007d78:	f00b fbc4 	bl	8013504 <allocate_data_packet>
 8007d7c:	0005      	movs	r5, r0
 8007d7e:	d013      	beq.n	8007da8 <??llcp_update_param_req_7>
 8007d80:	462a      	mov	r2, r5
 8007d82:	4669      	mov	r1, sp
 8007d84:	2011      	movs	r0, #17
 8007d86:	f00b f82d 	bl	8012de4 <pdu_trnsprt_hndlr_form_cntrl_pdu>
 8007d8a:	6b60      	ldr	r0, [r4, #52]	; 0x34
 8007d8c:	b118      	cbz	r0, 8007d96 <??llcp_update_param_req_8>
 8007d8e:	f108 00d0 	add.w	r0, r8, #208	; 0xd0
 8007d92:	f7fd fe2c 	bl	80059ee <os_timer_stop_free>

08007d96 <??llcp_update_param_req_8>:
 8007d96:	6a60      	ldr	r0, [r4, #36]	; 0x24
 8007d98:	4629      	mov	r1, r5
 8007d9a:	f7f9 ffb8 	bl	8001d0e <evnt_schdlr_add_ctrl_pkt>
 8007d9e:	1e40      	subs	r0, r0, #1
 8007da0:	4180      	sbcs	r0, r0
 8007da2:	0fc0      	lsrs	r0, r0, #31
 8007da4:	f7f8 fa14 	bl	80001d0 <bsp_assert>

08007da8 <??llcp_update_param_req_7>:
 8007da8:	2000      	movs	r0, #0
 8007daa:	75b0      	strb	r0, [r6, #22]
 8007dac:	7078      	strb	r0, [r7, #1]
 8007dae:	7178      	strb	r0, [r7, #5]
 8007db0:	e006      	b.n	8007dc0 <??llcp_update_param_req_0>

08007db2 <??llcp_update_param_req_6>:
 8007db2:	2801      	cmp	r0, #1
 8007db4:	d104      	bne.n	8007dc0 <??llcp_update_param_req_0>
 8007db6:	8931      	ldrh	r1, [r6, #8]
 8007db8:	4640      	mov	r0, r8
 8007dba:	f000 fb11 	bl	80083e0 <llcp_update_eff_max_tx_time>

08007dbe <??llcp_update_param_req_2>:
 8007dbe:	4681      	mov	r9, r0

08007dc0 <??llcp_update_param_req_0>:
 8007dc0:	4648      	mov	r0, r9

08007dc2 <??Subroutine0_0>:
 8007dc2:	b00c      	add	sp, #48	; 0x30
 8007dc4:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}

08007dc8 <llcp_update_param_req_received>:
 8007dc8:	b57c      	push	{r2, r3, r4, r5, r6, lr}
 8007dca:	4605      	mov	r5, r0
 8007dcc:	460e      	mov	r6, r1
 8007dce:	222c      	movs	r2, #44	; 0x2c
 8007dd0:	f105 0074 	add.w	r0, r5, #116	; 0x74
 8007dd4:	f006 feb8 	bl	800eb48 <ble_memcpy>
 8007dd8:	f105 015c 	add.w	r1, r5, #92	; 0x5c
 8007ddc:	8ae8      	ldrh	r0, [r5, #22]
 8007dde:	8c4a      	ldrh	r2, [r1, #34]	; 0x22
 8007de0:	2400      	movs	r4, #0
 8007de2:	4290      	cmp	r0, r2
 8007de4:	bf01      	itttt	eq
 8007de6:	f105 02dc 	addeq.w	r2, r5, #220	; 0xdc
 8007dea:	8810      	ldrheq	r0, [r2, #0]
 8007dec:	8c8b      	ldrheq	r3, [r1, #36]	; 0x24
 8007dee:	4298      	cmpeq	r0, r3
 8007df0:	d107      	bne.n	8007e02 <??llcp_update_param_req_received_0>
 8007df2:	8b68      	ldrh	r0, [r5, #26]
 8007df4:	8ccb      	ldrh	r3, [r1, #38]	; 0x26
 8007df6:	4298      	cmp	r0, r3
 8007df8:	bf04      	itt	eq
 8007dfa:	f895 009c 	ldrbeq.w	r0, [r5, #156]	; 0x9c
 8007dfe:	2800      	cmpeq	r0, #0
 8007e00:	d046      	beq.n	8007e90 <??llcp_update_param_req_received_1>

08007e02 <??llcp_update_param_req_received_0>:
 8007e02:	2207      	movs	r2, #7
 8007e04:	700a      	strb	r2, [r1, #0]
 8007e06:	210a      	movs	r1, #10
 8007e08:	4628      	mov	r0, r5
 8007e0a:	f7fe f80a 	bl	8005e22 <llcp_cntrl_init>
 8007e0e:	8930      	ldrh	r0, [r6, #8]
 8007e10:	f640 437b 	movw	r3, #3195	; 0xc7b
 8007e14:	8972      	ldrh	r2, [r6, #10]
 8007e16:	1f81      	subs	r1, r0, #6
 8007e18:	4299      	cmp	r1, r3
 8007e1a:	4189      	sbcs	r1, r1
 8007e1c:	1f94      	subs	r4, r2, #6
 8007e1e:	429c      	cmp	r4, r3
 8007e20:	419b      	sbcs	r3, r3
 8007e22:	0fdb      	lsrs	r3, r3, #31
 8007e24:	ea03 71d1 	and.w	r1, r3, r1, lsr #31
 8007e28:	89b3      	ldrh	r3, [r6, #12]
 8007e2a:	f5b3 7ffa 	cmp.w	r3, #500	; 0x1f4
 8007e2e:	bfb4      	ite	lt
 8007e30:	2301      	movlt	r3, #1
 8007e32:	2300      	movge	r3, #0
 8007e34:	4019      	ands	r1, r3
 8007e36:	89f3      	ldrh	r3, [r6, #14]
 8007e38:	f640 4477 	movw	r4, #3191	; 0xc77
 8007e3c:	3b0a      	subs	r3, #10
 8007e3e:	42a3      	cmp	r3, r4
 8007e40:	419b      	sbcs	r3, r3
 8007e42:	ea01 71d3 	and.w	r1, r1, r3, lsr #31
 8007e46:	4282      	cmp	r2, r0
 8007e48:	4180      	sbcs	r0, r0
 8007e4a:	43c0      	mvns	r0, r0
 8007e4c:	ea11 7fd0 	tst.w	r1, r0, lsr #31
 8007e50:	bf08      	it	eq
 8007e52:	241e      	moveq	r4, #30
 8007e54:	d015      	beq.n	8007e82 <??llcp_update_param_req_received_2>
 8007e56:	4c77      	ldr	r4, [pc, #476]	; (8008034 <??DataTable30>)
 8007e58:	6821      	ldr	r1, [r4, #0]
 8007e5a:	6ac8      	ldr	r0, [r1, #44]	; 0x2c
 8007e5c:	b180      	cbz	r0, 8007e80 <??llcp_update_param_req_received_3>
 8007e5e:	210a      	movs	r1, #10
 8007e60:	f885 1124 	strb.w	r1, [r5, #292]	; 0x124
 8007e64:	89f0      	ldrh	r0, [r6, #14]
 8007e66:	6824      	ldr	r4, [r4, #0]
 8007e68:	9000      	str	r0, [sp, #0]
 8007e6a:	89b3      	ldrh	r3, [r6, #12]
 8007e6c:	8972      	ldrh	r2, [r6, #10]
 8007e6e:	8931      	ldrh	r1, [r6, #8]
 8007e70:	f105 00dc 	add.w	r0, r5, #220	; 0xdc
 8007e74:	8840      	ldrh	r0, [r0, #2]
 8007e76:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 8007e78:	47b0      	blx	r6
 8007e7a:	0004      	movs	r4, r0
 8007e7c:	d101      	bne.n	8007e82 <??llcp_update_param_req_received_2>
 8007e7e:	e00f      	b.n	8007ea0 <??llcp_update_param_req_received_4>

08007e80 <??llcp_update_param_req_received_3>:
 8007e80:	241a      	movs	r4, #26

08007e82 <??llcp_update_param_req_received_2>:
 8007e82:	f105 00dc 	add.w	r0, r5, #220	; 0xdc
 8007e86:	8840      	ldrh	r0, [r0, #2]
 8007e88:	b2e1      	uxtb	r1, r4
 8007e8a:	f000 f861 	bl	8007f50 <llcp_pram_ngtv_rply>
 8007e8e:	e007      	b.n	8007ea0 <??llcp_update_param_req_received_4>

08007e90 <??llcp_update_param_req_received_1>:
 8007e90:	200a      	movs	r0, #10
 8007e92:	f885 0124 	strb.w	r0, [r5, #292]	; 0x124
 8007e96:	8850      	ldrh	r0, [r2, #2]
 8007e98:	f105 017c 	add.w	r1, r5, #124	; 0x7c
 8007e9c:	f000 f802 	bl	8007ea4 <llcp_pram_pstv_rply>

08007ea0 <??llcp_update_param_req_received_4>:
 8007ea0:	4620      	mov	r0, r4
 8007ea2:	bd76      	pop	{r1, r2, r4, r5, r6, pc}

08007ea4 <llcp_pram_pstv_rply>:
 8007ea4:	e92d 41f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, lr}
 8007ea8:	b08b      	sub	sp, #44	; 0x2c
 8007eaa:	460d      	mov	r5, r1
 8007eac:	2808      	cmp	r0, #8
 8007eae:	bfba      	itte	lt
 8007eb0:	f8df 1490 	ldrlt.w	r1, [pc, #1168]	; 8008344 <??DataTable33>
 8007eb4:	f851 8020 	ldrlt.w	r8, [r1, r0, lsl #2]
 8007eb8:	f04f 0800 	movge.w	r8, #0
 8007ebc:	2700      	movs	r7, #0
 8007ebe:	f1b8 0f00 	cmp.w	r8, #0
 8007ec2:	bf08      	it	eq
 8007ec4:	2702      	moveq	r7, #2
 8007ec6:	d040      	beq.n	8007f4a <??llcp_pram_pstv_rply_0>
 8007ec8:	f108 049c 	add.w	r4, r8, #156	; 0x9c
 8007ecc:	6b61      	ldr	r1, [r4, #52]	; 0x34
 8007ece:	b119      	cbz	r1, 8007ed8 <??llcp_pram_pstv_rply_1>
 8007ed0:	f108 00d0 	add.w	r0, r8, #208	; 0xd0
 8007ed4:	f7fd fd8b 	bl	80059ee <os_timer_stop_free>

08007ed8 <??llcp_pram_pstv_rply_1>:
 8007ed8:	f898 0125 	ldrb.w	r0, [r8, #293]	; 0x125
 8007edc:	f108 067c 	add.w	r6, r8, #124	; 0x7c
 8007ee0:	b948      	cbnz	r0, 8007ef6 <??llcp_pram_pstv_rply_2>
 8007ee2:	210b      	movs	r1, #11
 8007ee4:	73a9      	strb	r1, [r5, #14]
 8007ee6:	89b0      	ldrh	r0, [r6, #12]
 8007ee8:	4629      	mov	r1, r5
 8007eea:	81a8      	strh	r0, [r5, #12]
 8007eec:	f8b8 00de 	ldrh.w	r0, [r8, #222]	; 0xde
 8007ef0:	f7ff fd56 	bl	80079a0 <llcp_update_conn_param>
 8007ef4:	e029      	b.n	8007f4a <??llcp_pram_pstv_rply_0>

08007ef6 <??llcp_pram_pstv_rply_2>:
 8007ef6:	7537      	strb	r7, [r6, #20]
 8007ef8:	7027      	strb	r7, [r4, #0]
 8007efa:	8868      	ldrh	r0, [r5, #2]
 8007efc:	222c      	movs	r2, #44	; 0x2c
 8007efe:	8070      	strh	r0, [r6, #2]
 8007f00:	8829      	ldrh	r1, [r5, #0]
 8007f02:	4668      	mov	r0, sp
 8007f04:	8031      	strh	r1, [r6, #0]
 8007f06:	f108 0174 	add.w	r1, r8, #116	; 0x74
 8007f0a:	f006 fe1d 	bl	800eb48 <ble_memcpy>
 8007f0e:	f8df 1658 	ldr.w	r1, [pc, #1624]	; 8008568 <??DataTable37_2>
 8007f12:	2000      	movs	r0, #0
 8007f14:	f00b faf6 	bl	8013504 <allocate_data_packet>
 8007f18:	0005      	movs	r5, r0
 8007f1a:	d011      	beq.n	8007f40 <??llcp_pram_pstv_rply_3>
 8007f1c:	462a      	mov	r2, r5
 8007f1e:	4669      	mov	r1, sp
 8007f20:	2010      	movs	r0, #16
 8007f22:	f00a ff5f 	bl	8012de4 <pdu_trnsprt_hndlr_form_cntrl_pdu>
 8007f26:	7ba8      	ldrb	r0, [r5, #14]
 8007f28:	4629      	mov	r1, r5
 8007f2a:	f040 0002 	orr.w	r0, r0, #2
 8007f2e:	73a8      	strb	r0, [r5, #14]
 8007f30:	6a60      	ldr	r0, [r4, #36]	; 0x24
 8007f32:	f7f9 fe83 	bl	8001c3c <evnt_schdlr_add_data_pkt>
 8007f36:	1e40      	subs	r0, r0, #1
 8007f38:	4180      	sbcs	r0, r0
 8007f3a:	0fc0      	lsrs	r0, r0, #31
 8007f3c:	f7f8 f948 	bl	80001d0 <bsp_assert>

08007f40 <??llcp_pram_pstv_rply_3>:
 8007f40:	8831      	ldrh	r1, [r6, #0]
 8007f42:	4640      	mov	r0, r8
 8007f44:	f000 fa4c 	bl	80083e0 <llcp_update_eff_max_tx_time>
 8007f48:	4607      	mov	r7, r0

08007f4a <??llcp_pram_pstv_rply_0>:
 8007f4a:	4638      	mov	r0, r7
 8007f4c:	f7fe bf5f 	b.w	8006e0e <?Subroutine3>

08007f50 <llcp_pram_ngtv_rply>:
 8007f50:	b5f0      	push	{r4, r5, r6, r7, lr}
 8007f52:	b08b      	sub	sp, #44	; 0x2c
 8007f54:	2808      	cmp	r0, #8
 8007f56:	bfba      	itte	lt
 8007f58:	f8df 23e8 	ldrlt.w	r2, [pc, #1000]	; 8008344 <??DataTable33>
 8007f5c:	f852 4020 	ldrlt.w	r4, [r2, r0, lsl #2]
 8007f60:	2400      	movge	r4, #0
 8007f62:	f88d 1001 	strb.w	r1, [sp, #1]
 8007f66:	210f      	movs	r1, #15
 8007f68:	f88d 1000 	strb.w	r1, [sp]
 8007f6c:	2600      	movs	r6, #0
 8007f6e:	b90c      	cbnz	r4, 8007f74 <??llcp_pram_ngtv_rply_0>
 8007f70:	2602      	movs	r6, #2
 8007f72:	e028      	b.n	8007fc6 <??llcp_pram_ngtv_rply_1>

08007f74 <??llcp_pram_ngtv_rply_0>:
 8007f74:	f8df 15f0 	ldr.w	r1, [pc, #1520]	; 8008568 <??DataTable37_2>
 8007f78:	2000      	movs	r0, #0
 8007f7a:	f00b fac3 	bl	8013504 <allocate_data_packet>
 8007f7e:	0005      	movs	r5, r0
 8007f80:	f104 07c0 	add.w	r7, r4, #192	; 0xc0
 8007f84:	d013      	beq.n	8007fae <??llcp_pram_ngtv_rply_2>
 8007f86:	462a      	mov	r2, r5
 8007f88:	4669      	mov	r1, sp
 8007f8a:	2011      	movs	r0, #17
 8007f8c:	f00a ff2a 	bl	8012de4 <pdu_trnsprt_hndlr_form_cntrl_pdu>
 8007f90:	6938      	ldr	r0, [r7, #16]
 8007f92:	b118      	cbz	r0, 8007f9c <??llcp_pram_ngtv_rply_3>
 8007f94:	f104 00d0 	add.w	r0, r4, #208	; 0xd0
 8007f98:	f7fd fd29 	bl	80059ee <os_timer_stop_free>

08007f9c <??llcp_pram_ngtv_rply_3>:
 8007f9c:	6838      	ldr	r0, [r7, #0]
 8007f9e:	4629      	mov	r1, r5
 8007fa0:	f7f9 feb5 	bl	8001d0e <evnt_schdlr_add_ctrl_pkt>
 8007fa4:	1e40      	subs	r0, r0, #1
 8007fa6:	4180      	sbcs	r0, r0
 8007fa8:	0fc0      	lsrs	r0, r0, #31
 8007faa:	f7f8 f911 	bl	80001d0 <bsp_assert>

08007fae <??llcp_pram_ngtv_rply_2>:
 8007fae:	6938      	ldr	r0, [r7, #16]
 8007fb0:	b118      	cbz	r0, 8007fba <??llcp_pram_ngtv_rply_4>
 8007fb2:	f104 00d0 	add.w	r0, r4, #208	; 0xd0
 8007fb6:	f7fd fd1a 	bl	80059ee <os_timer_stop_free>

08007fba <??llcp_pram_ngtv_rply_4>:
 8007fba:	f884 608a 	strb.w	r6, [r4, #138]	; 0x8a
 8007fbe:	f504 7092 	add.w	r0, r4, #292	; 0x124
 8007fc2:	7006      	strb	r6, [r0, #0]
 8007fc4:	7106      	strb	r6, [r0, #4]

08007fc6 <??llcp_pram_ngtv_rply_1>:
 8007fc6:	4630      	mov	r0, r6
 8007fc8:	b00b      	add	sp, #44	; 0x2c
 8007fca:	bdf0      	pop	{r4, r5, r6, r7, pc}

08007fcc <llcp_update_chnl_map_per_connection>:
 8007fcc:	b570      	push	{r4, r5, r6, lr}
 8007fce:	4604      	mov	r4, r0
 8007fd0:	f204 1623 	addw	r6, r4, #291	; 0x123
 8007fd4:	78b3      	ldrb	r3, [r6, #2]
 8007fd6:	223a      	movs	r2, #58	; 0x3a
 8007fd8:	bb43      	cbnz	r3, 800802c <??llcp_update_chnl_map_per_connection_0>
 8007fda:	7830      	ldrb	r0, [r6, #0]
 8007fdc:	bb38      	cbnz	r0, 800802e <??llcp_update_chnl_map_per_connection_1>
 8007fde:	65a4      	str	r4, [r4, #88]	; 0x58
 8007fe0:	f104 055c 	add.w	r5, r4, #92	; 0x5c
 8007fe4:	2003      	movs	r0, #3
 8007fe6:	7028      	strb	r0, [r5, #0]
 8007fe8:	2302      	movs	r3, #2
 8007fea:	7033      	strb	r3, [r6, #0]
 8007fec:	77eb      	strb	r3, [r5, #31]
 8007fee:	2205      	movs	r2, #5
 8007ff0:	f104 0076 	add.w	r0, r4, #118	; 0x76
 8007ff4:	f006 fda8 	bl	800eb48 <ble_memcpy>
 8007ff8:	2128      	movs	r1, #40	; 0x28
 8007ffa:	7171      	strb	r1, [r6, #5]
 8007ffc:	6f28      	ldr	r0, [r5, #112]	; 0x70
 8007ffe:	2800      	cmp	r0, #0
 8008000:	bf0c      	ite	eq
 8008002:	2001      	moveq	r0, #1
 8008004:	2000      	movne	r0, #0
 8008006:	f7f8 f8e3 	bl	80001d0 <bsp_assert>
 800800a:	f104 0258 	add.w	r2, r4, #88	; 0x58
 800800e:	2100      	movs	r1, #0
 8008010:	f8df 0550 	ldr.w	r0, [pc, #1360]	; 8008564 <??DataTable37_1>
 8008014:	f7fd fb9d 	bl	8005752 <os_timer_create>
 8008018:	2800      	cmp	r0, #0
 800801a:	bf14      	ite	ne
 800801c:	2101      	movne	r1, #1
 800801e:	2100      	moveq	r1, #0
 8008020:	6728      	str	r0, [r5, #112]	; 0x70
 8008022:	4608      	mov	r0, r1
 8008024:	f7f8 f8d4 	bl	80001d0 <bsp_assert>
 8008028:	2200      	movs	r2, #0
 800802a:	e000      	b.n	800802e <??llcp_update_chnl_map_per_connection_1>

0800802c <??llcp_update_chnl_map_per_connection_0>:
 800802c:	221e      	movs	r2, #30

0800802e <??llcp_update_chnl_map_per_connection_1>:
 800802e:	4610      	mov	r0, r2
 8008030:	bd70      	pop	{r4, r5, r6, pc}
	...

08008034 <??DataTable30>:
 8008034:	06f0 2000                                   ... 

08008038 <llcp_update_chnl_map>:
 8008038:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800803c:	4682      	mov	sl, r0
 800803e:	2128      	movs	r1, #40	; 0x28
 8008040:	f8df b300 	ldr.w	fp, [pc, #768]	; 8008344 <??DataTable33>
 8008044:	f04f 0908 	mov.w	r9, #8
 8008048:	f8df 8518 	ldr.w	r8, [pc, #1304]	; 8008564 <??DataTable37_1>
 800804c:	f8df 751c 	ldr.w	r7, [pc, #1308]	; 800856c <??DataTable37_3>

08008050 <??llcp_update_chnl_map_0>:
 8008050:	f8db 4000 	ldr.w	r4, [fp]
 8008054:	2c00      	cmp	r4, #0
 8008056:	d050      	beq.n	80080fa <??llcp_update_chnl_map_1>
 8008058:	f204 1523 	addw	r5, r4, #291	; 0x123
 800805c:	78a8      	ldrb	r0, [r5, #2]
 800805e:	2800      	cmp	r0, #0
 8008060:	d148      	bne.n	80080f4 <??llcp_update_chnl_map_2>
 8008062:	2205      	movs	r2, #5
 8008064:	4651      	mov	r1, sl
 8008066:	f104 0076 	add.w	r0, r4, #118	; 0x76
 800806a:	f006 fd6d 	bl	800eb48 <ble_memcpy>
 800806e:	f104 065c 	add.w	r6, r4, #92	; 0x5c
 8008072:	7eb0      	ldrb	r0, [r6, #26]
 8008074:	79b9      	ldrb	r1, [r7, #6]
 8008076:	4008      	ands	r0, r1
 8008078:	76b0      	strb	r0, [r6, #26]
 800807a:	7ef0      	ldrb	r0, [r6, #27]
 800807c:	79f9      	ldrb	r1, [r7, #7]
 800807e:	4008      	ands	r0, r1
 8008080:	76f0      	strb	r0, [r6, #27]
 8008082:	7f30      	ldrb	r0, [r6, #28]
 8008084:	7a39      	ldrb	r1, [r7, #8]
 8008086:	4008      	ands	r0, r1
 8008088:	7730      	strb	r0, [r6, #28]
 800808a:	7f70      	ldrb	r0, [r6, #29]
 800808c:	7a79      	ldrb	r1, [r7, #9]
 800808e:	4008      	ands	r0, r1
 8008090:	7770      	strb	r0, [r6, #29]
 8008092:	7fb0      	ldrb	r0, [r6, #30]
 8008094:	7ab9      	ldrb	r1, [r7, #10]
 8008096:	4008      	ands	r0, r1
 8008098:	77b0      	strb	r0, [r6, #30]
 800809a:	7828      	ldrb	r0, [r5, #0]
 800809c:	b9d0      	cbnz	r0, 80080d4 <??llcp_update_chnl_map_3>
 800809e:	65a4      	str	r4, [r4, #88]	; 0x58
 80080a0:	2003      	movs	r0, #3
 80080a2:	2102      	movs	r1, #2
 80080a4:	7030      	strb	r0, [r6, #0]
 80080a6:	77f1      	strb	r1, [r6, #31]
 80080a8:	2328      	movs	r3, #40	; 0x28
 80080aa:	7029      	strb	r1, [r5, #0]
 80080ac:	716b      	strb	r3, [r5, #5]
 80080ae:	6f30      	ldr	r0, [r6, #112]	; 0x70
 80080b0:	2800      	cmp	r0, #0
 80080b2:	bf0c      	ite	eq
 80080b4:	2001      	moveq	r0, #1
 80080b6:	2000      	movne	r0, #0
 80080b8:	f7f8 f88a 	bl	80001d0 <bsp_assert>
 80080bc:	f104 0258 	add.w	r2, r4, #88	; 0x58
 80080c0:	2100      	movs	r1, #0
 80080c2:	4640      	mov	r0, r8
 80080c4:	f7fd fb45 	bl	8005752 <os_timer_create>
 80080c8:	6730      	str	r0, [r6, #112]	; 0x70
 80080ca:	b100      	cbz	r0, 80080ce <??llcp_update_chnl_map_4>
 80080cc:	2001      	movs	r0, #1

080080ce <??llcp_update_chnl_map_4>:
 80080ce:	f7f8 f87f 	bl	80001d0 <bsp_assert>
 80080d2:	e007      	b.n	80080e4 <??llcp_update_chnl_map_5>

080080d4 <??llcp_update_chnl_map_3>:
 80080d4:	7e29      	ldrb	r1, [r5, #24]
 80080d6:	2000      	movs	r0, #0
 80080d8:	29ff      	cmp	r1, #255	; 0xff
 80080da:	d105      	bne.n	80080e8 <??llcp_update_chnl_map_6>

080080dc <??llcp_update_chnl_map_7>:
 80080dc:	2202      	movs	r2, #2
 80080de:	4420      	add	r0, r4
 80080e0:	f880 213b 	strb.w	r2, [r0, #315]	; 0x13b

080080e4 <??llcp_update_chnl_map_5>:
 80080e4:	2100      	movs	r1, #0
 80080e6:	e008      	b.n	80080fa <??llcp_update_chnl_map_1>

080080e8 <??llcp_update_chnl_map_6>:
 80080e8:	7e69      	ldrb	r1, [r5, #25]
 80080ea:	2001      	movs	r0, #1
 80080ec:	29ff      	cmp	r1, #255	; 0xff
 80080ee:	d0f5      	beq.n	80080dc <??llcp_update_chnl_map_7>
 80080f0:	213a      	movs	r1, #58	; 0x3a
 80080f2:	e002      	b.n	80080fa <??llcp_update_chnl_map_1>

080080f4 <??llcp_update_chnl_map_2>:
 80080f4:	2801      	cmp	r0, #1
 80080f6:	bf08      	it	eq
 80080f8:	2111      	moveq	r1, #17

080080fa <??llcp_update_chnl_map_1>:
 80080fa:	f10b 0b04 	add.w	fp, fp, #4
 80080fe:	f1b9 0901 	subs.w	r9, r9, #1
 8008102:	d1a5      	bne.n	8008050 <??llcp_update_chnl_map_0>
 8008104:	4608      	mov	r0, r1
 8008106:	e8bd 8ff2 	ldmia.w	sp!, {r1, r4, r5, r6, r7, r8, r9, sl, fp, pc}

0800810a <llcp_update_chnl_map_received>:
 800810a:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800810e:	4680      	mov	r8, r0
 8008110:	460e      	mov	r6, r1
 8008112:	f108 09da 	add.w	r9, r8, #218	; 0xda
 8008116:	f8b8 2016 	ldrh.w	r2, [r8, #22]
 800811a:	f8b9 1000 	ldrh.w	r1, [r9]
 800811e:	8830      	ldrh	r0, [r6, #0]
 8008120:	f108 055c 	add.w	r5, r8, #92	; 0x5c
 8008124:	f508 7792 	add.w	r7, r8, #292	; 0x124
 8008128:	f7fd fe58 	bl	8005ddc <llcp_get_instant_time>
 800812c:	4682      	mov	sl, r0
 800812e:	8830      	ldrh	r0, [r6, #0]
 8008130:	2400      	movs	r4, #0
 8008132:	82a8      	strh	r0, [r5, #20]
 8008134:	7839      	ldrb	r1, [r7, #0]
 8008136:	1e48      	subs	r0, r1, #1
 8008138:	4180      	sbcs	r0, r0
 800813a:	0fc0      	lsrs	r0, r0, #31
 800813c:	f7f8 f848 	bl	80001d0 <bsp_assert>
 8008140:	f8b9 1000 	ldrh.w	r1, [r9]
 8008144:	8830      	ldrh	r0, [r6, #0]
 8008146:	f7fe fbf8 	bl	800693a <llcp_check_instant>
 800814a:	2800      	cmp	r0, #0
 800814c:	bf04      	itt	eq
 800814e:	7878      	ldrbeq	r0, [r7, #1]
 8008150:	2801      	cmpeq	r0, #1
 8008152:	d139      	bne.n	80081c8 <??llcp_update_chnl_map_received_0>
 8008154:	f8c8 8058 	str.w	r8, [r8, #88]	; 0x58
 8008158:	2003      	movs	r0, #3
 800815a:	7028      	strb	r0, [r5, #0]
 800815c:	2102      	movs	r1, #2
 800815e:	7039      	strb	r1, [r7, #0]
 8008160:	713c      	strb	r4, [r7, #4]
 8008162:	7cf8      	ldrb	r0, [r7, #19]
 8008164:	2801      	cmp	r0, #1
 8008166:	d10b      	bne.n	8008180 <??llcp_update_chnl_map_received_1>
 8008168:	7a39      	ldrb	r1, [r7, #8]
 800816a:	7c7a      	ldrb	r2, [r7, #17]
 800816c:	4211      	tst	r1, r2
 800816e:	d007      	beq.n	8008180 <??llcp_update_chnl_map_received_1>
 8008170:	1cb0      	adds	r0, r6, #2
 8008172:	f00d fd42 	bl	8015bfa <conn_mngr_calc_num_of_used_data_chnls>
 8008176:	7cb9      	ldrb	r1, [r7, #18]
 8008178:	4288      	cmp	r0, r1
 800817a:	bf38      	it	cc
 800817c:	241a      	movcc	r4, #26
 800817e:	d327      	bcc.n	80081d0 <??llcp_update_chnl_map_received_2>

08008180 <??llcp_update_chnl_map_received_1>:
 8008180:	2208      	movs	r2, #8
 8008182:	4631      	mov	r1, r6
 8008184:	f108 0074 	add.w	r0, r8, #116	; 0x74
 8008188:	f006 fcde 	bl	800eb48 <ble_memcpy>
 800818c:	6f28      	ldr	r0, [r5, #112]	; 0x70
 800818e:	2800      	cmp	r0, #0
 8008190:	bf0c      	ite	eq
 8008192:	2001      	moveq	r0, #1
 8008194:	2000      	movne	r0, #0
 8008196:	f7f8 f81b 	bl	80001d0 <bsp_assert>
 800819a:	f108 0258 	add.w	r2, r8, #88	; 0x58
 800819e:	2100      	movs	r1, #0
 80081a0:	f8df 03c0 	ldr.w	r0, [pc, #960]	; 8008564 <??DataTable37_1>
 80081a4:	f7fd fad5 	bl	8005752 <os_timer_create>
 80081a8:	2800      	cmp	r0, #0
 80081aa:	bf14      	ite	ne
 80081ac:	2101      	movne	r1, #1
 80081ae:	2100      	moveq	r1, #0
 80081b0:	6728      	str	r0, [r5, #112]	; 0x70
 80081b2:	4608      	mov	r0, r1
 80081b4:	f7f8 f80c 	bl	80001d0 <bsp_assert>
 80081b8:	f8a9 4002 	strh.w	r4, [r9, #2]
 80081bc:	6f28      	ldr	r0, [r5, #112]	; 0x70
 80081be:	ea4f 114a 	mov.w	r1, sl, lsl #5
 80081c2:	f7fd fb69 	bl	8005898 <os_timer_start>
 80081c6:	e020      	b.n	800820a <??llcp_update_chnl_map_received_3>

080081c8 <??llcp_update_chnl_map_received_0>:
 80081c8:	7878      	ldrb	r0, [r7, #1]
 80081ca:	2801      	cmp	r0, #1
 80081cc:	d105      	bne.n	80081da <??llcp_update_chnl_map_received_4>
 80081ce:	2428      	movs	r4, #40	; 0x28

080081d0 <??llcp_update_chnl_map_received_2>:
 80081d0:	4621      	mov	r1, r4
 80081d2:	4640      	mov	r0, r8
 80081d4:	f00d fdb0 	bl	8015d38 <conn_mngr_disconnect>
 80081d8:	e017      	b.n	800820a <??llcp_update_chnl_map_received_3>

080081da <??llcp_update_chnl_map_received_4>:
 80081da:	2001      	movs	r0, #1
 80081dc:	7030      	strb	r0, [r6, #0]
 80081de:	f8df 1388 	ldr.w	r1, [pc, #904]	; 8008568 <??DataTable37_2>
 80081e2:	2000      	movs	r0, #0
 80081e4:	f00b f98e 	bl	8013504 <allocate_data_packet>
 80081e8:	0004      	movs	r4, r0
 80081ea:	d00d      	beq.n	8008208 <??llcp_update_chnl_map_received_5>
 80081ec:	4622      	mov	r2, r4
 80081ee:	4631      	mov	r1, r6
 80081f0:	2007      	movs	r0, #7
 80081f2:	f00a fdf7 	bl	8012de4 <pdu_trnsprt_hndlr_form_cntrl_pdu>
 80081f6:	6e68      	ldr	r0, [r5, #100]	; 0x64
 80081f8:	4621      	mov	r1, r4
 80081fa:	f7f9 fd88 	bl	8001d0e <evnt_schdlr_add_ctrl_pkt>
 80081fe:	1e40      	subs	r0, r0, #1
 8008200:	4180      	sbcs	r0, r0
 8008202:	0fc0      	lsrs	r0, r0, #31
 8008204:	f7f7 ffe4 	bl	80001d0 <bsp_assert>

08008208 <??llcp_update_chnl_map_received_5>:
 8008208:	2411      	movs	r4, #17

0800820a <??llcp_update_chnl_map_received_3>:
 800820a:	4620      	mov	r0, r4
 800820c:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}

08008210 <llcp_process_pkt>:
 8008210:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8008214:	ea5f 0900 	movs.w	r9, r0
 8008218:	f109 05c0 	add.w	r5, r9, #192	; 0xc0
 800821c:	4616      	mov	r6, r2
 800821e:	469a      	mov	sl, r3
 8008220:	f8b5 801e 	ldrh.w	r8, [r5, #30]
 8008224:	bf18      	it	ne
 8008226:	2001      	movne	r0, #1
 8008228:	460c      	mov	r4, r1
 800822a:	f7f7 ffd1 	bl	80001d0 <bsp_assert>
 800822e:	b934      	cbnz	r4, 800823e <??llcp_process_pkt_0>
 8008230:	b13e      	cbz	r6, 8008242 <??llcp_process_pkt_1>
 8008232:	7830      	ldrb	r0, [r6, #0]
 8008234:	1e40      	subs	r0, r0, #1
 8008236:	4180      	sbcs	r0, r0
 8008238:	43c0      	mvns	r0, r0
 800823a:	0fc0      	lsrs	r0, r0, #31
 800823c:	e002      	b.n	8008244 <??llcp_process_pkt_2>

0800823e <??llcp_process_pkt_0>:
 800823e:	2001      	movs	r0, #1
 8008240:	e000      	b.n	8008244 <??llcp_process_pkt_2>

08008242 <??llcp_process_pkt_1>:
 8008242:	2000      	movs	r0, #0

08008244 <??llcp_process_pkt_2>:
 8008244:	f7f7 ffc4 	bl	80001d0 <bsp_assert>
 8008248:	7830      	ldrb	r0, [r6, #0]
 800824a:	2800      	cmp	r0, #0
 800824c:	d06b      	beq.n	8008326 <??llcp_process_pkt_3>
 800824e:	f509 7182 	add.w	r1, r9, #260	; 0x104
 8008252:	7fc8      	ldrb	r0, [r1, #31]
 8008254:	f509 7792 	add.w	r7, r9, #292	; 0x124
 8008258:	2801      	cmp	r0, #1
 800825a:	bf1c      	itt	ne
 800825c:	783a      	ldrbne	r2, [r7, #0]
 800825e:	2a01      	cmpne	r2, #1
 8008260:	d057      	beq.n	8008312 <??llcp_process_pkt_4>
 8008262:	2802      	cmp	r0, #2
 8008264:	d052      	beq.n	800830c <??llcp_process_pkt_5>
 8008266:	2805      	cmp	r0, #5
 8008268:	d00a      	beq.n	8008280 <??llcp_process_pkt_6>
 800826a:	2a07      	cmp	r2, #7
 800826c:	d00f      	beq.n	800828e <??llcp_process_pkt_7>
 800826e:	2807      	cmp	r0, #7
 8008270:	bf18      	it	ne
 8008272:	280c      	cmpne	r0, #12
 8008274:	d024      	beq.n	80082c0 <??llcp_process_pkt_8>
 8008276:	2a08      	cmp	r2, #8
 8008278:	d024      	beq.n	80082c4 <??llcp_process_pkt_9>
 800827a:	280d      	cmp	r0, #13
 800827c:	d151      	bne.n	8008322 <??llcp_process_pkt_10>
 800827e:	e03a      	b.n	80082f6 <??llcp_process_pkt_11>

08008280 <??llcp_process_pkt_6>:
 8008280:	2016      	movs	r0, #22
 8008282:	7138      	strb	r0, [r7, #4]
 8008284:	2116      	movs	r1, #22
 8008286:	4648      	mov	r0, r9
 8008288:	f00d fd56 	bl	8015d38 <conn_mngr_disconnect>
 800828c:	e049      	b.n	8008322 <??llcp_process_pkt_10>

0800828e <??llcp_process_pkt_7>:
 800828e:	7f88      	ldrb	r0, [r1, #30]
 8008290:	b948      	cbnz	r0, 80082a6 <??llcp_process_pkt_12>
 8008292:	7a8a      	ldrb	r2, [r1, #10]
 8008294:	7ac8      	ldrb	r0, [r1, #11]
 8008296:	f509 7183 	add.w	r1, r9, #262	; 0x106
 800829a:	ea42 2200 	orr.w	r2, r2, r0, lsl #8
 800829e:	4648      	mov	r0, r9
 80082a0:	f7ff f83a 	bl	8007318 <llcp_req_lng_trm_key>
 80082a4:	e03d      	b.n	8008322 <??llcp_process_pkt_10>

080082a6 <??llcp_process_pkt_12>:
 80082a6:	2802      	cmp	r0, #2
 80082a8:	d102      	bne.n	80082b0 <??llcp_process_pkt_13>
 80082aa:	2001      	movs	r0, #1
 80082ac:	7788      	strb	r0, [r1, #30]
 80082ae:	e038      	b.n	8008322 <??llcp_process_pkt_10>

080082b0 <??llcp_process_pkt_13>:
 80082b0:	2801      	cmp	r0, #1
 80082b2:	d136      	bne.n	8008322 <??llcp_process_pkt_10>
 80082b4:	6828      	ldr	r0, [r5, #0]
 80082b6:	f7f9 fcfa 	bl	8001cae <evnt_schdlr_send_pndng_data_pkt>
 80082ba:	2000      	movs	r0, #0
 80082bc:	7038      	strb	r0, [r7, #0]
 80082be:	e030      	b.n	8008322 <??llcp_process_pkt_10>

080082c0 <??llcp_process_pkt_8>:
 80082c0:	2a08      	cmp	r2, #8
 80082c2:	d104      	bne.n	80082ce <??llcp_process_pkt_14>

080082c4 <??llcp_process_pkt_9>:
 80082c4:	2007      	movs	r0, #7
 80082c6:	7038      	strb	r0, [r7, #0]
 80082c8:	2200      	movs	r2, #0
 80082ca:	778a      	strb	r2, [r1, #30]
 80082cc:	e029      	b.n	8008322 <??llcp_process_pkt_10>

080082ce <??llcp_process_pkt_14>:
 80082ce:	2807      	cmp	r0, #7
 80082d0:	d10d      	bne.n	80082ee <??llcp_process_pkt_15>
 80082d2:	7f88      	ldrb	r0, [r1, #30]
 80082d4:	2803      	cmp	r0, #3
 80082d6:	d124      	bne.n	8008322 <??llcp_process_pkt_10>
 80082d8:	2200      	movs	r2, #0
 80082da:	778a      	strb	r2, [r1, #30]
 80082dc:	8be8      	ldrh	r0, [r5, #30]
 80082de:	880a      	ldrh	r2, [r1, #0]
 80082e0:	f509 7383 	add.w	r3, r9, #262	; 0x106
 80082e4:	f509 718b 	add.w	r1, r9, #278	; 0x116
 80082e8:	f7fe fecf 	bl	800708a <llcp_encryption_req>
 80082ec:	e019      	b.n	8008322 <??llcp_process_pkt_10>

080082ee <??llcp_process_pkt_15>:
 80082ee:	280c      	cmp	r0, #12
 80082f0:	d00c      	beq.n	800830c <??llcp_process_pkt_5>
 80082f2:	280d      	cmp	r0, #13
 80082f4:	d106      	bne.n	8008304 <??llcp_process_pkt_16>

080082f6 <??llcp_process_pkt_11>:
 80082f6:	2296      	movs	r2, #150	; 0x96
 80082f8:	713a      	strb	r2, [r7, #4]
 80082fa:	68a8      	ldr	r0, [r5, #8]
 80082fc:	b188      	cbz	r0, 8008322 <??llcp_process_pkt_10>
 80082fe:	2200      	movs	r2, #0
 8008300:	77ca      	strb	r2, [r1, #31]
 8008302:	e00a      	b.n	800831a <??llcp_process_pkt_17>

08008304 <??llcp_process_pkt_16>:
 8008304:	2000      	movs	r0, #0
 8008306:	f7f7 ff63 	bl	80001d0 <bsp_assert>
 800830a:	e00a      	b.n	8008322 <??llcp_process_pkt_10>

0800830c <??llcp_process_pkt_5>:
 800830c:	2096      	movs	r0, #150	; 0x96
 800830e:	7138      	strb	r0, [r7, #4]
 8008310:	e007      	b.n	8008322 <??llcp_process_pkt_10>

08008312 <??llcp_process_pkt_4>:
 8008312:	2196      	movs	r1, #150	; 0x96
 8008314:	7139      	strb	r1, [r7, #4]
 8008316:	68a8      	ldr	r0, [r5, #8]
 8008318:	b118      	cbz	r0, 8008322 <??llcp_process_pkt_10>

0800831a <??llcp_process_pkt_17>:
 800831a:	f109 00c8 	add.w	r0, r9, #200	; 0xc8
 800831e:	f7fd fb66 	bl	80059ee <os_timer_stop_free>

08008322 <??llcp_process_pkt_10>:
 8008322:	2000      	movs	r0, #0
 8008324:	7030      	strb	r0, [r6, #0]

08008326 <??llcp_process_pkt_3>:
 8008326:	b14c      	cbz	r4, 800833c <??llcp_process_pkt_18>
 8008328:	4806      	ldr	r0, [pc, #24]	; (8008344 <??DataTable33>)
 800832a:	f850 1028 	ldr.w	r1, [r0, r8, lsl #2]
 800832e:	4549      	cmp	r1, r9
 8008330:	d104      	bne.n	800833c <??llcp_process_pkt_18>
 8008332:	4652      	mov	r2, sl
 8008334:	4621      	mov	r1, r4
 8008336:	4648      	mov	r0, r9
 8008338:	f7fd fea6 	bl	8006088 <llcp_pkt_received>

0800833c <??llcp_process_pkt_18>:
 800833c:	2000      	movs	r0, #0
 800833e:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
	...

08008344 <??DataTable33>:
 8008344:	03e8 2000                                   ... 

08008348 <llcp_start_encryption>:
 8008348:	b5f0      	push	{r4, r5, r6, r7, lr}
 800834a:	2406      	movs	r4, #6
 800834c:	270d      	movs	r7, #13
 800834e:	b08b      	sub	sp, #44	; 0x2c
 8008350:	2808      	cmp	r0, #8
 8008352:	da03      	bge.n	800835c <??llcp_start_encryption_0>
 8008354:	4a86      	ldr	r2, [pc, #536]	; (8008570 <??DataTable37_4>)
 8008356:	f852 5020 	ldr.w	r5, [r2, r0, lsl #2]
 800835a:	b90d      	cbnz	r5, 8008360 <??llcp_start_encryption_1>

0800835c <??llcp_start_encryption_0>:
 800835c:	2402      	movs	r4, #2

0800835e <??llcp_start_encryption_2>:
 800835e:	e03c      	b.n	80083da <?Subroutine4>

08008360 <??llcp_start_encryption_1>:
 8008360:	f505 768f 	add.w	r6, r5, #286	; 0x11e
 8008364:	79b0      	ldrb	r0, [r6, #6]
 8008366:	2807      	cmp	r0, #7
 8008368:	d1f8      	bne.n	800835c <??llcp_start_encryption_0>
 800836a:	b199      	cbz	r1, 8008394 <??llcp_start_encryption_3>
 800836c:	f505 7483 	add.w	r4, r5, #262	; 0x106
 8008370:	2210      	movs	r2, #16
 8008372:	4620      	mov	r0, r4
 8008374:	f006 fbe8 	bl	800eb48 <ble_memcpy>
 8008378:	f105 02f0 	add.w	r2, r5, #240	; 0xf0
 800837c:	4621      	mov	r1, r4
 800837e:	4610      	mov	r0, r2
 8008380:	f001 fbfd 	bl	8009b7e <llhwc_128_encrypt>
 8008384:	4604      	mov	r4, r0
 8008386:	f105 00e8 	add.w	r0, r5, #232	; 0xe8
 800838a:	2100      	movs	r1, #0
 800838c:	2705      	movs	r7, #5
 800838e:	6001      	str	r1, [r0, #0]
 8008390:	6041      	str	r1, [r0, #4]
 8008392:	e011      	b.n	80083b8 <??llcp_start_encryption_4>

08008394 <??llcp_start_encryption_3>:
 8008394:	f895 0046 	ldrb.w	r0, [r5, #70]	; 0x46
 8008398:	0741      	lsls	r1, r0, #29
 800839a:	d506      	bpl.n	80083aa <??llcp_start_encryption_5>
 800839c:	2103      	movs	r1, #3
 800839e:	f88d 4001 	strb.w	r4, [sp, #1]
 80083a2:	f88d 1000 	strb.w	r1, [sp]
 80083a6:	2711      	movs	r7, #17
 80083a8:	e001      	b.n	80083ae <??llcp_start_encryption_6>

080083aa <??llcp_start_encryption_5>:
 80083aa:	f88d 4000 	strb.w	r4, [sp]

080083ae <??llcp_start_encryption_6>:
 80083ae:	2100      	movs	r1, #0
 80083b0:	2007      	movs	r0, #7
 80083b2:	7131      	strb	r1, [r6, #4]
 80083b4:	7030      	strb	r0, [r6, #0]
 80083b6:	71b1      	strb	r1, [r6, #6]

080083b8 <??llcp_start_encryption_4>:
 80083b8:	f00c f84d 	bl	8014456 <os_disable_isr>
 80083bc:	2300      	movs	r3, #0
 80083be:	463a      	mov	r2, r7
 80083c0:	4629      	mov	r1, r5
 80083c2:	4668      	mov	r0, sp
 80083c4:	f7fd fd5b 	bl	8005e7e <llcp_cntrl_pkt_init>
 80083c8:	b90c      	cbnz	r4, 80083ce <??llcp_start_encryption_7>
 80083ca:	2002      	movs	r0, #2
 80083cc:	7130      	strb	r0, [r6, #4]

080083ce <??llcp_start_encryption_7>:
 80083ce:	21bb      	movs	r1, #187	; 0xbb
 80083d0:	7071      	strb	r1, [r6, #1]
 80083d2:	2400      	movs	r4, #0
 80083d4:	f00c f841 	bl	801445a <os_enable_isr>
 80083d8:	e7c1      	b.n	800835e <??llcp_start_encryption_2>

080083da <?Subroutine4>:
 80083da:	4620      	mov	r0, r4
 80083dc:	b00b      	add	sp, #44	; 0x2c
 80083de:	bdf0      	pop	{r4, r5, r6, r7, pc}

080083e0 <llcp_update_eff_max_tx_time>:
 80083e0:	460a      	mov	r2, r1
 80083e2:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80083e6:	2100      	movs	r1, #0
 80083e8:	b908      	cbnz	r0, 80083ee <??llcp_update_eff_max_tx_time_0>
 80083ea:	2102      	movs	r1, #2
 80083ec:	e04a      	b.n	8008484 <??llcp_update_eff_max_tx_time_1>

080083ee <??llcp_update_eff_max_tx_time_0>:
 80083ee:	f100 04a8 	add.w	r4, r0, #168	; 0xa8
 80083f2:	8825      	ldrh	r5, [r4, #0]
 80083f4:	89e3      	ldrh	r3, [r4, #14]
 80083f6:	01ad      	lsls	r5, r5, #6
 80083f8:	f505 7574 	add.w	r5, r5, #976	; 0x3d0
 80083fc:	42ab      	cmp	r3, r5
 80083fe:	bfb8      	it	lt
 8008400:	461d      	movlt	r5, r3
 8008402:	88a6      	ldrh	r6, [r4, #4]
 8008404:	8967      	ldrh	r7, [r4, #10]
 8008406:	01b6      	lsls	r6, r6, #6
 8008408:	f506 7674 	add.w	r6, r6, #976	; 0x3d0
 800840c:	42b7      	cmp	r7, r6
 800840e:	bfb8      	it	lt
 8008410:	463e      	movlt	r6, r7
 8008412:	4b58      	ldr	r3, [pc, #352]	; (8008574 <??DataTable37_5>)
 8008414:	f8d3 e000 	ldr.w	lr, [r3]
 8008418:	f240 43e2 	movw	r3, #1250	; 0x4e2
 800841c:	1976      	adds	r6, r6, r5
 800841e:	f10e 0e14 	add.w	lr, lr, #20
 8008422:	ea4f 089e 	mov.w	r8, lr, lsr #2
 8008426:	ebce 1e4e 	rsb	lr, lr, lr, lsl #5
 800842a:	435a      	muls	r2, r3
 800842c:	3696      	adds	r6, #150	; 0x96
 800842e:	4476      	add	r6, lr
 8008430:	4446      	add	r6, r8
 8008432:	42b2      	cmp	r2, r6
 8008434:	d202      	bcs.n	800843c <??llcp_update_eff_max_tx_time_2>
 8008436:	f5b7 6f29 	cmp.w	r7, #2704	; 0xa90
 800843a:	dc02      	bgt.n	8008442 <??llcp_update_eff_max_tx_time_3>

0800843c <??llcp_update_eff_max_tx_time_2>:
 800843c:	8a23      	ldrh	r3, [r4, #16]
 800843e:	42bb      	cmp	r3, r7
 8008440:	d020      	beq.n	8008484 <??llcp_update_eff_max_tx_time_1>

08008442 <??llcp_update_eff_max_tx_time_3>:
 8008442:	1b52      	subs	r2, r2, r5
 8008444:	f5a2 7296 	sub.w	r2, r2, #300	; 0x12c
 8008448:	eba2 020e 	sub.w	r2, r2, lr
 800844c:	eba2 0208 	sub.w	r2, r2, r8
 8008450:	f640 2591 	movw	r5, #2705	; 0xa91
 8008454:	42aa      	cmp	r2, r5
 8008456:	bf38      	it	cc
 8008458:	f44f 6229 	movcc.w	r2, #2704	; 0xa90
 800845c:	8a23      	ldrh	r3, [r4, #16]
 800845e:	429a      	cmp	r2, r3
 8008460:	bf28      	it	cs
 8008462:	461a      	movcs	r2, r3
 8008464:	b293      	uxth	r3, r2
 8008466:	f5b3 6f29 	cmp.w	r3, #2704	; 0xa90
 800846a:	bfb4      	ite	lt
 800846c:	f44f 6329 	movlt.w	r3, #2704	; 0xa90
 8008470:	4613      	movge	r3, r2
 8008472:	f890 012c 	ldrb.w	r0, [r0, #300]	; 0x12c
 8008476:	2804      	cmp	r0, #4
 8008478:	bf0c      	ite	eq
 800847a:	4618      	moveq	r0, r3
 800847c:	4610      	movne	r0, r2
 800847e:	8163      	strh	r3, [r4, #10]
 8008480:	8122      	strh	r2, [r4, #8]
 8008482:	80e0      	strh	r0, [r4, #6]

08008484 <??llcp_update_eff_max_tx_time_1>:
 8008484:	4608      	mov	r0, r1
 8008486:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
	...

0800848c <??DataTable35>:
 800848c:	6971 0800                                   qi..

08008490 <llcp_enqueue_host_control>:
 8008490:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8008494:	4607      	mov	r7, r0
 8008496:	4688      	mov	r8, r1
 8008498:	4615      	mov	r5, r2
 800849a:	4837      	ldr	r0, [pc, #220]	; (8008578 <??DataTable37_6>)
 800849c:	2600      	movs	r6, #0
 800849e:	f7fc febb 	bl	8005218 <os_mem_pool_alloc>
 80084a2:	0004      	movs	r4, r0
 80084a4:	bf08      	it	eq
 80084a6:	263a      	moveq	r6, #58	; 0x3a
 80084a8:	d019      	beq.n	80084de <??llcp_enqueue_host_control_0>
 80084aa:	b125      	cbz	r5, 80084b6 <??llcp_enqueue_host_control_1>
 80084ac:	2210      	movs	r2, #16
 80084ae:	4629      	mov	r1, r5
 80084b0:	1d20      	adds	r0, r4, #4
 80084b2:	f006 fb49 	bl	800eb48 <ble_memcpy>

080084b6 <??llcp_enqueue_host_control_1>:
 80084b6:	6166      	str	r6, [r4, #20]
 80084b8:	f8a4 8002 	strh.w	r8, [r4, #2]
 80084bc:	7027      	strb	r7, [r4, #0]
 80084be:	2003      	movs	r0, #3
 80084c0:	f00d fe32 	bl	8016128 <disable_specific_irq>
 80084c4:	482d      	ldr	r0, [pc, #180]	; (800857c <??DataTable37_7>)
 80084c6:	6801      	ldr	r1, [r0, #0]
 80084c8:	b911      	cbnz	r1, 80084d0 <??llcp_enqueue_host_control_2>
 80084ca:	6004      	str	r4, [r0, #0]
 80084cc:	e004      	b.n	80084d8 <??llcp_enqueue_host_control_3>

080084ce <??llcp_enqueue_host_control_4>:
 80084ce:	4601      	mov	r1, r0

080084d0 <??llcp_enqueue_host_control_2>:
 80084d0:	6948      	ldr	r0, [r1, #20]
 80084d2:	2800      	cmp	r0, #0
 80084d4:	d1fb      	bne.n	80084ce <??llcp_enqueue_host_control_4>
 80084d6:	614c      	str	r4, [r1, #20]

080084d8 <??llcp_enqueue_host_control_3>:
 80084d8:	2003      	movs	r0, #3
 80084da:	f00d fe23 	bl	8016124 <enable_specific_irq>

080084de <??llcp_enqueue_host_control_0>:
 80084de:	4630      	mov	r0, r6
 80084e0:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

080084e4 <??DataTable36>:
 80084e4:	363c 2000                                   <6. 

080084e8 <llcp_re_exec_host_control>:
 80084e8:	4601      	mov	r1, r0
 80084ea:	b538      	push	{r3, r4, r5, lr}
 80084ec:	8848      	ldrh	r0, [r1, #2]
 80084ee:	2400      	movs	r4, #0
 80084f0:	4602      	mov	r2, r0
 80084f2:	2a07      	cmp	r2, #7
 80084f4:	bfda      	itte	le
 80084f6:	4b1e      	ldrle	r3, [pc, #120]	; (8008570 <??DataTable37_4>)
 80084f8:	f853 5022 	ldrle.w	r5, [r3, r2, lsl #2]
 80084fc:	2500      	movgt	r5, #0
 80084fe:	780a      	ldrb	r2, [r1, #0]
 8008500:	2a06      	cmp	r2, #6
 8008502:	d827      	bhi.n	8008554 <??llcp_re_exec_host_control_1>
 8008504:	e8df f002 	tbb	[pc, r2]

08008508 <??llcp_re_exec_host_control_0>:
 8008508:	0704 0b26 1810 0021                         ..&...!.

08008510 <??llcp_re_exec_host_control_2>:
 8008510:	f7fe ffc5 	bl	800749e <llcp_read_remote_version>
 8008514:	e01c      	b.n	8008550 <??llcp_re_exec_host_control_3>

08008516 <??llcp_re_exec_host_control_4>:
 8008516:	2100      	movs	r1, #0
 8008518:	f7ff f82d 	bl	8007576 <llcp_read_remote_features>
 800851c:	e018      	b.n	8008550 <??llcp_re_exec_host_control_3>

0800851e <??llcp_re_exec_host_control_5>:
 800851e:	88ca      	ldrh	r2, [r1, #6]
 8008520:	8889      	ldrh	r1, [r1, #4]
 8008522:	f7fe fc77 	bl	8006e14 <llcp_data_length_update>
 8008526:	e013      	b.n	8008550 <??llcp_re_exec_host_control_3>

08008528 <??llcp_re_exec_host_control_6>:
 8008528:	79ca      	ldrb	r2, [r1, #7]
 800852a:	9200      	str	r2, [sp, #0]
 800852c:	798b      	ldrb	r3, [r1, #6]
 800852e:	794a      	ldrb	r2, [r1, #5]
 8008530:	7909      	ldrb	r1, [r1, #4]
 8008532:	f7fe fa8f 	bl	8006a54 <llcp_le_set_phy_cmd>
 8008536:	e00b      	b.n	8008550 <??llcp_re_exec_host_control_3>

08008538 <??llcp_re_exec_host_control_7>:
 8008538:	f8b5 2104 	ldrh.w	r2, [r5, #260]	; 0x104
 800853c:	f505 7383 	add.w	r3, r5, #262	; 0x106
 8008540:	f505 718b 	add.w	r1, r5, #278	; 0x116
 8008544:	f7fe fda1 	bl	800708a <llcp_encryption_req>
 8008548:	e002      	b.n	8008550 <??llcp_re_exec_host_control_3>

0800854a <??llcp_re_exec_host_control_8>:
 800854a:	1d09      	adds	r1, r1, #4
 800854c:	f7ff fb84 	bl	8007c58 <llcp_update_param_req>

08008550 <??llcp_re_exec_host_control_3>:
 8008550:	4604      	mov	r4, r0
 8008552:	e002      	b.n	800855a <??llcp_re_exec_host_control_9>

08008554 <??llcp_re_exec_host_control_1>:
 8008554:	2000      	movs	r0, #0
 8008556:	f7f7 fe3b 	bl	80001d0 <bsp_assert>

0800855a <??llcp_re_exec_host_control_9>:
 800855a:	4620      	mov	r0, r4
 800855c:	bd32      	pop	{r1, r4, r5, pc}
	...

08008560 <??DataTable37>:
 8008560:	1759 d1b7                                   Y...

08008564 <??DataTable37_1>:
 8008564:	6955 0800                                   Ui..

08008568 <??DataTable37_2>:
 8008568:	363c 2000                                   <6. 

0800856c <??DataTable37_3>:
 800856c:	03d8 2000                                   ... 

08008570 <??DataTable37_4>:
 8008570:	03e8 2000                                   ... 

08008574 <??DataTable37_5>:
 8008574:	0048 2000                                   H.. 

08008578 <??DataTable37_6>:
 8008578:	362c 2000                                   ,6. 

0800857c <??DataTable37_7>:
 800857c:	0408 2000                                   ... 

08008580 <llhwc_get_sm_mode_from_event_type>:
 8008580:	b570      	push	{r4, r5, r6, lr}
 8008582:	460d      	mov	r5, r1
 8008584:	2600      	movs	r6, #0
 8008586:	4604      	mov	r4, r0
 8008588:	2d00      	cmp	r5, #0
 800858a:	d804      	bhi.n	8008596 <??llhwc_get_sm_mode_from_event_type_0>
 800858c:	f5b4 1f00 	cmp.w	r4, #2097152	; 0x200000
 8008590:	bf38      	it	cc
 8008592:	2001      	movcc	r0, #1
 8008594:	d300      	bcc.n	8008598 <??llhwc_get_sm_mode_from_event_type_1>

08008596 <??llhwc_get_sm_mode_from_event_type_0>:
 8008596:	2000      	movs	r0, #0

08008598 <??llhwc_get_sm_mode_from_event_type_1>:
 8008598:	f7f7 fe1a 	bl	80001d0 <bsp_assert>
 800859c:	2200      	movs	r2, #0
 800859e:	2301      	movs	r3, #1

080085a0 <??llhwc_get_sm_mode_from_event_type_2>:
 80085a0:	fa03 f002 	lsl.w	r0, r3, r2
 80085a4:	ebb5 7fe0 	cmp.w	r5, r0, asr #31
 80085a8:	bf08      	it	eq
 80085aa:	4284      	cmpeq	r4, r0
 80085ac:	d004      	beq.n	80085b8 <??llhwc_get_sm_mode_from_event_type_3>
 80085ae:	1c52      	adds	r2, r2, #1
 80085b0:	b2d0      	uxtb	r0, r2
 80085b2:	2815      	cmp	r0, #21
 80085b4:	dbf4      	blt.n	80085a0 <??llhwc_get_sm_mode_from_event_type_2>
 80085b6:	e000      	b.n	80085ba <??llhwc_get_sm_mode_from_event_type_4>

080085b8 <??llhwc_get_sm_mode_from_event_type_3>:
 80085b8:	4616      	mov	r6, r2

080085ba <??llhwc_get_sm_mode_from_event_type_4>:
 80085ba:	b2f0      	uxtb	r0, r6
 80085bc:	bd70      	pop	{r4, r5, r6, pc}

080085be <llhwc_switch_rate>:
 80085be:	b511      	push	{r0, r4, lr}
 80085c0:	b087      	sub	sp, #28
 80085c2:	f8df 4c54 	ldr.w	r4, [pc, #3156]	; 8009218 <??DataTable19>
 80085c6:	f89d 101c 	ldrb.w	r1, [sp, #28]
 80085ca:	6920      	ldr	r0, [r4, #16]
 80085cc:	ab01      	add	r3, sp, #4
 80085ce:	0849      	lsrs	r1, r1, #1
 80085d0:	f361 4011 	bfi	r0, r1, #16, #2
 80085d4:	f89d 101d 	ldrb.w	r1, [sp, #29]
 80085d8:	6120      	str	r0, [r4, #16]
 80085da:	f10d 0205 	add.w	r2, sp, #5
 80085de:	0849      	lsrs	r1, r1, #1
 80085e0:	f361 4093 	bfi	r0, r1, #18, #2
 80085e4:	6120      	str	r0, [r4, #16]
 80085e6:	a802      	add	r0, sp, #8
 80085e8:	9000      	str	r0, [sp, #0]
 80085ea:	9807      	ldr	r0, [sp, #28]
 80085ec:	2101      	movs	r1, #1
 80085ee:	f004 f9a0 	bl	800c932 <llhwc_cmn_set_phy>
 80085f2:	f89d 1005 	ldrb.w	r1, [sp, #5]
 80085f6:	6920      	ldr	r0, [r4, #16]
 80085f8:	f361 200b 	bfi	r0, r1, #8, #4
 80085fc:	f89d 1004 	ldrb.w	r1, [sp, #4]
 8008600:	6120      	str	r0, [r4, #16]
 8008602:	f361 300f 	bfi	r0, r1, #12, #4
 8008606:	6120      	str	r0, [r4, #16]
 8008608:	9802      	ldr	r0, [sp, #8]
 800860a:	9903      	ldr	r1, [sp, #12]
 800860c:	f420 407f 	bic.w	r0, r0, #65280	; 0xff00
 8008610:	ea40 2001 	orr.w	r0, r0, r1, lsl #8
 8008614:	9904      	ldr	r1, [sp, #16]
 8008616:	f420 007f 	bic.w	r0, r0, #16711680	; 0xff0000
 800861a:	ea40 4001 	orr.w	r0, r0, r1, lsl #16
 800861e:	9905      	ldr	r1, [sp, #20]
 8008620:	b008      	add	sp, #32
 8008622:	f020 407f 	bic.w	r0, r0, #4278190080	; 0xff000000
 8008626:	ea40 6001 	orr.w	r0, r0, r1, lsl #24
 800862a:	61a0      	str	r0, [r4, #24]
 800862c:	bd10      	pop	{r4, pc}

0800862e <llhwc_evnt_done>:
 800862e:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8008632:	4614      	mov	r4, r2
 8008634:	4607      	mov	r7, r0
 8008636:	e9d7 2304 	ldrd	r2, r3, [r7, #16]
 800863a:	2600      	movs	r6, #0
 800863c:	f04f 0c00 	mov.w	ip, #0
 8008640:	f897 0020 	ldrb.w	r0, [r7, #32]
 8008644:	f107 0521 	add.w	r5, r7, #33	; 0x21
 8008648:	2b00      	cmp	r3, #0
 800864a:	d801      	bhi.n	8008650 <??llhwc_evnt_done_0>
 800864c:	2a80      	cmp	r2, #128	; 0x80
 800864e:	d302      	bcc.n	8008656 <??llhwc_evnt_done_1>

08008650 <??llhwc_evnt_done_0>:
 8008650:	f412 4fc0 	tst.w	r2, #24576	; 0x6000
 8008654:	d000      	beq.n	8008658 <??llhwc_evnt_done_2>

08008656 <??llhwc_evnt_done_1>:
 8008656:	72a9      	strb	r1, [r5, #10]

08008658 <??llhwc_evnt_done_2>:
 8008658:	b918      	cbnz	r0, 8008662 <??llhwc_evnt_done_3>
 800865a:	7ae9      	ldrb	r1, [r5, #11]
 800865c:	078a      	lsls	r2, r1, #30
 800865e:	d40d      	bmi.n	800867c <??llhwc_evnt_done_4>
 8008660:	e021      	b.n	80086a6 <??llhwc_evnt_done_5>

08008662 <??llhwc_evnt_done_3>:
 8008662:	68b9      	ldr	r1, [r7, #8]
 8008664:	b919      	cbnz	r1, 800866e <??llhwc_evnt_done_6>
 8008666:	f8df 2d48 	ldr.w	r2, [pc, #3400]	; 80093b0 <??DataTable20>
 800866a:	6c91      	ldr	r1, [r2, #72]	; 0x48
 800866c:	60b9      	str	r1, [r7, #8]

0800866e <??llhwc_evnt_done_6>:
 800866e:	68b9      	ldr	r1, [r7, #8]
 8008670:	680a      	ldr	r2, [r1, #0]
 8008672:	8949      	ldrh	r1, [r1, #10]
 8008674:	188a      	adds	r2, r1, r2
 8008676:	7816      	ldrb	r6, [r2, #0]
 8008678:	f006 060f 	and.w	r6, r6, #15

0800867c <??llhwc_evnt_done_4>:
 800867c:	e9d7 2304 	ldrd	r2, r3, [r7, #16]
 8008680:	f412 7fb8 	tst.w	r2, #368	; 0x170
 8008684:	d106      	bne.n	8008694 <??llhwc_evnt_done_7>
 8008686:	2b00      	cmp	r3, #0
 8008688:	bf04      	itt	eq
 800868a:	f5b2 5f00 	cmpeq.w	r2, #8192	; 0x2000
 800868e:	2e03      	cmpeq	r6, #3
 8008690:	d109      	bne.n	80086a6 <??llhwc_evnt_done_5>
 8008692:	b140      	cbz	r0, 80086a6 <??llhwc_evnt_done_5>

08008694 <??llhwc_evnt_done_7>:
 8008694:	f8df 2b84 	ldr.w	r2, [pc, #2948]	; 800921c <??DataTable19_1>
 8008698:	f892 3033 	ldrb.w	r3, [r2, #51]	; 0x33
 800869c:	f8df 1b80 	ldr.w	r1, [pc, #2944]	; 8009220 <??DataTable19_2>
 80086a0:	f831 1013 	ldrh.w	r1, [r1, r3, lsl #1]
 80086a4:	1a64      	subs	r4, r4, r1

080086a6 <??llhwc_evnt_done_5>:
 80086a6:	00a2      	lsls	r2, r4, #2
 80086a8:	f8df 6b78 	ldr.w	r6, [pc, #2936]	; 8009224 <??DataTable19_3>
 80086ac:	fba2 6306 	umull	r6, r3, r2, r6
 80086b0:	f8df eb68 	ldr.w	lr, [pc, #2920]	; 800921c <??DataTable19_1>
 80086b4:	f8de 800c 	ldr.w	r8, [lr, #12]
 80086b8:	099a      	lsrs	r2, r3, #6
 80086ba:	ebc2 1142 	rsb	r1, r2, r2, lsl #5
 80086be:	4490      	add	r8, r2
 80086c0:	f8c7 8000 	str.w	r8, [r7]
 80086c4:	1a64      	subs	r4, r4, r1
 80086c6:	eba4 0492 	sub.w	r4, r4, r2, lsr #2
 80086ca:	2800      	cmp	r0, #0
 80086cc:	607c      	str	r4, [r7, #4]
 80086ce:	d03e      	beq.n	800874e <??llhwc_evnt_done_8>
 80086d0:	68bc      	ldr	r4, [r7, #8]
 80086d2:	f8df 6cdc 	ldr.w	r6, [pc, #3292]	; 80093b0 <??DataTable20>
 80086d6:	b90c      	cbnz	r4, 80086dc <??llhwc_evnt_done_9>
 80086d8:	6cb4      	ldr	r4, [r6, #72]	; 0x48
 80086da:	60bc      	str	r4, [r7, #8]

080086dc <??llhwc_evnt_done_9>:
 80086dc:	4601      	mov	r1, r0

080086de <??llhwc_evnt_done_10>:
 80086de:	f8b4 e00a 	ldrh.w	lr, [r4, #10]
 80086e2:	f8d4 8000 	ldr.w	r8, [r4]
 80086e6:	e9d7 2304 	ldrd	r2, r3, [r7, #16]
 80086ea:	eb0e 0008 	add.w	r0, lr, r8
 80086ee:	7840      	ldrb	r0, [r0, #1]
 80086f0:	b928      	cbnz	r0, 80086fe <??llhwc_evnt_done_11>
 80086f2:	f412 7fc0 	tst.w	r2, #384	; 0x180
 80086f6:	d01d      	beq.n	8008734 <??llhwc_evnt_done_12>
 80086f8:	f10c 0c01 	add.w	ip, ip, #1
 80086fc:	e008      	b.n	8008710 <??llhwc_evnt_done_13>

080086fe <??llhwc_evnt_done_11>:
 80086fe:	f412 7fc0 	tst.w	r2, #384	; 0x180
 8008702:	d017      	beq.n	8008734 <??llhwc_evnt_done_12>
 8008704:	7a6a      	ldrb	r2, [r5, #9]
 8008706:	b11a      	cbz	r2, 8008710 <??llhwc_evnt_done_13>
 8008708:	1f00      	subs	r0, r0, #4
 800870a:	eb08 030e 	add.w	r3, r8, lr
 800870e:	7058      	strb	r0, [r3, #1]

08008710 <??llhwc_evnt_done_13>:
 8008710:	e9d7 2304 	ldrd	r2, r3, [r7, #16]
 8008714:	f412 7fc0 	tst.w	r2, #384	; 0x180
 8008718:	d00c      	beq.n	8008734 <??llhwc_evnt_done_12>
 800871a:	6822      	ldr	r2, [r4, #0]
 800871c:	7813      	ldrb	r3, [r2, #0]
 800871e:	f003 0303 	and.w	r3, r3, #3
 8008722:	2b03      	cmp	r3, #3
 8008724:	d106      	bne.n	8008734 <??llhwc_evnt_done_12>
 8008726:	7912      	ldrb	r2, [r2, #4]
 8008728:	2a02      	cmp	r2, #2
 800872a:	bf12      	itee	ne
 800872c:	2a22      	cmpne	r2, #34	; 0x22
 800872e:	2200      	moveq	r2, #0
 8008730:	f886 2033 	strbeq.w	r2, [r6, #51]	; 0x33

08008734 <??llhwc_evnt_done_12>:
 8008734:	1d00      	adds	r0, r0, #4
 8008736:	81a0      	strh	r0, [r4, #12]
 8008738:	6864      	ldr	r4, [r4, #4]
 800873a:	1e49      	subs	r1, r1, #1
 800873c:	d1cf      	bne.n	80086de <??llhwc_evnt_done_10>
 800873e:	f885 c000 	strb.w	ip, [r5]
 8008742:	f897 0020 	ldrb.w	r0, [r7, #32]
 8008746:	eba0 0c0c 	sub.w	ip, r0, ip
 800874a:	f887 c020 	strb.w	ip, [r7, #32]

0800874e <??llhwc_evnt_done_8>:
 800874e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

08008752 <llhwc_recover_from_dp_slp>:
 8008752:	b580      	push	{r7, lr}
 8008754:	f000 fc8b 	bl	800906e <llhwc_reset>
 8008758:	f8df 0c58 	ldr.w	r0, [pc, #3160]	; 80093b4 <??DataTable20_1>
 800875c:	6802      	ldr	r2, [r0, #0]
 800875e:	2101      	movs	r1, #1
 8008760:	f361 0202 	bfi	r2, r1, #0, #3
 8008764:	6002      	str	r2, [r0, #0]
 8008766:	f8df 0d1c 	ldr.w	r0, [pc, #3356]	; 8009484 <??DataTable21>
 800876a:	7e80      	ldrb	r0, [r0, #26]
 800876c:	e8bd 4002 	ldmia.w	sp!, {r1, lr}
 8008770:	f000 bc6d 	b.w	800904e <llhwc_addr_rsln_en>

08008774 <llhwc_hg_isr>:
 8008774:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8008778:	b08a      	sub	sp, #40	; 0x28
 800877a:	f00b fe6c 	bl	8014456 <os_disable_isr>
 800877e:	f8df 6c38 	ldr.w	r6, [pc, #3128]	; 80093b8 <??DataTable20_2>
 8008782:	f8d6 9000 	ldr.w	r9, [r6]
 8008786:	2001      	movs	r0, #1
 8008788:	2100      	movs	r1, #0
 800878a:	f009 091f 	and.w	r9, r9, #31
 800878e:	464a      	mov	r2, r9
 8008790:	f01c fd8a 	bl	80252a8 <__aeabi_llsl>
 8008794:	f8df 7c18 	ldr.w	r7, [pc, #3096]	; 80093b0 <??DataTable20>
 8008798:	4604      	mov	r4, r0
 800879a:	f107 0530 	add.w	r5, r7, #48	; 0x30
 800879e:	7928      	ldrb	r0, [r5, #4]
 80087a0:	4688      	mov	r8, r1
 80087a2:	2801      	cmp	r0, #1
 80087a4:	d10e      	bne.n	80087c4 <??llhwc_hg_isr_0>
 80087a6:	6eb0      	ldr	r0, [r6, #104]	; 0x68
 80087a8:	f3c0 00c0 	ubfx	r0, r0, #3, #1
 80087ac:	b150      	cbz	r0, 80087c4 <??llhwc_hg_isr_0>
 80087ae:	2000      	movs	r0, #0
 80087b0:	f8df 1c08 	ldr.w	r1, [pc, #3080]	; 80093bc <??DataTable20_3>
 80087b4:	7008      	strb	r0, [r1, #0]
 80087b6:	4648      	mov	r0, r9
 80087b8:	f000 f9b2 	bl	8008b20 <llhwc_sm_done_isr>
 80087bc:	2002      	movs	r0, #2
 80087be:	f8df 1c00 	ldr.w	r1, [pc, #3072]	; 80093c0 <??DataTable20_4>
 80087c2:	7088      	strb	r0, [r1, #2]

080087c4 <??llhwc_hg_isr_0>:
 80087c4:	6eb0      	ldr	r0, [r6, #104]	; 0x68
 80087c6:	f3c0 0080 	ubfx	r0, r0, #2, #1
 80087ca:	2800      	cmp	r0, #0
 80087cc:	f000 80c7 	beq.w	800895e <??llhwc_hg_isr_1>
 80087d0:	2000      	movs	r0, #0
 80087d2:	f8df 1be8 	ldr.w	r1, [pc, #3048]	; 80093bc <??DataTable20_3>
 80087d6:	7008      	strb	r0, [r1, #0]
 80087d8:	f8df 9cac 	ldr.w	r9, [pc, #3244]	; 8009488 <??DataTable21_1>
 80087dc:	f8d9 2000 	ldr.w	r2, [r9]
 80087e0:	0852      	lsrs	r2, r2, #1
 80087e2:	0052      	lsls	r2, r2, #1
 80087e4:	f8c9 2000 	str.w	r2, [r9]
 80087e8:	f1b8 0f00 	cmp.w	r8, #0
 80087ec:	bf08      	it	eq
 80087ee:	2c40      	cmpeq	r4, #64	; 0x40
 80087f0:	d150      	bne.n	8008894 <??llhwc_hg_isr_2>
 80087f2:	f8df ac98 	ldr.w	sl, [pc, #3224]	; 800948c <??DataTable21_2>
 80087f6:	f89a b001 	ldrb.w	fp, [sl, #1]
 80087fa:	f1bb 0f04 	cmp.w	fp, #4
 80087fe:	d10c      	bne.n	800881a <??llhwc_hg_isr_3>
 8008800:	f8df 0a14 	ldr.w	r0, [pc, #2580]	; 8009218 <??DataTable19>
 8008804:	69c1      	ldr	r1, [r0, #28]
 8008806:	f8df 0c88 	ldr.w	r0, [pc, #3208]	; 8009490 <??DataTable21_3>
 800880a:	eb00 4011 	add.w	r0, r0, r1, lsr #16
 800880e:	6802      	ldr	r2, [r0, #0]
 8008810:	f3c2 60c0 	ubfx	r0, r2, #27, #1
 8008814:	b908      	cbnz	r0, 800881a <??llhwc_hg_isr_3>
 8008816:	f04f 0b03 	mov.w	fp, #3

0800881a <??llhwc_hg_isr_3>:
 800881a:	2002      	movs	r0, #2
 800881c:	f7f7 fcc1 	bl	80001a2 <bsp_delay_us>
 8008820:	f8d9 105c 	ldr.w	r1, [r9, #92]	; 0x5c
 8008824:	f8df 29f4 	ldr.w	r2, [pc, #2548]	; 800921c <??DataTable19_1>
 8008828:	6990      	ldr	r0, [r2, #24]
 800882a:	6913      	ldr	r3, [r2, #16]
 800882c:	4283      	cmp	r3, r0
 800882e:	bf39      	ittee	cc
 8008830:	1a09      	subcc	r1, r1, r0
 8008832:	1859      	addcc	r1, r3, r1
 8008834:	1859      	addcs	r1, r3, r1
 8008836:	1a09      	subcs	r1, r1, r0
 8008838:	f8df 39e4 	ldr.w	r3, [pc, #2532]	; 8009220 <??DataTable19_2>
 800883c:	46dc      	mov	ip, fp
 800883e:	f833 001c 	ldrh.w	r0, [r3, ip, lsl #1]
 8008842:	f8df 99e0 	ldr.w	r9, [pc, #2528]	; 8009224 <??DataTable19_3>
 8008846:	68d2      	ldr	r2, [r2, #12]
 8008848:	1a09      	subs	r1, r1, r0
 800884a:	ea4f 0e81 	mov.w	lr, r1, lsl #2
 800884e:	fbae 9309 	umull	r9, r3, lr, r9
 8008852:	099b      	lsrs	r3, r3, #6
 8008854:	ebc3 1043 	rsb	r0, r3, r3, lsl #5
 8008858:	189a      	adds	r2, r3, r2
 800885a:	9208      	str	r2, [sp, #32]
 800885c:	1a09      	subs	r1, r1, r0
 800885e:	eba1 0193 	sub.w	r1, r1, r3, lsr #2
 8008862:	f89a 3000 	ldrb.w	r3, [sl]
 8008866:	465a      	mov	r2, fp
 8008868:	9109      	str	r1, [sp, #36]	; 0x24
 800886a:	69a8      	ldr	r0, [r5, #24]
 800886c:	9001      	str	r0, [sp, #4]
 800886e:	7829      	ldrb	r1, [r5, #0]
 8008870:	a808      	add	r0, sp, #32
 8008872:	9100      	str	r1, [sp, #0]
 8008874:	a907      	add	r1, sp, #28
 8008876:	f008 fd73 	bl	8011360 <evnt_schdlr_update_master_conn_params>
 800887a:	6a69      	ldr	r1, [r5, #36]	; 0x24
 800887c:	f8df 0c14 	ldr.w	r0, [pc, #3092]	; 8009494 <??DataTable21_4>
 8008880:	1841      	adds	r1, r0, r1
 8008882:	9807      	ldr	r0, [sp, #28]
 8008884:	680a      	ldr	r2, [r1, #0]
 8008886:	f360 020f 	bfi	r2, r0, #0, #16
 800888a:	600a      	str	r2, [r1, #0]
 800888c:	7eb8      	ldrb	r0, [r7, #26]
 800888e:	2801      	cmp	r0, #1
 8008890:	d15d      	bne.n	800894e <??llhwc_hg_isr_4>
 8008892:	e00a      	b.n	80088aa <??llhwc_hg_isr_5>

08008894 <??llhwc_hg_isr_2>:
 8008894:	f1b8 0f00 	cmp.w	r8, #0
 8008898:	bf08      	it	eq
 800889a:	2c10      	cmpeq	r4, #16
 800889c:	d005      	beq.n	80088aa <??llhwc_hg_isr_5>
 800889e:	f1b8 0f00 	cmp.w	r8, #0
 80088a2:	bf08      	it	eq
 80088a4:	f5b4 5f00 	cmpeq.w	r4, #8192	; 0x2000
 80088a8:	d151      	bne.n	800894e <??llhwc_hg_isr_4>

080088aa <??llhwc_hg_isr_5>:
 80088aa:	f8df 596c 	ldr.w	r5, [pc, #2412]	; 8009218 <??DataTable19>
 80088ae:	69e8      	ldr	r0, [r5, #28]
 80088b0:	f8df 9bdc 	ldr.w	r9, [pc, #3036]	; 8009490 <??DataTable21_3>
 80088b4:	0c01      	lsrs	r1, r0, #16
 80088b6:	1d09      	adds	r1, r1, #4
 80088b8:	eb09 0201 	add.w	r2, r9, r1
 80088bc:	f8d2 c000 	ldr.w	ip, [r2]
 80088c0:	6813      	ldr	r3, [r2, #0]
 80088c2:	f00c 0c0f 	and.w	ip, ip, #15
 80088c6:	f1bc 0f01 	cmp.w	ip, #1
 80088ca:	f3c3 1380 	ubfx	r3, r3, #6, #1
 80088ce:	d905      	bls.n	80088dc <??llhwc_hg_isr_6>
 80088d0:	f1bc 0c05 	subs.w	ip, ip, #5
 80088d4:	d048      	beq.n	8008968 <??llhwc_hg_isr_7>
 80088d6:	f1bc 0c01 	subs.w	ip, ip, #1
 80088da:	d10a      	bne.n	80088f2 <??llhwc_hg_isr_8>

080088dc <??llhwc_hg_isr_6>:
 80088dc:	f8df 2bb8 	ldr.w	r2, [pc, #3000]	; 8009498 <??DataTable21_5>
 80088e0:	f852 a001 	ldr.w	sl, [r2, r1]
 80088e4:	f8df 0bb4 	ldr.w	r0, [pc, #2996]	; 800949c <??DataTable21_6>
 80088e8:	f8cd a014 	str.w	sl, [sp, #20]
 80088ec:	5841      	ldr	r1, [r0, r1]
 80088ee:	b289      	uxth	r1, r1
 80088f0:	9106      	str	r1, [sp, #24]

080088f2 <??llhwc_hg_isr_8>:
 80088f2:	a802      	add	r0, sp, #8
 80088f4:	a903      	add	r1, sp, #12
 80088f6:	9001      	str	r0, [sp, #4]
 80088f8:	9100      	str	r1, [sp, #0]
 80088fa:	aa05      	add	r2, sp, #20
 80088fc:	4620      	mov	r0, r4
 80088fe:	2100      	movs	r1, #0
 8008900:	f008 fec3 	bl	801168a <non_conn_mngr_interrupt>
 8008904:	7678      	strb	r0, [r7, #25]
 8008906:	2801      	cmp	r0, #1
 8008908:	bf04      	itt	eq
 800890a:	f1b8 0f00 	cmpeq.w	r8, #0
 800890e:	2c10      	cmpeq	r4, #16
 8008910:	d106      	bne.n	8008920 <??llhwc_hg_isr_9>
 8008912:	6928      	ldr	r0, [r5, #16]
 8008914:	0c80      	lsrs	r0, r0, #18
 8008916:	f000 0003 	and.w	r0, r0, #3
 800891a:	1c40      	adds	r0, r0, #1
 800891c:	f005 ff52 	bl	800e7c4 <llhwc_phy_deactivate_scan_req>

08008920 <??llhwc_hg_isr_9>:
 8008920:	9803      	ldr	r0, [sp, #12]
 8008922:	61f0      	str	r0, [r6, #28]
 8008924:	9804      	ldr	r0, [sp, #16]
 8008926:	69b1      	ldr	r1, [r6, #24]
 8008928:	f360 010f 	bfi	r1, r0, #0, #16
 800892c:	61b1      	str	r1, [r6, #24]
 800892e:	e9d7 0108 	ldrd	r0, r1, [r7, #32]
 8008932:	2900      	cmp	r1, #0
 8008934:	bf08      	it	eq
 8008936:	2820      	cmpeq	r0, #32
 8008938:	d009      	beq.n	800894e <??llhwc_hg_isr_4>
 800893a:	69e8      	ldr	r0, [r5, #28]
 800893c:	f89d 1008 	ldrb.w	r1, [sp, #8]
 8008940:	b280      	uxth	r0, r0
 8008942:	1d00      	adds	r0, r0, #4
 8008944:	4448      	add	r0, r9
 8008946:	6802      	ldr	r2, [r0, #0]
 8008948:	f361 1286 	bfi	r2, r1, #6, #1
 800894c:	6002      	str	r2, [r0, #0]

0800894e <??llhwc_hg_isr_4>:
 800894e:	6ef0      	ldr	r0, [r6, #108]	; 0x6c
 8008950:	f040 0004 	orr.w	r0, r0, #4
 8008954:	66f0      	str	r0, [r6, #108]	; 0x6c
 8008956:	6ef0      	ldr	r0, [r6, #108]	; 0x6c
 8008958:	f020 0004 	bic.w	r0, r0, #4
 800895c:	66f0      	str	r0, [r6, #108]	; 0x6c

0800895e <??llhwc_hg_isr_1>:
 800895e:	f00b fd7c 	bl	801445a <os_enable_isr>
 8008962:	b00b      	add	sp, #44	; 0x2c
 8008964:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08008968 <??llhwc_hg_isr_7>:
 8008968:	6812      	ldr	r2, [r2, #0]
 800896a:	f8df 4b2c 	ldr.w	r4, [pc, #2860]	; 8009498 <??DataTable21_5>
 800896e:	5867      	ldr	r7, [r4, r1]
 8008970:	f10d 0814 	add.w	r8, sp, #20
 8008974:	b280      	uxth	r0, r0
 8008976:	9705      	str	r7, [sp, #20]
 8008978:	f8df 7b20 	ldr.w	r7, [pc, #2848]	; 800949c <??DataTable21_6>
 800897c:	eb07 0c01 	add.w	ip, r7, r1
 8008980:	f8dc e000 	ldr.w	lr, [ip]
 8008984:	f3c2 12c0 	ubfx	r2, r2, #7, #1
 8008988:	fa1f fe8e 	uxth.w	lr, lr
 800898c:	f8c8 e004 	str.w	lr, [r8, #4]
 8008990:	f8dc 5000 	ldr.w	r5, [ip]
 8008994:	f8df cafc 	ldr.w	ip, [pc, #2812]	; 8009494 <??DataTable21_4>
 8008998:	f10d 0e0c 	add.w	lr, sp, #12
 800899c:	0c2d      	lsrs	r5, r5, #16
 800899e:	9503      	str	r5, [sp, #12]
 80089a0:	f85c 1001 	ldr.w	r1, [ip, r1]
 80089a4:	f8ce 1004 	str.w	r1, [lr, #4]
 80089a8:	f8be 5004 	ldrh.w	r5, [lr, #4]
 80089ac:	f8be 1006 	ldrh.w	r1, [lr, #6]
 80089b0:	f8ae 5002 	strh.w	r5, [lr, #2]
 80089b4:	f8ae 1004 	strh.w	r1, [lr, #4]
 80089b8:	f859 1000 	ldr.w	r1, [r9, r0]
 80089bc:	b289      	uxth	r1, r1
 80089be:	1864      	adds	r4, r4, r1
 80089c0:	6820      	ldr	r0, [r4, #0]
 80089c2:	187f      	adds	r7, r7, r1
 80089c4:	448c      	add	ip, r1
 80089c6:	f020 0040 	bic.w	r0, r0, #64	; 0x40
 80089ca:	ea40 1082 	orr.w	r0, r0, r2, lsl #6
 80089ce:	6020      	str	r0, [r4, #0]
 80089d0:	6820      	ldr	r0, [r4, #0]
 80089d2:	f020 0080 	bic.w	r0, r0, #128	; 0x80
 80089d6:	ea40 10c3 	orr.w	r0, r0, r3, lsl #7
 80089da:	6020      	str	r0, [r4, #0]
 80089dc:	9803      	ldr	r0, [sp, #12]
 80089de:	683a      	ldr	r2, [r7, #0]
 80089e0:	f360 421f 	bfi	r2, r0, #16, #16
 80089e4:	603a      	str	r2, [r7, #0]
 80089e6:	f8be 0002 	ldrh.w	r0, [lr, #2]
 80089ea:	f8dc 2000 	ldr.w	r2, [ip]
 80089ee:	f360 020f 	bfi	r2, r0, #0, #16
 80089f2:	f8cc 2000 	str.w	r2, [ip]
 80089f6:	f8be 0004 	ldrh.w	r0, [lr, #4]
 80089fa:	f8dc 2000 	ldr.w	r2, [ip]
 80089fe:	f360 421f 	bfi	r2, r0, #16, #16
 8008a02:	f8df 0c88 	ldr.w	r0, [pc, #3208]	; 800968c <??DataTable22>
 8008a06:	f8cc 2000 	str.w	r2, [ip]
 8008a0a:	1840      	adds	r0, r0, r1
 8008a0c:	6803      	ldr	r3, [r0, #0]
 8008a0e:	9a05      	ldr	r2, [sp, #20]
 8008a10:	6002      	str	r2, [r0, #0]
 8008a12:	f8df 0c7c 	ldr.w	r0, [pc, #3196]	; 8009690 <??DataTable22_1>
 8008a16:	1841      	adds	r1, r0, r1
 8008a18:	f8d8 0004 	ldr.w	r0, [r8, #4]
 8008a1c:	680a      	ldr	r2, [r1, #0]
 8008a1e:	f360 020f 	bfi	r2, r0, #0, #16
 8008a22:	600a      	str	r2, [r1, #0]
 8008a24:	e793      	b.n	800894e <??llhwc_hg_isr_4>

08008a26 <llhwc_lw_isr>:
 8008a26:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8008a2a:	4607      	mov	r7, r0
 8008a2c:	f8df 6988 	ldr.w	r6, [pc, #2440]	; 80093b8 <??DataTable20_2>
 8008a30:	6834      	ldr	r4, [r6, #0]
 8008a32:	7838      	ldrb	r0, [r7, #0]
 8008a34:	f8df 5c5c 	ldr.w	r5, [pc, #3164]	; 8009694 <??DataTable22_2>
 8008a38:	f004 041f 	and.w	r4, r4, #31
 8008a3c:	2800      	cmp	r0, #0
 8008a3e:	d03f      	beq.n	8008ac0 <??llhwc_lw_isr_0>
 8008a40:	f8df 0a50 	ldr.w	r0, [pc, #2640]	; 8009494 <??DataTable21_4>
 8008a44:	6801      	ldr	r1, [r0, #0]
 8008a46:	f04f 0902 	mov.w	r9, #2
 8008a4a:	0849      	lsrs	r1, r1, #1
 8008a4c:	0049      	lsls	r1, r1, #1
 8008a4e:	6001      	str	r1, [r0, #0]
 8008a50:	6802      	ldr	r2, [r0, #0]
 8008a52:	f042 0280 	orr.w	r2, r2, #128	; 0x80
 8008a56:	6002      	str	r2, [r0, #0]
 8008a58:	6801      	ldr	r1, [r0, #0]
 8008a5a:	f021 0180 	bic.w	r1, r1, #128	; 0x80
 8008a5e:	6001      	str	r1, [r0, #0]
 8008a60:	201a      	movs	r0, #26
 8008a62:	f7f7 fbe5 	bl	8000230 <bsp_debug_gpio_toggle>
 8008a66:	2100      	movs	r1, #0
 8008a68:	f8df 0c2c 	ldr.w	r0, [pc, #3116]	; 8009698 <??DataTable22_3>
 8008a6c:	7001      	strb	r1, [r0, #0]
 8008a6e:	2200      	movs	r2, #0
 8008a70:	703a      	strb	r2, [r7, #0]
 8008a72:	4688      	mov	r8, r1
 8008a74:	4627      	mov	r7, r4
 8008a76:	e9c5 8900 	strd	r8, r9, [r5]
 8008a7a:	2f15      	cmp	r7, #21
 8008a7c:	bfb4      	ite	lt
 8008a7e:	2001      	movlt	r0, #1
 8008a80:	2000      	movge	r0, #0
 8008a82:	f7f7 fba5 	bl	80001d0 <bsp_assert>
 8008a86:	f885 8013 	strb.w	r8, [r5, #19]
 8008a8a:	f8df 1c10 	ldr.w	r1, [pc, #3088]	; 800969c <??DataTable22_4>
 8008a8e:	f851 0027 	ldr.w	r0, [r1, r7, lsl #2]
 8008a92:	4780      	blx	r0
 8008a94:	e9d5 2300 	ldrd	r2, r3, [r5]
 8008a98:	2b02      	cmp	r3, #2
 8008a9a:	bf08      	it	eq
 8008a9c:	2a00      	cmpeq	r2, #0
 8008a9e:	d103      	bne.n	8008aa8 <??llhwc_lw_isr_1>
 8008aa0:	2100      	movs	r1, #0
 8008aa2:	2001      	movs	r0, #1
 8008aa4:	f005 f9e7 	bl	800de76 <llhwc_phy_strt_stp>

08008aa8 <??llhwc_lw_isr_1>:
 8008aa8:	e9d5 0100 	ldrd	r0, r1, [r5]
 8008aac:	2902      	cmp	r1, #2
 8008aae:	bf02      	ittt	eq
 8008ab0:	2800      	cmpeq	r0, #0
 8008ab2:	2100      	moveq	r1, #0
 8008ab4:	f004 fe3a 	bleq	800d72c <llhwc_cmn_control_aclk>
 8008ab8:	6f30      	ldr	r0, [r6, #112]	; 0x70
 8008aba:	f020 0008 	bic.w	r0, r0, #8
 8008abe:	6730      	str	r0, [r6, #112]	; 0x70

08008ac0 <??llhwc_lw_isr_0>:
 8008ac0:	7d28      	ldrb	r0, [r5, #20]
 8008ac2:	2802      	cmp	r0, #2
 8008ac4:	d10b      	bne.n	8008ade <??llhwc_lw_isr_2>
 8008ac6:	6eb0      	ldr	r0, [r6, #104]	; 0x68
 8008ac8:	f3c0 00c0 	ubfx	r0, r0, #3, #1
 8008acc:	b158      	cbz	r0, 8008ae6 <??llhwc_lw_isr_3>
 8008ace:	2000      	movs	r0, #0
 8008ad0:	f8df 1bc4 	ldr.w	r1, [pc, #3012]	; 8009698 <??DataTable22_3>
 8008ad4:	7008      	strb	r0, [r1, #0]
 8008ad6:	4620      	mov	r0, r4
 8008ad8:	f000 f822 	bl	8008b20 <llhwc_sm_done_isr>
 8008adc:	e003      	b.n	8008ae6 <??llhwc_lw_isr_3>

08008ade <??llhwc_lw_isr_2>:
 8008ade:	2000      	movs	r0, #0
 8008ae0:	f8df 18dc 	ldr.w	r1, [pc, #2268]	; 80093c0 <??DataTable20_4>
 8008ae4:	7088      	strb	r0, [r1, #2]

08008ae6 <??llhwc_lw_isr_3>:
 8008ae6:	f8df 0bb0 	ldr.w	r0, [pc, #2992]	; 8009698 <??DataTable22_3>
 8008aea:	7801      	ldrb	r1, [r0, #0]
 8008aec:	f8df 28d0 	ldr.w	r2, [pc, #2256]	; 80093c0 <??DataTable20_4>
 8008af0:	7850      	ldrb	r0, [r2, #1]
 8008af2:	2801      	cmp	r0, #1
 8008af4:	bf04      	itt	eq
 8008af6:	7f28      	ldrbeq	r0, [r5, #28]
 8008af8:	2800      	cmpeq	r0, #0
 8008afa:	d10f      	bne.n	8008b1c <??llhwc_lw_isr_4>
 8008afc:	2001      	movs	r0, #1
 8008afe:	f7fa fa67 	bl	8002fd0 <evnt_util_set_prdc_clbr_exce_state>
 8008b02:	e002      	b.n	8008b0a <??llhwc_lw_isr_5>

08008b04 <??llhwc_lw_isr_6>:
 8008b04:	2000      	movs	r0, #0
 8008b06:	f7f7 fcb6 	bl	8000476 <emngr_handle_event>

08008b0a <??llhwc_lw_isr_5>:
 8008b0a:	2000      	movs	r0, #0
 8008b0c:	f7f7 fc70 	bl	80003f0 <emngr_get_handle_events>
 8008b10:	2800      	cmp	r0, #0
 8008b12:	d1f7      	bne.n	8008b04 <??llhwc_lw_isr_6>
 8008b14:	e8bd 43f2 	ldmia.w	sp!, {r1, r4, r5, r6, r7, r8, r9, lr}
 8008b18:	f7fa ba5a 	b.w	8002fd0 <evnt_util_set_prdc_clbr_exce_state>

08008b1c <??llhwc_lw_isr_4>:
 8008b1c:	e8bd 83f1 	ldmia.w	sp!, {r0, r4, r5, r6, r7, r8, r9, pc}

08008b20 <llhwc_sm_done_isr>:
 8008b20:	b538      	push	{r3, r4, r5, lr}
 8008b22:	4605      	mov	r5, r0
 8008b24:	f8df 096c 	ldr.w	r0, [pc, #2412]	; 8009494 <??DataTable21_4>
 8008b28:	6801      	ldr	r1, [r0, #0]
 8008b2a:	0849      	lsrs	r1, r1, #1
 8008b2c:	0049      	lsls	r1, r1, #1
 8008b2e:	6001      	str	r1, [r0, #0]
 8008b30:	2d15      	cmp	r5, #21
 8008b32:	bfb4      	ite	lt
 8008b34:	2001      	movlt	r0, #1
 8008b36:	2000      	movge	r0, #0
 8008b38:	f7f7 fb4a 	bl	80001d0 <bsp_assert>
 8008b3c:	f8df 4870 	ldr.w	r4, [pc, #2160]	; 80093b0 <??DataTable20>
 8008b40:	2000      	movs	r0, #0
 8008b42:	2102      	movs	r1, #2
 8008b44:	e9c4 0108 	strd	r0, r1, [r4, #32]
 8008b48:	f8df 2b50 	ldr.w	r2, [pc, #2896]	; 800969c <??DataTable22_4>
 8008b4c:	f852 0025 	ldr.w	r0, [r2, r5, lsl #2]
 8008b50:	4780      	blx	r0
 8008b52:	e9d4 2308 	ldrd	r2, r3, [r4, #32]
 8008b56:	2b02      	cmp	r3, #2
 8008b58:	bf08      	it	eq
 8008b5a:	2a00      	cmpeq	r2, #0
 8008b5c:	d106      	bne.n	8008b6c <??llhwc_sm_done_isr_0>
 8008b5e:	6920      	ldr	r0, [r4, #16]
 8008b60:	b120      	cbz	r0, 8008b6c <??llhwc_sm_done_isr_0>
 8008b62:	f894 1033 	ldrb.w	r1, [r4, #51]	; 0x33
 8008b66:	2901      	cmp	r1, #1
 8008b68:	bf08      	it	eq
 8008b6a:	4780      	blxeq	r0

08008b6c <??llhwc_sm_done_isr_0>:
 8008b6c:	e9d4 0108 	ldrd	r0, r1, [r4, #32]
 8008b70:	2902      	cmp	r1, #2
 8008b72:	bf08      	it	eq
 8008b74:	2800      	cmpeq	r0, #0
 8008b76:	d103      	bne.n	8008b80 <??llhwc_sm_done_isr_1>
 8008b78:	2100      	movs	r1, #0
 8008b7a:	2001      	movs	r0, #1
 8008b7c:	f005 f97b 	bl	800de76 <llhwc_phy_strt_stp>

08008b80 <??llhwc_sm_done_isr_1>:
 8008b80:	e9d4 0108 	ldrd	r0, r1, [r4, #32]
 8008b84:	2902      	cmp	r1, #2
 8008b86:	bf02      	ittt	eq
 8008b88:	2800      	cmpeq	r0, #0
 8008b8a:	2100      	moveq	r1, #0
 8008b8c:	f004 fdce 	bleq	800d72c <llhwc_cmn_control_aclk>
 8008b90:	f8df 0b0c 	ldr.w	r0, [pc, #2828]	; 80096a0 <??DataTable22_5>
 8008b94:	6801      	ldr	r1, [r0, #0]
 8008b96:	f041 0108 	orr.w	r1, r1, #8
 8008b9a:	6001      	str	r1, [r0, #0]
 8008b9c:	6802      	ldr	r2, [r0, #0]
 8008b9e:	f8df 18e8 	ldr.w	r1, [pc, #2280]	; 8009488 <??DataTable21_1>
 8008ba2:	f022 0208 	bic.w	r2, r2, #8
 8008ba6:	6002      	str	r2, [r0, #0]
 8008ba8:	6e4a      	ldr	r2, [r1, #100]	; 0x64
 8008baa:	07d3      	lsls	r3, r2, #31
 8008bac:	d403      	bmi.n	8008bb6 <??llhwc_sm_done_isr_2>
 8008bae:	6842      	ldr	r2, [r0, #4]
 8008bb0:	f022 0208 	bic.w	r2, r2, #8
 8008bb4:	6042      	str	r2, [r0, #4]

08008bb6 <??llhwc_sm_done_isr_2>:
 8008bb6:	680a      	ldr	r2, [r1, #0]
 8008bb8:	0852      	lsrs	r2, r2, #1
 8008bba:	0052      	lsls	r2, r2, #1
 8008bbc:	600a      	str	r2, [r1, #0]
 8008bbe:	6801      	ldr	r1, [r0, #0]
 8008bc0:	f041 0104 	orr.w	r1, r1, #4
 8008bc4:	6001      	str	r1, [r0, #0]
 8008bc6:	6802      	ldr	r2, [r0, #0]
 8008bc8:	f022 0204 	bic.w	r2, r2, #4
 8008bcc:	6002      	str	r2, [r0, #0]
 8008bce:	bd31      	pop	{r0, r4, r5, pc}

08008bd0 <llhwc_ble_wait_for_evnt_on_air>:
 8008bd0:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8008bd4:	b08c      	sub	sp, #48	; 0x30
 8008bd6:	2000      	movs	r0, #0
 8008bd8:	f88d 0004 	strb.w	r0, [sp, #4]
 8008bdc:	f8df 57d8 	ldr.w	r5, [pc, #2008]	; 80093b8 <??DataTable20_2>
 8008be0:	6f28      	ldr	r0, [r5, #112]	; 0x70
 8008be2:	f8df a7cc 	ldr.w	sl, [pc, #1996]	; 80093b0 <??DataTable20>
 8008be6:	f04f 0800 	mov.w	r8, #0
 8008bea:	f040 0008 	orr.w	r0, r0, #8
 8008bee:	6728      	str	r0, [r5, #112]	; 0x70
 8008bf0:	e9da 0108 	ldrd	r0, r1, [sl, #32]
 8008bf4:	2900      	cmp	r1, #0
 8008bf6:	bf08      	it	eq
 8008bf8:	2810      	cmpeq	r0, #16
 8008bfa:	d019      	beq.n	8008c30 <??llhwc_ble_wait_for_evnt_on_air_0>
 8008bfc:	e9da 0108 	ldrd	r0, r1, [sl, #32]
 8008c00:	2900      	cmp	r1, #0
 8008c02:	bf08      	it	eq
 8008c04:	2820      	cmpeq	r0, #32
 8008c06:	d013      	beq.n	8008c30 <??llhwc_ble_wait_for_evnt_on_air_0>
 8008c08:	e9da 0108 	ldrd	r0, r1, [sl, #32]
 8008c0c:	2900      	cmp	r1, #0
 8008c0e:	bf08      	it	eq
 8008c10:	2840      	cmpeq	r0, #64	; 0x40
 8008c12:	d00d      	beq.n	8008c30 <??llhwc_ble_wait_for_evnt_on_air_0>
 8008c14:	e9da 0108 	ldrd	r0, r1, [sl, #32]
 8008c18:	2900      	cmp	r1, #0
 8008c1a:	bf08      	it	eq
 8008c1c:	f5b0 3f00 	cmpeq.w	r0, #131072	; 0x20000
 8008c20:	d006      	beq.n	8008c30 <??llhwc_ble_wait_for_evnt_on_air_0>
 8008c22:	e9da 0108 	ldrd	r0, r1, [sl, #32]
 8008c26:	2900      	cmp	r1, #0
 8008c28:	bf08      	it	eq
 8008c2a:	f5b0 2f80 	cmpeq.w	r0, #262144	; 0x40000
 8008c2e:	d101      	bne.n	8008c34 <??llhwc_ble_wait_for_evnt_on_air_1>

08008c30 <??llhwc_ble_wait_for_evnt_on_air_0>:
 8008c30:	f001 fdba 	bl	800a7a8 <llhwc_stop_scan>

08008c34 <??llhwc_ble_wait_for_evnt_on_air_1>:
 8008c34:	e9da 0108 	ldrd	r0, r1, [sl, #32]
 8008c38:	f10a 0630 	add.w	r6, sl, #48	; 0x30
 8008c3c:	2902      	cmp	r1, #2
 8008c3e:	bf08      	it	eq
 8008c40:	2800      	cmpeq	r0, #0
 8008c42:	f000 81fc 	beq.w	800903e <??llhwc_ble_wait_for_evnt_on_air_2>
 8008c46:	2201      	movs	r2, #1
 8008c48:	7332      	strb	r2, [r6, #12]
 8008c4a:	f886 8003 	strb.w	r8, [r6, #3]
 8008c4e:	f8cd 8000 	str.w	r8, [sp]
 8008c52:	2303      	movs	r3, #3
 8008c54:	2208      	movs	r2, #8
 8008c56:	f640 0174 	movw	r1, #2164	; 0x874
 8008c5a:	f44f 30e0 	mov.w	r0, #114688	; 0x1c000
 8008c5e:	f003 fb5c 	bl	800c31a <llhwc_polling>
 8008c62:	ea5f 0800 	movs.w	r8, r0
 8008c66:	f040 81ea 	bne.w	800903e <??llhwc_ble_wait_for_evnt_on_air_2>
 8008c6a:	f004 fed3 	bl	800da14 <llhwc_phy_is_phy_driver_busy>
 8008c6e:	2801      	cmp	r0, #1
 8008c70:	d119      	bne.n	8008ca6 <??llhwc_ble_wait_for_evnt_on_air_3>
 8008c72:	2000      	movs	r0, #0
 8008c74:	9000      	str	r0, [sp, #0]
 8008c76:	2300      	movs	r3, #0
 8008c78:	2201      	movs	r2, #1
 8008c7a:	f44f 6188 	mov.w	r1, #1088	; 0x440
 8008c7e:	f44f 30e0 	mov.w	r0, #114688	; 0x1c000
 8008c82:	f003 fb4a 	bl	800c31a <llhwc_polling>
 8008c86:	ea5f 0800 	movs.w	r8, r0
 8008c8a:	f040 81d8 	bne.w	800903e <??llhwc_ble_wait_for_evnt_on_air_2>
 8008c8e:	f8df 07f8 	ldr.w	r0, [pc, #2040]	; 8009488 <??DataTable21_1>
 8008c92:	6c01      	ldr	r1, [r0, #64]	; 0x40
 8008c94:	f041 0101 	orr.w	r1, r1, #1
 8008c98:	6401      	str	r1, [r0, #64]	; 0x40
 8008c9a:	6c01      	ldr	r1, [r0, #64]	; 0x40
 8008c9c:	0849      	lsrs	r1, r1, #1
 8008c9e:	0049      	lsls	r1, r1, #1
 8008ca0:	6401      	str	r1, [r0, #64]	; 0x40
 8008ca2:	f004 ff39 	bl	800db18 <llhwc_phy_phy_driver_stop>

08008ca6 <??llhwc_ble_wait_for_evnt_on_air_3>:
 8008ca6:	f003 fd4b 	bl	800c740 <ll_cmn_clr_isr>
 8008caa:	7930      	ldrb	r0, [r6, #4]
 8008cac:	2801      	cmp	r0, #1
 8008cae:	f040 8152 	bne.w	8008f56 <??llhwc_ble_wait_for_evnt_on_air_4>
 8008cb2:	f00b fbd0 	bl	8014456 <os_disable_isr>
 8008cb6:	682c      	ldr	r4, [r5, #0]
 8008cb8:	2001      	movs	r0, #1
 8008cba:	2100      	movs	r1, #0
 8008cbc:	f004 041f 	and.w	r4, r4, #31
 8008cc0:	4622      	mov	r2, r4
 8008cc2:	f01c faf1 	bl	80252a8 <__aeabi_llsl>
 8008cc6:	7932      	ldrb	r2, [r6, #4]
 8008cc8:	e9cd 0108 	strd	r0, r1, [sp, #32]
 8008ccc:	2a01      	cmp	r2, #1
 8008cce:	d10e      	bne.n	8008cee <??llhwc_ble_wait_for_evnt_on_air_5>
 8008cd0:	6ea8      	ldr	r0, [r5, #104]	; 0x68
 8008cd2:	f3c0 00c0 	ubfx	r0, r0, #3, #1
 8008cd6:	b150      	cbz	r0, 8008cee <??llhwc_ble_wait_for_evnt_on_air_5>
 8008cd8:	2000      	movs	r0, #0
 8008cda:	f8df 16e0 	ldr.w	r1, [pc, #1760]	; 80093bc <??DataTable20_3>
 8008cde:	7008      	strb	r0, [r1, #0]
 8008ce0:	4620      	mov	r0, r4
 8008ce2:	f7ff ff1d 	bl	8008b20 <llhwc_sm_done_isr>
 8008ce6:	2002      	movs	r0, #2
 8008ce8:	f8df 16d4 	ldr.w	r1, [pc, #1748]	; 80093c0 <??DataTable20_4>
 8008cec:	7088      	strb	r0, [r1, #2]

08008cee <??llhwc_ble_wait_for_evnt_on_air_5>:
 8008cee:	6ea8      	ldr	r0, [r5, #104]	; 0x68
 8008cf0:	f3c0 0080 	ubfx	r0, r0, #2, #1
 8008cf4:	2800      	cmp	r0, #0
 8008cf6:	f000 812b 	beq.w	8008f50 <??llhwc_ble_wait_for_evnt_on_air_6>
 8008cfa:	2000      	movs	r0, #0
 8008cfc:	f8df 16bc 	ldr.w	r1, [pc, #1724]	; 80093bc <??DataTable20_3>
 8008d00:	7008      	strb	r0, [r1, #0]
 8008d02:	f8df 4784 	ldr.w	r4, [pc, #1924]	; 8009488 <??DataTable21_1>
 8008d06:	6822      	ldr	r2, [r4, #0]
 8008d08:	0852      	lsrs	r2, r2, #1
 8008d0a:	0052      	lsls	r2, r2, #1
 8008d0c:	6022      	str	r2, [r4, #0]
 8008d0e:	e9dd 0108 	ldrd	r0, r1, [sp, #32]
 8008d12:	2900      	cmp	r1, #0
 8008d14:	bf08      	it	eq
 8008d16:	2840      	cmpeq	r0, #64	; 0x40
 8008d18:	d154      	bne.n	8008dc4 <??llhwc_ble_wait_for_evnt_on_air_7>
 8008d1a:	f8df 9500 	ldr.w	r9, [pc, #1280]	; 800921c <??DataTable19_1>
 8008d1e:	f109 0732 	add.w	r7, r9, #50	; 0x32
 8008d22:	f897 b001 	ldrb.w	fp, [r7, #1]
 8008d26:	f1bb 0f04 	cmp.w	fp, #4
 8008d2a:	d10c      	bne.n	8008d46 <??llhwc_ble_wait_for_evnt_on_air_8>
 8008d2c:	f8df 04e8 	ldr.w	r0, [pc, #1256]	; 8009218 <??DataTable19>
 8008d30:	69c1      	ldr	r1, [r0, #28]
 8008d32:	f8df 075c 	ldr.w	r0, [pc, #1884]	; 8009490 <??DataTable21_3>
 8008d36:	eb00 4011 	add.w	r0, r0, r1, lsr #16
 8008d3a:	6802      	ldr	r2, [r0, #0]
 8008d3c:	f3c2 60c0 	ubfx	r0, r2, #27, #1
 8008d40:	b908      	cbnz	r0, 8008d46 <??llhwc_ble_wait_for_evnt_on_air_8>
 8008d42:	f04f 0b03 	mov.w	fp, #3

08008d46 <??llhwc_ble_wait_for_evnt_on_air_8>:
 8008d46:	2002      	movs	r0, #2
 8008d48:	f7f7 fa2b 	bl	80001a2 <bsp_delay_us>
 8008d4c:	6de1      	ldr	r1, [r4, #92]	; 0x5c
 8008d4e:	f8d9 0018 	ldr.w	r0, [r9, #24]
 8008d52:	f8d9 2010 	ldr.w	r2, [r9, #16]
 8008d56:	4282      	cmp	r2, r0
 8008d58:	bf39      	ittee	cc
 8008d5a:	1a09      	subcc	r1, r1, r0
 8008d5c:	1851      	addcc	r1, r2, r1
 8008d5e:	1851      	addcs	r1, r2, r1
 8008d60:	1a09      	subcs	r1, r1, r0
 8008d62:	f8df 24bc 	ldr.w	r2, [pc, #1212]	; 8009220 <??DataTable19_2>
 8008d66:	465b      	mov	r3, fp
 8008d68:	f832 0013 	ldrh.w	r0, [r2, r3, lsl #1]
 8008d6c:	f8df 34b4 	ldr.w	r3, [pc, #1204]	; 8009224 <??DataTable19_3>
 8008d70:	f8d9 e00c 	ldr.w	lr, [r9, #12]
 8008d74:	1a09      	subs	r1, r1, r0
 8008d76:	ea4f 0c81 	mov.w	ip, r1, lsl #2
 8008d7a:	fbac 3203 	umull	r3, r2, ip, r3
 8008d7e:	0992      	lsrs	r2, r2, #6
 8008d80:	ebc2 1042 	rsb	r0, r2, r2, lsl #5
 8008d84:	4496      	add	lr, r2
 8008d86:	f8cd e028 	str.w	lr, [sp, #40]	; 0x28
 8008d8a:	1a09      	subs	r1, r1, r0
 8008d8c:	eba1 0192 	sub.w	r1, r1, r2, lsr #2
 8008d90:	69b0      	ldr	r0, [r6, #24]
 8008d92:	465a      	mov	r2, fp
 8008d94:	910b      	str	r1, [sp, #44]	; 0x2c
 8008d96:	7831      	ldrb	r1, [r6, #0]
 8008d98:	9001      	str	r0, [sp, #4]
 8008d9a:	a80a      	add	r0, sp, #40	; 0x28
 8008d9c:	9100      	str	r1, [sp, #0]
 8008d9e:	783b      	ldrb	r3, [r7, #0]
 8008da0:	a907      	add	r1, sp, #28
 8008da2:	f008 fadd 	bl	8011360 <evnt_schdlr_update_master_conn_params>
 8008da6:	6a71      	ldr	r1, [r6, #36]	; 0x24
 8008da8:	f8df 06e8 	ldr.w	r0, [pc, #1768]	; 8009494 <??DataTable21_4>
 8008dac:	1841      	adds	r1, r0, r1
 8008dae:	9807      	ldr	r0, [sp, #28]
 8008db0:	680a      	ldr	r2, [r1, #0]
 8008db2:	f360 020f 	bfi	r2, r0, #0, #16
 8008db6:	600a      	str	r2, [r1, #0]
 8008db8:	f89a 001a 	ldrb.w	r0, [sl, #26]
 8008dbc:	2801      	cmp	r0, #1
 8008dbe:	f040 80bf 	bne.w	8008f40 <??llhwc_ble_wait_for_evnt_on_air_9>
 8008dc2:	e009      	b.n	8008dd8 <??llhwc_ble_wait_for_evnt_on_air_10>

08008dc4 <??llhwc_ble_wait_for_evnt_on_air_7>:
 8008dc4:	2900      	cmp	r1, #0
 8008dc6:	bf08      	it	eq
 8008dc8:	2810      	cmpeq	r0, #16
 8008dca:	d005      	beq.n	8008dd8 <??llhwc_ble_wait_for_evnt_on_air_10>
 8008dcc:	2900      	cmp	r1, #0
 8008dce:	bf08      	it	eq
 8008dd0:	f5b0 5f00 	cmpeq.w	r0, #8192	; 0x2000
 8008dd4:	f040 80b4 	bne.w	8008f40 <??llhwc_ble_wait_for_evnt_on_air_9>

08008dd8 <??llhwc_ble_wait_for_evnt_on_air_10>:
 8008dd8:	f8df 443c 	ldr.w	r4, [pc, #1084]	; 8009218 <??DataTable19>
 8008ddc:	69e0      	ldr	r0, [r4, #28]
 8008dde:	f8df 96b0 	ldr.w	r9, [pc, #1712]	; 8009490 <??DataTable21_3>
 8008de2:	0c01      	lsrs	r1, r0, #16
 8008de4:	1d09      	adds	r1, r1, #4
 8008de6:	eb09 0201 	add.w	r2, r9, r1
 8008dea:	f8d2 c000 	ldr.w	ip, [r2]
 8008dee:	6813      	ldr	r3, [r2, #0]
 8008df0:	f00c 0c0f 	and.w	ip, ip, #15
 8008df4:	f1bc 0f01 	cmp.w	ip, #1
 8008df8:	f3c3 1380 	ubfx	r3, r3, #6, #1
 8008dfc:	d966      	bls.n	8008ecc <??llhwc_ble_wait_for_evnt_on_air_11>
 8008dfe:	f1bc 0c05 	subs.w	ip, ip, #5
 8008e02:	d003      	beq.n	8008e0c <??llhwc_ble_wait_for_evnt_on_air_12>
 8008e04:	f1bc 0c01 	subs.w	ip, ip, #1
 8008e08:	d060      	beq.n	8008ecc <??llhwc_ble_wait_for_evnt_on_air_11>
 8008e0a:	e069      	b.n	8008ee0 <??llhwc_ble_wait_for_evnt_on_air_13>

08008e0c <??llhwc_ble_wait_for_evnt_on_air_12>:
 8008e0c:	6812      	ldr	r2, [r2, #0]
 8008e0e:	f8df a688 	ldr.w	sl, [pc, #1672]	; 8009498 <??DataTable21_5>
 8008e12:	f8df 4688 	ldr.w	r4, [pc, #1672]	; 800949c <??DataTable21_6>
 8008e16:	f85a e001 	ldr.w	lr, [sl, r1]
 8008e1a:	eb04 0c01 	add.w	ip, r4, r1
 8008e1e:	b280      	uxth	r0, r0
 8008e20:	f8cd e014 	str.w	lr, [sp, #20]
 8008e24:	f8dc 7000 	ldr.w	r7, [ip]
 8008e28:	f10d 0e14 	add.w	lr, sp, #20
 8008e2c:	f3c2 12c0 	ubfx	r2, r2, #7, #1
 8008e30:	b2bf      	uxth	r7, r7
 8008e32:	f8ce 7004 	str.w	r7, [lr, #4]
 8008e36:	f8dc b000 	ldr.w	fp, [ip]
 8008e3a:	f8df c658 	ldr.w	ip, [pc, #1624]	; 8009494 <??DataTable21_4>
 8008e3e:	af03      	add	r7, sp, #12
 8008e40:	ea4f 4b1b 	mov.w	fp, fp, lsr #16
 8008e44:	f8cd b00c 	str.w	fp, [sp, #12]
 8008e48:	f85c 1001 	ldr.w	r1, [ip, r1]
 8008e4c:	6079      	str	r1, [r7, #4]
 8008e4e:	f8b7 b004 	ldrh.w	fp, [r7, #4]
 8008e52:	f8a7 b002 	strh.w	fp, [r7, #2]
 8008e56:	88f9      	ldrh	r1, [r7, #6]
 8008e58:	80b9      	strh	r1, [r7, #4]
 8008e5a:	f859 1000 	ldr.w	r1, [r9, r0]
 8008e5e:	b289      	uxth	r1, r1
 8008e60:	448a      	add	sl, r1
 8008e62:	f8da 0000 	ldr.w	r0, [sl]
 8008e66:	1864      	adds	r4, r4, r1
 8008e68:	448c      	add	ip, r1
 8008e6a:	f020 0040 	bic.w	r0, r0, #64	; 0x40
 8008e6e:	ea40 1082 	orr.w	r0, r0, r2, lsl #6
 8008e72:	f8ca 0000 	str.w	r0, [sl]
 8008e76:	f8da 0000 	ldr.w	r0, [sl]
 8008e7a:	f020 0080 	bic.w	r0, r0, #128	; 0x80
 8008e7e:	ea40 10c3 	orr.w	r0, r0, r3, lsl #7
 8008e82:	f8ca 0000 	str.w	r0, [sl]
 8008e86:	9803      	ldr	r0, [sp, #12]
 8008e88:	6822      	ldr	r2, [r4, #0]
 8008e8a:	f360 421f 	bfi	r2, r0, #16, #16
 8008e8e:	6022      	str	r2, [r4, #0]
 8008e90:	8878      	ldrh	r0, [r7, #2]
 8008e92:	f8dc 2000 	ldr.w	r2, [ip]
 8008e96:	f360 020f 	bfi	r2, r0, #0, #16
 8008e9a:	f8cc 2000 	str.w	r2, [ip]
 8008e9e:	88b8      	ldrh	r0, [r7, #4]
 8008ea0:	f8dc 2000 	ldr.w	r2, [ip]
 8008ea4:	f360 421f 	bfi	r2, r0, #16, #16
 8008ea8:	f8df 07e0 	ldr.w	r0, [pc, #2016]	; 800968c <??DataTable22>
 8008eac:	f8cc 2000 	str.w	r2, [ip]
 8008eb0:	1840      	adds	r0, r0, r1
 8008eb2:	6803      	ldr	r3, [r0, #0]
 8008eb4:	9a05      	ldr	r2, [sp, #20]
 8008eb6:	6002      	str	r2, [r0, #0]
 8008eb8:	f8df 07d4 	ldr.w	r0, [pc, #2004]	; 8009690 <??DataTable22_1>
 8008ebc:	1841      	adds	r1, r0, r1
 8008ebe:	f8de 0004 	ldr.w	r0, [lr, #4]
 8008ec2:	680a      	ldr	r2, [r1, #0]
 8008ec4:	f360 020f 	bfi	r2, r0, #0, #16
 8008ec8:	600a      	str	r2, [r1, #0]
 8008eca:	e039      	b.n	8008f40 <??llhwc_ble_wait_for_evnt_on_air_9>

08008ecc <??llhwc_ble_wait_for_evnt_on_air_11>:
 8008ecc:	f8df e5c8 	ldr.w	lr, [pc, #1480]	; 8009498 <??DataTable21_5>
 8008ed0:	f85e 7001 	ldr.w	r7, [lr, r1]
 8008ed4:	f8df 05c4 	ldr.w	r0, [pc, #1476]	; 800949c <??DataTable21_6>
 8008ed8:	9705      	str	r7, [sp, #20]
 8008eda:	5841      	ldr	r1, [r0, r1]
 8008edc:	b289      	uxth	r1, r1
 8008ede:	9106      	str	r1, [sp, #24]

08008ee0 <??llhwc_ble_wait_for_evnt_on_air_13>:
 8008ee0:	a802      	add	r0, sp, #8
 8008ee2:	a903      	add	r1, sp, #12
 8008ee4:	9001      	str	r0, [sp, #4]
 8008ee6:	9100      	str	r1, [sp, #0]
 8008ee8:	e9dd 0108 	ldrd	r0, r1, [sp, #32]
 8008eec:	aa05      	add	r2, sp, #20
 8008eee:	f008 fbcc 	bl	801168a <non_conn_mngr_interrupt>
 8008ef2:	f88a 0019 	strb.w	r0, [sl, #25]
 8008ef6:	2801      	cmp	r0, #1
 8008ef8:	bf02      	ittt	eq
 8008efa:	e9dd 0108 	ldrdeq	r0, r1, [sp, #32]
 8008efe:	2900      	cmpeq	r1, #0
 8008f00:	2810      	cmpeq	r0, #16
 8008f02:	d106      	bne.n	8008f12 <??llhwc_ble_wait_for_evnt_on_air_14>
 8008f04:	6920      	ldr	r0, [r4, #16]
 8008f06:	0c80      	lsrs	r0, r0, #18
 8008f08:	f000 0003 	and.w	r0, r0, #3
 8008f0c:	1c40      	adds	r0, r0, #1
 8008f0e:	f005 fc59 	bl	800e7c4 <llhwc_phy_deactivate_scan_req>

08008f12 <??llhwc_ble_wait_for_evnt_on_air_14>:
 8008f12:	9803      	ldr	r0, [sp, #12]
 8008f14:	61e8      	str	r0, [r5, #28]
 8008f16:	9804      	ldr	r0, [sp, #16]
 8008f18:	69a9      	ldr	r1, [r5, #24]
 8008f1a:	f360 010f 	bfi	r1, r0, #0, #16
 8008f1e:	61a9      	str	r1, [r5, #24]
 8008f20:	e9da 0108 	ldrd	r0, r1, [sl, #32]
 8008f24:	2900      	cmp	r1, #0
 8008f26:	bf08      	it	eq
 8008f28:	2820      	cmpeq	r0, #32
 8008f2a:	d009      	beq.n	8008f40 <??llhwc_ble_wait_for_evnt_on_air_9>
 8008f2c:	69e0      	ldr	r0, [r4, #28]
 8008f2e:	f89d 1008 	ldrb.w	r1, [sp, #8]
 8008f32:	b280      	uxth	r0, r0
 8008f34:	1d00      	adds	r0, r0, #4
 8008f36:	4448      	add	r0, r9
 8008f38:	6802      	ldr	r2, [r0, #0]
 8008f3a:	f361 1286 	bfi	r2, r1, #6, #1
 8008f3e:	6002      	str	r2, [r0, #0]

08008f40 <??llhwc_ble_wait_for_evnt_on_air_9>:
 8008f40:	6ee8      	ldr	r0, [r5, #108]	; 0x6c
 8008f42:	f040 0004 	orr.w	r0, r0, #4
 8008f46:	66e8      	str	r0, [r5, #108]	; 0x6c
 8008f48:	6ee8      	ldr	r0, [r5, #108]	; 0x6c
 8008f4a:	f020 0004 	bic.w	r0, r0, #4
 8008f4e:	66e8      	str	r0, [r5, #108]	; 0x6c

08008f50 <??llhwc_ble_wait_for_evnt_on_air_6>:
 8008f50:	f00b fa83 	bl	801445a <os_enable_isr>
 8008f54:	e073      	b.n	800903e <??llhwc_ble_wait_for_evnt_on_air_2>

08008f56 <??llhwc_ble_wait_for_evnt_on_air_4>:
 8008f56:	2802      	cmp	r0, #2
 8008f58:	d171      	bne.n	800903e <??llhwc_ble_wait_for_evnt_on_air_2>
 8008f5a:	682c      	ldr	r4, [r5, #0]
 8008f5c:	f89d 0004 	ldrb.w	r0, [sp, #4]
 8008f60:	f004 041f 	and.w	r4, r4, #31
 8008f64:	2800      	cmp	r0, #0
 8008f66:	d042      	beq.n	8008fee <??llhwc_ble_wait_for_evnt_on_air_15>
 8008f68:	f8df 0528 	ldr.w	r0, [pc, #1320]	; 8009494 <??DataTable21_4>
 8008f6c:	6801      	ldr	r1, [r0, #0]
 8008f6e:	2700      	movs	r7, #0
 8008f70:	f04f 0b02 	mov.w	fp, #2
 8008f74:	0849      	lsrs	r1, r1, #1
 8008f76:	0049      	lsls	r1, r1, #1
 8008f78:	6001      	str	r1, [r0, #0]
 8008f7a:	6802      	ldr	r2, [r0, #0]
 8008f7c:	46a1      	mov	r9, r4
 8008f7e:	f042 0280 	orr.w	r2, r2, #128	; 0x80
 8008f82:	6002      	str	r2, [r0, #0]
 8008f84:	6801      	ldr	r1, [r0, #0]
 8008f86:	f021 0180 	bic.w	r1, r1, #128	; 0x80
 8008f8a:	6001      	str	r1, [r0, #0]
 8008f8c:	201a      	movs	r0, #26
 8008f8e:	f7f7 f94f 	bl	8000230 <bsp_debug_gpio_toggle>
 8008f92:	2000      	movs	r0, #0
 8008f94:	f8df 1700 	ldr.w	r1, [pc, #1792]	; 8009698 <??DataTable22_3>
 8008f98:	7008      	strb	r0, [r1, #0]
 8008f9a:	2200      	movs	r2, #0
 8008f9c:	f88d 2004 	strb.w	r2, [sp, #4]
 8008fa0:	e9ca 7b08 	strd	r7, fp, [sl, #32]
 8008fa4:	f1b9 0f15 	cmp.w	r9, #21
 8008fa8:	bfb8      	it	lt
 8008faa:	2001      	movlt	r0, #1
 8008fac:	f7f7 f910 	bl	80001d0 <bsp_assert>
 8008fb0:	70f7      	strb	r7, [r6, #3]
 8008fb2:	f8df 16e8 	ldr.w	r1, [pc, #1768]	; 800969c <??DataTable22_4>
 8008fb6:	f851 0029 	ldr.w	r0, [r1, r9, lsl #2]
 8008fba:	4780      	blx	r0
 8008fbc:	e9da 2308 	ldrd	r2, r3, [sl, #32]
 8008fc0:	2b02      	cmp	r3, #2
 8008fc2:	bf08      	it	eq
 8008fc4:	2a00      	cmpeq	r2, #0
 8008fc6:	d103      	bne.n	8008fd0 <??llhwc_ble_wait_for_evnt_on_air_16>
 8008fc8:	2100      	movs	r1, #0
 8008fca:	2001      	movs	r0, #1
 8008fcc:	f004 ff53 	bl	800de76 <llhwc_phy_strt_stp>

08008fd0 <??llhwc_ble_wait_for_evnt_on_air_16>:
 8008fd0:	e9da 0108 	ldrd	r0, r1, [sl, #32]
 8008fd4:	2902      	cmp	r1, #2
 8008fd6:	bf02      	ittt	eq
 8008fd8:	2800      	cmpeq	r0, #0
 8008fda:	2100      	moveq	r1, #0
 8008fdc:	f004 fba6 	bleq	800d72c <llhwc_cmn_control_aclk>
 8008fe0:	6f28      	ldr	r0, [r5, #112]	; 0x70
 8008fe2:	f020 0008 	bic.w	r0, r0, #8
 8008fe6:	6728      	str	r0, [r5, #112]	; 0x70
 8008fe8:	7930      	ldrb	r0, [r6, #4]
 8008fea:	2802      	cmp	r0, #2
 8008fec:	d10b      	bne.n	8009006 <??llhwc_ble_wait_for_evnt_on_air_17>

08008fee <??llhwc_ble_wait_for_evnt_on_air_15>:
 8008fee:	6ea8      	ldr	r0, [r5, #104]	; 0x68
 8008ff0:	f3c0 00c0 	ubfx	r0, r0, #3, #1
 8008ff4:	b150      	cbz	r0, 800900c <??llhwc_ble_wait_for_evnt_on_air_18>
 8008ff6:	2000      	movs	r0, #0
 8008ff8:	f8df 169c 	ldr.w	r1, [pc, #1692]	; 8009698 <??DataTable22_3>
 8008ffc:	7008      	strb	r0, [r1, #0]
 8008ffe:	4620      	mov	r0, r4
 8009000:	f7ff fd8e 	bl	8008b20 <llhwc_sm_done_isr>
 8009004:	e002      	b.n	800900c <??llhwc_ble_wait_for_evnt_on_air_18>

08009006 <??llhwc_ble_wait_for_evnt_on_air_17>:
 8009006:	f8df 13b8 	ldr.w	r1, [pc, #952]	; 80093c0 <??DataTable20_4>
 800900a:	708f      	strb	r7, [r1, #2]

0800900c <??llhwc_ble_wait_for_evnt_on_air_18>:
 800900c:	f8df 0688 	ldr.w	r0, [pc, #1672]	; 8009698 <??DataTable22_3>
 8009010:	7801      	ldrb	r1, [r0, #0]
 8009012:	f8df 23ac 	ldr.w	r2, [pc, #940]	; 80093c0 <??DataTable20_4>
 8009016:	7850      	ldrb	r0, [r2, #1]
 8009018:	2801      	cmp	r0, #1
 800901a:	bf04      	itt	eq
 800901c:	7b30      	ldrbeq	r0, [r6, #12]
 800901e:	2800      	cmpeq	r0, #0
 8009020:	d10d      	bne.n	800903e <??llhwc_ble_wait_for_evnt_on_air_2>
 8009022:	2001      	movs	r0, #1
 8009024:	f7f9 ffd4 	bl	8002fd0 <evnt_util_set_prdc_clbr_exce_state>
 8009028:	e002      	b.n	8009030 <??llhwc_ble_wait_for_evnt_on_air_19>

0800902a <??llhwc_ble_wait_for_evnt_on_air_20>:
 800902a:	2000      	movs	r0, #0
 800902c:	f7f7 fa23 	bl	8000476 <emngr_handle_event>

08009030 <??llhwc_ble_wait_for_evnt_on_air_19>:
 8009030:	2000      	movs	r0, #0
 8009032:	f7f7 f9dd 	bl	80003f0 <emngr_get_handle_events>
 8009036:	2800      	cmp	r0, #0
 8009038:	d1f7      	bne.n	800902a <??llhwc_ble_wait_for_evnt_on_air_20>
 800903a:	f7f9 ffc9 	bl	8002fd0 <evnt_util_set_prdc_clbr_exce_state>

0800903e <??llhwc_ble_wait_for_evnt_on_air_2>:
 800903e:	6f28      	ldr	r0, [r5, #112]	; 0x70
 8009040:	2100      	movs	r1, #0
 8009042:	f020 0008 	bic.w	r0, r0, #8
 8009046:	6728      	str	r0, [r5, #112]	; 0x70
 8009048:	7331      	strb	r1, [r6, #12]
 800904a:	4640      	mov	r0, r8
 800904c:	e31b      	b.n	8009686 <?Subroutine0>

0800904e <llhwc_addr_rsln_en>:
 800904e:	2801      	cmp	r0, #1
 8009050:	bf0c      	ite	eq
 8009052:	2100      	moveq	r1, #0
 8009054:	f44f 4100 	movne.w	r1, #32768	; 0x8000
 8009058:	f8df 2c10 	ldr.w	r2, [pc, #3088]	; 8009c6c <??DataTable35>
 800905c:	6813      	ldr	r3, [r2, #0]
 800905e:	f423 4300 	bic.w	r3, r3, #32768	; 0x8000
 8009062:	4319      	orrs	r1, r3
 8009064:	6011      	str	r1, [r2, #0]
 8009066:	f8df 141c 	ldr.w	r1, [pc, #1052]	; 8009484 <??DataTable21>
 800906a:	7688      	strb	r0, [r1, #26]
 800906c:	4770      	bx	lr

0800906e <llhwc_reset>:
 800906e:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8009072:	4ccf      	ldr	r4, [pc, #828]	; (80093b0 <??DataTable20>)
 8009074:	b086      	sub	sp, #24
 8009076:	6925      	ldr	r5, [r4, #16]
 8009078:	f00b f9ed 	bl	8014456 <os_disable_isr>
 800907c:	6ba6      	ldr	r6, [r4, #56]	; 0x38
 800907e:	2240      	movs	r2, #64	; 0x40
 8009080:	2100      	movs	r1, #0
 8009082:	4620      	mov	r0, r4
 8009084:	f005 fdb1 	bl	800ebea <ble_memset>
 8009088:	63a6      	str	r6, [r4, #56]	; 0x38
 800908a:	2000      	movs	r0, #0
 800908c:	2102      	movs	r1, #2
 800908e:	e9c4 0108 	strd	r0, r1, [r4, #32]
 8009092:	f104 0031 	add.w	r0, r4, #49	; 0x31
 8009096:	2100      	movs	r1, #0
 8009098:	f44f 5280 	mov.w	r2, #4096	; 0x1000
 800909c:	7001      	strb	r1, [r0, #0]
 800909e:	76a1      	strb	r1, [r4, #26]
 80090a0:	62a1      	str	r1, [r4, #40]	; 0x28
 80090a2:	7081      	strb	r1, [r0, #2]
 80090a4:	62e2      	str	r2, [r4, #44]	; 0x2c
 80090a6:	6125      	str	r5, [r4, #16]
 80090a8:	2000      	movs	r0, #0
 80090aa:	495c      	ldr	r1, [pc, #368]	; (800921c <??DataTable19_1>)
 80090ac:	f881 0043 	strb.w	r0, [r1, #67]	; 0x43
 80090b0:	f8df 4bbc 	ldr.w	r4, [pc, #3004]	; 8009c70 <??DataTable35_1>
 80090b4:	2208      	movs	r2, #8
 80090b6:	2100      	movs	r1, #0
 80090b8:	4620      	mov	r0, r4
 80090ba:	f005 fd96 	bl	800ebea <ble_memset>
 80090be:	207f      	movs	r0, #127	; 0x7f
 80090c0:	7120      	strb	r0, [r4, #4]
 80090c2:	f8df 1bb0 	ldr.w	r1, [pc, #2992]	; 8009c74 <??DataTable35_2>
 80090c6:	6d88      	ldr	r0, [r1, #88]	; 0x58
 80090c8:	b130      	cbz	r0, 80090d8 <??llhwc_reset_0>
 80090ca:	f101 0058 	add.w	r0, r1, #88	; 0x58
 80090ce:	f7fc fc8e 	bl	80059ee <os_timer_stop_free>
 80090d2:	2000      	movs	r0, #0
 80090d4:	f005 f9ac 	bl	800e430 <llhwc_phy_read_and_stop_ed>

080090d8 <??llhwc_reset_0>:
 80090d8:	f004 fe91 	bl	800ddfe <llhwc_phy_set_cfg_time>
 80090dc:	48b6      	ldr	r0, [pc, #728]	; (80093b8 <??DataTable20_2>)
 80090de:	f04f 31ff 	mov.w	r1, #4294967295	; 0xffffffff
 80090e2:	6701      	str	r1, [r0, #112]	; 0x70
 80090e4:	6f02      	ldr	r2, [r0, #112]	; 0x70
 80090e6:	f8df 5b90 	ldr.w	r5, [pc, #2960]	; 8009c78 <??DataTable35_3>
 80090ea:	2400      	movs	r4, #0
 80090ec:	f042 0201 	orr.w	r2, r2, #1
 80090f0:	6702      	str	r2, [r0, #112]	; 0x70
 80090f2:	6f01      	ldr	r1, [r0, #112]	; 0x70
 80090f4:	f041 0102 	orr.w	r1, r1, #2
 80090f8:	6701      	str	r1, [r0, #112]	; 0x70
 80090fa:	6f01      	ldr	r1, [r0, #112]	; 0x70
 80090fc:	f021 0104 	bic.w	r1, r1, #4
 8009100:	6701      	str	r1, [r0, #112]	; 0x70
 8009102:	6f01      	ldr	r1, [r0, #112]	; 0x70
 8009104:	f021 0108 	bic.w	r1, r1, #8
 8009108:	6701      	str	r1, [r0, #112]	; 0x70
 800910a:	6829      	ldr	r1, [r5, #0]
 800910c:	f021 0110 	bic.w	r1, r1, #16
 8009110:	6029      	str	r1, [r5, #0]
 8009112:	6b42      	ldr	r2, [r0, #52]	; 0x34
 8009114:	f442 4200 	orr.w	r2, r2, #32768	; 0x8000
 8009118:	6342      	str	r2, [r0, #52]	; 0x34
 800911a:	6801      	ldr	r1, [r0, #0]
 800911c:	f021 5180 	bic.w	r1, r1, #268435456	; 0x10000000
 8009120:	6001      	str	r1, [r0, #0]
 8009122:	6942      	ldr	r2, [r0, #20]
 8009124:	f442 5200 	orr.w	r2, r2, #8192	; 0x2000
 8009128:	6142      	str	r2, [r0, #20]
 800912a:	6a28      	ldr	r0, [r5, #32]
 800912c:	f020 0018 	bic.w	r0, r0, #24
 8009130:	6228      	str	r0, [r5, #32]
 8009132:	f003 f8aa 	bl	800c28a <llhwc_cmn_is_dp_slp_enabled>
 8009136:	b120      	cbz	r0, 8009142 <??llhwc_reset_1>
 8009138:	2040      	movs	r0, #64	; 0x40
 800913a:	240c      	movs	r4, #12
 800913c:	f7f7 f878 	bl	8000230 <bsp_debug_gpio_toggle>
 8009140:	e064      	b.n	800920c <??llhwc_reset_2>

08009142 <??llhwc_reset_1>:
 8009142:	ae02      	add	r6, sp, #8
 8009144:	211e      	movs	r1, #30
 8009146:	8071      	strh	r1, [r6, #2]
 8009148:	2146      	movs	r1, #70	; 0x46
 800914a:	80f1      	strh	r1, [r6, #6]
 800914c:	2164      	movs	r1, #100	; 0x64
 800914e:	f8ad 0008 	strh.w	r0, [sp, #8]
 8009152:	f8ad 1012 	strh.w	r1, [sp, #18]
 8009156:	2028      	movs	r0, #40	; 0x28
 8009158:	2102      	movs	r1, #2
 800915a:	80b0      	strh	r0, [r6, #4]
 800915c:	2201      	movs	r2, #1
 800915e:	f88d 1002 	strb.w	r1, [sp, #2]
 8009162:	205a      	movs	r0, #90	; 0x5a
 8009164:	f88d 2001 	strb.w	r2, [sp, #1]
 8009168:	2104      	movs	r1, #4
 800916a:	8130      	strh	r0, [r6, #8]
 800916c:	2203      	movs	r2, #3
 800916e:	f88d 1004 	strb.w	r1, [sp, #4]
 8009172:	206e      	movs	r0, #110	; 0x6e
 8009174:	f88d 2003 	strb.w	r2, [sp, #3]
 8009178:	2106      	movs	r1, #6
 800917a:	81b0      	strh	r0, [r6, #12]
 800917c:	2205      	movs	r2, #5
 800917e:	f88d 1006 	strb.w	r1, [sp, #6]
 8009182:	f88d 4000 	strb.w	r4, [sp]
 8009186:	f88d 2005 	strb.w	r2, [sp, #5]
 800918a:	2103      	movs	r1, #3
 800918c:	2001      	movs	r0, #1
 800918e:	f004 facd 	bl	800d72c <llhwc_cmn_control_aclk>
 8009192:	46ec      	mov	ip, sp
 8009194:	2107      	movs	r1, #7
 8009196:	4bbe      	ldr	r3, [pc, #760]	; (8009490 <??DataTable21_3>)
 8009198:	f8df ad2c 	ldr.w	sl, [pc, #3372]	; 8009ec8 <??DataTable36>

0800919c <??llhwc_reset_3>:
 800919c:	f81c 0b01 	ldrb.w	r0, [ip], #1
 80091a0:	f10a 0804 	add.w	r8, sl, #4
 80091a4:	eb00 0240 	add.w	r2, r0, r0, lsl #1
 80091a8:	ea4f 0e82 	mov.w	lr, r2, lsl #2
 80091ac:	f858 200e 	ldr.w	r2, [r8, lr]
 80091b0:	44d6      	add	lr, sl
 80091b2:	f8de 9000 	ldr.w	r9, [lr]
 80091b6:	f853 7009 	ldr.w	r7, [r3, r9]
 80091ba:	f836 0010 	ldrh.w	r0, [r6, r0, lsl #1]
 80091be:	f8de 8008 	ldr.w	r8, [lr, #8]
 80091c2:	4397      	bics	r7, r2
 80091c4:	f8de e000 	ldr.w	lr, [lr]
 80091c8:	fa00 f008 	lsl.w	r0, r0, r8
 80091cc:	4002      	ands	r2, r0
 80091ce:	433a      	orrs	r2, r7
 80091d0:	f843 200e 	str.w	r2, [r3, lr]
 80091d4:	1e49      	subs	r1, r1, #1
 80091d6:	d1e1      	bne.n	800919c <??llhwc_reset_3>
 80091d8:	2103      	movs	r1, #3
 80091da:	2000      	movs	r0, #0
 80091dc:	f004 faa6 	bl	800d72c <llhwc_cmn_control_aclk>
 80091e0:	2000      	movs	r0, #0
 80091e2:	f000 fc63 	bl	8009aac <llhwc_lst_clr>
 80091e6:	2001      	movs	r0, #1
 80091e8:	f000 fc60 	bl	8009aac <llhwc_lst_clr>
 80091ec:	2002      	movs	r0, #2
 80091ee:	f000 fc5d 	bl	8009aac <llhwc_lst_clr>
 80091f2:	2003      	movs	r0, #3
 80091f4:	f000 fc5a 	bl	8009aac <llhwc_lst_clr>
 80091f8:	2004      	movs	r0, #4
 80091fa:	f000 fc57 	bl	8009aac <llhwc_lst_clr>
 80091fe:	2005      	movs	r0, #5
 8009200:	f000 fc54 	bl	8009aac <llhwc_lst_clr>
 8009204:	6a28      	ldr	r0, [r5, #32]
 8009206:	0840      	lsrs	r0, r0, #1
 8009208:	0040      	lsls	r0, r0, #1
 800920a:	6228      	str	r0, [r5, #32]

0800920c <??llhwc_reset_2>:
 800920c:	f00b f925 	bl	801445a <os_enable_isr>
 8009210:	4620      	mov	r0, r4
 8009212:	b006      	add	sp, #24
 8009214:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}

08009218 <??DataTable19>:
 8009218:	07d4 2000                                   ... 

0800921c <??DataTable19_1>:
 800921c:	07f8 2000                                   ... 

08009220 <??DataTable19_2>:
 8009220:	c078 0800                                   x...

08009224 <??DataTable19_3>:
 8009224:	6e98 8312                                   .n..

08009228 <llhwc_get_ch_idx>:
 8009228:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800922c:	4602      	mov	r2, r0
 800922e:	460c      	mov	r4, r1
 8009230:	2000      	movs	r0, #0
 8009232:	2700      	movs	r7, #0
 8009234:	2301      	movs	r3, #1
 8009236:	4626      	mov	r6, r4
 8009238:	2105      	movs	r1, #5

0800923a <??llhwc_get_ch_idx_0>:
 800923a:	7a35      	ldrb	r5, [r6, #8]
 800923c:	ea5f 7cc5 	movs.w	ip, r5, lsl #31
 8009240:	bf48      	it	mi
 8009242:	1c7f      	addmi	r7, r7, #1
 8009244:	ea5f 7c85 	movs.w	ip, r5, lsl #30
 8009248:	bf48      	it	mi
 800924a:	1c7f      	addmi	r7, r7, #1
 800924c:	ea5f 7c45 	movs.w	ip, r5, lsl #29
 8009250:	bf48      	it	mi
 8009252:	1c7f      	addmi	r7, r7, #1
 8009254:	ea5f 7c05 	movs.w	ip, r5, lsl #28
 8009258:	bf48      	it	mi
 800925a:	1c7f      	addmi	r7, r7, #1
 800925c:	ea5f 6cc5 	movs.w	ip, r5, lsl #27
 8009260:	bf48      	it	mi
 8009262:	1c7f      	addmi	r7, r7, #1
 8009264:	ea5f 6c85 	movs.w	ip, r5, lsl #26
 8009268:	bf48      	it	mi
 800926a:	1c7f      	addmi	r7, r7, #1
 800926c:	ea5f 6c45 	movs.w	ip, r5, lsl #25
 8009270:	bf48      	it	mi
 8009272:	1c7f      	addmi	r7, r7, #1
 8009274:	062d      	lsls	r5, r5, #24
 8009276:	bf48      	it	mi
 8009278:	1c7f      	addmi	r7, r7, #1
 800927a:	1c76      	adds	r6, r6, #1
 800927c:	1e49      	subs	r1, r1, #1
 800927e:	d1dc      	bne.n	800923a <??llhwc_get_ch_idx_0>
 8009280:	4615      	mov	r5, r2
 8009282:	78ae      	ldrb	r6, [r5, #2]
 8009284:	782a      	ldrb	r2, [r5, #0]
 8009286:	f64d 5c68 	movw	ip, #56680	; 0xdd68
 800928a:	2125      	movs	r1, #37	; 0x25
 800928c:	1996      	adds	r6, r2, r6
 800928e:	fb06 fc0c 	mul.w	ip, r6, ip
 8009292:	ea4f 5c5c 	mov.w	ip, ip, lsr #21
 8009296:	fb01 661c 	mls	r6, r1, ip, r6
 800929a:	f104 0108 	add.w	r1, r4, #8
 800929e:	702e      	strb	r6, [r5, #0]
 80092a0:	782a      	ldrb	r2, [r5, #0]
 80092a2:	2601      	movs	r6, #1
 80092a4:	4694      	mov	ip, r2
 80092a6:	eb0c 79dc 	add.w	r9, ip, ip, lsr #31
 80092aa:	706a      	strb	r2, [r5, #1]
 80092ac:	ea4f 0edc 	mov.w	lr, ip, lsr #3
 80092b0:	f811 800e 	ldrb.w	r8, [r1, lr]
 80092b4:	f009 09f8 	and.w	r9, r9, #248	; 0xf8
 80092b8:	ebac 0909 	sub.w	r9, ip, r9
 80092bc:	fa06 f909 	lsl.w	r9, r6, r9
 80092c0:	ea18 0f09 	tst.w	r8, r9
 80092c4:	d127      	bne.n	8009316 <??llhwc_get_ch_idx_1>
 80092c6:	b2ff      	uxtb	r7, r7
 80092c8:	fb9c f1f7 	sdiv	r1, ip, r7
 80092cc:	fb07 cc11 	mls	ip, r7, r1, ip
 80092d0:	2700      	movs	r7, #0
 80092d2:	f885 c001 	strb.w	ip, [r5, #1]
 80092d6:	f895 c001 	ldrb.w	ip, [r5, #1]
 80092da:	f10c 0c01 	add.w	ip, ip, #1

080092de <??llhwc_get_ch_idx_2>:
 80092de:	2200      	movs	r2, #0
 80092e0:	f894 e008 	ldrb.w	lr, [r4, #8]

080092e4 <??llhwc_get_ch_idx_3>:
 80092e4:	fa06 f802 	lsl.w	r8, r6, r2
 80092e8:	ea1e 0f08 	tst.w	lr, r8
 80092ec:	bf18      	it	ne
 80092ee:	1c40      	addne	r0, r0, #1
 80092f0:	b2c1      	uxtb	r1, r0
 80092f2:	458c      	cmp	ip, r1
 80092f4:	d004      	beq.n	8009300 <??llhwc_get_ch_idx_4>
 80092f6:	1c52      	adds	r2, r2, #1
 80092f8:	b2d1      	uxtb	r1, r2
 80092fa:	2908      	cmp	r1, #8
 80092fc:	dbf2      	blt.n	80092e4 <??llhwc_get_ch_idx_3>
 80092fe:	e000      	b.n	8009302 <??llhwc_get_ch_idx_5>

08009300 <??llhwc_get_ch_idx_4>:
 8009300:	2300      	movs	r3, #0

08009302 <??llhwc_get_ch_idx_5>:
 8009302:	1c7f      	adds	r7, r7, #1
 8009304:	1c64      	adds	r4, r4, #1
 8009306:	2f05      	cmp	r7, #5
 8009308:	da01      	bge.n	800930e <??llhwc_get_ch_idx_6>
 800930a:	0019      	movs	r1, r3
 800930c:	d1e7      	bne.n	80092de <??llhwc_get_ch_idx_2>

0800930e <??llhwc_get_ch_idx_6>:
 800930e:	1e7f      	subs	r7, r7, #1
 8009310:	b2d2      	uxtb	r2, r2
 8009312:	eb02 02c7 	add.w	r2, r2, r7, lsl #3

08009316 <??llhwc_get_ch_idx_1>:
 8009316:	706a      	strb	r2, [r5, #1]
 8009318:	b2d0      	uxtb	r0, r2
 800931a:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}

0800931e <llhwc_get_ch_idx_algo_2>:
 800931e:	b5f0      	push	{r4, r5, r6, r7, lr}
 8009320:	4607      	mov	r7, r0
 8009322:	460c      	mov	r4, r1
 8009324:	b083      	sub	sp, #12
 8009326:	4615      	mov	r5, r2
 8009328:	2104      	movs	r1, #4
 800932a:	2001      	movs	r0, #1
 800932c:	f004 f9fe 	bl	800d72c <llhwc_cmn_control_aclk>
 8009330:	2205      	movs	r2, #5
 8009332:	f107 0108 	add.w	r1, r7, #8
 8009336:	a801      	add	r0, sp, #4
 8009338:	f005 fc06 	bl	800eb48 <ble_memcpy>
 800933c:	9801      	ldr	r0, [sp, #4]
 800933e:	f8df 6b8c 	ldr.w	r6, [pc, #2956]	; 8009ecc <??DataTable36_1>
 8009342:	2301      	movs	r3, #1
 8009344:	60f0      	str	r0, [r6, #12]
 8009346:	9802      	ldr	r0, [sp, #8]
 8009348:	68b1      	ldr	r1, [r6, #8]
 800934a:	2202      	movs	r2, #2
 800934c:	f360 0104 	bfi	r1, r0, #0, #5
 8009350:	60b1      	str	r1, [r6, #8]
 8009352:	6878      	ldr	r0, [r7, #4]
 8009354:	2100      	movs	r1, #0
 8009356:	6030      	str	r0, [r6, #0]
 8009358:	68b0      	ldr	r0, [r6, #8]
 800935a:	f364 1054 	bfi	r0, r4, #5, #16
 800935e:	60b0      	str	r0, [r6, #8]
 8009360:	6870      	ldr	r0, [r6, #4]
 8009362:	f440 0000 	orr.w	r0, r0, #8388608	; 0x800000
 8009366:	6070      	str	r0, [r6, #4]
 8009368:	69b0      	ldr	r0, [r6, #24]
 800936a:	f040 0001 	orr.w	r0, r0, #1
 800936e:	61b0      	str	r0, [r6, #24]
 8009370:	9100      	str	r1, [sp, #0]
 8009372:	f640 0174 	movw	r1, #2164	; 0x874
 8009376:	20c8      	movs	r0, #200	; 0xc8
 8009378:	f002 ffcf 	bl	800c31a <llhwc_polling>
 800937c:	0004      	movs	r4, r0
 800937e:	d110      	bne.n	80093a2 <??llhwc_get_ch_idx_algo_2_0>
 8009380:	6a70      	ldr	r0, [r6, #36]	; 0x24
 8009382:	f040 0002 	orr.w	r0, r0, #2
 8009386:	6270      	str	r0, [r6, #36]	; 0x24
 8009388:	6a70      	ldr	r0, [r6, #36]	; 0x24
 800938a:	f020 0002 	bic.w	r0, r0, #2
 800938e:	6270      	str	r0, [r6, #36]	; 0x24
 8009390:	69b0      	ldr	r0, [r6, #24]
 8009392:	0840      	lsrs	r0, r0, #1
 8009394:	0040      	lsls	r0, r0, #1
 8009396:	61b0      	str	r0, [r6, #24]
 8009398:	6870      	ldr	r0, [r6, #4]
 800939a:	0ac0      	lsrs	r0, r0, #11
 800939c:	f000 003f 	and.w	r0, r0, #63	; 0x3f
 80093a0:	7028      	strb	r0, [r5, #0]

080093a2 <??llhwc_get_ch_idx_algo_2_0>:
 80093a2:	2104      	movs	r1, #4
 80093a4:	2000      	movs	r0, #0
 80093a6:	f004 f9c1 	bl	800d72c <llhwc_cmn_control_aclk>
 80093aa:	f000 bc5b 	b.w	8009c64 <?Subroutine5>
	...

080093b0 <??DataTable20>:
 80093b0:	0718 2000                                   ... 

080093b4 <??DataTable20_1>:
 80093b4:	0480 4802                                   ...H

080093b8 <??DataTable20_2>:
 80093b8:	080c 4802                                   ...H

080093bc <??DataTable20_3>:
 80093bc:	0848 2000                                   H.. 

080093c0 <??DataTable20_4>:
 80093c0:	0844 2000                                   D.. 

080093c4 <llhwc_reinit_lsts>:
 80093c4:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 80093c8:	b086      	sub	sp, #24
 80093ca:	2400      	movs	r4, #0
 80093cc:	f002 ff5d 	bl	800c28a <llhwc_cmn_is_dp_slp_enabled>
 80093d0:	b120      	cbz	r0, 80093dc <??llhwc_reinit_lsts_0>
 80093d2:	2040      	movs	r0, #64	; 0x40
 80093d4:	240c      	movs	r4, #12
 80093d6:	f7f6 ff2b 	bl	8000230 <bsp_debug_gpio_toggle>
 80093da:	e04f      	b.n	800947c <??llhwc_reinit_lsts_1>

080093dc <??llhwc_reinit_lsts_0>:
 80093dc:	ad02      	add	r5, sp, #8
 80093de:	211e      	movs	r1, #30
 80093e0:	8069      	strh	r1, [r5, #2]
 80093e2:	2146      	movs	r1, #70	; 0x46
 80093e4:	80e9      	strh	r1, [r5, #6]
 80093e6:	2164      	movs	r1, #100	; 0x64
 80093e8:	f8ad 0008 	strh.w	r0, [sp, #8]
 80093ec:	f8ad 1012 	strh.w	r1, [sp, #18]
 80093f0:	2028      	movs	r0, #40	; 0x28
 80093f2:	2102      	movs	r1, #2
 80093f4:	80a8      	strh	r0, [r5, #4]
 80093f6:	2201      	movs	r2, #1
 80093f8:	f88d 1002 	strb.w	r1, [sp, #2]
 80093fc:	205a      	movs	r0, #90	; 0x5a
 80093fe:	f88d 2001 	strb.w	r2, [sp, #1]
 8009402:	2104      	movs	r1, #4
 8009404:	8128      	strh	r0, [r5, #8]
 8009406:	2203      	movs	r2, #3
 8009408:	f88d 1004 	strb.w	r1, [sp, #4]
 800940c:	206e      	movs	r0, #110	; 0x6e
 800940e:	f88d 2003 	strb.w	r2, [sp, #3]
 8009412:	2106      	movs	r1, #6
 8009414:	81a8      	strh	r0, [r5, #12]
 8009416:	2205      	movs	r2, #5
 8009418:	f88d 1006 	strb.w	r1, [sp, #6]
 800941c:	f88d 4000 	strb.w	r4, [sp]
 8009420:	f88d 2005 	strb.w	r2, [sp, #5]
 8009424:	2103      	movs	r1, #3
 8009426:	2001      	movs	r0, #1
 8009428:	f004 f980 	bl	800d72c <llhwc_cmn_control_aclk>
 800942c:	466e      	mov	r6, sp
 800942e:	2007      	movs	r0, #7
 8009430:	4a17      	ldr	r2, [pc, #92]	; (8009490 <??DataTable21_3>)
 8009432:	f8df 3d48 	ldr.w	r3, [pc, #3400]	; 800a17c <??DataTable37>

08009436 <??llhwc_reinit_lsts_2>:
 8009436:	f816 7b01 	ldrb.w	r7, [r6], #1
 800943a:	f103 0e04 	add.w	lr, r3, #4
 800943e:	eb07 0147 	add.w	r1, r7, r7, lsl #1
 8009442:	ea4f 0c81 	mov.w	ip, r1, lsl #2
 8009446:	f85e 100c 	ldr.w	r1, [lr, ip]
 800944a:	449c      	add	ip, r3
 800944c:	f8dc 8000 	ldr.w	r8, [ip]
 8009450:	f852 9008 	ldr.w	r9, [r2, r8]
 8009454:	f835 7017 	ldrh.w	r7, [r5, r7, lsl #1]
 8009458:	f8dc e008 	ldr.w	lr, [ip, #8]
 800945c:	ea29 0901 	bic.w	r9, r9, r1
 8009460:	f8dc c000 	ldr.w	ip, [ip]
 8009464:	fa07 f70e 	lsl.w	r7, r7, lr
 8009468:	4039      	ands	r1, r7
 800946a:	ea41 0109 	orr.w	r1, r1, r9
 800946e:	f842 100c 	str.w	r1, [r2, ip]
 8009472:	1e40      	subs	r0, r0, #1
 8009474:	d1df      	bne.n	8009436 <??llhwc_reinit_lsts_2>
 8009476:	2103      	movs	r1, #3
 8009478:	f004 f958 	bl	800d72c <llhwc_cmn_control_aclk>

0800947c <??llhwc_reinit_lsts_1>:
 800947c:	4620      	mov	r0, r4
 800947e:	b007      	add	sp, #28
 8009480:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}

08009484 <??DataTable21>:
 8009484:	0718 2000                                   ... 

08009488 <??DataTable21_1>:
 8009488:	0404 4802                                   ...H

0800948c <??DataTable21_2>:
 800948c:	082a 2000                                   *.. 

08009490 <??DataTable21_3>:
 8009490:	0000 4802                                   ...H

08009494 <??DataTable21_4>:
 8009494:	000c 4802                                   ...H

08009498 <??DataTable21_5>:
 8009498:	0004 4802                                   ...H

0800949c <??DataTable21_6>:
 800949c:	0008 4802                                   ...H

080094a0 <llhwc_lst_search>:
 80094a0:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80094a4:	f8df 4a28 	ldr.w	r4, [pc, #2600]	; 8009ed0 <??DataTable36_2>
 80094a8:	b08c      	sub	sp, #48	; 0x30
 80094aa:	4680      	mov	r8, r0
 80094ac:	4689      	mov	r9, r1
 80094ae:	4616      	mov	r6, r2
 80094b0:	469b      	mov	fp, r3
 80094b2:	f8d4 5032 	ldr.w	r5, [r4, #50]	; 0x32
 80094b6:	f00a ffce 	bl	8014456 <os_disable_isr>
 80094ba:	f002 fee6 	bl	800c28a <llhwc_cmn_is_dp_slp_enabled>
 80094be:	b120      	cbz	r0, 80094ca <??llhwc_lst_search_0>
 80094c0:	2040      	movs	r0, #64	; 0x40
 80094c2:	240c      	movs	r4, #12
 80094c4:	f7f6 feb4 	bl	8000230 <bsp_debug_gpio_toggle>
 80094c8:	e0da      	b.n	8009680 <??llhwc_lst_search_1>

080094ca <??llhwc_lst_search_0>:
 80094ca:	f003 fa25 	bl	800c918 <get_pwr_domain>
 80094ce:	f88d 0004 	strb.w	r0, [sp, #4]
 80094d2:	2805      	cmp	r0, #5
 80094d4:	d106      	bne.n	80094e4 <??llhwc_lst_search_2>
 80094d6:	f003 faa8 	bl	800ca2a <llhwc_wait_for_evnt_on_air>
 80094da:	1e40      	subs	r0, r0, #1
 80094dc:	4180      	sbcs	r0, r0
 80094de:	0fc0      	lsrs	r0, r0, #31
 80094e0:	f7f6 fe76 	bl	80001d0 <bsp_assert>

080094e4 <??llhwc_lst_search_2>:
 80094e4:	f894 0030 	ldrb.w	r0, [r4, #48]	; 0x30
 80094e8:	2804      	cmp	r0, #4
 80094ea:	d116      	bne.n	800951a <??llhwc_lst_search_3>
 80094ec:	a908      	add	r1, sp, #32
 80094ee:	9100      	str	r1, [sp, #0]
 80094f0:	f10d 0305 	add.w	r3, sp, #5
 80094f4:	f10d 0206 	add.w	r2, sp, #6
 80094f8:	2101      	movs	r1, #1
 80094fa:	4628      	mov	r0, r5
 80094fc:	f003 fa19 	bl	800c932 <llhwc_cmn_set_phy>
 8009500:	f8df 0c7c 	ldr.w	r0, [pc, #3196]	; 800a180 <??DataTable37_1>
 8009504:	f89d 2006 	ldrb.w	r2, [sp, #6]
 8009508:	6901      	ldr	r1, [r0, #16]
 800950a:	f362 210b 	bfi	r1, r2, #8, #4
 800950e:	f89d 2005 	ldrb.w	r2, [sp, #5]
 8009512:	6101      	str	r1, [r0, #16]
 8009514:	f362 310f 	bfi	r1, r2, #12, #4
 8009518:	6101      	str	r1, [r0, #16]

0800951a <??llhwc_lst_search_3>:
 800951a:	2002      	movs	r0, #2
 800951c:	f003 f8e2 	bl	800c6e4 <llhwc_pwr_switch>
 8009520:	0004      	movs	r4, r0
 8009522:	f040 80ad 	bne.w	8009680 <??llhwc_lst_search_1>
 8009526:	f002 feb0 	bl	800c28a <llhwc_cmn_is_dp_slp_enabled>
 800952a:	b120      	cbz	r0, 8009536 <??llhwc_lst_search_4>
 800952c:	2040      	movs	r0, #64	; 0x40
 800952e:	240c      	movs	r4, #12
 8009530:	f7f6 fe7e 	bl	8000230 <bsp_debug_gpio_toggle>
 8009534:	e04d      	b.n	80095d2 <??llhwc_lst_search_5>

08009536 <??llhwc_lst_search_4>:
 8009536:	2100      	movs	r1, #0
 8009538:	221e      	movs	r2, #30
 800953a:	f8ad 1010 	strh.w	r1, [sp, #16]
 800953e:	f8ad 2012 	strh.w	r2, [sp, #18]
 8009542:	2128      	movs	r1, #40	; 0x28
 8009544:	2246      	movs	r2, #70	; 0x46
 8009546:	f8ad 1014 	strh.w	r1, [sp, #20]
 800954a:	f8ad 2016 	strh.w	r2, [sp, #22]
 800954e:	215a      	movs	r1, #90	; 0x5a
 8009550:	2264      	movs	r2, #100	; 0x64
 8009552:	f8ad 1018 	strh.w	r1, [sp, #24]
 8009556:	f8ad 201a 	strh.w	r2, [sp, #26]
 800955a:	216e      	movs	r1, #110	; 0x6e
 800955c:	2200      	movs	r2, #0
 800955e:	f8ad 101c 	strh.w	r1, [sp, #28]
 8009562:	f88d 2008 	strb.w	r2, [sp, #8]
 8009566:	a802      	add	r0, sp, #8
 8009568:	2101      	movs	r1, #1
 800956a:	2202      	movs	r2, #2
 800956c:	7041      	strb	r1, [r0, #1]
 800956e:	7082      	strb	r2, [r0, #2]
 8009570:	2103      	movs	r1, #3
 8009572:	2204      	movs	r2, #4
 8009574:	70c1      	strb	r1, [r0, #3]
 8009576:	7102      	strb	r2, [r0, #4]
 8009578:	2105      	movs	r1, #5
 800957a:	2206      	movs	r2, #6
 800957c:	7141      	strb	r1, [r0, #5]
 800957e:	7182      	strb	r2, [r0, #6]
 8009580:	2103      	movs	r1, #3
 8009582:	2001      	movs	r0, #1
 8009584:	f004 f8d2 	bl	800d72c <llhwc_cmn_control_aclk>
 8009588:	f10d 0a08 	add.w	sl, sp, #8
 800958c:	f04f 0c07 	mov.w	ip, #7
 8009590:	f8df ebf0 	ldr.w	lr, [pc, #3056]	; 800a184 <??DataTable37_2>
 8009594:	f8df 5930 	ldr.w	r5, [pc, #2352]	; 8009ec8 <??DataTable36>

08009598 <??llhwc_lst_search_6>:
 8009598:	f81a 0b01 	ldrb.w	r0, [sl], #1
 800959c:	1d2f      	adds	r7, r5, #4
 800959e:	eb00 0140 	add.w	r1, r0, r0, lsl #1
 80095a2:	008a      	lsls	r2, r1, #2
 80095a4:	58b9      	ldr	r1, [r7, r2]
 80095a6:	18aa      	adds	r2, r5, r2
 80095a8:	6813      	ldr	r3, [r2, #0]
 80095aa:	af04      	add	r7, sp, #16
 80095ac:	f85e 3003 	ldr.w	r3, [lr, r3]
 80095b0:	f837 0010 	ldrh.w	r0, [r7, r0, lsl #1]
 80095b4:	6897      	ldr	r7, [r2, #8]
 80095b6:	438b      	bics	r3, r1
 80095b8:	6812      	ldr	r2, [r2, #0]
 80095ba:	40b8      	lsls	r0, r7
 80095bc:	4001      	ands	r1, r0
 80095be:	4319      	orrs	r1, r3
 80095c0:	f84e 1002 	str.w	r1, [lr, r2]
 80095c4:	f1bc 0c01 	subs.w	ip, ip, #1
 80095c8:	d1e6      	bne.n	8009598 <??llhwc_lst_search_6>
 80095ca:	2103      	movs	r1, #3
 80095cc:	2000      	movs	r0, #0
 80095ce:	f004 f8ad 	bl	800d72c <llhwc_cmn_control_aclk>

080095d2 <??llhwc_lst_search_5>:
 80095d2:	2c00      	cmp	r4, #0
 80095d4:	d154      	bne.n	8009680 <??llhwc_lst_search_1>
 80095d6:	2103      	movs	r1, #3
 80095d8:	2001      	movs	r0, #1
 80095da:	f004 f8a7 	bl	800d72c <llhwc_cmn_control_aclk>
 80095de:	f8df 5ba8 	ldr.w	r5, [pc, #2984]	; 800a188 <??DataTable37_3>
 80095e2:	6828      	ldr	r0, [r5, #0]
 80095e4:	2300      	movs	r3, #0
 80095e6:	f368 0002 	bfi	r0, r8, #0, #3
 80095ea:	6028      	str	r0, [r5, #0]
 80095ec:	6969      	ldr	r1, [r5, #20]
 80095ee:	7930      	ldrb	r0, [r6, #4]
 80095f0:	7972      	ldrb	r2, [r6, #5]
 80095f2:	0c09      	lsrs	r1, r1, #16
 80095f4:	ea40 2002 	orr.w	r0, r0, r2, lsl #8
 80095f8:	ea40 4101 	orr.w	r1, r0, r1, lsl #16
 80095fc:	6169      	str	r1, [r5, #20]
 80095fe:	69a8      	ldr	r0, [r5, #24]
 8009600:	7831      	ldrb	r1, [r6, #0]
 8009602:	7872      	ldrb	r2, [r6, #1]
 8009604:	78b0      	ldrb	r0, [r6, #2]
 8009606:	ea41 2102 	orr.w	r1, r1, r2, lsl #8
 800960a:	78f2      	ldrb	r2, [r6, #3]
 800960c:	ea41 4100 	orr.w	r1, r1, r0, lsl #16
 8009610:	ea41 6102 	orr.w	r1, r1, r2, lsl #24
 8009614:	2201      	movs	r2, #1
 8009616:	61a9      	str	r1, [r5, #24]
 8009618:	6968      	ldr	r0, [r5, #20]
 800961a:	2100      	movs	r1, #0
 800961c:	f369 4010 	bfi	r0, r9, #16, #1
 8009620:	6168      	str	r0, [r5, #20]
 8009622:	68a8      	ldr	r0, [r5, #8]
 8009624:	f040 0080 	orr.w	r0, r0, #128	; 0x80
 8009628:	60a8      	str	r0, [r5, #8]
 800962a:	9100      	str	r1, [sp, #0]
 800962c:	f640 0174 	movw	r1, #2164	; 0x874
 8009630:	20c8      	movs	r0, #200	; 0xc8
 8009632:	f002 fe72 	bl	800c31a <llhwc_polling>
 8009636:	0004      	movs	r4, r0
 8009638:	d002      	beq.n	8009640 <??llhwc_lst_search_7>
 800963a:	2103      	movs	r1, #3
 800963c:	2000      	movs	r0, #0
 800963e:	e01d      	b.n	800967c <??llhwc_lst_search_8>

08009640 <??llhwc_lst_search_7>:
 8009640:	f1bb 0f00 	cmp.w	fp, #0
 8009644:	d005      	beq.n	8009652 <??llhwc_lst_search_9>
 8009646:	68a8      	ldr	r0, [r5, #8]
 8009648:	0a00      	lsrs	r0, r0, #8
 800964a:	f000 007f 	and.w	r0, r0, #127	; 0x7f
 800964e:	f88b 0000 	strb.w	r0, [fp]

08009652 <??llhwc_lst_search_9>:
 8009652:	68a8      	ldr	r0, [r5, #8]
 8009654:	f020 0080 	bic.w	r0, r0, #128	; 0x80
 8009658:	60a8      	str	r0, [r5, #8]
 800965a:	6c28      	ldr	r0, [r5, #64]	; 0x40
 800965c:	f040 0001 	orr.w	r0, r0, #1
 8009660:	6428      	str	r0, [r5, #64]	; 0x40
 8009662:	6c28      	ldr	r0, [r5, #64]	; 0x40
 8009664:	0840      	lsrs	r0, r0, #1
 8009666:	0040      	lsls	r0, r0, #1
 8009668:	6428      	str	r0, [r5, #64]	; 0x40
 800966a:	f89d 0004 	ldrb.w	r0, [sp, #4]
 800966e:	f003 f839 	bl	800c6e4 <llhwc_pwr_switch>
 8009672:	0004      	movs	r4, r0
 8009674:	bf1a      	itte	ne
 8009676:	2103      	movne	r1, #3
 8009678:	2000      	movne	r0, #0
 800967a:	2103      	moveq	r1, #3

0800967c <??llhwc_lst_search_8>:
 800967c:	f004 f856 	bl	800d72c <llhwc_cmn_control_aclk>

08009680 <??llhwc_lst_search_1>:
 8009680:	f00a feeb 	bl	801445a <os_enable_isr>
 8009684:	4620      	mov	r0, r4

08009686 <?Subroutine0>:
 8009686:	b00d      	add	sp, #52	; 0x34
 8009688:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0800968c <??DataTable22>:
 800968c:	0010 4802                                   ...H

08009690 <??DataTable22_1>:
 8009690:	0014 4802                                   ...H

08009694 <??DataTable22_2>:
 8009694:	0738 2000                                   8.. 

08009698 <??DataTable22_3>:
 8009698:	0849 2000                                   I.. 

0800969c <??DataTable22_4>:
 800969c:	19d4 0803                                   ....

080096a0 <??DataTable22_5>:
 80096a0:	0878 4802                                   x..H

080096a4 <llhwc_lst_add_rmv_dev>:
 80096a4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80096a8:	b08d      	sub	sp, #52	; 0x34
 80096aa:	460c      	mov	r4, r1
 80096ac:	4615      	mov	r5, r2
 80096ae:	461e      	mov	r6, r3
 80096b0:	2800      	cmp	r0, #0
 80096b2:	d169      	bne.n	8009788 <??llhwc_lst_add_rmv_dev_0>
 80096b4:	f20f 21d0 	addw	r1, pc, #720	; 0x2d0
 80096b8:	e891 5f0c 	ldmia.w	r1, {r2, r3, r8, r9, sl, fp, ip, lr}
 80096bc:	a801      	add	r0, sp, #4
 80096be:	a901      	add	r1, sp, #4
 80096c0:	e880 5f0c 	stmia.w	r0, {r2, r3, r8, r9, sl, fp, ip, lr}
 80096c4:	f8df 0ac4 	ldr.w	r0, [pc, #2756]	; 800a18c <??DataTable37_4>
 80096c8:	6803      	ldr	r3, [r0, #0]
 80096ca:	f8d0 e004 	ldr.w	lr, [r0, #4]
 80096ce:	4620      	mov	r0, r4
 80096d0:	f851 2020 	ldr.w	r2, [r1, r0, lsl #2]
 80096d4:	a902      	add	r1, sp, #8
 80096d6:	f851 8020 	ldr.w	r8, [r1, r0, lsl #2]
 80096da:	2700      	movs	r7, #0
 80096dc:	0852      	lsrs	r2, r2, #1
 80096de:	ebb2 0f58 	cmp.w	r2, r8, lsr #1
 80096e2:	d21d      	bcs.n	8009720 <??llhwc_lst_add_rmv_dev_1>
 80096e4:	f8df 0aa8 	ldr.w	r0, [pc, #2728]	; 800a190 <??DataTable37_5>
 80096e8:	9000      	str	r0, [sp, #0]
 80096ea:	f8df caa0 	ldr.w	ip, [pc, #2720]	; 800a18c <??DataTable37_4>

080096ee <??llhwc_lst_add_rmv_dev_2>:
 80096ee:	2a20      	cmp	r2, #32
 80096f0:	d203      	bcs.n	80096fa <??llhwc_lst_add_rmv_dev_3>
 80096f2:	4660      	mov	r0, ip
 80096f4:	4611      	mov	r1, r2
 80096f6:	4699      	mov	r9, r3
 80096f8:	e003      	b.n	8009702 <??llhwc_lst_add_rmv_dev_4>

080096fa <??llhwc_lst_add_rmv_dev_3>:
 80096fa:	9800      	ldr	r0, [sp, #0]
 80096fc:	f1a2 0120 	sub.w	r1, r2, #32
 8009700:	46f1      	mov	r9, lr

08009702 <??llhwc_lst_add_rmv_dev_4>:
 8009702:	f04f 0a01 	mov.w	sl, #1
 8009706:	fa0a f101 	lsl.w	r1, sl, r1
 800970a:	ea6f 0a01 	mvn.w	sl, r1
 800970e:	ea4a 0909 	orr.w	r9, sl, r9
 8009712:	f119 0f01 	cmn.w	r9, #1
 8009716:	d10b      	bne.n	8009730 <??llhwc_lst_add_rmv_dev_5>
 8009718:	1c52      	adds	r2, r2, #1
 800971a:	ebb2 0f58 	cmp.w	r2, r8, lsr #1
 800971e:	d3e6      	bcc.n	80096ee <??llhwc_lst_add_rmv_dev_2>

08009720 <??llhwc_lst_add_rmv_dev_1>:
 8009720:	ebb2 0f58 	cmp.w	r2, r8, lsr #1
 8009724:	d10b      	bne.n	800973e <??llhwc_lst_add_rmv_dev_6>
 8009726:	203f      	movs	r0, #63	; 0x3f
 8009728:	2707      	movs	r7, #7
 800972a:	f7f6 fd81 	bl	8000230 <bsp_debug_gpio_toggle>
 800972e:	e129      	b.n	8009984 <??llhwc_lst_add_rmv_dev_7>

08009730 <??llhwc_lst_add_rmv_dev_5>:
 8009730:	6803      	ldr	r3, [r0, #0]
 8009732:	ea0a 0a03 	and.w	sl, sl, r3
 8009736:	ea41 010a 	orr.w	r1, r1, sl
 800973a:	6001      	str	r1, [r0, #0]
 800973c:	e7f0      	b.n	8009720 <??llhwc_lst_add_rmv_dev_1>

0800973e <??llhwc_lst_add_rmv_dev_6>:
 800973e:	9816      	ldr	r0, [sp, #88]	; 0x58
 8009740:	2c06      	cmp	r4, #6
 8009742:	bf1c      	itt	ne
 8009744:	2c04      	cmpne	r4, #4
 8009746:	2c03      	cmpne	r4, #3
 8009748:	d102      	bne.n	8009750 <??llhwc_lst_add_rmv_dev_8>
 800974a:	b108      	cbz	r0, 8009750 <??llhwc_lst_add_rmv_dev_8>
 800974c:	0051      	lsls	r1, r2, #1
 800974e:	7001      	strb	r1, [r0, #0]

08009750 <??llhwc_lst_add_rmv_dev_8>:
 8009750:	7830      	ldrb	r0, [r6, #0]
 8009752:	7871      	ldrb	r1, [r6, #1]
 8009754:	78b3      	ldrb	r3, [r6, #2]
 8009756:	00d2      	lsls	r2, r2, #3
 8009758:	ea40 2001 	orr.w	r0, r0, r1, lsl #8
 800975c:	78f1      	ldrb	r1, [r6, #3]
 800975e:	2d01      	cmp	r5, #1
 8009760:	ea40 4003 	orr.w	r0, r0, r3, lsl #16
 8009764:	f102 4390 	add.w	r3, r2, #1207959552	; 0x48000000
 8009768:	f503 3320 	add.w	r3, r3, #163840	; 0x28000
 800976c:	ea40 6001 	orr.w	r0, r0, r1, lsl #24
 8009770:	6018      	str	r0, [r3, #0]
 8009772:	7931      	ldrb	r1, [r6, #4]
 8009774:	7970      	ldrb	r0, [r6, #5]
 8009776:	ea41 2100 	orr.w	r1, r1, r0, lsl #8
 800977a:	bf08      	it	eq
 800977c:	f441 3180 	orreq.w	r1, r1, #65536	; 0x10000
 8009780:	f8df 0a10 	ldr.w	r0, [pc, #2576]	; 800a194 <??DataTable37_6>
 8009784:	5081      	str	r1, [r0, r2]
 8009786:	e0fd      	b.n	8009984 <??llhwc_lst_add_rmv_dev_7>

08009788 <??llhwc_lst_add_rmv_dev_0>:
 8009788:	f8df 0d78 	ldr.w	r0, [pc, #3448]	; 800a504 <??DataTable38>
 800978c:	6800      	ldr	r0, [r0, #0]
 800978e:	f8df 7740 	ldr.w	r7, [pc, #1856]	; 8009ed0 <??DataTable36_2>
 8009792:	f8d7 8032 	ldr.w	r8, [r7, #50]	; 0x32
 8009796:	f04f 31ff 	mov.w	r1, #4294967295	; 0xffffffff
 800979a:	f00a fe64 	bl	8014466 <os_rcrsv_mutex_wait>
 800979e:	f002 fd74 	bl	800c28a <llhwc_cmn_is_dp_slp_enabled>
 80097a2:	b120      	cbz	r0, 80097ae <??llhwc_lst_add_rmv_dev_9>
 80097a4:	2040      	movs	r0, #64	; 0x40
 80097a6:	270c      	movs	r7, #12
 80097a8:	f7f6 fd42 	bl	8000230 <bsp_debug_gpio_toggle>
 80097ac:	e0e5      	b.n	800997a <??llhwc_lst_add_rmv_dev_10>

080097ae <??llhwc_lst_add_rmv_dev_9>:
 80097ae:	f003 f93c 	bl	800ca2a <llhwc_wait_for_evnt_on_air>
 80097b2:	1e40      	subs	r0, r0, #1
 80097b4:	4180      	sbcs	r0, r0
 80097b6:	0fc0      	lsrs	r0, r0, #31
 80097b8:	f7f6 fd0a 	bl	80001d0 <bsp_assert>
 80097bc:	f003 f8ac 	bl	800c918 <get_pwr_domain>
 80097c0:	9004      	str	r0, [sp, #16]
 80097c2:	2805      	cmp	r0, #5
 80097c4:	d106      	bne.n	80097d4 <??llhwc_lst_add_rmv_dev_11>
 80097c6:	f003 f930 	bl	800ca2a <llhwc_wait_for_evnt_on_air>
 80097ca:	1e40      	subs	r0, r0, #1
 80097cc:	4180      	sbcs	r0, r0
 80097ce:	0fc0      	lsrs	r0, r0, #31
 80097d0:	f7f6 fcfe 	bl	80001d0 <bsp_assert>

080097d4 <??llhwc_lst_add_rmv_dev_11>:
 80097d4:	f897 0030 	ldrb.w	r0, [r7, #48]	; 0x30
 80097d8:	2804      	cmp	r0, #4
 80097da:	d115      	bne.n	8009808 <??llhwc_lst_add_rmv_dev_12>
 80097dc:	a909      	add	r1, sp, #36	; 0x24
 80097de:	9100      	str	r1, [sp, #0]
 80097e0:	ab01      	add	r3, sp, #4
 80097e2:	f10d 0205 	add.w	r2, sp, #5
 80097e6:	2101      	movs	r1, #1
 80097e8:	4640      	mov	r0, r8
 80097ea:	f003 f8a2 	bl	800c932 <llhwc_cmn_set_phy>
 80097ee:	f8df 0990 	ldr.w	r0, [pc, #2448]	; 800a180 <??DataTable37_1>
 80097f2:	f89d 2005 	ldrb.w	r2, [sp, #5]
 80097f6:	6901      	ldr	r1, [r0, #16]
 80097f8:	f362 210b 	bfi	r1, r2, #8, #4
 80097fc:	f89d 2004 	ldrb.w	r2, [sp, #4]
 8009800:	6101      	str	r1, [r0, #16]
 8009802:	f362 310f 	bfi	r1, r2, #12, #4
 8009806:	6101      	str	r1, [r0, #16]

08009808 <??llhwc_lst_add_rmv_dev_12>:
 8009808:	2002      	movs	r0, #2
 800980a:	f002 ff6b 	bl	800c6e4 <llhwc_pwr_switch>
 800980e:	0007      	movs	r7, r0
 8009810:	f040 80b3 	bne.w	800997a <??llhwc_lst_add_rmv_dev_10>
 8009814:	2700      	movs	r7, #0
 8009816:	f002 fd38 	bl	800c28a <llhwc_cmn_is_dp_slp_enabled>
 800981a:	b120      	cbz	r0, 8009826 <??llhwc_lst_add_rmv_dev_13>
 800981c:	2040      	movs	r0, #64	; 0x40
 800981e:	270c      	movs	r7, #12
 8009820:	f7f6 fd06 	bl	8000230 <bsp_debug_gpio_toggle>
 8009824:	e050      	b.n	80098c8 <??llhwc_lst_add_rmv_dev_14>

08009826 <??llhwc_lst_add_rmv_dev_13>:
 8009826:	f8ad 0014 	strh.w	r0, [sp, #20]
 800982a:	f10d 0814 	add.w	r8, sp, #20
 800982e:	211e      	movs	r1, #30
 8009830:	2028      	movs	r0, #40	; 0x28
 8009832:	f8a8 1002 	strh.w	r1, [r8, #2]
 8009836:	f8a8 0004 	strh.w	r0, [r8, #4]
 800983a:	2146      	movs	r1, #70	; 0x46
 800983c:	205a      	movs	r0, #90	; 0x5a
 800983e:	f8a8 1006 	strh.w	r1, [r8, #6]
 8009842:	f8a8 0008 	strh.w	r0, [r8, #8]
 8009846:	2164      	movs	r1, #100	; 0x64
 8009848:	206e      	movs	r0, #110	; 0x6e
 800984a:	f8ad 101e 	strh.w	r1, [sp, #30]
 800984e:	f8a8 000c 	strh.w	r0, [r8, #12]
 8009852:	a802      	add	r0, sp, #8
 8009854:	2201      	movs	r2, #1
 8009856:	2102      	movs	r1, #2
 8009858:	7042      	strb	r2, [r0, #1]
 800985a:	7081      	strb	r1, [r0, #2]
 800985c:	2203      	movs	r2, #3
 800985e:	2104      	movs	r1, #4
 8009860:	70c2      	strb	r2, [r0, #3]
 8009862:	7101      	strb	r1, [r0, #4]
 8009864:	2205      	movs	r2, #5
 8009866:	2106      	movs	r1, #6
 8009868:	7142      	strb	r2, [r0, #5]
 800986a:	7181      	strb	r1, [r0, #6]
 800986c:	f88d 7008 	strb.w	r7, [sp, #8]
 8009870:	2103      	movs	r1, #3
 8009872:	2001      	movs	r0, #1
 8009874:	f003 ff5a 	bl	800d72c <llhwc_cmn_control_aclk>
 8009878:	f10d 0a08 	add.w	sl, sp, #8
 800987c:	f04f 0c07 	mov.w	ip, #7
 8009880:	f8df e900 	ldr.w	lr, [pc, #2304]	; 800a184 <??DataTable37_2>
 8009884:	f8df 9640 	ldr.w	r9, [pc, #1600]	; 8009ec8 <??DataTable36>

08009888 <??llhwc_lst_add_rmv_dev_15>:
 8009888:	f81a 0b01 	ldrb.w	r0, [sl], #1
 800988c:	f109 0b04 	add.w	fp, r9, #4
 8009890:	eb00 0140 	add.w	r1, r0, r0, lsl #1
 8009894:	008a      	lsls	r2, r1, #2
 8009896:	f85b 1002 	ldr.w	r1, [fp, r2]
 800989a:	444a      	add	r2, r9
 800989c:	6813      	ldr	r3, [r2, #0]
 800989e:	f85e 3003 	ldr.w	r3, [lr, r3]
 80098a2:	f838 0010 	ldrh.w	r0, [r8, r0, lsl #1]
 80098a6:	f8d2 b008 	ldr.w	fp, [r2, #8]
 80098aa:	438b      	bics	r3, r1
 80098ac:	6812      	ldr	r2, [r2, #0]
 80098ae:	fa00 f00b 	lsl.w	r0, r0, fp
 80098b2:	4001      	ands	r1, r0
 80098b4:	4319      	orrs	r1, r3
 80098b6:	f84e 1002 	str.w	r1, [lr, r2]
 80098ba:	f1bc 0c01 	subs.w	ip, ip, #1
 80098be:	d1e3      	bne.n	8009888 <??llhwc_lst_add_rmv_dev_15>
 80098c0:	2103      	movs	r1, #3
 80098c2:	2000      	movs	r0, #0
 80098c4:	f003 ff32 	bl	800d72c <llhwc_cmn_control_aclk>

080098c8 <??llhwc_lst_add_rmv_dev_14>:
 80098c8:	2f00      	cmp	r7, #0
 80098ca:	d156      	bne.n	800997a <??llhwc_lst_add_rmv_dev_10>
 80098cc:	2103      	movs	r1, #3
 80098ce:	2001      	movs	r0, #1
 80098d0:	f003 ff2c 	bl	800d72c <llhwc_cmn_control_aclk>
 80098d4:	f8df 88b0 	ldr.w	r8, [pc, #2224]	; 800a188 <??DataTable37_3>
 80098d8:	f8d8 0000 	ldr.w	r0, [r8]
 80098dc:	2300      	movs	r3, #0
 80098de:	f364 0002 	bfi	r0, r4, #0, #3
 80098e2:	f8c8 0000 	str.w	r0, [r8]
 80098e6:	f8d8 1014 	ldr.w	r1, [r8, #20]
 80098ea:	7930      	ldrb	r0, [r6, #4]
 80098ec:	7972      	ldrb	r2, [r6, #5]
 80098ee:	0c09      	lsrs	r1, r1, #16
 80098f0:	ea40 2002 	orr.w	r0, r0, r2, lsl #8
 80098f4:	ea40 4101 	orr.w	r1, r0, r1, lsl #16
 80098f8:	f8c8 1014 	str.w	r1, [r8, #20]
 80098fc:	f8d8 0018 	ldr.w	r0, [r8, #24]
 8009900:	7831      	ldrb	r1, [r6, #0]
 8009902:	7872      	ldrb	r2, [r6, #1]
 8009904:	78b0      	ldrb	r0, [r6, #2]
 8009906:	ea41 2102 	orr.w	r1, r1, r2, lsl #8
 800990a:	78f2      	ldrb	r2, [r6, #3]
 800990c:	ea41 4100 	orr.w	r1, r1, r0, lsl #16
 8009910:	ea41 6102 	orr.w	r1, r1, r2, lsl #24
 8009914:	2201      	movs	r2, #1
 8009916:	f8c8 1018 	str.w	r1, [r8, #24]
 800991a:	f8d8 0014 	ldr.w	r0, [r8, #20]
 800991e:	2100      	movs	r1, #0
 8009920:	f365 4010 	bfi	r0, r5, #16, #1
 8009924:	f8c8 0014 	str.w	r0, [r8, #20]
 8009928:	f8d8 0034 	ldr.w	r0, [r8, #52]	; 0x34
 800992c:	f040 0002 	orr.w	r0, r0, #2
 8009930:	f8c8 0034 	str.w	r0, [r8, #52]	; 0x34
 8009934:	9100      	str	r1, [sp, #0]
 8009936:	f640 0174 	movw	r1, #2164	; 0x874
 800993a:	20c8      	movs	r0, #200	; 0xc8
 800993c:	f002 fced 	bl	800c31a <llhwc_polling>
 8009940:	0007      	movs	r7, r0
 8009942:	d116      	bne.n	8009972 <??llhwc_lst_add_rmv_dev_16>
 8009944:	f8d8 0040 	ldr.w	r0, [r8, #64]	; 0x40
 8009948:	f040 0001 	orr.w	r0, r0, #1
 800994c:	f8c8 0040 	str.w	r0, [r8, #64]	; 0x40
 8009950:	f8d8 0040 	ldr.w	r0, [r8, #64]	; 0x40
 8009954:	0840      	lsrs	r0, r0, #1
 8009956:	0040      	lsls	r0, r0, #1
 8009958:	f8c8 0040 	str.w	r0, [r8, #64]	; 0x40
 800995c:	f8d8 0034 	ldr.w	r0, [r8, #52]	; 0x34
 8009960:	f020 0002 	bic.w	r0, r0, #2
 8009964:	f8c8 0034 	str.w	r0, [r8, #52]	; 0x34
 8009968:	9804      	ldr	r0, [sp, #16]
 800996a:	b2c0      	uxtb	r0, r0
 800996c:	f002 feba 	bl	800c6e4 <llhwc_pwr_switch>
 8009970:	4607      	mov	r7, r0

08009972 <??llhwc_lst_add_rmv_dev_16>:
 8009972:	2103      	movs	r1, #3
 8009974:	2000      	movs	r0, #0
 8009976:	f003 fed9 	bl	800d72c <llhwc_cmn_control_aclk>

0800997a <??llhwc_lst_add_rmv_dev_10>:
 800997a:	f8df 0b88 	ldr.w	r0, [pc, #2952]	; 800a504 <??DataTable38>
 800997e:	6800      	ldr	r0, [r0, #0]
 8009980:	f00a fd77 	bl	8014472 <os_rcrsv_mutex_release>

08009984 <??llhwc_lst_add_rmv_dev_7>:
 8009984:	4638      	mov	r0, r7
 8009986:	e67e      	b.n	8009686 <?Subroutine0>

08009988 <?_0>:
 8009988:	0000 0000 001e 0000 0028 0000 0046 0000     ........(...F...
 8009998:	005a 0000 0064 0000 006e 0000 007e 0000     Z...d...n...~...

080099a8 <llhwc_lst_edit_sid>:
 80099a8:	f8df 27e8 	ldr.w	r2, [pc, #2024]	; 800a194 <??DataTable37_6>
 80099ac:	eb02 0280 	add.w	r2, r2, r0, lsl #2
 80099b0:	6810      	ldr	r0, [r2, #0]
 80099b2:	f361 5058 	bfi	r0, r1, #21, #4
 80099b6:	6010      	str	r0, [r2, #0]
 80099b8:	4770      	bx	lr

080099ba <llhwc_lst_get_sid>:
 80099ba:	f8df 17d8 	ldr.w	r1, [pc, #2008]	; 800a194 <??DataTable37_6>
 80099be:	eb01 0180 	add.w	r1, r1, r0, lsl #2
 80099c2:	6808      	ldr	r0, [r1, #0]
 80099c4:	0d40      	lsrs	r0, r0, #21
 80099c6:	e046      	b.n	8009a56 <?Subroutine4>

080099c8 <llhwc_lst_rmv_rand_add>:
 80099c8:	b51c      	push	{r2, r3, r4, lr}
 80099ca:	4604      	mov	r4, r0
 80099cc:	2101      	movs	r1, #1
 80099ce:	4668      	mov	r0, sp
 80099d0:	f7f6 fc14 	bl	80001fc <gen_rnd_num>
 80099d4:	2c03      	cmp	r4, #3
 80099d6:	d10e      	bne.n	80099f6 <??llhwc_lst_rmv_rand_add_0>
 80099d8:	f89d 0000 	ldrb.w	r0, [sp]
 80099dc:	f8df 1db0 	ldr.w	r1, [pc, #3504]	; 800a790 <??DataTable39>
 80099e0:	fb80 2101 	smull	r2, r1, r0, r1
 80099e4:	1089      	asrs	r1, r1, #2
 80099e6:	eb01 71d1 	add.w	r1, r1, r1, lsr #31
 80099ea:	eb01 0381 	add.w	r3, r1, r1, lsl #2
 80099ee:	eba0 0043 	sub.w	r0, r0, r3, lsl #1
 80099f2:	3023      	adds	r0, #35	; 0x23
 80099f4:	e00e      	b.n	8009a14 <??llhwc_lst_rmv_rand_add_1>

080099f6 <??llhwc_lst_rmv_rand_add_0>:
 80099f6:	2c04      	cmp	r4, #4
 80099f8:	d10e      	bne.n	8009a18 <??llhwc_lst_rmv_rand_add_2>
 80099fa:	f89d 0000 	ldrb.w	r0, [sp]
 80099fe:	f8df 1d90 	ldr.w	r1, [pc, #3472]	; 800a790 <??DataTable39>
 8009a02:	fb80 2101 	smull	r2, r1, r0, r1
 8009a06:	1049      	asrs	r1, r1, #1
 8009a08:	eb01 71d1 	add.w	r1, r1, r1, lsr #31
 8009a0c:	eb01 0181 	add.w	r1, r1, r1, lsl #2
 8009a10:	1a40      	subs	r0, r0, r1
 8009a12:	302d      	adds	r0, #45	; 0x2d

08009a14 <??llhwc_lst_rmv_rand_add_1>:
 8009a14:	f88d 0000 	strb.w	r0, [sp]

08009a18 <??llhwc_lst_rmv_rand_add_2>:
 8009a18:	f89d 0000 	ldrb.w	r0, [sp]
 8009a1c:	f000 f837 	bl	8009a8e <llhwc_lst_rmv_by_loc>
 8009a20:	2000      	movs	r0, #0
 8009a22:	bd16      	pop	{r1, r2, r4, pc}

08009a24 <llhwc_lst_read_dev_addr>:
 8009a24:	0080      	lsls	r0, r0, #2
 8009a26:	b51c      	push	{r2, r3, r4, lr}
 8009a28:	f100 4290 	add.w	r2, r0, #1207959552	; 0x48000000
 8009a2c:	f502 3220 	add.w	r2, r2, #163840	; 0x28000
 8009a30:	6814      	ldr	r4, [r2, #0]
 8009a32:	460b      	mov	r3, r1
 8009a34:	f8df 175c 	ldr.w	r1, [pc, #1884]	; 800a194 <??DataTable37_6>
 8009a38:	9400      	str	r4, [sp, #0]
 8009a3a:	5808      	ldr	r0, [r1, r0]
 8009a3c:	2206      	movs	r2, #6
 8009a3e:	4669      	mov	r1, sp
 8009a40:	b280      	uxth	r0, r0
 8009a42:	9001      	str	r0, [sp, #4]
 8009a44:	4618      	mov	r0, r3
 8009a46:	f002 b921 	b.w	800bc8c <?Subroutine6>

08009a4a <llhwc_lst_read_indicators>:
 8009a4a:	f8df 1748 	ldr.w	r1, [pc, #1864]	; 800a194 <??DataTable37_6>
 8009a4e:	eb01 0180 	add.w	r1, r1, r0, lsl #2
 8009a52:	6808      	ldr	r0, [r1, #0]
 8009a54:	0c40      	lsrs	r0, r0, #17

08009a56 <?Subroutine4>:
 8009a56:	f000 000f 	and.w	r0, r0, #15
 8009a5a:	4770      	bx	lr

08009a5c <llhwc_lst_edit_indicators>:
 8009a5c:	f8df 3734 	ldr.w	r3, [pc, #1844]	; 800a194 <??DataTable37_6>
 8009a60:	b430      	push	{r4, r5}
 8009a62:	eb03 0381 	add.w	r3, r3, r1, lsl #2
 8009a66:	681d      	ldr	r5, [r3, #0]
 8009a68:	43d2      	mvns	r2, r2
 8009a6a:	f1c0 0113 	rsb	r1, r0, #19
 8009a6e:	2401      	movs	r4, #1
 8009a70:	408c      	lsls	r4, r1
 8009a72:	fa02 f101 	lsl.w	r1, r2, r1
 8009a76:	43a5      	bics	r5, r4
 8009a78:	4021      	ands	r1, r4
 8009a7a:	4329      	orrs	r1, r5
 8009a7c:	6019      	str	r1, [r3, #0]
 8009a7e:	2806      	cmp	r0, #6
 8009a80:	d103      	bne.n	8009a8a <??llhwc_lst_edit_indicators_0>
 8009a82:	6818      	ldr	r0, [r3, #0]
 8009a84:	f362 5014 	bfi	r0, r2, #20, #1
 8009a88:	6018      	str	r0, [r3, #0]

08009a8a <??llhwc_lst_edit_indicators_0>:
 8009a8a:	bc30      	pop	{r4, r5}
 8009a8c:	4770      	bx	lr

08009a8e <llhwc_lst_rmv_by_loc>:
 8009a8e:	2820      	cmp	r0, #32
 8009a90:	bfb2      	itee	lt
 8009a92:	f8df 16f8 	ldrlt.w	r1, [pc, #1784]	; 800a18c <??DataTable37_4>
 8009a96:	3820      	subge	r0, #32
 8009a98:	f8df 16f4 	ldrge.w	r1, [pc, #1780]	; 800a190 <??DataTable37_5>
 8009a9c:	680a      	ldr	r2, [r1, #0]
 8009a9e:	2301      	movs	r3, #1
 8009aa0:	fa03 f000 	lsl.w	r0, r3, r0
 8009aa4:	ea22 0000 	bic.w	r0, r2, r0
 8009aa8:	6008      	str	r0, [r1, #0]
 8009aaa:	4770      	bx	lr

08009aac <llhwc_lst_clr>:
 8009aac:	f20f 0258 	addw	r2, pc, #88	; 0x58
 8009ab0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8009ab4:	e892 51f8 	ldmia.w	r2, {r3, r4, r5, r6, r7, r8, ip, lr}
 8009ab8:	b088      	sub	sp, #32
 8009aba:	4669      	mov	r1, sp
 8009abc:	e881 51f8 	stmia.w	r1, {r3, r4, r5, r6, r7, r8, ip, lr}
 8009ac0:	466a      	mov	r2, sp
 8009ac2:	f85d 1020 	ldr.w	r1, [sp, r0, lsl #2]
 8009ac6:	eb02 0080 	add.w	r0, r2, r0, lsl #2
 8009aca:	6840      	ldr	r0, [r0, #4]
 8009acc:	0849      	lsrs	r1, r1, #1
 8009ace:	ebb1 0f50 	cmp.w	r1, r0, lsr #1
 8009ad2:	d215      	bcs.n	8009b00 <??llhwc_lst_clr_0>
 8009ad4:	2201      	movs	r2, #1
 8009ad6:	f8df 36b4 	ldr.w	r3, [pc, #1716]	; 800a18c <??DataTable37_4>

08009ada <??llhwc_lst_clr_1>:
 8009ada:	2920      	cmp	r1, #32
 8009adc:	d205      	bcs.n	8009aea <??llhwc_lst_clr_2>
 8009ade:	681c      	ldr	r4, [r3, #0]
 8009ae0:	fa02 f501 	lsl.w	r5, r2, r1
 8009ae4:	43ac      	bics	r4, r5
 8009ae6:	601c      	str	r4, [r3, #0]
 8009ae8:	e006      	b.n	8009af8 <??llhwc_lst_clr_3>

08009aea <??llhwc_lst_clr_2>:
 8009aea:	685e      	ldr	r6, [r3, #4]
 8009aec:	f101 04e0 	add.w	r4, r1, #224	; 0xe0
 8009af0:	fa02 f404 	lsl.w	r4, r2, r4
 8009af4:	43a6      	bics	r6, r4
 8009af6:	605e      	str	r6, [r3, #4]

08009af8 <??llhwc_lst_clr_3>:
 8009af8:	1c49      	adds	r1, r1, #1
 8009afa:	ebb1 0f50 	cmp.w	r1, r0, lsr #1
 8009afe:	d3ec      	bcc.n	8009ada <??llhwc_lst_clr_1>

08009b00 <??llhwc_lst_clr_0>:
 8009b00:	b008      	add	sp, #32
 8009b02:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
	...

08009b08 <?_1>:
 8009b08:	0000 0000 001e 0000 0028 0000 0046 0000     ........(...F...
 8009b18:	005a 0000 0064 0000 006e 0000 007e 0000     Z...d...n...~...

08009b28 <llhwc_init>:
 8009b28:	b510      	push	{r4, lr}
 8009b2a:	f8df 1c68 	ldr.w	r1, [pc, #3176]	; 800a794 <??DataTable39_1>
 8009b2e:	2001      	movs	r0, #1
 8009b30:	f002 fef5 	bl	800c91e <llhwc_cmn_reg_isr>
 8009b34:	f8df 1c60 	ldr.w	r1, [pc, #3168]	; 800a798 <??DataTable39_2>
 8009b38:	2002      	movs	r0, #2
 8009b3a:	f002 fef0 	bl	800c91e <llhwc_cmn_reg_isr>
 8009b3e:	2000      	movs	r0, #0
 8009b40:	f8df 1c88 	ldr.w	r1, [pc, #3208]	; 800a7cc <??DataTable40>
 8009b44:	6388      	str	r0, [r1, #56]	; 0x38
 8009b46:	f7ff fa92 	bl	800906e <llhwc_reset>
 8009b4a:	4604      	mov	r4, r0
 8009b4c:	f8df 1c80 	ldr.w	r1, [pc, #3200]	; 800a7d0 <??DataTable40_1>
 8009b50:	2000      	movs	r0, #0
 8009b52:	f002 ff60 	bl	800ca16 <llhwc_rgstr_func>
 8009b56:	f8df 1c7c 	ldr.w	r1, [pc, #3196]	; 800a7d4 <??DataTable40_2>
 8009b5a:	2003      	movs	r0, #3
 8009b5c:	f002 ff5b 	bl	800ca16 <llhwc_rgstr_func>
 8009b60:	f8df 0c74 	ldr.w	r0, [pc, #3188]	; 800a7d8 <??DataTable40_3>
 8009b64:	6802      	ldr	r2, [r0, #0]
 8009b66:	2101      	movs	r1, #1
 8009b68:	f361 0202 	bfi	r2, r1, #0, #3
 8009b6c:	6002      	str	r2, [r0, #0]
 8009b6e:	f002 f861 	bl	800bc34 <llhwc_init_empty_pkts>
 8009b72:	4620      	mov	r0, r4
 8009b74:	bd10      	pop	{r4, pc}

08009b76 <llhwc_rgstr_evnt_schdlr_cb>:
 8009b76:	f8df 1c54 	ldr.w	r1, [pc, #3156]	; 800a7cc <??DataTable40>
 8009b7a:	6108      	str	r0, [r1, #16]
 8009b7c:	4770      	bx	lr

08009b7e <llhwc_128_encrypt>:
 8009b7e:	b538      	push	{r3, r4, r5, lr}
 8009b80:	460c      	mov	r4, r1
 8009b82:	4615      	mov	r5, r2
 8009b84:	4601      	mov	r1, r0
 8009b86:	b086      	sub	sp, #24
 8009b88:	2210      	movs	r2, #16
 8009b8a:	4628      	mov	r0, r5
 8009b8c:	f004 ffdc 	bl	800eb48 <ble_memcpy>
 8009b90:	2301      	movs	r3, #1
 8009b92:	2002      	movs	r0, #2
 8009b94:	9305      	str	r3, [sp, #20]
 8009b96:	9004      	str	r0, [sp, #16]
 8009b98:	9303      	str	r3, [sp, #12]
 8009b9a:	9302      	str	r3, [sp, #8]
 8009b9c:	2310      	movs	r3, #16
 8009b9e:	2000      	movs	r0, #0
 8009ba0:	9301      	str	r3, [sp, #4]
 8009ba2:	9000      	str	r0, [sp, #0]
 8009ba4:	2300      	movs	r3, #0
 8009ba6:	2200      	movs	r2, #0
 8009ba8:	4621      	mov	r1, r4
 8009baa:	4628      	mov	r0, r5
 8009bac:	f002 ffb4 	bl	800cb18 <llhwc_cmn_crypto>
 8009bb0:	b007      	add	sp, #28
 8009bb2:	bd30      	pop	{r4, r5, pc}

08009bb4 <llhwc_is_dtm_enabled>:
 8009bb4:	f8df 1c14 	ldr.w	r1, [pc, #3092]	; 800a7cc <??DataTable40>
 8009bb8:	6aca      	ldr	r2, [r1, #44]	; 0x2c
 8009bba:	2001      	movs	r0, #1
 8009bbc:	f5b2 5f80 	cmp.w	r2, #4096	; 0x1000
 8009bc0:	bf08      	it	eq
 8009bc2:	2000      	moveq	r0, #0
 8009bc4:	4770      	bx	lr

08009bc6 <llhwc_stp_dtm>:
 8009bc6:	b5f0      	push	{r4, r5, r6, r7, lr}
 8009bc8:	4607      	mov	r7, r0
 8009bca:	f8df 5938 	ldr.w	r5, [pc, #2360]	; 800a504 <??DataTable38>
 8009bce:	6828      	ldr	r0, [r5, #0]
 8009bd0:	b083      	sub	sp, #12
 8009bd2:	f04f 31ff 	mov.w	r1, #4294967295	; 0xffffffff
 8009bd6:	f00a fc46 	bl	8014466 <os_rcrsv_mutex_wait>
 8009bda:	f8df 6bf0 	ldr.w	r6, [pc, #3056]	; 800a7cc <??DataTable40>
 8009bde:	6af0      	ldr	r0, [r6, #44]	; 0x2c
 8009be0:	f5b0 5f80 	cmp.w	r0, #4096	; 0x1000
 8009be4:	d104      	bne.n	8009bf0 <??llhwc_stp_dtm_0>
 8009be6:	2040      	movs	r0, #64	; 0x40
 8009be8:	240c      	movs	r4, #12
 8009bea:	f7f6 fb21 	bl	8000230 <bsp_debug_gpio_toggle>
 8009bee:	e031      	b.n	8009c54 <??llhwc_stp_dtm_1>

08009bf0 <??llhwc_stp_dtm_0>:
 8009bf0:	f8df 0be8 	ldr.w	r0, [pc, #3048]	; 800a7dc <??DataTable40_4>
 8009bf4:	6801      	ldr	r1, [r0, #0]
 8009bf6:	2303      	movs	r3, #3
 8009bf8:	2208      	movs	r2, #8
 8009bfa:	f041 0101 	orr.w	r1, r1, #1
 8009bfe:	6001      	str	r1, [r0, #0]
 8009c00:	2000      	movs	r0, #0
 8009c02:	9000      	str	r0, [sp, #0]
 8009c04:	f640 0174 	movw	r1, #2164	; 0x874
 8009c08:	f44f 30e0 	mov.w	r0, #114688	; 0x1c000
 8009c0c:	f002 fb85 	bl	800c31a <llhwc_polling>
 8009c10:	0004      	movs	r4, r0
 8009c12:	d11f      	bne.n	8009c54 <??llhwc_stp_dtm_1>
 8009c14:	6af0      	ldr	r0, [r6, #44]	; 0x2c
 8009c16:	f5b0 7f00 	cmp.w	r0, #512	; 0x200
 8009c1a:	bf0f      	iteee	eq
 8009c1c:	2000      	moveq	r0, #0
 8009c1e:	f8df 0bc0 	ldrne.w	r0, [pc, #3008]	; 800a7e0 <??DataTable40_5>
 8009c22:	6800      	ldrne	r0, [r0, #0]
 8009c24:	0c00      	lsrne	r0, r0, #16
 8009c26:	8038      	strh	r0, [r7, #0]
 8009c28:	f004 fdae 	bl	800e788 <llhwc_phy_read_rssi>
 8009c2c:	f8a6 0040 	strh.w	r0, [r6, #64]	; 0x40
 8009c30:	6d30      	ldr	r0, [r6, #80]	; 0x50
 8009c32:	b168      	cbz	r0, 8009c50 <??llhwc_stp_dtm_2>
 8009c34:	a801      	add	r0, sp, #4
 8009c36:	f002 fa30 	bl	800c09a <llhwc_slptmr_get>
 8009c3a:	9901      	ldr	r1, [sp, #4]
 8009c3c:	6cf0      	ldr	r0, [r6, #76]	; 0x4c
 8009c3e:	1a08      	subs	r0, r1, r0
 8009c40:	ebc0 1240 	rsb	r2, r0, r0, lsl #5
 8009c44:	eb02 0290 	add.w	r2, r2, r0, lsr #2
 8009c48:	6d30      	ldr	r0, [r6, #80]	; 0x50
 8009c4a:	fbb2 f0f0 	udiv	r0, r2, r0
 8009c4e:	64f0      	str	r0, [r6, #76]	; 0x4c

08009c50 <??llhwc_stp_dtm_2>:
 8009c50:	f001 fff0 	bl	800bc34 <llhwc_init_empty_pkts>

08009c54 <??llhwc_stp_dtm_1>:
 8009c54:	f004 fd60 	bl	800e718 <llhwc_phy_reset_freq_correction_reg>
 8009c58:	2001      	movs	r0, #1
 8009c5a:	f003 fd4f 	bl	800d6fc <llhwc_cmn_evnt_notify>
 8009c5e:	6828      	ldr	r0, [r5, #0]
 8009c60:	f00a fc07 	bl	8014472 <os_rcrsv_mutex_release>

08009c64 <?Subroutine5>:
 8009c64:	4620      	mov	r0, r4
 8009c66:	b003      	add	sp, #12
 8009c68:	bdf0      	pop	{r4, r5, r6, r7, pc}
	...

08009c6c <??DataTable35>:
 8009c6c:	0840 4802                                   @..H

08009c70 <??DataTable35_1>:
 8009c70:	0770 2000                                   p.. 

08009c74 <??DataTable35_2>:
 8009c74:	0778 2000                                   x.. 

08009c78 <??DataTable35_3>:
 8009c78:	0448 4802                                   H..H

08009c7c <llhwc_start_dtm>:
 8009c7c:	e92d 4ff1 	stmdb	sp!, {r0, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8009c80:	b086      	sub	sp, #24
 8009c82:	4691      	mov	r9, r2
 8009c84:	461d      	mov	r5, r3
 8009c86:	2204      	movs	r2, #4
 8009c88:	2100      	movs	r1, #0
 8009c8a:	a802      	add	r0, sp, #8
 8009c8c:	f027 f98f 	bl	8030fae <memset>
 8009c90:	4648      	mov	r0, r9
 8009c92:	4629      	mov	r1, r5
 8009c94:	f7fe fc74 	bl	8008580 <llhwc_get_sm_mode_from_event_type>
 8009c98:	2100      	movs	r1, #0
 8009c9a:	f88d 0000 	strb.w	r0, [sp]
 8009c9e:	f88d 1006 	strb.w	r1, [sp, #6]
 8009ca2:	f003 ff8a 	bl	800dbba <llhwc_phy_get_num_of_prdc_clbr_chnls>
 8009ca6:	2101      	movs	r1, #1
 8009ca8:	2200      	movs	r2, #0
 8009caa:	4682      	mov	sl, r0
 8009cac:	f88d 1005 	strb.w	r1, [sp, #5]
 8009cb0:	f88d 2004 	strb.w	r2, [sp, #4]
 8009cb4:	2d00      	cmp	r5, #0
 8009cb6:	bf04      	itt	eq
 8009cb8:	f5b9 6f00 	cmpeq.w	r9, #2048	; 0x800
 8009cbc:	f44f 7900 	moveq.w	r9, #512	; 0x200
 8009cc0:	f002 fae3 	bl	800c28a <llhwc_cmn_is_dp_slp_enabled>
 8009cc4:	bb58      	cbnz	r0, 8009d1e <??llhwc_start_dtm_0>
 8009cc6:	f8df 8b1c 	ldr.w	r8, [pc, #2844]	; 800a7e4 <??DataTable40_6>
 8009cca:	2002      	movs	r0, #2
 8009ccc:	f888 0008 	strb.w	r0, [r8, #8]
 8009cd0:	f8df 44ac 	ldr.w	r4, [pc, #1196]	; 800a180 <??DataTable37_1>
 8009cd4:	2224      	movs	r2, #36	; 0x24
 8009cd6:	2100      	movs	r1, #0
 8009cd8:	4620      	mov	r0, r4
 8009cda:	f004 ff86 	bl	800ebea <ble_memset>
 8009cde:	6820      	ldr	r0, [r4, #0]
 8009ce0:	2d00      	cmp	r5, #0
 8009ce2:	f440 407f 	orr.w	r0, r0, #65280	; 0xff00
 8009ce6:	f040 00ff 	orr.w	r0, r0, #255	; 0xff
 8009cea:	6020      	str	r0, [r4, #0]
 8009cec:	9f13      	ldr	r7, [sp, #76]	; 0x4c
 8009cee:	bf08      	it	eq
 8009cf0:	f5b9 7f00 	cmpeq.w	r9, #512	; 0x200
 8009cf4:	d10b      	bne.n	8009d0e <??llhwc_start_dtm_1>
 8009cf6:	2f03      	cmp	r7, #3
 8009cf8:	d103      	bne.n	8009d02 <??llhwc_start_dtm_2>
 8009cfa:	2002      	movs	r0, #2
 8009cfc:	f8ad 000a 	strh.w	r0, [sp, #10]
 8009d00:	e007      	b.n	8009d12 <??llhwc_start_dtm_3>

08009d02 <??llhwc_start_dtm_2>:
 8009d02:	2f04      	cmp	r7, #4
 8009d04:	d106      	bne.n	8009d14 <??llhwc_start_dtm_4>
 8009d06:	2001      	movs	r0, #1
 8009d08:	f8ad 000a 	strh.w	r0, [sp, #10]
 8009d0c:	e002      	b.n	8009d14 <??llhwc_start_dtm_4>

08009d0e <??llhwc_start_dtm_1>:
 8009d0e:	2f03      	cmp	r7, #3
 8009d10:	d100      	bne.n	8009d14 <??llhwc_start_dtm_4>

08009d12 <??llhwc_start_dtm_3>:
 8009d12:	2704      	movs	r7, #4

08009d14 <??llhwc_start_dtm_4>:
 8009d14:	f8d8 0000 	ldr.w	r0, [r8]
 8009d18:	f5b0 5f80 	cmp.w	r0, #4096	; 0x1000
 8009d1c:	d005      	beq.n	8009d2a <??llhwc_start_dtm_5>

08009d1e <??llhwc_start_dtm_0>:
 8009d1e:	2040      	movs	r0, #64	; 0x40
 8009d20:	f04f 0a0c 	mov.w	sl, #12
 8009d24:	f7f6 fa84 	bl	8000230 <bsp_debug_gpio_toggle>
 8009d28:	e0c7      	b.n	8009eba <??llhwc_start_dtm_6>

08009d2a <??llhwc_start_dtm_5>:
 8009d2a:	f002 fdf5 	bl	800c918 <get_pwr_domain>
 8009d2e:	2802      	cmp	r0, #2
 8009d30:	db0a      	blt.n	8009d48 <??llhwc_start_dtm_7>
 8009d32:	f002 fdf1 	bl	800c918 <get_pwr_domain>
 8009d36:	2808      	cmp	r0, #8
 8009d38:	dc06      	bgt.n	8009d48 <??llhwc_start_dtm_7>
 8009d3a:	4965      	ldr	r1, [pc, #404]	; (8009ed0 <??DataTable36_2>)
 8009d3c:	f891 0043 	ldrb.w	r0, [r1, #67]	; 0x43
 8009d40:	b910      	cbnz	r0, 8009d48 <??llhwc_start_dtm_7>
 8009d42:	f04f 0a03 	mov.w	sl, #3
 8009d46:	e0b8      	b.n	8009eba <??llhwc_start_dtm_6>

08009d48 <??llhwc_start_dtm_7>:
 8009d48:	f8c8 9000 	str.w	r9, [r8]
 8009d4c:	f8df 6a98 	ldr.w	r6, [pc, #2712]	; 800a7e8 <??DataTable40_7>
 8009d50:	6db0      	ldr	r0, [r6, #88]	; 0x58
 8009d52:	f440 40fe 	orr.w	r0, r0, #32512	; 0x7f00
 8009d56:	f040 00ff 	orr.w	r0, r0, #255	; 0xff
 8009d5a:	65b0      	str	r0, [r6, #88]	; 0x58
 8009d5c:	2000      	movs	r0, #0
 8009d5e:	f003 fccd 	bl	800d6fc <llhwc_cmn_evnt_notify>
 8009d62:	4652      	mov	r2, sl
 8009d64:	f10d 0106 	add.w	r1, sp, #6
 8009d68:	f10d 0005 	add.w	r0, sp, #5
 8009d6c:	f004 f97d 	bl	800e06a <llhwc_phy_init_clbr>
 8009d70:	2100      	movs	r1, #0
 8009d72:	2001      	movs	r0, #1
 8009d74:	f003 fcda 	bl	800d72c <llhwc_cmn_control_aclk>
 8009d78:	2002      	movs	r0, #2
 8009d7a:	f002 fcb3 	bl	800c6e4 <llhwc_pwr_switch>
 8009d7e:	ea5f 0a00 	movs.w	sl, r0
 8009d82:	f040 809a 	bne.w	8009eba <??llhwc_start_dtm_6>
 8009d86:	68a0      	ldr	r0, [r4, #8]
 8009d88:	f000 407f 	and.w	r0, r0, #4278190080	; 0xff000000
 8009d8c:	f040 1055 	orr.w	r0, r0, #5570645	; 0x550055
 8009d90:	f440 40aa 	orr.w	r0, r0, #21760	; 0x5500
 8009d94:	60a0      	str	r0, [r4, #8]
 8009d96:	f8df 0a54 	ldr.w	r0, [pc, #2644]	; 800a7ec <??DataTable40_8>
 8009d9a:	6060      	str	r0, [r4, #4]
 8009d9c:	6821      	ldr	r1, [r4, #0]
 8009d9e:	2001      	movs	r0, #1
 8009da0:	f360 611c 	bfi	r1, r0, #24, #5
 8009da4:	6021      	str	r1, [r4, #0]
 8009da6:	69e1      	ldr	r1, [r4, #28]
 8009da8:	f44f 4002 	mov.w	r0, #33280	; 0x8200
 8009dac:	f360 010f 	bfi	r1, r0, #0, #16
 8009db0:	61e1      	str	r1, [r4, #28]
 8009db2:	f8bd 100a 	ldrh.w	r1, [sp, #10]
 8009db6:	f8df 0a38 	ldr.w	r0, [pc, #2616]	; 800a7f0 <??DataTable40_9>
 8009dba:	2902      	cmp	r1, #2
 8009dbc:	d104      	bne.n	8009dc8 <??llhwc_start_dtm_8>
 8009dbe:	6802      	ldr	r2, [r0, #0]
 8009dc0:	f022 6200 	bic.w	r2, r2, #134217728	; 0x8000000
 8009dc4:	6002      	str	r2, [r0, #0]
 8009dc6:	e003      	b.n	8009dd0 <??llhwc_start_dtm_9>

08009dc8 <??llhwc_start_dtm_8>:
 8009dc8:	6801      	ldr	r1, [r0, #0]
 8009dca:	f041 6100 	orr.w	r1, r1, #134217728	; 0x8000000
 8009dce:	6001      	str	r1, [r0, #0]

08009dd0 <??llhwc_start_dtm_9>:
 8009dd0:	f8df 0a20 	ldr.w	r0, [pc, #2592]	; 800a7f4 <??DataTable40_10>
 8009dd4:	6881      	ldr	r1, [r0, #8]
 8009dd6:	6922      	ldr	r2, [r4, #16]
 8009dd8:	2d00      	cmp	r5, #0
 8009dda:	f361 621f 	bfi	r2, r1, #24, #8
 8009dde:	6122      	str	r2, [r4, #16]
 8009de0:	68c0      	ldr	r0, [r0, #12]
 8009de2:	6821      	ldr	r1, [r4, #0]
 8009de4:	f360 4117 	bfi	r1, r0, #16, #8
 8009de8:	6021      	str	r1, [r4, #0]
 8009dea:	f8dd b048 	ldr.w	fp, [sp, #72]	; 0x48
 8009dee:	bf08      	it	eq
 8009df0:	f5b9 7f00 	cmpeq.w	r9, #512	; 0x200
 8009df4:	d10f      	bne.n	8009e16 <??llhwc_start_dtm_10>
 8009df6:	68e0      	ldr	r0, [r4, #12]
 8009df8:	f36b 0017 	bfi	r0, fp, #0, #24
 8009dfc:	60e0      	str	r0, [r4, #12]
 8009dfe:	f8bd 0044 	ldrh.w	r0, [sp, #68]	; 0x44
 8009e02:	6971      	ldr	r1, [r6, #20]
 8009e04:	f360 110b 	bfi	r1, r0, #4, #8
 8009e08:	6171      	str	r1, [r6, #20]
 8009e0a:	f89d 0040 	ldrb.w	r0, [sp, #64]	; 0x40
 8009e0e:	6971      	ldr	r1, [r6, #20]
 8009e10:	f360 0103 	bfi	r1, r0, #0, #4
 8009e14:	6171      	str	r1, [r6, #20]

08009e16 <??llhwc_start_dtm_10>:
 8009e16:	f88d 7008 	strb.w	r7, [sp, #8]
 8009e1a:	f88d 7009 	strb.w	r7, [sp, #9]
 8009e1e:	9802      	ldr	r0, [sp, #8]
 8009e20:	f7fe fbcd 	bl	80085be <llhwc_switch_rate>
 8009e24:	f89d 0018 	ldrb.w	r0, [sp, #24]
 8009e28:	6871      	ldr	r1, [r6, #4]
 8009e2a:	1e40      	subs	r0, r0, #1
 8009e2c:	f360 0105 	bfi	r1, r0, #0, #6
 8009e30:	6071      	str	r1, [r6, #4]
 8009e32:	a801      	add	r0, sp, #4
 8009e34:	f00c fa40 	bl	80162b8 <db_get_tx_power_value>
 8009e38:	f89d 0000 	ldrb.w	r0, [sp]
 8009e3c:	6831      	ldr	r1, [r6, #0]
 8009e3e:	f360 0104 	bfi	r1, r0, #0, #5
 8009e42:	6031      	str	r1, [r6, #0]
 8009e44:	a803      	add	r0, sp, #12
 8009e46:	f002 f928 	bl	800c09a <llhwc_slptmr_get>
 8009e4a:	9903      	ldr	r1, [sp, #12]
 8009e4c:	2200      	movs	r2, #0
 8009e4e:	9204      	str	r2, [sp, #16]
 8009e50:	311e      	adds	r1, #30
 8009e52:	9103      	str	r1, [sp, #12]
 8009e54:	a903      	add	r1, sp, #12
 8009e56:	2000      	movs	r0, #0
 8009e58:	f002 fa78 	bl	800c34c <llhwc_slptmr_set>
 8009e5c:	9803      	ldr	r0, [sp, #12]
 8009e5e:	f8c8 b024 	str.w	fp, [r8, #36]	; 0x24
 8009e62:	f8c8 0020 	str.w	r0, [r8, #32]
 8009e66:	f89d 0050 	ldrb.w	r0, [sp, #80]	; 0x50
 8009e6a:	2801      	cmp	r0, #1
 8009e6c:	bf08      	it	eq
 8009e6e:	f004 fc49 	bleq	800e704 <llhwc_phy_set_freq_correction_reg>
 8009e72:	f89d 0018 	ldrb.w	r0, [sp, #24]
 8009e76:	2201      	movs	r2, #1
 8009e78:	2101      	movs	r1, #1
 8009e7a:	f004 fa82 	bl	800e382 <llhwc_phy_set_ch_config>
 8009e7e:	2d00      	cmp	r5, #0
 8009e80:	bf08      	it	eq
 8009e82:	f5b9 7f00 	cmpeq.w	r9, #512	; 0x200
 8009e86:	d107      	bne.n	8009e98 <??llhwc_start_dtm_11>
 8009e88:	f99d 1004 	ldrsb.w	r1, [sp, #4]
 8009e8c:	2001      	movs	r0, #1
 8009e8e:	9000      	str	r0, [sp, #0]
 8009e90:	2301      	movs	r3, #1
 8009e92:	2200      	movs	r2, #0
 8009e94:	f7fb ff65 	bl	8005d62 <ll_tx_pwr_if_tx_pwr_params_config>

08009e98 <??llhwc_start_dtm_11>:
 8009e98:	2230      	movs	r2, #48	; 0x30
 8009e9a:	4621      	mov	r1, r4
 8009e9c:	f8df 0c30 	ldr.w	r0, [pc, #3120]	; 800aad0 <??DataTable41>
 8009ea0:	f004 fe52 	bl	800eb48 <ble_memcpy>
 8009ea4:	f8df 0c2c 	ldr.w	r0, [pc, #3116]	; 800aad4 <??DataTable41_1>
 8009ea8:	6802      	ldr	r2, [r0, #0]
 8009eaa:	f248 2110 	movw	r1, #33296	; 0x8210
 8009eae:	f361 020f 	bfi	r2, r1, #0, #16
 8009eb2:	6002      	str	r2, [r0, #0]
 8009eb4:	e001      	b.n	8009eba <??llhwc_start_dtm_6>

08009eb6 <??llhwc_start_dtm_12>:
 8009eb6:	f003 fe08 	bl	800daca <llhwc_phy_get_nxt_seq_from_queue>

08009eba <??llhwc_start_dtm_6>:
 8009eba:	f003 fdab 	bl	800da14 <llhwc_phy_is_phy_driver_busy>
 8009ebe:	2801      	cmp	r0, #1
 8009ec0:	d0f9      	beq.n	8009eb6 <??llhwc_start_dtm_12>
 8009ec2:	4650      	mov	r0, sl
 8009ec4:	f001 bfb0 	b.w	800be28 <?Subroutine1>

08009ec8 <??DataTable36>:
 8009ec8:	1980 0803                                   ....

08009ecc <??DataTable36_1>:
 8009ecc:	0854 4802                                   T..H

08009ed0 <??DataTable36_2>:
 8009ed0:	07f8 2000                                   ... 

08009ed4 <llhwc_set_adv_param>:
 8009ed4:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8009ed8:	b084      	sub	sp, #16
 8009eda:	2200      	movs	r2, #0
 8009edc:	4607      	mov	r7, r0
 8009ede:	468a      	mov	sl, r1
 8009ee0:	9203      	str	r2, [sp, #12]
 8009ee2:	e9da 010a 	ldrd	r0, r1, [sl, #40]	; 0x28
 8009ee6:	f04f 0b00 	mov.w	fp, #0
 8009eea:	f8df 5bec 	ldr.w	r5, [pc, #3052]	; 800aad8 <??DataTable41_2>
 8009eee:	f7fe fb47 	bl	8008580 <llhwc_get_sm_mode_from_event_type>
 8009ef2:	f88d 0008 	strb.w	r0, [sp, #8]
 8009ef6:	f20f 20a0 	addw	r0, pc, #672	; 0x2a0
 8009efa:	6801      	ldr	r1, [r0, #0]
 8009efc:	20ff      	movs	r0, #255	; 0xff
 8009efe:	7428      	strb	r0, [r5, #16]
 8009f00:	9101      	str	r1, [sp, #4]
 8009f02:	2102      	movs	r1, #2
 8009f04:	7529      	strb	r1, [r5, #20]
 8009f06:	4c9e      	ldr	r4, [pc, #632]	; (800a180 <??DataTable37_1>)
 8009f08:	f885 b013 	strb.w	fp, [r5, #19]
 8009f0c:	2224      	movs	r2, #36	; 0x24
 8009f0e:	2100      	movs	r1, #0
 8009f10:	4620      	mov	r0, r4
 8009f12:	f004 fe6a 	bl	800ebea <ble_memset>
 8009f16:	6820      	ldr	r0, [r4, #0]
 8009f18:	f8df 1bc0 	ldr.w	r1, [pc, #3008]	; 800aadc <??DataTable41_3>
 8009f1c:	f440 407f 	orr.w	r0, r0, #65280	; 0xff00
 8009f20:	f040 00ff 	orr.w	r0, r0, #255	; 0xff
 8009f24:	6020      	str	r0, [r4, #0]
 8009f26:	2000      	movs	r0, #0
 8009f28:	f009 faec 	bl	8013504 <allocate_data_packet>
 8009f2c:	6268      	str	r0, [r5, #36]	; 0x24
 8009f2e:	b928      	cbnz	r0, 8009f3c <??llhwc_set_adv_param_0>
 8009f30:	2007      	movs	r0, #7
 8009f32:	9003      	str	r0, [sp, #12]
 8009f34:	203f      	movs	r0, #63	; 0x3f
 8009f36:	f7f6 f97b 	bl	8000230 <bsp_debug_gpio_toggle>
 8009f3a:	e11d      	b.n	800a178 <??llhwc_set_adv_param_1>

08009f3c <??llhwc_set_adv_param_0>:
 8009f3c:	2100      	movs	r1, #0
 8009f3e:	8141      	strh	r1, [r0, #10]
 8009f40:	6806      	ldr	r6, [r0, #0]
 8009f42:	f8df 0b9c 	ldr.w	r0, [pc, #2972]	; 800aae0 <??DataTable41_4>
 8009f46:	f8df 823c 	ldr.w	r8, [pc, #572]	; 800a184 <??DataTable37_2>
 8009f4a:	1986      	adds	r6, r0, r6
 8009f4c:	69e0      	ldr	r0, [r4, #28]
 8009f4e:	2204      	movs	r2, #4
 8009f50:	f366 401f 	bfi	r0, r6, #16, #16
 8009f54:	61e0      	str	r0, [r4, #28]
 8009f56:	eb08 4010 	add.w	r0, r8, r0, lsr #16
 8009f5a:	44b0      	add	r8, r6
 8009f5c:	f004 fe45 	bl	800ebea <ble_memset>
 8009f60:	f8d8 0000 	ldr.w	r0, [r8]
 8009f64:	f366 000f 	bfi	r0, r6, #0, #16
 8009f68:	f8c8 0000 	str.w	r0, [r8]
 8009f6c:	f8da 0004 	ldr.w	r0, [sl, #4]
 8009f70:	69e1      	ldr	r1, [r4, #28]
 8009f72:	1f00      	subs	r0, r0, #4
 8009f74:	f360 010f 	bfi	r1, r0, #0, #16
 8009f78:	61e1      	str	r1, [r4, #28]
 8009f7a:	e9da 010a 	ldrd	r0, r1, [sl, #40]	; 0x28
 8009f7e:	e9c5 0100 	strd	r0, r1, [r5]
 8009f82:	f10a 0532 	add.w	r5, sl, #50	; 0x32
 8009f86:	78aa      	ldrb	r2, [r5, #2]
 8009f88:	2a03      	cmp	r2, #3
 8009f8a:	bf04      	itt	eq
 8009f8c:	2004      	moveq	r0, #4
 8009f8e:	70a8      	strbeq	r0, [r5, #2]
 8009f90:	78a9      	ldrb	r1, [r5, #2]
 8009f92:	f88d 1004 	strb.w	r1, [sp, #4]
 8009f96:	f88d 1005 	strb.w	r1, [sp, #5]
 8009f9a:	2101      	movs	r1, #1
 8009f9c:	f8ad 1006 	strh.w	r1, [sp, #6]
 8009fa0:	9801      	ldr	r0, [sp, #4]
 8009fa2:	f7fe fb0c 	bl	80085be <llhwc_switch_rate>
 8009fa6:	78a8      	ldrb	r0, [r5, #2]
 8009fa8:	68a1      	ldr	r1, [r4, #8]
 8009faa:	2804      	cmp	r0, #4
 8009fac:	bf0f      	iteee	eq
 8009fae:	20e0      	moveq	r0, #224	; 0xe0
 8009fb0:	f8df 2b30 	ldrne.w	r2, [pc, #2864]	; 800aae4 <??DataTable41_5>
 8009fb4:	f832 0010 	ldrhne.w	r0, [r2, r0, lsl #1]
 8009fb8:	301b      	addne	r0, #27
 8009fba:	f360 611f 	bfi	r1, r0, #24, #8
 8009fbe:	60a1      	str	r1, [r4, #8]
 8009fc0:	e9da 010a 	ldrd	r0, r1, [sl, #40]	; 0x28
 8009fc4:	b981      	cbnz	r1, 8009fe8 <??llhwc_set_adv_param_2>
 8009fc6:	2801      	cmp	r0, #1
 8009fc8:	bf18      	it	ne
 8009fca:	2802      	cmpne	r0, #2
 8009fcc:	d003      	beq.n	8009fd6 <??llhwc_set_adv_param_3>
 8009fce:	2804      	cmp	r0, #4
 8009fd0:	bf18      	it	ne
 8009fd2:	2808      	cmpne	r0, #8
 8009fd4:	d108      	bne.n	8009fe8 <??llhwc_set_adv_param_2>

08009fd6 <??llhwc_set_adv_param_3>:
 8009fd6:	f8df 081c 	ldr.w	r0, [pc, #2076]	; 800a7f4 <??DataTable40_10>
 8009fda:	6801      	ldr	r1, [r0, #0]
 8009fdc:	6922      	ldr	r2, [r4, #16]
 8009fde:	f361 621f 	bfi	r2, r1, #24, #8
 8009fe2:	6122      	str	r2, [r4, #16]
 8009fe4:	6840      	ldr	r0, [r0, #4]
 8009fe6:	e007      	b.n	8009ff8 <??llhwc_set_adv_param_4>

08009fe8 <??llhwc_set_adv_param_2>:
 8009fe8:	f8df 0808 	ldr.w	r0, [pc, #2056]	; 800a7f4 <??DataTable40_10>
 8009fec:	6881      	ldr	r1, [r0, #8]
 8009fee:	6922      	ldr	r2, [r4, #16]
 8009ff0:	f361 621f 	bfi	r2, r1, #24, #8
 8009ff4:	6122      	str	r2, [r4, #16]
 8009ff6:	68c0      	ldr	r0, [r0, #12]

08009ff8 <??llhwc_set_adv_param_4>:
 8009ff8:	6821      	ldr	r1, [r4, #0]
 8009ffa:	2201      	movs	r2, #1
 8009ffc:	9200      	str	r2, [sp, #0]
 8009ffe:	f360 4117 	bfi	r1, r0, #16, #8
 800a002:	6021      	str	r1, [r4, #0]
 800a004:	f995 100e 	ldrsb.w	r1, [r5, #14]
 800a008:	2301      	movs	r3, #1
 800a00a:	2001      	movs	r0, #1
 800a00c:	f7fb fea9 	bl	8005d62 <ll_tx_pwr_if_tx_pwr_params_config>
 800a010:	68a0      	ldr	r0, [r4, #8]
 800a012:	f000 407f 	and.w	r0, r0, #4278190080	; 0xff000000
 800a016:	f040 1055 	orr.w	r0, r0, #5570645	; 0x550055
 800a01a:	f440 40aa 	orr.w	r0, r0, #21760	; 0x5500
 800a01e:	60a0      	str	r0, [r4, #8]
 800a020:	f8df 0ac4 	ldr.w	r0, [pc, #2756]	; 800aae8 <??DataTable41_6>
 800a024:	7941      	ldrb	r1, [r0, #5]
 800a026:	2901      	cmp	r1, #1
 800a028:	bf07      	ittee	eq
 800a02a:	6800      	ldreq	r0, [r0, #0]
 800a02c:	6060      	streq	r0, [r4, #4]
 800a02e:	f8df 1abc 	ldrne.w	r1, [pc, #2748]	; 800aaec <??DataTable41_7>
 800a032:	6061      	strne	r1, [r4, #4]
 800a034:	f8da 0000 	ldr.w	r0, [sl]
 800a038:	f8df 67ac 	ldr.w	r6, [pc, #1964]	; 800a7e8 <??DataTable40_7>
 800a03c:	69b1      	ldr	r1, [r6, #24]
 800a03e:	7902      	ldrb	r2, [r0, #4]
 800a040:	7943      	ldrb	r3, [r0, #5]
 800a042:	0c09      	lsrs	r1, r1, #16
 800a044:	ea42 2203 	orr.w	r2, r2, r3, lsl #8
 800a048:	ea42 4101 	orr.w	r1, r2, r1, lsl #16
 800a04c:	61b1      	str	r1, [r6, #24]
 800a04e:	7801      	ldrb	r1, [r0, #0]
 800a050:	7842      	ldrb	r2, [r0, #1]
 800a052:	7883      	ldrb	r3, [r0, #2]
 800a054:	78c0      	ldrb	r0, [r0, #3]
 800a056:	ea41 2102 	orr.w	r1, r1, r2, lsl #8
 800a05a:	ea41 4103 	orr.w	r1, r1, r3, lsl #16
 800a05e:	ea41 6100 	orr.w	r1, r1, r0, lsl #24
 800a062:	61f1      	str	r1, [r6, #28]
 800a064:	7a38      	ldrb	r0, [r7, #8]
 800a066:	69b1      	ldr	r1, [r6, #24]
 800a068:	f360 4110 	bfi	r1, r0, #16, #1
 800a06c:	61b1      	str	r1, [r6, #24]
 800a06e:	e9da 010a 	ldrd	r0, r1, [sl, #40]	; 0x28
 800a072:	2900      	cmp	r1, #0
 800a074:	bf08      	it	eq
 800a076:	2802      	cmpeq	r0, #2
 800a078:	d113      	bne.n	800a0a2 <??llhwc_set_adv_param_5>
 800a07a:	6a30      	ldr	r0, [r6, #32]
 800a07c:	7939      	ldrb	r1, [r7, #4]
 800a07e:	797a      	ldrb	r2, [r7, #5]
 800a080:	0c00      	lsrs	r0, r0, #16
 800a082:	ea41 2102 	orr.w	r1, r1, r2, lsl #8
 800a086:	ea41 4000 	orr.w	r0, r1, r0, lsl #16
 800a08a:	6230      	str	r0, [r6, #32]
 800a08c:	7838      	ldrb	r0, [r7, #0]
 800a08e:	7879      	ldrb	r1, [r7, #1]
 800a090:	78ba      	ldrb	r2, [r7, #2]
 800a092:	ea40 2001 	orr.w	r0, r0, r1, lsl #8
 800a096:	78f9      	ldrb	r1, [r7, #3]
 800a098:	ea40 4002 	orr.w	r0, r0, r2, lsl #16
 800a09c:	ea40 6001 	orr.w	r0, r0, r1, lsl #24
 800a0a0:	6270      	str	r0, [r6, #36]	; 0x24

0800a0a2 <??llhwc_set_adv_param_5>:
 800a0a2:	69e2      	ldr	r2, [r4, #28]
 800a0a4:	46d0      	mov	r8, sl
 800a0a6:	b292      	uxth	r2, r2
 800a0a8:	e03a      	b.n	800a120 <??llhwc_set_adv_param_6>

0800a0aa <??llhwc_set_adv_param_7>:
 800a0aa:	f8da 2004 	ldr.w	r2, [sl, #4]
 800a0ae:	e00b      	b.n	800a0c8 <??llhwc_set_adv_param_8>

0800a0b0 <??llhwc_set_adv_param_9>:
 800a0b0:	4934      	ldr	r1, [pc, #208]	; (800a184 <??DataTable37_2>)
 800a0b2:	eb01 0902 	add.w	r9, r1, r2
 800a0b6:	2204      	movs	r2, #4
 800a0b8:	2100      	movs	r1, #0
 800a0ba:	4648      	mov	r0, r9
 800a0bc:	f004 fd95 	bl	800ebea <ble_memset>
 800a0c0:	f8d8 2008 	ldr.w	r2, [r8, #8]
 800a0c4:	2a00      	cmp	r2, #0
 800a0c6:	d0f0      	beq.n	800a0aa <??llhwc_set_adv_param_7>

0800a0c8 <??llhwc_set_adv_param_8>:
 800a0c8:	f8df 0a14 	ldr.w	r0, [pc, #2580]	; 800aae0 <??DataTable41_4>
 800a0cc:	1882      	adds	r2, r0, r2
 800a0ce:	f8d9 0000 	ldr.w	r0, [r9]
 800a0d2:	f362 000f 	bfi	r0, r2, #0, #16
 800a0d6:	f8c9 0000 	str.w	r0, [r9]
 800a0da:	f89d 1004 	ldrb.w	r1, [sp, #4]
 800a0de:	2904      	cmp	r1, #4
 800a0e0:	d105      	bne.n	800a0ee <??llhwc_set_adv_param_10>
 800a0e2:	f8d9 0000 	ldr.w	r0, [r9]
 800a0e6:	f040 6000 	orr.w	r0, r0, #134217728	; 0x8000000
 800a0ea:	f8c9 0000 	str.w	r0, [r9]

0800a0ee <??llhwc_set_adv_param_10>:
 800a0ee:	e9da 010a 	ldrd	r0, r1, [sl, #40]	; 0x28
 800a0f2:	2900      	cmp	r1, #0
 800a0f4:	bf08      	it	eq
 800a0f6:	f5b0 5f00 	cmpeq.w	r0, #8192	; 0x2000
 800a0fa:	d004      	beq.n	800a106 <??llhwc_set_adv_param_11>
 800a0fc:	2900      	cmp	r1, #0
 800a0fe:	bf08      	it	eq
 800a100:	f5b0 4f00 	cmpeq.w	r0, #32768	; 0x8000
 800a104:	d106      	bne.n	800a114 <??llhwc_set_adv_param_12>

0800a106 <??llhwc_set_adv_param_11>:
 800a106:	7828      	ldrb	r0, [r5, #0]
 800a108:	f8d9 1000 	ldr.w	r1, [r9]
 800a10c:	f360 4115 	bfi	r1, r0, #16, #6
 800a110:	f8c9 1000 	str.w	r1, [r9]

0800a114 <??llhwc_set_adv_param_12>:
 800a114:	f10b 0b01 	add.w	fp, fp, #1
 800a118:	fa5f fb8b 	uxtb.w	fp, fp
 800a11c:	f108 0804 	add.w	r8, r8, #4

0800a120 <??llhwc_set_adv_param_6>:
 800a120:	f8d8 0004 	ldr.w	r0, [r8, #4]
 800a124:	b110      	cbz	r0, 800a12c <??llhwc_set_adv_param_13>
 800a126:	f1bb 0f07 	cmp.w	fp, #7
 800a12a:	dbc1      	blt.n	800a0b0 <??llhwc_set_adv_param_9>

0800a12c <??llhwc_set_adv_param_13>:
 800a12c:	7a78      	ldrb	r0, [r7, #9]
 800a12e:	6b31      	ldr	r1, [r6, #48]	; 0x30
 800a130:	f360 0102 	bfi	r1, r0, #0, #3
 800a134:	6331      	str	r1, [r6, #48]	; 0x30
 800a136:	7828      	ldrb	r0, [r5, #0]
 800a138:	6871      	ldr	r1, [r6, #4]
 800a13a:	f360 0105 	bfi	r1, r0, #0, #6
 800a13e:	6071      	str	r1, [r6, #4]
 800a140:	7868      	ldrb	r0, [r5, #1]
 800a142:	f004 f92f 	bl	800e3a4 <llhwc_phy_set_ch_config_adv>
 800a146:	68e1      	ldr	r1, [r4, #12]
 800a148:	2028      	movs	r0, #40	; 0x28
 800a14a:	2230      	movs	r2, #48	; 0x30
 800a14c:	f360 611f 	bfi	r1, r0, #24, #8
 800a150:	60e1      	str	r1, [r4, #12]
 800a152:	f89d 0008 	ldrb.w	r0, [sp, #8]
 800a156:	6831      	ldr	r1, [r6, #0]
 800a158:	f360 0104 	bfi	r1, r0, #0, #5
 800a15c:	6031      	str	r1, [r6, #0]
 800a15e:	4621      	mov	r1, r4
 800a160:	f8df 096c 	ldr.w	r0, [pc, #2412]	; 800aad0 <??DataTable41>
 800a164:	f004 fcf0 	bl	800eb48 <ble_memcpy>
 800a168:	f8df 0968 	ldr.w	r0, [pc, #2408]	; 800aad4 <??DataTable41_1>
 800a16c:	6802      	ldr	r2, [r0, #0]
 800a16e:	f248 2110 	movw	r1, #33296	; 0x8210
 800a172:	f361 020f 	bfi	r2, r1, #0, #16
 800a176:	6002      	str	r2, [r0, #0]

0800a178 <??llhwc_set_adv_param_1>:
 800a178:	9803      	ldr	r0, [sp, #12]
 800a17a:	e306      	b.n	800a78a <?Subroutine2>

0800a17c <??DataTable37>:
 800a17c:	1980 0803                                   ....

0800a180 <??DataTable37_1>:
 800a180:	07d4 2000                                   ... 

0800a184 <??DataTable37_2>:
 800a184:	0000 4802                                   ...H

0800a188 <??DataTable37_3>:
 800a188:	0838 4802                                   8..H

0800a18c <??DataTable37_4>:
 800a18c:	81f8 4802                                   ...H

0800a190 <??DataTable37_5>:
 800a190:	81fc 4802                                   ...H

0800a194 <??DataTable37_6>:
 800a194:	8004 4802                                   ...H

0800a198 <?_2>:
 800a198:	0101 0001                                   ....

0800a19c <llhwc_set_scan_param>:
 800a19c:	f20f 3368 	addw	r3, pc, #872	; 0x368
 800a1a0:	e92d 4ff3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800a1a4:	e9d3 5600 	ldrd	r5, r6, [r3]
 800a1a8:	b087      	sub	sp, #28
 800a1aa:	4614      	mov	r4, r2
 800a1ac:	aa04      	add	r2, sp, #16
 800a1ae:	e9c2 5600 	strd	r5, r6, [r2]
 800a1b2:	e9d4 0104 	ldrd	r0, r1, [r4, #16]
 800a1b6:	f8df 5614 	ldr.w	r5, [pc, #1556]	; 800a7cc <??DataTable40>
 800a1ba:	f04f 0a00 	mov.w	sl, #0
 800a1be:	f7fe f9df 	bl	8008580 <llhwc_get_sm_mode_from_event_type>
 800a1c2:	f88d 0008 	strb.w	r0, [sp, #8]
 800a1c6:	f20f 3048 	addw	r0, pc, #840	; 0x348
 800a1ca:	6802      	ldr	r2, [r0, #0]
 800a1cc:	6928      	ldr	r0, [r5, #16]
 800a1ce:	9201      	str	r2, [sp, #4]
 800a1d0:	7e61      	ldrb	r1, [r4, #25]
 800a1d2:	f88d 1004 	strb.w	r1, [sp, #4]
 800a1d6:	f88d 1005 	strb.w	r1, [sp, #5]
 800a1da:	b120      	cbz	r0, 800a1e6 <??llhwc_set_scan_param_0>
 800a1dc:	2101      	movs	r1, #1
 800a1de:	f105 0031 	add.w	r0, r5, #49	; 0x31
 800a1e2:	7081      	strb	r1, [r0, #2]
 800a1e4:	e003      	b.n	800a1ee <??llhwc_set_scan_param_1>

0800a1e6 <??llhwc_set_scan_param_0>:
 800a1e6:	f105 0031 	add.w	r0, r5, #49	; 0x31
 800a1ea:	f880 a002 	strb.w	sl, [r0, #2]

0800a1ee <??llhwc_set_scan_param_1>:
 800a1ee:	2101      	movs	r1, #1
 800a1f0:	70c1      	strb	r1, [r0, #3]
 800a1f2:	f8df 68fc 	ldr.w	r6, [pc, #2300]	; 800aaf0 <??DataTable41_8>
 800a1f6:	2224      	movs	r2, #36	; 0x24
 800a1f8:	2100      	movs	r1, #0
 800a1fa:	4630      	mov	r0, r6
 800a1fc:	f004 fcf5 	bl	800ebea <ble_memset>
 800a200:	6830      	ldr	r0, [r6, #0]
 800a202:	f64f 79ff 	movw	r9, #65535	; 0xffff
 800a206:	ea49 0000 	orr.w	r0, r9, r0
 800a20a:	6030      	str	r0, [r6, #0]
 800a20c:	e9d4 2304 	ldrd	r2, r3, [r4, #16]
 800a210:	2b00      	cmp	r3, #0
 800a212:	bf08      	it	eq
 800a214:	2a10      	cmpeq	r2, #16
 800a216:	d106      	bne.n	800a226 <??llhwc_set_scan_param_2>
 800a218:	2001      	movs	r0, #1
 800a21a:	9000      	str	r0, [sp, #0]
 800a21c:	2301      	movs	r3, #1
 800a21e:	2200      	movs	r2, #0
 800a220:	f994 1009 	ldrsb.w	r1, [r4, #9]
 800a224:	e006      	b.n	800a234 <??llhwc_set_scan_param_3>

0800a226 <??llhwc_set_scan_param_2>:
 800a226:	2001      	movs	r0, #1
 800a228:	9000      	str	r0, [sp, #0]
 800a22a:	2301      	movs	r3, #1
 800a22c:	2200      	movs	r2, #0
 800a22e:	f994 1009 	ldrsb.w	r1, [r4, #9]
 800a232:	2000      	movs	r0, #0

0800a234 <??llhwc_set_scan_param_3>:
 800a234:	f7fb fd95 	bl	8005d62 <ll_tx_pwr_if_tx_pwr_params_config>
 800a238:	7e21      	ldrb	r1, [r4, #24]
 800a23a:	a804      	add	r0, sp, #16
 800a23c:	f8df 75a8 	ldr.w	r7, [pc, #1448]	; 800a7e8 <??DataTable40_7>
 800a240:	eb00 0341 	add.w	r3, r0, r1, lsl #1
 800a244:	f833 0c4a 	ldrh.w	r0, [r3, #-74]
 800a248:	687a      	ldr	r2, [r7, #4]
 800a24a:	f8df b8a8 	ldr.w	fp, [pc, #2216]	; 800aaf4 <??DataTable41_9>
 800a24e:	b2c0      	uxtb	r0, r0
 800a250:	f361 0205 	bfi	r2, r1, #0, #6
 800a254:	607a      	str	r2, [r7, #4]
 800a256:	2201      	movs	r2, #1
 800a258:	2101      	movs	r1, #1
 800a25a:	f004 f892 	bl	800e382 <llhwc_phy_set_ch_config>
 800a25e:	4659      	mov	r1, fp
 800a260:	2000      	movs	r0, #0
 800a262:	f009 f94f 	bl	8013504 <allocate_data_packet>
 800a266:	64a8      	str	r0, [r5, #72]	; 0x48
 800a268:	b928      	cbnz	r0, 800a276 <??llhwc_set_scan_param_4>
 800a26a:	203f      	movs	r0, #63	; 0x3f
 800a26c:	f04f 0a07 	mov.w	sl, #7
 800a270:	f7f5 ffde 	bl	8000230 <bsp_debug_gpio_toggle>
 800a274:	e143      	b.n	800a4fe <??llhwc_set_scan_param_5>

0800a276 <??llhwc_set_scan_param_4>:
 800a276:	2118      	movs	r1, #24
 800a278:	8141      	strh	r1, [r0, #10]
 800a27a:	6801      	ldr	r1, [r0, #0]
 800a27c:	69f0      	ldr	r0, [r6, #28]
 800a27e:	f8df 8878 	ldr.w	r8, [pc, #2168]	; 800aaf8 <??DataTable41_10>
 800a282:	3114      	adds	r1, #20
 800a284:	f361 401f 	bfi	r0, r1, #16, #16
 800a288:	61f0      	str	r0, [r6, #28]
 800a28a:	eb08 4010 	add.w	r0, r8, r0, lsr #16
 800a28e:	2204      	movs	r2, #4
 800a290:	2100      	movs	r1, #0
 800a292:	f004 fcaa 	bl	800ebea <ble_memset>
 800a296:	e9d4 0104 	ldrd	r0, r1, [r4, #16]
 800a29a:	2900      	cmp	r1, #0
 800a29c:	bf08      	it	eq
 800a29e:	2810      	cmpeq	r0, #16
 800a2a0:	d156      	bne.n	800a350 <??llhwc_set_scan_param_6>
 800a2a2:	6ca8      	ldr	r0, [r5, #72]	; 0x48
 800a2a4:	4659      	mov	r1, fp
 800a2a6:	f009 f92d 	bl	8013504 <allocate_data_packet>
 800a2aa:	ea5f 0b00 	movs.w	fp, r0
 800a2ae:	d108      	bne.n	800a2c2 <??llhwc_set_scan_param_7>
 800a2b0:	203f      	movs	r0, #63	; 0x3f
 800a2b2:	f7f5 ffbd 	bl	8000230 <bsp_debug_gpio_toggle>
 800a2b6:	6ca8      	ldr	r0, [r5, #72]	; 0x48
 800a2b8:	f04f 0a07 	mov.w	sl, #7
 800a2bc:	f009 f950 	bl	8013560 <free_buff_hdr>
 800a2c0:	e11d      	b.n	800a4fe <??llhwc_set_scan_param_5>

0800a2c2 <??llhwc_set_scan_param_7>:
 800a2c2:	2118      	movs	r1, #24
 800a2c4:	f8ab 100a 	strh.w	r1, [fp, #10]
 800a2c8:	f8db 2000 	ldr.w	r2, [fp]
 800a2cc:	f8df 082c 	ldr.w	r0, [pc, #2092]	; 800aafc <??DataTable41_11>
 800a2d0:	1882      	adds	r2, r0, r2
 800a2d2:	eb08 0102 	add.w	r1, r8, r2
 800a2d6:	9200      	str	r2, [sp, #0]
 800a2d8:	9103      	str	r1, [sp, #12]
 800a2da:	9803      	ldr	r0, [sp, #12]
 800a2dc:	2204      	movs	r2, #4
 800a2de:	2100      	movs	r1, #0
 800a2e0:	f004 fc83 	bl	800ebea <ble_memset>
 800a2e4:	69f0      	ldr	r0, [r6, #28]
 800a2e6:	9900      	ldr	r1, [sp, #0]
 800a2e8:	eb08 4010 	add.w	r0, r8, r0, lsr #16
 800a2ec:	6802      	ldr	r2, [r0, #0]
 800a2ee:	f361 020f 	bfi	r2, r1, #0, #16
 800a2f2:	6002      	str	r2, [r0, #0]
 800a2f4:	f8bb 000a 	ldrh.w	r0, [fp, #10]
 800a2f8:	f8ab 000a 	strh.w	r0, [fp, #10]
 800a2fc:	9903      	ldr	r1, [sp, #12]
 800a2fe:	6808      	ldr	r0, [r1, #0]
 800a300:	ea49 0000 	orr.w	r0, r9, r0
 800a304:	460a      	mov	r2, r1
 800a306:	6010      	str	r0, [r2, #0]
 800a308:	6821      	ldr	r1, [r4, #0]
 800a30a:	69f0      	ldr	r0, [r6, #28]
 800a30c:	2204      	movs	r2, #4
 800a30e:	1f09      	subs	r1, r1, #4
 800a310:	f361 000f 	bfi	r0, r1, #0, #16
 800a314:	61f0      	str	r0, [r6, #28]
 800a316:	b280      	uxth	r0, r0
 800a318:	2100      	movs	r1, #0
 800a31a:	4440      	add	r0, r8
 800a31c:	f004 fc65 	bl	800ebea <ble_memset>
 800a320:	69f0      	ldr	r0, [r6, #28]
 800a322:	2206      	movs	r2, #6
 800a324:	b280      	uxth	r0, r0
 800a326:	4440      	add	r0, r8
 800a328:	6801      	ldr	r1, [r0, #0]
 800a32a:	ea49 0901 	orr.w	r9, r9, r1
 800a32e:	f8c0 9000 	str.w	r9, [r0]
 800a332:	68e1      	ldr	r1, [r4, #12]
 800a334:	4628      	mov	r0, r5
 800a336:	f004 fc07 	bl	800eb48 <ble_memcpy>
 800a33a:	6820      	ldr	r0, [r4, #0]
 800a33c:	7801      	ldrb	r1, [r0, #0]
 800a33e:	f3c1 1080 	ubfx	r0, r1, #6, #1
 800a342:	60a8      	str	r0, [r5, #8]
 800a344:	6831      	ldr	r1, [r6, #0]
 800a346:	2002      	movs	r0, #2
 800a348:	f360 611c 	bfi	r1, r0, #24, #5
 800a34c:	6031      	str	r1, [r6, #0]
 800a34e:	e010      	b.n	800a372 <??llhwc_set_scan_param_8>

0800a350 <??llhwc_set_scan_param_6>:
 800a350:	69f0      	ldr	r0, [r6, #28]
 800a352:	eb08 4010 	add.w	r0, r8, r0, lsr #16
 800a356:	6801      	ldr	r1, [r0, #0]
 800a358:	ea49 0101 	orr.w	r1, r9, r1
 800a35c:	6001      	str	r1, [r0, #0]
 800a35e:	6831      	ldr	r1, [r6, #0]
 800a360:	2001      	movs	r0, #1
 800a362:	f360 611c 	bfi	r1, r0, #24, #5
 800a366:	69f0      	ldr	r0, [r6, #28]
 800a368:	6031      	str	r1, [r6, #0]
 800a36a:	ea49 0900 	orr.w	r9, r9, r0
 800a36e:	f8c6 901c 	str.w	r9, [r6, #28]

0800a372 <??llhwc_set_scan_param_8>:
 800a372:	e9d4 0104 	ldrd	r0, r1, [r4, #16]
 800a376:	e9c5 0108 	strd	r0, r1, [r5, #32]
 800a37a:	7a22      	ldrb	r2, [r4, #8]
 800a37c:	f885 2031 	strb.w	r2, [r5, #49]	; 0x31
 800a380:	7e61      	ldrb	r1, [r4, #25]
 800a382:	f88d 1004 	strb.w	r1, [sp, #4]
 800a386:	f88d 1005 	strb.w	r1, [sp, #5]
 800a38a:	9801      	ldr	r0, [sp, #4]
 800a38c:	f7fe f917 	bl	80085be <llhwc_switch_rate>
 800a390:	e9d4 0104 	ldrd	r0, r1, [r4, #16]
 800a394:	2900      	cmp	r1, #0
 800a396:	bf02      	ittt	eq
 800a398:	2810      	cmpeq	r0, #16
 800a39a:	f89d 0004 	ldrbeq.w	r0, [sp, #4]
 800a39e:	2804      	cmpeq	r0, #4
 800a3a0:	d116      	bne.n	800a3d0 <??llhwc_set_scan_param_9>
 800a3a2:	f8bd 0006 	ldrh.w	r0, [sp, #6]
 800a3a6:	2802      	cmp	r0, #2
 800a3a8:	d107      	bne.n	800a3ba <??llhwc_set_scan_param_10>
 800a3aa:	69f0      	ldr	r0, [r6, #28]
 800a3ac:	b280      	uxth	r0, r0
 800a3ae:	4480      	add	r8, r0
 800a3b0:	f8d8 1000 	ldr.w	r1, [r8]
 800a3b4:	f021 6100 	bic.w	r1, r1, #134217728	; 0x8000000
 800a3b8:	e008      	b.n	800a3cc <??llhwc_set_scan_param_11>

0800a3ba <??llhwc_set_scan_param_10>:
 800a3ba:	2801      	cmp	r0, #1
 800a3bc:	d108      	bne.n	800a3d0 <??llhwc_set_scan_param_9>
 800a3be:	69f0      	ldr	r0, [r6, #28]
 800a3c0:	b280      	uxth	r0, r0
 800a3c2:	4480      	add	r8, r0
 800a3c4:	f8d8 1000 	ldr.w	r1, [r8]
 800a3c8:	f041 6100 	orr.w	r1, r1, #134217728	; 0x8000000

0800a3cc <??llhwc_set_scan_param_11>:
 800a3cc:	f8c8 1000 	str.w	r1, [r8]

0800a3d0 <??llhwc_set_scan_param_9>:
 800a3d0:	7e60      	ldrb	r0, [r4, #25]
 800a3d2:	2804      	cmp	r0, #4
 800a3d4:	bf0f      	iteee	eq
 800a3d6:	20e0      	moveq	r0, #224	; 0xe0
 800a3d8:	f8df 1708 	ldrne.w	r1, [pc, #1800]	; 800aae4 <??DataTable41_5>
 800a3dc:	f831 0010 	ldrhne.w	r0, [r1, r0, lsl #1]
 800a3e0:	301b      	addne	r0, #27
 800a3e2:	68b1      	ldr	r1, [r6, #8]
 800a3e4:	f360 611f 	bfi	r1, r0, #24, #8
 800a3e8:	60b1      	str	r1, [r6, #8]
 800a3ea:	9907      	ldr	r1, [sp, #28]
 800a3ec:	7808      	ldrb	r0, [r1, #0]
 800a3ee:	2802      	cmp	r0, #2
 800a3f0:	da07      	bge.n	800a402 <??llhwc_set_scan_param_12>
 800a3f2:	6f38      	ldr	r0, [r7, #112]	; 0x70
 800a3f4:	f3c0 0080 	ubfx	r0, r0, #2, #1
 800a3f8:	7628      	strb	r0, [r5, #24]
 800a3fa:	6f38      	ldr	r0, [r7, #112]	; 0x70
 800a3fc:	f040 0004 	orr.w	r0, r0, #4
 800a400:	e008      	b.n	800a414 <??llhwc_set_scan_param_13>

0800a402 <??llhwc_set_scan_param_12>:
 800a402:	2804      	cmp	r0, #4
 800a404:	da07      	bge.n	800a416 <??llhwc_set_scan_param_14>
 800a406:	6f38      	ldr	r0, [r7, #112]	; 0x70
 800a408:	f3c0 0080 	ubfx	r0, r0, #2, #1
 800a40c:	7628      	strb	r0, [r5, #24]
 800a40e:	6f38      	ldr	r0, [r7, #112]	; 0x70
 800a410:	f020 0004 	bic.w	r0, r0, #4

0800a414 <??llhwc_set_scan_param_13>:
 800a414:	6738      	str	r0, [r7, #112]	; 0x70

0800a416 <??llhwc_set_scan_param_14>:
 800a416:	f8df 03dc 	ldr.w	r0, [pc, #988]	; 800a7f4 <??DataTable40_10>
 800a41a:	6882      	ldr	r2, [r0, #8]
 800a41c:	6933      	ldr	r3, [r6, #16]
 800a41e:	f362 631f 	bfi	r3, r2, #24, #8
 800a422:	6133      	str	r3, [r6, #16]
 800a424:	68c0      	ldr	r0, [r0, #12]
 800a426:	6832      	ldr	r2, [r6, #0]
 800a428:	f360 4217 	bfi	r2, r0, #16, #8
 800a42c:	6032      	str	r2, [r6, #0]
 800a42e:	68e0      	ldr	r0, [r4, #12]
 800a430:	b1d0      	cbz	r0, 800a468 <??llhwc_set_scan_param_15>
 800a432:	69ba      	ldr	r2, [r7, #24]
 800a434:	7903      	ldrb	r3, [r0, #4]
 800a436:	f890 c005 	ldrb.w	ip, [r0, #5]
 800a43a:	0c12      	lsrs	r2, r2, #16
 800a43c:	ea43 230c 	orr.w	r3, r3, ip, lsl #8
 800a440:	ea43 4202 	orr.w	r2, r3, r2, lsl #16
 800a444:	61ba      	str	r2, [r7, #24]
 800a446:	7802      	ldrb	r2, [r0, #0]
 800a448:	7843      	ldrb	r3, [r0, #1]
 800a44a:	f890 c002 	ldrb.w	ip, [r0, #2]
 800a44e:	78c0      	ldrb	r0, [r0, #3]
 800a450:	ea42 2203 	orr.w	r2, r2, r3, lsl #8
 800a454:	ea42 420c 	orr.w	r2, r2, ip, lsl #16
 800a458:	ea42 6200 	orr.w	r2, r2, r0, lsl #24
 800a45c:	61fa      	str	r2, [r7, #28]
 800a45e:	7808      	ldrb	r0, [r1, #0]
 800a460:	69ba      	ldr	r2, [r7, #24]
 800a462:	f360 4210 	bfi	r2, r0, #16, #1
 800a466:	61ba      	str	r2, [r7, #24]

0800a468 <??llhwc_set_scan_param_15>:
 800a468:	6860      	ldr	r0, [r4, #4]
 800a46a:	9a08      	ldr	r2, [sp, #32]
 800a46c:	f8df cc4c 	ldr.w	ip, [pc, #3148]	; 800b0bc <??DataTable43>
 800a470:	6170      	str	r0, [r6, #20]
 800a472:	6860      	ldr	r0, [r4, #4]
 800a474:	f8df 4c48 	ldr.w	r4, [pc, #3144]	; 800b0c0 <??DataTable43_1>
 800a478:	0080      	lsls	r0, r0, #2
 800a47a:	fba0 4304 	umull	r4, r3, r0, r4
 800a47e:	099b      	lsrs	r3, r3, #6
 800a480:	616b      	str	r3, [r5, #20]
 800a482:	f8cc a024 	str.w	sl, [ip, #36]	; 0x24
 800a486:	6810      	ldr	r0, [r2, #0]
 800a488:	2800      	cmp	r0, #0
 800a48a:	bf1c      	itt	ne
 800a48c:	6850      	ldrne	r0, [r2, #4]
 800a48e:	2800      	cmpne	r0, #0
 800a490:	d006      	beq.n	800a4a0 <??llhwc_set_scan_param_16>
 800a492:	6070      	str	r0, [r6, #4]
 800a494:	6810      	ldr	r0, [r2, #0]
 800a496:	68b2      	ldr	r2, [r6, #8]
 800a498:	f360 0217 	bfi	r2, r0, #0, #24
 800a49c:	60b2      	str	r2, [r6, #8]
 800a49e:	e010      	b.n	800a4c2 <??llhwc_set_scan_param_17>

0800a4a0 <??llhwc_set_scan_param_16>:
 800a4a0:	f8df 0644 	ldr.w	r0, [pc, #1604]	; 800aae8 <??DataTable41_6>
 800a4a4:	7942      	ldrb	r2, [r0, #5]
 800a4a6:	2a01      	cmp	r2, #1
 800a4a8:	bf0c      	ite	eq
 800a4aa:	6800      	ldreq	r0, [r0, #0]
 800a4ac:	f8df 063c 	ldrne.w	r0, [pc, #1596]	; 800aaec <??DataTable41_7>
 800a4b0:	6070      	str	r0, [r6, #4]
 800a4b2:	68b0      	ldr	r0, [r6, #8]
 800a4b4:	f000 407f 	and.w	r0, r0, #4278190080	; 0xff000000
 800a4b8:	f040 1055 	orr.w	r0, r0, #5570645	; 0x550055
 800a4bc:	f440 40aa 	orr.w	r0, r0, #21760	; 0x5500
 800a4c0:	60b0      	str	r0, [r6, #8]

0800a4c2 <??llhwc_set_scan_param_17>:
 800a4c2:	7848      	ldrb	r0, [r1, #1]
 800a4c4:	6b39      	ldr	r1, [r7, #48]	; 0x30
 800a4c6:	2230      	movs	r2, #48	; 0x30
 800a4c8:	f360 0102 	bfi	r1, r0, #0, #3
 800a4cc:	6339      	str	r1, [r7, #48]	; 0x30
 800a4ce:	f89d 0008 	ldrb.w	r0, [sp, #8]
 800a4d2:	6839      	ldr	r1, [r7, #0]
 800a4d4:	f360 0104 	bfi	r1, r0, #0, #5
 800a4d8:	6039      	str	r1, [r7, #0]
 800a4da:	68f1      	ldr	r1, [r6, #12]
 800a4dc:	2028      	movs	r0, #40	; 0x28
 800a4de:	f360 611f 	bfi	r1, r0, #24, #8
 800a4e2:	60f1      	str	r1, [r6, #12]
 800a4e4:	4631      	mov	r1, r6
 800a4e6:	f8df 05e8 	ldr.w	r0, [pc, #1512]	; 800aad0 <??DataTable41>
 800a4ea:	f004 fb2d 	bl	800eb48 <ble_memcpy>
 800a4ee:	f8df 0cd8 	ldr.w	r0, [pc, #3288]	; 800b1c8 <??DataTable44>
 800a4f2:	6802      	ldr	r2, [r0, #0]
 800a4f4:	f248 2110 	movw	r1, #33296	; 0x8210
 800a4f8:	f361 020f 	bfi	r2, r1, #0, #16
 800a4fc:	6002      	str	r2, [r0, #0]

0800a4fe <??llhwc_set_scan_param_5>:
 800a4fe:	4650      	mov	r0, sl
 800a500:	e2e3      	b.n	800aaca <?Subroutine3>
	...

0800a504 <??DataTable38>:
 800a504:	18c0 2000                                   ... 

0800a508 <?_3>:
 800a508:	0000 000c 0027 0000                         ....'...

0800a510 <?_6>:
 800a510:	0000 0001                                   ....

0800a514 <llhwc_set_scan_param_reduced>:
 800a514:	f20f 2384 	addw	r3, pc, #644	; 0x284
 800a518:	e92d 4ff1 	stmdb	sp!, {r0, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800a51c:	e9d3 4700 	ldrd	r4, r7, [r3]
 800a520:	b084      	sub	sp, #16
 800a522:	aa02      	add	r2, sp, #8
 800a524:	460e      	mov	r6, r1
 800a526:	e9c2 4700 	strd	r4, r7, [r2]
 800a52a:	e9d6 0104 	ldrd	r0, r1, [r6, #16]
 800a52e:	4fa7      	ldr	r7, [pc, #668]	; (800a7cc <??DataTable40>)
 800a530:	f04f 0800 	mov.w	r8, #0
 800a534:	f7fe f824 	bl	8008580 <llhwc_get_sm_mode_from_event_type>
 800a538:	f88d 0004 	strb.w	r0, [sp, #4]
 800a53c:	f20f 2064 	addw	r0, pc, #612	; 0x264
 800a540:	6802      	ldr	r2, [r0, #0]
 800a542:	a802      	add	r0, sp, #8
 800a544:	f8df 55a8 	ldr.w	r5, [pc, #1448]	; 800aaf0 <??DataTable41_8>
 800a548:	9200      	str	r2, [sp, #0]
 800a54a:	7e71      	ldrb	r1, [r6, #25]
 800a54c:	f88d 1000 	strb.w	r1, [sp]
 800a550:	4aa5      	ldr	r2, [pc, #660]	; (800a7e8 <??DataTable40_7>)
 800a552:	f88d 1001 	strb.w	r1, [sp, #1]
 800a556:	f107 0131 	add.w	r1, r7, #49	; 0x31
 800a55a:	f881 8002 	strb.w	r8, [r1, #2]
 800a55e:	7e31      	ldrb	r1, [r6, #24]
 800a560:	f8df 4590 	ldr.w	r4, [pc, #1424]	; 800aaf4 <??DataTable41_9>
 800a564:	eb00 0341 	add.w	r3, r0, r1, lsl #1
 800a568:	f833 0c4a 	ldrh.w	r0, [r3, #-74]
 800a56c:	6853      	ldr	r3, [r2, #4]
 800a56e:	f361 0305 	bfi	r3, r1, #0, #6
 800a572:	4611      	mov	r1, r2
 800a574:	604b      	str	r3, [r1, #4]
 800a576:	2200      	movs	r2, #0
 800a578:	2101      	movs	r1, #1
 800a57a:	b2c0      	uxtb	r0, r0
 800a57c:	f003 ff01 	bl	800e382 <llhwc_phy_set_ch_config>
 800a580:	489c      	ldr	r0, [pc, #624]	; (800a7f4 <??DataTable40_10>)
 800a582:	6881      	ldr	r1, [r0, #8]
 800a584:	692a      	ldr	r2, [r5, #16]
 800a586:	f361 621f 	bfi	r2, r1, #24, #8
 800a58a:	612a      	str	r2, [r5, #16]
 800a58c:	68c0      	ldr	r0, [r0, #12]
 800a58e:	6829      	ldr	r1, [r5, #0]
 800a590:	f360 4117 	bfi	r1, r0, #16, #8
 800a594:	6029      	str	r1, [r5, #0]
 800a596:	4621      	mov	r1, r4
 800a598:	2000      	movs	r0, #0
 800a59a:	f008 ffb3 	bl	8013504 <allocate_data_packet>
 800a59e:	64b8      	str	r0, [r7, #72]	; 0x48
 800a5a0:	b928      	cbnz	r0, 800a5ae <??llhwc_set_scan_param_reduced_0>
 800a5a2:	203f      	movs	r0, #63	; 0x3f
 800a5a4:	f04f 0807 	mov.w	r8, #7
 800a5a8:	f7f5 fe42 	bl	8000230 <bsp_debug_gpio_toggle>
 800a5ac:	e0ec      	b.n	800a788 <??llhwc_set_scan_param_reduced_1>

0800a5ae <??llhwc_set_scan_param_reduced_0>:
 800a5ae:	2118      	movs	r1, #24
 800a5b0:	8141      	strh	r1, [r0, #10]
 800a5b2:	6801      	ldr	r1, [r0, #0]
 800a5b4:	69e8      	ldr	r0, [r5, #28]
 800a5b6:	f8df 9540 	ldr.w	r9, [pc, #1344]	; 800aaf8 <??DataTable41_10>
 800a5ba:	3114      	adds	r1, #20
 800a5bc:	f361 401f 	bfi	r0, r1, #16, #16
 800a5c0:	61e8      	str	r0, [r5, #28]
 800a5c2:	eb09 4010 	add.w	r0, r9, r0, lsr #16
 800a5c6:	2204      	movs	r2, #4
 800a5c8:	2100      	movs	r1, #0
 800a5ca:	f004 fb0e 	bl	800ebea <ble_memset>
 800a5ce:	e9d6 0104 	ldrd	r0, r1, [r6, #16]
 800a5d2:	2900      	cmp	r1, #0
 800a5d4:	bf08      	it	eq
 800a5d6:	2810      	cmpeq	r0, #16
 800a5d8:	d149      	bne.n	800a66e <??llhwc_set_scan_param_reduced_2>
 800a5da:	6cb8      	ldr	r0, [r7, #72]	; 0x48
 800a5dc:	4621      	mov	r1, r4
 800a5de:	f008 ff91 	bl	8013504 <allocate_data_packet>
 800a5e2:	0004      	movs	r4, r0
 800a5e4:	d108      	bne.n	800a5f8 <??llhwc_set_scan_param_reduced_3>
 800a5e6:	203f      	movs	r0, #63	; 0x3f
 800a5e8:	f7f5 fe22 	bl	8000230 <bsp_debug_gpio_toggle>
 800a5ec:	6cb8      	ldr	r0, [r7, #72]	; 0x48
 800a5ee:	f04f 0807 	mov.w	r8, #7
 800a5f2:	f008 ffb5 	bl	8013560 <free_buff_hdr>
 800a5f6:	e0c7      	b.n	800a788 <??llhwc_set_scan_param_reduced_1>

0800a5f8 <??llhwc_set_scan_param_reduced_3>:
 800a5f8:	2118      	movs	r1, #24
 800a5fa:	8161      	strh	r1, [r4, #10]
 800a5fc:	f8d4 a000 	ldr.w	sl, [r4]
 800a600:	f8df 04f8 	ldr.w	r0, [pc, #1272]	; 800aafc <??DataTable41_11>
 800a604:	2204      	movs	r2, #4
 800a606:	4482      	add	sl, r0
 800a608:	eb09 0b0a 	add.w	fp, r9, sl
 800a60c:	2100      	movs	r1, #0
 800a60e:	4658      	mov	r0, fp
 800a610:	f004 faeb 	bl	800ebea <ble_memset>
 800a614:	69e8      	ldr	r0, [r5, #28]
 800a616:	eb09 4010 	add.w	r0, r9, r0, lsr #16
 800a61a:	6801      	ldr	r1, [r0, #0]
 800a61c:	f36a 010f 	bfi	r1, sl, #0, #16
 800a620:	6001      	str	r1, [r0, #0]
 800a622:	8960      	ldrh	r0, [r4, #10]
 800a624:	8160      	strh	r0, [r4, #10]
 800a626:	f8db 1000 	ldr.w	r1, [fp]
 800a62a:	f64f 74ff 	movw	r4, #65535	; 0xffff
 800a62e:	4321      	orrs	r1, r4
 800a630:	f8cb 1000 	str.w	r1, [fp]
 800a634:	6832      	ldr	r2, [r6, #0]
 800a636:	69e8      	ldr	r0, [r5, #28]
 800a638:	2100      	movs	r1, #0
 800a63a:	1f12      	subs	r2, r2, #4
 800a63c:	f362 000f 	bfi	r0, r2, #0, #16
 800a640:	61e8      	str	r0, [r5, #28]
 800a642:	b280      	uxth	r0, r0
 800a644:	2204      	movs	r2, #4
 800a646:	4448      	add	r0, r9
 800a648:	f004 facf 	bl	800ebea <ble_memset>
 800a64c:	69e8      	ldr	r0, [r5, #28]
 800a64e:	2206      	movs	r2, #6
 800a650:	b280      	uxth	r0, r0
 800a652:	4448      	add	r0, r9
 800a654:	6801      	ldr	r1, [r0, #0]
 800a656:	430c      	orrs	r4, r1
 800a658:	6004      	str	r4, [r0, #0]
 800a65a:	68f1      	ldr	r1, [r6, #12]
 800a65c:	4638      	mov	r0, r7
 800a65e:	f004 fa73 	bl	800eb48 <ble_memcpy>
 800a662:	6830      	ldr	r0, [r6, #0]
 800a664:	7801      	ldrb	r1, [r0, #0]
 800a666:	f3c1 1080 	ubfx	r0, r1, #6, #1
 800a66a:	60b8      	str	r0, [r7, #8]
 800a66c:	e00f      	b.n	800a68e <??llhwc_set_scan_param_reduced_4>

0800a66e <??llhwc_set_scan_param_reduced_2>:
 800a66e:	69e8      	ldr	r0, [r5, #28]
 800a670:	eb09 4110 	add.w	r1, r9, r0, lsr #16
 800a674:	f64f 70ff 	movw	r0, #65535	; 0xffff
 800a678:	680a      	ldr	r2, [r1, #0]
 800a67a:	4302      	orrs	r2, r0
 800a67c:	600a      	str	r2, [r1, #0]
 800a67e:	69e9      	ldr	r1, [r5, #28]
 800a680:	4308      	orrs	r0, r1
 800a682:	61e8      	str	r0, [r5, #28]
 800a684:	6829      	ldr	r1, [r5, #0]
 800a686:	2001      	movs	r0, #1
 800a688:	f360 611c 	bfi	r1, r0, #24, #5
 800a68c:	6029      	str	r1, [r5, #0]

0800a68e <??llhwc_set_scan_param_reduced_4>:
 800a68e:	e9d6 2304 	ldrd	r2, r3, [r6, #16]
 800a692:	e9c7 2308 	strd	r2, r3, [r7, #32]
 800a696:	7a30      	ldrb	r0, [r6, #8]
 800a698:	f887 0031 	strb.w	r0, [r7, #49]	; 0x31
 800a69c:	7e71      	ldrb	r1, [r6, #25]
 800a69e:	f88d 1000 	strb.w	r1, [sp]
 800a6a2:	f88d 1001 	strb.w	r1, [sp, #1]
 800a6a6:	9800      	ldr	r0, [sp, #0]
 800a6a8:	f7fd ff89 	bl	80085be <llhwc_switch_rate>
 800a6ac:	e9d6 0104 	ldrd	r0, r1, [r6, #16]
 800a6b0:	2900      	cmp	r1, #0
 800a6b2:	bf02      	ittt	eq
 800a6b4:	2810      	cmpeq	r0, #16
 800a6b6:	f89d 0000 	ldrbeq.w	r0, [sp]
 800a6ba:	2804      	cmpeq	r0, #4
 800a6bc:	d116      	bne.n	800a6ec <??llhwc_set_scan_param_reduced_5>
 800a6be:	f8bd 0002 	ldrh.w	r0, [sp, #2]
 800a6c2:	2802      	cmp	r0, #2
 800a6c4:	d107      	bne.n	800a6d6 <??llhwc_set_scan_param_reduced_6>
 800a6c6:	69e8      	ldr	r0, [r5, #28]
 800a6c8:	b280      	uxth	r0, r0
 800a6ca:	4481      	add	r9, r0
 800a6cc:	f8d9 1000 	ldr.w	r1, [r9]
 800a6d0:	f021 6100 	bic.w	r1, r1, #134217728	; 0x8000000
 800a6d4:	e008      	b.n	800a6e8 <??llhwc_set_scan_param_reduced_7>

0800a6d6 <??llhwc_set_scan_param_reduced_6>:
 800a6d6:	2801      	cmp	r0, #1
 800a6d8:	d108      	bne.n	800a6ec <??llhwc_set_scan_param_reduced_5>
 800a6da:	69e8      	ldr	r0, [r5, #28]
 800a6dc:	b280      	uxth	r0, r0
 800a6de:	4481      	add	r9, r0
 800a6e0:	f8d9 1000 	ldr.w	r1, [r9]
 800a6e4:	f041 6100 	orr.w	r1, r1, #134217728	; 0x8000000

0800a6e8 <??llhwc_set_scan_param_reduced_7>:
 800a6e8:	f8c9 1000 	str.w	r1, [r9]

0800a6ec <??llhwc_set_scan_param_reduced_5>:
 800a6ec:	7e70      	ldrb	r0, [r6, #25]
 800a6ee:	2804      	cmp	r0, #4
 800a6f0:	bf0f      	iteee	eq
 800a6f2:	20e0      	moveq	r0, #224	; 0xe0
 800a6f4:	f8df 13ec 	ldrne.w	r1, [pc, #1004]	; 800aae4 <??DataTable41_5>
 800a6f8:	f831 0010 	ldrhne.w	r0, [r1, r0, lsl #1]
 800a6fc:	301b      	addne	r0, #27
 800a6fe:	68a9      	ldr	r1, [r5, #8]
 800a700:	f8df 39bc 	ldr.w	r3, [pc, #2492]	; 800b0c0 <??DataTable43_1>
 800a704:	f360 611f 	bfi	r1, r0, #24, #8
 800a708:	60a9      	str	r1, [r5, #8]
 800a70a:	6870      	ldr	r0, [r6, #4]
 800a70c:	9904      	ldr	r1, [sp, #16]
 800a70e:	6168      	str	r0, [r5, #20]
 800a710:	6870      	ldr	r0, [r6, #4]
 800a712:	0080      	lsls	r0, r0, #2
 800a714:	fba0 3203 	umull	r3, r2, r0, r3
 800a718:	0992      	lsrs	r2, r2, #6
 800a71a:	617a      	str	r2, [r7, #20]
 800a71c:	6808      	ldr	r0, [r1, #0]
 800a71e:	2800      	cmp	r0, #0
 800a720:	bf1c      	itt	ne
 800a722:	6848      	ldrne	r0, [r1, #4]
 800a724:	2800      	cmpne	r0, #0
 800a726:	d006      	beq.n	800a736 <??llhwc_set_scan_param_reduced_8>
 800a728:	6068      	str	r0, [r5, #4]
 800a72a:	6808      	ldr	r0, [r1, #0]
 800a72c:	68a9      	ldr	r1, [r5, #8]
 800a72e:	f360 0117 	bfi	r1, r0, #0, #24
 800a732:	60a9      	str	r1, [r5, #8]
 800a734:	e010      	b.n	800a758 <??llhwc_set_scan_param_reduced_9>

0800a736 <??llhwc_set_scan_param_reduced_8>:
 800a736:	f8df 03b0 	ldr.w	r0, [pc, #944]	; 800aae8 <??DataTable41_6>
 800a73a:	7941      	ldrb	r1, [r0, #5]
 800a73c:	2901      	cmp	r1, #1
 800a73e:	bf0c      	ite	eq
 800a740:	6800      	ldreq	r0, [r0, #0]
 800a742:	f8df 03a8 	ldrne.w	r0, [pc, #936]	; 800aaec <??DataTable41_7>
 800a746:	6068      	str	r0, [r5, #4]
 800a748:	68a8      	ldr	r0, [r5, #8]
 800a74a:	f000 407f 	and.w	r0, r0, #4278190080	; 0xff000000
 800a74e:	f040 1055 	orr.w	r0, r0, #5570645	; 0x550055
 800a752:	f440 40aa 	orr.w	r0, r0, #21760	; 0x5500
 800a756:	60a8      	str	r0, [r5, #8]

0800a758 <??llhwc_set_scan_param_reduced_9>:
 800a758:	68e9      	ldr	r1, [r5, #12]
 800a75a:	2028      	movs	r0, #40	; 0x28
 800a75c:	f360 611f 	bfi	r1, r0, #24, #8
 800a760:	60e9      	str	r1, [r5, #12]
 800a762:	4821      	ldr	r0, [pc, #132]	; (800a7e8 <??DataTable40_7>)
 800a764:	f89d 1004 	ldrb.w	r1, [sp, #4]
 800a768:	6802      	ldr	r2, [r0, #0]
 800a76a:	f361 0204 	bfi	r2, r1, #0, #5
 800a76e:	6002      	str	r2, [r0, #0]
 800a770:	2230      	movs	r2, #48	; 0x30
 800a772:	4629      	mov	r1, r5
 800a774:	48d6      	ldr	r0, [pc, #856]	; (800aad0 <??DataTable41>)
 800a776:	f004 f9e7 	bl	800eb48 <ble_memcpy>
 800a77a:	48d6      	ldr	r0, [pc, #856]	; (800aad4 <??DataTable41_1>)
 800a77c:	6802      	ldr	r2, [r0, #0]
 800a77e:	f248 2110 	movw	r1, #33296	; 0x8210
 800a782:	f361 020f 	bfi	r2, r1, #0, #16
 800a786:	6002      	str	r2, [r0, #0]

0800a788 <??llhwc_set_scan_param_reduced_1>:
 800a788:	4640      	mov	r0, r8

0800a78a <?Subroutine2>:
 800a78a:	b005      	add	sp, #20
 800a78c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0800a790 <??DataTable39>:
 800a790:	6667 6666                                   gfff

0800a794 <??DataTable39_1>:
 800a794:	8775 0800                                   u...

0800a798 <??DataTable39_2>:
 800a798:	8a27 0800                                   '...

0800a79c <?_4>:
 800a79c:	0000 000c 0027 0000                         ....'...

0800a7a4 <?_7>:
 800a7a4:	0000 0001                                   ....

0800a7a8 <llhwc_stop_scan>:
 800a7a8:	b580      	push	{r7, lr}
 800a7aa:	201b      	movs	r0, #27
 800a7ac:	f7f5 fd3c 	bl	8000228 <bsp_debug_gpio_set>
 800a7b0:	2100      	movs	r1, #0
 800a7b2:	4806      	ldr	r0, [pc, #24]	; (800a7cc <??DataTable40>)
 800a7b4:	6141      	str	r1, [r0, #20]
 800a7b6:	4809      	ldr	r0, [pc, #36]	; (800a7dc <??DataTable40_4>)
 800a7b8:	6801      	ldr	r1, [r0, #0]
 800a7ba:	f041 0101 	orr.w	r1, r1, #1
 800a7be:	6001      	str	r1, [r0, #0]
 800a7c0:	201b      	movs	r0, #27
 800a7c2:	e8bd 4002 	ldmia.w	sp!, {r1, lr}
 800a7c6:	f7f5 bd31 	b.w	800022c <bsp_debug_gpio_clear>
	...

0800a7cc <??DataTable40>:
 800a7cc:	0718 2000                                   ... 

0800a7d0 <??DataTable40_1>:
 800a7d0:	8bd1 0800                                   ....

0800a7d4 <??DataTable40_2>:
 800a7d4:	8753 0800                                   S...

0800a7d8 <??DataTable40_3>:
 800a7d8:	0480 4802                                   ...H

0800a7dc <??DataTable40_4>:
 800a7dc:	0404 4802                                   ...H

0800a7e0 <??DataTable40_5>:
 800a7e0:	822c 4802                                   ,..H

0800a7e4 <??DataTable40_6>:
 800a7e4:	0744 2000                                   D.. 

0800a7e8 <??DataTable40_7>:
 800a7e8:	080c 4802                                   ...H

0800a7ec <??DataTable40_8>:
 800a7ec:	4129 7176                                   )Avq

0800a7f0 <??DataTable40_9>:
 800a7f0:	8200 4802                                   ...H

0800a7f4 <??DataTable40_10>:
 800a7f4:	08a4 2000                                   ... 

0800a7f8 <llhwc_set_init_param>:
 800a7f8:	f20f 3204 	addw	r2, pc, #772	; 0x304
 800a7fc:	e92d 4ff3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800a800:	e9d2 3400 	ldrd	r3, r4, [r2]
 800a804:	b087      	sub	sp, #28
 800a806:	2000      	movs	r0, #0
 800a808:	9003      	str	r0, [sp, #12]
 800a80a:	a904      	add	r1, sp, #16
 800a80c:	4681      	mov	r9, r0
 800a80e:	e9c1 3400 	strd	r3, r4, [r1]
 800a812:	2001      	movs	r0, #1
 800a814:	f7f5 fcdc 	bl	80001d0 <bsp_assert>
 800a818:	2000      	movs	r0, #0
 800a81a:	f04f 0b01 	mov.w	fp, #1

0800a81e <??llhwc_set_init_param_0>:
 800a81e:	fa0b f100 	lsl.w	r1, fp, r0
 800a822:	2940      	cmp	r1, #64	; 0x40
 800a824:	d056      	beq.n	800a8d4 <??llhwc_set_init_param_1>
 800a826:	1c40      	adds	r0, r0, #1
 800a828:	b2c1      	uxtb	r1, r0
 800a82a:	2914      	cmp	r1, #20
 800a82c:	ddf7      	ble.n	800a81e <??llhwc_set_init_param_0>

0800a82e <??llhwc_set_init_param_2>:
 800a82e:	f20f 21d8 	addw	r1, pc, #728	; 0x2d8
 800a832:	680a      	ldr	r2, [r1, #0]
 800a834:	9c08      	ldr	r4, [sp, #32]
 800a836:	f8df 8994 	ldr.w	r8, [pc, #2452]	; 800b1cc <??DataTable44_1>
 800a83a:	9202      	str	r2, [sp, #8]
 800a83c:	7b61      	ldrb	r1, [r4, #13]
 800a83e:	f88d 1008 	strb.w	r1, [sp, #8]
 800a842:	2000      	movs	r0, #0
 800a844:	f88d 1009 	strb.w	r1, [sp, #9]
 800a848:	2100      	movs	r1, #0
 800a84a:	f88d 1004 	strb.w	r1, [sp, #4]
 800a84e:	f108 0130 	add.w	r1, r8, #48	; 0x30
 800a852:	70c8      	strb	r0, [r1, #3]
 800a854:	2202      	movs	r2, #2
 800a856:	f108 0030 	add.w	r0, r8, #48	; 0x30
 800a85a:	7102      	strb	r2, [r0, #4]
 800a85c:	4ea4      	ldr	r6, [pc, #656]	; (800aaf0 <??DataTable41_8>)
 800a85e:	2224      	movs	r2, #36	; 0x24
 800a860:	2100      	movs	r1, #0
 800a862:	4630      	mov	r0, r6
 800a864:	f004 f9c1 	bl	800ebea <ble_memset>
 800a868:	6830      	ldr	r0, [r6, #0]
 800a86a:	f64f 7aff 	movw	sl, #65535	; 0xffff
 800a86e:	f8df 7960 	ldr.w	r7, [pc, #2400]	; 800b1d0 <??DataTable44_2>
 800a872:	ea4a 0000 	orr.w	r0, sl, r0
 800a876:	6030      	str	r0, [r6, #0]
 800a878:	7b21      	ldrb	r1, [r4, #12]
 800a87a:	a804      	add	r0, sp, #16
 800a87c:	f888 1030 	strb.w	r1, [r8, #48]	; 0x30
 800a880:	7b21      	ldrb	r1, [r4, #12]
 800a882:	eb00 0341 	add.w	r3, r0, r1, lsl #1
 800a886:	f833 0c4a 	ldrh.w	r0, [r3, #-74]
 800a88a:	687a      	ldr	r2, [r7, #4]
 800a88c:	f361 0205 	bfi	r2, r1, #0, #6
 800a890:	607a      	str	r2, [r7, #4]
 800a892:	2201      	movs	r2, #1
 800a894:	2101      	movs	r1, #1
 800a896:	b2c0      	uxtb	r0, r0
 800a898:	f003 fd73 	bl	800e382 <llhwc_phy_set_ch_config>
 800a89c:	a801      	add	r0, sp, #4
 800a89e:	f00b fd0b 	bl	80162b8 <db_get_tx_power_value>
 800a8a2:	f99d 1004 	ldrsb.w	r1, [sp, #4]
 800a8a6:	2001      	movs	r0, #1
 800a8a8:	9000      	str	r0, [sp, #0]
 800a8aa:	2301      	movs	r3, #1
 800a8ac:	2200      	movs	r2, #0
 800a8ae:	f7fb fa58 	bl	8005d62 <ll_tx_pwr_if_tx_pwr_params_config>
 800a8b2:	4990      	ldr	r1, [pc, #576]	; (800aaf4 <??DataTable41_9>)
 800a8b4:	2000      	movs	r0, #0
 800a8b6:	f008 fe25 	bl	8013504 <allocate_data_packet>
 800a8ba:	f108 0130 	add.w	r1, r8, #48	; 0x30
 800a8be:	6188      	str	r0, [r1, #24]
 800a8c0:	f108 0030 	add.w	r0, r8, #48	; 0x30
 800a8c4:	6980      	ldr	r0, [r0, #24]
 800a8c6:	b940      	cbnz	r0, 800a8da <??llhwc_set_init_param_3>
 800a8c8:	2007      	movs	r0, #7
 800a8ca:	9003      	str	r0, [sp, #12]
 800a8cc:	203f      	movs	r0, #63	; 0x3f
 800a8ce:	f7f5 fcaf 	bl	8000230 <bsp_debug_gpio_toggle>
 800a8d2:	e0f9      	b.n	800aac8 <??llhwc_set_init_param_4>

0800a8d4 <??llhwc_set_init_param_1>:
 800a8d4:	fa5f f980 	uxtb.w	r9, r0
 800a8d8:	e7a9      	b.n	800a82e <??llhwc_set_init_param_2>

0800a8da <??llhwc_set_init_param_3>:
 800a8da:	6801      	ldr	r1, [r0, #0]
 800a8dc:	8940      	ldrh	r0, [r0, #10]
 800a8de:	4d86      	ldr	r5, [pc, #536]	; (800aaf8 <??DataTable41_10>)
 800a8e0:	2204      	movs	r2, #4
 800a8e2:	1841      	adds	r1, r0, r1
 800a8e4:	69f0      	ldr	r0, [r6, #28]
 800a8e6:	1f09      	subs	r1, r1, #4
 800a8e8:	f361 401f 	bfi	r0, r1, #16, #16
 800a8ec:	61f0      	str	r0, [r6, #28]
 800a8ee:	eb05 4010 	add.w	r0, r5, r0, lsr #16
 800a8f2:	2100      	movs	r1, #0
 800a8f4:	f004 f979 	bl	800ebea <ble_memset>
 800a8f8:	69f0      	ldr	r0, [r6, #28]
 800a8fa:	6832      	ldr	r2, [r6, #0]
 800a8fc:	2100      	movs	r1, #0
 800a8fe:	eb05 4010 	add.w	r0, r5, r0, lsr #16
 800a902:	f36b 621c 	bfi	r2, fp, #24, #5
 800a906:	6032      	str	r2, [r6, #0]
 800a908:	6803      	ldr	r3, [r0, #0]
 800a90a:	ea4a 0303 	orr.w	r3, sl, r3
 800a90e:	6003      	str	r3, [r0, #0]
 800a910:	2040      	movs	r0, #64	; 0x40
 800a912:	e9c8 0108 	strd	r0, r1, [r8, #32]
 800a916:	7ba2      	ldrb	r2, [r4, #14]
 800a918:	f108 0030 	add.w	r0, r8, #48	; 0x30
 800a91c:	7042      	strb	r2, [r0, #1]
 800a91e:	9802      	ldr	r0, [sp, #8]
 800a920:	f7fd fe4d 	bl	80085be <llhwc_switch_rate>
 800a924:	7b60      	ldrb	r0, [r4, #13]
 800a926:	2804      	cmp	r0, #4
 800a928:	bf0f      	iteee	eq
 800a92a:	20e0      	moveq	r0, #224	; 0xe0
 800a92c:	496d      	ldrne	r1, [pc, #436]	; (800aae4 <??DataTable41_5>)
 800a92e:	f831 0010 	ldrhne.w	r0, [r1, r0, lsl #1]
 800a932:	301b      	addne	r0, #27
 800a934:	68b1      	ldr	r1, [r6, #8]
 800a936:	2204      	movs	r2, #4
 800a938:	f360 611f 	bfi	r1, r0, #24, #8
 800a93c:	60b1      	str	r1, [r6, #8]
 800a93e:	6861      	ldr	r1, [r4, #4]
 800a940:	69f0      	ldr	r0, [r6, #28]
 800a942:	1f09      	subs	r1, r1, #4
 800a944:	f361 000f 	bfi	r0, r1, #0, #16
 800a948:	61f0      	str	r0, [r6, #28]
 800a94a:	b280      	uxth	r0, r0
 800a94c:	2100      	movs	r1, #0
 800a94e:	1828      	adds	r0, r5, r0
 800a950:	f004 f94b 	bl	800ebea <ble_memset>
 800a954:	69f0      	ldr	r0, [r6, #28]
 800a956:	b280      	uxth	r0, r0
 800a958:	1828      	adds	r0, r5, r0
 800a95a:	6801      	ldr	r1, [r0, #0]
 800a95c:	ea4a 0a01 	orr.w	sl, sl, r1
 800a960:	f8c0 a000 	str.w	sl, [r0]
 800a964:	6862      	ldr	r2, [r4, #4]
 800a966:	f8df 086c 	ldr.w	r0, [pc, #2156]	; 800b1d4 <??DataTable44_3>
 800a96a:	f108 0130 	add.w	r1, r8, #48	; 0x30
 800a96e:	1882      	adds	r2, r0, r2
 800a970:	f89d 0008 	ldrb.w	r0, [sp, #8]
 800a974:	624a      	str	r2, [r1, #36]	; 0x24
 800a976:	2804      	cmp	r0, #4
 800a978:	d113      	bne.n	800a9a2 <??llhwc_set_init_param_5>
 800a97a:	f8bd 000a 	ldrh.w	r0, [sp, #10]
 800a97e:	2802      	cmp	r0, #2
 800a980:	d106      	bne.n	800a990 <??llhwc_set_init_param_6>
 800a982:	69f0      	ldr	r0, [r6, #28]
 800a984:	b280      	uxth	r0, r0
 800a986:	182d      	adds	r5, r5, r0
 800a988:	6829      	ldr	r1, [r5, #0]
 800a98a:	f021 6100 	bic.w	r1, r1, #134217728	; 0x8000000
 800a98e:	e007      	b.n	800a9a0 <??llhwc_set_init_param_7>

0800a990 <??llhwc_set_init_param_6>:
 800a990:	2801      	cmp	r0, #1
 800a992:	d106      	bne.n	800a9a2 <??llhwc_set_init_param_5>
 800a994:	69f0      	ldr	r0, [r6, #28]
 800a996:	b280      	uxth	r0, r0
 800a998:	182d      	adds	r5, r5, r0
 800a99a:	6829      	ldr	r1, [r5, #0]
 800a99c:	f041 6100 	orr.w	r1, r1, #134217728	; 0x8000000

0800a9a0 <??llhwc_set_init_param_7>:
 800a9a0:	6029      	str	r1, [r5, #0]

0800a9a2 <??llhwc_set_init_param_5>:
 800a9a2:	9807      	ldr	r0, [sp, #28]
 800a9a4:	7a41      	ldrb	r1, [r0, #9]
 800a9a6:	1e89      	subs	r1, r1, #2
 800a9a8:	2902      	cmp	r1, #2
 800a9aa:	d208      	bcs.n	800a9be <??llhwc_set_init_param_8>
 800a9ac:	6f39      	ldr	r1, [r7, #112]	; 0x70
 800a9ae:	f3c1 0180 	ubfx	r1, r1, #2, #1
 800a9b2:	f888 1018 	strb.w	r1, [r8, #24]
 800a9b6:	6f39      	ldr	r1, [r7, #112]	; 0x70
 800a9b8:	f021 0104 	bic.w	r1, r1, #4
 800a9bc:	6739      	str	r1, [r7, #112]	; 0x70

0800a9be <??llhwc_set_init_param_8>:
 800a9be:	f8df 1818 	ldr.w	r1, [pc, #2072]	; 800b1d8 <??DataTable44_4>
 800a9c2:	688a      	ldr	r2, [r1, #8]
 800a9c4:	6933      	ldr	r3, [r6, #16]
 800a9c6:	f362 631f 	bfi	r3, r2, #24, #8
 800a9ca:	6133      	str	r3, [r6, #16]
 800a9cc:	68c9      	ldr	r1, [r1, #12]
 800a9ce:	6832      	ldr	r2, [r6, #0]
 800a9d0:	f361 4217 	bfi	r2, r1, #16, #8
 800a9d4:	6032      	str	r2, [r6, #0]
 800a9d6:	6821      	ldr	r1, [r4, #0]
 800a9d8:	69ba      	ldr	r2, [r7, #24]
 800a9da:	790b      	ldrb	r3, [r1, #4]
 800a9dc:	f891 c005 	ldrb.w	ip, [r1, #5]
 800a9e0:	0c12      	lsrs	r2, r2, #16
 800a9e2:	ea43 230c 	orr.w	r3, r3, ip, lsl #8
 800a9e6:	ea43 4202 	orr.w	r2, r3, r2, lsl #16
 800a9ea:	61ba      	str	r2, [r7, #24]
 800a9ec:	780a      	ldrb	r2, [r1, #0]
 800a9ee:	784b      	ldrb	r3, [r1, #1]
 800a9f0:	f891 c002 	ldrb.w	ip, [r1, #2]
 800a9f4:	78c9      	ldrb	r1, [r1, #3]
 800a9f6:	ea42 2203 	orr.w	r2, r2, r3, lsl #8
 800a9fa:	ea42 420c 	orr.w	r2, r2, ip, lsl #16
 800a9fe:	ea42 6201 	orr.w	r2, r2, r1, lsl #24
 800aa02:	61fa      	str	r2, [r7, #28]
 800aa04:	7a41      	ldrb	r1, [r0, #9]
 800aa06:	69ba      	ldr	r2, [r7, #24]
 800aa08:	f361 4210 	bfi	r2, r1, #16, #1
 800aa0c:	61ba      	str	r2, [r7, #24]
 800aa0e:	7a01      	ldrb	r1, [r0, #8]
 800aa10:	2905      	cmp	r1, #5
 800aa12:	d118      	bne.n	800aa46 <??llhwc_set_init_param_9>
 800aa14:	6bb9      	ldr	r1, [r7, #56]	; 0x38
 800aa16:	7902      	ldrb	r2, [r0, #4]
 800aa18:	7943      	ldrb	r3, [r0, #5]
 800aa1a:	0c09      	lsrs	r1, r1, #16
 800aa1c:	ea42 2203 	orr.w	r2, r2, r3, lsl #8
 800aa20:	ea42 4101 	orr.w	r1, r2, r1, lsl #16
 800aa24:	63b9      	str	r1, [r7, #56]	; 0x38
 800aa26:	7801      	ldrb	r1, [r0, #0]
 800aa28:	7842      	ldrb	r2, [r0, #1]
 800aa2a:	7883      	ldrb	r3, [r0, #2]
 800aa2c:	ea41 2102 	orr.w	r1, r1, r2, lsl #8
 800aa30:	78c2      	ldrb	r2, [r0, #3]
 800aa32:	ea41 4103 	orr.w	r1, r1, r3, lsl #16
 800aa36:	ea41 6102 	orr.w	r1, r1, r2, lsl #24
 800aa3a:	63f9      	str	r1, [r7, #60]	; 0x3c
 800aa3c:	7a81      	ldrb	r1, [r0, #10]
 800aa3e:	6bba      	ldr	r2, [r7, #56]	; 0x38
 800aa40:	f361 4210 	bfi	r2, r1, #16, #1
 800aa44:	63ba      	str	r2, [r7, #56]	; 0x38

0800aa46 <??llhwc_set_init_param_9>:
 800aa46:	68a1      	ldr	r1, [r4, #8]
 800aa48:	f8df 3674 	ldr.w	r3, [pc, #1652]	; 800b0c0 <??DataTable43_1>
 800aa4c:	6171      	str	r1, [r6, #20]
 800aa4e:	68a1      	ldr	r1, [r4, #8]
 800aa50:	f8df 4668 	ldr.w	r4, [pc, #1640]	; 800b0bc <??DataTable43>
 800aa54:	0089      	lsls	r1, r1, #2
 800aa56:	fba1 3203 	umull	r3, r2, r1, r3
 800aa5a:	2100      	movs	r1, #0
 800aa5c:	0992      	lsrs	r2, r2, #6
 800aa5e:	f8c8 2014 	str.w	r2, [r8, #20]
 800aa62:	6261      	str	r1, [r4, #36]	; 0x24
 800aa64:	4920      	ldr	r1, [pc, #128]	; (800aae8 <??DataTable41_6>)
 800aa66:	794a      	ldrb	r2, [r1, #5]
 800aa68:	2a01      	cmp	r2, #1
 800aa6a:	bf0c      	ite	eq
 800aa6c:	6809      	ldreq	r1, [r1, #0]
 800aa6e:	491f      	ldrne	r1, [pc, #124]	; (800aaec <??DataTable41_7>)
 800aa70:	6071      	str	r1, [r6, #4]
 800aa72:	68b1      	ldr	r1, [r6, #8]
 800aa74:	f001 417f 	and.w	r1, r1, #4278190080	; 0xff000000
 800aa78:	f041 1155 	orr.w	r1, r1, #5570645	; 0x550055
 800aa7c:	f441 41aa 	orr.w	r1, r1, #21760	; 0x5500
 800aa80:	60b1      	str	r1, [r6, #8]
 800aa82:	7a00      	ldrb	r0, [r0, #8]
 800aa84:	6b39      	ldr	r1, [r7, #48]	; 0x30
 800aa86:	f360 0102 	bfi	r1, r0, #0, #3
 800aa8a:	6339      	str	r1, [r7, #48]	; 0x30
 800aa8c:	6838      	ldr	r0, [r7, #0]
 800aa8e:	f8df 1c1c 	ldr.w	r1, [pc, #3100]	; 800b6ac <??DataTable45>
 800aa92:	f369 0004 	bfi	r0, r9, #0, #5
 800aa96:	6038      	str	r0, [r7, #0]
 800aa98:	780a      	ldrb	r2, [r1, #0]
 800aa9a:	2a01      	cmp	r2, #1
 800aa9c:	d103      	bne.n	800aaa6 <??llhwc_set_init_param_10>
 800aa9e:	6b78      	ldr	r0, [r7, #52]	; 0x34
 800aaa0:	f440 4000 	orr.w	r0, r0, #32768	; 0x8000
 800aaa4:	6378      	str	r0, [r7, #52]	; 0x34

0800aaa6 <??llhwc_set_init_param_10>:
 800aaa6:	68f1      	ldr	r1, [r6, #12]
 800aaa8:	2028      	movs	r0, #40	; 0x28
 800aaaa:	2230      	movs	r2, #48	; 0x30
 800aaac:	f360 611f 	bfi	r1, r0, #24, #8
 800aab0:	60f1      	str	r1, [r6, #12]
 800aab2:	4631      	mov	r1, r6
 800aab4:	4806      	ldr	r0, [pc, #24]	; (800aad0 <??DataTable41>)
 800aab6:	f004 f847 	bl	800eb48 <ble_memcpy>
 800aaba:	4806      	ldr	r0, [pc, #24]	; (800aad4 <??DataTable41_1>)
 800aabc:	6802      	ldr	r2, [r0, #0]
 800aabe:	f248 2110 	movw	r1, #33296	; 0x8210
 800aac2:	f361 020f 	bfi	r2, r1, #0, #16
 800aac6:	6002      	str	r2, [r0, #0]

0800aac8 <??llhwc_set_init_param_4>:
 800aac8:	9803      	ldr	r0, [sp, #12]

0800aaca <?Subroutine3>:
 800aaca:	b009      	add	sp, #36	; 0x24
 800aacc:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0800aad0 <??DataTable41>:
 800aad0:	8210 4802                                   ...H

0800aad4 <??DataTable41_1>:
 800aad4:	0408 4802                                   ...H

0800aad8 <??DataTable41_2>:
 800aad8:	0738 2000                                   8.. 

0800aadc <??DataTable41_3>:
 800aadc:	3644 2000                                   D6. 

0800aae0 <??DataTable41_4>:
 800aae0:	fffc b7fd                                   ....

0800aae4 <??DataTable41_5>:
 800aae4:	c078 0800                                   x...

0800aae8 <??DataTable41_6>:
 800aae8:	0770 2000                                   p.. 

0800aaec <??DataTable41_7>:
 800aaec:	bed6 8e89                                   ....

0800aaf0 <??DataTable41_8>:
 800aaf0:	07d4 2000                                   ... 

0800aaf4 <??DataTable41_9>:
 800aaf4:	363c 2000                                   <6. 

0800aaf8 <??DataTable41_10>:
 800aaf8:	0000 4802                                   ...H

0800aafc <??DataTable41_11>:
 800aafc:	0014 b7fe                                   ....

0800ab00 <?_5>:
 800ab00:	0000 000c 0027 0000                         ....'...

0800ab08 <?_8>:
 800ab08:	0000 0001                                   ....

0800ab0c <llhwc_set_conn_evnt_param>:
 800ab0c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800ab10:	b089      	sub	sp, #36	; 0x24
 800ab12:	4681      	mov	r9, r0
 800ab14:	460c      	mov	r4, r1
 800ab16:	4616      	mov	r6, r2
 800ab18:	e9d6 0102 	ldrd	r0, r1, [r6, #8]
 800ab1c:	2700      	movs	r7, #0
 800ab1e:	f8df 5b90 	ldr.w	r5, [pc, #2960]	; 800b6b0 <??DataTable45_1>
 800ab22:	f7fd fd2d 	bl	8008580 <llhwc_get_sm_mode_from_event_type>
 800ab26:	4682      	mov	sl, r0
 800ab28:	9707      	str	r7, [sp, #28]
 800ab2a:	9706      	str	r7, [sp, #24]
 800ab2c:	f88d 7005 	strb.w	r7, [sp, #5]
 800ab30:	9704      	str	r7, [sp, #16]
 800ab32:	9702      	str	r7, [sp, #8]
 800ab34:	201d      	movs	r0, #29
 800ab36:	f7f5 fb77 	bl	8000228 <bsp_debug_gpio_set>
 800ab3a:	2224      	movs	r2, #36	; 0x24
 800ab3c:	2100      	movs	r1, #0
 800ab3e:	4628      	mov	r0, r5
 800ab40:	f004 f853 	bl	800ebea <ble_memset>
 800ab44:	222c      	movs	r2, #44	; 0x2c
 800ab46:	2100      	movs	r1, #0
 800ab48:	f8df 0b68 	ldr.w	r0, [pc, #2920]	; 800b6b4 <??DataTable45_2>
 800ab4c:	f004 f84d 	bl	800ebea <ble_memset>
 800ab50:	2214      	movs	r2, #20
 800ab52:	2100      	movs	r1, #0
 800ab54:	f8df 0b60 	ldr.w	r0, [pc, #2912]	; 800b6b8 <??DataTable45_3>
 800ab58:	f004 f847 	bl	800ebea <ble_memset>
 800ab5c:	6828      	ldr	r0, [r5, #0]
 800ab5e:	f8df 1b5c 	ldr.w	r1, [pc, #2908]	; 800b6bc <??DataTable45_4>
 800ab62:	f440 407f 	orr.w	r0, r0, #65280	; 0xff00
 800ab66:	f040 00ff 	orr.w	r0, r0, #255	; 0xff
 800ab6a:	6028      	str	r0, [r5, #0]
 800ab6c:	680a      	ldr	r2, [r1, #0]
 800ab6e:	f248 2008 	movw	r0, #33288	; 0x8208
 800ab72:	f360 020f 	bfi	r2, r0, #0, #16
 800ab76:	4608      	mov	r0, r1
 800ab78:	6002      	str	r2, [r0, #0]
 800ab7a:	6882      	ldr	r2, [r0, #8]
 800ab7c:	f44f 4102 	mov.w	r1, #33280	; 0x8200
 800ab80:	f361 020f 	bfi	r2, r1, #0, #16
 800ab84:	6082      	str	r2, [r0, #8]
 800ab86:	f8df 2644 	ldr.w	r2, [pc, #1604]	; 800b1cc <??DataTable44_1>
 800ab8a:	6910      	ldr	r0, [r2, #16]
 800ab8c:	f8df 1b30 	ldr.w	r1, [pc, #2864]	; 800b6c0 <??DataTable45_5>
 800ab90:	9103      	str	r1, [sp, #12]
 800ab92:	b110      	cbz	r0, 800ab9a <??llhwc_set_conn_evnt_param_0>
 800ab94:	9803      	ldr	r0, [sp, #12]
 800ab96:	2101      	movs	r1, #1
 800ab98:	70c1      	strb	r1, [r0, #3]

0800ab9a <??llhwc_set_conn_evnt_param_0>:
 800ab9a:	9803      	ldr	r0, [sp, #12]
 800ab9c:	2102      	movs	r1, #2
 800ab9e:	7101      	strb	r1, [r0, #4]
 800aba0:	78a0      	ldrb	r0, [r4, #2]
 800aba2:	2801      	cmp	r0, #1
 800aba4:	bf18      	it	ne
 800aba6:	2802      	cmpne	r0, #2
 800aba8:	d105      	bne.n	800abb6 <??llhwc_set_conn_evnt_param_1>
 800abaa:	6829      	ldr	r1, [r5, #0]
 800abac:	f248 2040 	movw	r0, #33344	; 0x8240
 800abb0:	f360 010f 	bfi	r1, r0, #0, #16
 800abb4:	6029      	str	r1, [r5, #0]

0800abb6 <??llhwc_set_conn_evnt_param_1>:
 800abb6:	7821      	ldrb	r1, [r4, #0]
 800abb8:	6a28      	ldr	r0, [r5, #32]
 800abba:	f361 6059 	bfi	r0, r1, #25, #1
 800abbe:	6228      	str	r0, [r5, #32]
 800abc0:	7861      	ldrb	r1, [r4, #1]
 800abc2:	f361 6018 	bfi	r0, r1, #24, #1
 800abc6:	6228      	str	r0, [r5, #32]
 800abc8:	7f70      	ldrb	r0, [r6, #29]
 800abca:	2804      	cmp	r0, #4
 800abcc:	bf0f      	iteee	eq
 800abce:	20e1      	moveq	r0, #225	; 0xe1
 800abd0:	f8df 1af0 	ldrne.w	r1, [pc, #2800]	; 800b6c4 <??DataTable45_6>
 800abd4:	f831 0010 	ldrhne.w	r0, [r1, r0, lsl #1]
 800abd8:	301d      	addne	r0, #29
 800abda:	68a9      	ldr	r1, [r5, #8]
 800abdc:	f360 611f 	bfi	r1, r0, #24, #8
 800abe0:	60a9      	str	r1, [r5, #8]
 800abe2:	f8df 05f4 	ldr.w	r0, [pc, #1524]	; 800b1d8 <??DataTable44_4>
 800abe6:	6881      	ldr	r1, [r0, #8]
 800abe8:	692a      	ldr	r2, [r5, #16]
 800abea:	f361 621f 	bfi	r2, r1, #24, #8
 800abee:	612a      	str	r2, [r5, #16]
 800abf0:	68c0      	ldr	r0, [r0, #12]
 800abf2:	6829      	ldr	r1, [r5, #0]
 800abf4:	f360 4117 	bfi	r1, r0, #16, #8
 800abf8:	6029      	str	r1, [r5, #0]
 800abfa:	8a30      	ldrh	r0, [r6, #16]
 800abfc:	1d00      	adds	r0, r0, #4
 800abfe:	6168      	str	r0, [r5, #20]
 800ac00:	f8d9 0000 	ldr.w	r0, [r9]
 800ac04:	68a9      	ldr	r1, [r5, #8]
 800ac06:	f360 0117 	bfi	r1, r0, #0, #24
 800ac0a:	60a9      	str	r1, [r5, #8]
 800ac0c:	f8d9 0004 	ldr.w	r0, [r9, #4]
 800ac10:	6068      	str	r0, [r5, #4]
 800ac12:	68e9      	ldr	r1, [r5, #12]
 800ac14:	20fb      	movs	r0, #251	; 0xfb
 800ac16:	f360 611f 	bfi	r1, r0, #24, #8
 800ac1a:	60e9      	str	r1, [r5, #12]
 800ac1c:	7830      	ldrb	r0, [r6, #0]
 800ac1e:	9903      	ldr	r1, [sp, #12]
 800ac20:	7008      	strb	r0, [r1, #0]
 800ac22:	f8df 05ac 	ldr.w	r0, [pc, #1452]	; 800b1d0 <??DataTable44_2>
 800ac26:	6801      	ldr	r1, [r0, #0]
 800ac28:	f36a 0104 	bfi	r1, sl, #0, #5
 800ac2c:	6001      	str	r1, [r0, #0]
 800ac2e:	7831      	ldrb	r1, [r6, #0]
 800ac30:	6842      	ldr	r2, [r0, #4]
 800ac32:	f361 0205 	bfi	r2, r1, #0, #6
 800ac36:	6042      	str	r2, [r0, #4]
 800ac38:	7830      	ldrb	r0, [r6, #0]
 800ac3a:	280a      	cmp	r0, #10
 800ac3c:	bfcc      	ite	gt
 800ac3e:	1c80      	addgt	r0, r0, #2
 800ac40:	1c40      	addle	r0, r0, #1
 800ac42:	2201      	movs	r2, #1
 800ac44:	2101      	movs	r1, #1
 800ac46:	b2c0      	uxtb	r0, r0
 800ac48:	f003 fb9b 	bl	800e382 <llhwc_phy_set_ch_config>
 800ac4c:	69f0      	ldr	r0, [r6, #28]
 800ac4e:	f7fd fcb6 	bl	80085be <llhwc_switch_rate>
 800ac52:	a801      	add	r0, sp, #4
 800ac54:	f00b fb30 	bl	80162b8 <db_get_tx_power_value>
 800ac58:	f99d 1004 	ldrsb.w	r1, [sp, #4]
 800ac5c:	2001      	movs	r0, #1
 800ac5e:	9000      	str	r0, [sp, #0]
 800ac60:	2301      	movs	r3, #1
 800ac62:	2200      	movs	r2, #0
 800ac64:	f7fb f87d 	bl	8005d62 <ll_tx_pwr_if_tx_pwr_params_config>
 800ac68:	e9d6 0102 	ldrd	r0, r1, [r6, #8]
 800ac6c:	2900      	cmp	r1, #0
 800ac6e:	bf04      	itt	eq
 800ac70:	f5b0 7f80 	cmpeq.w	r0, #256	; 0x100
 800ac74:	2701      	moveq	r7, #1
 800ac76:	9405      	str	r4, [sp, #20]
 800ac78:	9600      	str	r6, [sp, #0]
 800ac7a:	9708      	str	r7, [sp, #32]
 800ac7c:	f04f 0900 	mov.w	r9, #0
 800ac80:	2400      	movs	r4, #0
 800ac82:	f8dd 801c 	ldr.w	r8, [sp, #28]
 800ac86:	f8dd a018 	ldr.w	sl, [sp, #24]
 800ac8a:	f89d 7005 	ldrb.w	r7, [sp, #5]
 800ac8e:	9e04      	ldr	r6, [sp, #16]
 800ac90:	e076      	b.n	800ad80 <??llhwc_set_conn_evnt_param_2>

0800ac92 <??llhwc_set_conn_evnt_param_3>:
 800ac92:	2901      	cmp	r1, #1
 800ac94:	d136      	bne.n	800ad04 <??llhwc_set_conn_evnt_param_4>
 800ac96:	4440      	add	r0, r8
 800ac98:	6801      	ldr	r1, [r0, #0]
 800ac9a:	f041 6100 	orr.w	r1, r1, #134217728	; 0x8000000
 800ac9e:	e030      	b.n	800ad02 <??llhwc_set_conn_evnt_param_5>

0800aca0 <??llhwc_set_conn_evnt_param_6>:
 800aca0:	f8df 2c64 	ldr.w	r2, [pc, #3172]	; 800b908 <??DataTable46>
 800aca4:	1810      	adds	r0, r2, r0
 800aca6:	9004      	str	r0, [sp, #16]
 800aca8:	4683      	mov	fp, r0
 800acaa:	f8df 0c60 	ldr.w	r0, [pc, #3168]	; 800b90c <??DataTable46_1>
 800acae:	4483      	add	fp, r0
 800acb0:	2204      	movs	r2, #4
 800acb2:	2100      	movs	r1, #0
 800acb4:	4658      	mov	r0, fp
 800acb6:	f8db 6000 	ldr.w	r6, [fp]
 800acba:	f003 ff96 	bl	800ebea <ble_memset>
 800acbe:	f8db 0000 	ldr.w	r0, [fp]
 800acc2:	0eb6      	lsrs	r6, r6, #26
 800acc4:	f006 0601 	and.w	r6, r6, #1
 800acc8:	f020 6080 	bic.w	r0, r0, #67108864	; 0x4000000
 800accc:	ea40 6086 	orr.w	r0, r0, r6, lsl #26
 800acd0:	f8cb 0000 	str.w	r0, [fp]

0800acd4 <??llhwc_set_conn_evnt_param_7>:
 800acd4:	f8df 0c34 	ldr.w	r0, [pc, #3124]	; 800b90c <??DataTable46_1>
 800acd8:	4480      	add	r8, r0
 800acda:	9904      	ldr	r1, [sp, #16]
 800acdc:	f8d8 2000 	ldr.w	r2, [r8]
 800ace0:	f361 020f 	bfi	r2, r1, #0, #16
 800ace4:	f8c8 2000 	str.w	r2, [r8]
 800ace8:	9900      	ldr	r1, [sp, #0]
 800acea:	f8dd 8010 	ldr.w	r8, [sp, #16]
 800acee:	7f0a      	ldrb	r2, [r1, #28]
 800acf0:	2a04      	cmp	r2, #4
 800acf2:	d107      	bne.n	800ad04 <??llhwc_set_conn_evnt_param_4>
 800acf4:	8bc9      	ldrh	r1, [r1, #30]
 800acf6:	2902      	cmp	r1, #2
 800acf8:	d1cb      	bne.n	800ac92 <??llhwc_set_conn_evnt_param_3>
 800acfa:	4440      	add	r0, r8
 800acfc:	6801      	ldr	r1, [r0, #0]
 800acfe:	f021 6100 	bic.w	r1, r1, #134217728	; 0x8000000

0800ad02 <??llhwc_set_conn_evnt_param_5>:
 800ad02:	6001      	str	r1, [r0, #0]

0800ad04 <??llhwc_set_conn_evnt_param_4>:
 800ad04:	9802      	ldr	r0, [sp, #8]
 800ad06:	b9a8      	cbnz	r0, 800ad34 <??llhwc_set_conn_evnt_param_8>
 800ad08:	f8d4 b000 	ldr.w	fp, [r4]
 800ad0c:	f8df 0bf8 	ldr.w	r0, [pc, #3064]	; 800b908 <??DataTable46>
 800ad10:	2204      	movs	r2, #4
 800ad12:	4483      	add	fp, r0
 800ad14:	f8df 0bf4 	ldr.w	r0, [pc, #3060]	; 800b90c <??DataTable46_1>
 800ad18:	2100      	movs	r1, #0
 800ad1a:	4458      	add	r0, fp
 800ad1c:	f003 ff65 	bl	800ebea <ble_memset>
 800ad20:	f8df 0be8 	ldr.w	r0, [pc, #3048]	; 800b90c <??DataTable46_1>
 800ad24:	4482      	add	sl, r0
 800ad26:	f8da 1000 	ldr.w	r1, [sl]
 800ad2a:	f36b 010f 	bfi	r1, fp, #0, #16
 800ad2e:	f8ca 1000 	str.w	r1, [sl]
 800ad32:	46da      	mov	sl, fp

0800ad34 <??llhwc_set_conn_evnt_param_8>:
 800ad34:	9800      	ldr	r0, [sp, #0]
 800ad36:	6941      	ldr	r1, [r0, #20]
 800ad38:	f851 0029 	ldr.w	r0, [r1, r9, lsl #2]
 800ad3c:	7802      	ldrb	r2, [r0, #0]
 800ad3e:	f002 0203 	and.w	r2, r2, #3
 800ad42:	2a03      	cmp	r2, #3
 800ad44:	d109      	bne.n	800ad5a <??llhwc_set_conn_evnt_param_9>
 800ad46:	7901      	ldrb	r1, [r0, #4]
 800ad48:	2902      	cmp	r1, #2
 800ad4a:	bf18      	it	ne
 800ad4c:	2922      	cmpne	r1, #34	; 0x22
 800ad4e:	d104      	bne.n	800ad5a <??llhwc_set_conn_evnt_param_9>
 800ad50:	9a03      	ldr	r2, [sp, #12]
 800ad52:	f8df 1bb4 	ldr.w	r1, [pc, #2996]	; 800b908 <??DataTable46>
 800ad56:	1808      	adds	r0, r1, r0
 800ad58:	6250      	str	r0, [r2, #36]	; 0x24

0800ad5a <??llhwc_set_conn_evnt_param_9>:
 800ad5a:	9805      	ldr	r0, [sp, #20]
 800ad5c:	7881      	ldrb	r1, [r0, #2]
 800ad5e:	2901      	cmp	r1, #1
 800ad60:	d10c      	bne.n	800ad7c <??llhwc_set_conn_evnt_param_10>
 800ad62:	f8df 1bac 	ldr.w	r1, [pc, #2988]	; 800b910 <??DataTable46_2>
 800ad66:	4441      	add	r1, r8
 800ad68:	6808      	ldr	r0, [r1, #0]
 800ad6a:	0400      	lsls	r0, r0, #16
 800ad6c:	0e00      	lsrs	r0, r0, #24
 800ad6e:	d005      	beq.n	800ad7c <??llhwc_set_conn_evnt_param_10>
 800ad70:	b926      	cbnz	r6, 800ad7c <??llhwc_set_conn_evnt_param_10>
 800ad72:	680a      	ldr	r2, [r1, #0]
 800ad74:	1d00      	adds	r0, r0, #4
 800ad76:	f360 220f 	bfi	r2, r0, #8, #8
 800ad7a:	600a      	str	r2, [r1, #0]

0800ad7c <??llhwc_set_conn_evnt_param_10>:
 800ad7c:	f109 0901 	add.w	r9, r9, #1

0800ad80 <??llhwc_set_conn_evnt_param_2>:
 800ad80:	9800      	ldr	r0, [sp, #0]
 800ad82:	9a08      	ldr	r2, [sp, #32]
 800ad84:	7c81      	ldrb	r1, [r0, #18]
 800ad86:	1a89      	subs	r1, r1, r2
 800ad88:	4589      	cmp	r9, r1
 800ad8a:	f080 8094 	bcs.w	800aeb6 <??llhwc_set_conn_evnt_param_11>
 800ad8e:	9802      	ldr	r0, [sp, #8]
 800ad90:	b978      	cbnz	r0, 800adb2 <??llhwc_set_conn_evnt_param_12>
 800ad92:	f8df 1b80 	ldr.w	r1, [pc, #2944]	; 800b914 <??DataTable46_3>
 800ad96:	b92c      	cbnz	r4, 800ada4 <??llhwc_set_conn_evnt_param_13>
 800ad98:	f008 fbb4 	bl	8013504 <allocate_data_packet>
 800ad9c:	4604      	mov	r4, r0
 800ad9e:	9803      	ldr	r0, [sp, #12]
 800ada0:	6184      	str	r4, [r0, #24]
 800ada2:	e003      	b.n	800adac <??llhwc_set_conn_evnt_param_14>

0800ada4 <??llhwc_set_conn_evnt_param_13>:
 800ada4:	4620      	mov	r0, r4
 800ada6:	f008 fbad 	bl	8013504 <allocate_data_packet>
 800adaa:	4604      	mov	r4, r0

0800adac <??llhwc_set_conn_evnt_param_14>:
 800adac:	b90c      	cbnz	r4, 800adb2 <??llhwc_set_conn_evnt_param_12>
 800adae:	2001      	movs	r0, #1
 800adb0:	9002      	str	r0, [sp, #8]

0800adb2 <??llhwc_set_conn_evnt_param_12>:
 800adb2:	f1b9 0f00 	cmp.w	r9, #0
 800adb6:	d166      	bne.n	800ae86 <??llhwc_set_conn_evnt_param_15>
 800adb8:	9802      	ldr	r0, [sp, #8]
 800adba:	b148      	cbz	r0, 800add0 <??llhwc_set_conn_evnt_param_16>
 800adbc:	69e8      	ldr	r0, [r5, #28]
 800adbe:	2100      	movs	r1, #0
 800adc0:	f040 407f 	orr.w	r0, r0, #4278190080	; 0xff000000
 800adc4:	f440 007f 	orr.w	r0, r0, #16711680	; 0xff0000
 800adc8:	61e8      	str	r0, [r5, #28]
 800adca:	9803      	ldr	r0, [sp, #12]
 800adcc:	6181      	str	r1, [r0, #24]
 800adce:	e00f      	b.n	800adf0 <??llhwc_set_conn_evnt_param_17>

0800add0 <??llhwc_set_conn_evnt_param_16>:
 800add0:	6820      	ldr	r0, [r4, #0]
 800add2:	69eb      	ldr	r3, [r5, #28]
 800add4:	2204      	movs	r2, #4
 800add6:	1f00      	subs	r0, r0, #4
 800add8:	f360 431f 	bfi	r3, r0, #16, #16
 800addc:	61eb      	str	r3, [r5, #28]
 800adde:	8960      	ldrh	r0, [r4, #10]
 800ade0:	2100      	movs	r1, #0
 800ade2:	eb00 4013 	add.w	r0, r0, r3, lsr #16
 800ade6:	f8df 3b24 	ldr.w	r3, [pc, #2852]	; 800b90c <??DataTable46_1>
 800adea:	1818      	adds	r0, r3, r0
 800adec:	f003 fefd 	bl	800ebea <ble_memset>

0800adf0 <??llhwc_set_conn_evnt_param_17>:
 800adf0:	9800      	ldr	r0, [sp, #0]
 800adf2:	6941      	ldr	r1, [r0, #20]
 800adf4:	f8df 08c4 	ldr.w	r0, [pc, #2244]	; 800b6bc <??DataTable45_4>
 800adf8:	6809      	ldr	r1, [r1, #0]
 800adfa:	4281      	cmp	r1, r0
 800adfc:	d107      	bne.n	800ae0e <??llhwc_set_conn_evnt_param_18>
 800adfe:	69e9      	ldr	r1, [r5, #28]
 800ae00:	f44f 4002 	mov.w	r0, #33280	; 0x8200
 800ae04:	1c7f      	adds	r7, r7, #1
 800ae06:	f360 010f 	bfi	r1, r0, #0, #16
 800ae0a:	61e9      	str	r1, [r5, #28]
 800ae0c:	e01b      	b.n	800ae46 <??llhwc_set_conn_evnt_param_19>

0800ae0e <??llhwc_set_conn_evnt_param_18>:
 800ae0e:	69e8      	ldr	r0, [r5, #28]
 800ae10:	2204      	movs	r2, #4
 800ae12:	1f09      	subs	r1, r1, #4
 800ae14:	f361 000f 	bfi	r0, r1, #0, #16
 800ae18:	2100      	movs	r1, #0
 800ae1a:	61e8      	str	r0, [r5, #28]
 800ae1c:	f8df 8aec 	ldr.w	r8, [pc, #2796]	; 800b90c <??DataTable46_1>
 800ae20:	b280      	uxth	r0, r0
 800ae22:	4440      	add	r0, r8
 800ae24:	6806      	ldr	r6, [r0, #0]
 800ae26:	f003 fee0 	bl	800ebea <ble_memset>
 800ae2a:	69e8      	ldr	r0, [r5, #28]
 800ae2c:	0eb6      	lsrs	r6, r6, #26
 800ae2e:	f006 0601 	and.w	r6, r6, #1
 800ae32:	b280      	uxth	r0, r0
 800ae34:	4480      	add	r8, r0
 800ae36:	f8d8 1000 	ldr.w	r1, [r8]
 800ae3a:	f021 6180 	bic.w	r1, r1, #67108864	; 0x4000000
 800ae3e:	ea41 6186 	orr.w	r1, r1, r6, lsl #26
 800ae42:	f8c8 1000 	str.w	r1, [r8]

0800ae46 <??llhwc_set_conn_evnt_param_19>:
 800ae46:	9800      	ldr	r0, [sp, #0]
 800ae48:	f8d5 a01c 	ldr.w	sl, [r5, #28]
 800ae4c:	7f01      	ldrb	r1, [r0, #28]
 800ae4e:	fa1f f88a 	uxth.w	r8, sl
 800ae52:	ea4f 4a1a 	mov.w	sl, sl, lsr #16
 800ae56:	2904      	cmp	r1, #4
 800ae58:	f47f af6c 	bne.w	800ad34 <??llhwc_set_conn_evnt_param_8>
 800ae5c:	8bc0      	ldrh	r0, [r0, #30]
 800ae5e:	2802      	cmp	r0, #2
 800ae60:	d107      	bne.n	800ae72 <??llhwc_set_conn_evnt_param_20>
 800ae62:	f8df 0aa8 	ldr.w	r0, [pc, #2728]	; 800b90c <??DataTable46_1>
 800ae66:	4440      	add	r0, r8
 800ae68:	6801      	ldr	r1, [r0, #0]
 800ae6a:	f021 6100 	bic.w	r1, r1, #134217728	; 0x8000000

0800ae6e <??llhwc_set_conn_evnt_param_21>:
 800ae6e:	6001      	str	r1, [r0, #0]
 800ae70:	e760      	b.n	800ad34 <??llhwc_set_conn_evnt_param_8>

0800ae72 <??llhwc_set_conn_evnt_param_20>:
 800ae72:	2801      	cmp	r0, #1
 800ae74:	f47f af5e 	bne.w	800ad34 <??llhwc_set_conn_evnt_param_8>
 800ae78:	f8df 0a90 	ldr.w	r0, [pc, #2704]	; 800b90c <??DataTable46_1>
 800ae7c:	4440      	add	r0, r8
 800ae7e:	6801      	ldr	r1, [r0, #0]
 800ae80:	f041 6100 	orr.w	r1, r1, #134217728	; 0x8000000
 800ae84:	e7f3      	b.n	800ae6e <??llhwc_set_conn_evnt_param_21>

0800ae86 <??llhwc_set_conn_evnt_param_15>:
 800ae86:	b2f8      	uxtb	r0, r7
 800ae88:	2802      	cmp	r0, #2
 800ae8a:	f6bf af3b 	bge.w	800ad04 <??llhwc_set_conn_evnt_param_4>
 800ae8e:	9800      	ldr	r0, [sp, #0]
 800ae90:	f8df 2828 	ldr.w	r2, [pc, #2088]	; 800b6bc <??DataTable45_4>
 800ae94:	6941      	ldr	r1, [r0, #20]
 800ae96:	f851 0029 	ldr.w	r0, [r1, r9, lsl #2]
 800ae9a:	4290      	cmp	r0, r2
 800ae9c:	f47f af00 	bne.w	800aca0 <??llhwc_set_conn_evnt_param_6>
 800aea0:	1c7f      	adds	r7, r7, #1
 800aea2:	b2f8      	uxtb	r0, r7
 800aea4:	2801      	cmp	r0, #1
 800aea6:	bf19      	ittee	ne
 800aea8:	f248 2208 	movwne	r2, #33288	; 0x8208
 800aeac:	9204      	strne	r2, [sp, #16]
 800aeae:	f44f 4102 	moveq.w	r1, #33280	; 0x8200
 800aeb2:	9104      	streq	r1, [sp, #16]
 800aeb4:	e70e      	b.n	800acd4 <??llhwc_set_conn_evnt_param_7>

0800aeb6 <??llhwc_set_conn_evnt_param_11>:
 800aeb6:	e9d0 2302 	ldrd	r2, r3, [r0, #8]
 800aeba:	9905      	ldr	r1, [sp, #20]
 800aebc:	2b00      	cmp	r3, #0
 800aebe:	bf08      	it	eq
 800aec0:	f5b2 7f80 	cmpeq.w	r2, #256	; 0x100
 800aec4:	d13d      	bne.n	800af42 <??llhwc_set_conn_evnt_param_22>
 800aec6:	b2fc      	uxtb	r4, r7
 800aec8:	2c02      	cmp	r4, #2
 800aeca:	da2a      	bge.n	800af22 <??llhwc_set_conn_evnt_param_23>
 800aecc:	6944      	ldr	r4, [r0, #20]
 800aece:	f8df e7ec 	ldr.w	lr, [pc, #2028]	; 800b6bc <??DataTable45_4>
 800aed2:	f854 c029 	ldr.w	ip, [r4, r9, lsl #2]
 800aed6:	45f4      	cmp	ip, lr
 800aed8:	bf07      	ittee	eq
 800aeda:	1c7f      	addeq	r7, r7, #1
 800aedc:	f248 2c08 	movweq	ip, #33288	; 0x8208
 800aee0:	f8df 4a24 	ldrne.w	r4, [pc, #2596]	; 800b908 <??DataTable46>
 800aee4:	44a4      	addne	ip, r4
 800aee6:	f8df 4a24 	ldr.w	r4, [pc, #2596]	; 800b90c <??DataTable46_1>
 800aeea:	44a0      	add	r8, r4
 800aeec:	f8d8 e000 	ldr.w	lr, [r8]
 800aef0:	f36c 0e0f 	bfi	lr, ip, #0, #16
 800aef4:	f8c8 e000 	str.w	lr, [r8]
 800aef8:	46e0      	mov	r8, ip
 800aefa:	f890 c01c 	ldrb.w	ip, [r0, #28]
 800aefe:	f1bc 0f04 	cmp.w	ip, #4
 800af02:	d10e      	bne.n	800af22 <??llhwc_set_conn_evnt_param_23>
 800af04:	8bc0      	ldrh	r0, [r0, #30]
 800af06:	2802      	cmp	r0, #2
 800af08:	d104      	bne.n	800af14 <??llhwc_set_conn_evnt_param_24>
 800af0a:	4444      	add	r4, r8
 800af0c:	6820      	ldr	r0, [r4, #0]
 800af0e:	f020 6000 	bic.w	r0, r0, #134217728	; 0x8000000
 800af12:	e005      	b.n	800af20 <??llhwc_set_conn_evnt_param_25>

0800af14 <??llhwc_set_conn_evnt_param_24>:
 800af14:	2801      	cmp	r0, #1
 800af16:	d104      	bne.n	800af22 <??llhwc_set_conn_evnt_param_23>
 800af18:	4444      	add	r4, r8
 800af1a:	6820      	ldr	r0, [r4, #0]
 800af1c:	f040 6000 	orr.w	r0, r0, #134217728	; 0x8000000

0800af20 <??llhwc_set_conn_evnt_param_25>:
 800af20:	6020      	str	r0, [r4, #0]

0800af22 <??llhwc_set_conn_evnt_param_23>:
 800af22:	7888      	ldrb	r0, [r1, #2]
 800af24:	2801      	cmp	r0, #1
 800af26:	d10c      	bne.n	800af42 <??llhwc_set_conn_evnt_param_22>
 800af28:	f8df 49e4 	ldr.w	r4, [pc, #2532]	; 800b910 <??DataTable46_2>
 800af2c:	4444      	add	r4, r8
 800af2e:	6820      	ldr	r0, [r4, #0]
 800af30:	0400      	lsls	r0, r0, #16
 800af32:	0e00      	lsrs	r0, r0, #24
 800af34:	d005      	beq.n	800af42 <??llhwc_set_conn_evnt_param_22>
 800af36:	b926      	cbnz	r6, 800af42 <??llhwc_set_conn_evnt_param_22>
 800af38:	6826      	ldr	r6, [r4, #0]
 800af3a:	1d00      	adds	r0, r0, #4
 800af3c:	f360 260f 	bfi	r6, r0, #8, #8
 800af40:	6026      	str	r6, [r4, #0]

0800af42 <??llhwc_set_conn_evnt_param_22>:
 800af42:	b2f8      	uxtb	r0, r7
 800af44:	b128      	cbz	r0, 800af52 <??llhwc_set_conn_evnt_param_26>
 800af46:	b2ff      	uxtb	r7, r7
 800af48:	2f01      	cmp	r7, #1
 800af4a:	d10d      	bne.n	800af68 <??llhwc_set_conn_evnt_param_27>
 800af4c:	f1b9 0f00 	cmp.w	r9, #0
 800af50:	d00a      	beq.n	800af68 <??llhwc_set_conn_evnt_param_27>

0800af52 <??llhwc_set_conn_evnt_param_26>:
 800af52:	f8df 09b8 	ldr.w	r0, [pc, #2488]	; 800b90c <??DataTable46_1>
 800af56:	4480      	add	r8, r0
 800af58:	f8d8 4000 	ldr.w	r4, [r8]
 800af5c:	f444 447f 	orr.w	r4, r4, #65280	; 0xff00
 800af60:	f044 04ff 	orr.w	r4, r4, #255	; 0xff
 800af64:	f8c8 4000 	str.w	r4, [r8]

0800af68 <??llhwc_set_conn_evnt_param_27>:
 800af68:	7888      	ldrb	r0, [r1, #2]
 800af6a:	2801      	cmp	r0, #1
 800af6c:	d105      	bne.n	800af7a <??llhwc_set_conn_evnt_param_28>
 800af6e:	68e8      	ldr	r0, [r5, #12]
 800af70:	0e01      	lsrs	r1, r0, #24
 800af72:	1d09      	adds	r1, r1, #4
 800af74:	f361 601f 	bfi	r0, r1, #24, #8
 800af78:	60e8      	str	r0, [r5, #12]

0800af7a <??llhwc_set_conn_evnt_param_28>:
 800af7a:	f64f 71ff 	movw	r1, #65535	; 0xffff
 800af7e:	458a      	cmp	sl, r1
 800af80:	d007      	beq.n	800af92 <??llhwc_set_conn_evnt_param_29>
 800af82:	f8df 0988 	ldr.w	r0, [pc, #2440]	; 800b90c <??DataTable46_1>
 800af86:	4482      	add	sl, r0
 800af88:	f8da 4000 	ldr.w	r4, [sl]
 800af8c:	4321      	orrs	r1, r4
 800af8e:	f8ca 1000 	str.w	r1, [sl]

0800af92 <??llhwc_set_conn_evnt_param_29>:
 800af92:	6828      	ldr	r0, [r5, #0]
 800af94:	498d      	ldr	r1, [pc, #564]	; (800b1cc <??DataTable44_1>)
 800af96:	f369 601c 	bfi	r0, r9, #24, #5
 800af9a:	6028      	str	r0, [r5, #0]
 800af9c:	e9c1 2308 	strd	r2, r3, [r1, #32]
 800afa0:	2230      	movs	r2, #48	; 0x30
 800afa2:	4629      	mov	r1, r5
 800afa4:	f8df 0c84 	ldr.w	r0, [pc, #3204]	; 800bc2c <??DataTable57>
 800afa8:	f003 fdce 	bl	800eb48 <ble_memcpy>
 800afac:	4886      	ldr	r0, [pc, #536]	; (800b1c8 <??DataTable44>)
 800afae:	6802      	ldr	r2, [r0, #0]
 800afb0:	f248 2110 	movw	r1, #33296	; 0x8210
 800afb4:	f361 020f 	bfi	r2, r1, #0, #16
 800afb8:	6002      	str	r2, [r0, #0]
 800afba:	201d      	movs	r0, #29
 800afbc:	f7f5 f936 	bl	800022c <bsp_debug_gpio_clear>
 800afc0:	2000      	movs	r0, #0
 800afc2:	e582      	b.n	800aaca <?Subroutine3>

0800afc4 <llhwc_conn_evnt_en_encry>:
 800afc4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800afc6:	460f      	mov	r7, r1
 800afc8:	4605      	mov	r5, r0
 800afca:	7ebe      	ldrb	r6, [r7, #26]
 800afcc:	68e8      	ldr	r0, [r5, #12]
 800afce:	f8df 4c60 	ldr.w	r4, [pc, #3168]	; 800bc30 <??DataTable57_1>
 800afd2:	0236      	lsls	r6, r6, #8
 800afd4:	ea46 6610 	orr.w	r6, r6, r0, lsr #24
 800afd8:	e9d7 0102 	ldrd	r0, r1, [r7, #8]
 800afdc:	2900      	cmp	r1, #0
 800afde:	bf08      	it	eq
 800afe0:	2880      	cmpeq	r0, #128	; 0x80
 800afe2:	d107      	bne.n	800aff4 <??llhwc_conn_evnt_en_encry_0>
 800afe4:	69e0      	ldr	r0, [r4, #28]
 800afe6:	f040 0080 	orr.w	r0, r0, #128	; 0x80
 800afea:	61e0      	str	r0, [r4, #28]
 800afec:	6a20      	ldr	r0, [r4, #32]
 800afee:	f420 4000 	bic.w	r0, r0, #32768	; 0x8000
 800aff2:	e006      	b.n	800b002 <??llhwc_conn_evnt_en_encry_1>

0800aff4 <??llhwc_conn_evnt_en_encry_0>:
 800aff4:	69e0      	ldr	r0, [r4, #28]
 800aff6:	f020 0080 	bic.w	r0, r0, #128	; 0x80
 800affa:	61e0      	str	r0, [r4, #28]
 800affc:	6a20      	ldr	r0, [r4, #32]
 800affe:	f440 4000 	orr.w	r0, r0, #32768	; 0x8000

0800b002 <??llhwc_conn_evnt_en_encry_1>:
 800b002:	6220      	str	r0, [r4, #32]
 800b004:	2210      	movs	r2, #16
 800b006:	f105 0110 	add.w	r1, r5, #16
 800b00a:	4620      	mov	r0, r4
 800b00c:	f003 fd9c 	bl	800eb48 <ble_memcpy>
 800b010:	68a9      	ldr	r1, [r5, #8]
 800b012:	7e38      	ldrb	r0, [r7, #24]
 800b014:	1841      	adds	r1, r0, r1
 800b016:	61a1      	str	r1, [r4, #24]
 800b018:	7e79      	ldrb	r1, [r7, #25]
 800b01a:	69e0      	ldr	r0, [r4, #28]
 800b01c:	f361 0006 	bfi	r0, r1, #0, #7
 800b020:	61e0      	str	r0, [r4, #28]
 800b022:	68e9      	ldr	r1, [r5, #12]
 800b024:	f000 00ff 	and.w	r0, r0, #255	; 0xff
 800b028:	ea40 2001 	orr.w	r0, r0, r1, lsl #8
 800b02c:	f8df 1680 	ldr.w	r1, [pc, #1664]	; 800b6b0 <??DataTable45_1>
 800b030:	61e0      	str	r0, [r4, #28]
 800b032:	6a20      	ldr	r0, [r4, #32]
 800b034:	f366 000e 	bfi	r0, r6, #0, #15
 800b038:	6220      	str	r0, [r4, #32]
 800b03a:	6828      	ldr	r0, [r5, #0]
 800b03c:	6120      	str	r0, [r4, #16]
 800b03e:	6868      	ldr	r0, [r5, #4]
 800b040:	6160      	str	r0, [r4, #20]
 800b042:	f8df 0670 	ldr.w	r0, [pc, #1648]	; 800b6b4 <??DataTable45_2>
 800b046:	69cb      	ldr	r3, [r1, #28]
 800b048:	6802      	ldr	r2, [r0, #0]
 800b04a:	f363 421f 	bfi	r2, r3, #16, #16
 800b04e:	6002      	str	r2, [r0, #0]
 800b050:	69c9      	ldr	r1, [r1, #28]
 800b052:	0c12      	lsrs	r2, r2, #16
 800b054:	0412      	lsls	r2, r2, #16
 800b056:	ea42 4211 	orr.w	r2, r2, r1, lsr #16
 800b05a:	6a61      	ldr	r1, [r4, #36]	; 0x24
 800b05c:	6002      	str	r2, [r0, #0]
 800b05e:	2004      	movs	r0, #4
 800b060:	f360 611c 	bfi	r1, r0, #24, #5
 800b064:	6261      	str	r1, [r4, #36]	; 0x24
 800b066:	6a21      	ldr	r1, [r4, #32]
 800b068:	f8df 0c28 	ldr.w	r0, [pc, #3112]	; 800bc94 <??DataTable58>
 800b06c:	4001      	ands	r1, r0
 800b06e:	6a60      	ldr	r0, [r4, #36]	; 0x24
 800b070:	f441 3180 	orr.w	r1, r1, #65536	; 0x10000
 800b074:	6221      	str	r1, [r4, #32]
 800b076:	f000 407f 	and.w	r0, r0, #4278190080	; 0xff000000
 800b07a:	f440 3080 	orr.w	r0, r0, #65536	; 0x10000
 800b07e:	6260      	str	r0, [r4, #36]	; 0x24
 800b080:	f8df 0c14 	ldr.w	r0, [pc, #3092]	; 800bc98 <??DataTable58_1>
 800b084:	6801      	ldr	r1, [r0, #0]
 800b086:	f8df 4c14 	ldr.w	r4, [pc, #3092]	; 800bc9c <??DataTable58_2>
 800b08a:	0849      	lsrs	r1, r1, #1
 800b08c:	0049      	lsls	r1, r1, #1
 800b08e:	6001      	str	r1, [r0, #0]
 800b090:	6982      	ldr	r2, [r0, #24]
 800b092:	2101      	movs	r1, #1
 800b094:	f361 0202 	bfi	r2, r1, #0, #3
 800b098:	6182      	str	r2, [r0, #24]
 800b09a:	6803      	ldr	r3, [r0, #0]
 800b09c:	f023 0318 	bic.w	r3, r3, #24
 800b0a0:	6003      	str	r3, [r0, #0]
 800b0a2:	6820      	ldr	r0, [r4, #0]
 800b0a4:	f361 0045 	bfi	r0, r1, #1, #5
 800b0a8:	6020      	str	r0, [r4, #0]
 800b0aa:	2003      	movs	r0, #3
 800b0ac:	f001 fcd9 	bl	800ca62 <llhwc_cmn_crypto_aes_start>
 800b0b0:	6f60      	ldr	r0, [r4, #116]	; 0x74
 800b0b2:	f040 0008 	orr.w	r0, r0, #8
 800b0b6:	6760      	str	r0, [r4, #116]	; 0x74
 800b0b8:	bdf1      	pop	{r0, r4, r5, r6, r7, pc}
	...

0800b0bc <??DataTable43>:
 800b0bc:	07f8 2000                                   ... 

0800b0c0 <??DataTable43_1>:
 800b0c0:	6e98 8312                                   .n..

0800b0c4 <llhwc_adv_done>:
 800b0c4:	204a      	movs	r0, #74	; 0x4a
 800b0c6:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800b0ca:	f8df 45e4 	ldr.w	r4, [pc, #1508]	; 800b6b0 <??DataTable45_1>
 800b0ce:	69e1      	ldr	r1, [r4, #28]
 800b0d0:	f8df 7838 	ldr.w	r7, [pc, #2104]	; 800b90c <??DataTable46_1>
 800b0d4:	2500      	movs	r5, #0
 800b0d6:	eb07 4711 	add.w	r7, r7, r1, lsr #16
 800b0da:	f7f5 f8a5 	bl	8000228 <bsp_debug_gpio_set>
 800b0de:	69e0      	ldr	r0, [r4, #28]
 800b0e0:	f8df 182c 	ldr.w	r1, [pc, #2092]	; 800b910 <??DataTable46_2>
 800b0e4:	eb01 4110 	add.w	r1, r1, r0, lsr #16
 800b0e8:	f8df 0bb4 	ldr.w	r0, [pc, #2996]	; 800bca0 <??DataTable58_3>
 800b0ec:	680e      	ldr	r6, [r1, #0]
 800b0ee:	f7fa f893 	bl	8005218 <os_mem_pool_alloc>
 800b0f2:	4604      	mov	r4, r0
 800b0f4:	6838      	ldr	r0, [r7, #0]
 800b0f6:	f006 060f 	and.w	r6, r6, #15
 800b0fa:	f3c0 6001 	ubfx	r0, r0, #24, #2
 800b0fe:	2802      	cmp	r0, #2
 800b100:	d103      	bne.n	800b10a <??llhwc_adv_done_0>
 800b102:	2e05      	cmp	r6, #5
 800b104:	bf14      	ite	ne
 800b106:	2e03      	cmpne	r6, #3
 800b108:	2501      	moveq	r5, #1

0800b10a <??llhwc_adv_done_0>:
 800b10a:	4e30      	ldr	r6, [pc, #192]	; (800b1cc <??DataTable44_1>)
 800b10c:	b924      	cbnz	r4, 800b118 <??llhwc_adv_done_1>
 800b10e:	2000      	movs	r0, #0
 800b110:	f886 0033 	strb.w	r0, [r6, #51]	; 0x33
 800b114:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0800b118 <??llhwc_adv_done_1>:
 800b118:	6ab0      	ldr	r0, [r6, #40]	; 0x28
 800b11a:	2100      	movs	r1, #0
 800b11c:	4f2c      	ldr	r7, [pc, #176]	; (800b1d0 <??DataTable44_2>)
 800b11e:	61a0      	str	r0, [r4, #24]
 800b120:	62b1      	str	r1, [r6, #40]	; 0x28
 800b122:	683a      	ldr	r2, [r7, #0]
 800b124:	2001      	movs	r0, #1
 800b126:	2301      	movs	r3, #1
 800b128:	f002 021f 	and.w	r2, r2, #31
 800b12c:	4090      	lsls	r0, r2
 800b12e:	17c1      	asrs	r1, r0, #31
 800b130:	e9c4 0104 	strd	r0, r1, [r4, #16]
 800b134:	f884 5020 	strb.w	r5, [r4, #32]
 800b138:	f104 0021 	add.w	r0, r4, #33	; 0x21
 800b13c:	2100      	movs	r1, #0
 800b13e:	7001      	strb	r1, [r0, #0]
 800b140:	60a1      	str	r1, [r4, #8]
 800b142:	70c3      	strb	r3, [r0, #3]
 800b144:	f8df 8b5c 	ldr.w	r8, [pc, #2908]	; 800bca4 <??DataTable58_4>
 800b148:	f898 1032 	ldrb.w	r1, [r8, #50]	; 0x32
 800b14c:	2d00      	cmp	r5, #0
 800b14e:	7301      	strb	r1, [r0, #12]
 800b150:	f106 0144 	add.w	r1, r6, #68	; 0x44
 800b154:	6808      	ldr	r0, [r1, #0]
 800b156:	bf14      	ite	ne
 800b158:	6048      	strne	r0, [r1, #4]
 800b15a:	f008 fa01 	bleq	8013560 <free_buff_hdr>
 800b15e:	68f8      	ldr	r0, [r7, #12]
 800b160:	f8df 5d0c 	ldr.w	r5, [pc, #3340]	; 800be70 <??DataTable63>
 800b164:	69ea      	ldr	r2, [r5, #28]
 800b166:	f3c0 0142 	ubfx	r1, r0, #1, #3
 800b16a:	f8d8 0018 	ldr.w	r0, [r8, #24]
 800b16e:	f8d8 3010 	ldr.w	r3, [r8, #16]
 800b172:	4283      	cmp	r3, r0
 800b174:	bf39      	ittee	cc
 800b176:	1a12      	subcc	r2, r2, r0
 800b178:	189a      	addcc	r2, r3, r2
 800b17a:	189a      	addcs	r2, r3, r2
 800b17c:	1a12      	subcs	r2, r2, r0
 800b17e:	4620      	mov	r0, r4
 800b180:	f7fd fa55 	bl	800862e <llhwc_evnt_done>
 800b184:	6828      	ldr	r0, [r5, #0]
 800b186:	f040 0002 	orr.w	r0, r0, #2
 800b18a:	6028      	str	r0, [r5, #0]
 800b18c:	6829      	ldr	r1, [r5, #0]
 800b18e:	2000      	movs	r0, #0
 800b190:	f021 0102 	bic.w	r1, r1, #2
 800b194:	6029      	str	r1, [r5, #0]
 800b196:	4621      	mov	r1, r4
 800b198:	f7f5 f8a1 	bl	80002de <emngr_post_event>
 800b19c:	b2c0      	uxtb	r0, r0
 800b19e:	284d      	cmp	r0, #77	; 0x4d
 800b1a0:	d105      	bne.n	800b1ae <??llhwc_adv_done_2>
 800b1a2:	2000      	movs	r0, #0
 800b1a4:	f7f5 f814 	bl	80001d0 <bsp_assert>
 800b1a8:	4620      	mov	r0, r4
 800b1aa:	f7fa f837 	bl	800521c <os_mem_pool_free>

0800b1ae <??llhwc_adv_done_2>:
 800b1ae:	2001      	movs	r0, #1
 800b1b0:	f001 fa98 	bl	800c6e4 <llhwc_pwr_switch>
 800b1b4:	7e30      	ldrb	r0, [r6, #24]
 800b1b6:	6f39      	ldr	r1, [r7, #112]	; 0x70
 800b1b8:	f360 0182 	bfi	r1, r0, #2, #1
 800b1bc:	6739      	str	r1, [r7, #112]	; 0x70
 800b1be:	204a      	movs	r0, #74	; 0x4a
 800b1c0:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 800b1c4:	f7f5 b832 	b.w	800022c <bsp_debug_gpio_clear>

0800b1c8 <??DataTable44>:
 800b1c8:	0408 4802                                   ...H

0800b1cc <??DataTable44_1>:
 800b1cc:	0718 2000                                   ... 

0800b1d0 <??DataTable44_2>:
 800b1d0:	080c 4802                                   ...H

0800b1d4 <??DataTable44_3>:
 800b1d4:	0000 b7fe                                   ....

0800b1d8 <??DataTable44_4>:
 800b1d8:	08a4 2000                                   ... 

0800b1dc <llhwc_scan_done>:
 800b1dc:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800b1e0:	f8df 6ac0 	ldr.w	r6, [pc, #2752]	; 800bca4 <??DataTable58_4>
 800b1e4:	6a31      	ldr	r1, [r6, #32]
 800b1e6:	b08c      	sub	sp, #48	; 0x30
 800b1e8:	2200      	movs	r2, #0
 800b1ea:	9106      	str	r1, [sp, #24]
 800b1ec:	f8df 7d00 	ldr.w	r7, [pc, #3328]	; 800bef0 <??DataTable64>
 800b1f0:	f88d 2000 	strb.w	r2, [sp]
 800b1f4:	f107 0130 	add.w	r1, r7, #48	; 0x30
 800b1f8:	698a      	ldr	r2, [r1, #24]
 800b1fa:	f896 1032 	ldrb.w	r1, [r6, #50]	; 0x32
 800b1fe:	f8df 5cf4 	ldr.w	r5, [pc, #3316]	; 800bef4 <??DataTable64_1>
 800b202:	9203      	str	r2, [sp, #12]
 800b204:	7e3a      	ldrb	r2, [r7, #24]
 800b206:	f88d 1008 	strb.w	r1, [sp, #8]
 800b20a:	2100      	movs	r1, #0
 800b20c:	f88d 2007 	strb.w	r2, [sp, #7]
 800b210:	f88d 1006 	strb.w	r1, [sp, #6]
 800b214:	f003 fb2c 	bl	800e870 <llhwc_phy_activate_scan_req>
 800b218:	204b      	movs	r0, #75	; 0x4b
 800b21a:	f7f5 f805 	bl	8000228 <bsp_debug_gpio_set>
 800b21e:	f8df 0a80 	ldr.w	r0, [pc, #2688]	; 800bca0 <??DataTable58_3>
 800b222:	f7f9 fff9 	bl	8005218 <os_mem_pool_alloc>
 800b226:	4680      	mov	r8, r0
 800b228:	f8df 0c48 	ldr.w	r0, [pc, #3144]	; 800be74 <??DataTable63_1>
 800b22c:	6880      	ldr	r0, [r0, #8]
 800b22e:	4642      	mov	r2, r8
 800b230:	f10d 0106 	add.w	r1, sp, #6
 800b234:	0c00      	lsrs	r0, r0, #16
 800b236:	f000 fd37 	bl	800bca8 <llhwc_calc_num_rx_pkts>
 800b23a:	4604      	mov	r4, r0
 800b23c:	68e8      	ldr	r0, [r5, #12]
 800b23e:	f8df 1c30 	ldr.w	r1, [pc, #3120]	; 800be70 <??DataTable63>
 800b242:	69c9      	ldr	r1, [r1, #28]
 800b244:	f3c0 0942 	ubfx	r9, r0, #1, #3
 800b248:	69b0      	ldr	r0, [r6, #24]
 800b24a:	6932      	ldr	r2, [r6, #16]
 800b24c:	4282      	cmp	r2, r0
 800b24e:	bf39      	ittee	cc
 800b250:	1a09      	subcc	r1, r1, r0
 800b252:	1851      	addcc	r1, r2, r1
 800b254:	1851      	addcs	r1, r2, r1
 800b256:	1a09      	subcs	r1, r1, r0
 800b258:	9107      	str	r1, [sp, #28]
 800b25a:	b1c4      	cbz	r4, 800b28e <??llhwc_scan_done_0>
 800b25c:	f8df 0450 	ldr.w	r0, [pc, #1104]	; 800b6b0 <??DataTable45_1>
 800b260:	69c1      	ldr	r1, [r0, #28]
 800b262:	f8df 26ac 	ldr.w	r2, [pc, #1708]	; 800b910 <??DataTable46_2>
 800b266:	2c01      	cmp	r4, #1
 800b268:	eb02 4011 	add.w	r0, r2, r1, lsr #16
 800b26c:	6803      	ldr	r3, [r0, #0]
 800b26e:	f003 030f 	and.w	r3, r3, #15
 800b272:	f88d 3000 	strb.w	r3, [sp]
 800b276:	dd0a      	ble.n	800b28e <??llhwc_scan_done_0>
 800b278:	f8df 0690 	ldr.w	r0, [pc, #1680]	; 800b90c <??DataTable46_1>
 800b27c:	eb00 4111 	add.w	r1, r0, r1, lsr #16
 800b280:	6808      	ldr	r0, [r1, #0]
 800b282:	b280      	uxth	r0, r0
 800b284:	5811      	ldr	r1, [r2, r0]
 800b286:	f001 010f 	and.w	r1, r1, #15
 800b28a:	f88d 1002 	strb.w	r1, [sp, #2]

0800b28e <??llhwc_scan_done_0>:
 800b28e:	6828      	ldr	r0, [r5, #0]
 800b290:	f04f 0a01 	mov.w	sl, #1
 800b294:	f000 001f 	and.w	r0, r0, #31
 800b298:	fa0a fa00 	lsl.w	sl, sl, r0
 800b29c:	6ea8      	ldr	r0, [r5, #104]	; 0x68
 800b29e:	ea4f 7bea 	mov.w	fp, sl, asr #31
 800b2a2:	f3c0 1040 	ubfx	r0, r0, #5, #1
 800b2a6:	f88d 0005 	strb.w	r0, [sp, #5]
 800b2aa:	6ea8      	ldr	r0, [r5, #104]	; 0x68
 800b2ac:	0a40      	lsrs	r0, r0, #9
 800b2ae:	f000 0001 	and.w	r0, r0, #1
 800b2b2:	f88d 0004 	strb.w	r0, [sp, #4]
 800b2b6:	68e8      	ldr	r0, [r5, #12]
 800b2b8:	f1b8 0f00 	cmp.w	r8, #0
 800b2bc:	f3c0 0042 	ubfx	r0, r0, #1, #3
 800b2c0:	f88d 0003 	strb.w	r0, [sp, #3]
 800b2c4:	d104      	bne.n	800b2d0 <??llhwc_scan_done_1>
 800b2c6:	2400      	movs	r4, #0
 800b2c8:	f107 0130 	add.w	r1, r7, #48	; 0x30
 800b2cc:	70cc      	strb	r4, [r1, #3]
 800b2ce:	e016      	b.n	800b2fe <??llhwc_scan_done_2>

0800b2d0 <??llhwc_scan_done_1>:
 800b2d0:	6ab8      	ldr	r0, [r7, #40]	; 0x28
 800b2d2:	2c01      	cmp	r4, #1
 800b2d4:	f8c8 0018 	str.w	r0, [r8, #24]
 800b2d8:	dd07      	ble.n	800b2ea <??llhwc_scan_done_3>
 800b2da:	f89d 0002 	ldrb.w	r0, [sp, #2]
 800b2de:	2807      	cmp	r0, #7
 800b2e0:	d103      	bne.n	800b2ea <??llhwc_scan_done_3>
 800b2e2:	f89d 0000 	ldrb.w	r0, [sp]
 800b2e6:	2807      	cmp	r0, #7
 800b2e8:	d108      	bne.n	800b2fc <??llhwc_scan_done_4>

0800b2ea <??llhwc_scan_done_3>:
 800b2ea:	f107 0130 	add.w	r1, r7, #48	; 0x30
 800b2ee:	7848      	ldrb	r0, [r1, #1]
 800b2f0:	b928      	cbnz	r0, 800b2fe <??llhwc_scan_done_2>
 800b2f2:	b124      	cbz	r4, 800b2fe <??llhwc_scan_done_2>
 800b2f4:	f89d 0000 	ldrb.w	r0, [sp]
 800b2f8:	2807      	cmp	r0, #7
 800b2fa:	d100      	bne.n	800b2fe <??llhwc_scan_done_2>

0800b2fc <??llhwc_scan_done_4>:
 800b2fc:	2400      	movs	r4, #0

0800b2fe <??llhwc_scan_done_2>:
 800b2fe:	7eb8      	ldrb	r0, [r7, #26]
 800b300:	2800      	cmp	r0, #0
 800b302:	bf08      	it	eq
 800b304:	f1b9 0f01 	cmpeq.w	r9, #1
 800b308:	d166      	bne.n	800b3d8 <??llhwc_scan_done_5>
 800b30a:	b10c      	cbz	r4, 800b310 <??llhwc_scan_done_6>
 800b30c:	2400      	movs	r4, #0
 800b30e:	46a1      	mov	r9, r4

0800b310 <??llhwc_scan_done_6>:
 800b310:	e9cd ab08 	strd	sl, fp, [sp, #32]

0800b314 <??llhwc_scan_done_7>:
 800b314:	e9d7 0108 	ldrd	r0, r1, [r7, #32]
 800b318:	2900      	cmp	r1, #0
 800b31a:	bf08      	it	eq
 800b31c:	2810      	cmpeq	r0, #16
 800b31e:	d120      	bne.n	800b362 <??llhwc_scan_done_8>
 800b320:	7838      	ldrb	r0, [r7, #0]
 800b322:	78bb      	ldrb	r3, [r7, #2]
 800b324:	f8df 2388 	ldr.w	r2, [pc, #904]	; 800b6b0 <??DataTable45_1>
 800b328:	69d1      	ldr	r1, [r2, #28]
 800b32a:	787a      	ldrb	r2, [r7, #1]
 800b32c:	ea40 2002 	orr.w	r0, r0, r2, lsl #8
 800b330:	78fa      	ldrb	r2, [r7, #3]
 800b332:	b289      	uxth	r1, r1
 800b334:	ea40 4003 	orr.w	r0, r0, r3, lsl #16
 800b338:	1d09      	adds	r1, r1, #4
 800b33a:	ea40 6002 	orr.w	r0, r0, r2, lsl #24
 800b33e:	61e8      	str	r0, [r5, #28]
 800b340:	69a8      	ldr	r0, [r5, #24]
 800b342:	793a      	ldrb	r2, [r7, #4]
 800b344:	797b      	ldrb	r3, [r7, #5]
 800b346:	0c00      	lsrs	r0, r0, #16
 800b348:	ea42 2203 	orr.w	r2, r2, r3, lsl #8
 800b34c:	ea42 4000 	orr.w	r0, r2, r0, lsl #16
 800b350:	61a8      	str	r0, [r5, #24]
 800b352:	f8df 05b8 	ldr.w	r0, [pc, #1464]	; 800b90c <??DataTable46_1>
 800b356:	1841      	adds	r1, r0, r1
 800b358:	68b8      	ldr	r0, [r7, #8]
 800b35a:	680a      	ldr	r2, [r1, #0]
 800b35c:	f360 1286 	bfi	r2, r0, #6, #1
 800b360:	600a      	str	r2, [r1, #0]

0800b362 <??llhwc_scan_done_8>:
 800b362:	b36c      	cbz	r4, 800b3c0 <??llhwc_scan_done_9>
 800b364:	9803      	ldr	r0, [sp, #12]
 800b366:	6802      	ldr	r2, [r0, #0]
 800b368:	f8df 35a4 	ldr.w	r3, [pc, #1444]	; 800b910 <??DataTable46_2>
 800b36c:	8941      	ldrh	r1, [r0, #10]
 800b36e:	f8df 0be8 	ldr.w	r0, [pc, #3048]	; 800bf58 <??DataTable65>
 800b372:	188a      	adds	r2, r1, r2
 800b374:	1882      	adds	r2, r0, r2
 800b376:	f8df 1594 	ldr.w	r1, [pc, #1428]	; 800b90c <??DataTable46_1>
 800b37a:	5888      	ldr	r0, [r1, r2]
 800b37c:	f853 e002 	ldr.w	lr, [r3, r2]
 800b380:	f01a 0f30 	tst.w	sl, #48	; 0x30
 800b384:	f3c0 1180 	ubfx	r1, r0, #6, #1
 800b388:	f8cd e028 	str.w	lr, [sp, #40]	; 0x28
 800b38c:	f8df 0bcc 	ldr.w	r0, [pc, #3020]	; 800bf5c <??DataTable65_1>
 800b390:	5880      	ldr	r0, [r0, r2]
 800b392:	b280      	uxth	r0, r0
 800b394:	900b      	str	r0, [sp, #44]	; 0x2c
 800b396:	d013      	beq.n	800b3c0 <??llhwc_scan_done_9>
 800b398:	2c01      	cmp	r4, #1
 800b39a:	d111      	bne.n	800b3c0 <??llhwc_scan_done_9>
 800b39c:	000a      	movs	r2, r1
 800b39e:	d00f      	beq.n	800b3c0 <??llhwc_scan_done_9>
 800b3a0:	f3c0 3081 	ubfx	r0, r0, #14, #2
 800b3a4:	2801      	cmp	r0, #1
 800b3a6:	d10b      	bne.n	800b3c0 <??llhwc_scan_done_9>
 800b3a8:	f10d 0301 	add.w	r3, sp, #1
 800b3ac:	aa0a      	add	r2, sp, #40	; 0x28
 800b3ae:	2003      	movs	r0, #3
 800b3b0:	f7fe f876 	bl	80094a0 <llhwc_lst_search>
 800b3b4:	f89d 0001 	ldrb.w	r0, [sp, #1]
 800b3b8:	07c1      	lsls	r1, r0, #31
 800b3ba:	bf44      	itt	mi
 800b3bc:	2001      	movmi	r0, #1
 800b3be:	7678      	strbmi	r0, [r7, #25]

0800b3c0 <??llhwc_scan_done_9>:
 800b3c0:	a804      	add	r0, sp, #16
 800b3c2:	f000 fe6a 	bl	800c09a <llhwc_slptmr_get>
 800b3c6:	9806      	ldr	r0, [sp, #24]
 800b3c8:	9904      	ldr	r1, [sp, #16]
 800b3ca:	4288      	cmp	r0, r1
 800b3cc:	bf39      	ittee	cc
 800b3ce:	1a08      	subcc	r0, r1, r0
 800b3d0:	3012      	addcc	r0, #18
 800b3d2:	1a08      	subcs	r0, r1, r0
 800b3d4:	3011      	addcs	r0, #17
 800b3d6:	e01b      	b.n	800b410 <??llhwc_scan_done_10>

0800b3d8 <??llhwc_scan_done_5>:
 800b3d8:	f1b9 0f00 	cmp.w	r9, #0
 800b3dc:	d198      	bne.n	800b310 <??llhwc_scan_done_6>
 800b3de:	2c00      	cmp	r4, #0
 800b3e0:	d096      	beq.n	800b310 <??llhwc_scan_done_6>
 800b3e2:	f107 0130 	add.w	r1, r7, #48	; 0x30
 800b3e6:	7848      	ldrb	r0, [r1, #1]
 800b3e8:	b128      	cbz	r0, 800b3f6 <??llhwc_scan_done_11>
 800b3ea:	f897 0030 	ldrb.w	r0, [r7, #48]	; 0x30
 800b3ee:	2824      	cmp	r0, #36	; 0x24
 800b3f0:	bfd8      	it	le
 800b3f2:	2201      	movle	r2, #1
 800b3f4:	dd00      	ble.n	800b3f8 <??llhwc_scan_done_12>

0800b3f6 <??llhwc_scan_done_11>:
 800b3f6:	2200      	movs	r2, #0

0800b3f8 <??llhwc_scan_done_12>:
 800b3f8:	f89d 0000 	ldrb.w	r0, [sp]
 800b3fc:	b2e1      	uxtb	r1, r4
 800b3fe:	f7f7 fd3f 	bl	8002e80 <evnt_schdlr_backoff_prcdr>
 800b402:	e9cd 0108 	strd	r0, r1, [sp, #32]
 800b406:	2902      	cmp	r1, #2
 800b408:	bf08      	it	eq
 800b40a:	2800      	cmpeq	r0, #0
 800b40c:	d182      	bne.n	800b314 <??llhwc_scan_done_7>
 800b40e:	e77f      	b.n	800b310 <??llhwc_scan_done_6>

0800b410 <??llhwc_scan_done_10>:
 800b410:	6979      	ldr	r1, [r7, #20]
 800b412:	1a0a      	subs	r2, r1, r0
 800b414:	9206      	str	r2, [sp, #24]
 800b416:	bf24      	itt	cs
 800b418:	9806      	ldrcs	r0, [sp, #24]
 800b41a:	2812      	cmpcs	r0, #18
 800b41c:	d305      	bcc.n	800b42a <??llhwc_scan_done_13>
 800b41e:	f1b9 0f01 	cmp.w	r9, #1
 800b422:	bf1c      	itt	ne
 800b424:	7e78      	ldrbne	r0, [r7, #25]
 800b426:	2801      	cmpne	r0, #1
 800b428:	d11d      	bne.n	800b466 <??llhwc_scan_done_14>

0800b42a <??llhwc_scan_done_13>:
 800b42a:	2100      	movs	r1, #0
 800b42c:	7679      	strb	r1, [r7, #25]
 800b42e:	f04f 0901 	mov.w	r9, #1
 800b432:	6271      	str	r1, [r6, #36]	; 0x24

0800b434 <??llhwc_scan_done_15>:
 800b434:	f1b8 0f00 	cmp.w	r8, #0
 800b438:	d02e      	beq.n	800b498 <??llhwc_scan_done_16>
 800b43a:	f108 0021 	add.w	r0, r8, #33	; 0x21
 800b43e:	2100      	movs	r1, #0
 800b440:	f880 9003 	strb.w	r9, [r0, #3]
 800b444:	7101      	strb	r1, [r0, #4]
 800b446:	f89d 2005 	ldrb.w	r2, [sp, #5]
 800b44a:	7202      	strb	r2, [r0, #8]
 800b44c:	f89d 1004 	ldrb.w	r1, [sp, #4]
 800b450:	7141      	strb	r1, [r0, #5]
 800b452:	e9c8 ab04 	strd	sl, fp, [r8, #16]
 800b456:	f888 4020 	strb.w	r4, [r8, #32]
 800b45a:	2100      	movs	r1, #0
 800b45c:	7001      	strb	r1, [r0, #0]
 800b45e:	2c00      	cmp	r4, #0
 800b460:	bf18      	it	ne
 800b462:	9903      	ldrne	r1, [sp, #12]
 800b464:	e00d      	b.n	800b482 <??llhwc_scan_done_17>

0800b466 <??llhwc_scan_done_14>:
 800b466:	2001      	movs	r0, #1
 800b468:	f04f 0900 	mov.w	r9, #0
 800b46c:	6270      	str	r0, [r6, #36]	; 0x24
 800b46e:	2c00      	cmp	r4, #0
 800b470:	d1e0      	bne.n	800b434 <??llhwc_scan_done_15>
 800b472:	f1b8 0f00 	cmp.w	r8, #0
 800b476:	f000 80e4 	beq.w	800b642 <??llhwc_scan_done_18>
 800b47a:	4640      	mov	r0, r8
 800b47c:	f7f9 fece 	bl	800521c <os_mem_pool_free>
 800b480:	e0db      	b.n	800b63a <??llhwc_scan_done_19>

0800b482 <??llhwc_scan_done_17>:
 800b482:	f8c8 1008 	str.w	r1, [r8, #8]
 800b486:	f89d 1008 	ldrb.w	r1, [sp, #8]
 800b48a:	7301      	strb	r1, [r0, #12]
 800b48c:	9a07      	ldr	r2, [sp, #28]
 800b48e:	f89d 1003 	ldrb.w	r1, [sp, #3]
 800b492:	4640      	mov	r0, r8
 800b494:	f7fd f8cb 	bl	800862e <llhwc_evnt_done>

0800b498 <??llhwc_scan_done_16>:
 800b498:	4641      	mov	r1, r8
 800b49a:	2000      	movs	r0, #0
 800b49c:	f7f4 ff1f 	bl	80002de <emngr_post_event>
 800b4a0:	b2c0      	uxtb	r0, r0
 800b4a2:	284d      	cmp	r0, #77	; 0x4d
 800b4a4:	d10c      	bne.n	800b4c0 <??llhwc_scan_done_20>
 800b4a6:	2000      	movs	r0, #0
 800b4a8:	f7f4 fe92 	bl	80001d0 <bsp_assert>
 800b4ac:	2000      	movs	r0, #0
 800b4ae:	2400      	movs	r4, #0
 800b4b0:	6270      	str	r0, [r6, #36]	; 0x24
 800b4b2:	f1b8 0f00 	cmp.w	r8, #0
 800b4b6:	d009      	beq.n	800b4cc <??llhwc_scan_done_21>
 800b4b8:	4640      	mov	r0, r8
 800b4ba:	f7f9 feaf 	bl	800521c <os_mem_pool_free>
 800b4be:	e005      	b.n	800b4cc <??llhwc_scan_done_21>

0800b4c0 <??llhwc_scan_done_20>:
 800b4c0:	f1b9 0f00 	cmp.w	r9, #0
 800b4c4:	d016      	beq.n	800b4f4 <??llhwc_scan_done_22>
 800b4c6:	2c01      	cmp	r4, #1
 800b4c8:	f300 80b7 	bgt.w	800b63a <??llhwc_scan_done_19>

0800b4cc <??llhwc_scan_done_21>:
 800b4cc:	f1bb 0f00 	cmp.w	fp, #0
 800b4d0:	bf08      	it	eq
 800b4d2:	f1ba 0f10 	cmpeq.w	sl, #16
 800b4d6:	d106      	bne.n	800b4e6 <??llhwc_scan_done_23>
 800b4d8:	9803      	ldr	r0, [sp, #12]
 800b4da:	6840      	ldr	r0, [r0, #4]
 800b4dc:	f008 f840 	bl	8013560 <free_buff_hdr>
 800b4e0:	9903      	ldr	r1, [sp, #12]
 800b4e2:	2000      	movs	r0, #0
 800b4e4:	6048      	str	r0, [r1, #4]

0800b4e6 <??llhwc_scan_done_23>:
 800b4e6:	2c00      	cmp	r4, #0
 800b4e8:	f040 80a7 	bne.w	800b63a <??llhwc_scan_done_19>
 800b4ec:	9803      	ldr	r0, [sp, #12]
 800b4ee:	f008 f837 	bl	8013560 <free_buff_hdr>
 800b4f2:	e0a2      	b.n	800b63a <??llhwc_scan_done_19>

0800b4f4 <??llhwc_scan_done_22>:
 800b4f4:	2c00      	cmp	r4, #0
 800b4f6:	f000 80a0 	beq.w	800b63a <??llhwc_scan_done_19>
 800b4fa:	2c01      	cmp	r4, #1
 800b4fc:	dc0d      	bgt.n	800b51a <??llhwc_scan_done_24>
 800b4fe:	f1bb 0f00 	cmp.w	fp, #0
 800b502:	bf08      	it	eq
 800b504:	f1ba 0f10 	cmpeq.w	sl, #16
 800b508:	d107      	bne.n	800b51a <??llhwc_scan_done_24>
 800b50a:	4c6d      	ldr	r4, [pc, #436]	; (800b6c0 <??DataTable45_5>)
 800b50c:	69a0      	ldr	r0, [r4, #24]
 800b50e:	6840      	ldr	r0, [r0, #4]
 800b510:	f008 f826 	bl	8013560 <free_buff_hdr>
 800b514:	69a1      	ldr	r1, [r4, #24]
 800b516:	2000      	movs	r0, #0
 800b518:	6048      	str	r0, [r1, #4]

0800b51a <??llhwc_scan_done_24>:
 800b51a:	f8df 13f8 	ldr.w	r1, [pc, #1016]	; 800b914 <??DataTable46_3>
 800b51e:	2000      	movs	r0, #0
 800b520:	4c67      	ldr	r4, [pc, #412]	; (800b6c0 <??DataTable45_5>)
 800b522:	f007 ffef 	bl	8013504 <allocate_data_packet>
 800b526:	61a0      	str	r0, [r4, #24]
 800b528:	bb28      	cbnz	r0, 800b576 <??llhwc_scan_done_25>
 800b52a:	2001      	movs	r0, #1
 800b52c:	f108 0121 	add.w	r1, r8, #33	; 0x21
 800b530:	70c8      	strb	r0, [r1, #3]
 800b532:	2200      	movs	r2, #0
 800b534:	6272      	str	r2, [r6, #36]	; 0x24

0800b536 <??llhwc_scan_done_26>:
 800b536:	f89d 0007 	ldrb.w	r0, [sp, #7]
 800b53a:	6f29      	ldr	r1, [r5, #112]	; 0x70
 800b53c:	f360 0182 	bfi	r1, r0, #2, #1
 800b540:	6729      	str	r1, [r5, #112]	; 0x70

0800b542 <??llhwc_scan_done_27>:
 800b542:	6a70      	ldr	r0, [r6, #36]	; 0x24
 800b544:	2800      	cmp	r0, #0
 800b546:	bf02      	ittt	eq
 800b548:	f107 0130 	addeq.w	r1, r7, #48	; 0x30
 800b54c:	78c8      	ldrbeq	r0, [r1, #3]
 800b54e:	2800      	cmpeq	r0, #0
 800b550:	d10c      	bne.n	800b56c <??llhwc_scan_done_28>
 800b552:	f8df 091c 	ldr.w	r0, [pc, #2332]	; 800be70 <??DataTable63>
 800b556:	6801      	ldr	r1, [r0, #0]
 800b558:	f041 0102 	orr.w	r1, r1, #2
 800b55c:	6001      	str	r1, [r0, #0]
 800b55e:	6802      	ldr	r2, [r0, #0]
 800b560:	f022 0202 	bic.w	r2, r2, #2
 800b564:	6002      	str	r2, [r0, #0]
 800b566:	2001      	movs	r0, #1
 800b568:	f001 f8bc 	bl	800c6e4 <llhwc_pwr_switch>

0800b56c <??llhwc_scan_done_28>:
 800b56c:	204b      	movs	r0, #75	; 0x4b
 800b56e:	f7f4 fe5d 	bl	800022c <bsp_debug_gpio_clear>
 800b572:	f7fe b888 	b.w	8009686 <?Subroutine0>

0800b576 <??llhwc_scan_done_25>:
 800b576:	2118      	movs	r1, #24
 800b578:	8141      	strh	r1, [r0, #10]
 800b57a:	6804      	ldr	r4, [r0, #0]
 800b57c:	f8df 0a9c 	ldr.w	r0, [pc, #2716]	; 800c01c <??DataTable71>
 800b580:	f8df a388 	ldr.w	sl, [pc, #904]	; 800b90c <??DataTable46_1>
 800b584:	1904      	adds	r4, r0, r4
 800b586:	2204      	movs	r2, #4
 800b588:	2100      	movs	r1, #0
 800b58a:	eb0a 0004 	add.w	r0, sl, r4
 800b58e:	f003 fb2c 	bl	800ebea <ble_memset>
 800b592:	f8df 911c 	ldr.w	r9, [pc, #284]	; 800b6b0 <??DataTable45_1>
 800b596:	f8d9 001c 	ldr.w	r0, [r9, #28]
 800b59a:	f364 401f 	bfi	r0, r4, #16, #16
 800b59e:	f8c9 001c 	str.w	r0, [r9, #28]
 800b5a2:	f8df 08d0 	ldr.w	r0, [pc, #2256]	; 800be74 <??DataTable63_1>
 800b5a6:	6881      	ldr	r1, [r0, #8]
 800b5a8:	f364 411f 	bfi	r1, r4, #16, #16
 800b5ac:	6081      	str	r1, [r0, #8]
 800b5ae:	e9dd 0108 	ldrd	r0, r1, [sp, #32]
 800b5b2:	2900      	cmp	r1, #0
 800b5b4:	bf08      	it	eq
 800b5b6:	2810      	cmpeq	r0, #16
 800b5b8:	d138      	bne.n	800b62c <??llhwc_scan_done_29>
 800b5ba:	f107 0b30 	add.w	fp, r7, #48	; 0x30
 800b5be:	f8db 0018 	ldr.w	r0, [fp, #24]
 800b5c2:	49d4      	ldr	r1, [pc, #848]	; (800b914 <??DataTable46_3>)
 800b5c4:	f007 ff9e 	bl	8013504 <allocate_data_packet>
 800b5c8:	0004      	movs	r4, r0
 800b5ca:	d10c      	bne.n	800b5e6 <??llhwc_scan_done_30>
 800b5cc:	f8db 0018 	ldr.w	r0, [fp, #24]
 800b5d0:	f007 ffc6 	bl	8013560 <free_buff_hdr>
 800b5d4:	2000      	movs	r0, #0
 800b5d6:	f8cb 0018 	str.w	r0, [fp, #24]
 800b5da:	2101      	movs	r1, #1
 800b5dc:	f108 0221 	add.w	r2, r8, #33	; 0x21
 800b5e0:	70d1      	strb	r1, [r2, #3]
 800b5e2:	6270      	str	r0, [r6, #36]	; 0x24
 800b5e4:	e7a7      	b.n	800b536 <??llhwc_scan_done_26>

0800b5e6 <??llhwc_scan_done_30>:
 800b5e6:	2118      	movs	r1, #24
 800b5e8:	8161      	strh	r1, [r4, #10]
 800b5ea:	f8d4 8000 	ldr.w	r8, [r4]
 800b5ee:	f8df 0a2c 	ldr.w	r0, [pc, #2604]	; 800c01c <??DataTable71>
 800b5f2:	2204      	movs	r2, #4
 800b5f4:	4480      	add	r8, r0
 800b5f6:	eb0a 0b08 	add.w	fp, sl, r8
 800b5fa:	2100      	movs	r1, #0
 800b5fc:	4658      	mov	r0, fp
 800b5fe:	f003 faf4 	bl	800ebea <ble_memset>
 800b602:	f8d9 001c 	ldr.w	r0, [r9, #28]
 800b606:	eb0a 4a10 	add.w	sl, sl, r0, lsr #16
 800b60a:	f8da 0000 	ldr.w	r0, [sl]
 800b60e:	f368 000f 	bfi	r0, r8, #0, #16
 800b612:	f8ca 0000 	str.w	r0, [sl]
 800b616:	8961      	ldrh	r1, [r4, #10]
 800b618:	8161      	strh	r1, [r4, #10]
 800b61a:	f8db 2000 	ldr.w	r2, [fp]
 800b61e:	f442 427f 	orr.w	r2, r2, #65280	; 0xff00
 800b622:	f042 02ff 	orr.w	r2, r2, #255	; 0xff
 800b626:	f8cb 2000 	str.w	r2, [fp]
 800b62a:	e006      	b.n	800b63a <??llhwc_scan_done_19>

0800b62c <??llhwc_scan_done_29>:
 800b62c:	4454      	add	r4, sl
 800b62e:	6821      	ldr	r1, [r4, #0]
 800b630:	f441 417f 	orr.w	r1, r1, #65280	; 0xff00
 800b634:	f041 01ff 	orr.w	r1, r1, #255	; 0xff
 800b638:	6021      	str	r1, [r4, #0]

0800b63a <??llhwc_scan_done_19>:
 800b63a:	6a70      	ldr	r0, [r6, #36]	; 0x24
 800b63c:	2801      	cmp	r0, #1
 800b63e:	f47f af7a 	bne.w	800b536 <??llhwc_scan_done_26>

0800b642 <??llhwc_scan_done_18>:
 800b642:	e9dd 0108 	ldrd	r0, r1, [sp, #32]
 800b646:	e9c7 0108 	strd	r0, r1, [r7, #32]
 800b64a:	f8df 0824 	ldr.w	r0, [pc, #2084]	; 800be70 <??DataTable63>
 800b64e:	6802      	ldr	r2, [r0, #0]
 800b650:	f042 0202 	orr.w	r2, r2, #2
 800b654:	6002      	str	r2, [r0, #0]
 800b656:	6801      	ldr	r1, [r0, #0]
 800b658:	f021 0102 	bic.w	r1, r1, #2
 800b65c:	6001      	str	r1, [r0, #0]
 800b65e:	682c      	ldr	r4, [r5, #0]
 800b660:	e9dd 0108 	ldrd	r0, r1, [sp, #32]
 800b664:	f7fc ff8c 	bl	8008580 <llhwc_get_sm_mode_from_event_type>
 800b668:	0964      	lsrs	r4, r4, #5
 800b66a:	f000 001f 	and.w	r0, r0, #31
 800b66e:	ea40 1444 	orr.w	r4, r0, r4, lsl #5
 800b672:	f8df 1800 	ldr.w	r1, [pc, #2048]	; 800be74 <??DataTable63_1>
 800b676:	602c      	str	r4, [r5, #0]
 800b678:	9806      	ldr	r0, [sp, #24]
 800b67a:	1e40      	subs	r0, r0, #1
 800b67c:	ebc0 1240 	rsb	r2, r0, r0, lsl #5
 800b680:	eb02 0290 	add.w	r2, r2, r0, lsr #2
 800b684:	480a      	ldr	r0, [pc, #40]	; (800b6b0 <??DataTable45_1>)
 800b686:	600a      	str	r2, [r1, #0]
 800b688:	9b04      	ldr	r3, [sp, #16]
 800b68a:	2200      	movs	r2, #0
 800b68c:	9205      	str	r2, [sp, #20]
 800b68e:	3312      	adds	r3, #18
 800b690:	9304      	str	r3, [sp, #16]
 800b692:	69c2      	ldr	r2, [r0, #28]
 800b694:	6888      	ldr	r0, [r1, #8]
 800b696:	0c12      	lsrs	r2, r2, #16
 800b698:	f362 401f 	bfi	r0, r2, #16, #16
 800b69c:	6088      	str	r0, [r1, #8]
 800b69e:	2200      	movs	r2, #0
 800b6a0:	a904      	add	r1, sp, #16
 800b6a2:	2000      	movs	r0, #0
 800b6a4:	f000 fe52 	bl	800c34c <llhwc_slptmr_set>
 800b6a8:	e74b      	b.n	800b542 <??llhwc_scan_done_27>
	...

0800b6ac <??DataTable45>:
 800b6ac:	1884 2000                                   ... 

0800b6b0 <??DataTable45_1>:
 800b6b0:	07d4 2000                                   ... 

0800b6b4 <??DataTable45_2>:
 800b6b4:	8240 4802                                   @..H

0800b6b8 <??DataTable45_3>:
 800b6b8:	826c 4802                                   l..H

0800b6bc <??DataTable45_4>:
 800b6bc:	8200 4802                                   ...H

0800b6c0 <??DataTable45_5>:
 800b6c0:	0748 2000                                   H.. 

0800b6c4 <??DataTable45_6>:
 800b6c4:	c078 0800                                   x...

0800b6c8 <llhwc_init_done>:
 800b6c8:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800b6cc:	b088      	sub	sp, #32
 800b6ce:	f8df 75d4 	ldr.w	r7, [pc, #1492]	; 800bca4 <??DataTable58_4>
 800b6d2:	6a3e      	ldr	r6, [r7, #32]
 800b6d4:	2100      	movs	r1, #0
 800b6d6:	9103      	str	r1, [sp, #12]
 800b6d8:	2200      	movs	r2, #0
 800b6da:	9202      	str	r2, [sp, #8]
 800b6dc:	9101      	str	r1, [sp, #4]
 800b6de:	f8df 4810 	ldr.w	r4, [pc, #2064]	; 800bef0 <??DataTable64>
 800b6e2:	6ca0      	ldr	r0, [r4, #72]	; 0x48
 800b6e4:	f88d 2001 	strb.w	r2, [sp, #1]
 800b6e8:	f8df a788 	ldr.w	sl, [pc, #1928]	; 800be74 <??DataTable63_1>
 800b6ec:	9004      	str	r0, [sp, #16]
 800b6ee:	204c      	movs	r0, #76	; 0x4c
 800b6f0:	f7f4 fd9a 	bl	8000228 <bsp_debug_gpio_set>
 800b6f4:	f8da 5008 	ldr.w	r5, [sl, #8]
 800b6f8:	f8df 9924 	ldr.w	r9, [pc, #2340]	; 800c020 <??DataTable71_1>
 800b6fc:	f8d9 0000 	ldr.w	r0, [r9]
 800b700:	f8df 176c 	ldr.w	r1, [pc, #1900]	; 800be70 <??DataTable63>
 800b704:	f3c0 0042 	ubfx	r0, r0, #1, #3
 800b708:	9001      	str	r0, [sp, #4]
 800b70a:	69c9      	ldr	r1, [r1, #28]
 800b70c:	69b8      	ldr	r0, [r7, #24]
 800b70e:	693a      	ldr	r2, [r7, #16]
 800b710:	4282      	cmp	r2, r0
 800b712:	bf39      	ittee	cc
 800b714:	1a09      	subcc	r1, r1, r0
 800b716:	1851      	addcc	r1, r2, r1
 800b718:	1851      	addcs	r1, r2, r1
 800b71a:	1a09      	subcs	r1, r1, r0
 800b71c:	9107      	str	r1, [sp, #28]
 800b71e:	f8d9 0000 	ldr.w	r0, [r9]
 800b722:	f8df 1900 	ldr.w	r1, [pc, #2304]	; 800c024 <??DataTable71_2>
 800b726:	f3c0 0042 	ubfx	r0, r0, #1, #3
 800b72a:	f88d 0000 	strb.w	r0, [sp]
 800b72e:	69c8      	ldr	r0, [r1, #28]
 800b730:	4977      	ldr	r1, [pc, #476]	; (800b910 <??DataTable46_2>)
 800b732:	eb01 4110 	add.w	r1, r1, r0, lsr #16
 800b736:	f8df 0568 	ldr.w	r0, [pc, #1384]	; 800bca0 <??DataTable58_3>
 800b73a:	f8d1 b000 	ldr.w	fp, [r1]
 800b73e:	f7f9 fd6b 	bl	8005218 <os_mem_pool_alloc>
 800b742:	ea5f 0800 	movs.w	r8, r0
 800b746:	f00b 0b0f 	and.w	fp, fp, #15
 800b74a:	d104      	bne.n	800b756 <??llhwc_init_done_0>
 800b74c:	2000      	movs	r0, #0
 800b74e:	f104 0131 	add.w	r1, r4, #49	; 0x31
 800b752:	7088      	strb	r0, [r1, #2]
 800b754:	e002      	b.n	800b75c <??llhwc_init_done_1>

0800b756 <??llhwc_init_done_0>:
 800b756:	6aa0      	ldr	r0, [r4, #40]	; 0x28
 800b758:	f8c8 0018 	str.w	r0, [r8, #24]

0800b75c <??llhwc_init_done_1>:
 800b75c:	4642      	mov	r2, r8
 800b75e:	f10d 0101 	add.w	r1, sp, #1
 800b762:	0c28      	lsrs	r0, r5, #16
 800b764:	f000 faa0 	bl	800bca8 <llhwc_calc_num_rx_pkts>
 800b768:	4605      	mov	r5, r0
 800b76a:	a805      	add	r0, sp, #20
 800b76c:	f000 fc95 	bl	800c09a <llhwc_slptmr_get>
 800b770:	9805      	ldr	r0, [sp, #20]
 800b772:	4286      	cmp	r6, r0
 800b774:	bf39      	ittee	cc
 800b776:	1b86      	subcc	r6, r0, r6
 800b778:	3612      	addcc	r6, #18
 800b77a:	1b86      	subcs	r6, r0, r6
 800b77c:	3611      	addcs	r6, #17
 800b77e:	9603      	str	r6, [sp, #12]
 800b780:	6961      	ldr	r1, [r4, #20]
 800b782:	9803      	ldr	r0, [sp, #12]
 800b784:	1a09      	subs	r1, r1, r0
 800b786:	9102      	str	r1, [sp, #8]
 800b788:	f8df 06e4 	ldr.w	r0, [pc, #1764]	; 800be70 <??DataTable63>
 800b78c:	6801      	ldr	r1, [r0, #0]
 800b78e:	f041 0102 	orr.w	r1, r1, #2
 800b792:	6001      	str	r1, [r0, #0]
 800b794:	6802      	ldr	r2, [r0, #0]
 800b796:	f022 0202 	bic.w	r2, r2, #2
 800b79a:	6002      	str	r2, [r0, #0]
 800b79c:	f894 0031 	ldrb.w	r0, [r4, #49]	; 0x31
 800b7a0:	2800      	cmp	r0, #0
 800b7a2:	bf08      	it	eq
 800b7a4:	2d01      	cmpeq	r5, #1
 800b7a6:	d103      	bne.n	800b7b0 <??llhwc_init_done_2>
 800b7a8:	f1bb 0f07 	cmp.w	fp, #7
 800b7ac:	bf08      	it	eq
 800b7ae:	2500      	moveq	r5, #0

0800b7b0 <??llhwc_init_done_2>:
 800b7b0:	7ea0      	ldrb	r0, [r4, #26]
 800b7b2:	2800      	cmp	r0, #0
 800b7b4:	bf04      	itt	eq
 800b7b6:	9801      	ldreq	r0, [sp, #4]
 800b7b8:	2801      	cmpeq	r0, #1
 800b7ba:	d103      	bne.n	800b7c4 <??llhwc_init_done_3>
 800b7bc:	b115      	cbz	r5, 800b7c4 <??llhwc_init_done_3>
 800b7be:	2000      	movs	r0, #0
 800b7c0:	2500      	movs	r5, #0
 800b7c2:	9001      	str	r0, [sp, #4]

0800b7c4 <??llhwc_init_done_3>:
 800b7c4:	6960      	ldr	r0, [r4, #20]
 800b7c6:	9903      	ldr	r1, [sp, #12]
 800b7c8:	4288      	cmp	r0, r1
 800b7ca:	bf24      	itt	cs
 800b7cc:	9802      	ldrcs	r0, [sp, #8]
 800b7ce:	2812      	cmpcs	r0, #18
 800b7d0:	d305      	bcc.n	800b7de <??llhwc_init_done_4>
 800b7d2:	9801      	ldr	r0, [sp, #4]
 800b7d4:	2801      	cmp	r0, #1
 800b7d6:	bf1c      	itt	ne
 800b7d8:	2d01      	cmpne	r5, #1
 800b7da:	2d02      	cmpne	r5, #2
 800b7dc:	d103      	bne.n	800b7e6 <??llhwc_init_done_5>

0800b7de <??llhwc_init_done_4>:
 800b7de:	2000      	movs	r0, #0
 800b7e0:	f04f 0b01 	mov.w	fp, #1
 800b7e4:	e002      	b.n	800b7ec <??llhwc_init_done_6>

0800b7e6 <??llhwc_init_done_5>:
 800b7e6:	f04f 0b00 	mov.w	fp, #0
 800b7ea:	2001      	movs	r0, #1

0800b7ec <??llhwc_init_done_6>:
 800b7ec:	6278      	str	r0, [r7, #36]	; 0x24
 800b7ee:	ea5b 0005 	orrs.w	r0, fp, r5
 800b7f2:	d030      	beq.n	800b856 <??llhwc_init_done_7>
 800b7f4:	f1b8 0f00 	cmp.w	r8, #0
 800b7f8:	d019      	beq.n	800b82e <??llhwc_init_done_8>
 800b7fa:	f108 0221 	add.w	r2, r8, #33	; 0x21
 800b7fe:	2301      	movs	r3, #1
 800b800:	70d3      	strb	r3, [r2, #3]
 800b802:	2040      	movs	r0, #64	; 0x40
 800b804:	2100      	movs	r1, #0
 800b806:	e9c8 0104 	strd	r0, r1, [r8, #16]
 800b80a:	f888 5020 	strb.w	r5, [r8, #32]
 800b80e:	7011      	strb	r1, [r2, #0]
 800b810:	2d00      	cmp	r5, #0
 800b812:	bf0c      	ite	eq
 800b814:	2000      	moveq	r0, #0
 800b816:	9804      	ldrne	r0, [sp, #16]
 800b818:	f8c8 0008 	str.w	r0, [r8, #8]
 800b81c:	f897 0033 	ldrb.w	r0, [r7, #51]	; 0x33
 800b820:	7310      	strb	r0, [r2, #12]
 800b822:	9a07      	ldr	r2, [sp, #28]
 800b824:	f89d 1000 	ldrb.w	r1, [sp]
 800b828:	4640      	mov	r0, r8
 800b82a:	f7fc ff00 	bl	800862e <llhwc_evnt_done>

0800b82e <??llhwc_init_done_8>:
 800b82e:	4641      	mov	r1, r8
 800b830:	2000      	movs	r0, #0
 800b832:	f7f4 fd54 	bl	80002de <emngr_post_event>
 800b836:	b2c0      	uxtb	r0, r0
 800b838:	284d      	cmp	r0, #77	; 0x4d
 800b83a:	d108      	bne.n	800b84e <??llhwc_init_done_9>
 800b83c:	2000      	movs	r0, #0
 800b83e:	f7f4 fcc7 	bl	80001d0 <bsp_assert>
 800b842:	f1b8 0f00 	cmp.w	r8, #0
 800b846:	bf1c      	itt	ne
 800b848:	4640      	movne	r0, r8
 800b84a:	f7f9 fce7 	blne	800521c <os_mem_pool_free>

0800b84e <??llhwc_init_done_9>:
 800b84e:	2001      	movs	r0, #1
 800b850:	f000 ff48 	bl	800c6e4 <llhwc_pwr_switch>
 800b854:	e005      	b.n	800b862 <??llhwc_init_done_10>

0800b856 <??llhwc_init_done_7>:
 800b856:	f1b8 0f00 	cmp.w	r8, #0
 800b85a:	bf1c      	itt	ne
 800b85c:	4640      	movne	r0, r8
 800b85e:	f7f9 fcdd 	blne	800521c <os_mem_pool_free>

0800b862 <??llhwc_init_done_10>:
 800b862:	2d01      	cmp	r5, #1
 800b864:	d811      	bhi.n	800b88a <??llhwc_init_done_11>
 800b866:	f1bb 0f00 	cmp.w	fp, #0
 800b86a:	d00e      	beq.n	800b88a <??llhwc_init_done_11>
 800b86c:	f894 0031 	ldrb.w	r0, [r4, #49]	; 0x31
 800b870:	2801      	cmp	r0, #1
 800b872:	d106      	bne.n	800b882 <??llhwc_init_done_12>
 800b874:	9804      	ldr	r0, [sp, #16]
 800b876:	6840      	ldr	r0, [r0, #4]
 800b878:	f007 fe72 	bl	8013560 <free_buff_hdr>
 800b87c:	9904      	ldr	r1, [sp, #16]
 800b87e:	2000      	movs	r0, #0
 800b880:	6048      	str	r0, [r1, #4]

0800b882 <??llhwc_init_done_12>:
 800b882:	b915      	cbnz	r5, 800b88a <??llhwc_init_done_11>
 800b884:	9804      	ldr	r0, [sp, #16]
 800b886:	f007 fe6b 	bl	8013560 <free_buff_hdr>

0800b88a <??llhwc_init_done_11>:
 800b88a:	6a78      	ldr	r0, [r7, #36]	; 0x24
 800b88c:	2801      	cmp	r0, #1
 800b88e:	d122      	bne.n	800b8d6 <??llhwc_init_done_13>
 800b890:	2240      	movs	r2, #64	; 0x40
 800b892:	2300      	movs	r3, #0
 800b894:	e9c4 2308 	strd	r2, r3, [r4, #32]
 800b898:	9802      	ldr	r0, [sp, #8]
 800b89a:	2200      	movs	r2, #0
 800b89c:	1e40      	subs	r0, r0, #1
 800b89e:	ebc0 1040 	rsb	r0, r0, r0, lsl #5
 800b8a2:	f8ca 0000 	str.w	r0, [sl]
 800b8a6:	9902      	ldr	r1, [sp, #8]
 800b8a8:	1e49      	subs	r1, r1, #1
 800b8aa:	eb00 0091 	add.w	r0, r0, r1, lsr #2
 800b8ae:	f8ca 0000 	str.w	r0, [sl]
 800b8b2:	9905      	ldr	r1, [sp, #20]
 800b8b4:	f8df 076c 	ldr.w	r0, [pc, #1900]	; 800c024 <??DataTable71_2>
 800b8b8:	9206      	str	r2, [sp, #24]
 800b8ba:	3112      	adds	r1, #18
 800b8bc:	9105      	str	r1, [sp, #20]
 800b8be:	69c1      	ldr	r1, [r0, #28]
 800b8c0:	f8da 0008 	ldr.w	r0, [sl, #8]
 800b8c4:	0c09      	lsrs	r1, r1, #16
 800b8c6:	f361 401f 	bfi	r0, r1, #16, #16
 800b8ca:	f8ca 0008 	str.w	r0, [sl, #8]
 800b8ce:	a905      	add	r1, sp, #20
 800b8d0:	2000      	movs	r0, #0
 800b8d2:	f000 fd3b 	bl	800c34c <llhwc_slptmr_set>

0800b8d6 <??llhwc_init_done_13>:
 800b8d6:	6a78      	ldr	r0, [r7, #36]	; 0x24
 800b8d8:	b988      	cbnz	r0, 800b8fe <??llhwc_init_done_14>
 800b8da:	7e20      	ldrb	r0, [r4, #24]
 800b8dc:	f8d9 1064 	ldr.w	r1, [r9, #100]	; 0x64
 800b8e0:	f360 0182 	bfi	r1, r0, #2, #1
 800b8e4:	f8c9 1064 	str.w	r1, [r9, #100]	; 0x64
 800b8e8:	f8df 073c 	ldr.w	r0, [pc, #1852]	; 800c028 <??DataTable71_3>
 800b8ec:	7801      	ldrb	r1, [r0, #0]
 800b8ee:	2901      	cmp	r1, #1
 800b8f0:	d105      	bne.n	800b8fe <??llhwc_init_done_14>
 800b8f2:	f8d9 0028 	ldr.w	r0, [r9, #40]	; 0x28
 800b8f6:	f420 4000 	bic.w	r0, r0, #32768	; 0x8000
 800b8fa:	f8c9 0028 	str.w	r0, [r9, #40]	; 0x28

0800b8fe <??llhwc_init_done_14>:
 800b8fe:	204c      	movs	r0, #76	; 0x4c
 800b900:	f7f4 fc94 	bl	800022c <bsp_debug_gpio_clear>
 800b904:	f7ff b8e1 	b.w	800aaca <?Subroutine3>

0800b908 <??DataTable46>:
 800b908:	fffc b7fd                                   ....

0800b90c <??DataTable46_1>:
 800b90c:	0000 4802                                   ...H

0800b910 <??DataTable46_2>:
 800b910:	0004 4802                                   ...H

0800b914 <??DataTable46_3>:
 800b914:	363c 2000                                   <6. 

0800b918 <llhwc_conn_evnt_done>:
 800b918:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800b91c:	f8df 470c 	ldr.w	r4, [pc, #1804]	; 800c02c <??DataTable71_4>
 800b920:	f8d4 8020 	ldr.w	r8, [r4, #32]
 800b924:	204d      	movs	r0, #77	; 0x4d
 800b926:	f7f4 fc7f 	bl	8000228 <bsp_debug_gpio_set>
 800b92a:	48dd      	ldr	r0, [pc, #884]	; (800bca0 <??DataTable58_3>)
 800b92c:	2700      	movs	r7, #0
 800b92e:	f7f9 fc73 	bl	8005218 <os_mem_pool_alloc>
 800b932:	ea5f 0900 	movs.w	r9, r0
 800b936:	bf14      	ite	ne
 800b938:	2001      	movne	r0, #1
 800b93a:	2000      	moveq	r0, #0
 800b93c:	f7f4 fc48 	bl	80001d0 <bsp_assert>
 800b940:	6820      	ldr	r0, [r4, #0]
 800b942:	f8df 55b0 	ldr.w	r5, [pc, #1456]	; 800bef4 <??DataTable64_1>
 800b946:	4eb9      	ldr	r6, [pc, #740]	; (800bc2c <??DataTable57>)
 800b948:	f8c9 0018 	str.w	r0, [r9, #24]
 800b94c:	6027      	str	r7, [r4, #0]
 800b94e:	f8c9 7008 	str.w	r7, [r9, #8]
 800b952:	682a      	ldr	r2, [r5, #0]
 800b954:	2001      	movs	r0, #1
 800b956:	f002 021f 	and.w	r2, r2, #31
 800b95a:	4090      	lsls	r0, r2
 800b95c:	17c1      	asrs	r1, r0, #31
 800b95e:	e9c9 0104 	strd	r0, r1, [r9, #16]
 800b962:	6a30      	ldr	r0, [r6, #32]
 800b964:	464a      	mov	r2, r9
 800b966:	0ec0      	lsrs	r0, r0, #27
 800b968:	f889 001d 	strb.w	r0, [r9, #29]
 800b96c:	f889 001e 	strb.w	r0, [r9, #30]
 800b970:	69f1      	ldr	r1, [r6, #28]
 800b972:	0c09      	lsrs	r1, r1, #16
 800b974:	9100      	str	r1, [sp, #0]
 800b976:	9800      	ldr	r0, [sp, #0]
 800b978:	f109 012a 	add.w	r1, r9, #42	; 0x2a
 800b97c:	f000 f994 	bl	800bca8 <llhwc_calc_num_rx_pkts>
 800b980:	f889 0020 	strb.w	r0, [r9, #32]
 800b984:	f109 0121 	add.w	r1, r9, #33	; 0x21
 800b988:	72cf      	strb	r7, [r1, #11]
 800b98a:	6ea8      	ldr	r0, [r5, #104]	; 0x68
 800b98c:	09c0      	lsrs	r0, r0, #7
 800b98e:	f000 0001 	and.w	r0, r0, #1
 800b992:	0040      	lsls	r0, r0, #1
 800b994:	72c8      	strb	r0, [r1, #11]
 800b996:	6eaa      	ldr	r2, [r5, #104]	; 0x68
 800b998:	0a12      	lsrs	r2, r2, #8
 800b99a:	f002 0201 	and.w	r2, r2, #1
 800b99e:	4310      	orrs	r0, r2
 800b9a0:	72c8      	strb	r0, [r1, #11]
 800b9a2:	6eaa      	ldr	r2, [r5, #104]	; 0x68
 800b9a4:	0912      	lsrs	r2, r2, #4
 800b9a6:	f002 0201 	and.w	r2, r2, #1
 800b9aa:	ea40 1002 	orr.w	r0, r0, r2, lsl #4
 800b9ae:	f109 0221 	add.w	r2, r9, #33	; 0x21
 800b9b2:	72c8      	strb	r0, [r1, #11]
 800b9b4:	f899 0020 	ldrb.w	r0, [r9, #32]
 800b9b8:	f889 7021 	strb.w	r7, [r9, #33]	; 0x21
 800b9bc:	1e41      	subs	r1, r0, #1
 800b9be:	4189      	sbcs	r1, r1
 800b9c0:	0fc9      	lsrs	r1, r1, #31
 800b9c2:	f889 101f 	strb.w	r1, [r9, #31]
 800b9c6:	7197      	strb	r7, [r2, #6]
 800b9c8:	6a30      	ldr	r0, [r6, #32]
 800b9ca:	f109 0121 	add.w	r1, r9, #33	; 0x21
 800b9ce:	f8df 24a0 	ldr.w	r2, [pc, #1184]	; 800be70 <??DataTable63>
 800b9d2:	0e40      	lsrs	r0, r0, #25
 800b9d4:	f000 0001 	and.w	r0, r0, #1
 800b9d8:	70c8      	strb	r0, [r1, #3]
 800b9da:	6a30      	ldr	r0, [r6, #32]
 800b9dc:	0e00      	lsrs	r0, r0, #24
 800b9de:	f000 0001 	and.w	r0, r0, #1
 800b9e2:	7108      	strb	r0, [r1, #4]
 800b9e4:	6868      	ldr	r0, [r5, #4]
 800b9e6:	f000 003f 	and.w	r0, r0, #63	; 0x3f
 800b9ea:	71c8      	strb	r0, [r1, #7]
 800b9ec:	68e8      	ldr	r0, [r5, #12]
 800b9ee:	69d2      	ldr	r2, [r2, #28]
 800b9f0:	f3c0 0142 	ubfx	r1, r0, #1, #3
 800b9f4:	48ab      	ldr	r0, [pc, #684]	; (800bca4 <??DataTable58_4>)
 800b9f6:	6983      	ldr	r3, [r0, #24]
 800b9f8:	6900      	ldr	r0, [r0, #16]
 800b9fa:	4298      	cmp	r0, r3
 800b9fc:	bf39      	ittee	cc
 800b9fe:	1ad2      	subcc	r2, r2, r3
 800ba00:	1882      	addcc	r2, r0, r2
 800ba02:	1882      	addcs	r2, r0, r2
 800ba04:	1ad2      	subcs	r2, r2, r3
 800ba06:	4648      	mov	r0, r9
 800ba08:	f7fc fe11 	bl	800862e <llhwc_evnt_done>
 800ba0c:	7ae0      	ldrb	r0, [r4, #11]
 800ba0e:	2801      	cmp	r0, #1
 800ba10:	d114      	bne.n	800ba3c <??llhwc_conn_evnt_done_0>
 800ba12:	6ae0      	ldr	r0, [r4, #44]	; 0x2c
 800ba14:	b190      	cbz	r0, 800ba3c <??llhwc_conn_evnt_done_0>
 800ba16:	f8df 160c 	ldr.w	r1, [pc, #1548]	; 800c024 <??DataTable71_2>
 800ba1a:	69cb      	ldr	r3, [r1, #28]
 800ba1c:	f8df 2610 	ldr.w	r2, [pc, #1552]	; 800c030 <??DataTable71_5>
 800ba20:	b299      	uxth	r1, r3
 800ba22:	b29b      	uxth	r3, r3
 800ba24:	18d3      	adds	r3, r2, r3
 800ba26:	e001      	b.n	800ba2c <??llhwc_conn_evnt_done_1>

0800ba28 <??llhwc_conn_evnt_done_2>:
 800ba28:	8819      	ldrh	r1, [r3, #0]
 800ba2a:	1853      	adds	r3, r2, r1

0800ba2c <??llhwc_conn_evnt_done_1>:
 800ba2c:	69f5      	ldr	r5, [r6, #28]
 800ba2e:	b2ad      	uxth	r5, r5
 800ba30:	42a9      	cmp	r1, r5
 800ba32:	d003      	beq.n	800ba3c <??llhwc_conn_evnt_done_0>
 800ba34:	4288      	cmp	r0, r1
 800ba36:	d1f7      	bne.n	800ba28 <??llhwc_conn_evnt_done_2>
 800ba38:	72e7      	strb	r7, [r4, #11]
 800ba3a:	62e7      	str	r7, [r4, #44]	; 0x2c

0800ba3c <??llhwc_conn_evnt_done_0>:
 800ba3c:	6835      	ldr	r5, [r6, #0]
 800ba3e:	f899 b020 	ldrb.w	fp, [r9, #32]
 800ba42:	f899 0021 	ldrb.w	r0, [r9, #33]	; 0x21
 800ba46:	0e2d      	lsrs	r5, r5, #24
 800ba48:	f005 051f 	and.w	r5, r5, #31
 800ba4c:	4483      	add	fp, r0
 800ba4e:	eba5 0a0b 	sub.w	sl, r5, fp
 800ba52:	0028      	movs	r0, r5
 800ba54:	d01a      	beq.n	800ba8c <??llhwc_conn_evnt_done_3>

0800ba56 <??llhwc_conn_evnt_done_4>:
 800ba56:	f1b8 0f00 	cmp.w	r8, #0
 800ba5a:	d014      	beq.n	800ba86 <??llhwc_conn_evnt_done_5>
 800ba5c:	fa5f f08b 	uxtb.w	r0, fp
 800ba60:	b128      	cbz	r0, 800ba6e <??llhwc_conn_evnt_done_6>
 800ba62:	4647      	mov	r7, r8
 800ba64:	f8d8 8004 	ldr.w	r8, [r8, #4]
 800ba68:	f1ab 0b01 	sub.w	fp, fp, #1
 800ba6c:	e009      	b.n	800ba82 <??llhwc_conn_evnt_done_7>

0800ba6e <??llhwc_conn_evnt_done_6>:
 800ba6e:	fa5f f08a 	uxtb.w	r0, sl
 800ba72:	b130      	cbz	r0, 800ba82 <??llhwc_conn_evnt_done_7>
 800ba74:	4640      	mov	r0, r8
 800ba76:	f8d8 8004 	ldr.w	r8, [r8, #4]
 800ba7a:	f007 fd71 	bl	8013560 <free_buff_hdr>
 800ba7e:	f1aa 0a01 	sub.w	sl, sl, #1

0800ba82 <??llhwc_conn_evnt_done_7>:
 800ba82:	1e6d      	subs	r5, r5, #1
 800ba84:	d1e7      	bne.n	800ba56 <??llhwc_conn_evnt_done_4>

0800ba86 <??llhwc_conn_evnt_done_5>:
 800ba86:	b10f      	cbz	r7, 800ba8c <??llhwc_conn_evnt_done_3>
 800ba88:	2000      	movs	r0, #0
 800ba8a:	6078      	str	r0, [r7, #4]

0800ba8c <??llhwc_conn_evnt_done_3>:
 800ba8c:	f899 001d 	ldrb.w	r0, [r9, #29]
 800ba90:	b138      	cbz	r0, 800baa2 <??llhwc_conn_evnt_done_8>
 800ba92:	f899 0020 	ldrb.w	r0, [r9, #32]
 800ba96:	2800      	cmp	r0, #0
 800ba98:	bf04      	itt	eq
 800ba9a:	f899 0021 	ldrbeq.w	r0, [r9, #33]	; 0x21
 800ba9e:	2800      	cmpeq	r0, #0
 800baa0:	d008      	beq.n	800bab4 <??llhwc_conn_evnt_done_9>

0800baa2 <??llhwc_conn_evnt_done_8>:
 800baa2:	6a30      	ldr	r0, [r6, #32]
 800baa4:	f3c0 4040 	ubfx	r0, r0, #17, #1
 800baa8:	b138      	cbz	r0, 800baba <??llhwc_conn_evnt_done_10>
 800baaa:	9800      	ldr	r0, [sp, #0]
 800baac:	f64f 71ff 	movw	r1, #65535	; 0xffff
 800bab0:	4288      	cmp	r0, r1
 800bab2:	d102      	bne.n	800baba <??llhwc_conn_evnt_done_10>

0800bab4 <??llhwc_conn_evnt_done_9>:
 800bab4:	2201      	movs	r2, #1
 800bab6:	f889 2021 	strb.w	r2, [r9, #33]	; 0x21

0800baba <??llhwc_conn_evnt_done_10>:
 800baba:	4649      	mov	r1, r9
 800babc:	2000      	movs	r0, #0
 800babe:	f7f4 fc0e 	bl	80002de <emngr_post_event>
 800bac2:	f000 ffe0 	bl	800ca86 <llhwc_cmn_crypto_aes_done>
 800bac6:	7ae0      	ldrb	r0, [r4, #11]
 800bac8:	b960      	cbnz	r0, 800bae4 <??llhwc_conn_evnt_done_11>
 800baca:	f8df 03a4 	ldr.w	r0, [pc, #932]	; 800be70 <??DataTable63>
 800bace:	6801      	ldr	r1, [r0, #0]
 800bad0:	f041 0102 	orr.w	r1, r1, #2
 800bad4:	6001      	str	r1, [r0, #0]
 800bad6:	6802      	ldr	r2, [r0, #0]
 800bad8:	f022 0202 	bic.w	r2, r2, #2
 800badc:	6002      	str	r2, [r0, #0]
 800bade:	2001      	movs	r0, #1
 800bae0:	f000 fe00 	bl	800c6e4 <llhwc_pwr_switch>

0800bae4 <??llhwc_conn_evnt_done_11>:
 800bae4:	204d      	movs	r0, #77	; 0x4d
 800bae6:	e8bd 4ff2 	ldmia.w	sp!, {r1, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800baea:	f7f4 bb9f 	b.w	800022c <bsp_debug_gpio_clear>

0800baee <llhwc_goto_sleep>:
 800baee:	f8df 0380 	ldr.w	r0, [pc, #896]	; 800be70 <??DataTable63>
 800baf2:	6801      	ldr	r1, [r0, #0]
 800baf4:	f041 0102 	orr.w	r1, r1, #2
 800baf8:	6001      	str	r1, [r0, #0]
 800bafa:	6802      	ldr	r2, [r0, #0]
 800bafc:	f022 0202 	bic.w	r2, r2, #2
 800bb00:	6002      	str	r2, [r0, #0]
 800bb02:	2001      	movs	r0, #1
 800bb04:	f000 bdee 	b.w	800c6e4 <llhwc_pwr_switch>

0800bb08 <llhwc_dtm_done>:
 800bb08:	b580      	push	{r7, lr}
 800bb0a:	f8df 0528 	ldr.w	r0, [pc, #1320]	; 800c034 <??DataTable71_6>
 800bb0e:	6801      	ldr	r1, [r0, #0]
 800bb10:	0849      	lsrs	r1, r1, #1
 800bb12:	0049      	lsls	r1, r1, #1
 800bb14:	6001      	str	r1, [r0, #0]
 800bb16:	6c02      	ldr	r2, [r0, #64]	; 0x40
 800bb18:	f042 0202 	orr.w	r2, r2, #2
 800bb1c:	6402      	str	r2, [r0, #64]	; 0x40
 800bb1e:	6c01      	ldr	r1, [r0, #64]	; 0x40
 800bb20:	f021 0102 	bic.w	r1, r1, #2
 800bb24:	6401      	str	r1, [r0, #64]	; 0x40
 800bb26:	2001      	movs	r0, #1
 800bb28:	f000 fddc 	bl	800c6e4 <llhwc_pwr_switch>
 800bb2c:	f44f 5180 	mov.w	r1, #4096	; 0x1000
 800bb30:	f8df 03bc 	ldr.w	r0, [pc, #956]	; 800bef0 <??DataTable64>
 800bb34:	62c1      	str	r1, [r0, #44]	; 0x2c
 800bb36:	bd01      	pop	{r0, pc}

0800bb38 <llhwc_get_rtl_vrsn>:
 800bb38:	f8df 14f4 	ldr.w	r1, [pc, #1268]	; 800c030 <??DataTable71_5>
 800bb3c:	6809      	ldr	r1, [r1, #0]
 800bb3e:	7001      	strb	r1, [r0, #0]
 800bb40:	0a0a      	lsrs	r2, r1, #8
 800bb42:	0c0b      	lsrs	r3, r1, #16
 800bb44:	0e09      	lsrs	r1, r1, #24
 800bb46:	7042      	strb	r2, [r0, #1]
 800bb48:	7083      	strb	r3, [r0, #2]
 800bb4a:	70c1      	strb	r1, [r0, #3]
 800bb4c:	4770      	bx	lr

0800bb4e <llhwc_get_white_list_size>:
 800bb4e:	210f      	movs	r1, #15
 800bb50:	7001      	strb	r1, [r0, #0]
 800bb52:	4770      	bx	lr

0800bb54 <llhwc_get_periodic_list_size>:
 800bb54:	2105      	movs	r1, #5
 800bb56:	7001      	strb	r1, [r0, #0]
 800bb58:	4770      	bx	lr

0800bb5a <llhwc_get_access_adrs_time>:
 800bb5a:	4602      	mov	r2, r0
 800bb5c:	f20f 5018 	addw	r0, pc, #1304	; 0x518
 800bb60:	4613      	mov	r3, r2
 800bb62:	f830 c013 	ldrh.w	ip, [r0, r3, lsl #1]
 800bb66:	200b      	movs	r0, #11
 800bb68:	2a04      	cmp	r2, #4
 800bb6a:	fb00 c001 	mla	r0, r0, r1, ip
 800bb6e:	d103      	bne.n	800bb78 <??llhwc_get_access_adrs_time_0>
 800bb70:	222b      	movs	r2, #43	; 0x2b
 800bb72:	fb02 0101 	mla	r1, r2, r1, r0
 800bb76:	4608      	mov	r0, r1

0800bb78 <??llhwc_get_access_adrs_time_0>:
 800bb78:	4770      	bx	lr

0800bb7a <llhwc_acttmr_set>:
 800bb7a:	49bd      	ldr	r1, [pc, #756]	; (800be70 <??DataTable63>)
 800bb7c:	694a      	ldr	r2, [r1, #20]
 800bb7e:	f042 0202 	orr.w	r2, r2, #2
 800bb82:	614a      	str	r2, [r1, #20]
 800bb84:	684a      	ldr	r2, [r1, #4]
 800bb86:	f022 0210 	bic.w	r2, r2, #16
 800bb8a:	604a      	str	r2, [r1, #4]
 800bb8c:	680b      	ldr	r3, [r1, #0]
 800bb8e:	f043 0302 	orr.w	r3, r3, #2
 800bb92:	600b      	str	r3, [r1, #0]
 800bb94:	680a      	ldr	r2, [r1, #0]
 800bb96:	f022 0202 	bic.w	r2, r2, #2
 800bb9a:	600a      	str	r2, [r1, #0]
 800bb9c:	698b      	ldr	r3, [r1, #24]
 800bb9e:	6188      	str	r0, [r1, #24]
 800bba0:	6948      	ldr	r0, [r1, #20]
 800bba2:	f020 0002 	bic.w	r0, r0, #2
 800bba6:	6148      	str	r0, [r1, #20]
 800bba8:	4770      	bx	lr

0800bbaa <llhwc_gen_rnd_num>:
 800bbaa:	b580      	push	{r7, lr}
 800bbac:	f7f4 fb26 	bl	80001fc <gen_rnd_num>
 800bbb0:	2000      	movs	r0, #0
 800bbb2:	bd02      	pop	{r1, pc}

0800bbb4 <llhwc_gen_rnd_num_from_slp_tmr>:
 800bbb4:	f8df 1480 	ldr.w	r1, [pc, #1152]	; 800c038 <??DataTable71_7>
 800bbb8:	6809      	ldr	r1, [r1, #0]
 800bbba:	b289      	uxth	r1, r1
 800bbbc:	fb91 f2f0 	sdiv	r2, r1, r0
 800bbc0:	fb00 1012 	mls	r0, r0, r2, r1
 800bbc4:	1c40      	adds	r0, r0, #1
 800bbc6:	b280      	uxth	r0, r0
 800bbc8:	4770      	bx	lr

0800bbca <llhwc_get_time_btwn_adv_chnls>:
 800bbca:	4601      	mov	r1, r0
 800bbcc:	f8df 246c 	ldr.w	r2, [pc, #1132]	; 800c03c <??DataTable71_8>
 800bbd0:	6850      	ldr	r0, [r2, #4]
 800bbd2:	2901      	cmp	r1, #1
 800bbd4:	bf08      	it	eq
 800bbd6:	6810      	ldreq	r0, [r2, #0]
 800bbd8:	4770      	bx	lr

0800bbda <llhwc_get_prdc_clbr_evnt_cfg_time>:
 800bbda:	f002 b8b3 	b.w	800dd44 <llhwc_phy_get_prdc_clbr_cfg_time>

0800bbde <llhwc_get_num_of_prdc_clbr_chnls>:
 800bbde:	f001 bfec 	b.w	800dbba <llhwc_phy_get_num_of_prdc_clbr_chnls>

0800bbe2 <llhwc_prdc_clbr_exec>:
 800bbe2:	b418      	push	{r3, r4}
 800bbe4:	f8df 4458 	ldr.w	r4, [pc, #1112]	; 800c040 <??DataTable71_9>
 800bbe8:	6da3      	ldr	r3, [r4, #88]	; 0x58
 800bbea:	b913      	cbnz	r3, 800bbf2 <??llhwc_prdc_clbr_exec_0>
 800bbec:	bc18      	pop	{r3, r4}
 800bbee:	f002 ba3c 	b.w	800e06a <llhwc_phy_init_clbr>

0800bbf2 <??llhwc_prdc_clbr_exec_0>:
 800bbf2:	bc11      	pop	{r0, r4}
 800bbf4:	4770      	bx	lr

0800bbf6 <llhwc_prdc_clbr_init>:
 800bbf6:	b510      	push	{r4, lr}
 800bbf8:	4cbd      	ldr	r4, [pc, #756]	; (800bef0 <??DataTable64>)
 800bbfa:	6ba0      	ldr	r0, [r4, #56]	; 0x38
 800bbfc:	b910      	cbnz	r0, 800bc04 <??llhwc_prdc_clbr_init_0>
 800bbfe:	f7f4 fe99 	bl	8000934 <evnt_schdlr_rgstr_prdc_clbr_evnt>
 800bc02:	63a0      	str	r0, [r4, #56]	; 0x38

0800bc04 <??llhwc_prdc_clbr_init_0>:
 800bc04:	bd10      	pop	{r4, pc}

0800bc06 <llhwc_prdc_clbr_deinit>:
 800bc06:	b510      	push	{r4, lr}
 800bc08:	4cb9      	ldr	r4, [pc, #740]	; (800bef0 <??DataTable64>)
 800bc0a:	6ba0      	ldr	r0, [r4, #56]	; 0x38
 800bc0c:	b140      	cbz	r0, 800bc20 <??llhwc_prdc_clbr_deinit_0>
 800bc0e:	f7f5 fc72 	bl	80014f6 <evnt_schdlr_unrgstr_evnt>
 800bc12:	1e40      	subs	r0, r0, #1
 800bc14:	4180      	sbcs	r0, r0
 800bc16:	0fc0      	lsrs	r0, r0, #31
 800bc18:	f7f4 fada 	bl	80001d0 <bsp_assert>
 800bc1c:	2000      	movs	r0, #0
 800bc1e:	63a0      	str	r0, [r4, #56]	; 0x38

0800bc20 <??llhwc_prdc_clbr_deinit_0>:
 800bc20:	bd10      	pop	{r4, pc}

0800bc22 <llhwc_get_curr_sm_mode>:
 800bc22:	48b4      	ldr	r0, [pc, #720]	; (800bef4 <??DataTable64_1>)
 800bc24:	6800      	ldr	r0, [r0, #0]
 800bc26:	f000 001f 	and.w	r0, r0, #31
 800bc2a:	4770      	bx	lr

0800bc2c <??DataTable57>:
 800bc2c:	8210 4802                                   ...H

0800bc30 <??DataTable57_1>:
 800bc30:	8244 4802                                   D..H

0800bc34 <llhwc_init_empty_pkts>:
 800bc34:	b51c      	push	{r2, r3, r4, lr}
 800bc36:	2001      	movs	r0, #1
 800bc38:	9000      	str	r0, [sp, #0]
 800bc3a:	f8df 4408 	ldr.w	r4, [pc, #1032]	; 800c044 <??DataTable71_10>
 800bc3e:	2204      	movs	r2, #4
 800bc40:	2100      	movs	r1, #0
 800bc42:	4620      	mov	r0, r4
 800bc44:	f002 ffd1 	bl	800ebea <ble_memset>
 800bc48:	6822      	ldr	r2, [r4, #0]
 800bc4a:	f8df 13fc 	ldr.w	r1, [pc, #1020]	; 800c048 <??DataTable71_11>
 800bc4e:	f8df 03fc 	ldr.w	r0, [pc, #1020]	; 800c04c <??DataTable71_12>
 800bc52:	400a      	ands	r2, r1
 800bc54:	4302      	orrs	r2, r0
 800bc56:	6022      	str	r2, [r4, #0]
 800bc58:	2204      	movs	r2, #4
 800bc5a:	4669      	mov	r1, sp
 800bc5c:	f8df 03f0 	ldr.w	r0, [pc, #1008]	; 800c050 <??DataTable71_13>
 800bc60:	f002 ff72 	bl	800eb48 <ble_memcpy>
 800bc64:	f8df 43ec 	ldr.w	r4, [pc, #1004]	; 800c054 <??DataTable71_14>
 800bc68:	2204      	movs	r2, #4
 800bc6a:	2100      	movs	r1, #0
 800bc6c:	4620      	mov	r0, r4
 800bc6e:	f002 ffbc 	bl	800ebea <ble_memset>
 800bc72:	6821      	ldr	r1, [r4, #0]
 800bc74:	f8df 03e0 	ldr.w	r0, [pc, #992]	; 800c058 <??DataTable71_15>
 800bc78:	2204      	movs	r2, #4
 800bc7a:	4001      	ands	r1, r0
 800bc7c:	f041 51a0 	orr.w	r1, r1, #335544320	; 0x14000000
 800bc80:	f441 4102 	orr.w	r1, r1, #33280	; 0x8200
 800bc84:	6021      	str	r1, [r4, #0]
 800bc86:	4669      	mov	r1, sp
 800bc88:	f8df 03d0 	ldr.w	r0, [pc, #976]	; 800c05c <??DataTable71_16>

0800bc8c <?Subroutine6>:
 800bc8c:	f002 ff5c 	bl	800eb48 <ble_memcpy>
 800bc90:	bd13      	pop	{r0, r1, r4, pc}
	...

0800bc94 <??DataTable58>:
 800bc94:	ffff 8080                                   ....

0800bc98 <??DataTable58_1>:
 800bc98:	0468 4802                                   h..H

0800bc9c <??DataTable58_2>:
 800bc9c:	0808 4802                                   ...H

0800bca0 <??DataTable58_3>:
 800bca0:	360c 2000                                   .6. 

0800bca4 <??DataTable58_4>:
 800bca4:	07f8 2000                                   ... 

0800bca8 <llhwc_calc_num_rx_pkts>:
 800bca8:	e92d 4ff3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800bcac:	4693      	mov	fp, r2
 800bcae:	f8df 1374 	ldr.w	r1, [pc, #884]	; 800c024 <??DataTable71_2>
 800bcb2:	69ca      	ldr	r2, [r1, #28]
 800bcb4:	f8df 1378 	ldr.w	r1, [pc, #888]	; 800c030 <??DataTable71_5>
 800bcb8:	b085      	sub	sp, #20
 800bcba:	0c12      	lsrs	r2, r2, #16
 800bcbc:	1889      	adds	r1, r1, r2
 800bcbe:	9103      	str	r1, [sp, #12]
 800bcc0:	9202      	str	r2, [sp, #8]
 800bcc2:	9b03      	ldr	r3, [sp, #12]
 800bcc4:	f8df 2398 	ldr.w	r2, [pc, #920]	; 800c060 <??DataTable71_17>
 800bcc8:	f892 4033 	ldrb.w	r4, [r2, #51]	; 0x33
 800bccc:	9304      	str	r3, [sp, #16]
 800bcce:	4b89      	ldr	r3, [pc, #548]	; (800bef4 <??DataTable64_1>)
 800bcd0:	9401      	str	r4, [sp, #4]
 800bcd2:	681b      	ldr	r3, [r3, #0]
 800bcd4:	2201      	movs	r2, #1
 800bcd6:	f04f 0800 	mov.w	r8, #0
 800bcda:	f003 031f 	and.w	r3, r3, #31
 800bcde:	409a      	lsls	r2, r3
 800bce0:	2100      	movs	r1, #0
 800bce2:	17d3      	asrs	r3, r2, #31
 800bce4:	2401      	movs	r4, #1
 800bce6:	2500      	movs	r5, #0
 800bce8:	46c6      	mov	lr, r8
 800bcea:	4689      	mov	r9, r1
 800bcec:	468a      	mov	sl, r1
 800bcee:	468c      	mov	ip, r1
 800bcf0:	42ab      	cmp	r3, r5
 800bcf2:	bf08      	it	eq
 800bcf4:	42a2      	cmpeq	r2, r4
 800bcf6:	d015      	beq.n	800bd24 <??llhwc_calc_num_rx_pkts_0>
 800bcf8:	2b00      	cmp	r3, #0
 800bcfa:	bf08      	it	eq
 800bcfc:	2a02      	cmpeq	r2, #2
 800bcfe:	d011      	beq.n	800bd24 <??llhwc_calc_num_rx_pkts_0>
 800bd00:	2b00      	cmp	r3, #0
 800bd02:	bf08      	it	eq
 800bd04:	2a04      	cmpeq	r2, #4
 800bd06:	d00d      	beq.n	800bd24 <??llhwc_calc_num_rx_pkts_0>
 800bd08:	2b00      	cmp	r3, #0
 800bd0a:	bf08      	it	eq
 800bd0c:	2a08      	cmpeq	r2, #8
 800bd0e:	d009      	beq.n	800bd24 <??llhwc_calc_num_rx_pkts_0>
 800bd10:	2b00      	cmp	r3, #0
 800bd12:	bf08      	it	eq
 800bd14:	f5b2 5f00 	cmpeq.w	r2, #8192	; 0x2000
 800bd18:	d004      	beq.n	800bd24 <??llhwc_calc_num_rx_pkts_0>
 800bd1a:	2b00      	cmp	r3, #0
 800bd1c:	bf08      	it	eq
 800bd1e:	f5b2 4f00 	cmpeq.w	r2, #32768	; 0x8000
 800bd22:	d108      	bne.n	800bd36 <??llhwc_calc_num_rx_pkts_1>

0800bd24 <??llhwc_calc_num_rx_pkts_0>:
 800bd24:	4a72      	ldr	r2, [pc, #456]	; (800bef0 <??DataTable64>)
 800bd26:	6c53      	ldr	r3, [r2, #68]	; 0x44

0800bd28 <??llhwc_calc_num_rx_pkts_2>:
 800bd28:	f8ad 0000 	strh.w	r0, [sp]
 800bd2c:	4618      	mov	r0, r3
 800bd2e:	9a04      	ldr	r2, [sp, #16]
 800bd30:	9b02      	ldr	r3, [sp, #8]
 800bd32:	2400      	movs	r4, #0
 800bd34:	e018      	b.n	800bd68 <??llhwc_calc_num_rx_pkts_3>

0800bd36 <??llhwc_calc_num_rx_pkts_1>:
 800bd36:	4a6e      	ldr	r2, [pc, #440]	; (800bef0 <??DataTable64>)
 800bd38:	6c93      	ldr	r3, [r2, #72]	; 0x48
 800bd3a:	e7f5      	b.n	800bd28 <??llhwc_calc_num_rx_pkts_2>

0800bd3c <??llhwc_calc_num_rx_pkts_4>:
 800bd3c:	4489      	add	r9, r1
 800bd3e:	f10e 0e01 	add.w	lr, lr, #1
 800bd42:	e00c      	b.n	800bd5e <??llhwc_calc_num_rx_pkts_5>

0800bd44 <??llhwc_calc_num_rx_pkts_6>:
 800bd44:	1dc9      	adds	r1, r1, #7

0800bd46 <??llhwc_calc_num_rx_pkts_7>:
 800bd46:	9a01      	ldr	r2, [sp, #4]
 800bd48:	0889      	lsrs	r1, r1, #2
 800bd4a:	eb06 0681 	add.w	r6, r6, r1, lsl #2
 800bd4e:	6831      	ldr	r1, [r6, #0]
 800bd50:	2a04      	cmp	r2, #4
 800bd52:	d1f3      	bne.n	800bd3c <??llhwc_calc_num_rx_pkts_4>
 800bd54:	07fa      	lsls	r2, r7, #31
 800bd56:	d4f1      	bmi.n	800bd3c <??llhwc_calc_num_rx_pkts_4>
 800bd58:	448a      	add	sl, r1
 800bd5a:	f108 0801 	add.w	r8, r8, #1

0800bd5e <??llhwc_calc_num_rx_pkts_5>:
 800bd5e:	6840      	ldr	r0, [r0, #4]

0800bd60 <??llhwc_calc_num_rx_pkts_8>:
 800bd60:	aa02      	add	r2, sp, #8
 800bd62:	8813      	ldrh	r3, [r2, #0]
 800bd64:	4ab2      	ldr	r2, [pc, #712]	; (800c030 <??DataTable71_5>)
 800bd66:	18d2      	adds	r2, r2, r3

0800bd68 <??llhwc_calc_num_rx_pkts_3>:
 800bd68:	f8bd 6000 	ldrh.w	r6, [sp]
 800bd6c:	429e      	cmp	r6, r3
 800bd6e:	d01f      	beq.n	800bdb0 <??llhwc_calc_num_rx_pkts_9>
 800bd70:	6813      	ldr	r3, [r2, #0]
 800bd72:	1c64      	adds	r4, r4, #1
 800bd74:	f10c 0c01 	add.w	ip, ip, #1
 800bd78:	9302      	str	r3, [sp, #8]
 800bd7a:	f3c3 6280 	ubfx	r2, r3, #26, #1
 800bd7e:	b102      	cbz	r2, 800bd82 <??llhwc_calc_num_rx_pkts_10>
 800bd80:	1c6d      	adds	r5, r5, #1

0800bd82 <??llhwc_calc_num_rx_pkts_10>:
 800bd82:	f1bb 0f00 	cmp.w	fp, #0
 800bd86:	bf18      	it	ne
 800bd88:	2800      	cmpne	r0, #0
 800bd8a:	d0e9      	beq.n	800bd60 <??llhwc_calc_num_rx_pkts_8>
 800bd8c:	9a03      	ldr	r2, [sp, #12]
 800bd8e:	6806      	ldr	r6, [r0, #0]
 800bd90:	8941      	ldrh	r1, [r0, #10]
 800bd92:	6817      	ldr	r7, [r2, #0]
 800bd94:	e9db 2304 	ldrd	r2, r3, [fp, #16]
 800bd98:	198e      	adds	r6, r1, r6
 800bd9a:	0eff      	lsrs	r7, r7, #27
 800bd9c:	7871      	ldrb	r1, [r6, #1]
 800bd9e:	f412 7fc0 	tst.w	r2, #384	; 0x180
 800bda2:	bf1e      	ittt	ne
 800bda4:	2900      	cmpne	r1, #0
 800bda6:	b2ea      	uxtbne	r2, r5
 800bda8:	2a00      	cmpne	r2, #0
 800bdaa:	d0cb      	beq.n	800bd44 <??llhwc_calc_num_rx_pkts_6>
 800bdac:	310b      	adds	r1, #11
 800bdae:	e7ca      	b.n	800bd46 <??llhwc_calc_num_rx_pkts_7>

0800bdb0 <??llhwc_calc_num_rx_pkts_9>:
 800bdb0:	f88d 4000 	strb.w	r4, [sp]
 800bdb4:	0008      	movs	r0, r1
 800bdb6:	4666      	mov	r6, ip
 800bdb8:	4674      	mov	r4, lr
 800bdba:	9f01      	ldr	r7, [sp, #4]
 800bdbc:	d004      	beq.n	800bdc8 <??llhwc_calc_num_rx_pkts_11>
 800bdbe:	f002 fbe5 	bl	800e58c <llhwc_phy_get_rssi_value>
 800bdc2:	494b      	ldr	r1, [pc, #300]	; (800bef0 <??DataTable64>)
 800bdc4:	f8a1 0040 	strh.w	r0, [r1, #64]	; 0x40

0800bdc8 <??llhwc_calc_num_rx_pkts_11>:
 800bdc8:	f89d 0000 	ldrb.w	r0, [sp]
 800bdcc:	2800      	cmp	r0, #0
 800bdce:	bf18      	it	ne
 800bdd0:	f1bb 0f00 	cmpne.w	fp, #0
 800bdd4:	d024      	beq.n	800be20 <??llhwc_calc_num_rx_pkts_12>
 800bdd6:	2f01      	cmp	r7, #1
 800bdd8:	bf18      	it	ne
 800bdda:	2f02      	cmpne	r7, #2
 800bddc:	d004      	beq.n	800bde8 <??llhwc_calc_num_rx_pkts_13>
 800bdde:	2f04      	cmp	r7, #4
 800bde0:	d11e      	bne.n	800be20 <??llhwc_calc_num_rx_pkts_12>
 800bde2:	f1b8 0f00 	cmp.w	r8, #0
 800bde6:	d109      	bne.n	800bdfc <??llhwc_calc_num_rx_pkts_14>

0800bde8 <??llhwc_calc_num_rx_pkts_13>:
 800bde8:	fb99 f0f6 	sdiv	r0, r9, r6
 800bdec:	f10b 0410 	add.w	r4, fp, #16
 800bdf0:	f002 fbcc 	bl	800e58c <llhwc_phy_get_rssi_value>
 800bdf4:	74a0      	strb	r0, [r4, #18]
 800bdf6:	207f      	movs	r0, #127	; 0x7f
 800bdf8:	74e0      	strb	r0, [r4, #19]
 800bdfa:	e011      	b.n	800be20 <??llhwc_calc_num_rx_pkts_12>

0800bdfc <??llhwc_calc_num_rx_pkts_14>:
 800bdfc:	f10b 0710 	add.w	r7, fp, #16
 800be00:	b924      	cbnz	r4, 800be0c <??llhwc_calc_num_rx_pkts_15>
 800be02:	207f      	movs	r0, #127	; 0x7f
 800be04:	74b8      	strb	r0, [r7, #18]
 800be06:	fb9a f0f6 	sdiv	r0, sl, r6
 800be0a:	e006      	b.n	800be1a <??llhwc_calc_num_rx_pkts_16>

0800be0c <??llhwc_calc_num_rx_pkts_15>:
 800be0c:	fb99 f0f4 	sdiv	r0, r9, r4
 800be10:	f002 fbbc 	bl	800e58c <llhwc_phy_get_rssi_value>
 800be14:	74b8      	strb	r0, [r7, #18]
 800be16:	fb9a f0f8 	sdiv	r0, sl, r8

0800be1a <??llhwc_calc_num_rx_pkts_16>:
 800be1a:	f002 fbb7 	bl	800e58c <llhwc_phy_get_rssi_value>
 800be1e:	74f8      	strb	r0, [r7, #19]

0800be20 <??llhwc_calc_num_rx_pkts_12>:
 800be20:	9806      	ldr	r0, [sp, #24]
 800be22:	7005      	strb	r5, [r0, #0]
 800be24:	f89d 0000 	ldrb.w	r0, [sp]

0800be28 <?Subroutine1>:
 800be28:	b007      	add	sp, #28
 800be2a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0800be2e <llhwc_set_evnt_hndl>:
 800be2e:	4930      	ldr	r1, [pc, #192]	; (800bef0 <??DataTable64>)
 800be30:	6288      	str	r0, [r1, #40]	; 0x28
 800be32:	4770      	bx	lr

0800be34 <llhwc_enable_augment_event>:
 800be34:	498b      	ldr	r1, [pc, #556]	; (800c064 <??DataTable71_18>)
 800be36:	2801      	cmp	r0, #1
 800be38:	d10a      	bne.n	800be50 <??llhwc_enable_augment_event_0>
 800be3a:	488b      	ldr	r0, [pc, #556]	; (800c068 <??DataTable71_19>)
 800be3c:	7902      	ldrb	r2, [r0, #4]
 800be3e:	680b      	ldr	r3, [r1, #0]
 800be40:	f362 4398 	bfi	r3, r2, #18, #7
 800be44:	600b      	str	r3, [r1, #0]
 800be46:	6808      	ldr	r0, [r1, #0]
 800be48:	f040 7000 	orr.w	r0, r0, #33554432	; 0x2000000
 800be4c:	6008      	str	r0, [r1, #0]
 800be4e:	4770      	bx	lr

0800be50 <??llhwc_enable_augment_event_0>:
 800be50:	680a      	ldr	r2, [r1, #0]
 800be52:	f022 7200 	bic.w	r2, r2, #33554432	; 0x2000000
 800be56:	600a      	str	r2, [r1, #0]
 800be58:	4770      	bx	lr

0800be5a <llhwc_start_augmented_mode>:
 800be5a:	4a83      	ldr	r2, [pc, #524]	; (800c068 <??DataTable71_19>)
 800be5c:	6010      	str	r0, [r2, #0]
 800be5e:	2001      	movs	r0, #1
 800be60:	7111      	strb	r1, [r2, #4]
 800be62:	7150      	strb	r0, [r2, #5]
 800be64:	4770      	bx	lr

0800be66 <llhwc_stop_augmented_mode>:
 800be66:	2000      	movs	r0, #0
 800be68:	497f      	ldr	r1, [pc, #508]	; (800c068 <??DataTable71_19>)
 800be6a:	7148      	strb	r0, [r1, #5]
 800be6c:	4770      	bx	lr
	...

0800be70 <??DataTable63>:
 800be70:	0444 4802                                   D..H

0800be74 <??DataTable63_1>:
 800be74:	8224 4802                                   $..H

0800be78 <llhwc_update_curr_energy_detection_chnl>:
 800be78:	4971      	ldr	r1, [pc, #452]	; (800c040 <??DataTable71_9>)
 800be7a:	b4f0      	push	{r4, r5, r6, r7}
 800be7c:	f101 0252 	add.w	r2, r1, #82	; 0x52
 800be80:	7894      	ldrb	r4, [r2, #2]
 800be82:	2000      	movs	r0, #0
 800be84:	7853      	ldrb	r3, [r2, #1]
 800be86:	4625      	mov	r5, r4
 800be88:	2c25      	cmp	r4, #37	; 0x25
 800be8a:	bfc8      	it	gt
 800be8c:	2001      	movgt	r0, #1
 800be8e:	dc2b      	bgt.n	800bee8 <??llhwc_update_curr_energy_detection_chnl_0>
 800be90:	2c20      	cmp	r4, #32
 800be92:	db06      	blt.n	800bea2 <??llhwc_update_curr_energy_detection_chnl_1>

0800be94 <??llhwc_update_curr_energy_detection_chnl_2>:
 800be94:	b2e1      	uxtb	r1, r4
 800be96:	2920      	cmp	r1, #32
 800be98:	db1b      	blt.n	800bed2 <??llhwc_update_curr_energy_detection_chnl_3>
 800be9a:	4621      	mov	r1, r4
 800be9c:	7815      	ldrb	r5, [r2, #0]
 800be9e:	e00b      	b.n	800beb8 <??llhwc_update_curr_energy_detection_chnl_4>

0800bea0 <??llhwc_update_curr_energy_detection_chnl_5>:
 800bea0:	1c6d      	adds	r5, r5, #1

0800bea2 <??llhwc_update_curr_energy_detection_chnl_1>:
 800bea2:	b2ee      	uxtb	r6, r5
 800bea4:	2e20      	cmp	r6, #32
 800bea6:	daf5      	bge.n	800be94 <??llhwc_update_curr_energy_detection_chnl_2>
 800bea8:	684e      	ldr	r6, [r1, #4]
 800beaa:	1c64      	adds	r4, r4, #1
 800beac:	40ee      	lsrs	r6, r5
 800beae:	07f7      	lsls	r7, r6, #31
 800beb0:	d5f6      	bpl.n	800bea0 <??llhwc_update_curr_energy_detection_chnl_5>
 800beb2:	1c5b      	adds	r3, r3, #1
 800beb4:	e017      	b.n	800bee6 <??llhwc_update_curr_energy_detection_chnl_6>

0800beb6 <??llhwc_update_curr_energy_detection_chnl_7>:
 800beb6:	1c64      	adds	r4, r4, #1

0800beb8 <??llhwc_update_curr_energy_detection_chnl_4>:
 800beb8:	b2e6      	uxtb	r6, r4
 800beba:	2e25      	cmp	r6, #37	; 0x25
 800bebc:	da08      	bge.n	800bed0 <??llhwc_update_curr_energy_detection_chnl_8>
 800bebe:	f1a4 0620 	sub.w	r6, r4, #32
 800bec2:	1c49      	adds	r1, r1, #1
 800bec4:	fa25 f706 	lsr.w	r7, r5, r6
 800bec8:	ea5f 7cc7 	movs.w	ip, r7, lsl #31
 800becc:	d5f3      	bpl.n	800beb6 <??llhwc_update_curr_energy_detection_chnl_7>
 800bece:	1c5b      	adds	r3, r3, #1

0800bed0 <??llhwc_update_curr_energy_detection_chnl_8>:
 800bed0:	460c      	mov	r4, r1

0800bed2 <??llhwc_update_curr_energy_detection_chnl_3>:
 800bed2:	b2e1      	uxtb	r1, r4
 800bed4:	2925      	cmp	r1, #37	; 0x25
 800bed6:	d106      	bne.n	800bee6 <??llhwc_update_curr_energy_detection_chnl_6>
 800bed8:	7811      	ldrb	r1, [r2, #0]
 800beda:	f3c1 1100 	ubfx	r1, r1, #4, #1
 800bede:	2900      	cmp	r1, #0
 800bee0:	bf14      	ite	ne
 800bee2:	2426      	movne	r4, #38	; 0x26
 800bee4:	2001      	moveq	r0, #1

0800bee6 <??llhwc_update_curr_energy_detection_chnl_6>:
 800bee6:	7094      	strb	r4, [r2, #2]

0800bee8 <??llhwc_update_curr_energy_detection_chnl_0>:
 800bee8:	7053      	strb	r3, [r2, #1]
 800beea:	bcf0      	pop	{r4, r5, r6, r7}
 800beec:	4770      	bx	lr
	...

0800bef0 <??DataTable64>:
 800bef0:	0718 2000                                   ... 

0800bef4 <??DataTable64_1>:
 800bef4:	080c 4802                                   ...H

0800bef8 <llhwc_energy_detection_cbk>:
 800bef8:	b538      	push	{r3, r4, r5, lr}
 800befa:	205f      	movs	r0, #95	; 0x5f
 800befc:	f7f4 f994 	bl	8000228 <bsp_debug_gpio_set>
 800bf00:	4c4f      	ldr	r4, [pc, #316]	; (800c040 <??DataTable71_9>)
 800bf02:	6da0      	ldr	r0, [r4, #88]	; 0x58
 800bf04:	b1c8      	cbz	r0, 800bf3a <??llhwc_energy_detection_cbk_0>
 800bf06:	f104 0553 	add.w	r5, r4, #83	; 0x53
 800bf0a:	7828      	ldrb	r0, [r5, #0]
 800bf0c:	eb04 0140 	add.w	r1, r4, r0, lsl #1
 800bf10:	1d88      	adds	r0, r1, #6
 800bf12:	f002 fa8d 	bl	800e430 <llhwc_phy_read_and_stop_ed>
 800bf16:	f7ff ffaf 	bl	800be78 <llhwc_update_curr_energy_detection_chnl>
 800bf1a:	b198      	cbz	r0, 800bf44 <??llhwc_energy_detection_cbk_1>
 800bf1c:	f104 0058 	add.w	r0, r4, #88	; 0x58
 800bf20:	f7f9 fd65 	bl	80059ee <os_timer_stop_free>
 800bf24:	2000      	movs	r0, #0
 800bf26:	f002 fa83 	bl	800e430 <llhwc_phy_read_and_stop_ed>
 800bf2a:	4850      	ldr	r0, [pc, #320]	; (800c06c <??DataTable71_20>)
 800bf2c:	6801      	ldr	r1, [r0, #0]
 800bf2e:	6cca      	ldr	r2, [r1, #76]	; 0x4c
 800bf30:	b11a      	cbz	r2, 800bf3a <??llhwc_energy_detection_cbk_0>
 800bf32:	7829      	ldrb	r1, [r5, #0]
 800bf34:	f104 0008 	add.w	r0, r4, #8
 800bf38:	4790      	blx	r2

0800bf3a <??llhwc_energy_detection_cbk_0>:
 800bf3a:	205f      	movs	r0, #95	; 0x5f
 800bf3c:	e8bd 4032 	ldmia.w	sp!, {r1, r4, r5, lr}
 800bf40:	f7f4 b974 	b.w	800022c <bsp_debug_gpio_clear>

0800bf44 <??llhwc_energy_detection_cbk_1>:
 800bf44:	7868      	ldrb	r0, [r5, #1]
 800bf46:	1e40      	subs	r0, r0, #1
 800bf48:	b2c0      	uxtb	r0, r0
 800bf4a:	f002 fa2c 	bl	800e3a6 <llhwc_phy_set_ch_and_start_ed>
 800bf4e:	6821      	ldr	r1, [r4, #0]
 800bf50:	6da0      	ldr	r0, [r4, #88]	; 0x58
 800bf52:	f7f9 fca1 	bl	8005898 <os_timer_start>
 800bf56:	e7f0      	b.n	800bf3a <??llhwc_energy_detection_cbk_0>

0800bf58 <??DataTable65>:
 800bf58:	0000 b7fe                                   ....

0800bf5c <??DataTable65_1>:
 800bf5c:	0008 4802                                   ...H

0800bf60 <llhwc_start_energy_detection>:
 800bf60:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800bf62:	4606      	mov	r6, r0
 800bf64:	460d      	mov	r5, r1
 800bf66:	4c36      	ldr	r4, [pc, #216]	; (800c040 <??DataTable71_9>)
 800bf68:	225c      	movs	r2, #92	; 0x5c
 800bf6a:	2100      	movs	r1, #0
 800bf6c:	4620      	mov	r0, r4
 800bf6e:	f002 fe3c 	bl	800ebea <ble_memset>
 800bf72:	7832      	ldrb	r2, [r6, #0]
 800bf74:	7870      	ldrb	r0, [r6, #1]
 800bf76:	78b1      	ldrb	r1, [r6, #2]
 800bf78:	f104 0752 	add.w	r7, r4, #82	; 0x52
 800bf7c:	ea42 2200 	orr.w	r2, r2, r0, lsl #8
 800bf80:	78f0      	ldrb	r0, [r6, #3]
 800bf82:	016d      	lsls	r5, r5, #5
 800bf84:	ea42 4201 	orr.w	r2, r2, r1, lsl #16
 800bf88:	ea42 6200 	orr.w	r2, r2, r0, lsl #24
 800bf8c:	6062      	str	r2, [r4, #4]
 800bf8e:	7930      	ldrb	r0, [r6, #4]
 800bf90:	6025      	str	r5, [r4, #0]
 800bf92:	f000 001f 	and.w	r0, r0, #31
 800bf96:	7038      	strb	r0, [r7, #0]
 800bf98:	f7ff ff6e 	bl	800be78 <llhwc_update_curr_energy_detection_chnl>
 800bf9c:	b108      	cbz	r0, 800bfa2 <??llhwc_start_energy_detection_0>
 800bf9e:	2012      	movs	r0, #18
 800bfa0:	bdf2      	pop	{r1, r4, r5, r6, r7, pc}

0800bfa2 <??llhwc_start_energy_detection_0>:
 800bfa2:	2200      	movs	r2, #0
 800bfa4:	2100      	movs	r1, #0
 800bfa6:	4832      	ldr	r0, [pc, #200]	; (800c070 <??DataTable71_21>)
 800bfa8:	f7f9 fbd3 	bl	8005752 <os_timer_create>
 800bfac:	65a0      	str	r0, [r4, #88]	; 0x58
 800bfae:	b908      	cbnz	r0, 800bfb4 <??llhwc_start_energy_detection_1>
 800bfb0:	201f      	movs	r0, #31
 800bfb2:	bdf2      	pop	{r1, r4, r5, r6, r7, pc}

0800bfb4 <??llhwc_start_energy_detection_1>:
 800bfb4:	78b8      	ldrb	r0, [r7, #2]
 800bfb6:	1e40      	subs	r0, r0, #1
 800bfb8:	b2c0      	uxtb	r0, r0
 800bfba:	f002 f9f4 	bl	800e3a6 <llhwc_phy_set_ch_and_start_ed>
 800bfbe:	6821      	ldr	r1, [r4, #0]
 800bfc0:	6da0      	ldr	r0, [r4, #88]	; 0x58
 800bfc2:	e8bd 40f4 	ldmia.w	sp!, {r2, r4, r5, r6, r7, lr}
 800bfc6:	f7f9 bc67 	b.w	8005898 <os_timer_start>

0800bfca <llhwc_get_augmented_whitening>:
 800bfca:	4827      	ldr	r0, [pc, #156]	; (800c068 <??DataTable71_19>)
 800bfcc:	7900      	ldrb	r0, [r0, #4]
 800bfce:	4770      	bx	lr

0800bfd0 <llhwc_is_in_augmented_mode>:
 800bfd0:	4825      	ldr	r0, [pc, #148]	; (800c068 <??DataTable71_19>)
 800bfd2:	7940      	ldrb	r0, [r0, #5]
 800bfd4:	4770      	bx	lr

0800bfd6 <llhwc_get_tx_test_pckt_num>:
 800bfd6:	b510      	push	{r4, lr}
 800bfd8:	0004      	movs	r4, r0
 800bfda:	bf14      	ite	ne
 800bfdc:	2001      	movne	r0, #1
 800bfde:	2000      	moveq	r0, #0
 800bfe0:	f7f4 f8f6 	bl	80001d0 <bsp_assert>
 800bfe4:	4823      	ldr	r0, [pc, #140]	; (800c074 <??DataTable71_22>)
 800bfe6:	6cc1      	ldr	r1, [r0, #76]	; 0x4c
 800bfe8:	6021      	str	r1, [r4, #0]
 800bfea:	bd10      	pop	{r4, pc}

0800bfec <llhwc_get_last_rx_rssi>:
 800bfec:	b510      	push	{r4, lr}
 800bfee:	0004      	movs	r4, r0
 800bff0:	bf14      	ite	ne
 800bff2:	2001      	movne	r0, #1
 800bff4:	2000      	moveq	r0, #0
 800bff6:	f7f4 f8eb 	bl	80001d0 <bsp_assert>
 800bffa:	481e      	ldr	r0, [pc, #120]	; (800c074 <??DataTable71_22>)
 800bffc:	f8b0 1040 	ldrh.w	r1, [r0, #64]	; 0x40
 800c000:	8021      	strh	r1, [r4, #0]
 800c002:	bd10      	pop	{r4, pc}

0800c004 <llhwc_get_dtm_curr_mode>:
 800c004:	b510      	push	{r4, lr}
 800c006:	0004      	movs	r4, r0
 800c008:	bf14      	ite	ne
 800c00a:	2001      	movne	r0, #1
 800c00c:	2000      	moveq	r0, #0
 800c00e:	f7f4 f8df 	bl	80001d0 <bsp_assert>
 800c012:	4818      	ldr	r0, [pc, #96]	; (800c074 <??DataTable71_22>)
 800c014:	6ac1      	ldr	r1, [r0, #44]	; 0x2c
 800c016:	6021      	str	r1, [r4, #0]
 800c018:	bd10      	pop	{r4, pc}
	...

0800c01c <??DataTable71>:
 800c01c:	0014 b7fe                                   ....

0800c020 <??DataTable71_1>:
 800c020:	0818 4802                                   ...H

0800c024 <??DataTable71_2>:
 800c024:	07d4 2000                                   ... 

0800c028 <??DataTable71_3>:
 800c028:	1884 2000                                   ... 

0800c02c <??DataTable71_4>:
 800c02c:	0740 2000                                   @.. 

0800c030 <??DataTable71_5>:
 800c030:	0000 4802                                   ...H

0800c034 <??DataTable71_6>:
 800c034:	0404 4802                                   ...H

0800c038 <??DataTable71_7>:
 800c038:	0014 4802                                   ...H

0800c03c <??DataTable71_8>:
 800c03c:	08b4 2000                                   ... 

0800c040 <??DataTable71_9>:
 800c040:	0778 2000                                   x.. 

0800c044 <??DataTable71_10>:
 800c044:	8200 4802                                   ...H

0800c048 <??DataTable71_11>:
 800c048:	0000 fbff                                   ....

0800c04c <??DataTable71_12>:
 800c04c:	8208 0400                                   ....

0800c050 <??DataTable71_13>:
 800c050:	8204 4802                                   ...H

0800c054 <??DataTable71_14>:
 800c054:	8208 4802                                   ...H

0800c058 <??DataTable71_15>:
 800c058:	0000 ebff                                   ....

0800c05c <??DataTable71_16>:
 800c05c:	820c 4802                                   ...H

0800c060 <??DataTable71_17>:
 800c060:	07f8 2000                                   ... 

0800c064 <??DataTable71_18>:
 800c064:	0820 4802                                    ..H

0800c068 <??DataTable71_19>:
 800c068:	0770 2000                                   p.. 

0800c06c <??DataTable71_20>:
 800c06c:	06f0 2000                                   ... 

0800c070 <??DataTable71_21>:
 800c070:	bef9 0800                                   ....

0800c074 <??DataTable71_22>:
 800c074:	0718 2000                                   ... 

0800c078 <stamp_access_adr_match_us>:
 800c078:	0000 0028 0018 017a 017a 0000               ..(...z.z...

0800c084 <llhwc_slptmr_init>:
 800c084:	b510      	push	{r4, lr}
 800c086:	0004      	movs	r4, r0
 800c088:	bf14      	ite	ne
 800c08a:	2001      	movne	r0, #1
 800c08c:	2000      	moveq	r0, #0
 800c08e:	f7f4 f89f 	bl	80001d0 <bsp_assert>
 800c092:	f8df 0a10 	ldr.w	r0, [pc, #2576]	; 800caa4 <??DataTable29>
 800c096:	6004      	str	r4, [r0, #0]
 800c098:	bd10      	pop	{r4, pc}

0800c09a <llhwc_slptmr_get>:
 800c09a:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800c09c:	4604      	mov	r4, r0
 800c09e:	2019      	movs	r0, #25
 800c0a0:	f7f4 f8c2 	bl	8000228 <bsp_debug_gpio_set>
 800c0a4:	f8df 59fc 	ldr.w	r5, [pc, #2556]	; 800caa4 <??DataTable29>
 800c0a8:	f895 0041 	ldrb.w	r0, [r5, #65]	; 0x41
 800c0ac:	2801      	cmp	r0, #1
 800c0ae:	d128      	bne.n	800c102 <??llhwc_slptmr_get_0>

0800c0b0 <??llhwc_slptmr_get_1>:
 800c0b0:	f8df 19f4 	ldr.w	r1, [pc, #2548]	; 800caa8 <??DataTable29_1>
 800c0b4:	6809      	ldr	r1, [r1, #0]
 800c0b6:	f8df 69f4 	ldr.w	r6, [pc, #2548]	; 800caac <??DataTable29_2>
 800c0ba:	7d30      	ldrb	r0, [r6, #20]
 800c0bc:	1c49      	adds	r1, r1, #1
 800c0be:	b908      	cbnz	r0, 800c0c4 <??llhwc_slptmr_get_2>
 800c0c0:	6021      	str	r1, [r4, #0]
 800c0c2:	e016      	b.n	800c0f2 <??llhwc_slptmr_get_3>

0800c0c4 <??llhwc_slptmr_get_2>:
 800c0c4:	2801      	cmp	r0, #1
 800c0c6:	d10a      	bne.n	800c0de <??llhwc_slptmr_get_4>
 800c0c8:	6837      	ldr	r7, [r6, #0]
 800c0ca:	6936      	ldr	r6, [r6, #16]
 800c0cc:	f8df 29e0 	ldr.w	r2, [pc, #2528]	; 800cab0 <??DataTable29_3>
 800c0d0:	fba7 0101 	umull	r0, r1, r7, r1
 800c0d4:	2300      	movs	r3, #0
 800c0d6:	f019 faaf 	bl	8025638 <__aeabi_uldivmod>
 800c0da:	1b80      	subs	r0, r0, r6
 800c0dc:	e008      	b.n	800c0f0 <??llhwc_slptmr_get_5>

0800c0de <??llhwc_slptmr_get_4>:
 800c0de:	2802      	cmp	r0, #2
 800c0e0:	d107      	bne.n	800c0f2 <??llhwc_slptmr_get_3>
 800c0e2:	f44f 72fa 	mov.w	r2, #500	; 0x1f4
 800c0e6:	fba2 0101 	umull	r0, r1, r2, r1
 800c0ea:	0a40      	lsrs	r0, r0, #9
 800c0ec:	ea40 50c1 	orr.w	r0, r0, r1, lsl #23

0800c0f0 <??llhwc_slptmr_get_5>:
 800c0f0:	6020      	str	r0, [r4, #0]

0800c0f2 <??llhwc_slptmr_get_3>:
 800c0f2:	6c68      	ldr	r0, [r5, #68]	; 0x44
 800c0f4:	6821      	ldr	r1, [r4, #0]
 800c0f6:	1a0a      	subs	r2, r1, r0
 800c0f8:	2a01      	cmp	r2, #1
 800c0fa:	d9d9      	bls.n	800c0b0 <??llhwc_slptmr_get_1>
 800c0fc:	2000      	movs	r0, #0
 800c0fe:	6468      	str	r0, [r5, #68]	; 0x44
 800c100:	e001      	b.n	800c106 <??llhwc_slptmr_get_6>

0800c102 <??llhwc_slptmr_get_0>:
 800c102:	2100      	movs	r1, #0
 800c104:	6021      	str	r1, [r4, #0]

0800c106 <??llhwc_slptmr_get_6>:
 800c106:	2019      	movs	r0, #25
 800c108:	e8bd 40f2 	ldmia.w	sp!, {r1, r4, r5, r6, r7, lr}
 800c10c:	f7f4 b88e 	b.w	800022c <bsp_debug_gpio_clear>

0800c110 <llhwc_cmn_reset>:
 800c110:	b570      	push	{r4, r5, r6, lr}
 800c112:	f8df 0990 	ldr.w	r0, [pc, #2448]	; 800caa4 <??DataTable29>
 800c116:	2109      	movs	r1, #9
 800c118:	7701      	strb	r1, [r0, #28]
 800c11a:	bf00      	nop
 800c11c:	a233      	add	r2, pc, #204	; (adr r2, 800c1ec <?_3>)
 800c11e:	e9d2 4500 	ldrd	r4, r5, [r2]
 800c122:	f100 010c 	add.w	r1, r0, #12
 800c126:	2300      	movs	r3, #0
 800c128:	e9c1 4500 	strd	r4, r5, [r1]
 800c12c:	6203      	str	r3, [r0, #32]
 800c12e:	6243      	str	r3, [r0, #36]	; 0x24
 800c130:	f100 0430 	add.w	r4, r0, #48	; 0x30
 800c134:	2005      	movs	r0, #5
 800c136:	7020      	strb	r0, [r4, #0]
 800c138:	8223      	strh	r3, [r4, #16]
 800c13a:	74e3      	strb	r3, [r4, #19]
 800c13c:	f8df 5974 	ldr.w	r5, [pc, #2420]	; 800cab4 <??DataTable29_4>
 800c140:	6829      	ldr	r1, [r5, #0]
 800c142:	f021 0108 	bic.w	r1, r1, #8
 800c146:	6029      	str	r1, [r5, #0]
 800c148:	6828      	ldr	r0, [r5, #0]
 800c14a:	f040 0008 	orr.w	r0, r0, #8
 800c14e:	6028      	str	r0, [r5, #0]
 800c150:	6869      	ldr	r1, [r5, #4]
 800c152:	f021 0104 	bic.w	r1, r1, #4
 800c156:	6069      	str	r1, [r5, #4]
 800c158:	6868      	ldr	r0, [r5, #4]
 800c15a:	f040 0004 	orr.w	r0, r0, #4
 800c15e:	6068      	str	r0, [r5, #4]
 800c160:	6869      	ldr	r1, [r5, #4]
 800c162:	203c      	movs	r0, #60	; 0x3c
 800c164:	f041 0102 	orr.w	r1, r1, #2
 800c168:	6069      	str	r1, [r5, #4]
 800c16a:	f7f4 f81a 	bl	80001a2 <bsp_delay_us>
 800c16e:	7c60      	ldrb	r0, [r4, #17]
 800c170:	2801      	cmp	r0, #1
 800c172:	d004      	beq.n	800c17e <??llhwc_cmn_reset_0>
 800c174:	2001      	movs	r0, #1
 800c176:	f7f4 f83a 	bl	80001ee <bsp_control_hclk>
 800c17a:	2001      	movs	r0, #1
 800c17c:	7460      	strb	r0, [r4, #17]

0800c17e <??llhwc_cmn_reset_0>:
 800c17e:	2000      	movs	r0, #0
 800c180:	f7f4 f836 	bl	80001f0 <bsp_control_aclk>
 800c184:	2000      	movs	r0, #0
 800c186:	6160      	str	r0, [r4, #20]
 800c188:	f000 ff41 	bl	800d00e <llhwc_cmn_reset_slptmr_src>
 800c18c:	f000 ff50 	bl	800d030 <llhwc_cmn_reset_rco_clbr>
 800c190:	2000      	movs	r0, #0
 800c192:	f8df 1924 	ldr.w	r1, [pc, #2340]	; 800cab8 <??DataTable29_5>
 800c196:	6108      	str	r0, [r1, #16]
 800c198:	2001      	movs	r0, #1
 800c19a:	f000 faa3 	bl	800c6e4 <llhwc_pwr_switch>
 800c19e:	0004      	movs	r4, r0
 800c1a0:	d121      	bne.n	800c1e6 <??llhwc_cmn_reset_1>
 800c1a2:	f8df 6918 	ldr.w	r6, [pc, #2328]	; 800cabc <??DataTable29_6>
 800c1a6:	6831      	ldr	r1, [r6, #0]
 800c1a8:	2001      	movs	r0, #1
 800c1aa:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
 800c1ae:	f360 3150 	bfi	r1, r0, #13, #4
 800c1b2:	6031      	str	r1, [r6, #0]
 800c1b4:	6272      	str	r2, [r6, #36]	; 0x24
 800c1b6:	f001 ff2b 	bl	800e010 <llhwc_phy_reset>
 800c1ba:	f002 f879 	bl	800e2b0 <llhwc_phy_init>
 800c1be:	6968      	ldr	r0, [r5, #20]
 800c1c0:	f040 0020 	orr.w	r0, r0, #32
 800c1c4:	6168      	str	r0, [r5, #20]
 800c1c6:	6a70      	ldr	r0, [r6, #36]	; 0x24
 800c1c8:	f040 0008 	orr.w	r0, r0, #8
 800c1cc:	6270      	str	r0, [r6, #36]	; 0x24
 800c1ce:	6a70      	ldr	r0, [r6, #36]	; 0x24
 800c1d0:	f020 0004 	bic.w	r0, r0, #4
 800c1d4:	6270      	str	r0, [r6, #36]	; 0x24
 800c1d6:	6868      	ldr	r0, [r5, #4]
 800c1d8:	f040 0020 	orr.w	r0, r0, #32
 800c1dc:	6068      	str	r0, [r5, #4]
 800c1de:	6868      	ldr	r0, [r5, #4]
 800c1e0:	f420 7080 	bic.w	r0, r0, #256	; 0x100
 800c1e4:	6068      	str	r0, [r5, #4]

0800c1e6 <??llhwc_cmn_reset_1>:
 800c1e6:	4620      	mov	r0, r4
 800c1e8:	bd70      	pop	{r4, r5, r6, pc}
	...

0800c1ec <?_3>:
	...

0800c1f4 <llhwc_cmn_set_dp_slp_mode>:
 800c1f4:	b538      	push	{r3, r4, r5, lr}
 800c1f6:	2400      	movs	r4, #0
 800c1f8:	2801      	cmp	r0, #1
 800c1fa:	d111      	bne.n	800c220 <??llhwc_cmn_set_dp_slp_mode_0>
 800c1fc:	f8df 18c0 	ldr.w	r1, [pc, #2240]	; 800cac0 <??DataTable29_7>
 800c200:	7808      	ldrb	r0, [r1, #0]
 800c202:	2800      	cmp	r0, #0
 800c204:	d037      	beq.n	800c276 <??llhwc_cmn_set_dp_slp_mode_1>
 800c206:	f8df 08ac 	ldr.w	r0, [pc, #2220]	; 800cab4 <??DataTable29_4>
 800c20a:	6802      	ldr	r2, [r0, #0]
 800c20c:	0912      	lsrs	r2, r2, #4
 800c20e:	f002 027f 	and.w	r2, r2, #127	; 0x7f
 800c212:	2a01      	cmp	r2, #1
 800c214:	d037      	beq.n	800c286 <??llhwc_cmn_set_dp_slp_mode_2>
 800c216:	6802      	ldr	r2, [r0, #0]
 800c218:	08d2      	lsrs	r2, r2, #3
 800c21a:	00d2      	lsls	r2, r2, #3
 800c21c:	6002      	str	r2, [r0, #0]
 800c21e:	e02c      	b.n	800c27a <??llhwc_cmn_set_dp_slp_mode_3>

0800c220 <??llhwc_cmn_set_dp_slp_mode_0>:
 800c220:	2800      	cmp	r0, #0
 800c222:	bf02      	ittt	eq
 800c224:	f8df 5898 	ldreq.w	r5, [pc, #2200]	; 800cac0 <??DataTable29_7>
 800c228:	7828      	ldrbeq	r0, [r5, #0]
 800c22a:	2800      	cmpeq	r0, #0
 800c22c:	d123      	bne.n	800c276 <??llhwc_cmn_set_dp_slp_mode_1>
 800c22e:	2105      	movs	r1, #5
 800c230:	7529      	strb	r1, [r5, #20]
 800c232:	2001      	movs	r0, #1
 800c234:	f000 fa56 	bl	800c6e4 <llhwc_pwr_switch>
 800c238:	0004      	movs	r4, r0
 800c23a:	d11c      	bne.n	800c276 <??llhwc_cmn_set_dp_slp_mode_1>
 800c23c:	f8df 187c 	ldr.w	r1, [pc, #2172]	; 800cabc <??DataTable29_6>
 800c240:	680a      	ldr	r2, [r1, #0]
 800c242:	2001      	movs	r0, #1
 800c244:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
 800c248:	f360 3250 	bfi	r2, r0, #13, #4
 800c24c:	600a      	str	r2, [r1, #0]
 800c24e:	624b      	str	r3, [r1, #36]	; 0x24
 800c250:	f8df 0860 	ldr.w	r0, [pc, #2144]	; 800cab4 <??DataTable29_4>
 800c254:	6942      	ldr	r2, [r0, #20]
 800c256:	f042 0220 	orr.w	r2, r2, #32
 800c25a:	6142      	str	r2, [r0, #20]
 800c25c:	6a48      	ldr	r0, [r1, #36]	; 0x24
 800c25e:	f040 0008 	orr.w	r0, r0, #8
 800c262:	6248      	str	r0, [r1, #36]	; 0x24
 800c264:	6a48      	ldr	r0, [r1, #36]	; 0x24
 800c266:	f020 0004 	bic.w	r0, r0, #4
 800c26a:	6248      	str	r0, [r1, #36]	; 0x24
 800c26c:	f001 feef 	bl	800e04e <llhwc_phy_recover_from_ll_dp_slp>
 800c270:	6a28      	ldr	r0, [r5, #32]
 800c272:	b100      	cbz	r0, 800c276 <??llhwc_cmn_set_dp_slp_mode_1>
 800c274:	4780      	blx	r0

0800c276 <??llhwc_cmn_set_dp_slp_mode_1>:
 800c276:	4620      	mov	r0, r4
 800c278:	bd32      	pop	{r1, r4, r5, pc}

0800c27a <??llhwc_cmn_set_dp_slp_mode_3>:
 800c27a:	6802      	ldr	r2, [r0, #0]
 800c27c:	0912      	lsrs	r2, r2, #4
 800c27e:	f002 027f 	and.w	r2, r2, #127	; 0x7f
 800c282:	2a01      	cmp	r2, #1
 800c284:	d1f9      	bne.n	800c27a <??llhwc_cmn_set_dp_slp_mode_3>

0800c286 <??llhwc_cmn_set_dp_slp_mode_2>:
 800c286:	700c      	strb	r4, [r1, #0]
 800c288:	e7f5      	b.n	800c276 <??llhwc_cmn_set_dp_slp_mode_1>

0800c28a <llhwc_cmn_is_dp_slp_enabled>:
 800c28a:	f8df 2818 	ldr.w	r2, [pc, #2072]	; 800caa4 <??DataTable29>
 800c28e:	7f11      	ldrb	r1, [r2, #28]
 800c290:	2000      	movs	r0, #0
 800c292:	b901      	cbnz	r1, 800c296 <??llhwc_cmn_is_dp_slp_enabled_0>
 800c294:	2001      	movs	r0, #1

0800c296 <??llhwc_cmn_is_dp_slp_enabled_0>:
 800c296:	4770      	bx	lr

0800c298 <llhwc_cmn_init>:
 800c298:	b538      	push	{r3, r4, r5, lr}
 800c29a:	2202      	movs	r2, #2
 800c29c:	f20f 5171 	addw	r1, pc, #1393	; 0x571
 800c2a0:	2001      	movs	r0, #1
 800c2a2:	f7f3 ff87 	bl	80001b4 <bsp_intr_set_pri>
 800c2a6:	220a      	movs	r2, #10
 800c2a8:	f20f 517d 	addw	r1, pc, #1405	; 0x57d
 800c2ac:	2002      	movs	r0, #2
 800c2ae:	f7f3 ff81 	bl	80001b4 <bsp_intr_set_pri>
 800c2b2:	f8df 47f0 	ldr.w	r4, [pc, #2032]	; 800caa4 <??DataTable29>
 800c2b6:	2248      	movs	r2, #72	; 0x48
 800c2b8:	2100      	movs	r1, #0
 800c2ba:	4620      	mov	r0, r4
 800c2bc:	f002 fc95 	bl	800ebea <ble_memset>
 800c2c0:	f8df 57f4 	ldr.w	r5, [pc, #2036]	; 800cab8 <??DataTable29_5>
 800c2c4:	2203      	movs	r2, #3
 800c2c6:	2100      	movs	r1, #0
 800c2c8:	1d28      	adds	r0, r5, #4
 800c2ca:	f002 fc8e 	bl	800ebea <ble_memset>
 800c2ce:	20ff      	movs	r0, #255	; 0xff
 800c2d0:	8028      	strh	r0, [r5, #0]
 800c2d2:	78e8      	ldrb	r0, [r5, #3]
 800c2d4:	2100      	movs	r1, #0
 800c2d6:	70a9      	strb	r1, [r5, #2]
 800c2d8:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 800c2dc:	70e8      	strb	r0, [r5, #3]
 800c2de:	2102      	movs	r1, #2
 800c2e0:	f884 1042 	strb.w	r1, [r4, #66]	; 0x42
 800c2e4:	f001 fd8b 	bl	800ddfe <llhwc_phy_set_cfg_time>
 800c2e8:	f7f9 fc64 	bl	8005bb4 <ll_tx_pwr_if_tx_power_params_init>
 800c2ec:	f7ff ff10 	bl	800c110 <llhwc_cmn_reset>
 800c2f0:	2101      	movs	r1, #1
 800c2f2:	f20f 503d 	addw	r0, pc, #1341	; 0x53d
 800c2f6:	f006 fafd 	bl	80128f4 <intr_hndlr_reg>
 800c2fa:	2102      	movs	r1, #2
 800c2fc:	f20f 508d 	addw	r0, pc, #1421	; 0x58d
 800c300:	f006 faf8 	bl	80128f4 <intr_hndlr_reg>
 800c304:	f8df 07a4 	ldr.w	r0, [pc, #1956]	; 800caac <??DataTable29_2>
 800c308:	7d01      	ldrb	r1, [r0, #20]
 800c30a:	2901      	cmp	r1, #1
 800c30c:	d103      	bne.n	800c316 <??llhwc_cmn_init_0>
 800c30e:	2100      	movs	r1, #0
 800c310:	2000      	movs	r0, #0
 800c312:	f000 fec7 	bl	800d0a4 <llhwc_cmn_initial_rco_clbr>

0800c316 <??llhwc_cmn_init_0>:
 800c316:	2000      	movs	r0, #0
 800c318:	bd32      	pop	{r1, r4, r5, pc}

0800c31a <llhwc_polling>:
 800c31a:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800c31c:	2400      	movs	r4, #0
 800c31e:	b170      	cbz	r0, 800c33e <??llhwc_polling_0>
 800c320:	f8df 57a0 	ldr.w	r5, [pc, #1952]	; 800cac4 <??DataTable29_8>
 800c324:	1869      	adds	r1, r5, r1
 800c326:	f8df 6d04 	ldr.w	r6, [pc, #3332]	; 800d02c <??DataTable33>
 800c32a:	9d06      	ldr	r5, [sp, #24]

0800c32c <??llhwc_polling_1>:
 800c32c:	680f      	ldr	r7, [r1, #0]
 800c32e:	1e40      	subs	r0, r0, #1
 800c330:	4017      	ands	r7, r2
 800c332:	40df      	lsrs	r7, r3
 800c334:	6037      	str	r7, [r6, #0]
 800c336:	42af      	cmp	r7, r5
 800c338:	d106      	bne.n	800c348 <??llhwc_polling_2>
 800c33a:	2800      	cmp	r0, #0
 800c33c:	d1f6      	bne.n	800c32c <??llhwc_polling_1>

0800c33e <??llhwc_polling_0>:
 800c33e:	2000      	movs	r0, #0
 800c340:	f7f3 ff46 	bl	80001d0 <bsp_assert>
 800c344:	f04f 34ff 	mov.w	r4, #4294967295	; 0xffffffff

0800c348 <??llhwc_polling_2>:
 800c348:	4620      	mov	r0, r4
 800c34a:	bdf2      	pop	{r1, r4, r5, r6, r7, pc}

0800c34c <llhwc_slptmr_set>:
 800c34c:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800c350:	b084      	sub	sp, #16
 800c352:	2018      	movs	r0, #24
 800c354:	f7f3 ff68 	bl	8000228 <bsp_debug_gpio_set>
 800c358:	9805      	ldr	r0, [sp, #20]
 800c35a:	f20f 215c 	addw	r1, pc, #604	; 0x25c
 800c35e:	e9d1 2300 	ldrd	r2, r3, [r1]
 800c362:	6804      	ldr	r4, [r0, #0]
 800c364:	6845      	ldr	r5, [r0, #4]
 800c366:	a802      	add	r0, sp, #8
 800c368:	e9c0 2300 	strd	r2, r3, [r0]
 800c36c:	f008 f873 	bl	8014456 <os_disable_isr>
 800c370:	f8df 7738 	ldr.w	r7, [pc, #1848]	; 800caac <??DataTable29_2>
 800c374:	7d38      	ldrb	r0, [r7, #20]
 800c376:	2801      	cmp	r0, #1
 800c378:	f040 8094 	bne.w	800c4a4 <??llhwc_slptmr_set_0>
 800c37c:	9c05      	ldr	r4, [sp, #20]
 800c37e:	f8df c730 	ldr.w	ip, [pc, #1840]	; 800cab0 <??DataTable29_3>
 800c382:	f8d7 a000 	ldr.w	sl, [r7]
 800c386:	6826      	ldr	r6, [r4, #0]
 800c388:	2300      	movs	r3, #0
 800c38a:	4652      	mov	r2, sl
 800c38c:	fbac 8906 	umull	r8, r9, ip, r6
 800c390:	4640      	mov	r0, r8
 800c392:	2600      	movs	r6, #0
 800c394:	4649      	mov	r1, r9
 800c396:	f019 f94f 	bl	8025638 <__aeabi_uldivmod>
 800c39a:	4604      	mov	r4, r0
 800c39c:	4640      	mov	r0, r8
 800c39e:	4649      	mov	r1, r9
 800c3a0:	4652      	mov	r2, sl
 800c3a2:	2300      	movs	r3, #0
 800c3a4:	f019 f948 	bl	8025638 <__aeabi_uldivmod>
 800c3a8:	4610      	mov	r0, r2
 800c3aa:	4619      	mov	r1, r3
 800c3ac:	f44f 627e 	mov.w	r2, #4064	; 0xfe0
 800c3b0:	2300      	movs	r3, #0
 800c3b2:	f019 f941 	bl	8025638 <__aeabi_uldivmod>
 800c3b6:	f8df ebb8 	ldr.w	lr, [pc, #3000]	; 800cf70 <??DataTable30>
 800c3ba:	fbea e60e 	umlal	lr, r6, sl, lr
 800c3be:	1945      	adds	r5, r0, r5
 800c3c0:	0af0      	lsrs	r0, r6, #11
 800c3c2:	e001      	b.n	800c3c8 <??llhwc_slptmr_set_1>

0800c3c4 <??llhwc_slptmr_set_2>:
 800c3c4:	1a2d      	subs	r5, r5, r0
 800c3c6:	1c64      	adds	r4, r4, #1

0800c3c8 <??llhwc_slptmr_set_1>:
 800c3c8:	42a8      	cmp	r0, r5
 800c3ca:	d3fb      	bcc.n	800c3c4 <??llhwc_slptmr_set_2>
 800c3cc:	f8df 6ba4 	ldr.w	r6, [pc, #2980]	; 800cf74 <??DataTable30_1>
 800c3d0:	6870      	ldr	r0, [r6, #4]
 800c3d2:	2800      	cmp	r0, #0
 800c3d4:	bf1c      	itt	ne
 800c3d6:	f8d6 b000 	ldrne.w	fp, [r6]
 800c3da:	f1bb 0f01 	cmpne.w	fp, #1
 800c3de:	f000 808d 	beq.w	800c4fc <??llhwc_slptmr_set_3>
 800c3e2:	6872      	ldr	r2, [r6, #4]
 800c3e4:	6af0      	ldr	r0, [r6, #44]	; 0x2c
 800c3e6:	2100      	movs	r1, #0
 800c3e8:	fbbb f2f2 	udiv	r2, fp, r2
 800c3ec:	1a20      	subs	r0, r4, r0
 800c3ee:	4680      	mov	r8, r0
 800c3f0:	1c52      	adds	r2, r2, #1
 800c3f2:	fbb0 f3f2 	udiv	r3, r0, r2
 800c3f6:	6872      	ldr	r2, [r6, #4]
 800c3f8:	4658      	mov	r0, fp
 800c3fa:	9301      	str	r3, [sp, #4]
 800c3fc:	17d3      	asrs	r3, r2, #31
 800c3fe:	f019 f91b 	bl	8025638 <__aeabi_uldivmod>
 800c402:	1c42      	adds	r2, r0, #1
 800c404:	f161 33ff 	sbc.w	r3, r1, #4294967295	; 0xffffffff
 800c408:	4640      	mov	r0, r8
 800c40a:	2100      	movs	r1, #0
 800c40c:	f019 f914 	bl	8025638 <__aeabi_uldivmod>
 800c410:	f8d6 c014 	ldr.w	ip, [r6, #20]
 800c414:	4692      	mov	sl, r2
 800c416:	6872      	ldr	r2, [r6, #4]
 800c418:	fbac 890a 	umull	r8, r9, ip, sl
 800c41c:	f896 e008 	ldrb.w	lr, [r6, #8]
 800c420:	17d3      	asrs	r3, r2, #31
 800c422:	fba2 0108 	umull	r0, r1, r2, r8
 800c426:	68bf      	ldr	r7, [r7, #8]
 800c428:	fb02 1109 	mla	r1, r2, r9, r1
 800c42c:	fb03 1108 	mla	r1, r3, r8, r1
 800c430:	fbae 230b 	umull	r2, r3, lr, fp
 800c434:	fba7 890a 	umull	r8, r9, r7, sl
 800c438:	015b      	lsls	r3, r3, #5
 800c43a:	ea43 63d2 	orr.w	r3, r3, r2, lsr #27
 800c43e:	0152      	lsls	r2, r2, #5
 800c440:	f019 f8fa 	bl	8025638 <__aeabi_uldivmod>
 800c444:	9000      	str	r0, [sp, #0]
 800c446:	6872      	ldr	r2, [r6, #4]
 800c448:	fba2 0108 	umull	r0, r1, r2, r8
 800c44c:	fb02 1109 	mla	r1, r2, r9, r1
 800c450:	17d3      	asrs	r3, r2, #31
 800c452:	465a      	mov	r2, fp
 800c454:	fb03 1108 	mla	r1, r3, r8, r1
 800c458:	2300      	movs	r3, #0
 800c45a:	f019 f8ed 	bl	8025638 <__aeabi_uldivmod>
 800c45e:	4602      	mov	r2, r0
 800c460:	f896 0020 	ldrb.w	r0, [r6, #32]
 800c464:	2801      	cmp	r0, #1
 800c466:	d109      	bne.n	800c47c <??llhwc_slptmr_set_4>
 800c468:	7a33      	ldrb	r3, [r6, #8]
 800c46a:	6971      	ldr	r1, [r6, #20]
 800c46c:	1e64      	subs	r4, r4, #1
 800c46e:	015b      	lsls	r3, r3, #5
 800c470:	fbb1 f0f3 	udiv	r0, r1, r3
 800c474:	1940      	adds	r0, r0, r5
 800c476:	9d00      	ldr	r5, [sp, #0]
 800c478:	1b45      	subs	r5, r0, r5
 800c47a:	e002      	b.n	800c482 <??llhwc_slptmr_set_5>

0800c47c <??llhwc_slptmr_set_4>:
 800c47c:	b908      	cbnz	r0, 800c482 <??llhwc_slptmr_set_5>
 800c47e:	9800      	ldr	r0, [sp, #0]
 800c480:	1945      	adds	r5, r0, r5

0800c482 <??llhwc_slptmr_set_5>:
 800c482:	9901      	ldr	r1, [sp, #4]
 800c484:	6970      	ldr	r0, [r6, #20]
 800c486:	fb07 5501 	mla	r5, r7, r1, r5
 800c48a:	2100      	movs	r1, #0
 800c48c:	1955      	adds	r5, r2, r5
 800c48e:	f8df 2ae0 	ldr.w	r2, [pc, #2784]	; 800cf70 <??DataTable30>
 800c492:	fbe0 2102 	umlal	r2, r1, r0, r2
 800c496:	0ac8      	lsrs	r0, r1, #11

0800c498 <??llhwc_slptmr_set_6>:
 800c498:	42a8      	cmp	r0, r5
 800c49a:	bf3c      	itt	cc
 800c49c:	1a2d      	subcc	r5, r5, r0
 800c49e:	1c64      	addcc	r4, r4, #1
 800c4a0:	d3fa      	bcc.n	800c498 <??llhwc_slptmr_set_6>
 800c4a2:	e02b      	b.n	800c4fc <??llhwc_slptmr_set_3>

0800c4a4 <??llhwc_slptmr_set_0>:
 800c4a4:	2802      	cmp	r0, #2
 800c4a6:	d129      	bne.n	800c4fc <??llhwc_slptmr_set_3>
 800c4a8:	9805      	ldr	r0, [sp, #20]
 800c4aa:	f44f 72fa 	mov.w	r2, #500	; 0x1f4
 800c4ae:	2300      	movs	r3, #0
 800c4b0:	6806      	ldr	r6, [r0, #0]
 800c4b2:	0df7      	lsrs	r7, r6, #23
 800c4b4:	4639      	mov	r1, r7
 800c4b6:	0270      	lsls	r0, r6, #9
 800c4b8:	f019 f8be 	bl	8025638 <__aeabi_uldivmod>
 800c4bc:	4604      	mov	r4, r0
 800c4be:	0270      	lsls	r0, r6, #9
 800c4c0:	4639      	mov	r1, r7
 800c4c2:	f44f 72fa 	mov.w	r2, #500	; 0x1f4
 800c4c6:	2300      	movs	r3, #0
 800c4c8:	f019 f8b6 	bl	8025638 <__aeabi_uldivmod>
 800c4cc:	261e      	movs	r6, #30
 800c4ce:	fba6 0102 	umull	r0, r1, r6, r2
 800c4d2:	f44f 72fa 	mov.w	r2, #500	; 0x1f4
 800c4d6:	fb06 1103 	mla	r1, r6, r3, r1
 800c4da:	2300      	movs	r3, #0
 800c4dc:	f019 f8ac 	bl	8025638 <__aeabi_uldivmod>
 800c4e0:	1945      	adds	r5, r0, r5
 800c4e2:	2d1e      	cmp	r5, #30
 800c4e4:	d90a      	bls.n	800c4fc <??llhwc_slptmr_set_3>
 800c4e6:	1e69      	subs	r1, r5, #1
 800c4e8:	f8df 2bac 	ldr.w	r2, [pc, #2988]	; 800d098 <??DataTable34>
 800c4ec:	fba1 2002 	umull	r2, r0, r1, r2
 800c4f0:	0900      	lsrs	r0, r0, #4
 800c4f2:	eba0 1300 	sub.w	r3, r0, r0, lsl #4
 800c4f6:	1904      	adds	r4, r0, r4
 800c4f8:	eb05 0543 	add.w	r5, r5, r3, lsl #1

0800c4fc <??llhwc_slptmr_set_3>:
 800c4fc:	f89d 6010 	ldrb.w	r6, [sp, #16]
 800c500:	0030      	movs	r0, r6
 800c502:	d11a      	bne.n	800c53a <??llhwc_slptmr_set_7>
 800c504:	f8df 259c 	ldr.w	r2, [pc, #1436]	; 800caa4 <??DataTable29>
 800c508:	6a50      	ldr	r0, [r2, #36]	; 0x24
 800c50a:	2801      	cmp	r0, #1
 800c50c:	d002      	beq.n	800c514 <??llhwc_slptmr_set_8>
 800c50e:	9805      	ldr	r0, [sp, #20]
 800c510:	6801      	ldr	r1, [r0, #0]
 800c512:	6211      	str	r1, [r2, #32]

0800c514 <??llhwc_slptmr_set_8>:
 800c514:	9b05      	ldr	r3, [sp, #20]
 800c516:	f102 070c 	add.w	r7, r2, #12
 800c51a:	e9d3 0100 	ldrd	r0, r1, [r3]
 800c51e:	6154      	str	r4, [r2, #20]
 800c520:	6195      	str	r5, [r2, #24]
 800c522:	e9c7 0100 	strd	r0, r1, [r7]
 800c526:	f8df 0b74 	ldr.w	r0, [pc, #2932]	; 800d09c <??DataTable34_1>
 800c52a:	6005      	str	r5, [r0, #0]
 800c52c:	f002 f831 	bl	800e592 <llhwc_phy_get_phy_strt_state>
 800c530:	b978      	cbnz	r0, 800c552 <??llhwc_slptmr_set_9>
 800c532:	2101      	movs	r1, #1
 800c534:	f001 fc9f 	bl	800de76 <llhwc_phy_strt_stp>
 800c538:	e00b      	b.n	800c552 <??llhwc_slptmr_set_9>

0800c53a <??llhwc_slptmr_set_7>:
 800c53a:	f8df 057c 	ldr.w	r0, [pc, #1404]	; 800cab8 <??DataTable29_5>
 800c53e:	6900      	ldr	r0, [r0, #16]
 800c540:	1cc0      	adds	r0, r0, #3
 800c542:	f000 f859 	bl	800c5f8 <llhwc_slptmr_polling>
 800c546:	f8df 0b58 	ldr.w	r0, [pc, #2904]	; 800d0a0 <??DataTable34_2>
 800c54a:	6801      	ldr	r1, [r0, #0]
 800c54c:	f021 0120 	bic.w	r1, r1, #32
 800c550:	6001      	str	r1, [r0, #0]

0800c552 <??llhwc_slptmr_set_9>:
 800c552:	f89d 5018 	ldrb.w	r5, [sp, #24]
 800c556:	f8df 2b48 	ldr.w	r2, [pc, #2888]	; 800d0a0 <??DataTable34_2>
 800c55a:	6890      	ldr	r0, [r2, #8]
 800c55c:	2100      	movs	r1, #0
 800c55e:	f005 0501 	and.w	r5, r5, #1
 800c562:	1d00      	adds	r0, r0, #4
 800c564:	f141 0100 	adc.w	r1, r1, #0
 800c568:	428d      	cmp	r5, r1
 800c56a:	d805      	bhi.n	800c578 <??llhwc_slptmr_set_10>
 800c56c:	bf28      	it	cs
 800c56e:	4284      	cmpcs	r4, r0
 800c570:	d202      	bcs.n	800c578 <??llhwc_slptmr_set_10>
 800c572:	2e01      	cmp	r6, #1
 800c574:	bf08      	it	eq
 800c576:	4604      	moveq	r4, r0

0800c578 <??llhwc_slptmr_set_10>:
 800c578:	a802      	add	r0, sp, #8
 800c57a:	f850 2026 	ldr.w	r2, [r0, r6, lsl #2]
 800c57e:	f8df 1544 	ldr.w	r1, [pc, #1348]	; 800cac4 <??DataTable29_8>
 800c582:	eb06 0346 	add.w	r3, r6, r6, lsl #1
 800c586:	508c      	str	r4, [r1, r2]
 800c588:	a215      	add	r2, pc, #84	; (adr r2, 800c5e0 <cmpr_units_en_regs>)
 800c58a:	0098      	lsls	r0, r3, #2
 800c58c:	1d14      	adds	r4, r2, #4
 800c58e:	5823      	ldr	r3, [r4, r0]
 800c590:	1814      	adds	r4, r2, r0
 800c592:	6825      	ldr	r5, [r4, #0]
 800c594:	3208      	adds	r2, #8
 800c596:	2701      	movs	r7, #1
 800c598:	594e      	ldr	r6, [r1, r5]
 800c59a:	5810      	ldr	r0, [r2, r0]
 800c59c:	6824      	ldr	r4, [r4, #0]
 800c59e:	439e      	bics	r6, r3
 800c5a0:	4087      	lsls	r7, r0
 800c5a2:	403b      	ands	r3, r7
 800c5a4:	4333      	orrs	r3, r6
 800c5a6:	510b      	str	r3, [r1, r4]
 800c5a8:	f007 ff57 	bl	801445a <os_enable_isr>
 800c5ac:	2018      	movs	r0, #24
 800c5ae:	f7f3 fe3d 	bl	800022c <bsp_debug_gpio_clear>
 800c5b2:	b007      	add	sp, #28
 800c5b4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0800c5b8 <?_1>:
 800c5b8:	0010 0000 0018 0000                         ........

0800c5c0 <llhwc_slptmr_stop>:
 800c5c0:	eb00 0140 	add.w	r1, r0, r0, lsl #1
 800c5c4:	b470      	push	{r4, r5, r6}
 800c5c6:	0089      	lsls	r1, r1, #2
 800c5c8:	a305      	add	r3, pc, #20	; (adr r3, 800c5e0 <cmpr_units_en_regs>)
 800c5ca:	585c      	ldr	r4, [r3, r1]
 800c5cc:	f8df 24f4 	ldr.w	r2, [pc, #1268]	; 800cac4 <??DataTable29_8>
 800c5d0:	185e      	adds	r6, r3, r1
 800c5d2:	5915      	ldr	r5, [r2, r4]
 800c5d4:	6870      	ldr	r0, [r6, #4]
 800c5d6:	5859      	ldr	r1, [r3, r1]
 800c5d8:	4385      	bics	r5, r0
 800c5da:	5055      	str	r5, [r2, r1]
 800c5dc:	bc70      	pop	{r4, r5, r6}
 800c5de:	4770      	bx	lr

0800c5e0 <cmpr_units_en_regs>:
 800c5e0:	000c 0000 0001 0000 0000 0000 000c 0000     ................
 800c5f0:	0040 0000 0006 0000                         @.......

0800c5f8 <llhwc_slptmr_polling>:
 800c5f8:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 800c5fc:	4681      	mov	r9, r0
 800c5fe:	2500      	movs	r5, #0
 800c600:	f007 ff29 	bl	8014456 <os_disable_isr>
 800c604:	f44f 78fa 	mov.w	r8, #500	; 0x1f4
 800c608:	f8df 64a0 	ldr.w	r6, [pc, #1184]	; 800caac <??DataTable29_2>
 800c60c:	f8df 4498 	ldr.w	r4, [pc, #1176]	; 800caa8 <??DataTable29_1>
 800c610:	f8df 7490 	ldr.w	r7, [pc, #1168]	; 800caa4 <??DataTable29>

0800c614 <??llhwc_slptmr_polling_0>:
 800c614:	2019      	movs	r0, #25
 800c616:	f7f3 fe07 	bl	8000228 <bsp_debug_gpio_set>
 800c61a:	f897 0041 	ldrb.w	r0, [r7, #65]	; 0x41
 800c61e:	2801      	cmp	r0, #1
 800c620:	d123      	bne.n	800c66a <??llhwc_slptmr_polling_1>
 800c622:	462a      	mov	r2, r5

0800c624 <??llhwc_slptmr_polling_2>:
 800c624:	6823      	ldr	r3, [r4, #0]
 800c626:	7d30      	ldrb	r0, [r6, #20]
 800c628:	1c5b      	adds	r3, r3, #1
 800c62a:	b908      	cbnz	r0, 800c630 <??llhwc_slptmr_polling_3>
 800c62c:	461a      	mov	r2, r3
 800c62e:	e014      	b.n	800c65a <??llhwc_slptmr_polling_4>

0800c630 <??llhwc_slptmr_polling_3>:
 800c630:	2801      	cmp	r0, #1
 800c632:	d10a      	bne.n	800c64a <??llhwc_slptmr_polling_5>
 800c634:	6831      	ldr	r1, [r6, #0]
 800c636:	f8df 2478 	ldr.w	r2, [pc, #1144]	; 800cab0 <??DataTable29_3>
 800c63a:	fba1 0103 	umull	r0, r1, r1, r3
 800c63e:	2300      	movs	r3, #0
 800c640:	f018 fffa 	bl	8025638 <__aeabi_uldivmod>
 800c644:	6932      	ldr	r2, [r6, #16]
 800c646:	1a82      	subs	r2, r0, r2
 800c648:	e007      	b.n	800c65a <??llhwc_slptmr_polling_4>

0800c64a <??llhwc_slptmr_polling_5>:
 800c64a:	2802      	cmp	r0, #2
 800c64c:	d105      	bne.n	800c65a <??llhwc_slptmr_polling_4>
 800c64e:	4618      	mov	r0, r3
 800c650:	fba8 2300 	umull	r2, r3, r8, r0
 800c654:	0a52      	lsrs	r2, r2, #9
 800c656:	ea42 52c3 	orr.w	r2, r2, r3, lsl #23

0800c65a <??llhwc_slptmr_polling_4>:
 800c65a:	6c78      	ldr	r0, [r7, #68]	; 0x44
 800c65c:	1a11      	subs	r1, r2, r0
 800c65e:	2901      	cmp	r1, #1
 800c660:	d9e0      	bls.n	800c624 <??llhwc_slptmr_polling_2>
 800c662:	2000      	movs	r0, #0
 800c664:	4615      	mov	r5, r2
 800c666:	6478      	str	r0, [r7, #68]	; 0x44
 800c668:	e000      	b.n	800c66c <??llhwc_slptmr_polling_6>

0800c66a <??llhwc_slptmr_polling_1>:
 800c66a:	2500      	movs	r5, #0

0800c66c <??llhwc_slptmr_polling_6>:
 800c66c:	2019      	movs	r0, #25
 800c66e:	f7f3 fddd 	bl	800022c <bsp_debug_gpio_clear>
 800c672:	454d      	cmp	r5, r9
 800c674:	d3ce      	bcc.n	800c614 <??llhwc_slptmr_polling_0>
 800c676:	e8bd 43f1 	ldmia.w	sp!, {r0, r4, r5, r6, r7, r8, r9, lr}
 800c67a:	f007 beee 	b.w	801445a <os_enable_isr>

0800c67e <llhwc_cmn_curb_sleep_state>:
 800c67e:	b570      	push	{r4, r5, r6, lr}
 800c680:	f8df 6420 	ldr.w	r6, [pc, #1056]	; 800caa4 <??DataTable29>
 800c684:	f896 1043 	ldrb.w	r1, [r6, #67]	; 0x43
 800c688:	2500      	movs	r5, #0
 800c68a:	4604      	mov	r4, r0
 800c68c:	4288      	cmp	r0, r1
 800c68e:	d026      	beq.n	800c6de <??llhwc_cmn_curb_sleep_state_0>
 800c690:	7f30      	ldrb	r0, [r6, #28]
 800c692:	b910      	cbnz	r0, 800c69a <??llhwc_cmn_curb_sleep_state_1>
 800c694:	f04f 35ff 	mov.w	r5, #4294967295	; 0xffffffff
 800c698:	e021      	b.n	800c6de <??llhwc_cmn_curb_sleep_state_0>

0800c69a <??llhwc_cmn_curb_sleep_state_1>:
 800c69a:	2c01      	cmp	r4, #1
 800c69c:	d11d      	bne.n	800c6da <??llhwc_cmn_curb_sleep_state_2>
 800c69e:	f001 ff78 	bl	800e592 <llhwc_phy_get_phy_strt_state>
 800c6a2:	b910      	cbnz	r0, 800c6aa <??llhwc_cmn_curb_sleep_state_3>
 800c6a4:	2100      	movs	r1, #0
 800c6a6:	f001 fbe6 	bl	800de76 <llhwc_phy_strt_stp>

0800c6aa <??llhwc_cmn_curb_sleep_state_3>:
 800c6aa:	7f30      	ldrb	r0, [r6, #28]
 800c6ac:	2801      	cmp	r0, #1
 800c6ae:	d114      	bne.n	800c6da <??llhwc_cmn_curb_sleep_state_2>
 800c6b0:	f8df 0400 	ldr.w	r0, [pc, #1024]	; 800cab4 <??DataTable29_4>
 800c6b4:	6801      	ldr	r1, [r0, #0]
 800c6b6:	0909      	lsrs	r1, r1, #4
 800c6b8:	f001 017f 	and.w	r1, r1, #127	; 0x7f
 800c6bc:	290f      	cmp	r1, #15
 800c6be:	d00a      	beq.n	800c6d6 <??llhwc_cmn_curb_sleep_state_4>
 800c6c0:	6802      	ldr	r2, [r0, #0]
 800c6c2:	2102      	movs	r1, #2
 800c6c4:	f361 0202 	bfi	r2, r1, #0, #3
 800c6c8:	6002      	str	r2, [r0, #0]

0800c6ca <??llhwc_cmn_curb_sleep_state_5>:
 800c6ca:	6801      	ldr	r1, [r0, #0]
 800c6cc:	0909      	lsrs	r1, r1, #4
 800c6ce:	f001 017f 	and.w	r1, r1, #127	; 0x7f
 800c6d2:	290f      	cmp	r1, #15
 800c6d4:	d1f9      	bne.n	800c6ca <??llhwc_cmn_curb_sleep_state_5>

0800c6d6 <??llhwc_cmn_curb_sleep_state_4>:
 800c6d6:	2002      	movs	r0, #2
 800c6d8:	7730      	strb	r0, [r6, #28]

0800c6da <??llhwc_cmn_curb_sleep_state_2>:
 800c6da:	f886 4043 	strb.w	r4, [r6, #67]	; 0x43

0800c6de <??llhwc_cmn_curb_sleep_state_0>:
 800c6de:	4628      	mov	r0, r5
 800c6e0:	bd70      	pop	{r4, r5, r6, pc}
	...

0800c6e4 <llhwc_pwr_switch>:
 800c6e4:	b43c      	push	{r2, r3, r4, r5}
 800c6e6:	bf00      	nop
 800c6e8:	a213      	add	r2, pc, #76	; (adr r2, 800c738 <?_2>)
 800c6ea:	f8df 13b8 	ldr.w	r1, [pc, #952]	; 800caa4 <??DataTable29>
 800c6ee:	e9d2 3400 	ldrd	r3, r4, [r2]
 800c6f2:	7f0d      	ldrb	r5, [r1, #28]
 800c6f4:	e9cd 3400 	strd	r3, r4, [sp]
 800c6f8:	4285      	cmp	r5, r0
 800c6fa:	d01a      	beq.n	800c732 <??llhwc_pwr_switch_0>
 800c6fc:	f891 2043 	ldrb.w	r2, [r1, #67]	; 0x43
 800c700:	2a01      	cmp	r2, #1
 800c702:	bf08      	it	eq
 800c704:	2801      	cmpeq	r0, #1
 800c706:	d014      	beq.n	800c732 <??llhwc_pwr_switch_0>
 800c708:	f8df 23a8 	ldr.w	r2, [pc, #936]	; 800cab4 <??DataTable29_4>
 800c70c:	6814      	ldr	r4, [r2, #0]
 800c70e:	f81d 3000 	ldrb.w	r3, [sp, r0]
 800c712:	0924      	lsrs	r4, r4, #4
 800c714:	f004 047f 	and.w	r4, r4, #127	; 0x7f
 800c718:	429c      	cmp	r4, r3
 800c71a:	d009      	beq.n	800c730 <??llhwc_pwr_switch_1>
 800c71c:	6814      	ldr	r4, [r2, #0]
 800c71e:	f360 0402 	bfi	r4, r0, #0, #3
 800c722:	6014      	str	r4, [r2, #0]

0800c724 <??llhwc_pwr_switch_2>:
 800c724:	6814      	ldr	r4, [r2, #0]
 800c726:	0924      	lsrs	r4, r4, #4
 800c728:	f004 047f 	and.w	r4, r4, #127	; 0x7f
 800c72c:	429c      	cmp	r4, r3
 800c72e:	d1f9      	bne.n	800c724 <??llhwc_pwr_switch_2>

0800c730 <??llhwc_pwr_switch_1>:
 800c730:	7708      	strb	r0, [r1, #28]

0800c732 <??llhwc_pwr_switch_0>:
 800c732:	2000      	movs	r0, #0
 800c734:	bc36      	pop	{r1, r2, r4, r5}
 800c736:	4770      	bx	lr

0800c738 <?_2>:
 800c738:	0301 230f 172f 3f1f                         ...#/..?

0800c740 <ll_cmn_clr_isr>:
 800c740:	b538      	push	{r3, r4, r5, lr}
 800c742:	2013      	movs	r0, #19
 800c744:	f7f3 fd70 	bl	8000228 <bsp_debug_gpio_set>
 800c748:	f8df 4954 	ldr.w	r4, [pc, #2388]	; 800d0a0 <??DataTable34_2>
 800c74c:	6920      	ldr	r0, [r4, #16]
 800c74e:	f040 0080 	orr.w	r0, r0, #128	; 0x80
 800c752:	6120      	str	r0, [r4, #16]
 800c754:	6920      	ldr	r0, [r4, #16]
 800c756:	f020 0080 	bic.w	r0, r0, #128	; 0x80
 800c75a:	6120      	str	r0, [r4, #16]
 800c75c:	6820      	ldr	r0, [r4, #0]
 800c75e:	f3c0 00c0 	ubfx	r0, r0, #3, #1
 800c762:	b198      	cbz	r0, 800c78c <??ll_cmn_clr_isr_0>
 800c764:	6820      	ldr	r0, [r4, #0]
 800c766:	f8df 5350 	ldr.w	r5, [pc, #848]	; 800cab8 <??DataTable29_5>
 800c76a:	f020 0040 	bic.w	r0, r0, #64	; 0x40
 800c76e:	6020      	str	r0, [r4, #0]
 800c770:	6821      	ldr	r1, [r4, #0]
 800c772:	f041 0110 	orr.w	r1, r1, #16
 800c776:	6021      	str	r1, [r4, #0]
 800c778:	6820      	ldr	r0, [r4, #0]
 800c77a:	f020 0010 	bic.w	r0, r0, #16
 800c77e:	6020      	str	r0, [r4, #0]
 800c780:	f105 0010 	add.w	r0, r5, #16
 800c784:	f7ff fc89 	bl	800c09a <llhwc_slptmr_get>
 800c788:	2001      	movs	r0, #1
 800c78a:	7328      	strb	r0, [r5, #12]

0800c78c <??ll_cmn_clr_isr_0>:
 800c78c:	6820      	ldr	r0, [r4, #0]
 800c78e:	f8df 5bc4 	ldr.w	r5, [pc, #3012]	; 800d354 <??DataTable39>
 800c792:	f3c0 2040 	ubfx	r0, r0, #9, #1
 800c796:	b190      	cbz	r0, 800c7be <??ll_cmn_clr_isr_1>
 800c798:	2016      	movs	r0, #22
 800c79a:	f7f3 fd49 	bl	8000230 <bsp_debug_gpio_toggle>
 800c79e:	2001      	movs	r0, #1
 800c7a0:	49c5      	ldr	r1, [pc, #788]	; (800cab8 <??DataTable29_5>)
 800c7a2:	7348      	strb	r0, [r1, #13]
 800c7a4:	6822      	ldr	r2, [r4, #0]
 800c7a6:	0852      	lsrs	r2, r2, #1
 800c7a8:	0052      	lsls	r2, r2, #1
 800c7aa:	6022      	str	r2, [r4, #0]
 800c7ac:	6820      	ldr	r0, [r4, #0]
 800c7ae:	f040 0080 	orr.w	r0, r0, #128	; 0x80
 800c7b2:	6020      	str	r0, [r4, #0]
 800c7b4:	6821      	ldr	r1, [r4, #0]
 800c7b6:	f021 0180 	bic.w	r1, r1, #128	; 0x80
 800c7ba:	6021      	str	r1, [r4, #0]
 800c7bc:	e012      	b.n	800c7e4 <??ll_cmn_clr_isr_2>

0800c7be <??ll_cmn_clr_isr_1>:
 800c7be:	6828      	ldr	r0, [r5, #0]
 800c7c0:	f3c0 1000 	ubfx	r0, r0, #4, #1
 800c7c4:	b170      	cbz	r0, 800c7e4 <??ll_cmn_clr_isr_2>
 800c7c6:	68a8      	ldr	r0, [r5, #8]
 800c7c8:	2101      	movs	r1, #1
 800c7ca:	f040 0010 	orr.w	r0, r0, #16
 800c7ce:	60a8      	str	r0, [r5, #8]
 800c7d0:	6868      	ldr	r0, [r5, #4]
 800c7d2:	f040 0010 	orr.w	r0, r0, #16
 800c7d6:	6068      	str	r0, [r5, #4]
 800c7d8:	6868      	ldr	r0, [r5, #4]
 800c7da:	f020 0010 	bic.w	r0, r0, #16
 800c7de:	6068      	str	r0, [r5, #4]
 800c7e0:	48b5      	ldr	r0, [pc, #724]	; (800cab8 <??DataTable29_5>)
 800c7e2:	7341      	strb	r1, [r0, #13]

0800c7e4 <??ll_cmn_clr_isr_2>:
 800c7e4:	6828      	ldr	r0, [r5, #0]
 800c7e6:	f3c0 1040 	ubfx	r0, r0, #5, #1
 800c7ea:	b170      	cbz	r0, 800c80a <??ll_cmn_clr_isr_3>
 800c7ec:	68a8      	ldr	r0, [r5, #8]
 800c7ee:	2101      	movs	r1, #1
 800c7f0:	f040 0020 	orr.w	r0, r0, #32
 800c7f4:	60a8      	str	r0, [r5, #8]
 800c7f6:	6868      	ldr	r0, [r5, #4]
 800c7f8:	f040 0020 	orr.w	r0, r0, #32
 800c7fc:	6068      	str	r0, [r5, #4]
 800c7fe:	6868      	ldr	r0, [r5, #4]
 800c800:	f020 0020 	bic.w	r0, r0, #32
 800c804:	6068      	str	r0, [r5, #4]
 800c806:	48ac      	ldr	r0, [pc, #688]	; (800cab8 <??DataTable29_5>)
 800c808:	72c1      	strb	r1, [r0, #11]

0800c80a <??ll_cmn_clr_isr_3>:
 800c80a:	2013      	movs	r0, #19
 800c80c:	e03a      	b.n	800c884 <?Subroutine0>
	...

0800c810 <ll_isr>:
 800c810:	b580      	push	{r7, lr}
 800c812:	2017      	movs	r0, #23
 800c814:	f7f3 fd08 	bl	8000228 <bsp_debug_gpio_set>
 800c818:	f7ff ff92 	bl	800c740 <ll_cmn_clr_isr>
 800c81c:	2001      	movs	r0, #1
 800c81e:	f006 f871 	bl	8012904 <os_process_isr>
 800c822:	2017      	movs	r0, #23
 800c824:	f000 bd62 	b.w	800d2ec <?Subroutine1>

0800c828 <ll_lw_prio_isr>:
 800c828:	2002      	movs	r0, #2
 800c82a:	f006 b86b 	b.w	8012904 <os_process_isr>
	...

0800c830 <ll_cmn_hg_isr>:
 800c830:	b538      	push	{r3, r4, r5, lr}
 800c832:	48a0      	ldr	r0, [pc, #640]	; (800cab4 <??DataTable29_4>)
 800c834:	6804      	ldr	r4, [r0, #0]
 800c836:	4da0      	ldr	r5, [pc, #640]	; (800cab8 <??DataTable29_5>)
 800c838:	2101      	movs	r1, #1
 800c83a:	7229      	strb	r1, [r5, #8]
 800c83c:	2014      	movs	r0, #20
 800c83e:	f004 0407 	and.w	r4, r4, #7
 800c842:	f7f3 fcf1 	bl	8000228 <bsp_debug_gpio_set>
 800c846:	2c02      	cmp	r4, #2
 800c848:	bf18      	it	ne
 800c84a:	2c04      	cmpne	r4, #4
 800c84c:	d104      	bne.n	800c858 <??ll_cmn_hg_isr_0>
 800c84e:	4995      	ldr	r1, [pc, #596]	; (800caa4 <??DataTable29>)
 800c850:	684a      	ldr	r2, [r1, #4]
 800c852:	f105 000d 	add.w	r0, r5, #13
 800c856:	4790      	blx	r2

0800c858 <??ll_cmn_hg_isr_0>:
 800c858:	f006 f862 	bl	8012920 <os_wrapper_is_rtos_used>
 800c85c:	b988      	cbnz	r0, 800c882 <??ll_cmn_hg_isr_1>
 800c85e:	7928      	ldrb	r0, [r5, #4]
 800c860:	b918      	cbnz	r0, 800c86a <??ll_cmn_hg_isr_2>
 800c862:	2002      	movs	r0, #2
 800c864:	f006 f84e 	bl	8012904 <os_process_isr>
 800c868:	e00b      	b.n	800c882 <??ll_cmn_hg_isr_1>

0800c86a <??ll_cmn_hg_isr_2>:
 800c86a:	2801      	cmp	r0, #1
 800c86c:	d109      	bne.n	800c882 <??ll_cmn_hg_isr_1>
 800c86e:	7b28      	ldrb	r0, [r5, #12]
 800c870:	2801      	cmp	r0, #1
 800c872:	d103      	bne.n	800c87c <??ll_cmn_hg_isr_3>
 800c874:	f7f8 ffba 	bl	80057ec <os_timer_is_any_near_sw_timer_hg_prio>
 800c878:	2801      	cmp	r0, #1
 800c87a:	d000      	beq.n	800c87e <??ll_cmn_hg_isr_4>

0800c87c <??ll_cmn_hg_isr_3>:
 800c87c:	2000      	movs	r0, #0

0800c87e <??ll_cmn_hg_isr_4>:
 800c87e:	f7f3 fcbb 	bl	80001f8 <bsp_switch_to_lw_isr>

0800c882 <??ll_cmn_hg_isr_1>:
 800c882:	2014      	movs	r0, #20

0800c884 <?Subroutine0>:
 800c884:	e8bd 4032 	ldmia.w	sp!, {r1, r4, r5, lr}
 800c888:	f7f3 bcd0 	b.w	800022c <bsp_debug_gpio_clear>

0800c88c <ll_cmn_lw_isr>:
 800c88c:	b538      	push	{r3, r4, r5, lr}
 800c88e:	f8df 5b40 	ldr.w	r5, [pc, #2880]	; 800d3d0 <??DataTable40>
 800c892:	2015      	movs	r0, #21
 800c894:	f7f3 fcc8 	bl	8000228 <bsp_debug_gpio_set>
 800c898:	6828      	ldr	r0, [r5, #0]
 800c89a:	f04f 31ff 	mov.w	r1, #4294967295	; 0xffffffff
 800c89e:	4c86      	ldr	r4, [pc, #536]	; (800cab8 <??DataTable29_5>)
 800c8a0:	f007 fde1 	bl	8014466 <os_rcrsv_mutex_wait>
 800c8a4:	7aa1      	ldrb	r1, [r4, #10]
 800c8a6:	7a20      	ldrb	r0, [r4, #8]
 800c8a8:	2902      	cmp	r1, #2
 800c8aa:	bfae      	itee	ge
 800c8ac:	2000      	movge	r0, #0
 800c8ae:	2100      	movlt	r1, #0
 800c8b0:	72a1      	strblt	r1, [r4, #10]
 800c8b2:	7260      	strb	r0, [r4, #9]
 800c8b4:	6828      	ldr	r0, [r5, #0]
 800c8b6:	f007 fddc 	bl	8014472 <os_rcrsv_mutex_release>
 800c8ba:	487e      	ldr	r0, [pc, #504]	; (800cab4 <??DataTable29_4>)
 800c8bc:	6805      	ldr	r5, [r0, #0]
 800c8be:	7b20      	ldrb	r0, [r4, #12]
 800c8c0:	f005 0507 	and.w	r5, r5, #7
 800c8c4:	b148      	cbz	r0, 800c8da <??ll_cmn_lw_isr_0>
 800c8c6:	2100      	movs	r1, #0
 800c8c8:	7321      	strb	r1, [r4, #12]
 800c8ca:	4876      	ldr	r0, [pc, #472]	; (800caa4 <??DataTable29>)
 800c8cc:	6802      	ldr	r2, [r0, #0]
 800c8ce:	4790      	blx	r2
 800c8d0:	7aa0      	ldrb	r0, [r4, #10]
 800c8d2:	2100      	movs	r1, #0
 800c8d4:	7261      	strb	r1, [r4, #9]
 800c8d6:	1c40      	adds	r0, r0, #1
 800c8d8:	72a0      	strb	r0, [r4, #10]

0800c8da <??ll_cmn_lw_isr_0>:
 800c8da:	7ae0      	ldrb	r0, [r4, #11]
 800c8dc:	b140      	cbz	r0, 800c8f0 <??ll_cmn_lw_isr_1>
 800c8de:	2100      	movs	r1, #0
 800c8e0:	72e1      	strb	r1, [r4, #11]
 800c8e2:	f000 fd83 	bl	800d3ec <llhwc_cmn_rco_isr>
 800c8e6:	7aa1      	ldrb	r1, [r4, #10]
 800c8e8:	2000      	movs	r0, #0
 800c8ea:	7260      	strb	r0, [r4, #9]
 800c8ec:	1c49      	adds	r1, r1, #1
 800c8ee:	72a1      	strb	r1, [r4, #10]

0800c8f0 <??ll_cmn_lw_isr_1>:
 800c8f0:	2d02      	cmp	r5, #2
 800c8f2:	bf1e      	ittt	ne
 800c8f4:	2d04      	cmpne	r5, #4
 800c8f6:	79a0      	ldrbne	r0, [r4, #6]
 800c8f8:	2802      	cmpne	r0, #2
 800c8fa:	d107      	bne.n	800c90c <??ll_cmn_lw_isr_2>
 800c8fc:	4969      	ldr	r1, [pc, #420]	; (800caa4 <??DataTable29>)
 800c8fe:	688a      	ldr	r2, [r1, #8]
 800c900:	f104 000d 	add.w	r0, r4, #13
 800c904:	4790      	blx	r2
 800c906:	7aa0      	ldrb	r0, [r4, #10]
 800c908:	1c40      	adds	r0, r0, #1
 800c90a:	72a0      	strb	r0, [r4, #10]

0800c90c <??ll_cmn_lw_isr_2>:
 800c90c:	2015      	movs	r0, #21
 800c90e:	e7b9      	b.n	800c884 <?Subroutine0>

0800c910 <get_evnts_time>:
 800c910:	4964      	ldr	r1, [pc, #400]	; (800caa4 <??DataTable29>)
 800c912:	68ca      	ldr	r2, [r1, #12]
 800c914:	6002      	str	r2, [r0, #0]
 800c916:	4770      	bx	lr

0800c918 <get_pwr_domain>:
 800c918:	4862      	ldr	r0, [pc, #392]	; (800caa4 <??DataTable29>)
 800c91a:	7f00      	ldrb	r0, [r0, #28]
 800c91c:	4770      	bx	lr

0800c91e <llhwc_cmn_reg_isr>:
 800c91e:	2801      	cmp	r0, #1
 800c920:	d102      	bne.n	800c928 <??llhwc_cmn_reg_isr_0>
 800c922:	4860      	ldr	r0, [pc, #384]	; (800caa4 <??DataTable29>)
 800c924:	6041      	str	r1, [r0, #4]
 800c926:	4770      	bx	lr

0800c928 <??llhwc_cmn_reg_isr_0>:
 800c928:	2802      	cmp	r0, #2
 800c92a:	bf04      	itt	eq
 800c92c:	485d      	ldreq	r0, [pc, #372]	; (800caa4 <??DataTable29>)
 800c92e:	6081      	streq	r1, [r0, #8]
 800c930:	4770      	bx	lr

0800c932 <llhwc_cmn_set_phy>:
 800c932:	b570      	push	{r4, r5, r6, lr}
 800c934:	4604      	mov	r4, r0
 800c936:	460d      	mov	r5, r1
 800c938:	9e04      	ldr	r6, [sp, #16]
 800c93a:	f8df 0a98 	ldr.w	r0, [pc, #2712]	; 800d3d4 <??DataTable40_1>
 800c93e:	6801      	ldr	r1, [r0, #0]
 800c940:	f365 0102 	bfi	r1, r5, #0, #3
 800c944:	6001      	str	r1, [r0, #0]
 800c946:	b2e9      	uxtb	r1, r5
 800c948:	4620      	mov	r0, r4
 800c94a:	f001 fdee 	bl	800e52a <llhwc_phy_get_ltncy>
 800c94e:	4632      	mov	r2, r6
 800c950:	b2e9      	uxtb	r1, r5
 800c952:	4620      	mov	r0, r4
 800c954:	f001 fda1 	bl	800e49a <llhwc_phy_get_sequenc_ram_ofst>
 800c958:	4852      	ldr	r0, [pc, #328]	; (800caa4 <??DataTable29>)
 800c95a:	f880 5030 	strb.w	r5, [r0, #48]	; 0x30
 800c95e:	f8c0 4032 	str.w	r4, [r0, #50]	; 0x32
 800c962:	bd70      	pop	{r4, r5, r6, pc}

0800c964 <llhwc_cmn_set_phy_reduced>:
 800c964:	b538      	push	{r3, r4, r5, lr}
 800c966:	4604      	mov	r4, r0
 800c968:	460d      	mov	r5, r1
 800c96a:	f8df 0a68 	ldr.w	r0, [pc, #2664]	; 800d3d4 <??DataTable40_1>
 800c96e:	6801      	ldr	r1, [r0, #0]
 800c970:	f365 0102 	bfi	r1, r5, #0, #3
 800c974:	6001      	str	r1, [r0, #0]
 800c976:	b2e9      	uxtb	r1, r5
 800c978:	4620      	mov	r0, r4
 800c97a:	f001 fdd6 	bl	800e52a <llhwc_phy_get_ltncy>
 800c97e:	4849      	ldr	r0, [pc, #292]	; (800caa4 <??DataTable29>)
 800c980:	f880 5030 	strb.w	r5, [r0, #48]	; 0x30
 800c984:	f8c0 4032 	str.w	r4, [r0, #50]	; 0x32
 800c988:	bd31      	pop	{r0, r4, r5, pc}

0800c98a <llhwc_get_hw_phy_latency>:
 800c98a:	b961      	cbnz	r1, 800c9a6 <??llhwc_get_hw_phy_latency_0>
 800c98c:	2801      	cmp	r0, #1
 800c98e:	bf08      	it	eq
 800c990:	f8df 0a44 	ldreq.w	r0, [pc, #2628]	; 800d3d8 <??DataTable40_2>
 800c994:	d010      	beq.n	800c9b8 <??llhwc_get_hw_phy_latency_1>
 800c996:	2802      	cmp	r0, #2
 800c998:	bf08      	it	eq
 800c99a:	f8df 0a40 	ldreq.w	r0, [pc, #2624]	; 800d3dc <??DataTable40_3>
 800c99e:	d00b      	beq.n	800c9b8 <??llhwc_get_hw_phy_latency_1>
 800c9a0:	f8df 1a3c 	ldr.w	r1, [pc, #2620]	; 800d3e0 <??DataTable40_4>
 800c9a4:	e00c      	b.n	800c9c0 <??llhwc_get_hw_phy_latency_2>

0800c9a6 <??llhwc_get_hw_phy_latency_0>:
 800c9a6:	2801      	cmp	r0, #1
 800c9a8:	bf08      	it	eq
 800c9aa:	f8df 0a38 	ldreq.w	r0, [pc, #2616]	; 800d3e4 <??DataTable40_5>
 800c9ae:	d003      	beq.n	800c9b8 <??llhwc_get_hw_phy_latency_1>
 800c9b0:	2802      	cmp	r0, #2
 800c9b2:	d103      	bne.n	800c9bc <??llhwc_get_hw_phy_latency_3>
 800c9b4:	f8df 0c4c 	ldr.w	r0, [pc, #3148]	; 800d604 <??DataTable41>

0800c9b8 <??llhwc_get_hw_phy_latency_1>:
 800c9b8:	7800      	ldrb	r0, [r0, #0]
 800c9ba:	4770      	bx	lr

0800c9bc <??llhwc_get_hw_phy_latency_3>:
 800c9bc:	f8df 1c48 	ldr.w	r1, [pc, #3144]	; 800d608 <??DataTable41_1>

0800c9c0 <??llhwc_get_hw_phy_latency_2>:
 800c9c0:	7808      	ldrb	r0, [r1, #0]
 800c9c2:	4770      	bx	lr

0800c9c4 <llhwc_get_hw_setup_time>:
 800c9c4:	b989      	cbnz	r1, 800c9ea <??llhwc_get_hw_setup_time_0>
 800c9c6:	2801      	cmp	r0, #1
 800c9c8:	d106      	bne.n	800c9d8 <??llhwc_get_hw_setup_time_1>
 800c9ca:	f8df 0a0c 	ldr.w	r0, [pc, #2572]	; 800d3d8 <??DataTable40_2>

0800c9ce <??llhwc_get_hw_setup_time_2>:
 800c9ce:	7800      	ldrb	r0, [r0, #0]

0800c9d0 <??llhwc_get_hw_setup_time_3>:
 800c9d0:	f8df 1d54 	ldr.w	r1, [pc, #3412]	; 800d728 <??DataTable45>
 800c9d4:	6889      	ldr	r1, [r1, #8]
 800c9d6:	e019      	b.n	800ca0c <??llhwc_get_hw_setup_time_4>

0800c9d8 <??llhwc_get_hw_setup_time_1>:
 800c9d8:	2802      	cmp	r0, #2
 800c9da:	bf18      	it	ne
 800c9dc:	f8df 0a00 	ldrne.w	r0, [pc, #2560]	; 800d3e0 <??DataTable40_4>
 800c9e0:	d1f5      	bne.n	800c9ce <??llhwc_get_hw_setup_time_2>
 800c9e2:	f8df 19f8 	ldr.w	r1, [pc, #2552]	; 800d3dc <??DataTable40_3>
 800c9e6:	7808      	ldrb	r0, [r1, #0]
 800c9e8:	e7f2      	b.n	800c9d0 <??llhwc_get_hw_setup_time_3>

0800c9ea <??llhwc_get_hw_setup_time_0>:
 800c9ea:	2801      	cmp	r0, #1
 800c9ec:	bf08      	it	eq
 800c9ee:	f8df 09f4 	ldreq.w	r0, [pc, #2548]	; 800d3e4 <??DataTable40_5>
 800c9f2:	d003      	beq.n	800c9fc <??llhwc_get_hw_setup_time_5>
 800c9f4:	2802      	cmp	r0, #2
 800c9f6:	d003      	beq.n	800ca00 <??llhwc_get_hw_setup_time_6>
 800c9f8:	f8df 0c0c 	ldr.w	r0, [pc, #3084]	; 800d608 <??DataTable41_1>

0800c9fc <??llhwc_get_hw_setup_time_5>:
 800c9fc:	7800      	ldrb	r0, [r0, #0]
 800c9fe:	e002      	b.n	800ca06 <??llhwc_get_hw_setup_time_7>

0800ca00 <??llhwc_get_hw_setup_time_6>:
 800ca00:	f8df 1c00 	ldr.w	r1, [pc, #3072]	; 800d604 <??DataTable41>
 800ca04:	7808      	ldrb	r0, [r1, #0]

0800ca06 <??llhwc_get_hw_setup_time_7>:
 800ca06:	f8df 2d20 	ldr.w	r2, [pc, #3360]	; 800d728 <??DataTable45>
 800ca0a:	68d1      	ldr	r1, [r2, #12]

0800ca0c <??llhwc_get_hw_setup_time_4>:
 800ca0c:	1840      	adds	r0, r0, r1
 800ca0e:	1c80      	adds	r0, r0, #2
 800ca10:	4770      	bx	lr

0800ca12 <llhw_get_opt_rssi_value>:
 800ca12:	2000      	movs	r0, #0
 800ca14:	4770      	bx	lr

0800ca16 <llhwc_rgstr_func>:
 800ca16:	b110      	cbz	r0, 800ca1e <??llhwc_rgstr_func_0>
 800ca18:	2803      	cmp	r0, #3
 800ca1a:	d003      	beq.n	800ca24 <??llhwc_rgstr_func_1>
 800ca1c:	4770      	bx	lr

0800ca1e <??llhwc_rgstr_func_0>:
 800ca1e:	4821      	ldr	r0, [pc, #132]	; (800caa4 <??DataTable29>)
 800ca20:	6381      	str	r1, [r0, #56]	; 0x38
 800ca22:	4770      	bx	lr

0800ca24 <??llhwc_rgstr_func_1>:
 800ca24:	4a1f      	ldr	r2, [pc, #124]	; (800caa4 <??DataTable29>)
 800ca26:	63d1      	str	r1, [r2, #60]	; 0x3c
 800ca28:	4770      	bx	lr

0800ca2a <llhwc_wait_for_evnt_on_air>:
 800ca2a:	4922      	ldr	r1, [pc, #136]	; (800cab4 <??DataTable29_4>)
 800ca2c:	b538      	push	{r3, r4, r5, lr}
 800ca2e:	680d      	ldr	r5, [r1, #0]
 800ca30:	201c      	movs	r0, #28
 800ca32:	2400      	movs	r4, #0
 800ca34:	f005 0507 	and.w	r5, r5, #7
 800ca38:	f7f3 fbf6 	bl	8000228 <bsp_debug_gpio_set>
 800ca3c:	2d02      	cmp	r5, #2
 800ca3e:	bf18      	it	ne
 800ca40:	2d04      	cmpne	r5, #4
 800ca42:	d109      	bne.n	800ca58 <??llhwc_wait_for_evnt_on_air_0>
 800ca44:	f8df 4d54 	ldr.w	r4, [pc, #3412]	; 800d79c <??DataTable47>
 800ca48:	6ba0      	ldr	r0, [r4, #56]	; 0x38
 800ca4a:	b100      	cbz	r0, 800ca4e <??llhwc_wait_for_evnt_on_air_1>
 800ca4c:	2001      	movs	r0, #1

0800ca4e <??llhwc_wait_for_evnt_on_air_1>:
 800ca4e:	f7f3 fbbf 	bl	80001d0 <bsp_assert>
 800ca52:	6ba0      	ldr	r0, [r4, #56]	; 0x38
 800ca54:	4780      	blx	r0
 800ca56:	4604      	mov	r4, r0

0800ca58 <??llhwc_wait_for_evnt_on_air_0>:
 800ca58:	201c      	movs	r0, #28
 800ca5a:	f7f3 fbe7 	bl	800022c <bsp_debug_gpio_clear>
 800ca5e:	4620      	mov	r0, r4
 800ca60:	bd32      	pop	{r1, r4, r5, pc}

0800ca62 <llhwc_cmn_crypto_aes_start>:
 800ca62:	2804      	cmp	r0, #4
 800ca64:	bf08      	it	eq
 800ca66:	2003      	moveq	r0, #3
 800ca68:	d002      	beq.n	800ca70 <??llhwc_cmn_crypto_aes_start_0>
 800ca6a:	2805      	cmp	r0, #5
 800ca6c:	bf08      	it	eq
 800ca6e:	2001      	moveq	r0, #1

0800ca70 <??llhwc_cmn_crypto_aes_start_0>:
 800ca70:	f8df 1d70 	ldr.w	r1, [pc, #3440]	; 800d7e4 <??DataTable48>
 800ca74:	680a      	ldr	r2, [r1, #0]
 800ca76:	f360 0242 	bfi	r2, r0, #1, #2
 800ca7a:	600a      	str	r2, [r1, #0]
 800ca7c:	6808      	ldr	r0, [r1, #0]
 800ca7e:	f040 0001 	orr.w	r0, r0, #1
 800ca82:	6008      	str	r0, [r1, #0]
 800ca84:	4770      	bx	lr

0800ca86 <llhwc_cmn_crypto_aes_done>:
 800ca86:	f8df 0d60 	ldr.w	r0, [pc, #3424]	; 800d7e8 <??DataTable48_1>
 800ca8a:	6801      	ldr	r1, [r0, #0]
 800ca8c:	f041 0104 	orr.w	r1, r1, #4
 800ca90:	6001      	str	r1, [r0, #0]
 800ca92:	6802      	ldr	r2, [r0, #0]
 800ca94:	f022 0204 	bic.w	r2, r2, #4
 800ca98:	6002      	str	r2, [r0, #0]
 800ca9a:	6a41      	ldr	r1, [r0, #36]	; 0x24
 800ca9c:	0849      	lsrs	r1, r1, #1
 800ca9e:	0049      	lsls	r1, r1, #1
 800caa0:	6241      	str	r1, [r0, #36]	; 0x24
 800caa2:	4770      	bx	lr

0800caa4 <??DataTable29>:
 800caa4:	07f8 2000                                   ... 

0800caa8 <??DataTable29_1>:
 800caa8:	0014 4802                                   ...H

0800caac <??DataTable29_2>:
 800caac:	0884 2000                                   ... 

0800cab0 <??DataTable29_3>:
 800cab0:	f018 0001                                   ....

0800cab4 <??DataTable29_4>:
 800cab4:	0008 4802                                   ...H

0800cab8 <??DataTable29_5>:
 800cab8:	0840 2000                                   @.. 

0800cabc <??DataTable29_6>:
 800cabc:	0424 4802                                   $..H

0800cac0 <??DataTable29_7>:
 800cac0:	0814 2000                                   ... 

0800cac4 <??DataTable29_8>:
 800cac4:	0000 4802                                   ...H

0800cac8 <llhwc_cmn_crypto_set_16_byte_to_mem>:
 800cac8:	b4f0      	push	{r4, r5, r6, r7}
 800caca:	b12a      	cbz	r2, 800cad8 <??llhwc_cmn_crypto_set_16_byte_to_mem_0>
 800cacc:	4288      	cmp	r0, r1
 800cace:	d021      	beq.n	800cb14 <??llhwc_cmn_crypto_set_16_byte_to_mem_1>
 800cad0:	2210      	movs	r2, #16
 800cad2:	bcf0      	pop	{r4, r5, r6, r7}
 800cad4:	f002 b838 	b.w	800eb48 <ble_memcpy>

0800cad8 <??llhwc_cmn_crypto_set_16_byte_to_mem_0>:
 800cad8:	f101 030f 	add.w	r3, r1, #15
 800cadc:	4254      	negs	r4, r2
 800cade:	5d1d      	ldrb	r5, [r3, r4]
 800cae0:	1c52      	adds	r2, r2, #1
 800cae2:	f101 060f 	add.w	r6, r1, #15
 800cae6:	f800 5b01 	strb.w	r5, [r0], #1
 800caea:	4257      	negs	r7, r2
 800caec:	5df3      	ldrb	r3, [r6, r7]
 800caee:	1c52      	adds	r2, r2, #1
 800caf0:	f101 040f 	add.w	r4, r1, #15
 800caf4:	f800 3b01 	strb.w	r3, [r0], #1
 800caf8:	4255      	negs	r5, r2
 800cafa:	5d66      	ldrb	r6, [r4, r5]
 800cafc:	1c52      	adds	r2, r2, #1
 800cafe:	f101 030f 	add.w	r3, r1, #15
 800cb02:	f800 6b01 	strb.w	r6, [r0], #1
 800cb06:	4257      	negs	r7, r2
 800cb08:	5ddc      	ldrb	r4, [r3, r7]
 800cb0a:	1c52      	adds	r2, r2, #1
 800cb0c:	2a0f      	cmp	r2, #15
 800cb0e:	f800 4b01 	strb.w	r4, [r0], #1
 800cb12:	dde1      	ble.n	800cad8 <??llhwc_cmn_crypto_set_16_byte_to_mem_0>

0800cb14 <??llhwc_cmn_crypto_set_16_byte_to_mem_1>:
 800cb14:	bcf0      	pop	{r4, r5, r6, r7}
 800cb16:	4770      	bx	lr

0800cb18 <llhwc_cmn_crypto>:
 800cb18:	e92d 4ffb 	stmdb	sp!, {r0, r1, r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800cb1c:	b090      	sub	sp, #64	; 0x40
 800cb1e:	f8df 1c7c 	ldr.w	r1, [pc, #3196]	; 800d79c <??DataTable47>
 800cb22:	9d20      	ldr	r5, [sp, #128]	; 0x80
 800cb24:	7f08      	ldrb	r0, [r1, #28]
 800cb26:	f04f 0800 	mov.w	r8, #0
 800cb2a:	4692      	mov	sl, r2
 800cb2c:	f8cd 8008 	str.w	r8, [sp, #8]
 800cb30:	f88d 0004 	strb.w	r0, [sp, #4]
 800cb34:	2d05      	cmp	r5, #5
 800cb36:	bfd4      	ite	le
 800cb38:	2001      	movle	r0, #1
 800cb3a:	2000      	movgt	r0, #0
 800cb3c:	f7f3 fb48 	bl	80001d0 <bsp_assert>
 800cb40:	f8df 6c5c 	ldr.w	r6, [pc, #3164]	; 800d7a0 <??DataTable47_1>
 800cb44:	222c      	movs	r2, #44	; 0x2c
 800cb46:	2100      	movs	r1, #0
 800cb48:	4630      	mov	r0, r6
 800cb4a:	f002 f84e 	bl	800ebea <ble_memset>
 800cb4e:	a804      	add	r0, sp, #16
 800cb50:	f8df 1c50 	ldr.w	r1, [pc, #3152]	; 800d7a4 <??DataTable47_2>
 800cb54:	2230      	movs	r2, #48	; 0x30
 800cb56:	f024 f9c6 	bl	8030ee6 <__aeabi_memcpy>
 800cb5a:	2d03      	cmp	r5, #3
 800cb5c:	bf18      	it	ne
 800cb5e:	2d01      	cmpne	r5, #1
 800cb60:	d003      	beq.n	800cb6a <??llhwc_cmn_crypto_0>
 800cb62:	2d04      	cmp	r5, #4
 800cb64:	bf18      	it	ne
 800cb66:	2d05      	cmpne	r5, #5
 800cb68:	d102      	bne.n	800cb70 <??llhwc_cmn_crypto_1>

0800cb6a <??llhwc_cmn_crypto_0>:
 800cb6a:	f248 2740 	movw	r7, #33344	; 0x8240
 800cb6e:	e007      	b.n	800cb80 <??llhwc_cmn_crypto_2>

0800cb70 <??llhwc_cmn_crypto_1>:
 800cb70:	2214      	movs	r2, #20
 800cb72:	2100      	movs	r1, #0
 800cb74:	f8df 0c74 	ldr.w	r0, [pc, #3188]	; 800d7ec <??DataTable48_2>
 800cb78:	f002 f837 	bl	800ebea <ble_memset>
 800cb7c:	f248 276c 	movw	r7, #33388	; 0x826c

0800cb80 <??llhwc_cmn_crypto_2>:
 800cb80:	1d38      	adds	r0, r7, #4
 800cb82:	9000      	str	r0, [sp, #0]
 800cb84:	f8df 1c14 	ldr.w	r1, [pc, #3092]	; 800d79c <??DataTable47>
 800cb88:	7f08      	ldrb	r0, [r1, #28]
 800cb8a:	b910      	cbnz	r0, 800cb92 <??llhwc_cmn_crypto_3>
 800cb8c:	f04f 38ff 	mov.w	r8, #4294967295	; 0xffffffff
 800cb90:	e1e9      	b.n	800cf66 <??llhwc_cmn_crypto_4>

0800cb92 <??llhwc_cmn_crypto_3>:
 800cb92:	f89d 0084 	ldrb.w	r0, [sp, #132]	; 0x84
 800cb96:	f8df 4c74 	ldr.w	r4, [pc, #3188]	; 800d80c <??DataTable49>
 800cb9a:	2801      	cmp	r0, #1
 800cb9c:	d142      	bne.n	800cc24 <??llhwc_cmn_crypto_5>
 800cb9e:	f8df 0830 	ldr.w	r0, [pc, #2096]	; 800d3d0 <??DataTable40>
 800cba2:	6800      	ldr	r0, [r0, #0]
 800cba4:	f04f 31ff 	mov.w	r1, #4294967295	; 0xffffffff
 800cba8:	f8df bbf0 	ldr.w	fp, [pc, #3056]	; 800d79c <??DataTable47>
 800cbac:	f007 fc5b 	bl	8014466 <os_rcrsv_mutex_wait>
 800cbb0:	f8df 0c9c 	ldr.w	r0, [pc, #3228]	; 800d850 <??DataTable50>
 800cbb4:	7e81      	ldrb	r1, [r0, #26]
 800cbb6:	f041 0102 	orr.w	r1, r1, #2
 800cbba:	7681      	strb	r1, [r0, #26]
 800cbbc:	f89b 0040 	ldrb.w	r0, [fp, #64]	; 0x40
 800cbc0:	2801      	cmp	r0, #1
 800cbc2:	d005      	beq.n	800cbd0 <??llhwc_cmn_crypto_6>
 800cbc4:	2001      	movs	r0, #1
 800cbc6:	f7f3 fb13 	bl	80001f0 <bsp_control_aclk>
 800cbca:	2001      	movs	r0, #1
 800cbcc:	f88b 0040 	strb.w	r0, [fp, #64]	; 0x40

0800cbd0 <??llhwc_cmn_crypto_6>:
 800cbd0:	f8d4 9078 	ldr.w	r9, [r4, #120]	; 0x78
 800cbd4:	f7ff ff29 	bl	800ca2a <llhwc_wait_for_evnt_on_air>
 800cbd8:	ea5f 0800 	movs.w	r8, r0
 800cbdc:	f009 0907 	and.w	r9, r9, #7
 800cbe0:	f040 819b 	bne.w	800cf1a <??llhwc_cmn_crypto_7>
 800cbe4:	f89b 001c 	ldrb.w	r0, [fp, #28]
 800cbe8:	f88d 0004 	strb.w	r0, [sp, #4]
 800cbec:	f8d4 9078 	ldr.w	r9, [r4, #120]	; 0x78
 800cbf0:	2803      	cmp	r0, #3
 800cbf2:	f009 0907 	and.w	r9, r9, #7
 800cbf6:	d015      	beq.n	800cc24 <??llhwc_cmn_crypto_5>
 800cbf8:	f8df 07ec 	ldr.w	r0, [pc, #2028]	; 800d3e8 <??DataTable40_6>
 800cbfc:	6801      	ldr	r1, [r0, #0]
 800cbfe:	0909      	lsrs	r1, r1, #4
 800cc00:	f001 017f 	and.w	r1, r1, #127	; 0x7f
 800cc04:	2923      	cmp	r1, #35	; 0x23
 800cc06:	d00a      	beq.n	800cc1e <??llhwc_cmn_crypto_8>
 800cc08:	6802      	ldr	r2, [r0, #0]
 800cc0a:	2103      	movs	r1, #3
 800cc0c:	f361 0202 	bfi	r2, r1, #0, #3
 800cc10:	6002      	str	r2, [r0, #0]

0800cc12 <??llhwc_cmn_crypto_9>:
 800cc12:	6801      	ldr	r1, [r0, #0]
 800cc14:	0909      	lsrs	r1, r1, #4
 800cc16:	f001 017f 	and.w	r1, r1, #127	; 0x7f
 800cc1a:	2923      	cmp	r1, #35	; 0x23
 800cc1c:	d1f9      	bne.n	800cc12 <??llhwc_cmn_crypto_9>

0800cc1e <??llhwc_cmn_crypto_8>:
 800cc1e:	2003      	movs	r0, #3
 800cc20:	f88b 001c 	strb.w	r0, [fp, #28]

0800cc24 <??llhwc_cmn_crypto_5>:
 800cc24:	981e      	ldr	r0, [sp, #120]	; 0x78
 800cc26:	2801      	cmp	r0, #1
 800cc28:	bf0c      	ite	eq
 800cc2a:	2201      	moveq	r2, #1
 800cc2c:	2200      	movne	r2, #0
 800cc2e:	9800      	ldr	r0, [sp, #0]
 800cc30:	9911      	ldr	r1, [sp, #68]	; 0x44
 800cc32:	f8df 3c38 	ldr.w	r3, [pc, #3128]	; 800d86c <??DataTable51>
 800cc36:	1818      	adds	r0, r3, r0
 800cc38:	f7ff ff46 	bl	800cac8 <llhwc_cmn_crypto_set_16_byte_to_mem>
 800cc3c:	2d03      	cmp	r5, #3
 800cc3e:	bf18      	it	ne
 800cc40:	2d01      	cmpne	r5, #1
 800cc42:	d004      	beq.n	800cc4e <??llhwc_cmn_crypto_10>
 800cc44:	2d04      	cmp	r5, #4
 800cc46:	bf18      	it	ne
 800cc48:	2d05      	cmpne	r5, #5
 800cc4a:	f040 8108 	bne.w	800ce5e <??llhwc_cmn_crypto_11>

0800cc4e <??llhwc_cmn_crypto_10>:
 800cc4e:	9810      	ldr	r0, [sp, #64]	; 0x40
 800cc50:	f7f3 fac0 	bl	80001d4 <bsp_is_ptr_in_ble_mem>
 800cc54:	1e40      	subs	r0, r0, #1
 800cc56:	4180      	sbcs	r0, r0
 800cc58:	43c0      	mvns	r0, r0
 800cc5a:	0fc0      	lsrs	r0, r0, #31
 800cc5c:	f7f3 fab8 	bl	80001d0 <bsp_assert>
 800cc60:	9810      	ldr	r0, [sp, #64]	; 0x40
 800cc62:	2204      	movs	r2, #4
 800cc64:	2100      	movs	r1, #0
 800cc66:	1f00      	subs	r0, r0, #4
 800cc68:	f001 ffbf 	bl	800ebea <ble_memset>
 800cc6c:	4650      	mov	r0, sl
 800cc6e:	2d03      	cmp	r5, #3
 800cc70:	bf18      	it	ne
 800cc72:	2d04      	cmpne	r5, #4
 800cc74:	d117      	bne.n	800cca6 <??llhwc_cmn_crypto_12>
 800cc76:	7801      	ldrb	r1, [r0, #0]
 800cc78:	7843      	ldrb	r3, [r0, #1]
 800cc7a:	f890 c002 	ldrb.w	ip, [r0, #2]
 800cc7e:	f890 e004 	ldrb.w	lr, [r0, #4]
 800cc82:	ea41 2103 	orr.w	r1, r1, r3, lsl #8
 800cc86:	78c3      	ldrb	r3, [r0, #3]
 800cc88:	f8dd a040 	ldr.w	sl, [sp, #64]	; 0x40
 800cc8c:	ea41 410c 	orr.w	r1, r1, ip, lsl #16
 800cc90:	2200      	movs	r2, #0
 800cc92:	f8cd e00c 	str.w	lr, [sp, #12]
 800cc96:	ea41 6103 	orr.w	r1, r1, r3, lsl #24
 800cc9a:	f8df 3bd4 	ldr.w	r3, [pc, #3028]	; 800d870 <??DataTable51_1>
 800cc9e:	449a      	add	sl, r3
 800cca0:	2d04      	cmp	r5, #4
 800cca2:	d114      	bne.n	800ccce <??llhwc_cmn_crypto_13>
 800cca4:	e015      	b.n	800ccd2 <??llhwc_cmn_crypto_14>

0800cca6 <??llhwc_cmn_crypto_12>:
 800cca6:	f890 e004 	ldrb.w	lr, [r0, #4]
 800ccaa:	7801      	ldrb	r1, [r0, #0]
 800ccac:	7843      	ldrb	r3, [r0, #1]
 800ccae:	f890 c002 	ldrb.w	ip, [r0, #2]
 800ccb2:	f8dd a040 	ldr.w	sl, [sp, #64]	; 0x40
 800ccb6:	ea41 2103 	orr.w	r1, r1, r3, lsl #8
 800ccba:	78c3      	ldrb	r3, [r0, #3]
 800ccbc:	2201      	movs	r2, #1
 800ccbe:	ea41 410c 	orr.w	r1, r1, ip, lsl #16
 800ccc2:	ea43 230e 	orr.w	r3, r3, lr, lsl #8
 800ccc6:	9303      	str	r3, [sp, #12]
 800ccc8:	f8df 3ba4 	ldr.w	r3, [pc, #2980]	; 800d870 <??DataTable51_1>
 800cccc:	449a      	add	sl, r3

0800ccce <??llhwc_cmn_crypto_13>:
 800ccce:	2d05      	cmp	r5, #5
 800ccd0:	d118      	bne.n	800cd04 <??llhwc_cmn_crypto_15>

0800ccd2 <??llhwc_cmn_crypto_14>:
 800ccd2:	f890 c000 	ldrb.w	ip, [r0]
 800ccd6:	7bc3      	ldrb	r3, [r0, #15]
 800ccd8:	f8d6 e028 	ldr.w	lr, [r6, #40]	; 0x28
 800ccdc:	f04f 0b02 	mov.w	fp, #2
 800cce0:	ea43 430c 	orr.w	r3, r3, ip, lsl #16
 800cce4:	f890 c00e 	ldrb.w	ip, [r0, #14]
 800cce8:	f00e 4e7f 	and.w	lr, lr, #4278190080	; 0xff000000
 800ccec:	ea43 230c 	orr.w	r3, r3, ip, lsl #8
 800ccf0:	ea43 030e 	orr.w	r3, r3, lr
 800ccf4:	62b3      	str	r3, [r6, #40]	; 0x28
 800ccf6:	2301      	movs	r3, #1
 800ccf8:	9302      	str	r3, [sp, #8]
 800ccfa:	2d04      	cmp	r5, #4
 800ccfc:	bf14      	ite	ne
 800ccfe:	2501      	movne	r5, #1
 800cd00:	2503      	moveq	r5, #3
 800cd02:	e007      	b.n	800cd14 <??llhwc_cmn_crypto_16>

0800cd04 <??llhwc_cmn_crypto_15>:
 800cd04:	6ab3      	ldr	r3, [r6, #40]	; 0x28
 800cd06:	f04f 0b04 	mov.w	fp, #4
 800cd0a:	f003 437f 	and.w	r3, r3, #4278190080	; 0xff000000
 800cd0e:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 800cd12:	62b3      	str	r3, [r6, #40]	; 0x28

0800cd14 <??llhwc_cmn_crypto_16>:
 800cd14:	eb02 0342 	add.w	r3, r2, r2, lsl #1
 800cd18:	ea4f 0e83 	mov.w	lr, r3, lsl #2
 800cd1c:	aa04      	add	r2, sp, #16
 800cd1e:	f852 300e 	ldr.w	r3, [r2, lr]
 800cd22:	f8df cb48 	ldr.w	ip, [pc, #2888]	; 800d86c <??DataTable51>
 800cd26:	19db      	adds	r3, r3, r7
 800cd28:	f85c 3003 	ldr.w	r3, [ip, r3]
 800cd2c:	f10d 0c10 	add.w	ip, sp, #16
 800cd30:	44f4      	add	ip, lr
 800cd32:	f8dc c004 	ldr.w	ip, [ip, #4]
 800cd36:	ea23 030c 	bic.w	r3, r3, ip
 800cd3a:	9300      	str	r3, [sp, #0]
 800cd3c:	f10d 0c10 	add.w	ip, sp, #16
 800cd40:	ab04      	add	r3, sp, #16
 800cd42:	44f4      	add	ip, lr
 800cd44:	4473      	add	r3, lr
 800cd46:	f8dc c008 	ldr.w	ip, [ip, #8]
 800cd4a:	685b      	ldr	r3, [r3, #4]
 800cd4c:	fa01 fc0c 	lsl.w	ip, r1, ip
 800cd50:	9900      	ldr	r1, [sp, #0]
 800cd52:	ea0c 0c03 	and.w	ip, ip, r3
 800cd56:	f8df 3b14 	ldr.w	r3, [pc, #2836]	; 800d86c <??DataTable51>
 800cd5a:	ea4c 0c01 	orr.w	ip, ip, r1
 800cd5e:	f852 100e 	ldr.w	r1, [r2, lr]
 800cd62:	f8df 2b08 	ldr.w	r2, [pc, #2824]	; 800d86c <??DataTable51>
 800cd66:	19c9      	adds	r1, r1, r7
 800cd68:	f842 c001 	str.w	ip, [r2, r1]
 800cd6c:	a904      	add	r1, sp, #16
 800cd6e:	4471      	add	r1, lr
 800cd70:	f10d 0c10 	add.w	ip, sp, #16
 800cd74:	69ca      	ldr	r2, [r1, #28]
 800cd76:	44f4      	add	ip, lr
 800cd78:	f8dc 1018 	ldr.w	r1, [ip, #24]
 800cd7c:	469c      	mov	ip, r3
 800cd7e:	19c9      	adds	r1, r1, r7
 800cd80:	1859      	adds	r1, r3, r1
 800cd82:	9100      	str	r1, [sp, #0]
 800cd84:	a904      	add	r1, sp, #16
 800cd86:	4471      	add	r1, lr
 800cd88:	6989      	ldr	r1, [r1, #24]
 800cd8a:	19c9      	adds	r1, r1, r7
 800cd8c:	f85c 1001 	ldr.w	r1, [ip, r1]
 800cd90:	f10d 0c10 	add.w	ip, sp, #16
 800cd94:	44e6      	add	lr, ip
 800cd96:	9b03      	ldr	r3, [sp, #12]
 800cd98:	f8de c020 	ldr.w	ip, [lr, #32]
 800cd9c:	4391      	bics	r1, r2
 800cd9e:	fa03 fc0c 	lsl.w	ip, r3, ip
 800cda2:	ea0c 0c02 	and.w	ip, ip, r2
 800cda6:	ea4c 0c01 	orr.w	ip, ip, r1
 800cdaa:	9900      	ldr	r1, [sp, #0]
 800cdac:	f8c1 c000 	str.w	ip, [r1]
 800cdb0:	f8dd e008 	ldr.w	lr, [sp, #8]
 800cdb4:	9a02      	ldr	r2, [sp, #8]
 800cdb6:	4486      	add	lr, r0
 800cdb8:	f89e 1005 	ldrb.w	r1, [lr, #5]
 800cdbc:	4402      	add	r2, r0
 800cdbe:	7993      	ldrb	r3, [r2, #6]
 800cdc0:	9a02      	ldr	r2, [sp, #8]
 800cdc2:	ea41 2103 	orr.w	r1, r1, r3, lsl #8
 800cdc6:	4402      	add	r2, r0
 800cdc8:	79d3      	ldrb	r3, [r2, #7]
 800cdca:	9a02      	ldr	r2, [sp, #8]
 800cdcc:	ea41 4103 	orr.w	r1, r1, r3, lsl #16
 800cdd0:	4402      	add	r2, r0
 800cdd2:	7a13      	ldrb	r3, [r2, #8]
 800cdd4:	ea41 6103 	orr.w	r1, r1, r3, lsl #24
 800cdd8:	6171      	str	r1, [r6, #20]
 800cdda:	9a02      	ldr	r2, [sp, #8]
 800cddc:	4402      	add	r2, r0
 800cdde:	7a51      	ldrb	r1, [r2, #9]
 800cde0:	9a02      	ldr	r2, [sp, #8]
 800cde2:	4402      	add	r2, r0
 800cde4:	7a93      	ldrb	r3, [r2, #10]
 800cde6:	9a02      	ldr	r2, [sp, #8]
 800cde8:	ea41 2103 	orr.w	r1, r1, r3, lsl #8
 800cdec:	4402      	add	r2, r0
 800cdee:	7ad3      	ldrb	r3, [r2, #11]
 800cdf0:	9a02      	ldr	r2, [sp, #8]
 800cdf2:	ea41 4103 	orr.w	r1, r1, r3, lsl #16
 800cdf6:	4410      	add	r0, r2
 800cdf8:	7b03      	ldrb	r3, [r0, #12]
 800cdfa:	ea41 6103 	orr.w	r1, r1, r3, lsl #24
 800cdfe:	61b1      	str	r1, [r6, #24]
 800ce00:	981c      	ldr	r0, [sp, #112]	; 0x70
 800ce02:	6a71      	ldr	r1, [r6, #36]	; 0x24
 800ce04:	f360 4116 	bfi	r1, r0, #16, #7
 800ce08:	6271      	str	r1, [r6, #36]	; 0x24
 800ce0a:	9812      	ldr	r0, [sp, #72]	; 0x48
 800ce0c:	6ab1      	ldr	r1, [r6, #40]	; 0x28
 800ce0e:	f360 611c 	bfi	r1, r0, #24, #5
 800ce12:	62b1      	str	r1, [r6, #40]	; 0x28
 800ce14:	981d      	ldr	r0, [sp, #116]	; 0x74
 800ce16:	6a71      	ldr	r1, [r6, #36]	; 0x24
 800ce18:	f360 611e 	bfi	r1, r0, #24, #7
 800ce1c:	f8df 0a4c 	ldr.w	r0, [pc, #2636]	; 800d86c <??DataTable51>
 800ce20:	6271      	str	r1, [r6, #36]	; 0x24
 800ce22:	4450      	add	r0, sl
 800ce24:	6801      	ldr	r1, [r0, #0]
 800ce26:	f441 417f 	orr.w	r1, r1, #65280	; 0xff00
 800ce2a:	f041 01ff 	orr.w	r1, r1, #255	; 0xff
 800ce2e:	6001      	str	r1, [r0, #0]
 800ce30:	6802      	ldr	r2, [r0, #0]
 800ce32:	f022 6280 	bic.w	r2, r2, #67108864	; 0x4000000
 800ce36:	6002      	str	r2, [r0, #0]
 800ce38:	f8df 0a30 	ldr.w	r0, [pc, #2608]	; 800d86c <??DataTable51>
 800ce3c:	19c7      	adds	r7, r0, r7
 800ce3e:	6839      	ldr	r1, [r7, #0]
 800ce40:	f36a 411f 	bfi	r1, sl, #16, #16
 800ce44:	6039      	str	r1, [r7, #0]
 800ce46:	6839      	ldr	r1, [r7, #0]
 800ce48:	f36a 010f 	bfi	r1, sl, #0, #16
 800ce4c:	6039      	str	r1, [r7, #0]
 800ce4e:	f89d 0084 	ldrb.w	r0, [sp, #132]	; 0x84
 800ce52:	2800      	cmp	r0, #0
 800ce54:	f000 8087 	beq.w	800cf66 <??llhwc_cmn_crypto_4>
 800ce58:	f248 2040 	movw	r0, #33344	; 0x8240
 800ce5c:	e025      	b.n	800ceaa <??llhwc_cmn_crypto_17>

0800ce5e <??llhwc_cmn_crypto_11>:
 800ce5e:	f89d 007c 	ldrb.w	r0, [sp, #124]	; 0x7c
 800ce62:	9910      	ldr	r1, [sp, #64]	; 0x40
 800ce64:	f8df 8a0c 	ldr.w	r8, [pc, #2572]	; 800d874 <??DataTable51_2>
 800ce68:	1e42      	subs	r2, r0, #1
 800ce6a:	4192      	sbcs	r2, r2
 800ce6c:	0fd2      	lsrs	r2, r2, #31
 800ce6e:	f8df 0a08 	ldr.w	r0, [pc, #2568]	; 800d878 <??DataTable51_3>
 800ce72:	f7ff fe29 	bl	800cac8 <llhwc_cmn_crypto_set_16_byte_to_mem>
 800ce76:	2204      	movs	r2, #4
 800ce78:	2100      	movs	r1, #0
 800ce7a:	4640      	mov	r0, r8
 800ce7c:	f001 feb5 	bl	800ebea <ble_memset>
 800ce80:	f8df 09e8 	ldr.w	r0, [pc, #2536]	; 800d86c <??DataTable51>
 800ce84:	19c7      	adds	r7, r0, r7
 800ce86:	6839      	ldr	r1, [r7, #0]
 800ce88:	f248 2a80 	movw	sl, #33408	; 0x8280
 800ce8c:	f04f 0b01 	mov.w	fp, #1
 800ce90:	f36a 010f 	bfi	r1, sl, #0, #16
 800ce94:	6039      	str	r1, [r7, #0]
 800ce96:	f8d8 0000 	ldr.w	r0, [r8]
 800ce9a:	f440 407f 	orr.w	r0, r0, #65280	; 0xff00
 800ce9e:	f040 00ff 	orr.w	r0, r0, #255	; 0xff
 800cea2:	f8c8 0000 	str.w	r0, [r8]
 800cea6:	f248 206c 	movw	r0, #33388	; 0x826c

0800ceaa <??llhwc_cmn_crypto_17>:
 800ceaa:	6821      	ldr	r1, [r4, #0]
 800ceac:	f360 010f 	bfi	r1, r0, #0, #16
 800ceb0:	6021      	str	r1, [r4, #0]
 800ceb2:	6fa0      	ldr	r0, [r4, #120]	; 0x78
 800ceb4:	08c0      	lsrs	r0, r0, #3
 800ceb6:	ea4b 0bc0 	orr.w	fp, fp, r0, lsl #3
 800ceba:	f8c4 b078 	str.w	fp, [r4, #120]	; 0x78
 800cebe:	6e20      	ldr	r0, [r4, #96]	; 0x60
 800cec0:	f020 0018 	bic.w	r0, r0, #24
 800cec4:	6620      	str	r0, [r4, #96]	; 0x60
 800cec6:	4628      	mov	r0, r5
 800cec8:	f7ff fdcb 	bl	800ca62 <llhwc_cmn_crypto_aes_start>
 800cecc:	2000      	movs	r0, #0
 800cece:	9000      	str	r0, [sp, #0]
 800ced0:	2302      	movs	r3, #2
 800ced2:	2204      	movs	r2, #4
 800ced4:	f44f 6188 	mov.w	r1, #1088	; 0x440
 800ced8:	20c8      	movs	r0, #200	; 0xc8
 800ceda:	f7ff fa1e 	bl	800c31a <llhwc_polling>
 800cede:	ea5f 0800 	movs.w	r8, r0
 800cee2:	d11a      	bne.n	800cf1a <??llhwc_cmn_crypto_7>
 800cee4:	f7ff fdcf 	bl	800ca86 <llhwc_cmn_crypto_aes_done>
 800cee8:	2d02      	cmp	r5, #2
 800ceea:	bf18      	it	ne
 800ceec:	2d00      	cmpne	r5, #0
 800ceee:	d114      	bne.n	800cf1a <??llhwc_cmn_crypto_7>
 800cef0:	f8df 0978 	ldr.w	r0, [pc, #2424]	; 800d86c <??DataTable51>
 800cef4:	f850 100a 	ldr.w	r1, [r0, sl]
 800cef8:	f3c1 6080 	ubfx	r0, r1, #26, #1
 800cefc:	b908      	cbnz	r0, 800cf02 <??llhwc_cmn_crypto_18>
 800cefe:	f7f3 f967 	bl	80001d0 <bsp_assert>

0800cf02 <??llhwc_cmn_crypto_18>:
 800cf02:	f89d 007c 	ldrb.w	r0, [sp, #124]	; 0x7c
 800cf06:	1e42      	subs	r2, r0, #1
 800cf08:	f8df 0970 	ldr.w	r0, [pc, #2416]	; 800d87c <??DataTable51_4>
 800cf0c:	eb00 010a 	add.w	r1, r0, sl
 800cf10:	9810      	ldr	r0, [sp, #64]	; 0x40
 800cf12:	4192      	sbcs	r2, r2
 800cf14:	0fd2      	lsrs	r2, r2, #31
 800cf16:	f7ff fdd7 	bl	800cac8 <llhwc_cmn_crypto_set_16_byte_to_mem>

0800cf1a <??llhwc_cmn_crypto_7>:
 800cf1a:	f89d 0004 	ldrb.w	r0, [sp, #4]
 800cf1e:	2500      	movs	r5, #0
 800cf20:	f7ff fbe0 	bl	800c6e4 <llhwc_pwr_switch>
 800cf24:	6fa0      	ldr	r0, [r4, #120]	; 0x78
 800cf26:	f8df 1928 	ldr.w	r1, [pc, #2344]	; 800d850 <??DataTable50>
 800cf2a:	f369 0002 	bfi	r0, r9, #0, #3
 800cf2e:	67a0      	str	r0, [r4, #120]	; 0x78
 800cf30:	7e88      	ldrb	r0, [r1, #26]
 800cf32:	f010 00fd 	ands.w	r0, r0, #253	; 0xfd
 800cf36:	7688      	strb	r0, [r1, #26]
 800cf38:	bf18      	it	ne
 800cf3a:	2501      	movne	r5, #1
 800cf3c:	f8df 685c 	ldr.w	r6, [pc, #2140]	; 800d79c <??DataTable47>
 800cf40:	f896 0040 	ldrb.w	r0, [r6, #64]	; 0x40
 800cf44:	ea55 0100 	orrs.w	r1, r5, r0
 800cf48:	d008      	beq.n	800cf5c <??llhwc_cmn_crypto_19>
 800cf4a:	2801      	cmp	r0, #1
 800cf4c:	d101      	bne.n	800cf52 <??llhwc_cmn_crypto_20>
 800cf4e:	0028      	movs	r0, r5
 800cf50:	d104      	bne.n	800cf5c <??llhwc_cmn_crypto_19>

0800cf52 <??llhwc_cmn_crypto_20>:
 800cf52:	2000      	movs	r0, #0
 800cf54:	f7f3 f94c 	bl	80001f0 <bsp_control_aclk>
 800cf58:	f886 5040 	strb.w	r5, [r6, #64]	; 0x40

0800cf5c <??llhwc_cmn_crypto_19>:
 800cf5c:	f8df 0470 	ldr.w	r0, [pc, #1136]	; 800d3d0 <??DataTable40>
 800cf60:	6800      	ldr	r0, [r0, #0]
 800cf62:	f007 fa86 	bl	8014472 <os_rcrsv_mutex_release>

0800cf66 <??llhwc_cmn_crypto_4>:
 800cf66:	4640      	mov	r0, r8
 800cf68:	b013      	add	sp, #76	; 0x4c
 800cf6a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
	...

0800cf70 <??DataTable30>:
 800cf70:	0408 8102                                   ....

0800cf74 <??DataTable30_1>:
 800cf74:	0854 2000                                   T.. 

0800cf78 <US_TO_SLP_TMR_PROTECTED>:
 800cf78:	b570      	push	{r4, r5, r6, lr}
 800cf7a:	4604      	mov	r4, r0
 800cf7c:	460d      	mov	r5, r1
 800cf7e:	227d      	movs	r2, #125	; 0x7d
 800cf80:	2300      	movs	r3, #0
 800cf82:	f018 fb59 	bl	8025638 <__aeabi_uldivmod>
 800cf86:	0086      	lsls	r6, r0, #2
 800cf88:	4620      	mov	r0, r4
 800cf8a:	4629      	mov	r1, r5
 800cf8c:	227d      	movs	r2, #125	; 0x7d
 800cf8e:	2300      	movs	r3, #0
 800cf90:	f018 fb52 	bl	8025638 <__aeabi_uldivmod>
 800cf94:	0099      	lsls	r1, r3, #2
 800cf96:	ea41 7192 	orr.w	r1, r1, r2, lsr #30
 800cf9a:	0090      	lsls	r0, r2, #2
 800cf9c:	227d      	movs	r2, #125	; 0x7d
 800cf9e:	2300      	movs	r3, #0
 800cfa0:	f018 fb4a 	bl	8025638 <__aeabi_uldivmod>
 800cfa4:	1830      	adds	r0, r6, r0
 800cfa6:	bd70      	pop	{r4, r5, r6, pc}

0800cfa8 <llhwc_cmn_set_os_timer_activity>:
 800cfa8:	b570      	push	{r4, r5, r6, lr}
 800cfaa:	4604      	mov	r4, r0
 800cfac:	f8df 5420 	ldr.w	r5, [pc, #1056]	; 800d3d0 <??DataTable40>
 800cfb0:	6828      	ldr	r0, [r5, #0]
 800cfb2:	f04f 31ff 	mov.w	r1, #4294967295	; 0xffffffff
 800cfb6:	f8df 6898 	ldr.w	r6, [pc, #2200]	; 800d850 <??DataTable50>
 800cfba:	f007 fa54 	bl	8014466 <os_rcrsv_mutex_wait>
 800cfbe:	7634      	strb	r4, [r6, #24]
 800cfc0:	6828      	ldr	r0, [r5, #0]
 800cfc2:	f007 fa56 	bl	8014472 <os_rcrsv_mutex_release>
 800cfc6:	7d30      	ldrb	r0, [r6, #20]
 800cfc8:	2801      	cmp	r0, #1
 800cfca:	d104      	bne.n	800cfd6 <??llhwc_cmn_set_os_timer_activity_0>
 800cfcc:	f8df 18b0 	ldr.w	r1, [pc, #2224]	; 800d880 <??DataTable51_5>
 800cfd0:	6908      	ldr	r0, [r1, #16]
 800cfd2:	b100      	cbz	r0, 800cfd6 <??llhwc_cmn_set_os_timer_activity_0>
 800cfd4:	e018      	b.n	800d008 <?Subroutine2>

0800cfd6 <??llhwc_cmn_set_os_timer_activity_0>:
 800cfd6:	bd70      	pop	{r4, r5, r6, pc}

0800cfd8 <llhwc_cmn_set_controller_activity>:
 800cfd8:	b570      	push	{r4, r5, r6, lr}
 800cfda:	4604      	mov	r4, r0
 800cfdc:	f8df 53f0 	ldr.w	r5, [pc, #1008]	; 800d3d0 <??DataTable40>
 800cfe0:	6828      	ldr	r0, [r5, #0]
 800cfe2:	f04f 31ff 	mov.w	r1, #4294967295	; 0xffffffff
 800cfe6:	f8df 6868 	ldr.w	r6, [pc, #2152]	; 800d850 <??DataTable50>
 800cfea:	f007 fa3c 	bl	8014466 <os_rcrsv_mutex_wait>
 800cfee:	7674      	strb	r4, [r6, #25]
 800cff0:	6828      	ldr	r0, [r5, #0]
 800cff2:	f007 fa3e 	bl	8014472 <os_rcrsv_mutex_release>
 800cff6:	7d30      	ldrb	r0, [r6, #20]
 800cff8:	2801      	cmp	r0, #1
 800cffa:	d104      	bne.n	800d006 <??llhwc_cmn_set_controller_activity_0>
 800cffc:	f8df 1880 	ldr.w	r1, [pc, #2176]	; 800d880 <??DataTable51_5>
 800d000:	6908      	ldr	r0, [r1, #16]
 800d002:	b100      	cbz	r0, 800d006 <??llhwc_cmn_set_controller_activity_0>
 800d004:	e000      	b.n	800d008 <?Subroutine2>

0800d006 <??llhwc_cmn_set_controller_activity_0>:
 800d006:	bd70      	pop	{r4, r5, r6, pc}

0800d008 <?Subroutine2>:
 800d008:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800d00c:	e0c6      	b.n	800d19c <llhwc_cmn_start_stop_runtime_rco_clbr>

0800d00e <llhwc_cmn_reset_slptmr_src>:
 800d00e:	b510      	push	{r4, lr}
 800d010:	f8df 483c 	ldr.w	r4, [pc, #2108]	; 800d850 <??DataTable50>
 800d014:	2218      	movs	r2, #24
 800d016:	2100      	movs	r1, #0
 800d018:	4620      	mov	r0, r4
 800d01a:	f001 fde6 	bl	800ebea <ble_memset>
 800d01e:	f8df 2864 	ldr.w	r2, [pc, #2148]	; 800d884 <??DataTable51_6>
 800d022:	2002      	movs	r0, #2
 800d024:	6022      	str	r2, [r4, #0]
 800d026:	7520      	strb	r0, [r4, #20]
 800d028:	bd10      	pop	{r4, pc}
	...

0800d02c <??DataTable33>:
 800d02c:	08a0 2000                                   ... 

0800d030 <llhwc_cmn_reset_rco_clbr>:
 800d030:	b510      	push	{r4, lr}
 800d032:	f8df 484c 	ldr.w	r4, [pc, #2124]	; 800d880 <??DataTable51_5>
 800d036:	68e0      	ldr	r0, [r4, #12]
 800d038:	b170      	cbz	r0, 800d058 <??llhwc_cmn_reset_rco_clbr_0>
 800d03a:	f7f8 fc66 	bl	800590a <os_timer_stop>
 800d03e:	1e40      	subs	r0, r0, #1
 800d040:	4180      	sbcs	r0, r0
 800d042:	0fc0      	lsrs	r0, r0, #31
 800d044:	f7f3 f8c4 	bl	80001d0 <bsp_assert>
 800d048:	68e0      	ldr	r0, [r4, #12]
 800d04a:	f7f8 fcc4 	bl	80059d6 <os_timer_free>
 800d04e:	1e40      	subs	r0, r0, #1
 800d050:	4180      	sbcs	r0, r0
 800d052:	0fc0      	lsrs	r0, r0, #31
 800d054:	f7f3 f8bc 	bl	80001d0 <bsp_assert>

0800d058 <??llhwc_cmn_reset_rco_clbr_0>:
 800d058:	f8df 082c 	ldr.w	r0, [pc, #2092]	; 800d888 <??DataTable51_7>
 800d05c:	6801      	ldr	r1, [r0, #0]
 800d05e:	0849      	lsrs	r1, r1, #1
 800d060:	0049      	lsls	r1, r1, #1
 800d062:	6001      	str	r1, [r0, #0]
 800d064:	f8df 0824 	ldr.w	r0, [pc, #2084]	; 800d88c <??DataTable51_8>
 800d068:	6802      	ldr	r2, [r0, #0]
 800d06a:	2100      	movs	r1, #0
 800d06c:	4620      	mov	r0, r4
 800d06e:	1c52      	adds	r2, r2, #1
 800d070:	6262      	str	r2, [r4, #36]	; 0x24
 800d072:	f000 f971 	bl	800d358 <llhwc_cmn_hw_rco_compnstn_enable>
 800d076:	2224      	movs	r2, #36	; 0x24
 800d078:	2100      	movs	r1, #0
 800d07a:	4620      	mov	r0, r4
 800d07c:	f001 fdb5 	bl	800ebea <ble_memset>
 800d080:	207f      	movs	r0, #127	; 0x7f
 800d082:	7220      	strb	r0, [r4, #8]
 800d084:	f44f 717a 	mov.w	r1, #1000	; 0x3e8
 800d088:	2000      	movs	r0, #0
 800d08a:	6121      	str	r1, [r4, #16]
 800d08c:	7660      	strb	r0, [r4, #25]
 800d08e:	76a0      	strb	r0, [r4, #26]
 800d090:	6260      	str	r0, [r4, #36]	; 0x24
 800d092:	62a0      	str	r0, [r4, #40]	; 0x28
 800d094:	62e0      	str	r0, [r4, #44]	; 0x2c
 800d096:	bd10      	pop	{r4, pc}

0800d098 <??DataTable34>:
 800d098:	8889 8888                                   ....

0800d09c <??DataTable34_1>:
 800d09c:	045c 4802                                   \..H

0800d0a0 <??DataTable34_2>:
 800d0a0:	000c 4802                                   ...H

0800d0a4 <llhwc_cmn_initial_rco_clbr>:
 800d0a4:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800d0a8:	4688      	mov	r8, r1
 800d0aa:	f8df 57a4 	ldr.w	r5, [pc, #1956]	; 800d850 <??DataTable50>
 800d0ae:	2100      	movs	r1, #0
 800d0b0:	7129      	strb	r1, [r5, #4]
 800d0b2:	f8df 77cc 	ldr.w	r7, [pc, #1996]	; 800d880 <??DataTable51_5>
 800d0b6:	7638      	strb	r0, [r7, #24]
 800d0b8:	f8df 07d4 	ldr.w	r0, [pc, #2004]	; 800d890 <??DataTable51_9>
 800d0bc:	f7f8 fa84 	bl	80055c8 <os_timer_rgstr_timer_activity_cbk>
 800d0c0:	4ea4      	ldr	r6, [pc, #656]	; (800d354 <??DataTable39>)
 800d0c2:	6c70      	ldr	r0, [r6, #68]	; 0x44
 800d0c4:	f8df 47c4 	ldr.w	r4, [pc, #1988]	; 800d88c <??DataTable51_8>
 800d0c8:	2105      	movs	r1, #5
 800d0ca:	0840      	lsrs	r0, r0, #1
 800d0cc:	0040      	lsls	r0, r0, #1
 800d0ce:	6470      	str	r0, [r6, #68]	; 0x44
 800d0d0:	6820      	ldr	r0, [r4, #0]
 800d0d2:	1c40      	adds	r0, r0, #1
 800d0d4:	6278      	str	r0, [r7, #36]	; 0x24
 800d0d6:	6c70      	ldr	r0, [r6, #68]	; 0x44
 800d0d8:	f040 00fe 	orr.w	r0, r0, #254	; 0xfe
 800d0dc:	6470      	str	r0, [r6, #68]	; 0x44
 800d0de:	68b0      	ldr	r0, [r6, #8]
 800d0e0:	f020 0020 	bic.w	r0, r0, #32
 800d0e4:	60b0      	str	r0, [r6, #8]
 800d0e6:	6870      	ldr	r0, [r6, #4]
 800d0e8:	f040 0020 	orr.w	r0, r0, #32
 800d0ec:	6070      	str	r0, [r6, #4]
 800d0ee:	6870      	ldr	r0, [r6, #4]
 800d0f0:	f020 0020 	bic.w	r0, r0, #32
 800d0f4:	6070      	str	r0, [r6, #4]
 800d0f6:	2001      	movs	r0, #1
 800d0f8:	f000 fb18 	bl	800d72c <llhwc_cmn_control_aclk>
 800d0fc:	6820      	ldr	r0, [r4, #0]
 800d0fe:	6a79      	ldr	r1, [r7, #36]	; 0x24
 800d100:	1c40      	adds	r0, r0, #1
 800d102:	1c89      	adds	r1, r1, #2
 800d104:	e001      	b.n	800d10a <??llhwc_cmn_initial_rco_clbr_0>

0800d106 <??llhwc_cmn_initial_rco_clbr_1>:
 800d106:	6820      	ldr	r0, [r4, #0]
 800d108:	1c40      	adds	r0, r0, #1

0800d10a <??llhwc_cmn_initial_rco_clbr_0>:
 800d10a:	4281      	cmp	r1, r0
 800d10c:	d2fb      	bcs.n	800d106 <??llhwc_cmn_initial_rco_clbr_1>
 800d10e:	6c70      	ldr	r0, [r6, #68]	; 0x44
 800d110:	f040 0001 	orr.w	r0, r0, #1
 800d114:	6470      	str	r0, [r6, #68]	; 0x44

0800d116 <??llhwc_cmn_initial_rco_clbr_2>:
 800d116:	7928      	ldrb	r0, [r5, #4]
 800d118:	2800      	cmp	r0, #0
 800d11a:	bf02      	ittt	eq
 800d11c:	6830      	ldreq	r0, [r6, #0]
 800d11e:	f3c0 1040 	ubfxeq	r0, r0, #5, #1
 800d122:	2800      	cmpeq	r0, #0
 800d124:	d0f7      	beq.n	800d116 <??llhwc_cmn_initial_rco_clbr_2>
 800d126:	f1b8 0f00 	cmp.w	r8, #0
 800d12a:	d006      	beq.n	800d13a <??llhwc_cmn_initial_rco_clbr_3>
 800d12c:	6829      	ldr	r1, [r5, #0]
 800d12e:	f8df 0764 	ldr.w	r0, [pc, #1892]	; 800d894 <??DataTable51_10>
 800d132:	fbb0 f1f1 	udiv	r1, r0, r1
 800d136:	f8a8 1000 	strh.w	r1, [r8]

0800d13a <??llhwc_cmn_initial_rco_clbr_3>:
 800d13a:	2000      	movs	r0, #0
 800d13c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0800d140 <llhwc_cmn_runtime_rco_clbr_params>:
 800d140:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800d144:	4680      	mov	r8, r0
 800d146:	4ea2      	ldr	r6, [pc, #648]	; (800d3d0 <??DataTable40>)
 800d148:	6830      	ldr	r0, [r6, #0]
 800d14a:	460d      	mov	r5, r1
 800d14c:	f04f 31ff 	mov.w	r1, #4294967295	; 0xffffffff
 800d150:	f007 f989 	bl	8014466 <os_rcrsv_mutex_wait>
 800d154:	f8df 7728 	ldr.w	r7, [pc, #1832]	; 800d880 <??DataTable51_5>
 800d158:	6938      	ldr	r0, [r7, #16]
 800d15a:	2400      	movs	r4, #0
 800d15c:	4285      	cmp	r5, r0
 800d15e:	bf18      	it	ne
 800d160:	2401      	movne	r4, #1
 800d162:	f887 8008 	strb.w	r8, [r7, #8]
 800d166:	613d      	str	r5, [r7, #16]
 800d168:	2d00      	cmp	r5, #0
 800d16a:	bf04      	itt	eq
 800d16c:	7e78      	ldrbeq	r0, [r7, #25]
 800d16e:	2801      	cmpeq	r0, #1
 800d170:	d104      	bne.n	800d17c <??llhwc_cmn_runtime_rco_clbr_params_0>
 800d172:	f7ff ff5d 	bl	800d030 <llhwc_cmn_reset_rco_clbr>
 800d176:	2000      	movs	r0, #0
 800d178:	6138      	str	r0, [r7, #16]
 800d17a:	e00a      	b.n	800d192 <??llhwc_cmn_runtime_rco_clbr_params_1>

0800d17c <??llhwc_cmn_runtime_rco_clbr_params_0>:
 800d17c:	b14c      	cbz	r4, 800d192 <??llhwc_cmn_runtime_rco_clbr_params_1>
 800d17e:	7e78      	ldrb	r0, [r7, #25]
 800d180:	2801      	cmp	r0, #1
 800d182:	d103      	bne.n	800d18c <??llhwc_cmn_runtime_rco_clbr_params_2>
 800d184:	6978      	ldr	r0, [r7, #20]
 800d186:	f000 fa41 	bl	800d60c <llhwc_cmn_update_rco_timer>
 800d18a:	e002      	b.n	800d192 <??llhwc_cmn_runtime_rco_clbr_params_1>

0800d18c <??llhwc_cmn_runtime_rco_clbr_params_2>:
 800d18c:	b908      	cbnz	r0, 800d192 <??llhwc_cmn_runtime_rco_clbr_params_1>
 800d18e:	f000 f805 	bl	800d19c <llhwc_cmn_start_stop_runtime_rco_clbr>

0800d192 <??llhwc_cmn_runtime_rco_clbr_params_1>:
 800d192:	6830      	ldr	r0, [r6, #0]
 800d194:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 800d198:	f007 b96b 	b.w	8014472 <os_rcrsv_mutex_release>

0800d19c <llhwc_cmn_start_stop_runtime_rco_clbr>:
 800d19c:	2033      	movs	r0, #51	; 0x33
 800d19e:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800d1a0:	4d8b      	ldr	r5, [pc, #556]	; (800d3d0 <??DataTable40>)
 800d1a2:	f7f3 f841 	bl	8000228 <bsp_debug_gpio_set>
 800d1a6:	6828      	ldr	r0, [r5, #0]
 800d1a8:	f04f 31ff 	mov.w	r1, #4294967295	; 0xffffffff
 800d1ac:	f8df 76a0 	ldr.w	r7, [pc, #1696]	; 800d850 <??DataTable50>
 800d1b0:	f007 f959 	bl	8014466 <os_rcrsv_mutex_wait>
 800d1b4:	7e38      	ldrb	r0, [r7, #24]
 800d1b6:	2400      	movs	r4, #0
 800d1b8:	f8df 66c4 	ldr.w	r6, [pc, #1732]	; 800d880 <??DataTable51_5>
 800d1bc:	b910      	cbnz	r0, 800d1c4 <??llhwc_cmn_start_stop_runtime_rco_clbr_0>
 800d1be:	7e79      	ldrb	r1, [r7, #25]
 800d1c0:	2901      	cmp	r1, #1
 800d1c2:	d140      	bne.n	800d246 <??llhwc_cmn_start_stop_runtime_rco_clbr_1>

0800d1c4 <??llhwc_cmn_start_stop_runtime_rco_clbr_0>:
 800d1c4:	7e71      	ldrb	r1, [r6, #25]
 800d1c6:	2900      	cmp	r1, #0
 800d1c8:	d13d      	bne.n	800d246 <??llhwc_cmn_start_stop_runtime_rco_clbr_1>
 800d1ca:	2030      	movs	r0, #48	; 0x30
 800d1cc:	f7f3 f830 	bl	8000230 <bsp_debug_gpio_toggle>
 800d1d0:	68f0      	ldr	r0, [r6, #12]
 800d1d2:	b948      	cbnz	r0, 800d1e8 <??llhwc_cmn_start_stop_runtime_rco_clbr_2>
 800d1d4:	2200      	movs	r2, #0
 800d1d6:	2101      	movs	r1, #1
 800d1d8:	f20f 00f9 	addw	r0, pc, #249	; 0xf9
 800d1dc:	f7f8 fab9 	bl	8005752 <os_timer_create>
 800d1e0:	b908      	cbnz	r0, 800d1e6 <??llhwc_cmn_start_stop_runtime_rco_clbr_3>
 800d1e2:	f04f 34ff 	mov.w	r4, #4294967295	; 0xffffffff

0800d1e6 <??llhwc_cmn_start_stop_runtime_rco_clbr_3>:
 800d1e6:	60f0      	str	r0, [r6, #12]

0800d1e8 <??llhwc_cmn_start_stop_runtime_rco_clbr_2>:
 800d1e8:	68f0      	ldr	r0, [r6, #12]
 800d1ea:	b1a0      	cbz	r0, 800d216 <??llhwc_cmn_start_stop_runtime_rco_clbr_4>
 800d1ec:	f7f8 fccc 	bl	8005b88 <os_get_tmr_state>
 800d1f0:	b188      	cbz	r0, 800d216 <??llhwc_cmn_start_stop_runtime_rco_clbr_4>
 800d1f2:	2002      	movs	r0, #2
 800d1f4:	7630      	strb	r0, [r6, #24]
 800d1f6:	7a30      	ldrb	r0, [r6, #8]
 800d1f8:	f000 f87c 	bl	800d2f4 <llhwc_cmn_hw_rco_clbr>
 800d1fc:	6931      	ldr	r1, [r6, #16]
 800d1fe:	68f0      	ldr	r0, [r6, #12]
 800d200:	0149      	lsls	r1, r1, #5
 800d202:	f7f8 fb49 	bl	8005898 <os_timer_start>
 800d206:	4604      	mov	r4, r0
 800d208:	1e40      	subs	r0, r0, #1
 800d20a:	4180      	sbcs	r0, r0
 800d20c:	0fc0      	lsrs	r0, r0, #31
 800d20e:	f7f2 ffdf 	bl	80001d0 <bsp_assert>
 800d212:	2001      	movs	r0, #1
 800d214:	7670      	strb	r0, [r6, #25]

0800d216 <??llhwc_cmn_start_stop_runtime_rco_clbr_4>:
 800d216:	7e78      	ldrb	r0, [r7, #25]
 800d218:	2802      	cmp	r0, #2
 800d21a:	bf01      	itttt	eq
 800d21c:	7e38      	ldrbeq	r0, [r7, #24]
 800d21e:	2800      	cmpeq	r0, #0
 800d220:	7e70      	ldrbeq	r0, [r6, #25]
 800d222:	2801      	cmpeq	r0, #1
 800d224:	d107      	bne.n	800d236 <??llhwc_cmn_start_stop_runtime_rco_clbr_5>
 800d226:	f7ff fef2 	bl	800d00e <llhwc_cmn_reset_slptmr_src>
 800d22a:	f7ff ff01 	bl	800d030 <llhwc_cmn_reset_rco_clbr>
 800d22e:	2100      	movs	r1, #0
 800d230:	2000      	movs	r0, #0
 800d232:	f7ff ff37 	bl	800d0a4 <llhwc_cmn_initial_rco_clbr>

0800d236 <??llhwc_cmn_start_stop_runtime_rco_clbr_5>:
 800d236:	6828      	ldr	r0, [r5, #0]
 800d238:	f007 f91b 	bl	8014472 <os_rcrsv_mutex_release>
 800d23c:	2033      	movs	r0, #51	; 0x33
 800d23e:	f7f2 fff5 	bl	800022c <bsp_debug_gpio_clear>
 800d242:	4620      	mov	r0, r4
 800d244:	bdf2      	pop	{r1, r4, r5, r6, r7, pc}

0800d246 <??llhwc_cmn_start_stop_runtime_rco_clbr_1>:
 800d246:	7e79      	ldrb	r1, [r7, #25]
 800d248:	2901      	cmp	r1, #1
 800d24a:	d0f4      	beq.n	800d236 <??llhwc_cmn_start_stop_runtime_rco_clbr_5>
 800d24c:	7e71      	ldrb	r1, [r6, #25]
 800d24e:	2800      	cmp	r0, #0
 800d250:	bf08      	it	eq
 800d252:	2901      	cmpeq	r1, #1
 800d254:	d113      	bne.n	800d27e <??llhwc_cmn_start_stop_runtime_rco_clbr_6>
 800d256:	2032      	movs	r0, #50	; 0x32
 800d258:	f7f2 ffea 	bl	8000230 <bsp_debug_gpio_toggle>
 800d25c:	7674      	strb	r4, [r6, #25]
 800d25e:	f8df 0628 	ldr.w	r0, [pc, #1576]	; 800d888 <??DataTable51_7>
 800d262:	6801      	ldr	r1, [r0, #0]
 800d264:	0849      	lsrs	r1, r1, #1
 800d266:	0049      	lsls	r1, r1, #1
 800d268:	6001      	str	r1, [r0, #0]
 800d26a:	f8df 0620 	ldr.w	r0, [pc, #1568]	; 800d88c <??DataTable51_8>
 800d26e:	6802      	ldr	r2, [r0, #0]
 800d270:	2100      	movs	r1, #0
 800d272:	4630      	mov	r0, r6
 800d274:	1c52      	adds	r2, r2, #1
 800d276:	6272      	str	r2, [r6, #36]	; 0x24
 800d278:	f000 f86e 	bl	800d358 <llhwc_cmn_hw_rco_compnstn_enable>
 800d27c:	e7cb      	b.n	800d216 <??llhwc_cmn_start_stop_runtime_rco_clbr_4>

0800d27e <??llhwc_cmn_start_stop_runtime_rco_clbr_6>:
 800d27e:	2901      	cmp	r1, #1
 800d280:	d1c9      	bne.n	800d216 <??llhwc_cmn_start_stop_runtime_rco_clbr_4>
 800d282:	2030      	movs	r0, #48	; 0x30
 800d284:	f7f2 ffd4 	bl	8000230 <bsp_debug_gpio_toggle>
 800d288:	f7f8 fc80 	bl	8005b8c <os_timer_get_active_sw_timers_number>
 800d28c:	2801      	cmp	r0, #1
 800d28e:	d1c2      	bne.n	800d216 <??llhwc_cmn_start_stop_runtime_rco_clbr_4>
 800d290:	68f0      	ldr	r0, [r6, #12]
 800d292:	f7f8 fc79 	bl	8005b88 <os_get_tmr_state>
 800d296:	2800      	cmp	r0, #0
 800d298:	d1bd      	bne.n	800d216 <??llhwc_cmn_start_stop_runtime_rco_clbr_4>
 800d29a:	68f0      	ldr	r0, [r6, #12]
 800d29c:	f7f8 fb35 	bl	800590a <os_timer_stop>
 800d2a0:	4604      	mov	r4, r0
 800d2a2:	1e40      	subs	r0, r0, #1
 800d2a4:	4180      	sbcs	r0, r0
 800d2a6:	0fc0      	lsrs	r0, r0, #31
 800d2a8:	f7f2 ff92 	bl	80001d0 <bsp_assert>
 800d2ac:	2000      	movs	r0, #0
 800d2ae:	7670      	strb	r0, [r6, #25]
 800d2b0:	f8df 05d4 	ldr.w	r0, [pc, #1492]	; 800d888 <??DataTable51_7>
 800d2b4:	6801      	ldr	r1, [r0, #0]
 800d2b6:	0849      	lsrs	r1, r1, #1
 800d2b8:	0049      	lsls	r1, r1, #1
 800d2ba:	6001      	str	r1, [r0, #0]
 800d2bc:	f8df 05cc 	ldr.w	r0, [pc, #1484]	; 800d88c <??DataTable51_8>
 800d2c0:	6802      	ldr	r2, [r0, #0]
 800d2c2:	2100      	movs	r1, #0
 800d2c4:	4630      	mov	r0, r6
 800d2c6:	1c52      	adds	r2, r2, #1
 800d2c8:	6272      	str	r2, [r6, #36]	; 0x24
 800d2ca:	f000 f845 	bl	800d358 <llhwc_cmn_hw_rco_compnstn_enable>
 800d2ce:	2000      	movs	r0, #0
 800d2d0:	8338      	strh	r0, [r7, #24]
 800d2d2:	e7b0      	b.n	800d236 <??llhwc_cmn_start_stop_runtime_rco_clbr_5>

0800d2d4 <llhwc_cmn_rco_clbr_timer_cbk>:
 800d2d4:	b580      	push	{r7, lr}
 800d2d6:	206d      	movs	r0, #109	; 0x6d
 800d2d8:	f7f2 ffa6 	bl	8000228 <bsp_debug_gpio_set>
 800d2dc:	f8df 05a0 	ldr.w	r0, [pc, #1440]	; 800d880 <??DataTable51_5>
 800d2e0:	2102      	movs	r1, #2
 800d2e2:	7601      	strb	r1, [r0, #24]
 800d2e4:	7a00      	ldrb	r0, [r0, #8]
 800d2e6:	f000 f805 	bl	800d2f4 <llhwc_cmn_hw_rco_clbr>
 800d2ea:	206d      	movs	r0, #109	; 0x6d

0800d2ec <?Subroutine1>:
 800d2ec:	e8bd 4002 	ldmia.w	sp!, {r1, lr}
 800d2f0:	f7f2 bf9c 	b.w	800022c <bsp_debug_gpio_clear>

0800d2f4 <llhwc_cmn_hw_rco_clbr>:
 800d2f4:	b570      	push	{r4, r5, r6, lr}
 800d2f6:	f8df 44f0 	ldr.w	r4, [pc, #1264]	; 800d7e8 <??DataTable48_1>
 800d2fa:	6c21      	ldr	r1, [r4, #64]	; 0x40
 800d2fc:	f8df 558c 	ldr.w	r5, [pc, #1420]	; 800d88c <??DataTable51_8>
 800d300:	f8df 657c 	ldr.w	r6, [pc, #1404]	; 800d880 <??DataTable51_5>
 800d304:	0849      	lsrs	r1, r1, #1
 800d306:	0049      	lsls	r1, r1, #1
 800d308:	6421      	str	r1, [r4, #64]	; 0x40
 800d30a:	6829      	ldr	r1, [r5, #0]
 800d30c:	1c49      	adds	r1, r1, #1
 800d30e:	6271      	str	r1, [r6, #36]	; 0x24
 800d310:	6c21      	ldr	r1, [r4, #64]	; 0x40
 800d312:	f360 0147 	bfi	r1, r0, #1, #7
 800d316:	6421      	str	r1, [r4, #64]	; 0x40
 800d318:	6860      	ldr	r0, [r4, #4]
 800d31a:	f020 0020 	bic.w	r0, r0, #32
 800d31e:	6060      	str	r0, [r4, #4]
 800d320:	6821      	ldr	r1, [r4, #0]
 800d322:	2001      	movs	r0, #1
 800d324:	f041 0120 	orr.w	r1, r1, #32
 800d328:	6021      	str	r1, [r4, #0]
 800d32a:	6822      	ldr	r2, [r4, #0]
 800d32c:	2105      	movs	r1, #5
 800d32e:	f022 0220 	bic.w	r2, r2, #32
 800d332:	6022      	str	r2, [r4, #0]
 800d334:	f000 f9fa 	bl	800d72c <llhwc_cmn_control_aclk>
 800d338:	6828      	ldr	r0, [r5, #0]
 800d33a:	6a71      	ldr	r1, [r6, #36]	; 0x24
 800d33c:	1c40      	adds	r0, r0, #1
 800d33e:	1c89      	adds	r1, r1, #2
 800d340:	e001      	b.n	800d346 <??llhwc_cmn_hw_rco_clbr_0>

0800d342 <??llhwc_cmn_hw_rco_clbr_1>:
 800d342:	6828      	ldr	r0, [r5, #0]
 800d344:	1c40      	adds	r0, r0, #1

0800d346 <??llhwc_cmn_hw_rco_clbr_0>:
 800d346:	4281      	cmp	r1, r0
 800d348:	d2fb      	bcs.n	800d342 <??llhwc_cmn_hw_rco_clbr_1>
 800d34a:	6c20      	ldr	r0, [r4, #64]	; 0x40
 800d34c:	f040 0001 	orr.w	r0, r0, #1
 800d350:	6420      	str	r0, [r4, #64]	; 0x40
 800d352:	bd70      	pop	{r4, r5, r6, pc}

0800d354 <??DataTable39>:
 800d354:	0440 4802                                   @..H

0800d358 <llhwc_cmn_hw_rco_compnstn_enable>:
 800d358:	f8df 2530 	ldr.w	r2, [pc, #1328]	; 800d88c <??DataTable51_8>
 800d35c:	6913      	ldr	r3, [r2, #16]
 800d35e:	2901      	cmp	r1, #1
 800d360:	f423 3380 	bic.w	r3, r3, #65536	; 0x10000
 800d364:	6113      	str	r3, [r2, #16]
 800d366:	f8d2 c000 	ldr.w	ip, [r2]
 800d36a:	f8df 3514 	ldr.w	r3, [pc, #1300]	; 800d880 <??DataTable51_5>
 800d36e:	f10c 0c01 	add.w	ip, ip, #1
 800d372:	f8c3 c028 	str.w	ip, [r3, #40]	; 0x28
 800d376:	d129      	bne.n	800d3cc <??llhwc_cmn_hw_rco_compnstn_enable_0>
 800d378:	6801      	ldr	r1, [r0, #0]
 800d37a:	6840      	ldr	r0, [r0, #4]
 800d37c:	fbb1 f0f0 	udiv	r0, r1, r0
 800d380:	60d0      	str	r0, [r2, #12]
 800d382:	f893 0020 	ldrb.w	r0, [r3, #32]
 800d386:	2801      	cmp	r0, #1
 800d388:	d104      	bne.n	800d394 <??llhwc_cmn_hw_rco_compnstn_enable_1>
 800d38a:	6911      	ldr	r1, [r2, #16]
 800d38c:	f360 010f 	bfi	r1, r0, #0, #16
 800d390:	6111      	str	r1, [r2, #16]
 800d392:	e009      	b.n	800d3a8 <??llhwc_cmn_hw_rco_compnstn_enable_2>

0800d394 <??llhwc_cmn_hw_rco_compnstn_enable_1>:
 800d394:	2800      	cmp	r0, #0
 800d396:	6910      	ldr	r0, [r2, #16]
 800d398:	bf07      	ittee	eq
 800d39a:	f440 407f 	orreq.w	r0, r0, #65280	; 0xff00
 800d39e:	f040 00ff 	orreq.w	r0, r0, #255	; 0xff
 800d3a2:	0c00      	lsrne	r0, r0, #16
 800d3a4:	0400      	lslne	r0, r0, #16
 800d3a6:	6110      	str	r0, [r2, #16]

0800d3a8 <??llhwc_cmn_hw_rco_compnstn_enable_2>:
 800d3a8:	6810      	ldr	r0, [r2, #0]
 800d3aa:	6a99      	ldr	r1, [r3, #40]	; 0x28
 800d3ac:	1c40      	adds	r0, r0, #1
 800d3ae:	1c89      	adds	r1, r1, #2
 800d3b0:	e001      	b.n	800d3b6 <??llhwc_cmn_hw_rco_compnstn_enable_3>

0800d3b2 <??llhwc_cmn_hw_rco_compnstn_enable_4>:
 800d3b2:	6810      	ldr	r0, [r2, #0]
 800d3b4:	1c40      	adds	r0, r0, #1

0800d3b6 <??llhwc_cmn_hw_rco_compnstn_enable_3>:
 800d3b6:	4281      	cmp	r1, r0
 800d3b8:	d2fb      	bcs.n	800d3b2 <??llhwc_cmn_hw_rco_compnstn_enable_4>
 800d3ba:	6910      	ldr	r0, [r2, #16]
 800d3bc:	f440 3080 	orr.w	r0, r0, #65536	; 0x10000
 800d3c0:	6110      	str	r0, [r2, #16]
 800d3c2:	6811      	ldr	r1, [r2, #0]
 800d3c4:	2001      	movs	r0, #1
 800d3c6:	7698      	strb	r0, [r3, #26]
 800d3c8:	1c49      	adds	r1, r1, #1
 800d3ca:	62d9      	str	r1, [r3, #44]	; 0x2c

0800d3cc <??llhwc_cmn_hw_rco_compnstn_enable_0>:
 800d3cc:	4770      	bx	lr
	...

0800d3d0 <??DataTable40>:
 800d3d0:	18c0 2000                                   ... 

0800d3d4 <??DataTable40_1>:
 800d3d4:	0480 4802                                   ...H

0800d3d8 <??DataTable40_2>:
 800d3d8:	1d59 0803                                   Y...

0800d3dc <??DataTable40_3>:
 800d3dc:	1d5b 0803                                   [...

0800d3e0 <??DataTable40_4>:
 800d3e0:	1d5d 0803                                   ]...

0800d3e4 <??DataTable40_5>:
 800d3e4:	1d5a 0803                                   Z...

0800d3e8 <??DataTable40_6>:
 800d3e8:	0008 4802                                   ...H

0800d3ec <llhwc_cmn_rco_isr>:
 800d3ec:	e92d 4ffe 	stmdb	sp!, {r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800d3f0:	2034      	movs	r0, #52	; 0x34
 800d3f2:	f7f2 ff19 	bl	8000228 <bsp_debug_gpio_set>
 800d3f6:	f8df a490 	ldr.w	sl, [pc, #1168]	; 800d888 <??DataTable51_7>
 800d3fa:	f8da 0000 	ldr.w	r0, [sl]
 800d3fe:	f8df 4450 	ldr.w	r4, [pc, #1104]	; 800d850 <??DataTable50>
 800d402:	2500      	movs	r5, #0
 800d404:	f3c0 2713 	ubfx	r7, r0, #8, #20
 800d408:	7ea0      	ldrb	r0, [r4, #26]
 800d40a:	f010 00df 	ands.w	r0, r0, #223	; 0xdf
 800d40e:	76a0      	strb	r0, [r4, #26]
 800d410:	bf18      	it	ne
 800d412:	2501      	movne	r5, #1
 800d414:	f8df 8384 	ldr.w	r8, [pc, #900]	; 800d79c <??DataTable47>
 800d418:	f898 0040 	ldrb.w	r0, [r8, #64]	; 0x40
 800d41c:	ea55 0100 	orrs.w	r1, r5, r0
 800d420:	d008      	beq.n	800d434 <??llhwc_cmn_rco_isr_0>
 800d422:	2801      	cmp	r0, #1
 800d424:	d101      	bne.n	800d42a <??llhwc_cmn_rco_isr_1>
 800d426:	0028      	movs	r0, r5
 800d428:	d104      	bne.n	800d434 <??llhwc_cmn_rco_isr_0>

0800d42a <??llhwc_cmn_rco_isr_1>:
 800d42a:	2000      	movs	r0, #0
 800d42c:	f7f2 fee0 	bl	80001f0 <bsp_control_aclk>
 800d430:	f888 5040 	strb.w	r5, [r8, #64]	; 0x40

0800d434 <??llhwc_cmn_rco_isr_0>:
 800d434:	f8df 5448 	ldr.w	r5, [pc, #1096]	; 800d880 <??DataTable51_5>
 800d438:	6928      	ldr	r0, [r5, #16]
 800d43a:	2800      	cmp	r0, #0
 800d43c:	f000 80db 	beq.w	800d5f6 <??llhwc_cmn_rco_isr_2>
 800d440:	f8da 1000 	ldr.w	r1, [sl]
 800d444:	f8df b444 	ldr.w	fp, [pc, #1092]	; 800d88c <??DataTable51_8>
 800d448:	0849      	lsrs	r1, r1, #1
 800d44a:	0049      	lsls	r1, r1, #1
 800d44c:	f8ca 1000 	str.w	r1, [sl]
 800d450:	f8db 0000 	ldr.w	r0, [fp]
 800d454:	1c40      	adds	r0, r0, #1
 800d456:	6268      	str	r0, [r5, #36]	; 0x24
 800d458:	7e28      	ldrb	r0, [r5, #24]
 800d45a:	2800      	cmp	r0, #0
 800d45c:	bf18      	it	ne
 800d45e:	2801      	cmpne	r0, #1
 800d460:	d122      	bne.n	800d4a8 <??llhwc_cmn_rco_isr_3>
 800d462:	1e78      	subs	r0, r7, #1
 800d464:	4180      	sbcs	r0, r0
 800d466:	43c0      	mvns	r0, r0
 800d468:	0fc0      	lsrs	r0, r0, #31
 800d46a:	f7f2 feb1 	bl	80001d0 <bsp_assert>
 800d46e:	2f00      	cmp	r7, #0
 800d470:	f000 80c1 	beq.w	800d5f6 <??llhwc_cmn_rco_isr_2>
 800d474:	6027      	str	r7, [r4, #0]
 800d476:	616f      	str	r7, [r5, #20]
 800d478:	2001      	movs	r0, #1
 800d47a:	f8df 141c 	ldr.w	r1, [pc, #1052]	; 800d898 <??DataTable51_11>
 800d47e:	7120      	strb	r0, [r4, #4]
 800d480:	428f      	cmp	r7, r1
 800d482:	d30e      	bcc.n	800d4a2 <??llhwc_cmn_rco_isr_4>
 800d484:	f8df 3414 	ldr.w	r3, [pc, #1044]	; 800d89c <??DataTable51_12>
 800d488:	2200      	movs	r2, #0
 800d48a:	fbe7 3203 	umlal	r3, r2, r7, r3
 800d48e:	f8df 0410 	ldr.w	r0, [pc, #1040]	; 800d8a0 <??DataTable51_13>
 800d492:	0c11      	lsrs	r1, r2, #16
 800d494:	fb00 7711 	mls	r7, r0, r1, r7
 800d498:	b107      	cbz	r7, 800d49c <??llhwc_cmn_rco_isr_5>
 800d49a:	1c49      	adds	r1, r1, #1

0800d49c <??llhwc_cmn_rco_isr_5>:
 800d49c:	1e49      	subs	r1, r1, #1
 800d49e:	6121      	str	r1, [r4, #16]
 800d4a0:	e0a9      	b.n	800d5f6 <??llhwc_cmn_rco_isr_2>

0800d4a2 <??llhwc_cmn_rco_isr_4>:
 800d4a2:	2000      	movs	r0, #0
 800d4a4:	6120      	str	r0, [r4, #16]
 800d4a6:	e0a6      	b.n	800d5f6 <??llhwc_cmn_rco_isr_2>

0800d4a8 <??llhwc_cmn_rco_isr_3>:
 800d4a8:	2802      	cmp	r0, #2
 800d4aa:	f040 80a4 	bne.w	800d5f6 <??llhwc_cmn_rco_isr_2>
 800d4ae:	616f      	str	r7, [r5, #20]
 800d4b0:	682e      	ldr	r6, [r5, #0]
 800d4b2:	f8df e3f0 	ldr.w	lr, [pc, #1008]	; 800d8a4 <??DataTable51_14>
 800d4b6:	207f      	movs	r0, #127	; 0x7f
 800d4b8:	9601      	str	r6, [sp, #4]
 800d4ba:	f8d4 8000 	ldr.w	r8, [r4]
 800d4be:	6869      	ldr	r1, [r5, #4]
 800d4c0:	2300      	movs	r3, #0
 800d4c2:	eb08 0248 	add.w	r2, r8, r8, lsl #1
 800d4c6:	9100      	str	r1, [sp, #0]
 800d4c8:	fba2 ec0e 	umull	lr, ip, r2, lr
 800d4cc:	fba0 0107 	umull	r0, r1, r0, r7
 800d4d0:	7a2a      	ldrb	r2, [r5, #8]
 800d4d2:	ea4f 395c 	mov.w	r9, ip, lsr #13
 800d4d6:	f04f 0a00 	mov.w	sl, #0
 800d4da:	f018 f8ad 	bl	8025638 <__aeabi_uldivmod>
 800d4de:	2300      	movs	r3, #0
 800d4e0:	4299      	cmp	r1, r3
 800d4e2:	d806      	bhi.n	800d4f2 <??llhwc_cmn_rco_isr_6>
 800d4e4:	4540      	cmp	r0, r8
 800d4e6:	d204      	bcs.n	800d4f2 <??llhwc_cmn_rco_isr_6>
 800d4e8:	eba8 0a00 	sub.w	sl, r8, r0
 800d4ec:	f885 3020 	strb.w	r3, [r5, #32]
 800d4f0:	e00a      	b.n	800d508 <??llhwc_cmn_rco_isr_7>

0800d4f2 <??llhwc_cmn_rco_isr_6>:
 800d4f2:	428b      	cmp	r3, r1
 800d4f4:	d808      	bhi.n	800d508 <??llhwc_cmn_rco_isr_7>
 800d4f6:	bf28      	it	cs
 800d4f8:	4580      	cmpcs	r8, r0
 800d4fa:	d205      	bcs.n	800d508 <??llhwc_cmn_rco_isr_7>
 800d4fc:	f04f 0e01 	mov.w	lr, #1
 800d500:	eba0 0a08 	sub.w	sl, r0, r8
 800d504:	f885 e020 	strb.w	lr, [r5, #32]

0800d508 <??llhwc_cmn_rco_isr_7>:
 800d508:	45d1      	cmp	r9, sl
 800d50a:	d306      	bcc.n	800d51a <??llhwc_cmn_rco_isr_8>
 800d50c:	f04f 0c02 	mov.w	ip, #2
 800d510:	469a      	mov	sl, r3
 800d512:	4640      	mov	r0, r8
 800d514:	2100      	movs	r1, #0
 800d516:	f885 c020 	strb.w	ip, [r5, #32]

0800d51a <??llhwc_cmn_rco_isr_8>:
 800d51a:	46c4      	mov	ip, r8
 800d51c:	e006      	b.n	800d52c <??llhwc_cmn_rco_isr_9>

0800d51e <??llhwc_cmn_rco_isr_10>:
 800d51e:	fbba f9fc 	udiv	r9, sl, ip
 800d522:	46e6      	mov	lr, ip
 800d524:	fb0c aa19 	mls	sl, ip, r9, sl
 800d528:	46d4      	mov	ip, sl
 800d52a:	46f2      	mov	sl, lr

0800d52c <??llhwc_cmn_rco_isr_9>:
 800d52c:	f1bc 0f00 	cmp.w	ip, #0
 800d530:	d1f5      	bne.n	800d51e <??llhwc_cmn_rco_isr_10>
 800d532:	f895 e020 	ldrb.w	lr, [r5, #32]
 800d536:	f8d5 c004 	ldr.w	ip, [r5, #4]
 800d53a:	f1be 0f00 	cmp.w	lr, #0
 800d53e:	d104      	bne.n	800d54a <??llhwc_cmn_rco_isr_11>
 800d540:	ebb8 0000 	subs.w	r0, r8, r0
 800d544:	eb63 0101 	sbc.w	r1, r3, r1
 800d548:	e005      	b.n	800d556 <??llhwc_cmn_rco_isr_12>

0800d54a <??llhwc_cmn_rco_isr_11>:
 800d54a:	f1be 0f01 	cmp.w	lr, #1
 800d54e:	d109      	bne.n	800d564 <??llhwc_cmn_rco_isr_13>
 800d550:	ebb0 0008 	subs.w	r0, r0, r8
 800d554:	4199      	sbcs	r1, r3

0800d556 <??llhwc_cmn_rco_isr_12>:
 800d556:	4652      	mov	r2, sl
 800d558:	f018 f86e 	bl	8025638 <__aeabi_uldivmod>
 800d55c:	4684      	mov	ip, r0
 800d55e:	fbb8 f6fa 	udiv	r6, r8, sl
 800d562:	e004      	b.n	800d56e <??llhwc_cmn_rco_isr_14>

0800d564 <??llhwc_cmn_rco_isr_13>:
 800d564:	f1be 0f02 	cmp.w	lr, #2
 800d568:	bf04      	itt	eq
 800d56a:	469c      	moveq	ip, r3
 800d56c:	2601      	moveq	r6, #1

0800d56e <??llhwc_cmn_rco_isr_14>:
 800d56e:	602e      	str	r6, [r5, #0]
 800d570:	f8c5 c004 	str.w	ip, [r5, #4]
 800d574:	ea5f 000c 	movs.w	r0, ip
 800d578:	bf18      	it	ne
 800d57a:	2e01      	cmpne	r6, #1
 800d57c:	d109      	bne.n	800d592 <??llhwc_cmn_rco_isr_15>
 800d57e:	2000      	movs	r0, #0
 800d580:	60a0      	str	r0, [r4, #8]
 800d582:	76a8      	strb	r0, [r5, #26]
 800d584:	f8db 0010 	ldr.w	r0, [fp, #16]
 800d588:	f420 3080 	bic.w	r0, r0, #65536	; 0x10000
 800d58c:	f8cb 0010 	str.w	r0, [fp, #16]
 800d590:	e031      	b.n	800d5f6 <??llhwc_cmn_rco_isr_2>

0800d592 <??llhwc_cmn_rco_isr_15>:
 800d592:	fbb6 f1fc 	udiv	r1, r6, ip
 800d596:	ebc6 13c6 	rsb	r3, r6, r6, lsl #7
 800d59a:	fb0c 6111 	mls	r1, ip, r1, r6
 800d59e:	4379      	muls	r1, r7
 800d5a0:	015b      	lsls	r3, r3, #5
 800d5a2:	fbb1 f3f3 	udiv	r3, r1, r3
 800d5a6:	60a3      	str	r3, [r4, #8]
 800d5a8:	7ea9      	ldrb	r1, [r5, #26]
 800d5aa:	b969      	cbnz	r1, 800d5c8 <??llhwc_cmn_rco_isr_16>
 800d5ac:	2035      	movs	r0, #53	; 0x35
 800d5ae:	f7f2 fe3b 	bl	8000228 <bsp_debug_gpio_set>
 800d5b2:	2101      	movs	r1, #1
 800d5b4:	4628      	mov	r0, r5
 800d5b6:	f7ff fecf 	bl	800d358 <llhwc_cmn_hw_rco_compnstn_enable>
 800d5ba:	4638      	mov	r0, r7
 800d5bc:	f000 f826 	bl	800d60c <llhwc_cmn_update_rco_timer>
 800d5c0:	2035      	movs	r0, #53	; 0x35
 800d5c2:	f7f2 fe33 	bl	800022c <bsp_debug_gpio_clear>
 800d5c6:	e016      	b.n	800d5f6 <??llhwc_cmn_rco_isr_2>

0800d5c8 <??llhwc_cmn_rco_isr_16>:
 800d5c8:	9901      	ldr	r1, [sp, #4]
 800d5ca:	428e      	cmp	r6, r1
 800d5cc:	bf04      	itt	eq
 800d5ce:	9a00      	ldreq	r2, [sp, #0]
 800d5d0:	4594      	cmpeq	ip, r2
 800d5d2:	d010      	beq.n	800d5f6 <??llhwc_cmn_rco_isr_2>
 800d5d4:	2035      	movs	r0, #53	; 0x35
 800d5d6:	f7f2 fe27 	bl	8000228 <bsp_debug_gpio_set>
 800d5da:	f006 ff3c 	bl	8014456 <os_disable_isr>
 800d5de:	2101      	movs	r1, #1
 800d5e0:	4628      	mov	r0, r5
 800d5e2:	f7ff feb9 	bl	800d358 <llhwc_cmn_hw_rco_compnstn_enable>
 800d5e6:	2035      	movs	r0, #53	; 0x35
 800d5e8:	f7f2 fe20 	bl	800022c <bsp_debug_gpio_clear>
 800d5ec:	f006 ff35 	bl	801445a <os_enable_isr>
 800d5f0:	4638      	mov	r0, r7
 800d5f2:	f000 f80b 	bl	800d60c <llhwc_cmn_update_rco_timer>

0800d5f6 <??llhwc_cmn_rco_isr_2>:
 800d5f6:	b003      	add	sp, #12
 800d5f8:	2034      	movs	r0, #52	; 0x34
 800d5fa:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800d5fe:	f7f2 be15 	b.w	800022c <bsp_debug_gpio_clear>
	...

0800d604 <??DataTable41>:
 800d604:	1d5c 0803                                   \...

0800d608 <??DataTable41_1>:
 800d608:	1d5e 0803                                   ^...

0800d60c <llhwc_cmn_update_rco_timer>:
 800d60c:	f44f 42fa 	mov.w	r2, #32000	; 0x7d00
 800d610:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800d614:	4683      	mov	fp, r0
 800d616:	4d9a      	ldr	r5, [pc, #616]	; (800d880 <??DataTable51_5>)
 800d618:	6829      	ldr	r1, [r5, #0]
 800d61a:	686f      	ldr	r7, [r5, #4]
 800d61c:	7a28      	ldrb	r0, [r5, #8]
 800d61e:	fbb1 faf7 	udiv	sl, r1, r7
 800d622:	692f      	ldr	r7, [r5, #16]
 800d624:	4604      	mov	r4, r0
 800d626:	eb04 0644 	add.w	r6, r4, r4, lsl #1
 800d62a:	fba0 8907 	umull	r8, r9, r0, r7
 800d62e:	fba2 0108 	umull	r0, r1, r2, r8
 800d632:	fb02 1109 	mla	r1, r2, r9, r1
 800d636:	fbaa 230b 	umull	r2, r3, sl, fp
 800d63a:	f017 fffd 	bl	8025638 <__aeabi_uldivmod>
 800d63e:	1072      	asrs	r2, r6, #1
 800d640:	fbaa 0100 	umull	r0, r1, sl, r0
 800d644:	eb06 7692 	add.w	r6, r6, r2, lsr #30
 800d648:	465a      	mov	r2, fp
 800d64a:	ebb0 00a6 	subs.w	r0, r0, r6, asr #2
 800d64e:	eb71 71e6 	sbcs.w	r1, r1, r6, asr #31
 800d652:	4682      	mov	sl, r0
 800d654:	f44f 46fa 	mov.w	r6, #32000	; 0x7d00
 800d658:	468b      	mov	fp, r1
 800d65a:	fba2 010a 	umull	r0, r1, r2, sl
 800d65e:	4374      	muls	r4, r6
 800d660:	017f      	lsls	r7, r7, #5
 800d662:	fb02 110b 	mla	r1, r2, fp, r1
 800d666:	4622      	mov	r2, r4
 800d668:	17e3      	asrs	r3, r4, #31
 800d66a:	f017 ffe5 	bl	8025638 <__aeabi_uldivmod>
 800d66e:	4c87      	ldr	r4, [pc, #540]	; (800d88c <??DataTable51_8>)
 800d670:	6821      	ldr	r1, [r4, #0]
 800d672:	6aec      	ldr	r4, [r5, #44]	; 0x2c
 800d674:	1c49      	adds	r1, r1, #1
 800d676:	1b0c      	subs	r4, r1, r4
 800d678:	ebc4 1440 	rsb	r4, r4, r0, lsl #5
 800d67c:	42a7      	cmp	r7, r4
 800d67e:	bf38      	it	cc
 800d680:	463c      	movcc	r4, r7
 800d682:	68e8      	ldr	r0, [r5, #12]
 800d684:	f7f8 f941 	bl	800590a <os_timer_stop>
 800d688:	1e40      	subs	r0, r0, #1
 800d68a:	4180      	sbcs	r0, r0
 800d68c:	0fc0      	lsrs	r0, r0, #31
 800d68e:	f7f2 fd9f 	bl	80001d0 <bsp_assert>
 800d692:	68e8      	ldr	r0, [r5, #12]
 800d694:	4621      	mov	r1, r4
 800d696:	f7f8 f8ff 	bl	8005898 <os_timer_start>
 800d69a:	1e40      	subs	r0, r0, #1
 800d69c:	4180      	sbcs	r0, r0
 800d69e:	0fc0      	lsrs	r0, r0, #31
 800d6a0:	e8bd 4ff2 	ldmia.w	sp!, {r1, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800d6a4:	f7f2 bd94 	b.w	80001d0 <bsp_assert>

0800d6a8 <llhwc_cmn_get_freq_ratio>:
 800d6a8:	4a69      	ldr	r2, [pc, #420]	; (800d850 <??DataTable50>)
 800d6aa:	7d11      	ldrb	r1, [r2, #20]
 800d6ac:	2001      	movs	r0, #1
 800d6ae:	b141      	cbz	r1, 800d6c2 <??llhwc_cmn_get_freq_ratio_0>
 800d6b0:	2901      	cmp	r1, #1
 800d6b2:	d106      	bne.n	800d6c2 <??llhwc_cmn_get_freq_ratio_0>
 800d6b4:	6810      	ldr	r0, [r2, #0]
 800d6b6:	4a79      	ldr	r2, [pc, #484]	; (800d89c <??DataTable51_12>)
 800d6b8:	2100      	movs	r1, #0
 800d6ba:	fbe0 2102 	umlal	r2, r1, r0, r2
 800d6be:	0c08      	lsrs	r0, r1, #16
 800d6c0:	1c40      	adds	r0, r0, #1

0800d6c2 <??llhwc_cmn_get_freq_ratio_0>:
 800d6c2:	b2c0      	uxtb	r0, r0
 800d6c4:	4770      	bx	lr

0800d6c6 <llhwc_cmn_control_hclk>:
 800d6c6:	b538      	push	{r3, r4, r5, lr}
 800d6c8:	4604      	mov	r4, r0
 800d6ca:	4d34      	ldr	r5, [pc, #208]	; (800d79c <??DataTable47>)
 800d6cc:	f895 0041 	ldrb.w	r0, [r5, #65]	; 0x41
 800d6d0:	ea54 0100 	orrs.w	r1, r4, r0
 800d6d4:	d00e      	beq.n	800d6f4 <??llhwc_cmn_control_hclk_0>
 800d6d6:	2801      	cmp	r0, #1
 800d6d8:	bf08      	it	eq
 800d6da:	2c01      	cmpeq	r4, #1
 800d6dc:	d00a      	beq.n	800d6f4 <??llhwc_cmn_control_hclk_0>
 800d6de:	0020      	movs	r0, r4
 800d6e0:	d109      	bne.n	800d6f6 <??llhwc_cmn_control_hclk_1>
 800d6e2:	f105 0044 	add.w	r0, r5, #68	; 0x44
 800d6e6:	f7fe fcd8 	bl	800c09a <llhwc_slptmr_get>

0800d6ea <??llhwc_cmn_control_hclk_2>:
 800d6ea:	2000      	movs	r0, #0

0800d6ec <??llhwc_cmn_control_hclk_3>:
 800d6ec:	f7f2 fd7f 	bl	80001ee <bsp_control_hclk>
 800d6f0:	f885 4041 	strb.w	r4, [r5, #65]	; 0x41

0800d6f4 <??llhwc_cmn_control_hclk_0>:
 800d6f4:	bd31      	pop	{r0, r4, r5, pc}

0800d6f6 <??llhwc_cmn_control_hclk_1>:
 800d6f6:	2c01      	cmp	r4, #1
 800d6f8:	d1f7      	bne.n	800d6ea <??llhwc_cmn_control_hclk_2>
 800d6fa:	e7f7      	b.n	800d6ec <??llhwc_cmn_control_hclk_3>

0800d6fc <llhwc_cmn_evnt_notify>:
 800d6fc:	b538      	push	{r3, r4, r5, lr}
 800d6fe:	0004      	movs	r4, r0
 800d700:	bf16      	itet	ne
 800d702:	2801      	cmpne	r0, #1
 800d704:	2001      	moveq	r0, #1
 800d706:	2000      	movne	r0, #0
 800d708:	f7f2 fd62 	bl	80001d0 <bsp_assert>
 800d70c:	4d23      	ldr	r5, [pc, #140]	; (800d79c <??DataTable47>)
 800d70e:	f895 0042 	ldrb.w	r0, [r5, #66]	; 0x42
 800d712:	2802      	cmp	r0, #2
 800d714:	bf0c      	ite	eq
 800d716:	2c01      	cmpeq	r4, #1
 800d718:	4284      	cmpne	r4, r0
 800d71a:	d004      	beq.n	800d726 <??llhwc_cmn_evnt_notify_0>
 800d71c:	4620      	mov	r0, r4
 800d71e:	f7f2 fd72 	bl	8000206 <bsp_evnt_not>
 800d722:	f885 4042 	strb.w	r4, [r5, #66]	; 0x42

0800d726 <??llhwc_cmn_evnt_notify_0>:
 800d726:	bd31      	pop	{r0, r4, r5, pc}

0800d728 <??DataTable45>:
 800d728:	08a4 2000                                   ... 

0800d72c <llhwc_cmn_control_aclk>:
 800d72c:	4a48      	ldr	r2, [pc, #288]	; (800d850 <??DataTable50>)
 800d72e:	b538      	push	{r3, r4, r5, lr}
 800d730:	7e93      	ldrb	r3, [r2, #26]
 800d732:	2501      	movs	r5, #1
 800d734:	408d      	lsls	r5, r1
 800d736:	43ab      	bics	r3, r5
 800d738:	f000 0501 	and.w	r5, r0, #1
 800d73c:	fa05 f101 	lsl.w	r1, r5, r1
 800d740:	4319      	orrs	r1, r3
 800d742:	7691      	strb	r1, [r2, #26]
 800d744:	2400      	movs	r4, #0
 800d746:	b2c9      	uxtb	r1, r1
 800d748:	b101      	cbz	r1, 800d74c <??llhwc_cmn_control_aclk_0>
 800d74a:	2401      	movs	r4, #1

0800d74c <??llhwc_cmn_control_aclk_0>:
 800d74c:	4d13      	ldr	r5, [pc, #76]	; (800d79c <??DataTable47>)
 800d74e:	f895 1040 	ldrb.w	r1, [r5, #64]	; 0x40
 800d752:	ea54 0201 	orrs.w	r2, r4, r1
 800d756:	d00a      	beq.n	800d76e <??llhwc_cmn_control_aclk_1>
 800d758:	2901      	cmp	r1, #1
 800d75a:	d101      	bne.n	800d760 <??llhwc_cmn_control_aclk_2>
 800d75c:	0021      	movs	r1, r4
 800d75e:	d106      	bne.n	800d76e <??llhwc_cmn_control_aclk_1>

0800d760 <??llhwc_cmn_control_aclk_2>:
 800d760:	2801      	cmp	r0, #1
 800d762:	bf18      	it	ne
 800d764:	2000      	movne	r0, #0
 800d766:	f7f2 fd43 	bl	80001f0 <bsp_control_aclk>
 800d76a:	f885 4040 	strb.w	r4, [r5, #64]	; 0x40

0800d76e <??llhwc_cmn_control_aclk_1>:
 800d76e:	bd31      	pop	{r0, r4, r5, pc}

0800d770 <llhwc_cmn_slp_timer_value_to_us_overflow>:
 800d770:	211f      	movs	r1, #31
 800d772:	0882      	lsrs	r2, r0, #2
 800d774:	2300      	movs	r3, #0
 800d776:	fbe1 2300 	umlal	r2, r3, r1, r0
 800d77a:	4610      	mov	r0, r2
 800d77c:	4619      	mov	r1, r3
 800d77e:	4770      	bx	lr

0800d780 <llhwc_cmn_sys_configure_ll_ctx>:
 800d780:	b538      	push	{r3, r4, r5, lr}
 800d782:	4604      	mov	r4, r0
 800d784:	460d      	mov	r5, r1
 800d786:	f005 f8cb 	bl	8012920 <os_wrapper_is_rtos_used>
 800d78a:	b908      	cbnz	r0, 800d790 <??llhwc_cmn_sys_configure_ll_ctx_0>
 800d78c:	2c02      	cmp	r4, #2
 800d78e:	da04      	bge.n	800d79a <??llhwc_cmn_sys_configure_ll_ctx_1>

0800d790 <??llhwc_cmn_sys_configure_ll_ctx_0>:
 800d790:	2d02      	cmp	r5, #2
 800d792:	da02      	bge.n	800d79a <??llhwc_cmn_sys_configure_ll_ctx_1>
 800d794:	4844      	ldr	r0, [pc, #272]	; (800d8a8 <??DataTable51_15>)
 800d796:	7104      	strb	r4, [r0, #4]
 800d798:	7145      	strb	r5, [r0, #5]

0800d79a <??llhwc_cmn_sys_configure_ll_ctx_1>:
 800d79a:	bd31      	pop	{r0, r4, r5, pc}

0800d79c <??DataTable47>:
 800d79c:	07f8 2000                                   ... 

0800d7a0 <??DataTable47_1>:
 800d7a0:	8240 4802                                   @..H

0800d7a4 <??DataTable47_2>:
 800d7a4:	1a28 0803                                   (...

0800d7a8 <llhwc_cmn_set_freq_correction_reg>:
 800d7a8:	4a40      	ldr	r2, [pc, #256]	; (800d8ac <??DataTable51_16>)
 800d7aa:	6813      	ldr	r3, [r2, #0]
 800d7ac:	2b04      	cmp	r3, #4
 800d7ae:	d017      	beq.n	800d7e0 <??llhwc_cmn_set_freq_correction_reg_0>
 800d7b0:	2901      	cmp	r1, #1
 800d7b2:	bf0c      	ite	eq
 800d7b4:	f5a0 6080 	subeq.w	r0, r0, #1024	; 0x400
 800d7b8:	f6a0 0001 	subwne	r0, r0, #2049	; 0x801
 800d7bc:	493c      	ldr	r1, [pc, #240]	; (800d8b0 <??DataTable51_17>)
 800d7be:	680a      	ldr	r2, [r1, #0]
 800d7c0:	2800      	cmp	r0, #0
 800d7c2:	bf54      	ite	pl
 800d7c4:	f422 027f 	bicpl.w	r2, r2, #16711680	; 0xff0000
 800d7c8:	f442 027f 	orrmi.w	r2, r2, #16711680	; 0xff0000
 800d7cc:	684b      	ldr	r3, [r1, #4]
 800d7ce:	600a      	str	r2, [r1, #0]
 800d7d0:	1202      	asrs	r2, r0, #8
 800d7d2:	f362 4317 	bfi	r3, r2, #16, #8
 800d7d6:	688a      	ldr	r2, [r1, #8]
 800d7d8:	604b      	str	r3, [r1, #4]
 800d7da:	f360 4217 	bfi	r2, r0, #16, #8
 800d7de:	608a      	str	r2, [r1, #8]

0800d7e0 <??llhwc_cmn_set_freq_correction_reg_0>:
 800d7e0:	4770      	bx	lr
	...

0800d7e4 <??DataTable48>:
 800d7e4:	0468 4802                                   h..H

0800d7e8 <??DataTable48_1>:
 800d7e8:	0444 4802                                   D..H

0800d7ec <??DataTable48_2>:
 800d7ec:	826c 4802                                   l..H

0800d7f0 <llhwc_cmn_read_phy_reg>:
 800d7f0:	f000 bfa0 	b.w	800e734 <llhwc_phy_read_reg>

0800d7f4 <llhwc_cmn_write_phy_reg>:
 800d7f4:	f000 bfba 	b.w	800e76c <llhwc_phy_write_reg>

0800d7f8 <llhwc_cmn_set_temperature_sensor_state>:
 800d7f8:	482b      	ldr	r0, [pc, #172]	; (800d8a8 <??DataTable51_15>)
 800d7fa:	2101      	movs	r1, #1
 800d7fc:	7081      	strb	r1, [r0, #2]
 800d7fe:	78c1      	ldrb	r1, [r0, #3]
 800d800:	f041 0102 	orr.w	r1, r1, #2
 800d804:	70c1      	strb	r1, [r0, #3]
 800d806:	f7f2 bd0d 	b.w	8000224 <bsp_request_temperature>
	...

0800d80c <??DataTable49>:
 800d80c:	0408 4802                                   ...H

0800d810 <llhwc_cmn_set_temperature_value>:
 800d810:	b410      	push	{r4}
 800d812:	4925      	ldr	r1, [pc, #148]	; (800d8a8 <??DataTable51_15>)
 800d814:	788a      	ldrb	r2, [r1, #2]
 800d816:	2a01      	cmp	r2, #1
 800d818:	d117      	bne.n	800d84a <??llhwc_cmn_set_temperature_value_0>
 800d81a:	78ca      	ldrb	r2, [r1, #3]
 800d81c:	07d3      	lsls	r3, r2, #31
 800d81e:	d414      	bmi.n	800d84a <??llhwc_cmn_set_temperature_value_0>
 800d820:	880b      	ldrh	r3, [r1, #0]
 800d822:	2bff      	cmp	r3, #255	; 0xff
 800d824:	d010      	beq.n	800d848 <??llhwc_cmn_set_temperature_value_1>
 800d826:	4298      	cmp	r0, r3
 800d828:	bf34      	ite	cc
 800d82a:	1a1c      	subcc	r4, r3, r0
 800d82c:	1ac4      	subcs	r4, r0, r3
 800d82e:	2c06      	cmp	r4, #6
 800d830:	bfac      	ite	ge
 800d832:	2301      	movge	r3, #1
 800d834:	2300      	movlt	r3, #0
 800d836:	f002 02fe 	and.w	r2, r2, #254	; 0xfe
 800d83a:	431a      	orrs	r2, r3
 800d83c:	70ca      	strb	r2, [r1, #3]
 800d83e:	07d3      	lsls	r3, r2, #31
 800d840:	d503      	bpl.n	800d84a <??llhwc_cmn_set_temperature_value_0>
 800d842:	f002 02fd 	and.w	r2, r2, #253	; 0xfd
 800d846:	70ca      	strb	r2, [r1, #3]

0800d848 <??llhwc_cmn_set_temperature_value_1>:
 800d848:	8008      	strh	r0, [r1, #0]

0800d84a <??llhwc_cmn_set_temperature_value_0>:
 800d84a:	2000      	movs	r0, #0
 800d84c:	bc10      	pop	{r4}
 800d84e:	4770      	bx	lr

0800d850 <??DataTable50>:
 800d850:	0884 2000                                   ... 

0800d854 <llhwc_cmn_request_temperature>:
 800d854:	4814      	ldr	r0, [pc, #80]	; (800d8a8 <??DataTable51_15>)
 800d856:	7881      	ldrb	r1, [r0, #2]
 800d858:	2901      	cmp	r1, #1
 800d85a:	d106      	bne.n	800d86a <??llhwc_cmn_request_temperature_0>
 800d85c:	78c0      	ldrb	r0, [r0, #3]
 800d85e:	f3c0 0040 	ubfx	r0, r0, #1, #1
 800d862:	2800      	cmp	r0, #0
 800d864:	bf18      	it	ne
 800d866:	f7f2 bcdd 	bne.w	8000224 <bsp_request_temperature>

0800d86a <??llhwc_cmn_request_temperature_0>:
 800d86a:	4770      	bx	lr

0800d86c <??DataTable51>:
 800d86c:	0000 4802                                   ...H

0800d870 <??DataTable51_1>:
 800d870:	fffc b7fd                                   ....

0800d874 <??DataTable51_2>:
 800d874:	8280 4802                                   ...H

0800d878 <??DataTable51_3>:
 800d878:	8284 4802                                   ...H

0800d87c <??DataTable51_4>:
 800d87c:	0004 4802                                   ...H

0800d880 <??DataTable51_5>:
 800d880:	0854 2000                                   T.. 

0800d884 <??DataTable51_6>:
 800d884:	2afb 0005                                   .*..

0800d888 <??DataTable51_7>:
 800d888:	0484 4802                                   ...H

0800d88c <??DataTable51_8>:
 800d88c:	0014 4802                                   ...H

0800d890 <??DataTable51_9>:
 800d890:	cfa9 0800                                   ....

0800d894 <??DataTable51_10>:
 800d894:	b800 f23b                                   ..;.

0800d898 <??DataTable51_11>:
 800d898:	f01a 0001                                   ....

0800d89c <??DataTable51_12>:
 800d89c:	a3df 841a                                   ....

0800d8a0 <??DataTable51_13>:
 800d8a0:	f018 0001                                   ....

0800d8a4 <??DataTable51_14>:
 800d8a4:	1759 d1b7                                   Y...

0800d8a8 <??DataTable51_15>:
 800d8a8:	0840 2000                                   @.. 

0800d8ac <??DataTable51_16>:
 800d8ac:	1d18 0803                                   ....

0800d8b0 <??DataTable51_17>:
 800d8b0:	02e4 2000                                   ... 

0800d8b4 <llhwc_phy_write_cfg_fifo_batch>:
 800d8b4:	e92d 4ffe 	stmdb	sp!, {r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800d8b8:	460c      	mov	r4, r1
 800d8ba:	2100      	movs	r1, #0
 800d8bc:	9100      	str	r1, [sp, #0]
 800d8be:	4688      	mov	r8, r1
 800d8c0:	468b      	mov	fp, r1
 800d8c2:	2600      	movs	r6, #0
 800d8c4:	f8df 19dc 	ldr.w	r1, [pc, #2524]	; 800e2a4 <??DataTable13>
 800d8c8:	4691      	mov	r9, r2
 800d8ca:	469a      	mov	sl, r3
 800d8cc:	f891 7040 	ldrb.w	r7, [r1, #64]	; 0x40
 800d8d0:	2c00      	cmp	r4, #0
 800d8d2:	f000 809c 	beq.w	800da0e <??llhwc_phy_write_cfg_fifo_batch_1>
 800d8d6:	9001      	str	r0, [sp, #4]
 800d8d8:	2c01      	cmp	r4, #1
 800d8da:	bf04      	itt	eq
 800d8dc:	6801      	ldreq	r1, [r0, #0]
 800d8de:	29ae      	cmpeq	r1, #174	; 0xae
 800d8e0:	f000 8095 	beq.w	800da0e <??llhwc_phy_write_cfg_fifo_batch_1>
 800d8e4:	2f01      	cmp	r7, #1
 800d8e6:	d003      	beq.n	800d8f0 <??llhwc_phy_write_cfg_fifo_batch_2>
 800d8e8:	2102      	movs	r1, #2
 800d8ea:	2001      	movs	r0, #1
 800d8ec:	f7ff ff1e 	bl	800d72c <llhwc_cmn_control_aclk>

0800d8f0 <??llhwc_phy_write_cfg_fifo_batch_2>:
 800d8f0:	f8df 19b4 	ldr.w	r1, [pc, #2484]	; 800e2a8 <??DataTable13_1>
 800d8f4:	6d88      	ldr	r0, [r1, #88]	; 0x58
 800d8f6:	2800      	cmp	r0, #0
 800d8f8:	f040 807d 	bne.w	800d9f6 <??llhwc_phy_write_cfg_fifo_batch_3>
 800d8fc:	f8df 59ac 	ldr.w	r5, [pc, #2476]	; 800e2ac <??DataTable13_2>
 800d900:	6a68      	ldr	r0, [r5, #36]	; 0x24
 800d902:	f040 0001 	orr.w	r0, r0, #1
 800d906:	6268      	str	r0, [r5, #36]	; 0x24
 800d908:	6829      	ldr	r1, [r5, #0]
 800d90a:	f041 0101 	orr.w	r1, r1, #1
 800d90e:	6029      	str	r1, [r5, #0]
 800d910:	6828      	ldr	r0, [r5, #0]
 800d912:	0840      	lsrs	r0, r0, #1
 800d914:	0040      	lsls	r0, r0, #1
 800d916:	6028      	str	r0, [r5, #0]
 800d918:	6829      	ldr	r1, [r5, #0]
 800d91a:	f041 0102 	orr.w	r1, r1, #2
 800d91e:	6029      	str	r1, [r5, #0]
 800d920:	6828      	ldr	r0, [r5, #0]
 800d922:	f020 0002 	bic.w	r0, r0, #2
 800d926:	6028      	str	r0, [r5, #0]
 800d928:	6829      	ldr	r1, [r5, #0]
 800d92a:	4648      	mov	r0, r9
 800d92c:	46a1      	mov	r9, r4
 800d92e:	f041 0120 	orr.w	r1, r1, #32
 800d932:	6029      	str	r1, [r5, #0]
 800d934:	4604      	mov	r4, r0

0800d936 <??llhwc_phy_write_cfg_fifo_batch_4>:
 800d936:	45cb      	cmp	fp, r9
 800d938:	d20d      	bcs.n	800d956 <??llhwc_phy_write_cfg_fifo_batch_5>
 800d93a:	6828      	ldr	r0, [r5, #0]
 800d93c:	f3c0 4080 	ubfx	r0, r0, #18, #1
 800d940:	9000      	str	r0, [sp, #0]
 800d942:	9800      	ldr	r0, [sp, #0]
 800d944:	2801      	cmp	r0, #1
 800d946:	d006      	beq.n	800d956 <??llhwc_phy_write_cfg_fifo_batch_5>
 800d948:	68a8      	ldr	r0, [r5, #8]
 800d94a:	9901      	ldr	r1, [sp, #4]
 800d94c:	f851 002b 	ldr.w	r0, [r1, fp, lsl #2]
 800d950:	f10b 0b01 	add.w	fp, fp, #1
 800d954:	60a8      	str	r0, [r5, #8]

0800d956 <??llhwc_phy_write_cfg_fifo_batch_5>:
 800d956:	6828      	ldr	r0, [r5, #0]
 800d958:	f3c0 5000 	ubfx	r0, r0, #20, #1
 800d95c:	9000      	str	r0, [sp, #0]
 800d95e:	b344      	cbz	r4, 800d9b2 <??llhwc_phy_write_cfg_fifo_batch_6>
 800d960:	9800      	ldr	r0, [sp, #0]
 800d962:	bb30      	cbnz	r0, 800d9b2 <??llhwc_phy_write_cfg_fifo_batch_6>
 800d964:	ebaa 0106 	sub.w	r1, sl, r6
 800d968:	68e8      	ldr	r0, [r5, #12]
 800d96a:	2903      	cmp	r1, #3
 800d96c:	d818      	bhi.n	800d9a0 <??llhwc_phy_write_cfg_fifo_batch_7>
 800d96e:	e8df f001 	tbb	[pc, r1]

0800d972 <??llhwc_phy_write_cfg_fifo_batch_0>:
 800d972:	0602 0f09                                   ....

0800d976 <??llhwc_phy_write_cfg_fifo_batch_8>:
 800d976:	2000      	movs	r0, #0
 800d978:	f7f2 fc2a 	bl	80001d0 <bsp_assert>
 800d97c:	e019      	b.n	800d9b2 <??llhwc_phy_write_cfg_fifo_batch_6>

0800d97e <??llhwc_phy_write_cfg_fifo_batch_9>:
 800d97e:	55a0      	strb	r0, [r4, r6]
 800d980:	1c76      	adds	r6, r6, #1
 800d982:	e016      	b.n	800d9b2 <??llhwc_phy_write_cfg_fifo_batch_6>

0800d984 <??llhwc_phy_write_cfg_fifo_batch_10>:
 800d984:	19a1      	adds	r1, r4, r6
 800d986:	7008      	strb	r0, [r1, #0]
 800d988:	0a00      	lsrs	r0, r0, #8
 800d98a:	7048      	strb	r0, [r1, #1]
 800d98c:	1cb6      	adds	r6, r6, #2
 800d98e:	e010      	b.n	800d9b2 <??llhwc_phy_write_cfg_fifo_batch_6>

0800d990 <??llhwc_phy_write_cfg_fifo_batch_11>:
 800d990:	19a1      	adds	r1, r4, r6
 800d992:	7008      	strb	r0, [r1, #0]
 800d994:	0a02      	lsrs	r2, r0, #8
 800d996:	0c00      	lsrs	r0, r0, #16
 800d998:	704a      	strb	r2, [r1, #1]
 800d99a:	7088      	strb	r0, [r1, #2]
 800d99c:	1cf6      	adds	r6, r6, #3
 800d99e:	e008      	b.n	800d9b2 <??llhwc_phy_write_cfg_fifo_batch_6>

0800d9a0 <??llhwc_phy_write_cfg_fifo_batch_7>:
 800d9a0:	19a1      	adds	r1, r4, r6
 800d9a2:	7008      	strb	r0, [r1, #0]
 800d9a4:	0a02      	lsrs	r2, r0, #8
 800d9a6:	0c03      	lsrs	r3, r0, #16
 800d9a8:	0e00      	lsrs	r0, r0, #24
 800d9aa:	704a      	strb	r2, [r1, #1]
 800d9ac:	708b      	strb	r3, [r1, #2]
 800d9ae:	70c8      	strb	r0, [r1, #3]
 800d9b0:	1d36      	adds	r6, r6, #4

0800d9b2 <??llhwc_phy_write_cfg_fifo_batch_6>:
 800d9b2:	4556      	cmp	r6, sl
 800d9b4:	bf28      	it	cs
 800d9b6:	45cb      	cmpcs	fp, r9
 800d9b8:	d3bd      	bcc.n	800d936 <??llhwc_phy_write_cfg_fifo_batch_4>

0800d9ba <??llhwc_phy_write_cfg_fifo_batch_12>:
 800d9ba:	69e8      	ldr	r0, [r5, #28]
 800d9bc:	f108 0801 	add.w	r8, r8, #1
 800d9c0:	f8df 1c90 	ldr.w	r1, [pc, #3216]	; 800e654 <??DataTable24>
 800d9c4:	f000 0001 	and.w	r0, r0, #1
 800d9c8:	9000      	str	r0, [sp, #0]
 800d9ca:	9800      	ldr	r0, [sp, #0]
 800d9cc:	b908      	cbnz	r0, 800d9d2 <??llhwc_phy_write_cfg_fifo_batch_13>
 800d9ce:	4588      	cmp	r8, r1
 800d9d0:	d3f3      	bcc.n	800d9ba <??llhwc_phy_write_cfg_fifo_batch_12>

0800d9d2 <??llhwc_phy_write_cfg_fifo_batch_13>:
 800d9d2:	4588      	cmp	r8, r1
 800d9d4:	bf24      	itt	cs
 800d9d6:	2000      	movcs	r0, #0
 800d9d8:	f7f2 fbfa 	blcs	80001d0 <bsp_assert>
 800d9dc:	6a28      	ldr	r0, [r5, #32]
 800d9de:	f040 0001 	orr.w	r0, r0, #1
 800d9e2:	6228      	str	r0, [r5, #32]
 800d9e4:	6a28      	ldr	r0, [r5, #32]
 800d9e6:	0840      	lsrs	r0, r0, #1
 800d9e8:	0040      	lsls	r0, r0, #1
 800d9ea:	6228      	str	r0, [r5, #32]
 800d9ec:	6829      	ldr	r1, [r5, #0]
 800d9ee:	f021 0120 	bic.w	r1, r1, #32
 800d9f2:	6029      	str	r1, [r5, #0]
 800d9f4:	e002      	b.n	800d9fc <??llhwc_phy_write_cfg_fifo_batch_14>

0800d9f6 <??llhwc_phy_write_cfg_fifo_batch_3>:
 800d9f6:	2000      	movs	r0, #0
 800d9f8:	f7f2 fbea 	bl	80001d0 <bsp_assert>

0800d9fc <??llhwc_phy_write_cfg_fifo_batch_14>:
 800d9fc:	2f01      	cmp	r7, #1
 800d9fe:	d006      	beq.n	800da0e <??llhwc_phy_write_cfg_fifo_batch_1>
 800da00:	b003      	add	sp, #12
 800da02:	2102      	movs	r1, #2
 800da04:	2000      	movs	r0, #0
 800da06:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800da0a:	f7ff be8f 	b.w	800d72c <llhwc_cmn_control_aclk>

0800da0e <??llhwc_phy_write_cfg_fifo_batch_1>:
 800da0e:	b003      	add	sp, #12
 800da10:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0800da14 <llhwc_phy_is_phy_driver_busy>:
 800da14:	f8df 0890 	ldr.w	r0, [pc, #2192]	; 800e2a8 <??DataTable13_1>
 800da18:	6d80      	ldr	r0, [r0, #88]	; 0x58
 800da1a:	4770      	bx	lr

0800da1c <llhwc_phy_sequencer_ram_cpy_strt_seq>:
 800da1c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800da20:	f8df 6884 	ldr.w	r6, [pc, #2180]	; 800e2a8 <??DataTable13_1>
 800da24:	6df5      	ldr	r5, [r6, #92]	; 0x5c
 800da26:	460c      	mov	r4, r1
 800da28:	f240 2201 	movw	r2, #513	; 0x201
 800da2c:	f5a5 5780 	sub.w	r7, r5, #4096	; 0x1000
 800da30:	08bf      	lsrs	r7, r7, #2
 800da32:	eb04 0187 	add.w	r1, r4, r7, lsl #2
 800da36:	4680      	mov	r8, r0
 800da38:	4291      	cmp	r1, r2
 800da3a:	4180      	sbcs	r0, r0
 800da3c:	0fc0      	lsrs	r0, r0, #31
 800da3e:	f7f2 fbc7 	bl	80001d0 <bsp_assert>
 800da42:	2101      	movs	r1, #1
 800da44:	65b1      	str	r1, [r6, #88]	; 0x58
 800da46:	f8df 6864 	ldr.w	r6, [pc, #2148]	; 800e2ac <??DataTable13_2>
 800da4a:	6830      	ldr	r0, [r6, #0]
 800da4c:	08a4      	lsrs	r4, r4, #2
 800da4e:	f040 0001 	orr.w	r0, r0, #1
 800da52:	6030      	str	r0, [r6, #0]
 800da54:	6831      	ldr	r1, [r6, #0]
 800da56:	0849      	lsrs	r1, r1, #1
 800da58:	0049      	lsls	r1, r1, #1
 800da5a:	6031      	str	r1, [r6, #0]
 800da5c:	6830      	ldr	r0, [r6, #0]
 800da5e:	f040 0002 	orr.w	r0, r0, #2
 800da62:	6030      	str	r0, [r6, #0]
 800da64:	6831      	ldr	r1, [r6, #0]
 800da66:	f021 0102 	bic.w	r1, r1, #2
 800da6a:	6031      	str	r1, [r6, #0]
 800da6c:	6830      	ldr	r0, [r6, #0]
 800da6e:	f020 0020 	bic.w	r0, r0, #32
 800da72:	6030      	str	r0, [r6, #0]
 800da74:	6a31      	ldr	r1, [r6, #32]
 800da76:	f041 0101 	orr.w	r1, r1, #1
 800da7a:	6231      	str	r1, [r6, #32]
 800da7c:	6a30      	ldr	r0, [r6, #32]
 800da7e:	0840      	lsrs	r0, r0, #1
 800da80:	0040      	lsls	r0, r0, #1
 800da82:	6230      	str	r0, [r6, #32]
 800da84:	6830      	ldr	r0, [r6, #0]
 800da86:	f367 509c 	bfi	r0, r7, #22, #7
 800da8a:	6030      	str	r0, [r6, #0]
 800da8c:	6831      	ldr	r1, [r6, #0]
 800da8e:	f8df 7af4 	ldr.w	r7, [pc, #2804]	; 800e584 <??DataTable20>
 800da92:	f041 0110 	orr.w	r1, r1, #16
 800da96:	6031      	str	r1, [r6, #0]
 800da98:	f8d8 0000 	ldr.w	r0, [r8]
 800da9c:	5178      	str	r0, [r7, r5]
 800da9e:	f006 fcda 	bl	8014456 <os_disable_isr>
 800daa2:	6830      	ldr	r0, [r6, #0]
 800daa4:	1d2d      	adds	r5, r5, #4
 800daa6:	2c01      	cmp	r4, #1
 800daa8:	f040 0020 	orr.w	r0, r0, #32
 800daac:	6030      	str	r0, [r6, #0]
 800daae:	d908      	bls.n	800dac2 <??llhwc_phy_sequencer_ram_cpy_strt_seq_0>
 800dab0:	f108 0004 	add.w	r0, r8, #4
 800dab4:	1e64      	subs	r4, r4, #1

0800dab6 <??llhwc_phy_sequencer_ram_cpy_strt_seq_1>:
 800dab6:	f850 1b04 	ldr.w	r1, [r0], #4
 800daba:	5179      	str	r1, [r7, r5]
 800dabc:	1d2d      	adds	r5, r5, #4
 800dabe:	1e64      	subs	r4, r4, #1
 800dac0:	d1f9      	bne.n	800dab6 <??llhwc_phy_sequencer_ram_cpy_strt_seq_1>

0800dac2 <??llhwc_phy_sequencer_ram_cpy_strt_seq_0>:
 800dac2:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 800dac6:	f006 bcc8 	b.w	801445a <os_enable_isr>

0800daca <llhwc_phy_get_nxt_seq_from_queue>:
 800daca:	f8df 0960 	ldr.w	r0, [pc, #2400]	; 800e42c <??DataTable16>
 800dace:	6801      	ldr	r1, [r0, #0]
 800dad0:	07ca      	lsls	r2, r1, #31
 800dad2:	d400      	bmi.n	800dad6 <??llhwc_phy_get_nxt_seq_from_queue_0>
 800dad4:	4770      	bx	lr

0800dad6 <??llhwc_phy_get_nxt_seq_from_queue_0>:
 800dad6:	b510      	push	{r4, lr}
 800dad8:	f8df 47cc 	ldr.w	r4, [pc, #1996]	; 800e2a8 <??DataTable13_1>
 800dadc:	7861      	ldrb	r1, [r4, #1]
 800dade:	7822      	ldrb	r2, [r4, #0]
 800dae0:	4291      	cmp	r1, r2
 800dae2:	d20f      	bcs.n	800db04 <??llhwc_phy_get_nxt_seq_from_queue_1>
 800dae4:	eb04 00c1 	add.w	r0, r4, r1, lsl #3
 800dae8:	6881      	ldr	r1, [r0, #8]
 800daea:	6840      	ldr	r0, [r0, #4]
 800daec:	f7ff ff96 	bl	800da1c <llhwc_phy_sequencer_ram_cpy_strt_seq>
 800daf0:	7860      	ldrb	r0, [r4, #1]
 800daf2:	280a      	cmp	r0, #10
 800daf4:	bfa4      	itt	ge
 800daf6:	2000      	movge	r0, #0
 800daf8:	f7f2 fb6a 	blge	80001d0 <bsp_assert>
 800dafc:	7860      	ldrb	r0, [r4, #1]
 800dafe:	1c40      	adds	r0, r0, #1
 800db00:	7060      	strb	r0, [r4, #1]
 800db02:	bd10      	pop	{r4, pc}

0800db04 <??llhwc_phy_get_nxt_seq_from_queue_1>:
 800db04:	6841      	ldr	r1, [r0, #4]
 800db06:	f041 0101 	orr.w	r1, r1, #1
 800db0a:	6041      	str	r1, [r0, #4]
 800db0c:	6841      	ldr	r1, [r0, #4]
 800db0e:	0849      	lsrs	r1, r1, #1
 800db10:	0049      	lsls	r1, r1, #1
 800db12:	6041      	str	r1, [r0, #4]
 800db14:	e8bd 4010 	ldmia.w	sp!, {r4, lr}

0800db18 <llhwc_phy_phy_driver_stop>:
 800db18:	f8df 078c 	ldr.w	r0, [pc, #1932]	; 800e2a8 <??DataTable13_1>
 800db1c:	2100      	movs	r1, #0
 800db1e:	6581      	str	r1, [r0, #88]	; 0x58
 800db20:	f8df 1788 	ldr.w	r1, [pc, #1928]	; 800e2ac <??DataTable13_2>
 800db24:	680a      	ldr	r2, [r1, #0]
 800db26:	f022 0220 	bic.w	r2, r2, #32
 800db2a:	600a      	str	r2, [r1, #0]
 800db2c:	680b      	ldr	r3, [r1, #0]
 800db2e:	2200      	movs	r2, #0
 800db30:	f023 0310 	bic.w	r3, r3, #16
 800db34:	600b      	str	r3, [r1, #0]
 800db36:	2100      	movs	r1, #0
 800db38:	7001      	strb	r1, [r0, #0]
 800db3a:	7042      	strb	r2, [r0, #1]
 800db3c:	2102      	movs	r1, #2
 800db3e:	2000      	movs	r0, #0
 800db40:	f7ff bdf4 	b.w	800d72c <llhwc_cmn_control_aclk>

0800db44 <llhwc_phy_trg_sequence_from_sequencer_ram>:
 800db44:	b570      	push	{r4, r5, r6, lr}
 800db46:	4606      	mov	r6, r0
 800db48:	f8df 575c 	ldr.w	r5, [pc, #1884]	; 800e2a8 <??DataTable13_1>
 800db4c:	6de8      	ldr	r0, [r5, #92]	; 0x5c
 800db4e:	000c      	movs	r4, r1
 800db50:	f5a0 5080 	sub.w	r0, r0, #4096	; 0x1000
 800db54:	d030      	beq.n	800dbb8 <??llhwc_phy_trg_sequence_from_sequencer_ram_0>
 800db56:	2c04      	cmp	r4, #4
 800db58:	bf04      	itt	eq
 800db5a:	6831      	ldreq	r1, [r6, #0]
 800db5c:	29ae      	cmpeq	r1, #174	; 0xae
 800db5e:	d02b      	beq.n	800dbb8 <??llhwc_phy_trg_sequence_from_sequencer_ram_0>
 800db60:	1820      	adds	r0, r4, r0
 800db62:	f240 2201 	movw	r2, #513	; 0x201
 800db66:	4290      	cmp	r0, r2
 800db68:	4180      	sbcs	r0, r0
 800db6a:	0fc0      	lsrs	r0, r0, #31
 800db6c:	f7f2 fb30 	bl	80001d0 <bsp_assert>
 800db70:	6da8      	ldr	r0, [r5, #88]	; 0x58
 800db72:	b970      	cbnz	r0, 800db92 <??llhwc_phy_trg_sequence_from_sequencer_ram_1>
 800db74:	2102      	movs	r1, #2
 800db76:	2001      	movs	r0, #1
 800db78:	f7ff fdd8 	bl	800d72c <llhwc_cmn_control_aclk>
 800db7c:	f8df 0ce0 	ldr.w	r0, [pc, #3296]	; 800e860 <??DataTable29>
 800db80:	6801      	ldr	r1, [r0, #0]
 800db82:	f041 0101 	orr.w	r1, r1, #1
 800db86:	6001      	str	r1, [r0, #0]
 800db88:	4621      	mov	r1, r4
 800db8a:	4630      	mov	r0, r6
 800db8c:	f7ff ff46 	bl	800da1c <llhwc_phy_sequencer_ram_cpy_strt_seq>
 800db90:	e00c      	b.n	800dbac <??llhwc_phy_trg_sequence_from_sequencer_ram_2>

0800db92 <??llhwc_phy_trg_sequence_from_sequencer_ram_1>:
 800db92:	7828      	ldrb	r0, [r5, #0]
 800db94:	280a      	cmp	r0, #10
 800db96:	bfa4      	itt	ge
 800db98:	2000      	movge	r0, #0
 800db9a:	f7f2 fb19 	blge	80001d0 <bsp_assert>
 800db9e:	7828      	ldrb	r0, [r5, #0]
 800dba0:	eb05 01c0 	add.w	r1, r5, r0, lsl #3
 800dba4:	604e      	str	r6, [r1, #4]
 800dba6:	608c      	str	r4, [r1, #8]
 800dba8:	1c40      	adds	r0, r0, #1
 800dbaa:	7028      	strb	r0, [r5, #0]

0800dbac <??llhwc_phy_trg_sequence_from_sequencer_ram_2>:
 800dbac:	6da8      	ldr	r0, [r5, #88]	; 0x58
 800dbae:	2801      	cmp	r0, #1
 800dbb0:	d102      	bne.n	800dbb8 <??llhwc_phy_trg_sequence_from_sequencer_ram_0>
 800dbb2:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800dbb6:	e788      	b.n	800daca <llhwc_phy_get_nxt_seq_from_queue>

0800dbb8 <??llhwc_phy_trg_sequence_from_sequencer_ram_0>:
 800dbb8:	bd70      	pop	{r4, r5, r6, pc}

0800dbba <llhwc_phy_get_num_of_prdc_clbr_chnls>:
 800dbba:	b510      	push	{r4, lr}
 800dbbc:	f8df 0ca4 	ldr.w	r0, [pc, #3236]	; 800e864 <??DataTable29_1>
 800dbc0:	6804      	ldr	r4, [r0, #0]
 800dbc2:	2cff      	cmp	r4, #255	; 0xff
 800dbc4:	4180      	sbcs	r0, r0
 800dbc6:	0fc0      	lsrs	r0, r0, #31
 800dbc8:	f7f2 fb02 	bl	80001d0 <bsp_assert>
 800dbcc:	b2e0      	uxtb	r0, r4
 800dbce:	bd10      	pop	{r4, pc}

0800dbd0 <llhwc_phy_get_phy_seq_cfg_time>:
 800dbd0:	b4f8      	push	{r3, r4, r5, r6, r7}
 800dbd2:	460b      	mov	r3, r1
 800dbd4:	2400      	movs	r4, #0
 800dbd6:	2100      	movs	r1, #0
 800dbd8:	f88d 4000 	strb.w	r4, [sp]
 800dbdc:	2500      	movs	r5, #0
 800dbde:	089b      	lsrs	r3, r3, #2
 800dbe0:	e021      	b.n	800dc26 <??llhwc_phy_get_phy_seq_cfg_time_0>

0800dbe2 <??llhwc_phy_get_phy_seq_cfg_time_1>:
 800dbe2:	f3c6 6706 	ubfx	r7, r6, #24, #7
 800dbe6:	ebc7 1747 	rsb	r7, r7, r7, lsl #5
 800dbea:	1879      	adds	r1, r7, r1
 800dbec:	f3c6 6784 	ubfx	r7, r6, #26, #5
 800dbf0:	1879      	adds	r1, r7, r1
 800dbf2:	e00e      	b.n	800dc12 <??llhwc_phy_get_phy_seq_cfg_time_2>

0800dbf4 <??llhwc_phy_get_phy_seq_cfg_time_3>:
 800dbf4:	f850 6024 	ldr.w	r6, [r0, r4, lsl #2]
 800dbf8:	f006 07ef 	and.w	r7, r6, #239	; 0xef
 800dbfc:	2f03      	cmp	r7, #3
 800dbfe:	bf1c      	itt	ne
 800dc00:	f006 0cef 	andne.w	ip, r6, #239	; 0xef
 800dc04:	f1bc 0fa1 	cmpne.w	ip, #161	; 0xa1
 800dc08:	d00b      	beq.n	800dc22 <??llhwc_phy_get_phy_seq_cfg_time_4>
 800dc0a:	2e00      	cmp	r6, #0
 800dc0c:	d4e9      	bmi.n	800dbe2 <??llhwc_phy_get_phy_seq_cfg_time_1>
 800dc0e:	eb01 6116 	add.w	r1, r1, r6, lsr #24

0800dc12 <??llhwc_phy_get_phy_seq_cfg_time_2>:
 800dc12:	f006 07ef 	and.w	r7, r6, #239	; 0xef
 800dc16:	2f04      	cmp	r7, #4
 800dc18:	bf1a      	itte	ne
 800dc1a:	f006 06ef 	andne.w	r6, r6, #239	; 0xef
 800dc1e:	2e05      	cmpne	r6, #5
 800dc20:	1c6d      	addeq	r5, r5, #1

0800dc22 <??llhwc_phy_get_phy_seq_cfg_time_4>:
 800dc22:	1c64      	adds	r4, r4, #1
 800dc24:	b2e4      	uxtb	r4, r4

0800dc26 <??llhwc_phy_get_phy_seq_cfg_time_0>:
 800dc26:	429c      	cmp	r4, r3
 800dc28:	d3e4      	bcc.n	800dbf4 <??llhwc_phy_get_phy_seq_cfg_time_3>
 800dc2a:	2431      	movs	r4, #49	; 0x31
 800dc2c:	4362      	muls	r2, r4
 800dc2e:	1b5b      	subs	r3, r3, r5
 800dc30:	b2ed      	uxtb	r5, r5
 800dc32:	ebc5 00c5 	rsb	r0, r5, r5, lsl #3
 800dc36:	3210      	adds	r2, #16
 800dc38:	b2db      	uxtb	r3, r3
 800dc3a:	0080      	lsls	r0, r0, #2
 800dc3c:	fb03 0302 	mla	r3, r3, r2, r0
 800dc40:	3314      	adds	r3, #20
 800dc42:	eb01 1093 	add.w	r0, r1, r3, lsr #6
 800dc46:	bcf2      	pop	{r1, r4, r5, r6, r7}
 800dc48:	4770      	bx	lr

0800dc4a <llhwc_phy_seq_ram_init>:
 800dc4a:	b418      	push	{r3, r4}
 800dc4c:	f8df 0938 	ldr.w	r0, [pc, #2360]	; 800e588 <??DataTable20_1>
 800dc50:	6800      	ldr	r0, [r0, #0]
 800dc52:	f44f 5180 	mov.w	r1, #4096	; 0x1000
 800dc56:	f8df 292c 	ldr.w	r2, [pc, #2348]	; 800e584 <??DataTable20>
 800dc5a:	0880      	lsrs	r0, r0, #2
 800dc5c:	d007      	beq.n	800dc6e <??llhwc_phy_seq_ram_init_0>
 800dc5e:	f8df 3938 	ldr.w	r3, [pc, #2360]	; 800e598 <??DataTable21>

0800dc62 <??llhwc_phy_seq_ram_init_1>:
 800dc62:	f853 4b04 	ldr.w	r4, [r3], #4
 800dc66:	5054      	str	r4, [r2, r1]
 800dc68:	1d09      	adds	r1, r1, #4
 800dc6a:	1e40      	subs	r0, r0, #1
 800dc6c:	d1f9      	bne.n	800dc62 <??llhwc_phy_seq_ram_init_1>

0800dc6e <??llhwc_phy_seq_ram_init_0>:
 800dc6e:	f8df 092c 	ldr.w	r0, [pc, #2348]	; 800e59c <??DataTable21_1>
 800dc72:	6800      	ldr	r0, [r0, #0]
 800dc74:	0880      	lsrs	r0, r0, #2
 800dc76:	d007      	beq.n	800dc88 <??llhwc_phy_seq_ram_init_2>
 800dc78:	f8df 3924 	ldr.w	r3, [pc, #2340]	; 800e5a0 <??DataTable21_2>

0800dc7c <??llhwc_phy_seq_ram_init_3>:
 800dc7c:	f853 4b04 	ldr.w	r4, [r3], #4
 800dc80:	5054      	str	r4, [r2, r1]
 800dc82:	1d09      	adds	r1, r1, #4
 800dc84:	1e40      	subs	r0, r0, #1
 800dc86:	d1f9      	bne.n	800dc7c <??llhwc_phy_seq_ram_init_3>

0800dc88 <??llhwc_phy_seq_ram_init_2>:
 800dc88:	f8df 0918 	ldr.w	r0, [pc, #2328]	; 800e5a4 <??DataTable21_3>
 800dc8c:	6800      	ldr	r0, [r0, #0]
 800dc8e:	0880      	lsrs	r0, r0, #2
 800dc90:	d007      	beq.n	800dca2 <??llhwc_phy_seq_ram_init_4>
 800dc92:	f8df 3944 	ldr.w	r3, [pc, #2372]	; 800e5d8 <??DataTable22>

0800dc96 <??llhwc_phy_seq_ram_init_5>:
 800dc96:	f853 4b04 	ldr.w	r4, [r3], #4
 800dc9a:	5054      	str	r4, [r2, r1]
 800dc9c:	1d09      	adds	r1, r1, #4
 800dc9e:	1e40      	subs	r0, r0, #1
 800dca0:	d1f9      	bne.n	800dc96 <??llhwc_phy_seq_ram_init_5>

0800dca2 <??llhwc_phy_seq_ram_init_4>:
 800dca2:	f8df 094c 	ldr.w	r0, [pc, #2380]	; 800e5f0 <??DataTable23>
 800dca6:	6800      	ldr	r0, [r0, #0]
 800dca8:	0880      	lsrs	r0, r0, #2
 800dcaa:	d007      	beq.n	800dcbc <??llhwc_phy_seq_ram_init_6>
 800dcac:	f8df 3944 	ldr.w	r3, [pc, #2372]	; 800e5f4 <??DataTable23_1>

0800dcb0 <??llhwc_phy_seq_ram_init_7>:
 800dcb0:	f853 4b04 	ldr.w	r4, [r3], #4
 800dcb4:	5054      	str	r4, [r2, r1]
 800dcb6:	1d09      	adds	r1, r1, #4
 800dcb8:	1e40      	subs	r0, r0, #1
 800dcba:	d1f9      	bne.n	800dcb0 <??llhwc_phy_seq_ram_init_7>

0800dcbc <??llhwc_phy_seq_ram_init_6>:
 800dcbc:	f8df 0938 	ldr.w	r0, [pc, #2360]	; 800e5f8 <??DataTable23_2>
 800dcc0:	6800      	ldr	r0, [r0, #0]
 800dcc2:	0880      	lsrs	r0, r0, #2
 800dcc4:	d007      	beq.n	800dcd6 <??llhwc_phy_seq_ram_init_8>
 800dcc6:	f8df 3934 	ldr.w	r3, [pc, #2356]	; 800e5fc <??DataTable23_3>

0800dcca <??llhwc_phy_seq_ram_init_9>:
 800dcca:	f853 4b04 	ldr.w	r4, [r3], #4
 800dcce:	5054      	str	r4, [r2, r1]
 800dcd0:	1d09      	adds	r1, r1, #4
 800dcd2:	1e40      	subs	r0, r0, #1
 800dcd4:	d1f9      	bne.n	800dcca <??llhwc_phy_seq_ram_init_9>

0800dcd6 <??llhwc_phy_seq_ram_init_8>:
 800dcd6:	f8df 0928 	ldr.w	r0, [pc, #2344]	; 800e600 <??DataTable23_4>
 800dcda:	6800      	ldr	r0, [r0, #0]
 800dcdc:	0880      	lsrs	r0, r0, #2
 800dcde:	d007      	beq.n	800dcf0 <??llhwc_phy_seq_ram_init_10>
 800dce0:	f8df 3920 	ldr.w	r3, [pc, #2336]	; 800e604 <??DataTable23_5>

0800dce4 <??llhwc_phy_seq_ram_init_11>:
 800dce4:	f853 4b04 	ldr.w	r4, [r3], #4
 800dce8:	5054      	str	r4, [r2, r1]
 800dcea:	1d09      	adds	r1, r1, #4
 800dcec:	1e40      	subs	r0, r0, #1
 800dcee:	d1f9      	bne.n	800dce4 <??llhwc_phy_seq_ram_init_11>

0800dcf0 <??llhwc_phy_seq_ram_init_10>:
 800dcf0:	f8df 0914 	ldr.w	r0, [pc, #2324]	; 800e608 <??DataTable23_6>
 800dcf4:	6800      	ldr	r0, [r0, #0]
 800dcf6:	0880      	lsrs	r0, r0, #2
 800dcf8:	d007      	beq.n	800dd0a <??llhwc_phy_seq_ram_init_12>
 800dcfa:	f8df 395c 	ldr.w	r3, [pc, #2396]	; 800e658 <??DataTable24_1>

0800dcfe <??llhwc_phy_seq_ram_init_13>:
 800dcfe:	f853 4b04 	ldr.w	r4, [r3], #4
 800dd02:	5054      	str	r4, [r2, r1]
 800dd04:	1d09      	adds	r1, r1, #4
 800dd06:	1e40      	subs	r0, r0, #1
 800dd08:	d1f9      	bne.n	800dcfe <??llhwc_phy_seq_ram_init_13>

0800dd0a <??llhwc_phy_seq_ram_init_12>:
 800dd0a:	f8df 0950 	ldr.w	r0, [pc, #2384]	; 800e65c <??DataTable24_2>
 800dd0e:	6800      	ldr	r0, [r0, #0]
 800dd10:	0880      	lsrs	r0, r0, #2
 800dd12:	d007      	beq.n	800dd24 <??llhwc_phy_seq_ram_init_14>
 800dd14:	f8df 3948 	ldr.w	r3, [pc, #2376]	; 800e660 <??DataTable24_3>

0800dd18 <??llhwc_phy_seq_ram_init_15>:
 800dd18:	f853 4b04 	ldr.w	r4, [r3], #4
 800dd1c:	5054      	str	r4, [r2, r1]
 800dd1e:	1d09      	adds	r1, r1, #4
 800dd20:	1e40      	subs	r0, r0, #1
 800dd22:	d1f9      	bne.n	800dd18 <??llhwc_phy_seq_ram_init_15>

0800dd24 <??llhwc_phy_seq_ram_init_14>:
 800dd24:	f8df 093c 	ldr.w	r0, [pc, #2364]	; 800e664 <??DataTable24_4>
 800dd28:	6803      	ldr	r3, [r0, #0]
 800dd2a:	5053      	str	r3, [r2, r1]
 800dd2c:	1d09      	adds	r1, r1, #4
 800dd2e:	f241 2201 	movw	r2, #4609	; 0x1201
 800dd32:	4291      	cmp	r1, r2
 800dd34:	f8df 3b80 	ldr.w	r3, [pc, #2944]	; 800e8b8 <??DataTable30>
 800dd38:	4180      	sbcs	r0, r0
 800dd3a:	65d9      	str	r1, [r3, #92]	; 0x5c
 800dd3c:	0fc0      	lsrs	r0, r0, #31
 800dd3e:	bc12      	pop	{r1, r4}
 800dd40:	f7f2 ba46 	b.w	80001d0 <bsp_assert>

0800dd44 <llhwc_phy_get_prdc_clbr_cfg_time>:
 800dd44:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 800dd48:	0004      	movs	r4, r0
 800dd4a:	460d      	mov	r5, r1
 800dd4c:	4616      	mov	r6, r2
 800dd4e:	bf1a      	itte	ne
 800dd50:	2d00      	cmpne	r5, #0
 800dd52:	2001      	movne	r0, #1
 800dd54:	2000      	moveq	r0, #0
 800dd56:	f7f2 fa3b 	bl	80001d0 <bsp_assert>
 800dd5a:	f8df 090c 	ldr.w	r0, [pc, #2316]	; 800e668 <??DataTable24_5>
 800dd5e:	6801      	ldr	r1, [r0, #0]
 800dd60:	2202      	movs	r2, #2
 800dd62:	f8df 0908 	ldr.w	r0, [pc, #2312]	; 800e66c <??DataTable24_6>
 800dd66:	f7ff ff33 	bl	800dbd0 <llhwc_phy_get_phy_seq_cfg_time>
 800dd6a:	4681      	mov	r9, r0
 800dd6c:	f8df 0900 	ldr.w	r0, [pc, #2304]	; 800e670 <??DataTable24_7>
 800dd70:	6801      	ldr	r1, [r0, #0]
 800dd72:	2202      	movs	r2, #2
 800dd74:	f8df 08fc 	ldr.w	r0, [pc, #2300]	; 800e674 <??DataTable24_8>
 800dd78:	f7ff ff2a 	bl	800dbd0 <llhwc_phy_get_phy_seq_cfg_time>
 800dd7c:	4680      	mov	r8, r0
 800dd7e:	f8df 0990 	ldr.w	r0, [pc, #2448]	; 800e710 <??DataTable25>
 800dd82:	6801      	ldr	r1, [r0, #0]
 800dd84:	2202      	movs	r2, #2
 800dd86:	f8df 098c 	ldr.w	r0, [pc, #2444]	; 800e714 <??DataTable25_1>
 800dd8a:	f7ff ff21 	bl	800dbd0 <llhwc_phy_get_phy_seq_cfg_time>
 800dd8e:	4480      	add	r8, r0
 800dd90:	f8df 0994 	ldr.w	r0, [pc, #2452]	; 800e728 <??DataTable26>
 800dd94:	6801      	ldr	r1, [r0, #0]
 800dd96:	2202      	movs	r2, #2
 800dd98:	f8df 0990 	ldr.w	r0, [pc, #2448]	; 800e72c <??DataTable26_1>
 800dd9c:	f7ff ff18 	bl	800dbd0 <llhwc_phy_get_phy_seq_cfg_time>
 800dda0:	4480      	add	r8, r0
 800dda2:	f8df 098c 	ldr.w	r0, [pc, #2444]	; 800e730 <??DataTable26_2>
 800dda6:	6801      	ldr	r1, [r0, #0]
 800dda8:	2202      	movs	r2, #2
 800ddaa:	f8df 09ac 	ldr.w	r0, [pc, #2476]	; 800e758 <??DataTable27>
 800ddae:	f7ff ff0f 	bl	800dbd0 <llhwc_phy_get_phy_seq_cfg_time>
 800ddb2:	4607      	mov	r7, r0
 800ddb4:	f8df 09a4 	ldr.w	r0, [pc, #2468]	; 800e75c <??DataTable27_1>
 800ddb8:	6801      	ldr	r1, [r0, #0]
 800ddba:	2202      	movs	r2, #2
 800ddbc:	f8df 09a0 	ldr.w	r0, [pc, #2464]	; 800e760 <??DataTable27_2>
 800ddc0:	f7ff ff06 	bl	800dbd0 <llhwc_phy_get_phy_seq_cfg_time>
 800ddc4:	3015      	adds	r0, #21
 800ddc6:	6028      	str	r0, [r5, #0]
 800ddc8:	f8df 0998 	ldr.w	r0, [pc, #2456]	; 800e764 <??DataTable27_3>
 800ddcc:	6801      	ldr	r1, [r0, #0]
 800ddce:	2202      	movs	r2, #2
 800ddd0:	f8df 0994 	ldr.w	r0, [pc, #2452]	; 800e768 <??DataTable27_4>
 800ddd4:	f7ff fefc 	bl	800dbd0 <llhwc_phy_get_phy_seq_cfg_time>
 800ddd8:	4605      	mov	r5, r0
 800ddda:	f8df 09d8 	ldr.w	r0, [pc, #2520]	; 800e7b4 <??DataTable28>
 800ddde:	44c1      	add	r9, r8
 800dde0:	6801      	ldr	r1, [r0, #0]
 800dde2:	444f      	add	r7, r9
 800dde4:	2202      	movs	r2, #2
 800dde6:	f8df 0ad4 	ldr.w	r0, [pc, #2772]	; 800e8bc <??DataTable30_1>
 800ddea:	19ef      	adds	r7, r5, r7
 800ddec:	f7ff fef0 	bl	800dbd0 <llhwc_phy_get_phy_seq_cfg_time>
 800ddf0:	3778      	adds	r7, #120	; 0x78
 800ddf2:	444d      	add	r5, r9
 800ddf4:	6027      	str	r7, [r4, #0]
 800ddf6:	1945      	adds	r5, r0, r5
 800ddf8:	6035      	str	r5, [r6, #0]
 800ddfa:	e8bd 83f1 	ldmia.w	sp!, {r0, r4, r5, r6, r7, r8, r9, pc}

0800ddfe <llhwc_phy_set_cfg_time>:
 800ddfe:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800de00:	f006 fb29 	bl	8014456 <os_disable_isr>
 800de04:	f8df 079c 	ldr.w	r0, [pc, #1948]	; 800e5a4 <??DataTable21_3>
 800de08:	6805      	ldr	r5, [r0, #0]
 800de0a:	f8df 67cc 	ldr.w	r6, [pc, #1996]	; 800e5d8 <??DataTable22>
 800de0e:	2202      	movs	r2, #2
 800de10:	4629      	mov	r1, r5
 800de12:	4630      	mov	r0, r6
 800de14:	f7ff fedc 	bl	800dbd0 <llhwc_phy_get_phy_seq_cfg_time>
 800de18:	4607      	mov	r7, r0
 800de1a:	f8df 07e4 	ldr.w	r0, [pc, #2020]	; 800e600 <??DataTable23_4>
 800de1e:	6801      	ldr	r1, [r0, #0]
 800de20:	2202      	movs	r2, #2
 800de22:	f8df 0994 	ldr.w	r0, [pc, #2452]	; 800e7b8 <??DataTable28_1>
 800de26:	f7ff fed3 	bl	800dbd0 <llhwc_phy_get_phy_seq_cfg_time>
 800de2a:	f8df 4990 	ldr.w	r4, [pc, #2448]	; 800e7bc <??DataTable28_2>
 800de2e:	1c79      	adds	r1, r7, #1
 800de30:	1d00      	adds	r0, r0, #4
 800de32:	6021      	str	r1, [r4, #0]
 800de34:	6060      	str	r0, [r4, #4]
 800de36:	60e0      	str	r0, [r4, #12]
 800de38:	60a7      	str	r7, [r4, #8]
 800de3a:	2202      	movs	r2, #2
 800de3c:	4629      	mov	r1, r5
 800de3e:	4630      	mov	r0, r6
 800de40:	f7ff fec6 	bl	800dbd0 <llhwc_phy_get_phy_seq_cfg_time>
 800de44:	4605      	mov	r5, r0
 800de46:	f8df 0740 	ldr.w	r0, [pc, #1856]	; 800e588 <??DataTable20_1>
 800de4a:	6801      	ldr	r1, [r0, #0]
 800de4c:	2202      	movs	r2, #2
 800de4e:	f8df 0748 	ldr.w	r0, [pc, #1864]	; 800e598 <??DataTable21>
 800de52:	f7ff febd 	bl	800dbd0 <llhwc_phy_get_phy_seq_cfg_time>
 800de56:	1945      	adds	r5, r0, r5
 800de58:	f8df 0964 	ldr.w	r0, [pc, #2404]	; 800e7c0 <??DataTable28_3>
 800de5c:	7801      	ldrb	r1, [r0, #0]
 800de5e:	1d2d      	adds	r5, r5, #4
 800de60:	f8df 2a5c 	ldr.w	r2, [pc, #2652]	; 800e8c0 <??DataTable30_2>
 800de64:	1949      	adds	r1, r1, r5
 800de66:	6121      	str	r1, [r4, #16]
 800de68:	7810      	ldrb	r0, [r2, #0]
 800de6a:	1945      	adds	r5, r0, r5
 800de6c:	6165      	str	r5, [r4, #20]
 800de6e:	e8bd 40f1 	ldmia.w	sp!, {r0, r4, r5, r6, r7, lr}
 800de72:	f006 baf2 	b.w	801445a <os_enable_isr>

0800de76 <llhwc_phy_strt_stp>:
 800de76:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800de78:	4604      	mov	r4, r0
 800de7a:	460d      	mov	r5, r1
 800de7c:	0020      	movs	r0, r4
 800de7e:	bf16      	itet	ne
 800de80:	2c01      	cmpne	r4, #1
 800de82:	2001      	moveq	r0, #1
 800de84:	2000      	movne	r0, #0
 800de86:	f7f2 f9a3 	bl	80001d0 <bsp_assert>
 800de8a:	f8df 641c 	ldr.w	r6, [pc, #1052]	; 800e2a8 <??DataTable13_1>
 800de8e:	2000      	movs	r0, #0
 800de90:	7030      	strb	r0, [r6, #0]
 800de92:	7070      	strb	r0, [r6, #1]
 800de94:	f8df 740c 	ldr.w	r7, [pc, #1036]	; 800e2a4 <??DataTable13>
 800de98:	2c00      	cmp	r4, #0
 800de9a:	f040 809c 	bne.w	800dfd6 <??llhwc_phy_strt_stp_0>
 800de9e:	2d00      	cmp	r5, #0
 800dea0:	d15b      	bne.n	800df5a <??llhwc_phy_strt_stp_1>
 800dea2:	2102      	movs	r1, #2
 800dea4:	2001      	movs	r0, #1
 800dea6:	f7ff fc41 	bl	800d72c <llhwc_cmn_control_aclk>
 800deaa:	f897 0043 	ldrb.w	r0, [r7, #67]	; 0x43
 800deae:	bb38      	cbnz	r0, 800df00 <??llhwc_phy_strt_stp_2>
 800deb0:	f8df 09b4 	ldr.w	r0, [pc, #2484]	; 800e868 <??DataTable29_2>
 800deb4:	6801      	ldr	r1, [r0, #0]
 800deb6:	2300      	movs	r3, #0
 800deb8:	2200      	movs	r2, #0
 800deba:	0889      	lsrs	r1, r1, #2
 800debc:	f8df 09ac 	ldr.w	r0, [pc, #2476]	; 800e86c <??DataTable29_3>
 800dec0:	f7ff fcf8 	bl	800d8b4 <llhwc_phy_write_cfg_fifo_batch>
 800dec4:	f8df 07a8 	ldr.w	r0, [pc, #1960]	; 800e670 <??DataTable24_7>
 800dec8:	6801      	ldr	r1, [r0, #0]
 800deca:	2300      	movs	r3, #0
 800decc:	2200      	movs	r2, #0
 800dece:	0889      	lsrs	r1, r1, #2
 800ded0:	f8df 07a0 	ldr.w	r0, [pc, #1952]	; 800e674 <??DataTable24_8>
 800ded4:	f7ff fcee 	bl	800d8b4 <llhwc_phy_write_cfg_fifo_batch>
 800ded8:	f8df 0834 	ldr.w	r0, [pc, #2100]	; 800e710 <??DataTable25>
 800dedc:	6801      	ldr	r1, [r0, #0]
 800dede:	2300      	movs	r3, #0
 800dee0:	2200      	movs	r2, #0
 800dee2:	0889      	lsrs	r1, r1, #2
 800dee4:	f8df 082c 	ldr.w	r0, [pc, #2092]	; 800e714 <??DataTable25_1>
 800dee8:	f7ff fce4 	bl	800d8b4 <llhwc_phy_write_cfg_fifo_batch>
 800deec:	f8df 0838 	ldr.w	r0, [pc, #2104]	; 800e728 <??DataTable26>
 800def0:	6801      	ldr	r1, [r0, #0]
 800def2:	2300      	movs	r3, #0
 800def4:	2200      	movs	r2, #0
 800def6:	0889      	lsrs	r1, r1, #2
 800def8:	f8df 0830 	ldr.w	r0, [pc, #2096]	; 800e72c <??DataTable26_1>
 800defc:	f7ff fcda 	bl	800d8b4 <llhwc_phy_write_cfg_fifo_batch>

0800df00 <??llhwc_phy_strt_stp_2>:
 800df00:	f8df 09c0 	ldr.w	r0, [pc, #2496]	; 800e8c4 <??DataTable30_3>
 800df04:	6801      	ldr	r1, [r0, #0]
 800df06:	2300      	movs	r3, #0
 800df08:	2200      	movs	r2, #0
 800df0a:	0889      	lsrs	r1, r1, #2
 800df0c:	f8df 09b8 	ldr.w	r0, [pc, #2488]	; 800e8c8 <??DataTable30_4>
 800df10:	f7ff fcd0 	bl	800d8b4 <llhwc_phy_write_cfg_fifo_batch>
 800df14:	f8df 09b4 	ldr.w	r0, [pc, #2484]	; 800e8cc <??DataTable30_5>
 800df18:	6801      	ldr	r1, [r0, #0]
 800df1a:	2300      	movs	r3, #0
 800df1c:	2200      	movs	r2, #0
 800df1e:	0889      	lsrs	r1, r1, #2
 800df20:	f8df 09ac 	ldr.w	r0, [pc, #2476]	; 800e8d0 <??DataTable30_6>
 800df24:	f7ff fcc6 	bl	800d8b4 <llhwc_phy_write_cfg_fifo_batch>
 800df28:	f8df 09a8 	ldr.w	r0, [pc, #2472]	; 800e8d4 <??DataTable30_7>
 800df2c:	6801      	ldr	r1, [r0, #0]
 800df2e:	2300      	movs	r3, #0
 800df30:	2200      	movs	r2, #0
 800df32:	0889      	lsrs	r1, r1, #2
 800df34:	f8df 09a0 	ldr.w	r0, [pc, #2464]	; 800e8d8 <??DataTable30_8>
 800df38:	f7ff fcbc 	bl	800d8b4 <llhwc_phy_write_cfg_fifo_batch>
 800df3c:	f8df 099c 	ldr.w	r0, [pc, #2460]	; 800e8dc <??DataTable30_9>
 800df40:	6801      	ldr	r1, [r0, #0]
 800df42:	2300      	movs	r3, #0
 800df44:	2200      	movs	r2, #0
 800df46:	0889      	lsrs	r1, r1, #2
 800df48:	f8df 0994 	ldr.w	r0, [pc, #2452]	; 800e8e0 <??DataTable30_10>
 800df4c:	f7ff fcb2 	bl	800d8b4 <llhwc_phy_write_cfg_fifo_batch>
 800df50:	2102      	movs	r1, #2
 800df52:	2000      	movs	r0, #0
 800df54:	f7ff fbea 	bl	800d72c <llhwc_cmn_control_aclk>
 800df58:	e03a      	b.n	800dfd0 <??llhwc_phy_strt_stp_3>

0800df5a <??llhwc_phy_strt_stp_1>:
 800df5a:	f897 0043 	ldrb.w	r0, [r7, #67]	; 0x43
 800df5e:	b9d8      	cbnz	r0, 800df98 <??llhwc_phy_strt_stp_4>
 800df60:	f8df 1904 	ldr.w	r1, [pc, #2308]	; 800e868 <??DataTable29_2>
 800df64:	6809      	ldr	r1, [r1, #0]
 800df66:	f8df 0904 	ldr.w	r0, [pc, #2308]	; 800e86c <??DataTable29_3>
 800df6a:	f7ff fdeb 	bl	800db44 <llhwc_phy_trg_sequence_from_sequencer_ram>
 800df6e:	f8df 0700 	ldr.w	r0, [pc, #1792]	; 800e670 <??DataTable24_7>
 800df72:	6801      	ldr	r1, [r0, #0]
 800df74:	f8df 06fc 	ldr.w	r0, [pc, #1788]	; 800e674 <??DataTable24_8>
 800df78:	f7ff fde4 	bl	800db44 <llhwc_phy_trg_sequence_from_sequencer_ram>
 800df7c:	f8df 0790 	ldr.w	r0, [pc, #1936]	; 800e710 <??DataTable25>
 800df80:	6801      	ldr	r1, [r0, #0]
 800df82:	f8df 0790 	ldr.w	r0, [pc, #1936]	; 800e714 <??DataTable25_1>
 800df86:	f7ff fddd 	bl	800db44 <llhwc_phy_trg_sequence_from_sequencer_ram>
 800df8a:	f8df 079c 	ldr.w	r0, [pc, #1948]	; 800e728 <??DataTable26>
 800df8e:	6801      	ldr	r1, [r0, #0]
 800df90:	f8df 0798 	ldr.w	r0, [pc, #1944]	; 800e72c <??DataTable26_1>
 800df94:	f7ff fdd6 	bl	800db44 <llhwc_phy_trg_sequence_from_sequencer_ram>

0800df98 <??llhwc_phy_strt_stp_4>:
 800df98:	f8df 0928 	ldr.w	r0, [pc, #2344]	; 800e8c4 <??DataTable30_3>
 800df9c:	6801      	ldr	r1, [r0, #0]
 800df9e:	f8df 0928 	ldr.w	r0, [pc, #2344]	; 800e8c8 <??DataTable30_4>
 800dfa2:	f7ff fdcf 	bl	800db44 <llhwc_phy_trg_sequence_from_sequencer_ram>
 800dfa6:	f8df 0924 	ldr.w	r0, [pc, #2340]	; 800e8cc <??DataTable30_5>
 800dfaa:	6801      	ldr	r1, [r0, #0]
 800dfac:	f8df 0920 	ldr.w	r0, [pc, #2336]	; 800e8d0 <??DataTable30_6>
 800dfb0:	f7ff fdc8 	bl	800db44 <llhwc_phy_trg_sequence_from_sequencer_ram>
 800dfb4:	f8df 091c 	ldr.w	r0, [pc, #2332]	; 800e8d4 <??DataTable30_7>
 800dfb8:	6801      	ldr	r1, [r0, #0]
 800dfba:	f8df 091c 	ldr.w	r0, [pc, #2332]	; 800e8d8 <??DataTable30_8>
 800dfbe:	f7ff fdc1 	bl	800db44 <llhwc_phy_trg_sequence_from_sequencer_ram>
 800dfc2:	f8df 0918 	ldr.w	r0, [pc, #2328]	; 800e8dc <??DataTable30_9>
 800dfc6:	6801      	ldr	r1, [r0, #0]
 800dfc8:	f8df 0914 	ldr.w	r0, [pc, #2324]	; 800e8e0 <??DataTable30_10>
 800dfcc:	f7ff fdba 	bl	800db44 <llhwc_phy_trg_sequence_from_sequencer_ram>

0800dfd0 <??llhwc_phy_strt_stp_3>:
 800dfd0:	2001      	movs	r0, #1
 800dfd2:	6570      	str	r0, [r6, #84]	; 0x54
 800dfd4:	bdf1      	pop	{r0, r4, r5, r6, r7, pc}

0800dfd6 <??llhwc_phy_strt_stp_0>:
 800dfd6:	f8df 090c 	ldr.w	r0, [pc, #2316]	; 800e8e4 <??DataTable30_11>
 800dfda:	6801      	ldr	r1, [r0, #0]
 800dfdc:	2300      	movs	r3, #0
 800dfde:	2200      	movs	r2, #0
 800dfe0:	0889      	lsrs	r1, r1, #2
 800dfe2:	f8df 0904 	ldr.w	r0, [pc, #2308]	; 800e8e8 <??DataTable30_12>
 800dfe6:	f7ff fc65 	bl	800d8b4 <llhwc_phy_write_cfg_fifo_batch>
 800dfea:	f897 0043 	ldrb.w	r0, [r7, #67]	; 0x43
 800dfee:	b948      	cbnz	r0, 800e004 <??llhwc_phy_strt_stp_5>
 800dff0:	f8df 0770 	ldr.w	r0, [pc, #1904]	; 800e764 <??DataTable27_3>
 800dff4:	6801      	ldr	r1, [r0, #0]
 800dff6:	2300      	movs	r3, #0
 800dff8:	2200      	movs	r2, #0
 800dffa:	0889      	lsrs	r1, r1, #2
 800dffc:	f8df 0768 	ldr.w	r0, [pc, #1896]	; 800e768 <??DataTable27_4>
 800e000:	f7ff fc58 	bl	800d8b4 <llhwc_phy_write_cfg_fifo_batch>

0800e004 <??llhwc_phy_strt_stp_5>:
 800e004:	2000      	movs	r0, #0
 800e006:	6570      	str	r0, [r6, #84]	; 0x54
 800e008:	e8bd 40f2 	ldmia.w	sp!, {r1, r4, r5, r6, r7, lr}
 800e00c:	f7f7 be7c 	b.w	8005d08 <ll_tx_pwr_if_epa_enable>

0800e010 <llhwc_phy_reset>:
 800e010:	48a6      	ldr	r0, [pc, #664]	; (800e2ac <??DataTable13_2>)
 800e012:	6801      	ldr	r1, [r0, #0]
 800e014:	2300      	movs	r3, #0
 800e016:	2200      	movs	r2, #0
 800e018:	f021 011c 	bic.w	r1, r1, #28
 800e01c:	6001      	str	r1, [r0, #0]
 800e01e:	f8df 08cc 	ldr.w	r0, [pc, #2252]	; 800e8ec <??DataTable30_13>
 800e022:	6801      	ldr	r1, [r0, #0]
 800e024:	f8df 08c8 	ldr.w	r0, [pc, #2248]	; 800e8f0 <??DataTable30_14>
 800e028:	0889      	lsrs	r1, r1, #2
 800e02a:	e443      	b.n	800d8b4 <llhwc_phy_write_cfg_fifo_batch>

0800e02c <llhwc_phy_set_phy_slp_regs>:
 800e02c:	499e      	ldr	r1, [pc, #632]	; (800e2a8 <??DataTable13_1>)
 800e02e:	6dca      	ldr	r2, [r1, #92]	; 0x5c
 800e030:	489e      	ldr	r0, [pc, #632]	; (800e2ac <??DataTable13_2>)
 800e032:	6801      	ldr	r1, [r0, #0]
 800e034:	0892      	lsrs	r2, r2, #2
 800e036:	1e52      	subs	r2, r2, #1
 800e038:	f362 118c 	bfi	r1, r2, #6, #7
 800e03c:	6001      	str	r1, [r0, #0]
 800e03e:	f8df 18b4 	ldr.w	r1, [pc, #2228]	; 800e8f4 <??DataTable30_15>
 800e042:	780a      	ldrb	r2, [r1, #0]
 800e044:	6903      	ldr	r3, [r0, #16]
 800e046:	f362 0307 	bfi	r3, r2, #0, #8
 800e04a:	6103      	str	r3, [r0, #16]
 800e04c:	4770      	bx	lr

0800e04e <llhwc_phy_recover_from_ll_dp_slp>:
 800e04e:	b580      	push	{r7, lr}
 800e050:	f8df 08a4 	ldr.w	r0, [pc, #2212]	; 800e8f8 <??DataTable30_16>
 800e054:	6801      	ldr	r1, [r0, #0]
 800e056:	2300      	movs	r3, #0
 800e058:	2200      	movs	r2, #0
 800e05a:	0889      	lsrs	r1, r1, #2
 800e05c:	f8df 089c 	ldr.w	r0, [pc, #2204]	; 800e8fc <??DataTable30_17>
 800e060:	f7ff fc28 	bl	800d8b4 <llhwc_phy_write_cfg_fifo_batch>
 800e064:	e8bd 4001 	ldmia.w	sp!, {r0, lr}
 800e068:	e7e0      	b.n	800e02c <llhwc_phy_set_phy_slp_regs>

0800e06a <llhwc_phy_init_clbr>:
 800e06a:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800e06e:	4682      	mov	sl, r0
 800e070:	4689      	mov	r9, r1
 800e072:	4614      	mov	r4, r2
 800e074:	b087      	sub	sp, #28
 800e076:	f8df 084c 	ldr.w	r0, [pc, #2124]	; 800e8c4 <??DataTable30_3>
 800e07a:	f8df 1850 	ldr.w	r1, [pc, #2128]	; 800e8cc <??DataTable30_5>
 800e07e:	f8df 2854 	ldr.w	r2, [pc, #2132]	; 800e8d4 <??DataTable30_7>
 800e082:	6805      	ldr	r5, [r0, #0]
 800e084:	202c      	movs	r0, #44	; 0x2c
 800e086:	680e      	ldr	r6, [r1, #0]
 800e088:	6817      	ldr	r7, [r2, #0]
 800e08a:	f7f2 f8cd 	bl	8000228 <bsp_debug_gpio_set>
 800e08e:	2102      	movs	r1, #2
 800e090:	2001      	movs	r0, #1
 800e092:	f7ff fb4b 	bl	800d72c <llhwc_cmn_control_aclk>
 800e096:	f8df 820c 	ldr.w	r8, [pc, #524]	; 800e2a4 <??DataTable13>
 800e09a:	f898 0043 	ldrb.w	r0, [r8, #67]	; 0x43
 800e09e:	05ad      	lsls	r5, r5, #22
 800e0a0:	05b6      	lsls	r6, r6, #22
 800e0a2:	05bf      	lsls	r7, r7, #22
 800e0a4:	0e2d      	lsrs	r5, r5, #24
 800e0a6:	0e36      	lsrs	r6, r6, #24
 800e0a8:	0e3f      	lsrs	r7, r7, #24
 800e0aa:	bb38      	cbnz	r0, 800e0fc <??llhwc_phy_init_clbr_0>
 800e0ac:	f8df 05b8 	ldr.w	r0, [pc, #1464]	; 800e668 <??DataTable24_5>
 800e0b0:	6801      	ldr	r1, [r0, #0]
 800e0b2:	2300      	movs	r3, #0
 800e0b4:	2200      	movs	r2, #0
 800e0b6:	0889      	lsrs	r1, r1, #2
 800e0b8:	f8df 05b0 	ldr.w	r0, [pc, #1456]	; 800e66c <??DataTable24_6>
 800e0bc:	f7ff fbfa 	bl	800d8b4 <llhwc_phy_write_cfg_fifo_batch>
 800e0c0:	f8df 05ac 	ldr.w	r0, [pc, #1452]	; 800e670 <??DataTable24_7>
 800e0c4:	6801      	ldr	r1, [r0, #0]
 800e0c6:	2300      	movs	r3, #0
 800e0c8:	2200      	movs	r2, #0
 800e0ca:	0889      	lsrs	r1, r1, #2
 800e0cc:	f8df 05a4 	ldr.w	r0, [pc, #1444]	; 800e674 <??DataTable24_8>
 800e0d0:	f7ff fbf0 	bl	800d8b4 <llhwc_phy_write_cfg_fifo_batch>
 800e0d4:	f8df 0638 	ldr.w	r0, [pc, #1592]	; 800e710 <??DataTable25>
 800e0d8:	6801      	ldr	r1, [r0, #0]
 800e0da:	2300      	movs	r3, #0
 800e0dc:	2200      	movs	r2, #0
 800e0de:	0889      	lsrs	r1, r1, #2
 800e0e0:	f8df 0630 	ldr.w	r0, [pc, #1584]	; 800e714 <??DataTable25_1>
 800e0e4:	f7ff fbe6 	bl	800d8b4 <llhwc_phy_write_cfg_fifo_batch>
 800e0e8:	f8df 063c 	ldr.w	r0, [pc, #1596]	; 800e728 <??DataTable26>
 800e0ec:	6801      	ldr	r1, [r0, #0]
 800e0ee:	2300      	movs	r3, #0
 800e0f0:	2200      	movs	r2, #0
 800e0f2:	0889      	lsrs	r1, r1, #2
 800e0f4:	f8df 0634 	ldr.w	r0, [pc, #1588]	; 800e72c <??DataTable26_1>
 800e0f8:	f7ff fbdc 	bl	800d8b4 <llhwc_phy_write_cfg_fifo_batch>

0800e0fc <??llhwc_phy_init_clbr_0>:
 800e0fc:	f89a 0000 	ldrb.w	r0, [sl]
 800e100:	2801      	cmp	r0, #1
 800e102:	d10d      	bne.n	800e120 <??llhwc_phy_init_clbr_1>
 800e104:	f8df 0628 	ldr.w	r0, [pc, #1576]	; 800e730 <??DataTable26_2>
 800e108:	6801      	ldr	r1, [r0, #0]
 800e10a:	2300      	movs	r3, #0
 800e10c:	2200      	movs	r2, #0
 800e10e:	0889      	lsrs	r1, r1, #2
 800e110:	f8df 0644 	ldr.w	r0, [pc, #1604]	; 800e758 <??DataTable27>
 800e114:	f7ff fbce 	bl	800d8b4 <llhwc_phy_write_cfg_fifo_batch>
 800e118:	2000      	movs	r0, #0
 800e11a:	f88a 0000 	strb.w	r0, [sl]
 800e11e:	e009      	b.n	800e134 <??llhwc_phy_init_clbr_2>

0800e120 <??llhwc_phy_init_clbr_1>:
 800e120:	f8df 0690 	ldr.w	r0, [pc, #1680]	; 800e7b4 <??DataTable28>
 800e124:	6801      	ldr	r1, [r0, #0]
 800e126:	2300      	movs	r3, #0
 800e128:	2200      	movs	r2, #0
 800e12a:	0889      	lsrs	r1, r1, #2
 800e12c:	f8df 078c 	ldr.w	r0, [pc, #1932]	; 800e8bc <??DataTable30_1>
 800e130:	f7ff fbc0 	bl	800d8b4 <llhwc_phy_write_cfg_fifo_batch>

0800e134 <??llhwc_phy_init_clbr_2>:
 800e134:	464a      	mov	r2, r9
 800e136:	7811      	ldrb	r1, [r2, #0]
 800e138:	1973      	adds	r3, r6, r5
 800e13a:	f8df c624 	ldr.w	ip, [pc, #1572]	; 800e760 <??DataTable27_2>
 800e13e:	9303      	str	r3, [sp, #12]
 800e140:	f8cd c008 	str.w	ip, [sp, #8]
 800e144:	9206      	str	r2, [sp, #24]
 800e146:	f88d 4000 	strb.w	r4, [sp]
 800e14a:	9501      	str	r5, [sp, #4]
 800e14c:	9605      	str	r6, [sp, #20]
 800e14e:	9704      	str	r7, [sp, #16]
 800e150:	f8df 9784 	ldr.w	r9, [pc, #1924]	; 800e8d8 <??DataTable30_8>
 800e154:	f8df a778 	ldr.w	sl, [pc, #1912]	; 800e8d0 <??DataTable30_6>
 800e158:	f8df b7a4 	ldr.w	fp, [pc, #1956]	; 800e900 <??DataTable30_18>
 800e15c:	460c      	mov	r4, r1
 800e15e:	2700      	movs	r7, #0
 800e160:	e017      	b.n	800e192 <??llhwc_phy_init_clbr_3>

0800e162 <??llhwc_phy_init_clbr_4>:
 800e162:	9805      	ldr	r0, [sp, #20]
 800e164:	9904      	ldr	r1, [sp, #16]
 800e166:	1a2d      	subs	r5, r5, r0
 800e168:	428d      	cmp	r5, r1
 800e16a:	bfac      	ite	ge
 800e16c:	2000      	movge	r0, #0
 800e16e:	2001      	movlt	r0, #1
 800e170:	f7f2 f82e 	bl	80001d0 <bsp_assert>
 800e174:	f81b 0014 	ldrb.w	r0, [fp, r4, lsl #1]
 800e178:	f859 1025 	ldr.w	r1, [r9, r5, lsl #2]
 800e17c:	f360 4117 	bfi	r1, r0, #16, #8
 800e180:	f849 1025 	str.w	r1, [r9, r5, lsl #2]

0800e184 <??llhwc_phy_init_clbr_5>:
 800e184:	9806      	ldr	r0, [sp, #24]
 800e186:	1c64      	adds	r4, r4, #1
 800e188:	b2e4      	uxtb	r4, r4
 800e18a:	7801      	ldrb	r1, [r0, #0]
 800e18c:	1c7f      	adds	r7, r7, #1
 800e18e:	1c49      	adds	r1, r1, #1
 800e190:	7001      	strb	r1, [r0, #0]

0800e192 <??llhwc_phy_init_clbr_3>:
 800e192:	f8df 06d0 	ldr.w	r0, [pc, #1744]	; 800e864 <??DataTable29_1>
 800e196:	6801      	ldr	r1, [r0, #0]
 800e198:	428c      	cmp	r4, r1
 800e19a:	bf3e      	ittt	cc
 800e19c:	f89d 2000 	ldrbcc.w	r2, [sp]
 800e1a0:	b2f8      	uxtbcc	r0, r7
 800e1a2:	4290      	cmpcc	r0, r2
 800e1a4:	d25b      	bcs.n	800e25e <??llhwc_phy_init_clbr_6>
 800e1a6:	202d      	movs	r0, #45	; 0x2d
 800e1a8:	f7f2 f842 	bl	8000230 <bsp_debug_gpio_toggle>
 800e1ac:	9802      	ldr	r0, [sp, #8]
 800e1ae:	eb0b 0544 	add.w	r5, fp, r4, lsl #1
 800e1b2:	2302      	movs	r3, #2
 800e1b4:	6801      	ldr	r1, [r0, #0]
 800e1b6:	462a      	mov	r2, r5
 800e1b8:	f364 4117 	bfi	r1, r4, #16, #8
 800e1bc:	6001      	str	r1, [r0, #0]
 800e1be:	f8df 159c 	ldr.w	r1, [pc, #1436]	; 800e75c <??DataTable27_1>
 800e1c2:	6809      	ldr	r1, [r1, #0]
 800e1c4:	9802      	ldr	r0, [sp, #8]
 800e1c6:	0889      	lsrs	r1, r1, #2
 800e1c8:	f7ff fb74 	bl	800d8b4 <llhwc_phy_write_cfg_fifo_batch>
 800e1cc:	9901      	ldr	r1, [sp, #4]
 800e1ce:	1c60      	adds	r0, r4, #1
 800e1d0:	4288      	cmp	r0, r1
 800e1d2:	da09      	bge.n	800e1e8 <??llhwc_phy_init_clbr_7>
 800e1d4:	f8df 06f0 	ldr.w	r0, [pc, #1776]	; 800e8c8 <??DataTable30_4>
 800e1d8:	eb00 0084 	add.w	r0, r0, r4, lsl #2
 800e1dc:	7869      	ldrb	r1, [r5, #1]
 800e1de:	6842      	ldr	r2, [r0, #4]
 800e1e0:	f361 4217 	bfi	r2, r1, #16, #8
 800e1e4:	6042      	str	r2, [r0, #4]
 800e1e6:	e01b      	b.n	800e220 <??llhwc_phy_init_clbr_8>

0800e1e8 <??llhwc_phy_init_clbr_7>:
 800e1e8:	1a46      	subs	r6, r0, r1
 800e1ea:	9903      	ldr	r1, [sp, #12]
 800e1ec:	4288      	cmp	r0, r1
 800e1ee:	da07      	bge.n	800e200 <??llhwc_phy_init_clbr_9>
 800e1f0:	7868      	ldrb	r0, [r5, #1]
 800e1f2:	f85a 1026 	ldr.w	r1, [sl, r6, lsl #2]
 800e1f6:	f360 4117 	bfi	r1, r0, #16, #8
 800e1fa:	f84a 1026 	str.w	r1, [sl, r6, lsl #2]
 800e1fe:	e00f      	b.n	800e220 <??llhwc_phy_init_clbr_8>

0800e200 <??llhwc_phy_init_clbr_9>:
 800e200:	9805      	ldr	r0, [sp, #20]
 800e202:	9904      	ldr	r1, [sp, #16]
 800e204:	1a36      	subs	r6, r6, r0
 800e206:	428e      	cmp	r6, r1
 800e208:	bfb4      	ite	lt
 800e20a:	2001      	movlt	r0, #1
 800e20c:	2000      	movge	r0, #0
 800e20e:	f7f1 ffdf 	bl	80001d0 <bsp_assert>
 800e212:	7868      	ldrb	r0, [r5, #1]
 800e214:	f859 1026 	ldr.w	r1, [r9, r6, lsl #2]
 800e218:	f360 4117 	bfi	r1, r0, #16, #8
 800e21c:	f849 1026 	str.w	r1, [r9, r6, lsl #2]

0800e220 <??llhwc_phy_init_clbr_8>:
 800e220:	9901      	ldr	r1, [sp, #4]
 800e222:	f104 0029 	add.w	r0, r4, #41	; 0x29
 800e226:	4288      	cmp	r0, r1
 800e228:	da0c      	bge.n	800e244 <??llhwc_phy_init_clbr_10>
 800e22a:	f8df 069c 	ldr.w	r0, [pc, #1692]	; 800e8c8 <??DataTable30_4>
 800e22e:	eb00 0084 	add.w	r0, r0, r4, lsl #2
 800e232:	f81b 1014 	ldrb.w	r1, [fp, r4, lsl #1]
 800e236:	f8d0 20a4 	ldr.w	r2, [r0, #164]	; 0xa4
 800e23a:	f361 4217 	bfi	r2, r1, #16, #8
 800e23e:	f8c0 20a4 	str.w	r2, [r0, #164]	; 0xa4
 800e242:	e79f      	b.n	800e184 <??llhwc_phy_init_clbr_5>

0800e244 <??llhwc_phy_init_clbr_10>:
 800e244:	1a45      	subs	r5, r0, r1
 800e246:	9903      	ldr	r1, [sp, #12]
 800e248:	4288      	cmp	r0, r1
 800e24a:	da8a      	bge.n	800e162 <??llhwc_phy_init_clbr_4>
 800e24c:	f81b 0014 	ldrb.w	r0, [fp, r4, lsl #1]
 800e250:	f85a 1025 	ldr.w	r1, [sl, r5, lsl #2]
 800e254:	f360 4117 	bfi	r1, r0, #16, #8
 800e258:	f84a 1025 	str.w	r1, [sl, r5, lsl #2]
 800e25c:	e792      	b.n	800e184 <??llhwc_phy_init_clbr_5>

0800e25e <??llhwc_phy_init_clbr_6>:
 800e25e:	f898 0043 	ldrb.w	r0, [r8, #67]	; 0x43
 800e262:	b940      	cbnz	r0, 800e276 <??llhwc_phy_init_clbr_11>
 800e264:	f8df 04fc 	ldr.w	r0, [pc, #1276]	; 800e764 <??DataTable27_3>
 800e268:	6801      	ldr	r1, [r0, #0]
 800e26a:	2300      	movs	r3, #0
 800e26c:	2200      	movs	r2, #0
 800e26e:	0889      	lsrs	r1, r1, #2
 800e270:	f8df 04f4 	ldr.w	r0, [pc, #1268]	; 800e768 <??DataTable27_4>
 800e274:	e007      	b.n	800e286 <??llhwc_phy_init_clbr_12>

0800e276 <??llhwc_phy_init_clbr_11>:
 800e276:	f8df 068c 	ldr.w	r0, [pc, #1676]	; 800e904 <??DataTable30_19>
 800e27a:	6801      	ldr	r1, [r0, #0]
 800e27c:	2300      	movs	r3, #0
 800e27e:	2200      	movs	r2, #0
 800e280:	0889      	lsrs	r1, r1, #2
 800e282:	f8df 0684 	ldr.w	r0, [pc, #1668]	; 800e908 <??DataTable30_20>

0800e286 <??llhwc_phy_init_clbr_12>:
 800e286:	f7ff fb15 	bl	800d8b4 <llhwc_phy_write_cfg_fifo_batch>
 800e28a:	2000      	movs	r0, #0
 800e28c:	f8df 1628 	ldr.w	r1, [pc, #1576]	; 800e8b8 <??DataTable30>
 800e290:	6548      	str	r0, [r1, #84]	; 0x54
 800e292:	2102      	movs	r1, #2
 800e294:	f7ff fa4a 	bl	800d72c <llhwc_cmn_control_aclk>
 800e298:	b007      	add	sp, #28
 800e29a:	202c      	movs	r0, #44	; 0x2c
 800e29c:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800e2a0:	f7f1 bfc4 	b.w	800022c <bsp_debug_gpio_clear>

0800e2a4 <??DataTable13>:
 800e2a4:	07f8 2000                                   ... 

0800e2a8 <??DataTable13_1>:
 800e2a8:	08bc 2000                                   ... 

0800e2ac <??DataTable13_2>:
 800e2ac:	0424 4802                                   $..H

0800e2b0 <llhwc_phy_init>:
 800e2b0:	b518      	push	{r3, r4, lr}
 800e2b2:	b083      	sub	sp, #12
 800e2b4:	2000      	movs	r0, #0
 800e2b6:	f88d 0002 	strb.w	r0, [sp, #2]
 800e2ba:	f8df 15a8 	ldr.w	r1, [pc, #1448]	; 800e864 <??DataTable29_1>
 800e2be:	2001      	movs	r0, #1
 800e2c0:	680c      	ldr	r4, [r1, #0]
 800e2c2:	f88d 0001 	strb.w	r0, [sp, #1]
 800e2c6:	2204      	movs	r2, #4
 800e2c8:	2100      	movs	r1, #0
 800e2ca:	a801      	add	r0, sp, #4
 800e2cc:	f022 fe6f 	bl	8030fae <memset>
 800e2d0:	f7ff fcbb 	bl	800dc4a <llhwc_phy_seq_ram_init>
 800e2d4:	f8df 0390 	ldr.w	r0, [pc, #912]	; 800e668 <??DataTable24_5>
 800e2d8:	6801      	ldr	r1, [r0, #0]
 800e2da:	2300      	movs	r3, #0
 800e2dc:	2200      	movs	r2, #0
 800e2de:	0889      	lsrs	r1, r1, #2
 800e2e0:	f8df 0388 	ldr.w	r0, [pc, #904]	; 800e66c <??DataTable24_6>
 800e2e4:	f7ff fae6 	bl	800d8b4 <llhwc_phy_write_cfg_fifo_batch>
 800e2e8:	f8df 0620 	ldr.w	r0, [pc, #1568]	; 800e90c <??DataTable30_21>
 800e2ec:	7801      	ldrb	r1, [r0, #0]
 800e2ee:	2908      	cmp	r1, #8
 800e2f0:	d110      	bne.n	800e314 <??llhwc_phy_init_0>
 800e2f2:	f64d 7213 	movw	r2, #57107	; 0xdf13
 800e2f6:	2100      	movs	r1, #0
 800e2f8:	9202      	str	r2, [sp, #8]
 800e2fa:	f88d 1000 	strb.w	r1, [sp]
 800e2fe:	2301      	movs	r3, #1
 800e300:	466a      	mov	r2, sp
 800e302:	2101      	movs	r1, #1
 800e304:	a802      	add	r0, sp, #8
 800e306:	f7ff fad5 	bl	800d8b4 <llhwc_phy_write_cfg_fifo_batch>
 800e30a:	f89d 0000 	ldrb.w	r0, [sp]
 800e30e:	2808      	cmp	r0, #8
 800e310:	d01c      	beq.n	800e34c <??llhwc_phy_init_1>
 800e312:	e018      	b.n	800e346 <??llhwc_phy_init_2>

0800e314 <??llhwc_phy_init_0>:
 800e314:	f8df 05f8 	ldr.w	r0, [pc, #1528]	; 800e910 <??DataTable30_22>
 800e318:	6801      	ldr	r1, [r0, #0]
 800e31a:	2304      	movs	r3, #4
 800e31c:	aa01      	add	r2, sp, #4
 800e31e:	0889      	lsrs	r1, r1, #2
 800e320:	f8df 05f0 	ldr.w	r0, [pc, #1520]	; 800e914 <??DataTable30_23>
 800e324:	f7ff fac6 	bl	800d8b4 <llhwc_phy_write_cfg_fifo_batch>
 800e328:	2204      	movs	r2, #4
 800e32a:	f8df 15ec 	ldr.w	r1, [pc, #1516]	; 800e918 <??DataTable30_24>
 800e32e:	a801      	add	r0, sp, #4
 800e330:	f000 fc95 	bl	800ec5e <ble_memcmp>
 800e334:	b150      	cbz	r0, 800e34c <??llhwc_phy_init_1>
 800e336:	f89d 0006 	ldrb.w	r0, [sp, #6]
 800e33a:	0900      	lsrs	r0, r0, #4
 800e33c:	281c      	cmp	r0, #28
 800e33e:	4180      	sbcs	r0, r0
 800e340:	0fc0      	lsrs	r0, r0, #31
 800e342:	f7f1 ff45 	bl	80001d0 <bsp_assert>

0800e346 <??llhwc_phy_init_2>:
 800e346:	2000      	movs	r0, #0
 800e348:	f7f1 ff42 	bl	80001d0 <bsp_assert>

0800e34c <??llhwc_phy_init_1>:
 800e34c:	f8df 0414 	ldr.w	r0, [pc, #1044]	; 800e764 <??DataTable27_3>
 800e350:	6801      	ldr	r1, [r0, #0]
 800e352:	2300      	movs	r3, #0
 800e354:	2200      	movs	r2, #0
 800e356:	0889      	lsrs	r1, r1, #2
 800e358:	f8df 040c 	ldr.w	r0, [pc, #1036]	; 800e768 <??DataTable27_4>
 800e35c:	f7ff faaa 	bl	800d8b4 <llhwc_phy_write_cfg_fifo_batch>
 800e360:	2000      	movs	r0, #0
 800e362:	f7ff f9cb 	bl	800d6fc <llhwc_cmn_evnt_notify>
 800e366:	b2e2      	uxtb	r2, r4
 800e368:	f10d 0102 	add.w	r1, sp, #2
 800e36c:	f10d 0001 	add.w	r0, sp, #1
 800e370:	f7ff fe7b 	bl	800e06a <llhwc_phy_init_clbr>
 800e374:	2001      	movs	r0, #1
 800e376:	f7ff f9c1 	bl	800d6fc <llhwc_cmn_evnt_notify>
 800e37a:	f7ff fe57 	bl	800e02c <llhwc_phy_set_phy_slp_regs>
 800e37e:	b004      	add	sp, #16
 800e380:	bd10      	pop	{r4, pc}

0800e382 <llhwc_phy_set_ch_config>:
 800e382:	b418      	push	{r3, r4}
 800e384:	f8df 4594 	ldr.w	r4, [pc, #1428]	; 800e91c <??DataTable30_25>
 800e388:	6821      	ldr	r1, [r4, #0]
 800e38a:	f360 4117 	bfi	r1, r0, #16, #8
 800e38e:	6021      	str	r1, [r4, #0]
 800e390:	f8df 058c 	ldr.w	r0, [pc, #1420]	; 800e920 <??DataTable30_26>
 800e394:	6801      	ldr	r1, [r0, #0]
 800e396:	b922      	cbnz	r2, 800e3a2 <??llhwc_phy_set_ch_config_0>
 800e398:	4620      	mov	r0, r4
 800e39a:	b001      	add	sp, #4
 800e39c:	2300      	movs	r3, #0
 800e39e:	0889      	lsrs	r1, r1, #2
 800e3a0:	e11c      	b.n	800e5dc <?Subroutine0>

0800e3a2 <??llhwc_phy_set_ch_config_0>:
 800e3a2:	e115      	b.n	800e5d0 <?Subroutine1>

0800e3a4 <llhwc_phy_set_ch_config_adv>:
 800e3a4:	4770      	bx	lr

0800e3a6 <llhwc_phy_set_ch_and_start_ed>:
 800e3a6:	b510      	push	{r4, lr}
 800e3a8:	4604      	mov	r4, r0
 800e3aa:	2102      	movs	r1, #2
 800e3ac:	2001      	movs	r0, #1
 800e3ae:	f7ff f9bd 	bl	800d72c <llhwc_cmn_control_aclk>
 800e3b2:	f8df 1504 	ldr.w	r1, [pc, #1284]	; 800e8b8 <??DataTable30>
 800e3b6:	6d48      	ldr	r0, [r1, #84]	; 0x54
 800e3b8:	2800      	cmp	r0, #0
 800e3ba:	bf02      	ittt	eq
 800e3bc:	f8df 1564 	ldreq.w	r1, [pc, #1380]	; 800e924 <??DataTable30_27>
 800e3c0:	f891 0043 	ldrbeq.w	r0, [r1, #67]	; 0x43
 800e3c4:	2800      	cmpeq	r0, #0
 800e3c6:	d109      	bne.n	800e3dc <??llhwc_phy_set_ch_and_start_ed_0>
 800e3c8:	f8df 049c 	ldr.w	r0, [pc, #1180]	; 800e868 <??DataTable29_2>
 800e3cc:	6801      	ldr	r1, [r0, #0]
 800e3ce:	2300      	movs	r3, #0
 800e3d0:	2200      	movs	r2, #0
 800e3d2:	0889      	lsrs	r1, r1, #2
 800e3d4:	f8df 0494 	ldr.w	r0, [pc, #1172]	; 800e86c <??DataTable29_3>
 800e3d8:	f7ff fa6c 	bl	800d8b4 <llhwc_phy_write_cfg_fifo_batch>

0800e3dc <??llhwc_phy_set_ch_and_start_ed_0>:
 800e3dc:	f8df 053c 	ldr.w	r0, [pc, #1340]	; 800e91c <??DataTable30_25>
 800e3e0:	6801      	ldr	r1, [r0, #0]
 800e3e2:	2300      	movs	r3, #0
 800e3e4:	2200      	movs	r2, #0
 800e3e6:	f364 4117 	bfi	r1, r4, #16, #8
 800e3ea:	6001      	str	r1, [r0, #0]
 800e3ec:	f8df 1530 	ldr.w	r1, [pc, #1328]	; 800e920 <??DataTable30_26>
 800e3f0:	6809      	ldr	r1, [r1, #0]
 800e3f2:	0889      	lsrs	r1, r1, #2
 800e3f4:	f7ff fa5e 	bl	800d8b4 <llhwc_phy_write_cfg_fifo_batch>
 800e3f8:	f8df 052c 	ldr.w	r0, [pc, #1324]	; 800e928 <??DataTable30_28>
 800e3fc:	6801      	ldr	r1, [r0, #0]
 800e3fe:	2300      	movs	r3, #0
 800e400:	2200      	movs	r2, #0
 800e402:	0889      	lsrs	r1, r1, #2
 800e404:	f8df 0524 	ldr.w	r0, [pc, #1316]	; 800e92c <??DataTable30_29>
 800e408:	f7ff fa54 	bl	800d8b4 <llhwc_phy_write_cfg_fifo_batch>
 800e40c:	f8df 0520 	ldr.w	r0, [pc, #1312]	; 800e930 <??DataTable30_30>
 800e410:	6801      	ldr	r1, [r0, #0]
 800e412:	2300      	movs	r3, #0
 800e414:	2200      	movs	r2, #0
 800e416:	0889      	lsrs	r1, r1, #2
 800e418:	f8df 0518 	ldr.w	r0, [pc, #1304]	; 800e934 <??DataTable30_31>
 800e41c:	f7ff fa4a 	bl	800d8b4 <llhwc_phy_write_cfg_fifo_batch>
 800e420:	2102      	movs	r1, #2
 800e422:	2000      	movs	r0, #0
 800e424:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800e428:	f7ff b980 	b.w	800d72c <llhwc_cmn_control_aclk>

0800e42c <??DataTable16>:
 800e42c:	0440 4802                                   @..H

0800e430 <llhwc_phy_read_and_stop_ed>:
 800e430:	b501      	push	{r0, lr}
 800e432:	2102      	movs	r1, #2
 800e434:	2001      	movs	r0, #1
 800e436:	f7ff f979 	bl	800d72c <llhwc_cmn_control_aclk>
 800e43a:	9800      	ldr	r0, [sp, #0]
 800e43c:	b148      	cbz	r0, 800e452 <??llhwc_phy_read_and_stop_ed_0>
 800e43e:	f8df 04f8 	ldr.w	r0, [pc, #1272]	; 800e938 <??DataTable30_32>
 800e442:	6801      	ldr	r1, [r0, #0]
 800e444:	2302      	movs	r3, #2
 800e446:	466a      	mov	r2, sp
 800e448:	0889      	lsrs	r1, r1, #2
 800e44a:	f8df 04f0 	ldr.w	r0, [pc, #1264]	; 800e93c <??DataTable30_33>
 800e44e:	f7ff fa31 	bl	800d8b4 <llhwc_phy_write_cfg_fifo_batch>

0800e452 <??llhwc_phy_read_and_stop_ed_0>:
 800e452:	f8df 04ec 	ldr.w	r0, [pc, #1260]	; 800e940 <??DataTable30_34>
 800e456:	6801      	ldr	r1, [r0, #0]
 800e458:	2300      	movs	r3, #0
 800e45a:	2200      	movs	r2, #0
 800e45c:	0889      	lsrs	r1, r1, #2
 800e45e:	f8df 04e4 	ldr.w	r0, [pc, #1252]	; 800e944 <??DataTable30_35>
 800e462:	f7ff fa27 	bl	800d8b4 <llhwc_phy_write_cfg_fifo_batch>
 800e466:	9800      	ldr	r0, [sp, #0]
 800e468:	2800      	cmp	r0, #0
 800e46a:	bf02      	ittt	eq
 800e46c:	f8df 14b4 	ldreq.w	r1, [pc, #1204]	; 800e924 <??DataTable30_27>
 800e470:	f891 0043 	ldrbeq.w	r0, [r1, #67]	; 0x43
 800e474:	2800      	cmpeq	r0, #0
 800e476:	d10b      	bne.n	800e490 <??llhwc_phy_read_and_stop_ed_1>
 800e478:	48ba      	ldr	r0, [pc, #744]	; (800e764 <??DataTable27_3>)
 800e47a:	6801      	ldr	r1, [r0, #0]
 800e47c:	2300      	movs	r3, #0
 800e47e:	2200      	movs	r2, #0
 800e480:	0889      	lsrs	r1, r1, #2
 800e482:	48b9      	ldr	r0, [pc, #740]	; (800e768 <??DataTable27_4>)
 800e484:	f7ff fa16 	bl	800d8b4 <llhwc_phy_write_cfg_fifo_batch>
 800e488:	2000      	movs	r0, #0
 800e48a:	f8df 142c 	ldr.w	r1, [pc, #1068]	; 800e8b8 <??DataTable30>
 800e48e:	6548      	str	r0, [r1, #84]	; 0x54

0800e490 <??llhwc_phy_read_and_stop_ed_1>:
 800e490:	2102      	movs	r1, #2
 800e492:	2000      	movs	r0, #0
 800e494:	f7ff f94a 	bl	800d72c <llhwc_cmn_control_aclk>
 800e498:	bd01      	pop	{r0, pc}

0800e49a <llhwc_phy_get_sequenc_ram_ofst>:
 800e49a:	b438      	push	{r3, r4, r5}
 800e49c:	2300      	movs	r3, #0
 800e49e:	6093      	str	r3, [r2, #8]
 800e4a0:	4c39      	ldr	r4, [pc, #228]	; (800e588 <??DataTable20_1>)
 800e4a2:	6823      	ldr	r3, [r4, #0]
 800e4a4:	b2c9      	uxtb	r1, r1
 800e4a6:	089b      	lsrs	r3, r3, #2
 800e4a8:	60d3      	str	r3, [r2, #12]
 800e4aa:	2901      	cmp	r1, #1
 800e4ac:	d13b      	bne.n	800e526 <??llhwc_phy_get_sequenc_ram_ofst_0>
 800e4ae:	9000      	str	r0, [sp, #0]
 800e4b0:	483a      	ldr	r0, [pc, #232]	; (800e59c <??DataTable21_1>)
 800e4b2:	6801      	ldr	r1, [r0, #0]
 800e4b4:	f89d 4000 	ldrb.w	r4, [sp]
 800e4b8:	eb03 0391 	add.w	r3, r3, r1, lsr #2
 800e4bc:	4618      	mov	r0, r3
 800e4be:	2c02      	cmp	r4, #2
 800e4c0:	d102      	bne.n	800e4c8 <??llhwc_phy_get_sequenc_ram_ofst_1>
 800e4c2:	4938      	ldr	r1, [pc, #224]	; (800e5a4 <??DataTable21_3>)
 800e4c4:	680c      	ldr	r4, [r1, #0]
 800e4c6:	e009      	b.n	800e4dc <??llhwc_phy_get_sequenc_ram_ofst_2>

0800e4c8 <??llhwc_phy_get_sequenc_ram_ofst_1>:
 800e4c8:	2c03      	cmp	r4, #3
 800e4ca:	bf18      	it	ne
 800e4cc:	2c04      	cmpne	r4, #4
 800e4ce:	d107      	bne.n	800e4e0 <??llhwc_phy_get_sequenc_ram_ofst_3>
 800e4d0:	4c34      	ldr	r4, [pc, #208]	; (800e5a4 <??DataTable21_3>)
 800e4d2:	6821      	ldr	r1, [r4, #0]
 800e4d4:	4d46      	ldr	r5, [pc, #280]	; (800e5f0 <??DataTable23>)
 800e4d6:	682c      	ldr	r4, [r5, #0]
 800e4d8:	eb00 0091 	add.w	r0, r0, r1, lsr #2

0800e4dc <??llhwc_phy_get_sequenc_ram_ofst_2>:
 800e4dc:	eb00 0094 	add.w	r0, r0, r4, lsr #2

0800e4e0 <??llhwc_phy_get_sequenc_ram_ofst_3>:
 800e4e0:	6010      	str	r0, [r2, #0]
 800e4e2:	4830      	ldr	r0, [pc, #192]	; (800e5a4 <??DataTable21_3>)
 800e4e4:	6801      	ldr	r1, [r0, #0]
 800e4e6:	4c42      	ldr	r4, [pc, #264]	; (800e5f0 <??DataTable23>)
 800e4e8:	6820      	ldr	r0, [r4, #0]
 800e4ea:	eb03 0391 	add.w	r3, r3, r1, lsr #2
 800e4ee:	4942      	ldr	r1, [pc, #264]	; (800e5f8 <??DataTable23_2>)
 800e4f0:	680c      	ldr	r4, [r1, #0]
 800e4f2:	eb03 0390 	add.w	r3, r3, r0, lsr #2
 800e4f6:	f89d 0001 	ldrb.w	r0, [sp, #1]
 800e4fa:	eb03 0394 	add.w	r3, r3, r4, lsr #2
 800e4fe:	2802      	cmp	r0, #2
 800e500:	d104      	bne.n	800e50c <??llhwc_phy_get_sequenc_ram_ofst_4>
 800e502:	483f      	ldr	r0, [pc, #252]	; (800e600 <??DataTable23_4>)
 800e504:	6801      	ldr	r1, [r0, #0]
 800e506:	eb03 0391 	add.w	r3, r3, r1, lsr #2
 800e50a:	e00b      	b.n	800e524 <??llhwc_phy_get_sequenc_ram_ofst_5>

0800e50c <??llhwc_phy_get_sequenc_ram_ofst_4>:
 800e50c:	2803      	cmp	r0, #3
 800e50e:	bf18      	it	ne
 800e510:	2804      	cmpne	r0, #4
 800e512:	d107      	bne.n	800e524 <??llhwc_phy_get_sequenc_ram_ofst_5>
 800e514:	483a      	ldr	r0, [pc, #232]	; (800e600 <??DataTable23_4>)
 800e516:	6801      	ldr	r1, [r0, #0]
 800e518:	4c3b      	ldr	r4, [pc, #236]	; (800e608 <??DataTable23_6>)
 800e51a:	6820      	ldr	r0, [r4, #0]
 800e51c:	eb03 0391 	add.w	r3, r3, r1, lsr #2
 800e520:	eb03 0390 	add.w	r3, r3, r0, lsr #2

0800e524 <??llhwc_phy_get_sequenc_ram_ofst_5>:
 800e524:	6053      	str	r3, [r2, #4]

0800e526 <??llhwc_phy_get_sequenc_ram_ofst_0>:
 800e526:	bc31      	pop	{r0, r4, r5}
 800e528:	4770      	bx	lr

0800e52a <llhwc_phy_get_ltncy>:
 800e52a:	b2c9      	uxtb	r1, r1
 800e52c:	b081      	sub	sp, #4
 800e52e:	2901      	cmp	r1, #1
 800e530:	d122      	bne.n	800e578 <??llhwc_phy_get_ltncy_0>
 800e532:	9000      	str	r0, [sp, #0]
 800e534:	f89d 1001 	ldrb.w	r1, [sp, #1]
 800e538:	f89d 0000 	ldrb.w	r0, [sp]
 800e53c:	0849      	lsrs	r1, r1, #1
 800e53e:	0840      	lsrs	r0, r0, #1
 800e540:	bf08      	it	eq
 800e542:	489f      	ldreq	r0, [pc, #636]	; (800e7c0 <??DataTable28_3>)
 800e544:	d003      	beq.n	800e54e <??llhwc_phy_get_ltncy_1>
 800e546:	2801      	cmp	r0, #1
 800e548:	d103      	bne.n	800e552 <??llhwc_phy_get_ltncy_2>
 800e54a:	f8df 03fc 	ldr.w	r0, [pc, #1020]	; 800e948 <??DataTable30_36>

0800e54e <??llhwc_phy_get_ltncy_1>:
 800e54e:	7800      	ldrb	r0, [r0, #0]
 800e550:	e003      	b.n	800e55a <??llhwc_phy_get_ltncy_3>

0800e552 <??llhwc_phy_get_ltncy_2>:
 800e552:	f8df c36c 	ldr.w	ip, [pc, #876]	; 800e8c0 <??DataTable30_2>
 800e556:	f89c 0000 	ldrb.w	r0, [ip]

0800e55a <??llhwc_phy_get_ltncy_3>:
 800e55a:	7010      	strb	r0, [r2, #0]
 800e55c:	b911      	cbnz	r1, 800e564 <??llhwc_phy_get_ltncy_4>
 800e55e:	f8df 03ec 	ldr.w	r0, [pc, #1004]	; 800e94c <??DataTable30_37>
 800e562:	e003      	b.n	800e56c <??llhwc_phy_get_ltncy_5>

0800e564 <??llhwc_phy_get_ltncy_4>:
 800e564:	2901      	cmp	r1, #1
 800e566:	d103      	bne.n	800e570 <??llhwc_phy_get_ltncy_6>
 800e568:	f8df 03e4 	ldr.w	r0, [pc, #996]	; 800e950 <??DataTable30_38>

0800e56c <??llhwc_phy_get_ltncy_5>:
 800e56c:	7800      	ldrb	r0, [r0, #0]
 800e56e:	e002      	b.n	800e576 <??llhwc_phy_get_ltncy_7>

0800e570 <??llhwc_phy_get_ltncy_6>:
 800e570:	f8df 13e0 	ldr.w	r1, [pc, #992]	; 800e954 <??DataTable30_39>
 800e574:	7808      	ldrb	r0, [r1, #0]

0800e576 <??llhwc_phy_get_ltncy_7>:
 800e576:	7018      	strb	r0, [r3, #0]

0800e578 <??llhwc_phy_get_ltncy_0>:
 800e578:	b001      	add	sp, #4
 800e57a:	4770      	bx	lr

0800e57c <llhwc_phy_get_adv_chnls_switch_time>:
 800e57c:	f8df 03d8 	ldr.w	r0, [pc, #984]	; 800e958 <??DataTable30_40>
 800e580:	7800      	ldrb	r0, [r0, #0]
 800e582:	4770      	bx	lr

0800e584 <??DataTable20>:
 800e584:	0000 4802                                   ...H

0800e588 <??DataTable20_1>:
 800e588:	1d20 0803                                    ...

0800e58c <llhwc_phy_get_rssi_value>:
 800e58c:	0580      	lsls	r0, r0, #22
 800e58e:	1600      	asrs	r0, r0, #24
 800e590:	4770      	bx	lr

0800e592 <llhwc_phy_get_phy_strt_state>:
 800e592:	48c9      	ldr	r0, [pc, #804]	; (800e8b8 <??DataTable30>)
 800e594:	6d40      	ldr	r0, [r0, #84]	; 0x54
 800e596:	4770      	bx	lr

0800e598 <??DataTable21>:
 800e598:	02fc 2000                                   ... 

0800e59c <??DataTable21_1>:
 800e59c:	1d40 0803                                   @...

0800e5a0 <??DataTable21_2>:
 800e5a0:	03b4 2000                                   ... 

0800e5a4 <??DataTable21_3>:
 800e5a4:	1d08 0803                                   ....

0800e5a8 <llhwc_phy_set_tx_pwr>:
 800e5a8:	f8df 23b0 	ldr.w	r2, [pc, #944]	; 800e95c <??DataTable30_41>
 800e5ac:	b418      	push	{r3, r4}
 800e5ae:	6813      	ldr	r3, [r2, #0]
 800e5b0:	f8df 43ac 	ldr.w	r4, [pc, #940]	; 800e960 <??DataTable30_42>
 800e5b4:	ea43 4300 	orr.w	r3, r3, r0, lsl #16
 800e5b8:	f8df 03a8 	ldr.w	r0, [pc, #936]	; 800e964 <??DataTable30_43>
 800e5bc:	6023      	str	r3, [r4, #0]
 800e5be:	6800      	ldr	r0, [r0, #0]
 800e5c0:	b929      	cbnz	r1, 800e5ce <??llhwc_phy_set_tx_pwr_0>
 800e5c2:	0881      	lsrs	r1, r0, #2
 800e5c4:	4620      	mov	r0, r4
 800e5c6:	b001      	add	sp, #4
 800e5c8:	2300      	movs	r3, #0
 800e5ca:	2200      	movs	r2, #0
 800e5cc:	e006      	b.n	800e5dc <?Subroutine0>

0800e5ce <??llhwc_phy_set_tx_pwr_0>:
 800e5ce:	4601      	mov	r1, r0

0800e5d0 <?Subroutine1>:
 800e5d0:	4620      	mov	r0, r4
 800e5d2:	bc14      	pop	{r2, r4}
 800e5d4:	f7ff bab6 	b.w	800db44 <llhwc_phy_trg_sequence_from_sequencer_ram>

0800e5d8 <??DataTable22>:
 800e5d8:	0214 2000                                   ... 

0800e5dc <?Subroutine0>:
 800e5dc:	bc10      	pop	{r4}
 800e5de:	f7ff b969 	b.w	800d8b4 <llhwc_phy_write_cfg_fifo_batch>

0800e5e2 <llhwc_phy_get_tx_pwr_phy_reg_addr>:
 800e5e2:	f8df 0378 	ldr.w	r0, [pc, #888]	; 800e95c <??DataTable30_41>
 800e5e6:	6800      	ldr	r0, [r0, #0]
 800e5e8:	0400      	lsls	r0, r0, #16
 800e5ea:	0e00      	lsrs	r0, r0, #24
 800e5ec:	4770      	bx	lr
	...

0800e5f0 <??DataTable23>:
 800e5f0:	1d14 0803                                   ....

0800e5f4 <??DataTable23_1>:
 800e5f4:	0248 2000                                   H.. 

0800e5f8 <??DataTable23_2>:
 800e5f8:	1d0c 0803                                   ....

0800e5fc <??DataTable23_3>:
 800e5fc:	027c 2000                                   |.. 

0800e600 <??DataTable23_4>:
 800e600:	1d24 0803                                   $...

0800e604 <??DataTable23_5>:
 800e604:	0324 2000                                   $.. 

0800e608 <??DataTable23_6>:
 800e608:	1d28 0803                                   (...

0800e60c <llhwc_phy_patch_tx_power_mode_phy_reg>:
 800e60c:	b570      	push	{r4, r5, r6, lr}
 800e60e:	f8df 6358 	ldr.w	r6, [pc, #856]	; 800e968 <??DataTable30_44>
 800e612:	4604      	mov	r4, r0
 800e614:	460d      	mov	r5, r1
 800e616:	6831      	ldr	r1, [r6, #0]
 800e618:	462b      	mov	r3, r5
 800e61a:	4622      	mov	r2, r4
 800e61c:	48d3      	ldr	r0, [pc, #844]	; (800e96c <??DataTable30_45>)
 800e61e:	f000 f82b 	bl	800e678 <llhwc_phy_patch_tx_power_mode_in_pre_tx_sequences>
 800e622:	49d3      	ldr	r1, [pc, #844]	; (800e970 <??DataTable30_46>)
 800e624:	6809      	ldr	r1, [r1, #0]
 800e626:	462b      	mov	r3, r5
 800e628:	4622      	mov	r2, r4
 800e62a:	48d2      	ldr	r0, [pc, #840]	; (800e974 <??DataTable30_47>)
 800e62c:	f000 f824 	bl	800e678 <llhwc_phy_patch_tx_power_mode_in_pre_tx_sequences>
 800e630:	48d1      	ldr	r0, [pc, #836]	; (800e978 <??DataTable30_48>)
 800e632:	6801      	ldr	r1, [r0, #0]
 800e634:	462b      	mov	r3, r5
 800e636:	4622      	mov	r2, r4
 800e638:	48d0      	ldr	r0, [pc, #832]	; (800e97c <??DataTable30_49>)
 800e63a:	f000 f81d 	bl	800e678 <llhwc_phy_patch_tx_power_mode_in_pre_tx_sequences>
 800e63e:	48d0      	ldr	r0, [pc, #832]	; (800e980 <??DataTable30_50>)
 800e640:	6801      	ldr	r1, [r0, #0]
 800e642:	462b      	mov	r3, r5
 800e644:	4622      	mov	r2, r4
 800e646:	48cf      	ldr	r0, [pc, #828]	; (800e984 <??DataTable30_51>)
 800e648:	f000 f816 	bl	800e678 <llhwc_phy_patch_tx_power_mode_in_pre_tx_sequences>
 800e64c:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800e650:	f7ff bafb 	b.w	800dc4a <llhwc_phy_seq_ram_init>

0800e654 <??DataTable24>:
 800e654:	fea3 0026                                   ..&.

0800e658 <??DataTable24_1>:
 800e658:	0348 2000                                   H.. 

0800e65c <??DataTable24_2>:
 800e65c:	1d2c 0803                                   ,...

0800e660 <??DataTable24_3>:
 800e660:	036c 2000                                   l.. 

0800e664 <??DataTable24_4>:
 800e664:	1cc4 0803                                   ....

0800e668 <??DataTable24_5>:
 800e668:	1cd0 0803                                   ....

0800e66c <??DataTable24_6>:
 800e66c:	1a74 0803                                   t...

0800e670 <??DataTable24_7>:
 800e670:	1ce0 0803                                   ....

0800e674 <??DataTable24_8>:
 800e674:	1a98 0803                                   ....

0800e678 <llhwc_phy_patch_tx_power_mode_in_pre_tx_sequences>:
 800e678:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800e67c:	4604      	mov	r4, r0
 800e67e:	2000      	movs	r0, #0
 800e680:	460f      	mov	r7, r1
 800e682:	4691      	mov	r9, r2
 800e684:	4698      	mov	r8, r3
 800e686:	2500      	movs	r5, #0
 800e688:	2600      	movs	r6, #0
 800e68a:	f88d 0000 	strb.w	r0, [sp]
 800e68e:	b104      	cbz	r4, 800e692 <??llhwc_phy_patch_tx_power_mode_in_pre_tx_seque_0>
 800e690:	2001      	movs	r0, #1

0800e692 <??llhwc_phy_patch_tx_power_mode_in_pre_tx_seque_0>:
 800e692:	f7f1 fd9d 	bl	80001d0 <bsp_assert>
 800e696:	b39f      	cbz	r7, 800e700 <??llhwc_phy_patch_tx_power_mode_in_pre_tx_seque_1>
 800e698:	08bf      	lsrs	r7, r7, #2
 800e69a:	46ac      	mov	ip, r5
 800e69c:	9700      	str	r7, [sp, #0]
 800e69e:	f246 3012 	movw	r0, #25362	; 0x6312
 800e6a2:	f246 3102 	movw	r1, #25346	; 0x6302
 800e6a6:	f64e 2212 	movw	r2, #59922	; 0xea12
 800e6aa:	f64e 2302 	movw	r3, #59906	; 0xea02
 800e6ae:	46ce      	mov	lr, r9
 800e6b0:	e003      	b.n	800e6ba <??llhwc_phy_patch_tx_power_mode_in_pre_tx_seque_2>

0800e6b2 <??llhwc_phy_patch_tx_power_mode_in_pre_tx_seque_3>:
 800e6b2:	f10c 0c01 	add.w	ip, ip, #1
 800e6b6:	fa5f fc8c 	uxtb.w	ip, ip

0800e6ba <??llhwc_phy_patch_tx_power_mode_in_pre_tx_seque_2>:
 800e6ba:	f8dd 9000 	ldr.w	r9, [sp]
 800e6be:	45cc      	cmp	ip, r9
 800e6c0:	d21e      	bcs.n	800e700 <??llhwc_phy_patch_tx_power_mode_in_pre_tx_seque_1>
 800e6c2:	f854 902c 	ldr.w	r9, [r4, ip, lsl #2]
 800e6c6:	ea01 0b09 	and.w	fp, r1, r9
 800e6ca:	458b      	cmp	fp, r1
 800e6cc:	ea03 0709 	and.w	r7, r3, r9
 800e6d0:	ea02 0a09 	and.w	sl, r2, r9
 800e6d4:	bf1c      	itt	ne
 800e6d6:	ea00 0b09 	andne.w	fp, r0, r9
 800e6da:	4583      	cmpne	fp, r0
 800e6dc:	d105      	bne.n	800e6ea <??llhwc_phy_patch_tx_power_mode_in_pre_tx_seque_4>
 800e6de:	f36e 4917 	bfi	r9, lr, #16, #8
 800e6e2:	f844 902c 	str.w	r9, [r4, ip, lsl #2]
 800e6e6:	2501      	movs	r5, #1
 800e6e8:	e008      	b.n	800e6fc <??llhwc_phy_patch_tx_power_mode_in_pre_tx_seque_5>

0800e6ea <??llhwc_phy_patch_tx_power_mode_in_pre_tx_seque_4>:
 800e6ea:	429f      	cmp	r7, r3
 800e6ec:	bf18      	it	ne
 800e6ee:	4592      	cmpne	sl, r2
 800e6f0:	d104      	bne.n	800e6fc <??llhwc_phy_patch_tx_power_mode_in_pre_tx_seque_5>
 800e6f2:	f368 4917 	bfi	r9, r8, #16, #8
 800e6f6:	f844 902c 	str.w	r9, [r4, ip, lsl #2]
 800e6fa:	2601      	movs	r6, #1

0800e6fc <??llhwc_phy_patch_tx_power_mode_in_pre_tx_seque_5>:
 800e6fc:	4235      	tst	r5, r6
 800e6fe:	d0d8      	beq.n	800e6b2 <??llhwc_phy_patch_tx_power_mode_in_pre_tx_seque_3>

0800e700 <??llhwc_phy_patch_tx_power_mode_in_pre_tx_seque_1>:
 800e700:	e8bd 8ff1 	ldmia.w	sp!, {r0, r4, r5, r6, r7, r8, r9, sl, fp, pc}

0800e704 <llhwc_phy_set_freq_correction_reg>:
 800e704:	48a0      	ldr	r0, [pc, #640]	; (800e988 <??DataTable30_52>)
 800e706:	6801      	ldr	r1, [r0, #0]
 800e708:	48a0      	ldr	r0, [pc, #640]	; (800e98c <??DataTable30_53>)
 800e70a:	f7ff ba1b 	b.w	800db44 <llhwc_phy_trg_sequence_from_sequencer_ram>
	...

0800e710 <??DataTable25>:
 800e710:	1ce4 0803                                   ....

0800e714 <??DataTable25_1>:
 800e714:	1b44 0803                                   D...

0800e718 <llhwc_phy_reset_freq_correction_reg>:
 800e718:	489d      	ldr	r0, [pc, #628]	; (800e990 <??DataTable30_54>)
 800e71a:	6801      	ldr	r1, [r0, #0]
 800e71c:	2300      	movs	r3, #0
 800e71e:	2200      	movs	r2, #0
 800e720:	0889      	lsrs	r1, r1, #2
 800e722:	489c      	ldr	r0, [pc, #624]	; (800e994 <??DataTable30_55>)
 800e724:	f7ff b8c6 	b.w	800d8b4 <llhwc_phy_write_cfg_fifo_batch>

0800e728 <??DataTable26>:
 800e728:	1ce8 0803                                   ....

0800e72c <??DataTable26_1>:
 800e72c:	1b9c 0803                                   ....

0800e730 <??DataTable26_2>:
 800e730:	1cec 0803                                   ....

0800e734 <llhwc_phy_read_reg>:
 800e734:	4a98      	ldr	r2, [pc, #608]	; (800e998 <??DataTable30_56>)
 800e736:	ea42 2200 	orr.w	r2, r2, r0, lsl #8
 800e73a:	b5e0      	push	{r5, r6, r7, lr}
 800e73c:	2100      	movs	r1, #0
 800e73e:	f88d 1000 	strb.w	r1, [sp]
 800e742:	9201      	str	r2, [sp, #4]
 800e744:	2301      	movs	r3, #1
 800e746:	466a      	mov	r2, sp
 800e748:	2101      	movs	r1, #1
 800e74a:	a801      	add	r0, sp, #4
 800e74c:	f7ff f8b2 	bl	800d8b4 <llhwc_phy_write_cfg_fifo_batch>
 800e750:	f89d 0000 	ldrb.w	r0, [sp]
 800e754:	b003      	add	sp, #12
 800e756:	bd00      	pop	{pc}

0800e758 <??DataTable27>:
 800e758:	1ba0 0803                                   ....

0800e75c <??DataTable27_1>:
 800e75c:	1cf0 0803                                   ....

0800e760 <??DataTable27_2>:
 800e760:	0078 2000                                   x.. 

0800e764 <??DataTable27_3>:
 800e764:	1ccc 0803                                   ....

0800e768 <??DataTable27_4>:
 800e768:	1a68 0803                                   h...

0800e76c <llhwc_phy_write_reg>:
 800e76c:	0409      	lsls	r1, r1, #16
 800e76e:	ea41 2100 	orr.w	r1, r1, r0, lsl #8
 800e772:	b580      	push	{r7, lr}
 800e774:	2300      	movs	r3, #0
 800e776:	f041 0112 	orr.w	r1, r1, #18
 800e77a:	9100      	str	r1, [sp, #0]
 800e77c:	2200      	movs	r2, #0
 800e77e:	2101      	movs	r1, #1
 800e780:	4668      	mov	r0, sp
 800e782:	f7ff f897 	bl	800d8b4 <llhwc_phy_write_cfg_fifo_batch>
 800e786:	bd01      	pop	{r0, pc}

0800e788 <llhwc_phy_read_rssi>:
 800e788:	b580      	push	{r7, lr}
 800e78a:	2000      	movs	r0, #0
 800e78c:	f8ad 0000 	strh.w	r0, [sp]
 800e790:	2302      	movs	r3, #2
 800e792:	466a      	mov	r2, sp
 800e794:	2101      	movs	r1, #1
 800e796:	4881      	ldr	r0, [pc, #516]	; (800e99c <??DataTable30_57>)
 800e798:	f7ff f88c 	bl	800d8b4 <llhwc_phy_write_cfg_fifo_batch>
 800e79c:	f9bd 0000 	ldrsh.w	r0, [sp]
 800e7a0:	f8bd 1000 	ldrh.w	r1, [sp]
 800e7a4:	0400      	lsls	r0, r0, #16
 800e7a6:	1680      	asrs	r0, r0, #26
 800e7a8:	f000 003f 	and.w	r0, r0, #63	; 0x3f
 800e7ac:	ea40 1081 	orr.w	r0, r0, r1, lsl #6
 800e7b0:	b240      	sxtb	r0, r0
 800e7b2:	bd02      	pop	{r1, pc}

0800e7b4 <??DataTable28>:
 800e7b4:	1d04 0803                                   ....

0800e7b8 <??DataTable28_1>:
 800e7b8:	0390 2000                                   ... 

0800e7bc <??DataTable28_2>:
 800e7bc:	08a4 2000                                   ... 

0800e7c0 <??DataTable28_3>:
 800e7c0:	1d59 0803                                   Y...

0800e7c4 <llhwc_phy_deactivate_scan_req>:
 800e7c4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800e7c6:	4968      	ldr	r1, [pc, #416]	; (800e968 <??DataTable30_44>)
 800e7c8:	680c      	ldr	r4, [r1, #0]
 800e7ca:	2801      	cmp	r0, #1
 800e7cc:	4622      	mov	r2, r4
 800e7ce:	d004      	beq.n	800e7da <??llhwc_phy_deactivate_scan_req_0>
 800e7d0:	d345      	bcc.n	800e85e <??llhwc_phy_deactivate_scan_req_1>
 800e7d2:	2803      	cmp	r0, #3
 800e7d4:	d016      	beq.n	800e804 <??llhwc_phy_deactivate_scan_req_2>
 800e7d6:	d30c      	bcc.n	800e7f2 <??llhwc_phy_deactivate_scan_req_3>
 800e7d8:	bdf1      	pop	{r0, r4, r5, r6, r7, pc}

0800e7da <??llhwc_phy_deactivate_scan_req_0>:
 800e7da:	4b71      	ldr	r3, [pc, #452]	; (800e9a0 <??DataTable30_58>)
 800e7dc:	4971      	ldr	r1, [pc, #452]	; (800e9a4 <??DataTable30_59>)
 800e7de:	681c      	ldr	r4, [r3, #0]
 800e7e0:	6808      	ldr	r0, [r1, #0]
 800e7e2:	2101      	movs	r1, #1
 800e7e4:	1904      	adds	r4, r0, r4
 800e7e6:	4861      	ldr	r0, [pc, #388]	; (800e96c <??DataTable30_45>)

0800e7e8 <??llhwc_phy_deactivate_scan_req_4>:
 800e7e8:	4d6f      	ldr	r5, [pc, #444]	; (800e9a8 <??DataTable30_60>)
 800e7ea:	2300      	movs	r3, #0
 800e7ec:	0892      	lsrs	r2, r2, #2
 800e7ee:	682d      	ldr	r5, [r5, #0]
 800e7f0:	e015      	b.n	800e81e <??llhwc_phy_deactivate_scan_req_5>

0800e7f2 <??llhwc_phy_deactivate_scan_req_3>:
 800e7f2:	496b      	ldr	r1, [pc, #428]	; (800e9a0 <??DataTable30_58>)
 800e7f4:	4d6b      	ldr	r5, [pc, #428]	; (800e9a4 <??DataTable30_59>)
 800e7f6:	680b      	ldr	r3, [r1, #0]
 800e7f8:	6828      	ldr	r0, [r5, #0]
 800e7fa:	2102      	movs	r1, #2
 800e7fc:	18c3      	adds	r3, r0, r3
 800e7fe:	18e4      	adds	r4, r4, r3
 800e800:	485c      	ldr	r0, [pc, #368]	; (800e974 <??DataTable30_47>)
 800e802:	e7f1      	b.n	800e7e8 <??llhwc_phy_deactivate_scan_req_4>

0800e804 <??llhwc_phy_deactivate_scan_req_2>:
 800e804:	4866      	ldr	r0, [pc, #408]	; (800e9a0 <??DataTable30_58>)
 800e806:	4d67      	ldr	r5, [pc, #412]	; (800e9a4 <??DataTable30_59>)
 800e808:	6803      	ldr	r3, [r0, #0]
 800e80a:	6829      	ldr	r1, [r5, #0]
 800e80c:	4e58      	ldr	r6, [pc, #352]	; (800e970 <??DataTable30_46>)
 800e80e:	6830      	ldr	r0, [r6, #0]
 800e810:	18cb      	adds	r3, r1, r3
 800e812:	18e4      	adds	r4, r4, r3
 800e814:	1904      	adds	r4, r0, r4
 800e816:	4859      	ldr	r0, [pc, #356]	; (800e97c <??DataTable30_49>)
 800e818:	2103      	movs	r1, #3
 800e81a:	e7e5      	b.n	800e7e8 <??llhwc_phy_deactivate_scan_req_4>

0800e81c <??llhwc_phy_deactivate_scan_req_6>:
 800e81c:	1c5b      	adds	r3, r3, #1

0800e81e <??llhwc_phy_deactivate_scan_req_5>:
 800e81e:	b2de      	uxtb	r6, r3
 800e820:	42b2      	cmp	r2, r6
 800e822:	d308      	bcc.n	800e836 <??llhwc_phy_deactivate_scan_req_7>
 800e824:	f850 6026 	ldr.w	r6, [r0, r6, lsl #2]
 800e828:	f026 0710 	bic.w	r7, r6, #16
 800e82c:	42af      	cmp	r7, r5
 800e82e:	d1f5      	bne.n	800e81c <??llhwc_phy_deactivate_scan_req_6>
 800e830:	485e      	ldr	r0, [pc, #376]	; (800e9ac <??DataTable30_61>)
 800e832:	6046      	str	r6, [r0, #4]
 800e834:	7003      	strb	r3, [r0, #0]

0800e836 <??llhwc_phy_deactivate_scan_req_7>:
 800e836:	4d5d      	ldr	r5, [pc, #372]	; (800e9ac <??DataTable30_61>)
 800e838:	7828      	ldrb	r0, [r5, #0]
 800e83a:	28ff      	cmp	r0, #255	; 0xff
 800e83c:	bf14      	ite	ne
 800e83e:	2001      	movne	r0, #1
 800e840:	2000      	moveq	r0, #0
 800e842:	7069      	strb	r1, [r5, #1]
 800e844:	f7f1 fcc4 	bl	80001d0 <bsp_assert>
 800e848:	7828      	ldrb	r0, [r5, #0]
 800e84a:	28ff      	cmp	r0, #255	; 0xff
 800e84c:	d007      	beq.n	800e85e <??llhwc_phy_deactivate_scan_req_1>
 800e84e:	eb04 0480 	add.w	r4, r4, r0, lsl #2
 800e852:	f104 4490 	add.w	r4, r4, #1207959552	; 0x48000000
 800e856:	21ae      	movs	r1, #174	; 0xae
 800e858:	f504 3404 	add.w	r4, r4, #135168	; 0x21000
 800e85c:	6021      	str	r1, [r4, #0]

0800e85e <??llhwc_phy_deactivate_scan_req_1>:
 800e85e:	bdf1      	pop	{r0, r4, r5, r6, r7, pc}

0800e860 <??DataTable29>:
 800e860:	0448 4802                                   H..H

0800e864 <??DataTable29_1>:
 800e864:	1d54 0803                                   T...

0800e868 <??DataTable29_2>:
 800e868:	1cd4 0803                                   ....

0800e86c <??DataTable29_3>:
 800e86c:	1a80 0803                                   ....

0800e870 <llhwc_phy_activate_scan_req>:
 800e870:	4a4e      	ldr	r2, [pc, #312]	; (800e9ac <??DataTable30_61>)
 800e872:	7813      	ldrb	r3, [r2, #0]
 800e874:	2bff      	cmp	r3, #255	; 0xff
 800e876:	d100      	bne.n	800e87a <??llhwc_phy_activate_scan_req_0>
 800e878:	4770      	bx	lr

0800e87a <??llhwc_phy_activate_scan_req_0>:
 800e87a:	b430      	push	{r4, r5}
 800e87c:	4c48      	ldr	r4, [pc, #288]	; (800e9a0 <??DataTable30_58>)
 800e87e:	6821      	ldr	r1, [r4, #0]
 800e880:	4d48      	ldr	r5, [pc, #288]	; (800e9a4 <??DataTable30_59>)
 800e882:	009b      	lsls	r3, r3, #2
 800e884:	6828      	ldr	r0, [r5, #0]
 800e886:	f503 5380 	add.w	r3, r3, #4096	; 0x1000
 800e88a:	18cb      	adds	r3, r1, r3
 800e88c:	18c3      	adds	r3, r0, r3
 800e88e:	7850      	ldrb	r0, [r2, #1]
 800e890:	2802      	cmp	r0, #2
 800e892:	d102      	bne.n	800e89a <??llhwc_phy_activate_scan_req_1>
 800e894:	4934      	ldr	r1, [pc, #208]	; (800e968 <??DataTable30_44>)
 800e896:	6808      	ldr	r0, [r1, #0]
 800e898:	e006      	b.n	800e8a8 <??llhwc_phy_activate_scan_req_2>

0800e89a <??llhwc_phy_activate_scan_req_1>:
 800e89a:	2803      	cmp	r0, #3
 800e89c:	d105      	bne.n	800e8aa <??llhwc_phy_activate_scan_req_3>
 800e89e:	4c32      	ldr	r4, [pc, #200]	; (800e968 <??DataTable30_44>)
 800e8a0:	6821      	ldr	r1, [r4, #0]
 800e8a2:	4d33      	ldr	r5, [pc, #204]	; (800e970 <??DataTable30_46>)
 800e8a4:	6828      	ldr	r0, [r5, #0]
 800e8a6:	18cb      	adds	r3, r1, r3

0800e8a8 <??llhwc_phy_activate_scan_req_2>:
 800e8a8:	18c3      	adds	r3, r0, r3

0800e8aa <??llhwc_phy_activate_scan_req_3>:
 800e8aa:	6851      	ldr	r1, [r2, #4]
 800e8ac:	4840      	ldr	r0, [pc, #256]	; (800e9b0 <??DataTable30_62>)
 800e8ae:	50c1      	str	r1, [r0, r3]
 800e8b0:	23ff      	movs	r3, #255	; 0xff
 800e8b2:	7013      	strb	r3, [r2, #0]
 800e8b4:	bc30      	pop	{r4, r5}
 800e8b6:	4770      	bx	lr

0800e8b8 <??DataTable30>:
 800e8b8:	08bc 2000                                   ... 

0800e8bc <??DataTable30_1>:
 800e8bc:	020c 2000                                   ... 

0800e8c0 <??DataTable30_2>:
 800e8c0:	1d5d 0803                                   ]...

0800e8c4 <??DataTable30_3>:
 800e8c4:	1cf8 0803                                   ....

0800e8c8 <??DataTable30_4>:
 800e8c8:	00c4 2000                                   ... 

0800e8cc <??DataTable30_5>:
 800e8cc:	1cfc 0803                                   ....

0800e8d0 <??DataTable30_6>:
 800e8d0:	0170 2000                                   p.. 

0800e8d4 <??DataTable30_7>:
 800e8d4:	1d00 0803                                   ....

0800e8d8 <??DataTable30_8>:
 800e8d8:	0208 2000                                   ... 

0800e8dc <??DataTable30_9>:
 800e8dc:	1d44 0803                                   D...

0800e8e0 <??DataTable30_10>:
 800e8e0:	1cb4 0803                                   ....

0800e8e4 <??DataTable30_11>:
 800e8e4:	1d48 0803                                   H...

0800e8e8 <??DataTable30_12>:
 800e8e8:	1cc0 0803                                   ....

0800e8ec <??DataTable30_13>:
 800e8ec:	1cd8 0803                                   ....

0800e8f0 <??DataTable30_14>:
 800e8f0:	1a8c 0803                                   ....

0800e8f4 <??DataTable30_15>:
 800e8f4:	1d58 0803                                   X...

0800e8f8 <??DataTable30_16>:
 800e8f8:	1cdc 0803                                   ....

0800e8fc <??DataTable30_17>:
 800e8fc:	1a94 0803                                   ....

0800e900 <??DataTable30_18>:
 800e900:	0920 2000                                    .. 

0800e904 <??DataTable30_19>:
 800e904:	1cf4 0803                                   ....

0800e908 <??DataTable30_20>:
 800e908:	1c48 0803                                   H...

0800e90c <??DataTable30_21>:
 800e90c:	1d60 0803                                   `...

0800e910 <??DataTable30_22>:
 800e910:	1cc8 0803                                   ....

0800e914 <??DataTable30_23>:
 800e914:	1a58 0803                                   X...

0800e918 <??DataTable30_24>:
 800e918:	1d64 0803                                   d...

0800e91c <??DataTable30_25>:
 800e91c:	03cc 2000                                   ... 

0800e920 <??DataTable30_26>:
 800e920:	1d4c 0803                                   L...

0800e924 <??DataTable30_27>:
 800e924:	07f8 2000                                   ... 

0800e928 <??DataTable30_28>:
 800e928:	1d30 0803                                   0...

0800e92c <??DataTable30_29>:
 800e92c:	1c50 0803                                   P...

0800e930 <??DataTable30_30>:
 800e930:	1d34 0803                                   4...

0800e934 <??DataTable30_31>:
 800e934:	1ca0 0803                                   ....

0800e938 <??DataTable30_32>:
 800e938:	1d3c 0803                                   <...

0800e93c <??DataTable30_33>:
 800e93c:	1cb0 0803                                   ....

0800e940 <??DataTable30_34>:
 800e940:	1d38 0803                                   8...

0800e944 <??DataTable30_35>:
 800e944:	1ca8 0803                                   ....

0800e948 <??DataTable30_36>:
 800e948:	1d5b 0803                                   [...

0800e94c <??DataTable30_37>:
 800e94c:	1d5a 0803                                   Z...

0800e950 <??DataTable30_38>:
 800e950:	1d5c 0803                                   \...

0800e954 <??DataTable30_39>:
 800e954:	1d5e 0803                                   ^...

0800e958 <??DataTable30_40>:
 800e958:	1d5f 0803                                   _...

0800e95c <??DataTable30_41>:
 800e95c:	03d0 2000                                   ... 

0800e960 <??DataTable30_42>:
 800e960:	091c 2000                                   ... 

0800e964 <??DataTable30_43>:
 800e964:	1d50 0803                                   P...

0800e968 <??DataTable30_44>:
 800e968:	1d08 0803                                   ....

0800e96c <??DataTable30_45>:
 800e96c:	0214 2000                                   ... 

0800e970 <??DataTable30_46>:
 800e970:	1d14 0803                                   ....

0800e974 <??DataTable30_47>:
 800e974:	0248 2000                                   H.. 

0800e978 <??DataTable30_48>:
 800e978:	1d0c 0803                                   ....

0800e97c <??DataTable30_49>:
 800e97c:	027c 2000                                   |.. 

0800e980 <??DataTable30_50>:
 800e980:	1d10 0803                                   ....

0800e984 <??DataTable30_51>:
 800e984:	02b0 2000                                   ... 

0800e988 <??DataTable30_52>:
 800e988:	1d18 0803                                   ....

0800e98c <??DataTable30_53>:
 800e98c:	02e4 2000                                   ... 

0800e990 <??DataTable30_54>:
 800e990:	1d1c 0803                                   ....

0800e994 <??DataTable30_55>:
 800e994:	02f0 2000                                   ... 

0800e998 <??DataTable30_56>:
 800e998:	0013 0001                                   ....

0800e99c <??DataTable30_57>:
 800e99c:	1cc4 0803                                   ....

0800e9a0 <??DataTable30_58>:
 800e9a0:	1d20 0803                                    ...

0800e9a4 <??DataTable30_59>:
 800e9a4:	1d40 0803                                   @...

0800e9a8 <??DataTable30_60>:
 800e9a8:	1d68 0803                                   h...

0800e9ac <??DataTable30_61>:
 800e9ac:	0070 2000                                   p.. 

0800e9b0 <??DataTable30_62>:
 800e9b0:	0000 4802                                   ...H

0800e9b4 <ll_mem_init>:
 800e9b4:	b538      	push	{r3, r4, r5, lr}
 800e9b6:	4c15      	ldr	r4, [pc, #84]	; (800ea0c <??DataTable0>)
 800e9b8:	2500      	movs	r5, #0
 800e9ba:	9500      	str	r5, [sp, #0]
 800e9bc:	2335      	movs	r3, #53	; 0x35
 800e9be:	220c      	movs	r2, #12
 800e9c0:	4621      	mov	r1, r4
 800e9c2:	f604 5084 	addw	r0, r4, #3460	; 0xd84
 800e9c6:	f000 f825 	bl	800ea14 <mem_pool_init>
 800e9ca:	2101      	movs	r1, #1
 800e9cc:	9100      	str	r1, [sp, #0]
 800e9ce:	2324      	movs	r3, #36	; 0x24
 800e9d0:	2218      	movs	r2, #24
 800e9d2:	f504 7154 	add.w	r1, r4, #848	; 0x350
 800e9d6:	f604 508c 	addw	r0, r4, #3468	; 0xd8c
 800e9da:	f000 f81b 	bl	800ea14 <mem_pool_init>
 800e9de:	2002      	movs	r0, #2
 800e9e0:	9000      	str	r0, [sp, #0]
 800e9e2:	2301      	movs	r3, #1
 800e9e4:	2210      	movs	r2, #16
 800e9e6:	f504 61e8 	add.w	r1, r4, #1856	; 0x740
 800e9ea:	f604 5094 	addw	r0, r4, #3476	; 0xd94
 800e9ee:	f000 f811 	bl	800ea14 <mem_pool_init>
 800e9f2:	2003      	movs	r0, #3
 800e9f4:	9000      	str	r0, [sp, #0]
 800e9f6:	2306      	movs	r3, #6
 800e9f8:	f240 1201 	movw	r2, #257	; 0x101
 800e9fc:	f204 7154 	addw	r1, r4, #1876	; 0x754
 800ea00:	f604 509c 	addw	r0, r4, #3484	; 0xd9c
 800ea04:	f000 f806 	bl	800ea14 <mem_pool_init>
 800ea08:	bd31      	pop	{r0, r4, r5, pc}
	...

0800ea0c <??DataTable0>:
 800ea0c:	0970 2000                                   p.. 

0800ea10 <ll_mem_shared_check>:
 800ea10:	4770      	bx	lr
	...

0800ea14 <mem_pool_init>:
 800ea14:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800ea18:	0005      	movs	r5, r0
 800ea1a:	4688      	mov	r8, r1
 800ea1c:	4617      	mov	r7, r2
 800ea1e:	461c      	mov	r4, r3
 800ea20:	bf18      	it	ne
 800ea22:	2001      	movne	r0, #1
 800ea24:	9e06      	ldr	r6, [sp, #24]
 800ea26:	f7f1 fbd3 	bl	80001d0 <bsp_assert>
 800ea2a:	2e0e      	cmp	r6, #14
 800ea2c:	bfb4      	ite	lt
 800ea2e:	2001      	movlt	r0, #1
 800ea30:	2000      	movge	r0, #0
 800ea32:	f7f1 fbcd 	bl	80001d0 <bsp_assert>
 800ea36:	1dff      	adds	r7, r7, #7
 800ea38:	08bf      	lsrs	r7, r7, #2
 800ea3a:	4837      	ldr	r0, [pc, #220]	; (800eb18 <??DataTable1>)
 800ea3c:	00bf      	lsls	r7, r7, #2
 800ea3e:	4440      	add	r0, r8
 800ea40:	f643 51ff 	movw	r1, #15871	; 0x3dff
 800ea44:	4288      	cmp	r0, r1
 800ea46:	d207      	bcs.n	800ea58 <??mem_pool_init_0>
 800ea48:	fb04 8007 	mla	r0, r4, r7, r8
 800ea4c:	4a33      	ldr	r2, [pc, #204]	; (800eb1c <??DataTable1_1>)
 800ea4e:	4290      	cmp	r0, r2
 800ea50:	4180      	sbcs	r0, r0
 800ea52:	0fc0      	lsrs	r0, r0, #31
 800ea54:	f7f1 fbbc 	bl	80001d0 <bsp_assert>

0800ea58 <??mem_pool_init_0>:
 800ea58:	602f      	str	r7, [r5, #0]
 800ea5a:	b194      	cbz	r4, 800ea82 <??mem_pool_init_1>
 800ea5c:	0431      	lsls	r1, r6, #16
 800ea5e:	f8c5 8004 	str.w	r8, [r5, #4]
 800ea62:	f041 412a 	orr.w	r1, r1, #2852126720	; 0xaa000000

0800ea66 <??mem_pool_init_2>:
 800ea66:	4640      	mov	r0, r8
 800ea68:	6001      	str	r1, [r0, #0]
 800ea6a:	682a      	ldr	r2, [r5, #0]
 800ea6c:	1e64      	subs	r4, r4, #1
 800ea6e:	4490      	add	r8, r2
 800ea70:	f8c0 8004 	str.w	r8, [r0, #4]
 800ea74:	d1f7      	bne.n	800ea66 <??mem_pool_init_2>
 800ea76:	b108      	cbz	r0, 800ea7c <??mem_pool_init_3>
 800ea78:	2100      	movs	r1, #0
 800ea7a:	6041      	str	r1, [r0, #4]

0800ea7c <??mem_pool_init_3>:
 800ea7c:	4828      	ldr	r0, [pc, #160]	; (800eb20 <??DataTable1_2>)
 800ea7e:	f840 5026 	str.w	r5, [r0, r6, lsl #2]

0800ea82 <??mem_pool_init_1>:
 800ea82:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0800ea86 <mem_pool_alloc>:
 800ea86:	b538      	push	{r3, r4, r5, lr}
 800ea88:	0005      	movs	r5, r0
 800ea8a:	bf14      	ite	ne
 800ea8c:	2001      	movne	r0, #1
 800ea8e:	2000      	moveq	r0, #0
 800ea90:	f7f1 fb9e 	bl	80001d0 <bsp_assert>
 800ea94:	f005 fcdf 	bl	8014456 <os_disable_isr>
 800ea98:	686c      	ldr	r4, [r5, #4]
 800ea9a:	b91c      	cbnz	r4, 800eaa4 <??mem_pool_alloc_0>
 800ea9c:	f005 fcdd 	bl	801445a <os_enable_isr>
 800eaa0:	2000      	movs	r0, #0
 800eaa2:	bd32      	pop	{r1, r4, r5, pc}

0800eaa4 <??mem_pool_alloc_0>:
 800eaa4:	6820      	ldr	r0, [r4, #0]
 800eaa6:	f000 407f 	and.w	r0, r0, #4278190080	; 0xff000000
 800eaaa:	f1b0 4f2a 	cmp.w	r0, #2852126720	; 0xaa000000
 800eaae:	bf0c      	ite	eq
 800eab0:	2001      	moveq	r0, #1
 800eab2:	2000      	movne	r0, #0
 800eab4:	f7f1 fb8c 	bl	80001d0 <bsp_assert>
 800eab8:	6860      	ldr	r0, [r4, #4]
 800eaba:	2200      	movs	r2, #0
 800eabc:	6068      	str	r0, [r5, #4]
 800eabe:	6821      	ldr	r1, [r4, #0]
 800eac0:	20ee      	movs	r0, #238	; 0xee
 800eac2:	f360 611f 	bfi	r1, r0, #24, #8
 800eac6:	6021      	str	r1, [r4, #0]
 800eac8:	6062      	str	r2, [r4, #4]
 800eaca:	f005 fcc6 	bl	801445a <os_enable_isr>
 800eace:	1d20      	adds	r0, r4, #4
 800ead0:	bd32      	pop	{r1, r4, r5, pc}

0800ead2 <mem_pool_free>:
 800ead2:	b538      	push	{r3, r4, r5, lr}
 800ead4:	4604      	mov	r4, r0
 800ead6:	f854 0c04 	ldr.w	r0, [r4, #-4]
 800eada:	4911      	ldr	r1, [pc, #68]	; (800eb20 <??DataTable1_2>)
 800eadc:	f3c0 4207 	ubfx	r2, r0, #16, #8
 800eae0:	f000 407f 	and.w	r0, r0, #4278190080	; 0xff000000
 800eae4:	f851 5022 	ldr.w	r5, [r1, r2, lsl #2]
 800eae8:	f1b0 4f6e 	cmp.w	r0, #3992977408	; 0xee000000
 800eaec:	bf0c      	ite	eq
 800eaee:	2001      	moveq	r0, #1
 800eaf0:	2000      	movne	r0, #0
 800eaf2:	f7f1 fb6d 	bl	80001d0 <bsp_assert>
 800eaf6:	f005 fcae 	bl	8014456 <os_disable_isr>
 800eafa:	6868      	ldr	r0, [r5, #4]
 800eafc:	1f21      	subs	r1, r4, #4
 800eafe:	6020      	str	r0, [r4, #0]
 800eb00:	6069      	str	r1, [r5, #4]
 800eb02:	f854 1c04 	ldr.w	r1, [r4, #-4]
 800eb06:	20aa      	movs	r0, #170	; 0xaa
 800eb08:	f360 611f 	bfi	r1, r0, #24, #8
 800eb0c:	f844 1c04 	str.w	r1, [r4, #-4]
 800eb10:	e8bd 4031 	ldmia.w	sp!, {r0, r4, r5, lr}
 800eb14:	f005 bca1 	b.w	801445a <os_enable_isr>

0800eb18 <??DataTable1>:
 800eb18:	7dff b7fd                                   .}..

0800eb1c <??DataTable1_1>:
 800eb1c:	c001 4802                                   ...H

0800eb20 <??DataTable1_2>:
 800eb20:	1714 2000                                   ... 

0800eb24 <mem_pool_get_free_chunk_count>:
 800eb24:	b538      	push	{r3, r4, r5, lr}
 800eb26:	2500      	movs	r5, #0
 800eb28:	6844      	ldr	r4, [r0, #4]
 800eb2a:	b100      	cbz	r0, 800eb2e <??mem_pool_get_free_chunk_count_0>
 800eb2c:	2001      	movs	r0, #1

0800eb2e <??mem_pool_get_free_chunk_count_0>:
 800eb2e:	f7f1 fb4f 	bl	80001d0 <bsp_assert>
 800eb32:	f005 fc90 	bl	8014456 <os_disable_isr>
 800eb36:	e001      	b.n	800eb3c <??mem_pool_get_free_chunk_count_1>

0800eb38 <??mem_pool_get_free_chunk_count_2>:
 800eb38:	1c6d      	adds	r5, r5, #1
 800eb3a:	6864      	ldr	r4, [r4, #4]

0800eb3c <??mem_pool_get_free_chunk_count_1>:
 800eb3c:	2c00      	cmp	r4, #0
 800eb3e:	d1fb      	bne.n	800eb38 <??mem_pool_get_free_chunk_count_2>
 800eb40:	f005 fc8b 	bl	801445a <os_enable_isr>
 800eb44:	b2e8      	uxtb	r0, r5
 800eb46:	bd32      	pop	{r1, r4, r5, pc}

0800eb48 <ble_memcpy>:
 800eb48:	b4f0      	push	{r4, r5, r6, r7}
 800eb4a:	f000 0403 	and.w	r4, r0, #3
 800eb4e:	f1c4 0404 	rsb	r4, r4, #4
 800eb52:	460b      	mov	r3, r1
 800eb54:	b2e4      	uxtb	r4, r4
 800eb56:	2700      	movs	r7, #0
 800eb58:	4626      	mov	r6, r4
 800eb5a:	0011      	movs	r1, r2
 800eb5c:	bf08      	it	eq
 800eb5e:	2000      	moveq	r0, #0
 800eb60:	d01b      	beq.n	800eb9a <??ble_memcpy_0>
 800eb62:	2a04      	cmp	r2, #4
 800eb64:	bfbc      	itt	lt
 800eb66:	42a2      	cmplt	r2, r4
 800eb68:	b2d4      	uxtblt	r4, r2
 800eb6a:	2c04      	cmp	r4, #4
 800eb6c:	bf08      	it	eq
 800eb6e:	2400      	moveq	r4, #0
 800eb70:	1b15      	subs	r5, r2, r4
 800eb72:	1069      	asrs	r1, r5, #1
 800eb74:	eb05 7591 	add.w	r5, r5, r1, lsr #30
 800eb78:	f003 0c03 	and.w	ip, r3, #3
 800eb7c:	1b11      	subs	r1, r2, r4
 800eb7e:	03ad      	lsls	r5, r5, #14
 800eb80:	0c2d      	lsrs	r5, r5, #16
 800eb82:	f1cc 0c04 	rsb	ip, ip, #4
 800eb86:	f001 0103 	and.w	r1, r1, #3
 800eb8a:	45b4      	cmp	ip, r6
 800eb8c:	d007      	beq.n	800eb9e <??ble_memcpy_1>

0800eb8e <??ble_memcpy_2>:
 800eb8e:	5dd9      	ldrb	r1, [r3, r7]
 800eb90:	55c1      	strb	r1, [r0, r7]
 800eb92:	1c7f      	adds	r7, r7, #1
 800eb94:	b2bf      	uxth	r7, r7
 800eb96:	1e52      	subs	r2, r2, #1
 800eb98:	d1f9      	bne.n	800eb8e <??ble_memcpy_2>

0800eb9a <??ble_memcpy_0>:
 800eb9a:	bcf0      	pop	{r4, r5, r6, r7}
 800eb9c:	4770      	bx	lr

0800eb9e <??ble_memcpy_1>:
 800eb9e:	2c00      	cmp	r4, #0
 800eba0:	dd08      	ble.n	800ebb4 <??ble_memcpy_3>
 800eba2:	4606      	mov	r6, r0
 800eba4:	461f      	mov	r7, r3
 800eba6:	4622      	mov	r2, r4

0800eba8 <??ble_memcpy_4>:
 800eba8:	f817 cb01 	ldrb.w	ip, [r7], #1
 800ebac:	1e52      	subs	r2, r2, #1
 800ebae:	f806 cb01 	strb.w	ip, [r6], #1
 800ebb2:	d1f9      	bne.n	800eba8 <??ble_memcpy_4>

0800ebb4 <??ble_memcpy_3>:
 800ebb4:	2d00      	cmp	r5, #0
 800ebb6:	dd08      	ble.n	800ebca <??ble_memcpy_5>
 800ebb8:	1906      	adds	r6, r0, r4
 800ebba:	191f      	adds	r7, r3, r4
 800ebbc:	462a      	mov	r2, r5

0800ebbe <??ble_memcpy_6>:
 800ebbe:	f857 cb04 	ldr.w	ip, [r7], #4
 800ebc2:	1e52      	subs	r2, r2, #1
 800ebc4:	f846 cb04 	str.w	ip, [r6], #4
 800ebc8:	d1f9      	bne.n	800ebbe <??ble_memcpy_6>

0800ebca <??ble_memcpy_5>:
 800ebca:	1902      	adds	r2, r0, r4
 800ebcc:	4423      	add	r3, r4
 800ebce:	eb02 0285 	add.w	r2, r2, r5, lsl #2
 800ebd2:	eb03 0385 	add.w	r3, r3, r5, lsl #2
 800ebd6:	2900      	cmp	r1, #0
 800ebd8:	dddf      	ble.n	800eb9a <??ble_memcpy_0>

0800ebda <??ble_memcpy_7>:
 800ebda:	f813 4b01 	ldrb.w	r4, [r3], #1
 800ebde:	1e49      	subs	r1, r1, #1
 800ebe0:	f802 4b01 	strb.w	r4, [r2], #1
 800ebe4:	d1f9      	bne.n	800ebda <??ble_memcpy_7>
 800ebe6:	bcf0      	pop	{r4, r5, r6, r7}
 800ebe8:	4770      	bx	lr

0800ebea <ble_memset>:
 800ebea:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 800ebee:	4689      	mov	r9, r1
 800ebf0:	ea49 2809 	orr.w	r8, r9, r9, lsl #8
 800ebf4:	4604      	mov	r4, r0
 800ebf6:	f004 0703 	and.w	r7, r4, #3
 800ebfa:	ea48 4809 	orr.w	r8, r8, r9, lsl #16
 800ebfe:	f1c7 0704 	rsb	r7, r7, #4
 800ec02:	b2ff      	uxtb	r7, r7
 800ec04:	ea48 6809 	orr.w	r8, r8, r9, lsl #24
 800ec08:	2a04      	cmp	r2, #4
 800ec0a:	bfbc      	itt	lt
 800ec0c:	42ba      	cmplt	r2, r7
 800ec0e:	b2d7      	uxtblt	r7, r2
 800ec10:	2f04      	cmp	r7, #4
 800ec12:	bf08      	it	eq
 800ec14:	2700      	moveq	r7, #0
 800ec16:	1bd5      	subs	r5, r2, r7
 800ec18:	1068      	asrs	r0, r5, #1
 800ec1a:	eb05 7590 	add.w	r5, r5, r0, lsr #30
 800ec1e:	1bd6      	subs	r6, r2, r7
 800ec20:	f006 0603 	and.w	r6, r6, #3
 800ec24:	03ad      	lsls	r5, r5, #14
 800ec26:	0c2d      	lsrs	r5, r5, #16
 800ec28:	2f00      	cmp	r7, #0
 800ec2a:	dd04      	ble.n	800ec36 <??ble_memset_0>
 800ec2c:	464a      	mov	r2, r9
 800ec2e:	4639      	mov	r1, r7
 800ec30:	4620      	mov	r0, r4
 800ec32:	f016 f9b7 	bl	8024fa4 <__aeabi_memset>

0800ec36 <??ble_memset_0>:
 800ec36:	2d00      	cmp	r5, #0
 800ec38:	dd05      	ble.n	800ec46 <??ble_memset_1>
 800ec3a:	19e1      	adds	r1, r4, r7
 800ec3c:	4628      	mov	r0, r5

0800ec3e <??ble_memset_2>:
 800ec3e:	f841 8b04 	str.w	r8, [r1], #4
 800ec42:	1e40      	subs	r0, r0, #1
 800ec44:	d1fb      	bne.n	800ec3e <??ble_memset_2>

0800ec46 <??ble_memset_1>:
 800ec46:	19e0      	adds	r0, r4, r7
 800ec48:	eb00 0085 	add.w	r0, r0, r5, lsl #2
 800ec4c:	2e00      	cmp	r6, #0
 800ec4e:	dd03      	ble.n	800ec58 <??ble_memset_3>
 800ec50:	464a      	mov	r2, r9
 800ec52:	4631      	mov	r1, r6
 800ec54:	f016 f9a6 	bl	8024fa4 <__aeabi_memset>

0800ec58 <??ble_memset_3>:
 800ec58:	4620      	mov	r0, r4
 800ec5a:	e8bd 83f2 	ldmia.w	sp!, {r1, r4, r5, r6, r7, r8, r9, pc}

0800ec5e <ble_memcmp>:
 800ec5e:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800ec62:	f000 0603 	and.w	r6, r0, #3
 800ec66:	f1c6 0604 	rsb	r6, r6, #4
 800ec6a:	b2f6      	uxtb	r6, r6
 800ec6c:	2400      	movs	r4, #0
 800ec6e:	2300      	movs	r3, #0
 800ec70:	4635      	mov	r5, r6
 800ec72:	2a04      	cmp	r2, #4
 800ec74:	bfbc      	itt	lt
 800ec76:	42b2      	cmplt	r2, r6
 800ec78:	b2d6      	uxtblt	r6, r2
 800ec7a:	2e04      	cmp	r6, #4
 800ec7c:	bf08      	it	eq
 800ec7e:	2600      	moveq	r6, #0
 800ec80:	1b97      	subs	r7, r2, r6
 800ec82:	ea4f 0c67 	mov.w	ip, r7, asr #1
 800ec86:	eb07 779c 	add.w	r7, r7, ip, lsr #30
 800ec8a:	f001 0e03 	and.w	lr, r1, #3
 800ec8e:	eba2 0c06 	sub.w	ip, r2, r6
 800ec92:	03bf      	lsls	r7, r7, #14
 800ec94:	0c3f      	lsrs	r7, r7, #16
 800ec96:	f1ce 0e04 	rsb	lr, lr, #4
 800ec9a:	f00c 0c03 	and.w	ip, ip, #3
 800ec9e:	45ae      	cmp	lr, r5
 800eca0:	d016      	beq.n	800ecd0 <??ble_memcmp_0>
 800eca2:	0015      	movs	r5, r2
 800eca4:	d03f      	beq.n	800ed26 <??ble_memcmp_1>

0800eca6 <??ble_memcmp_2>:
 800eca6:	5d0d      	ldrb	r5, [r1, r4]
 800eca8:	5d06      	ldrb	r6, [r0, r4]
 800ecaa:	42ae      	cmp	r6, r5
 800ecac:	d306      	bcc.n	800ecbc <??ble_memcmp_3>
 800ecae:	42b5      	cmp	r5, r6
 800ecb0:	d338      	bcc.n	800ed24 <??ble_memcmp_4>
 800ecb2:	1c64      	adds	r4, r4, #1
 800ecb4:	b2a4      	uxth	r4, r4
 800ecb6:	1e52      	subs	r2, r2, #1
 800ecb8:	d1f5      	bne.n	800eca6 <??ble_memcmp_2>
 800ecba:	e034      	b.n	800ed26 <??ble_memcmp_1>

0800ecbc <??ble_memcmp_3>:
 800ecbc:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
 800ecc0:	e031      	b.n	800ed26 <??ble_memcmp_1>

0800ecc2 <??ble_memcmp_5>:
 800ecc2:	5d0a      	ldrb	r2, [r1, r4]
 800ecc4:	5d05      	ldrb	r5, [r0, r4]
 800ecc6:	4295      	cmp	r5, r2
 800ecc8:	d3f8      	bcc.n	800ecbc <??ble_memcmp_3>
 800ecca:	42aa      	cmp	r2, r5
 800eccc:	d32a      	bcc.n	800ed24 <??ble_memcmp_4>
 800ecce:	1c64      	adds	r4, r4, #1

0800ecd0 <??ble_memcmp_0>:
 800ecd0:	42b4      	cmp	r4, r6
 800ecd2:	dbf6      	blt.n	800ecc2 <??ble_memcmp_5>
 800ecd4:	2200      	movs	r2, #0
 800ecd6:	1984      	adds	r4, r0, r6
 800ecd8:	198d      	adds	r5, r1, r6
 800ecda:	e00c      	b.n	800ecf6 <??ble_memcmp_6>

0800ecdc <??ble_memcmp_7>:
 800ecdc:	f8d4 e000 	ldr.w	lr, [r4]
 800ece0:	f8d5 8000 	ldr.w	r8, [r5]
 800ece4:	45c6      	cmp	lr, r8
 800ece6:	d3e9      	bcc.n	800ecbc <??ble_memcmp_3>
 800ece8:	f855 9b04 	ldr.w	r9, [r5], #4
 800ecec:	f854 eb04 	ldr.w	lr, [r4], #4
 800ecf0:	45f1      	cmp	r9, lr
 800ecf2:	d317      	bcc.n	800ed24 <??ble_memcmp_4>
 800ecf4:	1c52      	adds	r2, r2, #1

0800ecf6 <??ble_memcmp_6>:
 800ecf6:	42ba      	cmp	r2, r7
 800ecf8:	dbf0      	blt.n	800ecdc <??ble_memcmp_7>
 800ecfa:	4430      	add	r0, r6
 800ecfc:	4431      	add	r1, r6
 800ecfe:	2200      	movs	r2, #0
 800ed00:	eb00 0087 	add.w	r0, r0, r7, lsl #2
 800ed04:	eb01 0187 	add.w	r1, r1, r7, lsl #2
 800ed08:	e000      	b.n	800ed0c <??ble_memcmp_8>

0800ed0a <??ble_memcmp_9>:
 800ed0a:	1c52      	adds	r2, r2, #1

0800ed0c <??ble_memcmp_8>:
 800ed0c:	4562      	cmp	r2, ip
 800ed0e:	da0a      	bge.n	800ed26 <??ble_memcmp_1>
 800ed10:	7804      	ldrb	r4, [r0, #0]
 800ed12:	780d      	ldrb	r5, [r1, #0]
 800ed14:	42ac      	cmp	r4, r5
 800ed16:	d3d1      	bcc.n	800ecbc <??ble_memcmp_3>
 800ed18:	f811 6b01 	ldrb.w	r6, [r1], #1
 800ed1c:	f810 4b01 	ldrb.w	r4, [r0], #1
 800ed20:	42a6      	cmp	r6, r4
 800ed22:	d2f2      	bcs.n	800ed0a <??ble_memcmp_9>

0800ed24 <??ble_memcmp_4>:
 800ed24:	2301      	movs	r3, #1

0800ed26 <??ble_memcmp_1>:
 800ed26:	4618      	mov	r0, r3
 800ed28:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}

0800ed2c <multi_init>:
 800ed2c:	b510      	push	{r4, lr}
 800ed2e:	f8df 4c44 	ldr.w	r4, [pc, #3140]	; 800f974 <??DataTable16>
 800ed32:	223c      	movs	r2, #60	; 0x3c
 800ed34:	2100      	movs	r1, #0
 800ed36:	4620      	mov	r0, r4
 800ed38:	f7ff ff57 	bl	800ebea <ble_memset>
 800ed3c:	2200      	movs	r2, #0
 800ed3e:	6362      	str	r2, [r4, #52]	; 0x34
 800ed40:	2000      	movs	r0, #0
 800ed42:	bd10      	pop	{r4, pc}

0800ed44 <multi_reset>:
 800ed44:	b570      	push	{r4, r5, r6, lr}
 800ed46:	f8df 5c2c 	ldr.w	r5, [pc, #3116]	; 800f974 <??DataTable16>
 800ed4a:	f105 0608 	add.w	r6, r5, #8
 800ed4e:	240b      	movs	r4, #11

0800ed50 <??multi_reset_0>:
 800ed50:	6830      	ldr	r0, [r6, #0]
 800ed52:	b118      	cbz	r0, 800ed5c <??multi_reset_1>
 800ed54:	f7f3 fb9b 	bl	800248e <evnt_schdlr_free_evnt>
 800ed58:	2000      	movs	r0, #0
 800ed5a:	6030      	str	r0, [r6, #0]

0800ed5c <??multi_reset_1>:
 800ed5c:	1d36      	adds	r6, r6, #4
 800ed5e:	1e64      	subs	r4, r4, #1
 800ed60:	d1f6      	bne.n	800ed50 <??multi_reset_0>
 800ed62:	223c      	movs	r2, #60	; 0x3c
 800ed64:	2100      	movs	r1, #0
 800ed66:	4628      	mov	r0, r5
 800ed68:	f7ff ff3f 	bl	800ebea <ble_memset>
 800ed6c:	2000      	movs	r0, #0
 800ed6e:	6368      	str	r0, [r5, #52]	; 0x34
 800ed70:	bd70      	pop	{r4, r5, r6, pc}

0800ed72 <sort_events_table>:
 800ed72:	b470      	push	{r4, r5, r6}
 800ed74:	2300      	movs	r3, #0
 800ed76:	220b      	movs	r2, #11

0800ed78 <??sort_events_table_0>:
 800ed78:	f8df 4bfc 	ldr.w	r4, [pc, #3068]	; 800f978 <??DataTable16_1>
 800ed7c:	210a      	movs	r1, #10

0800ed7e <??sort_events_table_1>:
 800ed7e:	6820      	ldr	r0, [r4, #0]
 800ed80:	b178      	cbz	r0, 800eda2 <??sort_events_table_2>
 800ed82:	6860      	ldr	r0, [r4, #4]
 800ed84:	b168      	cbz	r0, 800eda2 <??sort_events_table_2>
 800ed86:	6825      	ldr	r5, [r4, #0]
 800ed88:	f8b0 0086 	ldrh.w	r0, [r0, #134]	; 0x86
 800ed8c:	f8b5 6086 	ldrh.w	r6, [r5, #134]	; 0x86
 800ed90:	42b0      	cmp	r0, r6
 800ed92:	d203      	bcs.n	800ed9c <??sort_events_table_3>
 800ed94:	6860      	ldr	r0, [r4, #4]
 800ed96:	6065      	str	r5, [r4, #4]
 800ed98:	2301      	movs	r3, #1
 800ed9a:	6020      	str	r0, [r4, #0]

0800ed9c <??sort_events_table_3>:
 800ed9c:	1d24      	adds	r4, r4, #4
 800ed9e:	1e49      	subs	r1, r1, #1
 800eda0:	d1ed      	bne.n	800ed7e <??sort_events_table_1>

0800eda2 <??sort_events_table_2>:
 800eda2:	b10b      	cbz	r3, 800eda8 <??sort_events_table_4>
 800eda4:	1e52      	subs	r2, r2, #1
 800eda6:	d1e7      	bne.n	800ed78 <??sort_events_table_0>

0800eda8 <??sort_events_table_4>:
 800eda8:	bc70      	pop	{r4, r5, r6}
 800edaa:	4770      	bx	lr

0800edac <update_slot_period>:
 800edac:	4601      	mov	r1, r0
 800edae:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800edb0:	f8df 0bc0 	ldr.w	r0, [pc, #3008]	; 800f974 <??DataTable16>
 800edb4:	2200      	movs	r2, #0
 800edb6:	f100 0308 	add.w	r3, r0, #8
 800edba:	f100 0434 	add.w	r4, r0, #52	; 0x34
 800edbe:	f64f 75ff 	movw	r5, #65535	; 0xffff
 800edc2:	e018      	b.n	800edf6 <??update_slot_period_0>

0800edc4 <??update_slot_period_1>:
 800edc4:	6818      	ldr	r0, [r3, #0]
 800edc6:	b1a0      	cbz	r0, 800edf2 <??update_slot_period_2>
 800edc8:	3086      	adds	r0, #134	; 0x86
 800edca:	8846      	ldrh	r6, [r0, #2]
 800edcc:	434e      	muls	r6, r1
 800edce:	8046      	strh	r6, [r0, #2]
 800edd0:	8806      	ldrh	r6, [r0, #0]
 800edd2:	42ae      	cmp	r6, r5
 800edd4:	d00d      	beq.n	800edf2 <??update_slot_period_2>
 800edd6:	6827      	ldr	r7, [r4, #0]
 800edd8:	eb07 0c87 	add.w	ip, r7, r7, lsl #2
 800eddc:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 800ede0:	fbb6 fcfc 	udiv	ip, r6, ip
 800ede4:	fb07 f70c 	mul.w	r7, r7, ip
 800ede8:	eb07 0e87 	add.w	lr, r7, r7, lsl #2
 800edec:	eba6 06ce 	sub.w	r6, r6, lr, lsl #3
 800edf0:	8006      	strh	r6, [r0, #0]

0800edf2 <??update_slot_period_2>:
 800edf2:	1c52      	adds	r2, r2, #1
 800edf4:	1d1b      	adds	r3, r3, #4

0800edf6 <??update_slot_period_0>:
 800edf6:	7920      	ldrb	r0, [r4, #4]
 800edf8:	4282      	cmp	r2, r0
 800edfa:	dbe3      	blt.n	800edc4 <??update_slot_period_1>

0800edfc <?Subroutine0>:
 800edfc:	e8bd 40f1 	ldmia.w	sp!, {r0, r4, r5, r6, r7, lr}
 800ee00:	e7b7      	b.n	800ed72 <sort_events_table>

0800ee02 <evnt_schdlr_choose_conn_intrv>:
 800ee02:	b4f0      	push	{r4, r5, r6, r7}
 800ee04:	4604      	mov	r4, r0
 800ee06:	f8df 3b6c 	ldr.w	r3, [pc, #2924]	; 800f974 <??DataTable16>
 800ee0a:	6b58      	ldr	r0, [r3, #52]	; 0x34
 800ee0c:	b158      	cbz	r0, 800ee26 <??evnt_schdlr_choose_conn_intrv_0>
 800ee0e:	f893 5038 	ldrb.w	r5, [r3, #56]	; 0x38
 800ee12:	2d01      	cmp	r5, #1
 800ee14:	d110      	bne.n	800ee38 <??evnt_schdlr_choose_conn_intrv_1>
 800ee16:	681b      	ldr	r3, [r3, #0]
 800ee18:	b173      	cbz	r3, 800ee38 <??evnt_schdlr_choose_conn_intrv_1>
 800ee1a:	f8b3 3086 	ldrh.w	r3, [r3, #134]	; 0x86
 800ee1e:	f64f 75ff 	movw	r5, #65535	; 0xffff
 800ee22:	42ab      	cmp	r3, r5
 800ee24:	d108      	bne.n	800ee38 <??evnt_schdlr_choose_conn_intrv_1>

0800ee26 <??evnt_schdlr_choose_conn_intrv_0>:
 800ee26:	2920      	cmp	r1, #32
 800ee28:	bfb8      	it	lt
 800ee2a:	460c      	movlt	r4, r1
 800ee2c:	db02      	blt.n	800ee34 <??evnt_schdlr_choose_conn_intrv_2>
 800ee2e:	2c20      	cmp	r4, #32
 800ee30:	bfd8      	it	le
 800ee32:	2420      	movle	r4, #32

0800ee34 <??evnt_schdlr_choose_conn_intrv_2>:
 800ee34:	8014      	strh	r4, [r2, #0]
 800ee36:	e024      	b.n	800ee82 <??evnt_schdlr_choose_conn_intrv_3>

0800ee38 <??evnt_schdlr_choose_conn_intrv_1>:
 800ee38:	42a0      	cmp	r0, r4
 800ee3a:	bf24      	itt	cs
 800ee3c:	4281      	cmpcs	r1, r0
 800ee3e:	8010      	strhcs	r0, [r2, #0]
 800ee40:	d21f      	bcs.n	800ee82 <??evnt_schdlr_choose_conn_intrv_3>
 800ee42:	2602      	movs	r6, #2
 800ee44:	4607      	mov	r7, r0
 800ee46:	e000      	b.n	800ee4a <??evnt_schdlr_choose_conn_intrv_4>

0800ee48 <??evnt_schdlr_choose_conn_intrv_5>:
 800ee48:	1c76      	adds	r6, r6, #1

0800ee4a <??evnt_schdlr_choose_conn_intrv_4>:
 800ee4a:	428f      	cmp	r7, r1
 800ee4c:	d208      	bcs.n	800ee60 <??evnt_schdlr_choose_conn_intrv_6>
 800ee4e:	fb06 f700 	mul.w	r7, r6, r0
 800ee52:	42a7      	cmp	r7, r4
 800ee54:	bf28      	it	cs
 800ee56:	42b9      	cmpcs	r1, r7
 800ee58:	d3f6      	bcc.n	800ee48 <??evnt_schdlr_choose_conn_intrv_5>
 800ee5a:	4370      	muls	r0, r6
 800ee5c:	8010      	strh	r0, [r2, #0]
 800ee5e:	e010      	b.n	800ee82 <??evnt_schdlr_choose_conn_intrv_3>

0800ee60 <??evnt_schdlr_choose_conn_intrv_6>:
 800ee60:	2602      	movs	r6, #2
 800ee62:	4607      	mov	r7, r0
 800ee64:	e000      	b.n	800ee68 <??evnt_schdlr_choose_conn_intrv_7>

0800ee66 <??evnt_schdlr_choose_conn_intrv_8>:
 800ee66:	1c76      	adds	r6, r6, #1

0800ee68 <??evnt_schdlr_choose_conn_intrv_7>:
 800ee68:	42bc      	cmp	r4, r7
 800ee6a:	d20d      	bcs.n	800ee88 <??evnt_schdlr_choose_conn_intrv_9>
 800ee6c:	fbb0 f7f6 	udiv	r7, r0, r6
 800ee70:	42a7      	cmp	r7, r4
 800ee72:	bf28      	it	cs
 800ee74:	42b9      	cmpcs	r1, r7
 800ee76:	d3f6      	bcc.n	800ee66 <??evnt_schdlr_choose_conn_intrv_8>
 800ee78:	fb06 fc07 	mul.w	ip, r6, r7
 800ee7c:	4584      	cmp	ip, r0
 800ee7e:	d1f2      	bne.n	800ee66 <??evnt_schdlr_choose_conn_intrv_8>
 800ee80:	8017      	strh	r7, [r2, #0]

0800ee82 <??evnt_schdlr_choose_conn_intrv_3>:
 800ee82:	2000      	movs	r0, #0
 800ee84:	bcf0      	pop	{r4, r5, r6, r7}
 800ee86:	4770      	bx	lr

0800ee88 <??evnt_schdlr_choose_conn_intrv_9>:
 800ee88:	2920      	cmp	r1, #32
 800ee8a:	db03      	blt.n	800ee94 <??evnt_schdlr_choose_conn_intrv_10>
 800ee8c:	2c20      	cmp	r4, #32
 800ee8e:	bfcc      	ite	gt
 800ee90:	4621      	movgt	r1, r4
 800ee92:	2120      	movle	r1, #32

0800ee94 <??evnt_schdlr_choose_conn_intrv_10>:
 800ee94:	8011      	strh	r1, [r2, #0]
 800ee96:	201f      	movs	r0, #31
 800ee98:	bcf0      	pop	{r4, r5, r6, r7}
 800ee9a:	4770      	bx	lr

0800ee9c <get_intrv_slot_period>:
 800ee9c:	b538      	push	{r3, r4, r5, lr}
 800ee9e:	f8df 3ad4 	ldr.w	r3, [pc, #2772]	; 800f974 <??DataTable16>
 800eea2:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 800eea4:	0014      	movs	r4, r2
 800eea6:	d103      	bne.n	800eeb0 <??get_intrv_slot_period_0>
 800eea8:	6358      	str	r0, [r3, #52]	; 0x34

0800eeaa <??get_intrv_slot_period_1>:
 800eeaa:	2101      	movs	r1, #1

0800eeac <??get_intrv_slot_period_2>:
 800eeac:	b288      	uxth	r0, r1
 800eeae:	bd32      	pop	{r1, r4, r5, pc}

0800eeb0 <??get_intrv_slot_period_0>:
 800eeb0:	4290      	cmp	r0, r2
 800eeb2:	d0fa      	beq.n	800eeaa <??get_intrv_slot_period_1>
 800eeb4:	2102      	movs	r1, #2
 800eeb6:	e000      	b.n	800eeba <??get_intrv_slot_period_3>

0800eeb8 <??get_intrv_slot_period_4>:
 800eeb8:	1c49      	adds	r1, r1, #1

0800eeba <??get_intrv_slot_period_3>:
 800eeba:	4284      	cmp	r4, r0
 800eebc:	d204      	bcs.n	800eec8 <??get_intrv_slot_period_5>
 800eebe:	fb01 f402 	mul.w	r4, r1, r2
 800eec2:	4284      	cmp	r4, r0
 800eec4:	d1f8      	bne.n	800eeb8 <??get_intrv_slot_period_4>
 800eec6:	e7f1      	b.n	800eeac <??get_intrv_slot_period_2>

0800eec8 <??get_intrv_slot_period_5>:
 800eec8:	2102      	movs	r1, #2
 800eeca:	e000      	b.n	800eece <??get_intrv_slot_period_6>

0800eecc <??get_intrv_slot_period_7>:
 800eecc:	1c49      	adds	r1, r1, #1

0800eece <??get_intrv_slot_period_6>:
 800eece:	fb01 f500 	mul.w	r5, r1, r0
 800eed2:	42aa      	cmp	r2, r5
 800eed4:	d308      	bcc.n	800eee8 <??get_intrv_slot_period_8>
 800eed6:	fbb2 f4f1 	udiv	r4, r2, r1
 800eeda:	4295      	cmp	r5, r2
 800eedc:	d1f6      	bne.n	800eecc <??get_intrv_slot_period_7>
 800eede:	635c      	str	r4, [r3, #52]	; 0x34
 800eee0:	b288      	uxth	r0, r1
 800eee2:	f7ff ff63 	bl	800edac <update_slot_period>
 800eee6:	e7e0      	b.n	800eeaa <??get_intrv_slot_period_1>

0800eee8 <??get_intrv_slot_period_8>:
 800eee8:	2100      	movs	r1, #0
 800eeea:	e7df      	b.n	800eeac <??get_intrv_slot_period_2>

0800eeec <get_scan_intrv_slot_period>:
 800eeec:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800eeee:	4602      	mov	r2, r0
 800eef0:	8814      	ldrh	r4, [r2, #0]
 800eef2:	f8df 6a80 	ldr.w	r6, [pc, #2688]	; 800f974 <??DataTable16>
 800eef6:	6b73      	ldr	r3, [r6, #52]	; 0x34
 800eef8:	0865      	lsrs	r5, r4, #1
 800eefa:	b153      	cbz	r3, 800ef12 <??get_scan_intrv_slot_period_0>
 800eefc:	f896 0038 	ldrb.w	r0, [r6, #56]	; 0x38
 800ef00:	2801      	cmp	r0, #1
 800ef02:	bf01      	itttt	eq
 800ef04:	6837      	ldreq	r7, [r6, #0]
 800ef06:	f8b7 0086 	ldrheq.w	r0, [r7, #134]	; 0x86
 800ef0a:	f64f 7cff 	movweq	ip, #65535	; 0xffff
 800ef0e:	4560      	cmpeq	r0, ip
 800ef10:	d103      	bne.n	800ef1a <??get_scan_intrv_slot_period_1>

0800ef12 <??get_scan_intrv_slot_period_0>:
 800ef12:	6375      	str	r5, [r6, #52]	; 0x34
 800ef14:	0068      	lsls	r0, r5, #1
 800ef16:	8010      	strh	r0, [r2, #0]
 800ef18:	e029      	b.n	800ef6e <??get_scan_intrv_slot_period_2>

0800ef1a <??get_scan_intrv_slot_period_1>:
 800ef1a:	429d      	cmp	r5, r3
 800ef1c:	d102      	bne.n	800ef24 <??get_scan_intrv_slot_period_3>
 800ef1e:	0069      	lsls	r1, r5, #1
 800ef20:	8011      	strh	r1, [r2, #0]
 800ef22:	e024      	b.n	800ef6e <??get_scan_intrv_slot_period_2>

0800ef24 <??get_scan_intrv_slot_period_3>:
 800ef24:	2002      	movs	r0, #2
 800ef26:	461f      	mov	r7, r3
 800ef28:	e000      	b.n	800ef2c <??get_scan_intrv_slot_period_4>

0800ef2a <??get_scan_intrv_slot_period_5>:
 800ef2a:	1c40      	adds	r0, r0, #1

0800ef2c <??get_scan_intrv_slot_period_4>:
 800ef2c:	42af      	cmp	r7, r5
 800ef2e:	d20c      	bcs.n	800ef4a <??get_scan_intrv_slot_period_6>
 800ef30:	fb00 f703 	mul.w	r7, r0, r3
 800ef34:	42af      	cmp	r7, r5
 800ef36:	d1f8      	bne.n	800ef2a <??get_scan_intrv_slot_period_5>
 800ef38:	006b      	lsls	r3, r5, #1
 800ef3a:	880d      	ldrh	r5, [r1, #0]
 800ef3c:	42a5      	cmp	r5, r4
 800ef3e:	bf08      	it	eq
 800ef40:	800b      	strheq	r3, [r1, #0]
 800ef42:	8013      	strh	r3, [r2, #0]
 800ef44:	b280      	uxth	r0, r0
 800ef46:	bdf2      	pop	{r1, r4, r5, r6, r7, pc}

0800ef48 <??get_scan_intrv_slot_period_7>:
 800ef48:	1c40      	adds	r0, r0, #1

0800ef4a <??get_scan_intrv_slot_period_6>:
 800ef4a:	42bd      	cmp	r5, r7
 800ef4c:	d211      	bcs.n	800ef72 <??get_scan_intrv_slot_period_8>
 800ef4e:	fb00 fc05 	mul.w	ip, r0, r5
 800ef52:	fbb3 f7f0 	udiv	r7, r3, r0
 800ef56:	459c      	cmp	ip, r3
 800ef58:	d1f6      	bne.n	800ef48 <??get_scan_intrv_slot_period_7>
 800ef5a:	6377      	str	r7, [r6, #52]	; 0x34
 800ef5c:	006b      	lsls	r3, r5, #1
 800ef5e:	880d      	ldrh	r5, [r1, #0]
 800ef60:	42a5      	cmp	r5, r4
 800ef62:	bf08      	it	eq
 800ef64:	800b      	strheq	r3, [r1, #0]
 800ef66:	8013      	strh	r3, [r2, #0]
 800ef68:	b280      	uxth	r0, r0
 800ef6a:	f7ff ff1f 	bl	800edac <update_slot_period>

0800ef6e <??get_scan_intrv_slot_period_2>:
 800ef6e:	2001      	movs	r0, #1
 800ef70:	bdf2      	pop	{r1, r4, r5, r6, r7, pc}

0800ef72 <??get_scan_intrv_slot_period_8>:
 800ef72:	2000      	movs	r0, #0
 800ef74:	bdf2      	pop	{r1, r4, r5, r6, r7, pc}

0800ef76 <set_evnt_start_time>:
 800ef76:	b57c      	push	{r2, r3, r4, r5, r6, lr}
 800ef78:	f8df 29f8 	ldr.w	r2, [pc, #2552]	; 800f974 <??DataTable16>
 800ef7c:	6b53      	ldr	r3, [r2, #52]	; 0x34
 800ef7e:	4605      	mov	r5, r0
 800ef80:	e9d5 0124 	ldrd	r0, r1, [r5, #144]	; 0x90
 800ef84:	eb03 0683 	add.w	r6, r3, r3, lsl #2
 800ef88:	2400      	movs	r4, #0
 800ef8a:	00f6      	lsls	r6, r6, #3
 800ef8c:	f8df 3aa0 	ldr.w	r3, [pc, #2720]	; 800fa30 <??DataTable17>
 800ef90:	4218      	tst	r0, r3
 800ef92:	d008      	beq.n	800efa6 <??set_evnt_start_time_0>
 800ef94:	6890      	ldr	r0, [r2, #8]
 800ef96:	b930      	cbnz	r0, 800efa6 <??set_evnt_start_time_0>
 800ef98:	f8b5 0086 	ldrh.w	r0, [r5, #134]	; 0x86
 800ef9c:	f64f 71ff 	movw	r1, #65535	; 0xffff
 800efa0:	4288      	cmp	r0, r1
 800efa2:	bf18      	it	ne
 800efa4:	2401      	movne	r4, #1

0800efa6 <??set_evnt_start_time_0>:
 800efa6:	4668      	mov	r0, sp
 800efa8:	f7fd f877 	bl	800c09a <llhwc_slptmr_get>
 800efac:	f8b5 1086 	ldrh.w	r1, [r5, #134]	; 0x86
 800efb0:	f64f 70ff 	movw	r0, #65535	; 0xffff
 800efb4:	4281      	cmp	r1, r0
 800efb6:	d000      	beq.n	800efba <??set_evnt_start_time_1>
 800efb8:	b16c      	cbz	r4, 800efd6 <??set_evnt_start_time_2>

0800efba <??set_evnt_start_time_1>:
 800efba:	f8df 2c7c 	ldr.w	r2, [pc, #3196]	; 800fc38 <??DataTable18>
 800efbe:	9900      	ldr	r1, [sp, #0]
 800efc0:	6810      	ldr	r0, [r2, #0]
 800efc2:	1841      	adds	r1, r0, r1
 800efc4:	1d49      	adds	r1, r1, #5
 800efc6:	b1ac      	cbz	r4, 800eff4 <??set_evnt_start_time_3>
 800efc8:	fbb1 f0f6 	udiv	r0, r1, r6
 800efcc:	fb06 1610 	mls	r6, r6, r0, r1
 800efd0:	f8a5 6086 	strh.w	r6, [r5, #134]	; 0x86
 800efd4:	e00e      	b.n	800eff4 <??set_evnt_start_time_3>

0800efd6 <??set_evnt_start_time_2>:
 800efd6:	9800      	ldr	r0, [sp, #0]
 800efd8:	f8df 3c5c 	ldr.w	r3, [pc, #3164]	; 800fc38 <??DataTable18>
 800efdc:	fbb0 f0f6 	udiv	r0, r0, r6
 800efe0:	fb06 1100 	mla	r1, r6, r0, r1
 800efe4:	6529      	str	r1, [r5, #80]	; 0x50
 800efe6:	9a00      	ldr	r2, [sp, #0]
 800efe8:	6818      	ldr	r0, [r3, #0]
 800efea:	1882      	adds	r2, r0, r2
 800efec:	1d52      	adds	r2, r2, #5
 800efee:	4291      	cmp	r1, r2
 800eff0:	bf38      	it	cc
 800eff2:	1871      	addcc	r1, r6, r1

0800eff4 <??set_evnt_start_time_3>:
 800eff4:	2000      	movs	r0, #0
 800eff6:	6529      	str	r1, [r5, #80]	; 0x50
 800eff8:	6568      	str	r0, [r5, #84]	; 0x54
 800effa:	bd73      	pop	{r0, r1, r4, r5, r6, pc}

0800effc <events_count>:
 800effc:	f8df 0974 	ldr.w	r0, [pc, #2420]	; 800f974 <??DataTable16>
 800f000:	f890 0038 	ldrb.w	r0, [r0, #56]	; 0x38
 800f004:	4770      	bx	lr

0800f006 <events_when_idle_count>:
 800f006:	f8df 096c 	ldr.w	r0, [pc, #2412]	; 800f974 <??DataTable16>
 800f00a:	f890 0039 	ldrb.w	r0, [r0, #57]	; 0x39
 800f00e:	4770      	bx	lr

0800f010 <add_ordered>:
 800f010:	b470      	push	{r4, r5, r6}
 800f012:	f8df 3960 	ldr.w	r3, [pc, #2400]	; 800f974 <??DataTable16>

0800f016 <??add_ordered_0>:
 800f016:	f893 4038 	ldrb.w	r4, [r3, #56]	; 0x38
 800f01a:	b2ca      	uxtb	r2, r1
 800f01c:	42a2      	cmp	r2, r4
 800f01e:	d20f      	bcs.n	800f040 <??add_ordered_1>
 800f020:	eb03 0482 	add.w	r4, r3, r2, lsl #2
 800f024:	68a2      	ldr	r2, [r4, #8]
 800f026:	b902      	cbnz	r2, 800f02a <??add_ordered_2>
 800f028:	60a0      	str	r0, [r4, #8]

0800f02a <??add_ordered_2>:
 800f02a:	68a2      	ldr	r2, [r4, #8]
 800f02c:	f8b0 5086 	ldrh.w	r5, [r0, #134]	; 0x86
 800f030:	1c49      	adds	r1, r1, #1
 800f032:	f8b2 6086 	ldrh.w	r6, [r2, #134]	; 0x86
 800f036:	42b5      	cmp	r5, r6
 800f038:	d2ed      	bcs.n	800f016 <??add_ordered_0>
 800f03a:	60a0      	str	r0, [r4, #8]
 800f03c:	4610      	mov	r0, r2
 800f03e:	e7ea      	b.n	800f016 <??add_ordered_0>

0800f040 <??add_ordered_1>:
 800f040:	bc70      	pop	{r4, r5, r6}
 800f042:	4770      	bx	lr

0800f044 <add_conflict_queue>:
 800f044:	b510      	push	{r4, lr}
 800f046:	4604      	mov	r4, r0
 800f048:	200d      	movs	r0, #13
 800f04a:	f7f1 f8ed 	bl	8000228 <bsp_debug_gpio_set>
 800f04e:	2101      	movs	r1, #1
 800f050:	f884 109a 	strb.w	r1, [r4, #154]	; 0x9a
 800f054:	f8df 091c 	ldr.w	r0, [pc, #2332]	; 800f974 <??DataTable16>
 800f058:	f890 103a 	ldrb.w	r1, [r0, #58]	; 0x3a
 800f05c:	1c49      	adds	r1, r1, #1
 800f05e:	f880 103a 	strb.w	r1, [r0, #58]	; 0x3a
 800f062:	200d      	movs	r0, #13
 800f064:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800f068:	f7f1 b8e0 	b.w	800022c <bsp_debug_gpio_clear>

0800f06c <recheck_conflicting>:
 800f06c:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800f070:	b088      	sub	sp, #32
 800f072:	f8df 4900 	ldr.w	r4, [pc, #2304]	; 800f974 <??DataTable16>

0800f076 <??recheck_conflicting_0>:
 800f076:	f8df 0bc4 	ldr.w	r0, [pc, #3012]	; 800fc3c <??DataTable18_1>
 800f07a:	9002      	str	r0, [sp, #8]
 800f07c:	7880      	ldrb	r0, [r0, #2]
 800f07e:	2800      	cmp	r0, #0
 800f080:	f000 8222 	beq.w	800f4c8 <??recheck_conflicting_1>
 800f084:	f8df 18f0 	ldr.w	r1, [pc, #2288]	; 800f978 <??DataTable16_1>
 800f088:	220b      	movs	r2, #11
 800f08a:	9105      	str	r1, [sp, #20]
 800f08c:	9204      	str	r2, [sp, #16]

0800f08e <??recheck_conflicting_2>:
 800f08e:	9805      	ldr	r0, [sp, #20]
 800f090:	6801      	ldr	r1, [r0, #0]
 800f092:	9103      	str	r1, [sp, #12]
 800f094:	2900      	cmp	r1, #0
 800f096:	d0ee      	beq.n	800f076 <??recheck_conflicting_0>
 800f098:	460d      	mov	r5, r1
 800f09a:	f105 0b90 	add.w	fp, r5, #144	; 0x90
 800f09e:	e9db 0100 	ldrd	r0, r1, [fp]
 800f0a2:	e9cd 0106 	strd	r0, r1, [sp, #24]

0800f0a6 <??recheck_conflicting_3>:
 800f0a6:	f89b 000a 	ldrb.w	r0, [fp, #10]
 800f0aa:	2801      	cmp	r0, #1
 800f0ac:	f040 809e 	bne.w	800f1ec <??recheck_conflicting_4>
 800f0b0:	2700      	movs	r7, #0
 800f0b2:	6826      	ldr	r6, [r4, #0]
 800f0b4:	e001      	b.n	800f0ba <??recheck_conflicting_5>

0800f0b6 <??recheck_conflicting_6>:
 800f0b6:	4637      	mov	r7, r6
 800f0b8:	6f76      	ldr	r6, [r6, #116]	; 0x74

0800f0ba <??recheck_conflicting_5>:
 800f0ba:	2e00      	cmp	r6, #0
 800f0bc:	f000 809f 	beq.w	800f1fe <??recheck_conflicting_7>
 800f0c0:	2001      	movs	r0, #1
 800f0c2:	f7f1 f885 	bl	80001d0 <bsp_assert>
 800f0c6:	2001      	movs	r0, #1
 800f0c8:	f7f1 f882 	bl	80001d0 <bsp_assert>
 800f0cc:	f8d6 9060 	ldr.w	r9, [r6, #96]	; 0x60
 800f0d0:	f8d5 8060 	ldr.w	r8, [r5, #96]	; 0x60
 800f0d4:	f105 0150 	add.w	r1, r5, #80	; 0x50
 800f0d8:	f106 0050 	add.w	r0, r6, #80	; 0x50
 800f0dc:	f005 fb3e 	bl	801475c <ble_time_comp>
 800f0e0:	2800      	cmp	r0, #0
 800f0e2:	d506      	bpl.n	800f0f2 <??recheck_conflicting_8>
 800f0e4:	6d31      	ldr	r1, [r6, #80]	; 0x50
 800f0e6:	6d28      	ldr	r0, [r5, #80]	; 0x50
 800f0e8:	fa1f f989 	uxth.w	r9, r9
 800f0ec:	4489      	add	r9, r1
 800f0ee:	4548      	cmp	r0, r9
 800f0f0:	d2e1      	bcs.n	800f0b6 <??recheck_conflicting_6>

0800f0f2 <??recheck_conflicting_8>:
 800f0f2:	f105 0150 	add.w	r1, r5, #80	; 0x50
 800f0f6:	f106 0050 	add.w	r0, r6, #80	; 0x50
 800f0fa:	f005 fb2f 	bl	801475c <ble_time_comp>
 800f0fe:	2800      	cmp	r0, #0
 800f100:	dd0e      	ble.n	800f120 <??recheck_conflicting_9>
 800f102:	6d29      	ldr	r1, [r5, #80]	; 0x50
 800f104:	6d30      	ldr	r0, [r6, #80]	; 0x50
 800f106:	fa1f f888 	uxth.w	r8, r8
 800f10a:	4488      	add	r8, r1
 800f10c:	4540      	cmp	r0, r8
 800f10e:	d307      	bcc.n	800f120 <??recheck_conflicting_9>
 800f110:	b91f      	cbnz	r7, 800f11a <??recheck_conflicting_10>
 800f112:	9903      	ldr	r1, [sp, #12]
 800f114:	6025      	str	r5, [r4, #0]
 800f116:	674e      	str	r6, [r1, #116]	; 0x74
 800f118:	e075      	b.n	800f206 <??recheck_conflicting_11>

0800f11a <??recheck_conflicting_10>:
 800f11a:	677d      	str	r5, [r7, #116]	; 0x74
 800f11c:	676e      	str	r6, [r5, #116]	; 0x74
 800f11e:	e072      	b.n	800f206 <??recheck_conflicting_11>

0800f120 <??recheck_conflicting_9>:
 800f120:	f89b 0009 	ldrb.w	r0, [fp, #9]
 800f124:	2700      	movs	r7, #0
 800f126:	f04f 31ff 	mov.w	r1, #4294967295	; 0xffffffff
 800f12a:	1c40      	adds	r0, r0, #1
 800f12c:	f88b 0009 	strb.w	r0, [fp, #9]
 800f130:	f8df 0b0c 	ldr.w	r0, [pc, #2828]	; 800fc40 <??DataTable18_2>
 800f134:	6800      	ldr	r0, [r0, #0]
 800f136:	f88d 7000 	strb.w	r7, [sp]
 800f13a:	6f2e      	ldr	r6, [r5, #112]	; 0x70
 800f13c:	f005 f993 	bl	8014466 <os_rcrsv_mutex_wait>
 800f140:	e9db 0100 	ldrd	r0, r1, [fp]
 800f144:	f05f 020a 	movs.w	r2, #10
 800f148:	f7f3 f984 	bl	8002454 <__iar_llswitch>

0800f14c <?<Jumptable for recheck_conflicting>_0>:
 800f14c:	0001 0000 0000 0000 033d 0000 0002 0000     ........=.......
 800f15c:	0000 0000 0331 0000 0004 0000 0000 0000     ....1...........
 800f16c:	0325 0000 0008 0000 0000 0000 0319 0000     %...............
 800f17c:	0010 0000 0000 0000 02f3 0000 0020 0000     ............ ...
 800f18c:	0000 0000 02e7 0000 0040 0000 0000 0000     ........@.......
 800f19c:	02cb 0000 0080 0000 0000 0000 02a9 0000     ................
 800f1ac:	0100 0000 0000 0000 0291 0000 0000 0000     ................
 800f1bc:	0001 0000 0055 0000 0001 0000               ....U.......

0800f1c8 <??recheck_conflicting_18>:
 800f1c8:	271f      	movs	r7, #31

0800f1ca <??recheck_conflicting_19>:
 800f1ca:	f8df 0a74 	ldr.w	r0, [pc, #2676]	; 800fc40 <??DataTable18_2>
 800f1ce:	6800      	ldr	r0, [r0, #0]
 800f1d0:	f005 f94f 	bl	8014472 <os_rcrsv_mutex_release>
 800f1d4:	e9dd 0106 	ldrd	r0, r1, [sp, #24]
 800f1d8:	2200      	movs	r2, #0
 800f1da:	2301      	movs	r3, #1
 800f1dc:	4299      	cmp	r1, r3
 800f1de:	bf08      	it	eq
 800f1e0:	4290      	cmpeq	r0, r2
 800f1e2:	f47f af60 	bne.w	800f0a6 <??recheck_conflicting_3>
 800f1e6:	2f00      	cmp	r7, #0
 800f1e8:	f43f af5d 	beq.w	800f0a6 <??recheck_conflicting_3>

0800f1ec <??recheck_conflicting_4>:
 800f1ec:	9805      	ldr	r0, [sp, #20]
 800f1ee:	1d01      	adds	r1, r0, #4
 800f1f0:	9804      	ldr	r0, [sp, #16]
 800f1f2:	9105      	str	r1, [sp, #20]
 800f1f4:	1e40      	subs	r0, r0, #1
 800f1f6:	9004      	str	r0, [sp, #16]
 800f1f8:	f43f af3d 	beq.w	800f076 <??recheck_conflicting_0>
 800f1fc:	e747      	b.n	800f08e <??recheck_conflicting_2>

0800f1fe <??recheck_conflicting_7>:
 800f1fe:	2f00      	cmp	r7, #0
 800f200:	bf14      	ite	ne
 800f202:	677d      	strne	r5, [r7, #116]	; 0x74
 800f204:	6025      	streq	r5, [r4, #0]

0800f206 <??recheck_conflicting_11>:
 800f206:	2000      	movs	r0, #0
 800f208:	f88b 000a 	strb.w	r0, [fp, #10]
 800f20c:	f104 0038 	add.w	r0, r4, #56	; 0x38
 800f210:	7881      	ldrb	r1, [r0, #2]
 800f212:	1e4a      	subs	r2, r1, #1
 800f214:	7082      	strb	r2, [r0, #2]
 800f216:	e7e9      	b.n	800f1ec <??recheck_conflicting_4>

0800f218 <??recheck_conflicting_17>:
 800f218:	6826      	ldr	r6, [r4, #0]
 800f21a:	a801      	add	r0, sp, #4
 800f21c:	f7fc ff3d 	bl	800c09a <llhwc_slptmr_get>
 800f220:	68a8      	ldr	r0, [r5, #8]
 800f222:	2800      	cmp	r0, #0
 800f224:	d164      	bne.n	800f2f0 <??recheck_conflicting_20>
 800f226:	6928      	ldr	r0, [r5, #16]
 800f228:	b110      	cbz	r0, 800f230 <??recheck_conflicting_21>
 800f22a:	9901      	ldr	r1, [sp, #4]
 800f22c:	4281      	cmp	r1, r0
 800f22e:	d226      	bcs.n	800f27e <??recheck_conflicting_22>

0800f230 <??recheck_conflicting_21>:
 800f230:	f8d5 c050 	ldr.w	ip, [r5, #80]	; 0x50
 800f234:	6f68      	ldr	r0, [r5, #116]	; 0x74
 800f236:	46e6      	mov	lr, ip
 800f238:	b158      	cbz	r0, 800f252 <??recheck_conflicting_23>
 800f23a:	e9d0 2324 	ldrd	r2, r3, [r0, #144]	; 0x90
 800f23e:	2101      	movs	r1, #1
 800f240:	428b      	cmp	r3, r1
 800f242:	bf07      	ittee	eq
 800f244:	42ba      	cmpeq	r2, r7
 800f246:	200f      	moveq	r0, #15
 800f248:	f8df 09ec 	ldrne.w	r0, [pc, #2540]	; 800fc38 <??DataTable18>
 800f24c:	6800      	ldrne	r0, [r0, #0]
 800f24e:	ebae 0e00 	sub.w	lr, lr, r0

0800f252 <??recheck_conflicting_23>:
 800f252:	b166      	cbz	r6, 800f26e <??recheck_conflicting_24>
 800f254:	9801      	ldr	r0, [sp, #4]
 800f256:	4570      	cmp	r0, lr
 800f258:	d32a      	bcc.n	800f2b0 <??recheck_conflicting_25>
 800f25a:	6d30      	ldr	r0, [r6, #80]	; 0x50
 800f25c:	9a01      	ldr	r2, [sp, #4]
 800f25e:	6e29      	ldr	r1, [r5, #96]	; 0x60
 800f260:	1a80      	subs	r0, r0, r2
 800f262:	4281      	cmp	r1, r0
 800f264:	d224      	bcs.n	800f2b0 <??recheck_conflicting_25>
 800f266:	4628      	mov	r0, r5
 800f268:	f7ff fe85 	bl	800ef76 <set_evnt_start_time>
 800f26c:	e7ad      	b.n	800f1ca <??recheck_conflicting_19>

0800f26e <??recheck_conflicting_24>:
 800f26e:	4628      	mov	r0, r5
 800f270:	f7ff fe81 	bl	800ef76 <set_evnt_start_time>

0800f274 <??recheck_conflicting_26>:
 800f274:	6928      	ldr	r0, [r5, #16]
 800f276:	b350      	cbz	r0, 800f2ce <??recheck_conflicting_27>
 800f278:	6d29      	ldr	r1, [r5, #80]	; 0x50
 800f27a:	4288      	cmp	r0, r1
 800f27c:	d227      	bcs.n	800f2ce <??recheck_conflicting_27>

0800f27e <??recheck_conflicting_22>:
 800f27e:	2601      	movs	r6, #1

0800f280 <??recheck_conflicting_28>:
 800f280:	e9db 2300 	ldrd	r2, r3, [fp]
 800f284:	f105 0084 	add.w	r0, r5, #132	; 0x84
 800f288:	271f      	movs	r7, #31
 800f28a:	f8b0 a004 	ldrh.w	sl, [r0, #4]
 800f28e:	f8b0 8002 	ldrh.w	r8, [r0, #2]
 800f292:	2100      	movs	r1, #0
 800f294:	f89b 900a 	ldrb.w	r9, [fp, #10]
 800f298:	f04f 4080 	mov.w	r0, #1073741824	; 0x40000000
 800f29c:	428b      	cmp	r3, r1
 800f29e:	bf08      	it	eq
 800f2a0:	4282      	cmpeq	r2, r0
 800f2a2:	d13a      	bne.n	800f31a <??recheck_conflicting_29>
 800f2a4:	6860      	ldr	r0, [r4, #4]
 800f2a6:	42a8      	cmp	r0, r5
 800f2a8:	d127      	bne.n	800f2fa <??recheck_conflicting_30>
 800f2aa:	6f40      	ldr	r0, [r0, #116]	; 0x74
 800f2ac:	6060      	str	r0, [r4, #4]
 800f2ae:	e02c      	b.n	800f30a <??recheck_conflicting_31>

0800f2b0 <??recheck_conflicting_25>:
 800f2b0:	6d31      	ldr	r1, [r6, #80]	; 0x50
 800f2b2:	6e30      	ldr	r0, [r6, #96]	; 0x60
 800f2b4:	1841      	adds	r1, r0, r1
 800f2b6:	458c      	cmp	ip, r1
 800f2b8:	d303      	bcc.n	800f2c2 <??recheck_conflicting_32>
 800f2ba:	6f76      	ldr	r6, [r6, #116]	; 0x74
 800f2bc:	2e00      	cmp	r6, #0
 800f2be:	d1f7      	bne.n	800f2b0 <??recheck_conflicting_25>
 800f2c0:	e7d5      	b.n	800f26e <??recheck_conflicting_24>

0800f2c2 <??recheck_conflicting_32>:
 800f2c2:	2205      	movs	r2, #5
 800f2c4:	f105 0050 	add.w	r0, r5, #80	; 0x50
 800f2c8:	f005 fa92 	bl	80147f0 <ble_time_set_uint>
 800f2cc:	e7d2      	b.n	800f274 <??recheck_conflicting_26>

0800f2ce <??recheck_conflicting_27>:
 800f2ce:	69e8      	ldr	r0, [r5, #28]
 800f2d0:	2800      	cmp	r0, #0
 800f2d2:	f43f af7a 	beq.w	800f1ca <??recheck_conflicting_19>
 800f2d6:	6d29      	ldr	r1, [r5, #80]	; 0x50
 800f2d8:	6e2a      	ldr	r2, [r5, #96]	; 0x60
 800f2da:	f8df 395c 	ldr.w	r3, [pc, #2396]	; 800fc38 <??DataTable18>
 800f2de:	681e      	ldr	r6, [r3, #0]
 800f2e0:	1851      	adds	r1, r2, r1
 800f2e2:	1b89      	subs	r1, r1, r6
 800f2e4:	3914      	subs	r1, #20
 800f2e6:	4288      	cmp	r0, r1
 800f2e8:	f4bf af6f 	bcs.w	800f1ca <??recheck_conflicting_19>
 800f2ec:	2604      	movs	r6, #4
 800f2ee:	e7c7      	b.n	800f280 <??recheck_conflicting_28>

0800f2f0 <??recheck_conflicting_20>:
 800f2f0:	6d29      	ldr	r1, [r5, #80]	; 0x50
 800f2f2:	1840      	adds	r0, r0, r1
 800f2f4:	6528      	str	r0, [r5, #80]	; 0x50
 800f2f6:	e768      	b.n	800f1ca <??recheck_conflicting_19>

0800f2f8 <??recheck_conflicting_33>:
 800f2f8:	4608      	mov	r0, r1

0800f2fa <??recheck_conflicting_30>:
 800f2fa:	b130      	cbz	r0, 800f30a <??recheck_conflicting_31>
 800f2fc:	6f41      	ldr	r1, [r0, #116]	; 0x74
 800f2fe:	42a9      	cmp	r1, r5
 800f300:	d1fa      	bne.n	800f2f8 <??recheck_conflicting_33>
 800f302:	6f69      	ldr	r1, [r5, #116]	; 0x74
 800f304:	6741      	str	r1, [r0, #116]	; 0x74
 800f306:	2000      	movs	r0, #0
 800f308:	6768      	str	r0, [r5, #116]	; 0x74

0800f30a <??recheck_conflicting_31>:
 800f30a:	f104 0138 	add.w	r1, r4, #56	; 0x38
 800f30e:	9102      	str	r1, [sp, #8]
 800f310:	4608      	mov	r0, r1
 800f312:	7841      	ldrb	r1, [r0, #1]
 800f314:	1e4a      	subs	r2, r1, #1
 800f316:	7042      	strb	r2, [r0, #1]
 800f318:	e086      	b.n	800f428 <??recheck_conflicting_34>

0800f31a <??recheck_conflicting_29>:
 800f31a:	f104 0238 	add.w	r2, r4, #56	; 0x38
 800f31e:	f104 0008 	add.w	r0, r4, #8
 800f322:	7813      	ldrb	r3, [r2, #0]
 800f324:	e000      	b.n	800f328 <??recheck_conflicting_35>

0800f326 <??recheck_conflicting_36>:
 800f326:	1c49      	adds	r1, r1, #1

0800f328 <??recheck_conflicting_35>:
 800f328:	4299      	cmp	r1, r3
 800f32a:	da03      	bge.n	800f334 <??recheck_conflicting_37>
 800f32c:	f850 cb04 	ldr.w	ip, [r0], #4
 800f330:	45ac      	cmp	ip, r5
 800f332:	d1f8      	bne.n	800f326 <??recheck_conflicting_36>

0800f334 <??recheck_conflicting_37>:
 800f334:	f104 0038 	add.w	r0, r4, #56	; 0x38
 800f338:	7802      	ldrb	r2, [r0, #0]
 800f33a:	4291      	cmp	r1, r2
 800f33c:	da11      	bge.n	800f362 <??recheck_conflicting_38>
 800f33e:	1c48      	adds	r0, r1, #1
 800f340:	4290      	cmp	r0, r2
 800f342:	d105      	bne.n	800f350 <??recheck_conflicting_39>
 800f344:	2200      	movs	r2, #0
 800f346:	f104 0308 	add.w	r3, r4, #8
 800f34a:	f843 2021 	str.w	r2, [r3, r1, lsl #2]
 800f34e:	e006      	b.n	800f35e <??recheck_conflicting_40>

0800f350 <??recheck_conflicting_39>:
 800f350:	eb04 0281 	add.w	r2, r4, r1, lsl #2
 800f354:	68d3      	ldr	r3, [r2, #12]
 800f356:	f104 0c08 	add.w	ip, r4, #8
 800f35a:	f84c 3021 	str.w	r3, [ip, r1, lsl #2]

0800f35e <??recheck_conflicting_40>:
 800f35e:	4601      	mov	r1, r0
 800f360:	e7e8      	b.n	800f334 <??recheck_conflicting_37>

0800f362 <??recheck_conflicting_38>:
 800f362:	4628      	mov	r0, r5
 800f364:	f000 fe97 	bl	8010096 <rem_from_evnts_list>
 800f368:	f104 0038 	add.w	r0, r4, #56	; 0x38
 800f36c:	7801      	ldrb	r1, [r0, #0]
 800f36e:	1e49      	subs	r1, r1, #1
 800f370:	b2ca      	uxtb	r2, r1
 800f372:	7001      	strb	r1, [r0, #0]
 800f374:	2a00      	cmp	r2, #0
 800f376:	bf04      	itt	eq
 800f378:	7840      	ldrbeq	r0, [r0, #1]
 800f37a:	2800      	cmpeq	r0, #0
 800f37c:	d118      	bne.n	800f3b0 <??recheck_conflicting_41>
 800f37e:	f104 0a08 	add.w	sl, r4, #8
 800f382:	f04f 080b 	mov.w	r8, #11

0800f386 <??recheck_conflicting_42>:
 800f386:	f8da 0000 	ldr.w	r0, [sl]
 800f38a:	b120      	cbz	r0, 800f396 <??recheck_conflicting_43>
 800f38c:	f7f3 f87f 	bl	800248e <evnt_schdlr_free_evnt>
 800f390:	2000      	movs	r0, #0
 800f392:	f8ca 0000 	str.w	r0, [sl]

0800f396 <??recheck_conflicting_43>:
 800f396:	f10a 0a04 	add.w	sl, sl, #4
 800f39a:	f1b8 0801 	subs.w	r8, r8, #1
 800f39e:	d1f2      	bne.n	800f386 <??recheck_conflicting_42>
 800f3a0:	223c      	movs	r2, #60	; 0x3c
 800f3a2:	2100      	movs	r1, #0
 800f3a4:	4620      	mov	r0, r4
 800f3a6:	f7ff fc20 	bl	800ebea <ble_memset>
 800f3aa:	2000      	movs	r0, #0
 800f3ac:	6360      	str	r0, [r4, #52]	; 0x34
 800f3ae:	e03b      	b.n	800f428 <??recheck_conflicting_34>

0800f3b0 <??recheck_conflicting_41>:
 800f3b0:	f64f 72ff 	movw	r2, #65535	; 0xffff
 800f3b4:	4590      	cmp	r8, r2
 800f3b6:	d102      	bne.n	800f3be <??recheck_conflicting_44>
 800f3b8:	b2c9      	uxtb	r1, r1
 800f3ba:	2901      	cmp	r1, #1
 800f3bc:	d102      	bne.n	800f3c4 <??recheck_conflicting_45>

0800f3be <??recheck_conflicting_44>:
 800f3be:	4650      	mov	r0, sl
 800f3c0:	f000 fe7d 	bl	80100be <update_radio_period_after_rmv_evnt>

0800f3c4 <??recheck_conflicting_45>:
 800f3c4:	f04f 0a00 	mov.w	sl, #0
 800f3c8:	f104 0e38 	add.w	lr, r4, #56	; 0x38
 800f3cc:	e021      	b.n	800f412 <??recheck_conflicting_46>

0800f3ce <??recheck_conflicting_47>:
 800f3ce:	e9dc 2324 	ldrd	r2, r3, [ip, #144]	; 0x90
 800f3d2:	2b00      	cmp	r3, #0
 800f3d4:	bf08      	it	eq
 800f3d6:	2a40      	cmpeq	r2, #64	; 0x40
 800f3d8:	d006      	beq.n	800f3e8 <??recheck_conflicting_48>
 800f3da:	2100      	movs	r1, #0
 800f3dc:	f04f 5080 	mov.w	r0, #268435456	; 0x10000000
 800f3e0:	428b      	cmp	r3, r1
 800f3e2:	bf08      	it	eq
 800f3e4:	4282      	cmpeq	r2, r0
 800f3e6:	d110      	bne.n	800f40a <??recheck_conflicting_49>

0800f3e8 <??recheck_conflicting_48>:
 800f3e8:	f8dc 0008 	ldr.w	r0, [ip, #8]
 800f3ec:	b168      	cbz	r0, 800f40a <??recheck_conflicting_49>
 800f3ee:	f8dc 1070 	ldr.w	r1, [ip, #112]	; 0x70
 800f3f2:	8108      	strh	r0, [r1, #8]
 800f3f4:	f8d8 0008 	ldr.w	r0, [r8, #8]
 800f3f8:	6881      	ldr	r1, [r0, #8]
 800f3fa:	eb01 0281 	add.w	r2, r1, r1, lsl #2
 800f3fe:	0092      	lsls	r2, r2, #2
 800f400:	6602      	str	r2, [r0, #96]	; 0x60
 800f402:	f8d8 1008 	ldr.w	r1, [r8, #8]
 800f406:	2000      	movs	r0, #0
 800f408:	6088      	str	r0, [r1, #8]

0800f40a <??recheck_conflicting_49>:
 800f40a:	f10a 0a01 	add.w	sl, sl, #1
 800f40e:	fa5f fa8a 	uxtb.w	sl, sl

0800f412 <??recheck_conflicting_46>:
 800f412:	f89e 0000 	ldrb.w	r0, [lr]
 800f416:	4582      	cmp	sl, r0
 800f418:	da06      	bge.n	800f428 <??recheck_conflicting_34>
 800f41a:	eb04 088a 	add.w	r8, r4, sl, lsl #2
 800f41e:	f8d8 c008 	ldr.w	ip, [r8, #8]
 800f422:	f1bc 0f00 	cmp.w	ip, #0
 800f426:	d1d2      	bne.n	800f3ce <??recheck_conflicting_47>

0800f428 <??recheck_conflicting_34>:
 800f428:	f1b9 0f01 	cmp.w	r9, #1
 800f42c:	d104      	bne.n	800f438 <??recheck_conflicting_50>
 800f42e:	f104 0038 	add.w	r0, r4, #56	; 0x38
 800f432:	7881      	ldrb	r1, [r0, #2]
 800f434:	1e4a      	subs	r2, r1, #1
 800f436:	7082      	strb	r2, [r0, #2]

0800f438 <??recheck_conflicting_50>:
 800f438:	6ae9      	ldr	r1, [r5, #44]	; 0x2c
 800f43a:	b109      	cbz	r1, 800f440 <??recheck_conflicting_51>
 800f43c:	4630      	mov	r0, r6
 800f43e:	4788      	blx	r1

0800f440 <??recheck_conflicting_51>:
 800f440:	4628      	mov	r0, r5
 800f442:	f7f3 f824 	bl	800248e <evnt_schdlr_free_evnt>
 800f446:	e6c0      	b.n	800f1ca <??recheck_conflicting_19>

0800f448 <??recheck_conflicting_16>:
 800f448:	2101      	movs	r1, #1
 800f44a:	4628      	mov	r0, r5
 800f44c:	f7f3 f984 	bl	8002758 <evnt_schdlr_update_slave_conn_timers>
 800f450:	4607      	mov	r7, r0
 800f452:	e6ba      	b.n	800f1ca <??recheck_conflicting_19>

0800f454 <??recheck_conflicting_15>:
 800f454:	6f28      	ldr	r0, [r5, #112]	; 0x70
 800f456:	f8b0 10da 	ldrh.w	r1, [r0, #218]	; 0xda
 800f45a:	1c49      	adds	r1, r1, #1
 800f45c:	f8a0 10da 	strh.w	r1, [r0, #218]	; 0xda
 800f460:	2101      	movs	r1, #1
 800f462:	4628      	mov	r0, r5
 800f464:	f7f3 fa5f 	bl	8002926 <evnt_schdlr_update_master_conn_timers>
 800f468:	e6af      	b.n	800f1ca <??recheck_conflicting_19>

0800f46a <??recheck_conflicting_14>:
 800f46a:	6f28      	ldr	r0, [r5, #112]	; 0x70
 800f46c:	2202      	movs	r2, #2
 800f46e:	8901      	ldrh	r1, [r0, #8]

0800f470 <??recheck_conflicting_52>:
 800f470:	f105 0050 	add.w	r0, r5, #80	; 0x50
 800f474:	f005 fa0c 	bl	8014890 <ble_time_add_uint>
 800f478:	e6a7      	b.n	800f1ca <??recheck_conflicting_19>

0800f47a <??recheck_conflicting_13>:
 800f47a:	6f28      	ldr	r0, [r5, #112]	; 0x70
 800f47c:	2202      	movs	r2, #2
 800f47e:	8901      	ldrh	r1, [r0, #8]
 800f480:	f105 0050 	add.w	r0, r5, #80	; 0x50
 800f484:	f005 fa04 	bl	8014890 <ble_time_add_uint>
 800f488:	f8b5 0084 	ldrh.w	r0, [r5, #132]	; 0x84
 800f48c:	1c40      	adds	r0, r0, #1
 800f48e:	f8a5 0084 	strh.w	r0, [r5, #132]	; 0x84
 800f492:	e69a      	b.n	800f1ca <??recheck_conflicting_19>

0800f494 <??recheck_conflicting_12>:
 800f494:	361c      	adds	r6, #28
 800f496:	7970      	ldrb	r0, [r6, #5]
 800f498:	2801      	cmp	r0, #1
 800f49a:	d00f      	beq.n	800f4bc <??recheck_conflicting_53>
 800f49c:	2101      	movs	r1, #1
 800f49e:	4668      	mov	r0, sp
 800f4a0:	f7fc fb83 	bl	800bbaa <llhwc_gen_rnd_num>
 800f4a4:	4607      	mov	r7, r0
 800f4a6:	1e40      	subs	r0, r0, #1
 800f4a8:	4180      	sbcs	r0, r0
 800f4aa:	0fc0      	lsrs	r0, r0, #31
 800f4ac:	f7f0 fe90 	bl	80001d0 <bsp_assert>
 800f4b0:	f89d 0000 	ldrb.w	r0, [sp]
 800f4b4:	f000 000f 	and.w	r0, r0, #15
 800f4b8:	f88d 0000 	strb.w	r0, [sp]

0800f4bc <??recheck_conflicting_53>:
 800f4bc:	6831      	ldr	r1, [r6, #0]
 800f4be:	f89d 0000 	ldrb.w	r0, [sp]
 800f4c2:	2202      	movs	r2, #2
 800f4c4:	1841      	adds	r1, r0, r1
 800f4c6:	e7d3      	b.n	800f470 <??recheck_conflicting_52>

0800f4c8 <??recheck_conflicting_1>:
 800f4c8:	b009      	add	sp, #36	; 0x24
 800f4ca:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0800f4ce <schedule_event>:
 800f4ce:	e92d 4ffe 	stmdb	sp!, {r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800f4d2:	2400      	movs	r4, #0
 800f4d4:	46a0      	mov	r8, r4
 800f4d6:	2800      	cmp	r0, #0
 800f4d8:	f000 810a 	beq.w	800f6f0 <??schedule_event_0>
 800f4dc:	f8df 2494 	ldr.w	r2, [pc, #1172]	; 800f974 <??DataTable16>
 800f4e0:	6815      	ldr	r5, [r2, #0]
 800f4e2:	4607      	mov	r7, r0
 800f4e4:	f88d 1001 	strb.w	r1, [sp, #1]
 800f4e8:	f64f 7bff 	movw	fp, #65535	; 0xffff
 800f4ec:	e001      	b.n	800f4f2 <??schedule_event_1>

0800f4ee <??schedule_event_2>:
 800f4ee:	462c      	mov	r4, r5
 800f4f0:	6f6d      	ldr	r5, [r5, #116]	; 0x74

0800f4f2 <??schedule_event_1>:
 800f4f2:	2d00      	cmp	r5, #0
 800f4f4:	f000 80f7 	beq.w	800f6e6 <??schedule_event_3>
 800f4f8:	2001      	movs	r0, #1
 800f4fa:	f7f0 fe69 	bl	80001d0 <bsp_assert>
 800f4fe:	2001      	movs	r0, #1
 800f500:	f7f0 fe66 	bl	80001d0 <bsp_assert>
 800f504:	f8d5 9060 	ldr.w	r9, [r5, #96]	; 0x60
 800f508:	6e3e      	ldr	r6, [r7, #96]	; 0x60
 800f50a:	f107 0150 	add.w	r1, r7, #80	; 0x50
 800f50e:	f105 0050 	add.w	r0, r5, #80	; 0x50
 800f512:	f005 f923 	bl	801475c <ble_time_comp>
 800f516:	2800      	cmp	r0, #0
 800f518:	d506      	bpl.n	800f528 <??schedule_event_4>
 800f51a:	6d29      	ldr	r1, [r5, #80]	; 0x50
 800f51c:	6d38      	ldr	r0, [r7, #80]	; 0x50
 800f51e:	fa1f f989 	uxth.w	r9, r9
 800f522:	4489      	add	r9, r1
 800f524:	4548      	cmp	r0, r9
 800f526:	d2e2      	bcs.n	800f4ee <??schedule_event_2>

0800f528 <??schedule_event_4>:
 800f528:	f107 0150 	add.w	r1, r7, #80	; 0x50
 800f52c:	f105 0050 	add.w	r0, r5, #80	; 0x50
 800f530:	f005 f914 	bl	801475c <ble_time_comp>
 800f534:	2800      	cmp	r0, #0
 800f536:	dd06      	ble.n	800f546 <??schedule_event_5>
 800f538:	6d39      	ldr	r1, [r7, #80]	; 0x50
 800f53a:	6d28      	ldr	r0, [r5, #80]	; 0x50
 800f53c:	b2b6      	uxth	r6, r6
 800f53e:	1876      	adds	r6, r6, r1
 800f540:	42b0      	cmp	r0, r6
 800f542:	f080 80b1 	bcs.w	800f6a8 <??schedule_event_6>

0800f546 <??schedule_event_5>:
 800f546:	f89d 0001 	ldrb.w	r0, [sp, #1]
 800f54a:	2801      	cmp	r0, #1
 800f54c:	f000 80b3 	beq.w	800f6b6 <??schedule_event_7>
 800f550:	e9d7 0124 	ldrd	r0, r1, [r7, #144]	; 0x90
 800f554:	2900      	cmp	r1, #0
 800f556:	bf08      	it	eq
 800f558:	2880      	cmpeq	r0, #128	; 0x80
 800f55a:	d006      	beq.n	800f56a <??schedule_event_8>
 800f55c:	e9d5 0124 	ldrd	r0, r1, [r5, #144]	; 0x90
 800f560:	2900      	cmp	r1, #0
 800f562:	bf08      	it	eq
 800f564:	2880      	cmpeq	r0, #128	; 0x80
 800f566:	f040 808d 	bne.w	800f684 <??schedule_event_9>

0800f56a <??schedule_event_8>:
 800f56a:	f8df 1c60 	ldr.w	r1, [pc, #3168]	; 80101cc <??DataTable21>
 800f56e:	7808      	ldrb	r0, [r1, #0]
 800f570:	f88d 8000 	strb.w	r8, [sp]
 800f574:	2800      	cmp	r0, #0
 800f576:	f040 8085 	bne.w	800f684 <??schedule_event_9>
 800f57a:	f8b7 0086 	ldrh.w	r0, [r7, #134]	; 0x86
 800f57e:	4558      	cmp	r0, fp
 800f580:	bf1c      	itt	ne
 800f582:	f8b5 2086 	ldrhne.w	r2, [r5, #134]	; 0x86
 800f586:	455a      	cmpne	r2, fp
 800f588:	d07c      	beq.n	800f684 <??schedule_event_9>
 800f58a:	f107 0990 	add.w	r9, r7, #144	; 0x90
 800f58e:	e9d9 0100 	ldrd	r0, r1, [r9]
 800f592:	2900      	cmp	r1, #0
 800f594:	bf08      	it	eq
 800f596:	2880      	cmpeq	r0, #128	; 0x80
 800f598:	bf19      	ittee	ne
 800f59a:	462e      	movne	r6, r5
 800f59c:	46ba      	movne	sl, r7
 800f59e:	463e      	moveq	r6, r7
 800f5a0:	46aa      	moveq	sl, r5
 800f5a2:	6f32      	ldr	r2, [r6, #112]	; 0x70
 800f5a4:	9201      	str	r2, [sp, #4]
 800f5a6:	e9da 0124 	ldrd	r0, r1, [sl, #144]	; 0x90
 800f5aa:	2900      	cmp	r1, #0
 800f5ac:	bf08      	it	eq
 800f5ae:	f5b0 3f00 	cmpeq.w	r0, #131072	; 0x20000
 800f5b2:	d017      	beq.n	800f5e4 <??schedule_event_10>
 800f5b4:	f106 0086 	add.w	r0, r6, #134	; 0x86
 800f5b8:	7d81      	ldrb	r1, [r0, #22]
 800f5ba:	1c49      	adds	r1, r1, #1
 800f5bc:	b2ca      	uxtb	r2, r1
 800f5be:	2a01      	cmp	r2, #1
 800f5c0:	bf08      	it	eq
 800f5c2:	f880 8017 	strbeq.w	r8, [r0, #23]
 800f5c6:	7581      	strb	r1, [r0, #22]
 800f5c8:	7dc0      	ldrb	r0, [r0, #23]
 800f5ca:	b2c9      	uxtb	r1, r1
 800f5cc:	1809      	adds	r1, r1, r0
 800f5ce:	2964      	cmp	r1, #100	; 0x64
 800f5d0:	db32      	blt.n	800f638 <??schedule_event_11>
 800f5d2:	f04f 0c64 	mov.w	ip, #100	; 0x64
 800f5d6:	fb0c f000 	mul.w	r0, ip, r0
 800f5da:	fb90 f0f1 	sdiv	r0, r0, r1
 800f5de:	b280      	uxth	r0, r0
 800f5e0:	2847      	cmp	r0, #71	; 0x47
 800f5e2:	da29      	bge.n	800f638 <??schedule_event_11>

0800f5e4 <??schedule_event_10>:
 800f5e4:	6e30      	ldr	r0, [r6, #96]	; 0x60
 800f5e6:	2280      	movs	r2, #128	; 0x80
 800f5e8:	2300      	movs	r3, #0
 800f5ea:	4669      	mov	r1, sp
 800f5ec:	3028      	adds	r0, #40	; 0x28
 800f5ee:	f000 fa21 	bl	800fa34 <get_slot_offset>
 800f5f2:	4601      	mov	r1, r0
 800f5f4:	f89d 0000 	ldrb.w	r0, [sp]
 800f5f8:	b9f0      	cbnz	r0, 800f638 <??schedule_event_11>
 800f5fa:	4559      	cmp	r1, fp
 800f5fc:	d01c      	beq.n	800f638 <??schedule_event_11>
 800f5fe:	f8b6 0086 	ldrh.w	r0, [r6, #134]	; 0x86
 800f602:	f1c1 0228 	rsb	r2, r1, #40	; 0x28
 800f606:	f8df cbc8 	ldr.w	ip, [pc, #3016]	; 80101d0 <??DataTable21_1>
 800f60a:	1882      	adds	r2, r0, r2
 800f60c:	1a08      	subs	r0, r1, r0
 800f60e:	fba0 c30c 	umull	ip, r3, r0, ip
 800f612:	f04f 0ed8 	mov.w	lr, #216	; 0xd8
 800f616:	0958      	lsrs	r0, r3, #5
 800f618:	fb0e 2210 	mls	r2, lr, r0, r2
 800f61c:	b2d2      	uxtb	r2, r2
 800f61e:	1851      	adds	r1, r2, r1
 800f620:	9a01      	ldr	r2, [sp, #4]
 800f622:	6751      	str	r1, [r2, #116]	; 0x74
 800f624:	f8df 1ba4 	ldr.w	r1, [pc, #2980]	; 80101cc <??DataTable21>
 800f628:	7808      	ldrb	r0, [r1, #0]
 800f62a:	b908      	cbnz	r0, 800f630 <??schedule_event_12>
 800f62c:	2201      	movs	r2, #1
 800f62e:	700a      	strb	r2, [r1, #0]

0800f630 <??schedule_event_12>:
 800f630:	9901      	ldr	r1, [sp, #4]
 800f632:	2003      	movs	r0, #3
 800f634:	f7f0 fe53 	bl	80002de <emngr_post_event>

0800f638 <??schedule_event_11>:
 800f638:	f1ba 0f00 	cmp.w	sl, #0
 800f63c:	d022      	beq.n	800f684 <??schedule_event_9>
 800f63e:	e9da 0124 	ldrd	r0, r1, [sl, #144]	; 0x90
 800f642:	2900      	cmp	r1, #0
 800f644:	bf08      	it	eq
 800f646:	f5b0 3f00 	cmpeq.w	r0, #131072	; 0x20000
 800f64a:	d01b      	beq.n	800f684 <??schedule_event_9>
 800f64c:	b1d6      	cbz	r6, 800f684 <??schedule_event_9>
 800f64e:	f106 0086 	add.w	r0, r6, #134	; 0x86
 800f652:	7dc1      	ldrb	r1, [r0, #23]
 800f654:	7d80      	ldrb	r0, [r0, #22]
 800f656:	1841      	adds	r1, r0, r1
 800f658:	2964      	cmp	r1, #100	; 0x64
 800f65a:	db13      	blt.n	800f684 <??schedule_event_9>
 800f65c:	e9d9 2300 	ldrd	r2, r3, [r9]
 800f660:	2b00      	cmp	r3, #0
 800f662:	bf02      	ittt	eq
 800f664:	2a80      	cmpeq	r2, #128	; 0x80
 800f666:	f889 800d 	strbeq.w	r8, [r9, #13]
 800f66a:	f889 800c 	strbeq.w	r8, [r9, #12]
 800f66e:	f105 0090 	add.w	r0, r5, #144	; 0x90
 800f672:	e9d0 2300 	ldrd	r2, r3, [r0]
 800f676:	2b00      	cmp	r3, #0
 800f678:	bf02      	ittt	eq
 800f67a:	2a80      	cmpeq	r2, #128	; 0x80
 800f67c:	f880 800d 	strbeq.w	r8, [r0, #13]
 800f680:	f880 800c 	strbeq.w	r8, [r0, #12]

0800f684 <??schedule_event_9>:
 800f684:	4628      	mov	r0, r5
 800f686:	f001 f903 	bl	8010890 <get_priority>
 800f68a:	4606      	mov	r6, r0
 800f68c:	4638      	mov	r0, r7
 800f68e:	f001 f8ff 	bl	8010890 <get_priority>
 800f692:	1a30      	subs	r0, r6, r0
 800f694:	d412      	bmi.n	800f6bc <??schedule_event_13>
 800f696:	d011      	beq.n	800f6bc <??schedule_event_13>
 800f698:	46a9      	mov	r9, r5
 800f69a:	6f6d      	ldr	r5, [r5, #116]	; 0x74
 800f69c:	4eb5      	ldr	r6, [pc, #724]	; (800f974 <??DataTable16>)
 800f69e:	2c00      	cmp	r4, #0
 800f6a0:	bf0c      	ite	eq
 800f6a2:	6035      	streq	r5, [r6, #0]
 800f6a4:	6765      	strne	r5, [r4, #116]	; 0x74
 800f6a6:	e00d      	b.n	800f6c4 <??schedule_event_14>

0800f6a8 <??schedule_event_6>:
 800f6a8:	2c00      	cmp	r4, #0
 800f6aa:	bf06      	itte	eq
 800f6ac:	48b1      	ldreq	r0, [pc, #708]	; (800f974 <??DataTable16>)
 800f6ae:	6007      	streq	r7, [r0, #0]
 800f6b0:	6767      	strne	r7, [r4, #116]	; 0x74
 800f6b2:	677d      	str	r5, [r7, #116]	; 0x74
 800f6b4:	e01c      	b.n	800f6f0 <??schedule_event_0>

0800f6b6 <??schedule_event_7>:
 800f6b6:	f04f 081f 	mov.w	r8, #31
 800f6ba:	e019      	b.n	800f6f0 <??schedule_event_0>

0800f6bc <??schedule_event_13>:
 800f6bc:	4638      	mov	r0, r7
 800f6be:	f7ff fcc1 	bl	800f044 <add_conflict_queue>
 800f6c2:	e015      	b.n	800f6f0 <??schedule_event_0>

0800f6c4 <??schedule_event_14>:
 800f6c4:	f8c9 8074 	str.w	r8, [r9, #116]	; 0x74
 800f6c8:	200d      	movs	r0, #13
 800f6ca:	f7f0 fdad 	bl	8000228 <bsp_debug_gpio_set>
 800f6ce:	2001      	movs	r0, #1
 800f6d0:	f889 009a 	strb.w	r0, [r9, #154]	; 0x9a
 800f6d4:	f896 103a 	ldrb.w	r1, [r6, #58]	; 0x3a
 800f6d8:	200d      	movs	r0, #13
 800f6da:	1c49      	adds	r1, r1, #1
 800f6dc:	f886 103a 	strb.w	r1, [r6, #58]	; 0x3a
 800f6e0:	f7f0 fda4 	bl	800022c <bsp_debug_gpio_clear>
 800f6e4:	e705      	b.n	800f4f2 <??schedule_event_1>

0800f6e6 <??schedule_event_3>:
 800f6e6:	2c00      	cmp	r4, #0
 800f6e8:	bf06      	itte	eq
 800f6ea:	48a2      	ldreq	r0, [pc, #648]	; (800f974 <??DataTable16>)
 800f6ec:	6007      	streq	r7, [r0, #0]
 800f6ee:	6767      	strne	r7, [r4, #116]	; 0x74

0800f6f0 <??schedule_event_0>:
 800f6f0:	f001 bbd2 	b.w	8010e98 <?Subroutine1>

0800f6f4 <calculate_max_pkts_to_send>:
 800f6f4:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800f6f8:	4604      	mov	r4, r0
 800f6fa:	b084      	sub	sp, #16
 800f6fc:	2000      	movs	r0, #0
 800f6fe:	9003      	str	r0, [sp, #12]
 800f700:	2700      	movs	r7, #0
 800f702:	4681      	mov	r9, r0
 800f704:	b104      	cbz	r4, 800f708 <??calculate_max_pkts_to_send_0>
 800f706:	2001      	movs	r0, #1

0800f708 <??calculate_max_pkts_to_send_0>:
 800f708:	f7f0 fd62 	bl	80001d0 <bsp_assert>
 800f70c:	4899      	ldr	r0, [pc, #612]	; (800f974 <??DataTable16>)
 800f70e:	f890 0038 	ldrb.w	r0, [r0, #56]	; 0x38
 800f712:	6f21      	ldr	r1, [r4, #112]	; 0x70
 800f714:	9102      	str	r1, [sp, #8]
 800f716:	2801      	cmp	r0, #1
 800f718:	d106      	bne.n	800f728 <??calculate_max_pkts_to_send_1>
 800f71a:	f8b1 8016 	ldrh.w	r8, [r1, #22]
 800f71e:	f240 40e2 	movw	r0, #1250	; 0x4e2
 800f722:	fb00 f808 	mul.w	r8, r0, r8
 800f726:	e011      	b.n	800f74c <??calculate_max_pkts_to_send_2>

0800f728 <??calculate_max_pkts_to_send_1>:
 800f728:	f8df 1c54 	ldr.w	r1, [pc, #3156]	; 8010380 <??DataTable24>
 800f72c:	f891 0039 	ldrb.w	r0, [r1, #57]	; 0x39
 800f730:	2800      	cmp	r0, #0
 800f732:	f040 8103 	bne.w	800f93c <??calculate_max_pkts_to_send_3>
 800f736:	6f60      	ldr	r0, [r4, #116]	; 0x74
 800f738:	2800      	cmp	r0, #0
 800f73a:	f000 80ff 	beq.w	800f93c <??calculate_max_pkts_to_send_3>
 800f73e:	6d01      	ldr	r1, [r0, #80]	; 0x50
 800f740:	6d20      	ldr	r0, [r4, #80]	; 0x50
 800f742:	1a08      	subs	r0, r1, r0
 800f744:	ebc0 1840 	rsb	r8, r0, r0, lsl #5
 800f748:	eb08 0890 	add.w	r8, r8, r0, lsr #2

0800f74c <??calculate_max_pkts_to_send_2>:
 800f74c:	f894 009e 	ldrb.w	r0, [r4, #158]	; 0x9e
 800f750:	b9a8      	cbnz	r0, 800f77e <??calculate_max_pkts_to_send_4>
 800f752:	f8df 54e4 	ldr.w	r5, [pc, #1252]	; 800fc38 <??DataTable18>
 800f756:	6828      	ldr	r0, [r5, #0]
 800f758:	3014      	adds	r0, #20
 800f75a:	ebc0 1140 	rsb	r1, r0, r0, lsl #5
 800f75e:	eb01 0190 	add.w	r1, r1, r0, lsr #2
 800f762:	4541      	cmp	r1, r8
 800f764:	4180      	sbcs	r0, r0
 800f766:	0fc0      	lsrs	r0, r0, #31
 800f768:	f7f0 fd32 	bl	80001d0 <bsp_assert>
 800f76c:	6829      	ldr	r1, [r5, #0]
 800f76e:	3114      	adds	r1, #20
 800f770:	ebc1 1041 	rsb	r0, r1, r1, lsl #5
 800f774:	eba8 0800 	sub.w	r8, r8, r0
 800f778:	eba8 0891 	sub.w	r8, r8, r1, lsr #2
 800f77c:	e008      	b.n	800f790 <??calculate_max_pkts_to_send_5>

0800f77e <??calculate_max_pkts_to_send_4>:
 800f77e:	f1b8 0fdb 	cmp.w	r8, #219	; 0xdb
 800f782:	4180      	sbcs	r0, r0
 800f784:	43c0      	mvns	r0, r0
 800f786:	0fc0      	lsrs	r0, r0, #31
 800f788:	f7f0 fd22 	bl	80001d0 <bsp_assert>
 800f78c:	f1a8 08da 	sub.w	r8, r8, #218	; 0xda

0800f790 <??calculate_max_pkts_to_send_5>:
 800f790:	9902      	ldr	r1, [sp, #8]
 800f792:	f240 2071 	movw	r0, #625	; 0x271
 800f796:	8bcd      	ldrh	r5, [r1, #30]
 800f798:	4345      	muls	r5, r0
 800f79a:	f101 00a8 	add.w	r0, r1, #168	; 0xa8
 800f79e:	f8b0 b006 	ldrh.w	fp, [r0, #6]
 800f7a2:	f8b0 a002 	ldrh.w	sl, [r0, #2]
 800f7a6:	8881      	ldrh	r1, [r0, #4]
 800f7a8:	8806      	ldrh	r6, [r0, #0]
 800f7aa:	9802      	ldr	r0, [sp, #8]
 800f7ac:	f500 7291 	add.w	r2, r0, #290	; 0x122
 800f7b0:	9201      	str	r2, [sp, #4]
 800f7b2:	7812      	ldrb	r2, [r2, #0]
 800f7b4:	9801      	ldr	r0, [sp, #4]
 800f7b6:	9200      	str	r2, [sp, #0]
 800f7b8:	7a82      	ldrb	r2, [r0, #10]
 800f7ba:	2a01      	cmp	r2, #1
 800f7bc:	d004      	beq.n	800f7c8 <??calculate_max_pkts_to_send_6>
 800f7be:	2a02      	cmp	r2, #2
 800f7c0:	d009      	beq.n	800f7d6 <??calculate_max_pkts_to_send_7>
 800f7c2:	2a04      	cmp	r2, #4
 800f7c4:	d00e      	beq.n	800f7e4 <??calculate_max_pkts_to_send_8>
 800f7c6:	e01f      	b.n	800f808 <??calculate_max_pkts_to_send_9>

0800f7c8 <??calculate_max_pkts_to_send_6>:
 800f7c8:	9800      	ldr	r0, [sp, #0]
 800f7ca:	b900      	cbnz	r0, 800f7ce <??calculate_max_pkts_to_send_10>
 800f7cc:	2720      	movs	r7, #32

0800f7ce <??calculate_max_pkts_to_send_10>:
 800f7ce:	310e      	adds	r1, #14
 800f7d0:	ebc7 07c1 	rsb	r7, r7, r1, lsl #3
 800f7d4:	e01b      	b.n	800f80e <??calculate_max_pkts_to_send_11>

0800f7d6 <??calculate_max_pkts_to_send_7>:
 800f7d6:	9800      	ldr	r0, [sp, #0]
 800f7d8:	b900      	cbnz	r0, 800f7dc <??calculate_max_pkts_to_send_12>
 800f7da:	2710      	movs	r7, #16

0800f7dc <??calculate_max_pkts_to_send_12>:
 800f7dc:	310f      	adds	r1, #15
 800f7de:	ebc7 0781 	rsb	r7, r7, r1, lsl #2
 800f7e2:	e014      	b.n	800f80e <??calculate_max_pkts_to_send_11>

0800f7e4 <??calculate_max_pkts_to_send_8>:
 800f7e4:	8982      	ldrh	r2, [r0, #12]
 800f7e6:	9800      	ldr	r0, [sp, #0]
 800f7e8:	2a01      	cmp	r2, #1
 800f7ea:	d105      	bne.n	800f7f8 <??calculate_max_pkts_to_send_13>
 800f7ec:	b900      	cbnz	r0, 800f7f0 <??calculate_max_pkts_to_send_14>
 800f7ee:	2740      	movs	r7, #64	; 0x40

0800f7f0 <??calculate_max_pkts_to_send_14>:
 800f7f0:	0108      	lsls	r0, r1, #4
 800f7f2:	f200 200e 	addw	r0, r0, #526	; 0x20e
 800f7f6:	e005      	b.n	800f804 <??calculate_max_pkts_to_send_15>

0800f7f8 <??calculate_max_pkts_to_send_13>:
 800f7f8:	b908      	cbnz	r0, 800f7fe <??calculate_max_pkts_to_send_16>
 800f7fa:	f44f 7780 	mov.w	r7, #256	; 0x100

0800f7fe <??calculate_max_pkts_to_send_16>:
 800f7fe:	0188      	lsls	r0, r1, #6
 800f800:	f500 7074 	add.w	r0, r0, #976	; 0x3d0

0800f804 <??calculate_max_pkts_to_send_15>:
 800f804:	1bc7      	subs	r7, r0, r7
 800f806:	e002      	b.n	800f80e <??calculate_max_pkts_to_send_11>

0800f808 <??calculate_max_pkts_to_send_9>:
 800f808:	2000      	movs	r0, #0
 800f80a:	f7f0 fce1 	bl	80001d0 <bsp_assert>

0800f80e <??calculate_max_pkts_to_send_11>:
 800f80e:	9801      	ldr	r0, [sp, #4]
 800f810:	7ac1      	ldrb	r1, [r0, #11]
 800f812:	2901      	cmp	r1, #1
 800f814:	d004      	beq.n	800f820 <??calculate_max_pkts_to_send_17>
 800f816:	2902      	cmp	r1, #2
 800f818:	d00a      	beq.n	800f830 <??calculate_max_pkts_to_send_18>
 800f81a:	2904      	cmp	r1, #4
 800f81c:	d010      	beq.n	800f840 <??calculate_max_pkts_to_send_19>
 800f81e:	e019      	b.n	800f854 <??calculate_max_pkts_to_send_20>

0800f820 <??calculate_max_pkts_to_send_17>:
 800f820:	9800      	ldr	r0, [sp, #0]
 800f822:	b908      	cbnz	r0, 800f828 <??calculate_max_pkts_to_send_21>
 800f824:	f04f 0920 	mov.w	r9, #32

0800f828 <??calculate_max_pkts_to_send_21>:
 800f828:	360e      	adds	r6, #14
 800f82a:	ebc9 09c6 	rsb	r9, r9, r6, lsl #3
 800f82e:	e014      	b.n	800f85a <??calculate_max_pkts_to_send_22>

0800f830 <??calculate_max_pkts_to_send_18>:
 800f830:	9800      	ldr	r0, [sp, #0]
 800f832:	b908      	cbnz	r0, 800f838 <??calculate_max_pkts_to_send_23>
 800f834:	f04f 0910 	mov.w	r9, #16

0800f838 <??calculate_max_pkts_to_send_23>:
 800f838:	360f      	adds	r6, #15
 800f83a:	ebc9 0986 	rsb	r9, r9, r6, lsl #2
 800f83e:	e00c      	b.n	800f85a <??calculate_max_pkts_to_send_22>

0800f840 <??calculate_max_pkts_to_send_19>:
 800f840:	9800      	ldr	r0, [sp, #0]
 800f842:	b908      	cbnz	r0, 800f848 <??calculate_max_pkts_to_send_24>
 800f844:	f44f 7980 	mov.w	r9, #256	; 0x100

0800f848 <??calculate_max_pkts_to_send_24>:
 800f848:	01b0      	lsls	r0, r6, #6
 800f84a:	f500 7074 	add.w	r0, r0, #976	; 0x3d0
 800f84e:	eba0 0909 	sub.w	r9, r0, r9
 800f852:	e002      	b.n	800f85a <??calculate_max_pkts_to_send_22>

0800f854 <??calculate_max_pkts_to_send_20>:
 800f854:	2000      	movs	r0, #0
 800f856:	f7f0 fcbb 	bl	80001d0 <bsp_assert>

0800f85a <??calculate_max_pkts_to_send_22>:
 800f85a:	b2b8      	uxth	r0, r7
 800f85c:	4583      	cmp	fp, r0
 800f85e:	bf88      	it	hi
 800f860:	4683      	movhi	fp, r0
 800f862:	fa1f f989 	uxth.w	r9, r9
 800f866:	45ca      	cmp	sl, r9
 800f868:	bf88      	it	hi
 800f86a:	46ca      	movhi	sl, r9
 800f86c:	44d3      	add	fp, sl
 800f86e:	f10b 0b96 	add.w	fp, fp, #150	; 0x96
 800f872:	45ab      	cmp	fp, r5
 800f874:	d202      	bcs.n	800f87c <??calculate_max_pkts_to_send_25>
 800f876:	4545      	cmp	r5, r8
 800f878:	bf98      	it	ls
 800f87a:	46a8      	movls	r8, r5

0800f87c <??calculate_max_pkts_to_send_25>:
 800f87c:	f104 000c 	add.w	r0, r4, #12
 800f880:	f7f3 f9c1 	bl	8002c06 <packet_get_frst_pkt>
 800f884:	9902      	ldr	r1, [sp, #8]
 800f886:	9402      	str	r4, [sp, #8]
 800f888:	2600      	movs	r6, #0
 800f88a:	f501 7291 	add.w	r2, r1, #290	; 0x122
 800f88e:	4605      	mov	r5, r0
 800f890:	9201      	str	r2, [sp, #4]
 800f892:	f8df 9bf0 	ldr.w	r9, [pc, #3056]	; 8010484 <??DataTable25>
 800f896:	f8dd b00c 	ldr.w	fp, [sp, #12]
 800f89a:	9c00      	ldr	r4, [sp, #0]

0800f89c <??calculate_max_pkts_to_send_26>:
 800f89c:	45c3      	cmp	fp, r8
 800f89e:	d24b      	bcs.n	800f938 <??calculate_max_pkts_to_send_27>
 800f8a0:	b905      	cbnz	r5, 800f8a4 <??calculate_max_pkts_to_send_28>
 800f8a2:	464d      	mov	r5, r9

0800f8a4 <??calculate_max_pkts_to_send_28>:
 800f8a4:	9801      	ldr	r0, [sp, #4]
 800f8a6:	7a81      	ldrb	r1, [r0, #10]
 800f8a8:	2901      	cmp	r1, #1
 800f8aa:	d004      	beq.n	800f8b6 <??calculate_max_pkts_to_send_29>
 800f8ac:	2902      	cmp	r1, #2
 800f8ae:	d00b      	beq.n	800f8c8 <??calculate_max_pkts_to_send_30>
 800f8b0:	2904      	cmp	r1, #4
 800f8b2:	d012      	beq.n	800f8da <??calculate_max_pkts_to_send_31>
 800f8b4:	e028      	b.n	800f908 <??calculate_max_pkts_to_send_32>

0800f8b6 <??calculate_max_pkts_to_send_29>:
 800f8b6:	2c00      	cmp	r4, #0
 800f8b8:	bf0c      	ite	eq
 800f8ba:	2720      	moveq	r7, #32
 800f8bc:	2700      	movne	r7, #0
 800f8be:	89a8      	ldrh	r0, [r5, #12]
 800f8c0:	300a      	adds	r0, #10
 800f8c2:	ebc7 07c0 	rsb	r7, r7, r0, lsl #3
 800f8c6:	e022      	b.n	800f90e <??calculate_max_pkts_to_send_33>

0800f8c8 <??calculate_max_pkts_to_send_30>:
 800f8c8:	2c00      	cmp	r4, #0
 800f8ca:	bf0c      	ite	eq
 800f8cc:	2710      	moveq	r7, #16
 800f8ce:	2700      	movne	r7, #0
 800f8d0:	89a8      	ldrh	r0, [r5, #12]
 800f8d2:	300b      	adds	r0, #11
 800f8d4:	ebc7 0780 	rsb	r7, r7, r0, lsl #2
 800f8d8:	e019      	b.n	800f90e <??calculate_max_pkts_to_send_33>

0800f8da <??calculate_max_pkts_to_send_31>:
 800f8da:	8981      	ldrh	r1, [r0, #12]
 800f8dc:	2901      	cmp	r1, #1
 800f8de:	d108      	bne.n	800f8f2 <??calculate_max_pkts_to_send_34>
 800f8e0:	2c00      	cmp	r4, #0
 800f8e2:	bf0c      	ite	eq
 800f8e4:	2740      	moveq	r7, #64	; 0x40
 800f8e6:	2700      	movne	r7, #0
 800f8e8:	89a8      	ldrh	r0, [r5, #12]
 800f8ea:	0100      	lsls	r0, r0, #4
 800f8ec:	f500 70e7 	add.w	r0, r0, #462	; 0x1ce
 800f8f0:	e008      	b.n	800f904 <??calculate_max_pkts_to_send_35>

0800f8f2 <??calculate_max_pkts_to_send_34>:
 800f8f2:	2c00      	cmp	r4, #0
 800f8f4:	bf0c      	ite	eq
 800f8f6:	f44f 7780 	moveq.w	r7, #256	; 0x100
 800f8fa:	2700      	movne	r7, #0
 800f8fc:	89a8      	ldrh	r0, [r5, #12]
 800f8fe:	0180      	lsls	r0, r0, #6
 800f900:	f500 7034 	add.w	r0, r0, #720	; 0x2d0

0800f904 <??calculate_max_pkts_to_send_35>:
 800f904:	1bc7      	subs	r7, r0, r7
 800f906:	e002      	b.n	800f90e <??calculate_max_pkts_to_send_33>

0800f908 <??calculate_max_pkts_to_send_32>:
 800f908:	2000      	movs	r0, #0
 800f90a:	f7f0 fc61 	bl	80001d0 <bsp_assert>

0800f90e <??calculate_max_pkts_to_send_33>:
 800f90e:	eb0a 000b 	add.w	r0, sl, fp
 800f912:	b2b9      	uxth	r1, r7
 800f914:	1808      	adds	r0, r1, r0
 800f916:	f500 7096 	add.w	r0, r0, #300	; 0x12c
 800f91a:	4580      	cmp	r8, r0
 800f91c:	d30c      	bcc.n	800f938 <??calculate_max_pkts_to_send_27>
 800f91e:	b2b8      	uxth	r0, r7
 800f920:	4450      	add	r0, sl
 800f922:	f500 7096 	add.w	r0, r0, #300	; 0x12c
 800f926:	4483      	add	fp, r0
 800f928:	45a9      	cmp	r9, r5
 800f92a:	bf06      	itte	eq
 800f92c:	9802      	ldreq	r0, [sp, #8]
 800f92e:	68c5      	ldreq	r5, [r0, #12]
 800f930:	686d      	ldrne	r5, [r5, #4]
 800f932:	1c76      	adds	r6, r6, #1
 800f934:	2e07      	cmp	r6, #7
 800f936:	d3b1      	bcc.n	800f89c <??calculate_max_pkts_to_send_26>

0800f938 <??calculate_max_pkts_to_send_27>:
 800f938:	0030      	movs	r0, r6
 800f93a:	d100      	bne.n	800f93e <??calculate_max_pkts_to_send_36>

0800f93c <??calculate_max_pkts_to_send_3>:
 800f93c:	2001      	movs	r0, #1

0800f93e <??calculate_max_pkts_to_send_36>:
 800f93e:	b2c0      	uxtb	r0, r0
 800f940:	e176      	b.n	800fc30 <?Subroutine2>

0800f942 <updt_conn_evnt_durn>:
 800f942:	0089      	lsls	r1, r1, #2
 800f944:	4abc      	ldr	r2, [pc, #752]	; (800fc38 <??DataTable18>)
 800f946:	f201 21d5 	addw	r1, r1, #725	; 0x2d5
 800f94a:	f8df ccb0 	ldr.w	ip, [pc, #3248]	; 80105fc <??DataTable26>
 800f94e:	6812      	ldr	r2, [r2, #0]
 800f950:	fba1 c30c 	umull	ip, r3, r1, ip
 800f954:	f890 109e 	ldrb.w	r1, [r0, #158]	; 0x9e
 800f958:	eb02 1393 	add.w	r3, r2, r3, lsr #6
 800f95c:	3314      	adds	r3, #20
 800f95e:	b111      	cbz	r1, 800f966 <??updt_conn_evnt_durn_0>
 800f960:	1a9a      	subs	r2, r3, r2
 800f962:	f1a2 030d 	sub.w	r3, r2, #13

0800f966 <??updt_conn_evnt_durn_0>:
 800f966:	6e01      	ldr	r1, [r0, #96]	; 0x60
 800f968:	428b      	cmp	r3, r1
 800f96a:	bf38      	it	cc
 800f96c:	460b      	movcc	r3, r1
 800f96e:	6603      	str	r3, [r0, #96]	; 0x60
 800f970:	4770      	bx	lr
	...

0800f974 <??DataTable16>:
 800f974:	1750 2000                                   P.. 

0800f978 <??DataTable16_1>:
 800f978:	1758 2000                                   X.. 

0800f97c <get_num_of_conflict>:
 800f97c:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800f980:	4601      	mov	r1, r0
 800f982:	8a4f      	ldrh	r7, [r1, #18]
 800f984:	f8b1 c000 	ldrh.w	ip, [r1]
 800f988:	2000      	movs	r0, #0
 800f98a:	f8df 8cac 	ldr.w	r8, [pc, #3244]	; 8010638 <??DataTable27>
 800f98e:	44bc      	add	ip, r7
 800f990:	fa1f fc8c 	uxth.w	ip, ip
 800f994:	7408      	strb	r0, [r1, #16]
 800f996:	4686      	mov	lr, r0
 800f998:	f108 0534 	add.w	r5, r8, #52	; 0x34
 800f99c:	f64f 79ff 	movw	r9, #65535	; 0xffff
 800f9a0:	e01e      	b.n	800f9e0 <??get_num_of_conflict_0>

0800f9a2 <??get_num_of_conflict_1>:
 800f9a2:	42b8      	cmp	r0, r7
 800f9a4:	bfb8      	it	lt
 800f9a6:	4297      	cmplt	r7, r2
 800f9a8:	db13      	blt.n	800f9d2 <??get_num_of_conflict_2>
 800f9aa:	4560      	cmp	r0, ip
 800f9ac:	bfb8      	it	lt
 800f9ae:	4594      	cmplt	ip, r2
 800f9b0:	db0f      	blt.n	800f9d2 <??get_num_of_conflict_2>
 800f9b2:	4287      	cmp	r7, r0
 800f9b4:	bfb8      	it	lt
 800f9b6:	4562      	cmplt	r2, ip
 800f9b8:	db0b      	blt.n	800f9d2 <??get_num_of_conflict_2>
 800f9ba:	4293      	cmp	r3, r2
 800f9bc:	bf3e      	ittt	cc
 800f9be:	fbb2 f6f3 	udivcc	r6, r2, r3
 800f9c2:	fb03 2216 	mlscc	r2, r3, r6, r2
 800f9c6:	4297      	cmpcc	r7, r2
 800f9c8:	d303      	bcc.n	800f9d2 <??get_num_of_conflict_2>
 800f9ca:	4563      	cmp	r3, ip
 800f9cc:	bf38      	it	cc
 800f9ce:	42a0      	cmpcc	r0, r4
 800f9d0:	d202      	bcs.n	800f9d8 <??get_num_of_conflict_3>

0800f9d2 <??get_num_of_conflict_2>:
 800f9d2:	7c08      	ldrb	r0, [r1, #16]
 800f9d4:	1c40      	adds	r0, r0, #1
 800f9d6:	7408      	strb	r0, [r1, #16]

0800f9d8 <??get_num_of_conflict_3>:
 800f9d8:	f10e 0e01 	add.w	lr, lr, #1
 800f9dc:	fa5f fe8e 	uxtb.w	lr, lr

0800f9e0 <??get_num_of_conflict_0>:
 800f9e0:	7928      	ldrb	r0, [r5, #4]
 800f9e2:	4586      	cmp	lr, r0
 800f9e4:	da20      	bge.n	800fa28 <??get_num_of_conflict_4>
 800f9e6:	eb08 028e 	add.w	r2, r8, lr, lsl #2
 800f9ea:	6890      	ldr	r0, [r2, #8]
 800f9ec:	e9d1 2302 	ldrd	r2, r3, [r1, #8]
 800f9f0:	f412 2f20 	tst.w	r2, #655360	; 0xa0000
 800f9f4:	d004      	beq.n	800fa00 <??get_num_of_conflict_5>
 800f9f6:	f100 0260 	add.w	r2, r0, #96	; 0x60
 800f9fa:	8cd3      	ldrh	r3, [r2, #38]	; 0x26
 800f9fc:	454b      	cmp	r3, r9
 800f9fe:	d0e8      	beq.n	800f9d2 <??get_num_of_conflict_2>

0800fa00 <??get_num_of_conflict_5>:
 800fa00:	b190      	cbz	r0, 800fa28 <??get_num_of_conflict_4>
 800fa02:	f100 0360 	add.w	r3, r0, #96	; 0x60
 800fa06:	8cda      	ldrh	r2, [r3, #38]	; 0x26
 800fa08:	454a      	cmp	r2, r9
 800fa0a:	d00d      	beq.n	800fa28 <??get_num_of_conflict_4>
 800fa0c:	682c      	ldr	r4, [r5, #0]
 800fa0e:	681b      	ldr	r3, [r3, #0]
 800fa10:	4610      	mov	r0, r2
 800fa12:	eb04 0684 	add.w	r6, r4, r4, lsl #2
 800fa16:	189a      	adds	r2, r3, r2
 800fa18:	00f3      	lsls	r3, r6, #3
 800fa1a:	fbbc f4f3 	udiv	r4, ip, r3
 800fa1e:	b292      	uxth	r2, r2
 800fa20:	fb03 c414 	mls	r4, r3, r4, ip
 800fa24:	4284      	cmp	r4, r0
 800fa26:	d2bc      	bcs.n	800f9a2 <??get_num_of_conflict_1>

0800fa28 <??get_num_of_conflict_4>:
 800fa28:	2000      	movs	r0, #0
 800fa2a:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
	...

0800fa30 <??DataTable17>:
 800fa30:	0030 0100                                   0...

0800fa34 <get_slot_offset>:
 800fa34:	e92d 4ff3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800fa38:	b083      	sub	sp, #12
 800fa3a:	f64f 71ff 	movw	r1, #65535	; 0xffff
 800fa3e:	f8ad 1000 	strh.w	r1, [sp]
 800fa42:	f8df 3bf4 	ldr.w	r3, [pc, #3060]	; 8010638 <??DataTable27>
 800fa46:	6b59      	ldr	r1, [r3, #52]	; 0x34
 800fa48:	2000      	movs	r0, #0
 800fa4a:	2600      	movs	r6, #0
 800fa4c:	4683      	mov	fp, r0
 800fa4e:	2900      	cmp	r1, #0
 800fa50:	bf1d      	ittte	ne
 800fa52:	461c      	movne	r4, r3
 800fa54:	f894 3038 	ldrbne.w	r3, [r4, #56]	; 0x38
 800fa58:	2b00      	cmpne	r3, #0
 800fa5a:	f8ad 0000 	strheq.w	r0, [sp]
 800fa5e:	f000 80dc 	beq.w	800fc1a <??get_slot_offset_0>
 800fa62:	eb01 0581 	add.w	r5, r1, r1, lsl #2
 800fa66:	00ed      	lsls	r5, r5, #3
 800fa68:	9501      	str	r5, [sp, #4]
 800fa6a:	9901      	ldr	r1, [sp, #4]
 800fa6c:	9d03      	ldr	r5, [sp, #12]
 800fa6e:	42a9      	cmp	r1, r5
 800fa70:	f0c0 80d3 	bcc.w	800fc1a <??get_slot_offset_0>
 800fa74:	4686      	mov	lr, r0
 800fa76:	f104 0908 	add.w	r9, r4, #8
 800fa7a:	f64f 75ff 	movw	r5, #65535	; 0xffff
 800fa7e:	e015      	b.n	800faac <??get_slot_offset_1>

0800fa80 <??get_slot_offset_2>:
 800fa80:	f8da 8000 	ldr.w	r8, [sl]
 800fa84:	f8dd a004 	ldr.w	sl, [sp, #4]
 800fa88:	44c4      	add	ip, r8
 800fa8a:	45e2      	cmp	sl, ip
 800fa8c:	d20a      	bcs.n	800faa4 <??get_slot_offset_3>
 800fa8e:	b140      	cbz	r0, 800faa2 <??get_slot_offset_4>
 800fa90:	f100 0860 	add.w	r8, r0, #96	; 0x60
 800fa94:	f8b8 a026 	ldrh.w	sl, [r8, #38]	; 0x26
 800fa98:	f8d8 8000 	ldr.w	r8, [r8]
 800fa9c:	44c2      	add	sl, r8
 800fa9e:	45e2      	cmp	sl, ip
 800faa0:	d200      	bcs.n	800faa4 <??get_slot_offset_3>

0800faa2 <??get_slot_offset_4>:
 800faa2:	4608      	mov	r0, r1

0800faa4 <??get_slot_offset_3>:
 800faa4:	f10e 0e01 	add.w	lr, lr, #1
 800faa8:	f109 0904 	add.w	r9, r9, #4

0800faac <??get_slot_offset_1>:
 800faac:	4698      	mov	r8, r3
 800faae:	45c6      	cmp	lr, r8
 800fab0:	da09      	bge.n	800fac6 <??get_slot_offset_5>
 800fab2:	f8d9 1000 	ldr.w	r1, [r9]
 800fab6:	2900      	cmp	r1, #0
 800fab8:	bf1e      	ittt	ne
 800faba:	f101 0a60 	addne.w	sl, r1, #96	; 0x60
 800fabe:	f8ba c026 	ldrhne.w	ip, [sl, #38]	; 0x26
 800fac2:	45ac      	cmpne	ip, r5
 800fac4:	d1dc      	bne.n	800fa80 <??get_slot_offset_2>

0800fac6 <??get_slot_offset_5>:
 800fac6:	9002      	str	r0, [sp, #8]
 800fac8:	2800      	cmp	r0, #0
 800faca:	d064      	beq.n	800fb96 <??get_slot_offset_6>
 800facc:	3060      	adds	r0, #96	; 0x60
 800face:	8cc1      	ldrh	r1, [r0, #38]	; 0x26
 800fad0:	6800      	ldr	r0, [r0, #0]
 800fad2:	6b63      	ldr	r3, [r4, #52]	; 0x34
 800fad4:	f06f 0a27 	mvn.w	sl, #39	; 0x27
 800fad8:	1840      	adds	r0, r0, r1
 800fada:	fb0a 0a03 	mla	sl, sl, r3, r0
 800fade:	4551      	cmp	r1, sl
 800fae0:	f0c0 809b 	bcc.w	800fc1a <??get_slot_offset_0>
 800fae4:	46b6      	mov	lr, r6
 800fae6:	f104 0908 	add.w	r9, r4, #8
 800faea:	2100      	movs	r1, #0
 800faec:	e019      	b.n	800fb22 <??get_slot_offset_7>

0800faee <??get_slot_offset_8>:
 800faee:	eb03 0783 	add.w	r7, r3, r3, lsl #2
 800faf2:	00ff      	lsls	r7, r7, #3
 800faf4:	6812      	ldr	r2, [r2, #0]
 800faf6:	9701      	str	r7, [sp, #4]
 800faf8:	f8dd c004 	ldr.w	ip, [sp, #4]
 800fafc:	1812      	adds	r2, r2, r0
 800fafe:	4594      	cmp	ip, r2
 800fb00:	d207      	bcs.n	800fb12 <??get_slot_offset_9>
 800fb02:	4667      	mov	r7, ip
 800fb04:	fbb2 f7f7 	udiv	r7, r2, r7
 800fb08:	435f      	muls	r7, r3
 800fb0a:	eb07 0c87 	add.w	ip, r7, r7, lsl #2
 800fb0e:	eba2 02cc 	sub.w	r2, r2, ip, lsl #3

0800fb12 <??get_slot_offset_9>:
 800fb12:	4550      	cmp	r0, sl
 800fb14:	d23b      	bcs.n	800fb8e <??get_slot_offset_10>
 800fb16:	4592      	cmp	sl, r2
 800fb18:	d311      	bcc.n	800fb3e <??get_slot_offset_11>
 800fb1a:	f10e 0e01 	add.w	lr, lr, #1
 800fb1e:	f109 0904 	add.w	r9, r9, #4

0800fb22 <??get_slot_offset_7>:
 800fb22:	45c6      	cmp	lr, r8
 800fb24:	da0c      	bge.n	800fb40 <??get_slot_offset_12>
 800fb26:	f8d9 0000 	ldr.w	r0, [r9]
 800fb2a:	2800      	cmp	r0, #0
 800fb2c:	bf1e      	ittt	ne
 800fb2e:	f100 0260 	addne.w	r2, r0, #96	; 0x60
 800fb32:	8cd0      	ldrhne	r0, [r2, #38]	; 0x26
 800fb34:	42a8      	cmpne	r0, r5
 800fb36:	d1da      	bne.n	800faee <??get_slot_offset_8>
 800fb38:	f1ae 0e01 	sub.w	lr, lr, #1
 800fb3c:	4652      	mov	r2, sl

0800fb3e <??get_slot_offset_11>:
 800fb3e:	4611      	mov	r1, r2

0800fb40 <??get_slot_offset_12>:
 800fb40:	9803      	ldr	r0, [sp, #12]
 800fb42:	4286      	cmp	r6, r0
 800fb44:	da69      	bge.n	800fc1a <??get_slot_offset_0>
 800fb46:	f10e 0e01 	add.w	lr, lr, #1
 800fb4a:	eb04 068e 	add.w	r6, r4, lr, lsl #2
 800fb4e:	68b0      	ldr	r0, [r6, #8]
 800fb50:	2800      	cmp	r0, #0
 800fb52:	bf1e      	ittt	ne
 800fb54:	f100 0260 	addne.w	r2, r0, #96	; 0x60
 800fb58:	8cd3      	ldrhne	r3, [r2, #38]	; 0x26
 800fb5a:	42ab      	cmpne	r3, r5
 800fb5c:	d122      	bne.n	800fba4 <??get_slot_offset_13>
 800fb5e:	68a2      	ldr	r2, [r4, #8]
 800fb60:	6874      	ldr	r4, [r6, #4]
 800fb62:	9d01      	ldr	r5, [sp, #4]
 800fb64:	f102 0360 	add.w	r3, r2, #96	; 0x60
 800fb68:	8cd8      	ldrh	r0, [r3, #38]	; 0x26
 800fb6a:	e9d4 2324 	ldrd	r2, r3, [r4, #144]	; 0x90
 800fb6e:	1945      	adds	r5, r0, r5
 800fb70:	1a6d      	subs	r5, r5, r1
 800fb72:	f8df 0ac8 	ldr.w	r0, [pc, #2760]	; 801063c <??DataTable27_1>
 800fb76:	4202      	tst	r2, r0
 800fb78:	d003      	beq.n	800fb82 <??get_slot_offset_14>
 800fb7a:	eb05 75d5 	add.w	r5, r5, r5, lsr #31
 800fb7e:	106d      	asrs	r5, r5, #1
 800fb80:	1869      	adds	r1, r5, r1

0800fb82 <??get_slot_offset_14>:
 800fb82:	45ab      	cmp	fp, r5
 800fb84:	da49      	bge.n	800fc1a <??get_slot_offset_0>
 800fb86:	46ab      	mov	fp, r5
 800fb88:	f8ad 1000 	strh.w	r1, [sp]
 800fb8c:	e045      	b.n	800fc1a <??get_slot_offset_0>

0800fb8e <??get_slot_offset_10>:
 800fb8e:	4652      	mov	r2, sl
 800fb90:	f1ae 0e01 	sub.w	lr, lr, #1
 800fb94:	e7d3      	b.n	800fb3e <??get_slot_offset_11>

0800fb96 <??get_slot_offset_6>:
 800fb96:	68a0      	ldr	r0, [r4, #8]
 800fb98:	46b6      	mov	lr, r6
 800fb9a:	3060      	adds	r0, #96	; 0x60
 800fb9c:	8cc2      	ldrh	r2, [r0, #38]	; 0x26
 800fb9e:	6800      	ldr	r0, [r0, #0]
 800fba0:	1882      	adds	r2, r0, r2
 800fba2:	e7cc      	b.n	800fb3e <??get_slot_offset_11>

0800fba4 <??get_slot_offset_13>:
 800fba4:	f8d4 a034 	ldr.w	sl, [r4, #52]	; 0x34
 800fba8:	f8d2 8000 	ldr.w	r8, [r2]
 800fbac:	eb0a 078a 	add.w	r7, sl, sl, lsl #2
 800fbb0:	00ff      	lsls	r7, r7, #3
 800fbb2:	9701      	str	r7, [sp, #4]
 800fbb4:	f8dd c004 	ldr.w	ip, [sp, #4]
 800fbb8:	4498      	add	r8, r3
 800fbba:	46c1      	mov	r9, r8
 800fbbc:	45cc      	cmp	ip, r9
 800fbbe:	d208      	bcs.n	800fbd2 <??get_slot_offset_15>
 800fbc0:	4667      	mov	r7, ip
 800fbc2:	fbb9 f7f7 	udiv	r7, r9, r7
 800fbc6:	fb07 fa0a 	mul.w	sl, r7, sl
 800fbca:	eb0a 0c8a 	add.w	ip, sl, sl, lsl #2
 800fbce:	eba9 09cc 	sub.w	r9, r9, ip, lsl #3

0800fbd2 <??get_slot_offset_15>:
 800fbd2:	1a5e      	subs	r6, r3, r1
 800fbd4:	2e00      	cmp	r6, #0
 800fbd6:	dc09      	bgt.n	800fbec <??get_slot_offset_16>
 800fbd8:	4589      	cmp	r9, r1
 800fbda:	bf38      	it	cc
 800fbdc:	4689      	movcc	r9, r1
 800fbde:	f8dd c008 	ldr.w	ip, [sp, #8]
 800fbe2:	2600      	movs	r6, #0
 800fbe4:	4649      	mov	r1, r9
 800fbe6:	4560      	cmp	r0, ip
 800fbe8:	d1aa      	bne.n	800fb40 <??get_slot_offset_12>
 800fbea:	e016      	b.n	800fc1a <??get_slot_offset_0>

0800fbec <??get_slot_offset_16>:
 800fbec:	e9d2 230c 	ldrd	r2, r3, [r2, #48]	; 0x30
 800fbf0:	f8df ca48 	ldr.w	ip, [pc, #2632]	; 801063c <??DataTable27_1>
 800fbf4:	ea12 0f0c 	tst.w	r2, ip
 800fbf8:	d003      	beq.n	800fc02 <??get_slot_offset_17>
 800fbfa:	eb06 76d6 	add.w	r6, r6, r6, lsr #31
 800fbfe:	1076      	asrs	r6, r6, #1
 800fc00:	1871      	adds	r1, r6, r1

0800fc02 <??get_slot_offset_17>:
 800fc02:	45b3      	cmp	fp, r6
 800fc04:	bfbc      	itt	lt
 800fc06:	46b3      	movlt	fp, r6
 800fc08:	f8ad 1000 	strhlt.w	r1, [sp]
 800fc0c:	9902      	ldr	r1, [sp, #8]
 800fc0e:	4288      	cmp	r0, r1
 800fc10:	d003      	beq.n	800fc1a <??get_slot_offset_0>
 800fc12:	9801      	ldr	r0, [sp, #4]
 800fc14:	4641      	mov	r1, r8
 800fc16:	4288      	cmp	r0, r1
 800fc18:	d292      	bcs.n	800fb40 <??get_slot_offset_12>

0800fc1a <??get_slot_offset_0>:
 800fc1a:	9904      	ldr	r1, [sp, #16]
 800fc1c:	b131      	cbz	r1, 800fc2c <??get_slot_offset_18>
 800fc1e:	7808      	ldrb	r0, [r1, #0]
 800fc20:	b920      	cbnz	r0, 800fc2c <??get_slot_offset_18>
 800fc22:	9803      	ldr	r0, [sp, #12]
 800fc24:	4583      	cmp	fp, r0
 800fc26:	bfbc      	itt	lt
 800fc28:	2201      	movlt	r2, #1
 800fc2a:	700a      	strblt	r2, [r1, #0]

0800fc2c <??get_slot_offset_18>:
 800fc2c:	f8bd 0000 	ldrh.w	r0, [sp]

0800fc30 <?Subroutine2>:
 800fc30:	b005      	add	sp, #20
 800fc32:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
	...

0800fc38 <??DataTable18>:
 800fc38:	0048 2000                                   H.. 

0800fc3c <??DataTable18_1>:
 800fc3c:	1788 2000                                   ... 

0800fc40 <??DataTable18_2>:
 800fc40:	18c0 2000                                   ... 

0800fc44 <add_evnt>:
 800fc44:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800fc48:	f8df 2c38 	ldr.w	r2, [pc, #3128]	; 8010884 <??DataTable29>
 800fc4c:	4606      	mov	r6, r0
 800fc4e:	6810      	ldr	r0, [r2, #0]
 800fc50:	f106 0750 	add.w	r7, r6, #80	; 0x50
 800fc54:	e9d7 8a10 	ldrd	r8, sl, [r7, #64]	; 0x40
 800fc58:	f04f 31ff 	mov.w	r1, #4294967295	; 0xffffffff
 800fc5c:	2400      	movs	r4, #0
 800fc5e:	f004 fc02 	bl	8014466 <os_rcrsv_mutex_wait>
 800fc62:	f04f 4280 	mov.w	r2, #1073741824	; 0x40000000
 800fc66:	45a2      	cmp	sl, r4
 800fc68:	bf08      	it	eq
 800fc6a:	4590      	cmpeq	r8, r2
 800fc6c:	d13a      	bne.n	800fce4 <??add_evnt_0>
 800fc6e:	e9d7 0110 	ldrd	r0, r1, [r7, #64]	; 0x40
 800fc72:	46a0      	mov	r8, r4
 800fc74:	42a1      	cmp	r1, r4
 800fc76:	bf06      	itte	eq
 800fc78:	4290      	cmpeq	r0, r2
 800fc7a:	2001      	moveq	r0, #1
 800fc7c:	2000      	movne	r0, #0
 800fc7e:	f7f0 faa7 	bl	80001d0 <bsp_assert>
 800fc82:	f106 0a46 	add.w	sl, r6, #70	; 0x46
 800fc86:	f89a 0000 	ldrb.w	r0, [sl]
 800fc8a:	2801      	cmp	r0, #1
 800fc8c:	d116      	bne.n	800fcbc <??add_evnt_1>
 800fc8e:	f106 023c 	add.w	r2, r6, #60	; 0x3c
 800fc92:	f106 0134 	add.w	r1, r6, #52	; 0x34
 800fc96:	f106 0038 	add.w	r0, r6, #56	; 0x38
 800fc9a:	f7fb ff9e 	bl	800bbda <llhwc_get_prdc_clbr_evnt_cfg_time>
 800fc9e:	2001      	movs	r0, #1
 800fca0:	f88a 0002 	strb.w	r0, [sl, #2]
 800fca4:	f8df 1be0 	ldr.w	r1, [pc, #3040]	; 8010888 <??DataTable29_1>
 800fca8:	7888      	ldrb	r0, [r1, #2]
 800fcaa:	b938      	cbnz	r0, 800fcbc <??add_evnt_1>
 800fcac:	f8df 16d0 	ldr.w	r1, [pc, #1744]	; 8010380 <??DataTable24>
 800fcb0:	f8df 3bd8 	ldr.w	r3, [pc, #3032]	; 801088c <??DataTable29_2>
 800fcb4:	6b4a      	ldr	r2, [r1, #52]	; 0x34
 800fcb6:	6818      	ldr	r0, [r3, #0]
 800fcb8:	1882      	adds	r2, r0, r2
 800fcba:	603a      	str	r2, [r7, #0]

0800fcbc <??add_evnt_1>:
 800fcbc:	f8df 1978 	ldr.w	r1, [pc, #2424]	; 8010638 <??DataTable27>
 800fcc0:	6848      	ldr	r0, [r1, #4]
 800fcc2:	e001      	b.n	800fcc8 <??add_evnt_2>

0800fcc4 <??add_evnt_3>:
 800fcc4:	4680      	mov	r8, r0
 800fcc6:	6f40      	ldr	r0, [r0, #116]	; 0x74

0800fcc8 <??add_evnt_2>:
 800fcc8:	2800      	cmp	r0, #0
 800fcca:	d1fb      	bne.n	800fcc4 <??add_evnt_3>
 800fccc:	f1b8 0f00 	cmp.w	r8, #0
 800fcd0:	bf0c      	ite	eq
 800fcd2:	604e      	streq	r6, [r1, #4]
 800fcd4:	f8c8 6074 	strne.w	r6, [r8, #116]	; 0x74
 800fcd8:	f101 0038 	add.w	r0, r1, #56	; 0x38
 800fcdc:	7841      	ldrb	r1, [r0, #1]
 800fcde:	1c49      	adds	r1, r1, #1
 800fce0:	7041      	strb	r1, [r0, #1]
 800fce2:	e1d0      	b.n	8010086 <??add_evnt_4>

0800fce4 <??add_evnt_0>:
 800fce4:	f8df 9950 	ldr.w	r9, [pc, #2384]	; 8010638 <??DataTable27>
 800fce8:	f899 0038 	ldrb.w	r0, [r9, #56]	; 0x38
 800fcec:	280a      	cmp	r0, #10
 800fcee:	f300 81c9 	bgt.w	8010084 <??add_evnt_5>
 800fcf2:	2e00      	cmp	r6, #0
 800fcf4:	bf14      	ite	ne
 800fcf6:	2001      	movne	r0, #1
 800fcf8:	2000      	moveq	r0, #0
 800fcfa:	f7f0 fa69 	bl	80001d0 <bsp_assert>
 800fcfe:	6a3d      	ldr	r5, [r7, #32]
 800fd00:	e9d7 0110 	ldrd	r0, r1, [r7, #64]	; 0x40
 800fd04:	f05f 020a 	movs.w	r2, #10
 800fd08:	f7f2 fba4 	bl	8002454 <__iar_llswitch>

0800fd0c <?<Jumptable for add_evnt>_0>:
 800fd0c:	0001 0000 0000 0000 02d7 0000 0002 0000     ................
 800fd1c:	0000 0000 02cb 0000 0004 0000 0000 0000     ................
 800fd2c:	02bf 0000 0008 0000 0000 0000 02b3 0000     ................
 800fd3c:	0010 0000 0000 0000 022d 0000 0020 0000     ........-... ...
 800fd4c:	0000 0000 0221 0000 0040 0000 0000 0000     ....!...@.......
 800fd5c:	01bd 0000 0080 0000 0000 0000 0109 0000     ................
 800fd6c:	0100 0000 0000 0000 0195 0000 0000 0000     ................
 800fd7c:	0001 0000 0005 0000 02d3 0000               ............

0800fd88 <??add_evnt_11>:
 800fd88:	2001      	movs	r0, #1
 800fd8a:	f7f0 fa21 	bl	80001d0 <bsp_assert>
 800fd8e:	f8df 55f4 	ldr.w	r5, [pc, #1524]	; 8010384 <??DataTable24_1>
 800fd92:	6971      	ldr	r1, [r6, #20]
 800fd94:	6828      	ldr	r0, [r5, #0]
 800fd96:	1841      	adds	r1, r0, r1
 800fd98:	3114      	adds	r1, #20
 800fd9a:	6139      	str	r1, [r7, #16]
 800fd9c:	68b0      	ldr	r0, [r6, #8]
 800fd9e:	bb28      	cbnz	r0, 800fdec <??add_evnt_13>
 800fda0:	f64f 70ff 	movw	r0, #65535	; 0xffff
 800fda4:	86f8      	strh	r0, [r7, #54]	; 0x36
 800fda6:	4668      	mov	r0, sp
 800fda8:	f7fc f977 	bl	800c09a <llhwc_slptmr_get>
 800fdac:	9900      	ldr	r1, [sp, #0]
 800fdae:	1d49      	adds	r1, r1, #5
 800fdb0:	6039      	str	r1, [r7, #0]
 800fdb2:	68f0      	ldr	r0, [r6, #12]
 800fdb4:	b118      	cbz	r0, 800fdbe <??add_evnt_14>
 800fdb6:	4288      	cmp	r0, r1
 800fdb8:	bf38      	it	cc
 800fdba:	4608      	movcc	r0, r1
 800fdbc:	6038      	str	r0, [r7, #0]

0800fdbe <??add_evnt_14>:
 800fdbe:	6930      	ldr	r0, [r6, #16]
 800fdc0:	b120      	cbz	r0, 800fdcc <??add_evnt_15>
 800fdc2:	6839      	ldr	r1, [r7, #0]
 800fdc4:	4288      	cmp	r0, r1
 800fdc6:	bf38      	it	cc
 800fdc8:	2003      	movcc	r0, #3
 800fdca:	d30b      	bcc.n	800fde4 <??add_evnt_16>

0800fdcc <??add_evnt_15>:
 800fdcc:	69f0      	ldr	r0, [r6, #28]
 800fdce:	2800      	cmp	r0, #0
 800fdd0:	d068      	beq.n	800fea4 <??add_evnt_17>
 800fdd2:	683b      	ldr	r3, [r7, #0]
 800fdd4:	6939      	ldr	r1, [r7, #16]
 800fdd6:	682a      	ldr	r2, [r5, #0]
 800fdd8:	18cb      	adds	r3, r1, r3
 800fdda:	1a9b      	subs	r3, r3, r2
 800fddc:	3b14      	subs	r3, #20
 800fdde:	4298      	cmp	r0, r3
 800fde0:	d260      	bcs.n	800fea4 <??add_evnt_17>
 800fde2:	2004      	movs	r0, #4

0800fde4 <??add_evnt_16>:
 800fde4:	f886 0021 	strb.w	r0, [r6, #33]	; 0x21
 800fde8:	241f      	movs	r4, #31
 800fdea:	e05b      	b.n	800fea4 <??add_evnt_17>

0800fdec <??add_evnt_13>:
 800fdec:	f8df 23e0 	ldr.w	r2, [pc, #992]	; 80101d0 <??DataTable21_1>
 800fdf0:	fba0 2102 	umull	r2, r1, r0, r2
 800fdf4:	0948      	lsrs	r0, r1, #5
 800fdf6:	f7ff f851 	bl	800ee9c <get_intrv_slot_period>
 800fdfa:	8738      	strh	r0, [r7, #56]	; 0x38
 800fdfc:	b980      	cbnz	r0, 800fe20 <??add_evnt_18>
 800fdfe:	f64f 71ff 	movw	r1, #65535	; 0xffff
 800fe02:	86f9      	strh	r1, [r7, #54]	; 0x36
 800fe04:	4668      	mov	r0, sp
 800fe06:	f7fc f948 	bl	800c09a <llhwc_slptmr_get>
 800fe0a:	9900      	ldr	r1, [sp, #0]
 800fe0c:	1d49      	adds	r1, r1, #5
 800fe0e:	6039      	str	r1, [r7, #0]
 800fe10:	68f0      	ldr	r0, [r6, #12]
 800fe12:	2800      	cmp	r0, #0
 800fe14:	d046      	beq.n	800fea4 <??add_evnt_17>
 800fe16:	4288      	cmp	r0, r1
 800fe18:	bf38      	it	cc
 800fe1a:	4608      	movcc	r0, r1
 800fe1c:	6038      	str	r0, [r7, #0]
 800fe1e:	e041      	b.n	800fea4 <??add_evnt_17>

0800fe20 <??add_evnt_18>:
 800fe20:	e9d7 2310 	ldrd	r2, r3, [r7, #64]	; 0x40
 800fe24:	6938      	ldr	r0, [r7, #16]
 800fe26:	2100      	movs	r1, #0
 800fe28:	f7ff fe04 	bl	800fa34 <get_slot_offset>
 800fe2c:	86f8      	strh	r0, [r7, #54]	; 0x36
 800fe2e:	4668      	mov	r0, sp
 800fe30:	f7fc f933 	bl	800c09a <llhwc_slptmr_get>
 800fe34:	f8d9 0034 	ldr.w	r0, [r9, #52]	; 0x34
 800fe38:	9a00      	ldr	r2, [sp, #0]
 800fe3a:	eb00 0180 	add.w	r1, r0, r0, lsl #2
 800fe3e:	00c9      	lsls	r1, r1, #3
 800fe40:	fbb2 f2f1 	udiv	r2, r2, r1
 800fe44:	8ef8      	ldrh	r0, [r7, #54]	; 0x36
 800fe46:	fb01 0202 	mla	r2, r1, r2, r0
 800fe4a:	603a      	str	r2, [r7, #0]
 800fe4c:	9b00      	ldr	r3, [sp, #0]
 800fe4e:	1d5b      	adds	r3, r3, #5
 800fe50:	429a      	cmp	r2, r3
 800fe52:	bf38      	it	cc
 800fe54:	188a      	addcc	r2, r1, r2
 800fe56:	603a      	str	r2, [r7, #0]
 800fe58:	68f0      	ldr	r0, [r6, #12]
 800fe5a:	b318      	cbz	r0, 800fea4 <??add_evnt_17>
 800fe5c:	4282      	cmp	r2, r0
 800fe5e:	d221      	bcs.n	800fea4 <??add_evnt_17>
 800fe60:	1a80      	subs	r0, r0, r2
 800fe62:	1808      	adds	r0, r1, r0
 800fe64:	1e40      	subs	r0, r0, #1
 800fe66:	fbb0 f0f1 	udiv	r0, r0, r1
 800fe6a:	b280      	uxth	r0, r0
 800fe6c:	fb01 2100 	mla	r1, r1, r0, r2
 800fe70:	6039      	str	r1, [r7, #0]
 800fe72:	e017      	b.n	800fea4 <??add_evnt_17>

0800fe74 <??add_evnt_9>:
 800fe74:	f105 0138 	add.w	r1, r5, #56	; 0x38
 800fe78:	4638      	mov	r0, r7
 800fe7a:	f004 fcb3 	bl	80147e4 <ble_time_set>
 800fe7e:	2100      	movs	r1, #0
 800fe80:	4630      	mov	r0, r6
 800fe82:	f7f2 fdc2 	bl	8002a0a <evnt_schdlr_calc_conn_duration>
 800fe86:	f8df 24fc 	ldr.w	r2, [pc, #1276]	; 8010384 <??DataTable24_1>
 800fe8a:	6811      	ldr	r1, [r2, #0]
 800fe8c:	1808      	adds	r0, r1, r0
 800fe8e:	3014      	adds	r0, #20
 800fe90:	6138      	str	r0, [r7, #16]
 800fe92:	8ae8      	ldrh	r0, [r5, #22]
 800fe94:	f7ff f802 	bl	800ee9c <get_intrv_slot_period>
 800fe98:	0001      	movs	r1, r0
 800fe9a:	d129      	bne.n	800fef0 <??add_evnt_19>
 800fe9c:	f64f 71ff 	movw	r1, #65535	; 0xffff

0800fea0 <??add_evnt_20>:
 800fea0:	86f9      	strh	r1, [r7, #54]	; 0x36
 800fea2:	8738      	strh	r0, [r7, #56]	; 0x38

0800fea4 <??add_evnt_17>:
 800fea4:	2c00      	cmp	r4, #0
 800fea6:	f040 80d9 	bne.w	801005c <??add_evnt_21>
 800feaa:	f8df 5c8c 	ldr.w	r5, [pc, #3212]	; 8010b38 <??DataTable32>
 800feae:	7828      	ldrb	r0, [r5, #0]
 800feb0:	2100      	movs	r1, #0
 800feb2:	1c40      	adds	r0, r0, #1
 800feb4:	7028      	strb	r0, [r5, #0]
 800feb6:	4630      	mov	r0, r6
 800feb8:	f7ff f8aa 	bl	800f010 <add_ordered>
 800febc:	e9d7 0110 	ldrd	r0, r1, [r7, #64]	; 0x40
 800fec0:	2900      	cmp	r1, #0
 800fec2:	bf08      	it	eq
 800fec4:	f5b0 2f80 	cmpeq.w	r0, #262144	; 0x40000
 800fec8:	d003      	beq.n	800fed2 <??add_evnt_22>
 800feca:	2100      	movs	r1, #0
 800fecc:	4630      	mov	r0, r6
 800fece:	f7ff fafe 	bl	800f4ce <schedule_event>

0800fed2 <??add_evnt_22>:
 800fed2:	78a8      	ldrb	r0, [r5, #2]
 800fed4:	b108      	cbz	r0, 800feda <??add_evnt_23>
 800fed6:	f7ff f8c9 	bl	800f06c <recheck_conflicting>

0800feda <??add_evnt_23>:
 800feda:	2000      	movs	r0, #0
 800fedc:	2101      	movs	r1, #1
 800fede:	458a      	cmp	sl, r1
 800fee0:	bf08      	it	eq
 800fee2:	4580      	cmpeq	r8, r0
 800fee4:	f040 80cf 	bne.w	8010086 <??add_evnt_4>
 800fee8:	f109 0138 	add.w	r1, r9, #56	; 0x38
 800feec:	780b      	ldrb	r3, [r1, #0]
 800feee:	e0c6      	b.n	801007e <??add_evnt_24>

0800fef0 <??add_evnt_19>:
 800fef0:	f8d9 2034 	ldr.w	r2, [r9, #52]	; 0x34
 800fef4:	6839      	ldr	r1, [r7, #0]
 800fef6:	eb02 0382 	add.w	r3, r2, r2, lsl #2
 800fefa:	00db      	lsls	r3, r3, #3
 800fefc:	fbb1 f3f3 	udiv	r3, r1, r3
 800ff00:	435a      	muls	r2, r3
 800ff02:	eb02 0c82 	add.w	ip, r2, r2, lsl #2
 800ff06:	eba1 01cc 	sub.w	r1, r1, ip, lsl #3
 800ff0a:	e7c9      	b.n	800fea0 <??add_evnt_20>

0800ff0c <??add_evnt_10>:
 800ff0c:	4630      	mov	r0, r6
 800ff0e:	f7f2 fb3f 	bl	8002590 <evnt_schdlr_set_slave_conn_timers>
 800ff12:	4604      	mov	r4, r0
 800ff14:	f64f 70ff 	movw	r0, #65535	; 0xffff
 800ff18:	86f8      	strh	r0, [r7, #54]	; 0x36
 800ff1a:	e7c3      	b.n	800fea4 <??add_evnt_17>

0800ff1c <??add_evnt_8>:
 800ff1c:	f8df 0464 	ldr.w	r0, [pc, #1124]	; 8010384 <??DataTable24_1>
 800ff20:	6803      	ldr	r3, [r0, #0]
 800ff22:	f8df e2ac 	ldr.w	lr, [pc, #684]	; 80101d0 <??DataTable21_1>
 800ff26:	f105 0108 	add.w	r1, r5, #8
 800ff2a:	fba3 ec0e 	umull	lr, ip, r3, lr
 800ff2e:	880a      	ldrh	r2, [r1, #0]
 800ff30:	8848      	ldrh	r0, [r1, #2]
 800ff32:	ea4f 3c0c 	mov.w	ip, ip, lsl #12
 800ff36:	ea4f 4c1c 	mov.w	ip, ip, lsr #16
 800ff3a:	eba2 0e00 	sub.w	lr, r2, r0
 800ff3e:	45f4      	cmp	ip, lr
 800ff40:	db07      	blt.n	800ff52 <??add_evnt_25>
 800ff42:	f103 0c14 	add.w	ip, r3, #20
 800ff46:	4da2      	ldr	r5, [pc, #648]	; (80101d0 <??DataTable21_1>)
 800ff48:	fbac 5e05 	umull	r5, lr, ip, r5
 800ff4c:	eba2 121e 	sub.w	r2, r2, lr, lsr #4
 800ff50:	804a      	strh	r2, [r1, #2]

0800ff52 <??add_evnt_25>:
 800ff52:	8848      	ldrh	r0, [r1, #2]
 800ff54:	f64f 75ff 	movw	r5, #65535	; 0xffff
 800ff58:	eb00 0180 	add.w	r1, r0, r0, lsl #2
 800ff5c:	eb03 0381 	add.w	r3, r3, r1, lsl #2
 800ff60:	3314      	adds	r3, #20
 800ff62:	613b      	str	r3, [r7, #16]
 800ff64:	86fd      	strh	r5, [r7, #54]	; 0x36
 800ff66:	873c      	strh	r4, [r7, #56]	; 0x38

0800ff68 <??add_evnt_26>:
 800ff68:	4630      	mov	r0, r6
 800ff6a:	f7ff f804 	bl	800ef76 <set_evnt_start_time>
 800ff6e:	81f5      	strh	r5, [r6, #14]
 800ff70:	86bc      	strh	r4, [r7, #52]	; 0x34
 800ff72:	e797      	b.n	800fea4 <??add_evnt_17>

0800ff74 <??add_evnt_7>:
 800ff74:	f105 0b08 	add.w	fp, r5, #8
 800ff78:	f105 010a 	add.w	r1, r5, #10
 800ff7c:	4658      	mov	r0, fp
 800ff7e:	f7fe ffb5 	bl	800eeec <get_scan_intrv_slot_period>
 800ff82:	f8df 1400 	ldr.w	r1, [pc, #1024]	; 8010384 <??DataTable24_1>
 800ff86:	f8df e248 	ldr.w	lr, [pc, #584]	; 80101d0 <??DataTable21_1>
 800ff8a:	8738      	strh	r0, [r7, #56]	; 0x38
 800ff8c:	680a      	ldr	r2, [r1, #0]
 800ff8e:	f8bb 3000 	ldrh.w	r3, [fp]
 800ff92:	8968      	ldrh	r0, [r5, #10]
 800ff94:	fba2 ec0e 	umull	lr, ip, r2, lr
 800ff98:	ea4f 3c0c 	mov.w	ip, ip, lsl #12
 800ff9c:	ea4f 4c1c 	mov.w	ip, ip, lsr #16
 800ffa0:	eba3 0e00 	sub.w	lr, r3, r0
 800ffa4:	45f4      	cmp	ip, lr
 800ffa6:	db07      	blt.n	800ffb8 <??add_evnt_27>
 800ffa8:	3214      	adds	r2, #20
 800ffaa:	f8df e224 	ldr.w	lr, [pc, #548]	; 80101d0 <??DataTable21_1>
 800ffae:	fba2 ec0e 	umull	lr, ip, r2, lr
 800ffb2:	eba3 131c 	sub.w	r3, r3, ip, lsr #4
 800ffb6:	816b      	strh	r3, [r5, #10]

0800ffb8 <??add_evnt_27>:
 800ffb8:	8968      	ldrh	r0, [r5, #10]
 800ffba:	f64f 75ff 	movw	r5, #65535	; 0xffff
 800ffbe:	eb00 0280 	add.w	r2, r0, r0, lsl #2
 800ffc2:	0092      	lsls	r2, r2, #2
 800ffc4:	613a      	str	r2, [r7, #16]
 800ffc6:	f8d7 c010 	ldr.w	ip, [r7, #16]
 800ffca:	6808      	ldr	r0, [r1, #0]
 800ffcc:	4484      	add	ip, r0
 800ffce:	8f38      	ldrh	r0, [r7, #56]	; 0x38
 800ffd0:	f10c 0c14 	add.w	ip, ip, #20
 800ffd4:	f8c7 c010 	str.w	ip, [r7, #16]
 800ffd8:	b908      	cbnz	r0, 800ffde <??add_evnt_28>
 800ffda:	4628      	mov	r0, r5
 800ffdc:	e005      	b.n	800ffea <??add_evnt_29>

0800ffde <??add_evnt_28>:
 800ffde:	e9d7 2310 	ldrd	r2, r3, [r7, #64]	; 0x40
 800ffe2:	2100      	movs	r1, #0
 800ffe4:	4660      	mov	r0, ip
 800ffe6:	f7ff fd25 	bl	800fa34 <get_slot_offset>

0800ffea <??add_evnt_29>:
 800ffea:	86f8      	strh	r0, [r7, #54]	; 0x36
 800ffec:	e7bc      	b.n	800ff68 <??add_evnt_26>

0800ffee <??add_evnt_6>:
 800ffee:	2100      	movs	r1, #0
 800fff0:	4630      	mov	r0, r6
 800fff2:	f7f2 fd8d 	bl	8002b10 <evnt_schdlr_calc_prim_adv_durn_on_air>
 800fff6:	6138      	str	r0, [r7, #16]
 800fff8:	0080      	lsls	r0, r0, #2
 800fffa:	307d      	adds	r0, #125	; 0x7d
 800fffc:	f8df 25fc 	ldr.w	r2, [pc, #1532]	; 80105fc <??DataTable26>
 8010000:	f8df b380 	ldr.w	fp, [pc, #896]	; 8010384 <??DataTable24_1>
 8010004:	fba0 2102 	umull	r2, r1, r0, r2
 8010008:	f8db 0000 	ldr.w	r0, [fp]
 801000c:	eb00 1091 	add.w	r0, r0, r1, lsr #6
 8010010:	f64f 71ff 	movw	r1, #65535	; 0xffff
 8010014:	86f9      	strh	r1, [r7, #54]	; 0x36
 8010016:	3014      	adds	r0, #20
 8010018:	6138      	str	r0, [r7, #16]
 801001a:	4630      	mov	r0, r6
 801001c:	f7fe ffab 	bl	800ef76 <set_evnt_start_time>
 8010020:	f7f0 fafd 	bl	800061e <evnt_schdlr_get_prdc_clbr_evnt_hndl>
 8010024:	0005      	movs	r5, r0
 8010026:	f43f af3d 	beq.w	800fea4 <??add_evnt_17>
 801002a:	6d29      	ldr	r1, [r5, #80]	; 0x50
 801002c:	683a      	ldr	r2, [r7, #0]
 801002e:	f8db 0000 	ldr.w	r0, [fp]
 8010032:	f501 517a 	add.w	r1, r1, #16000	; 0x3e80
 8010036:	1a12      	subs	r2, r2, r0
 8010038:	4291      	cmp	r1, r2
 801003a:	f4bf af33 	bcs.w	800fea4 <??add_evnt_17>
 801003e:	f7fb fdce 	bl	800bbde <llhwc_get_num_of_prdc_clbr_chnls>
 8010042:	4601      	mov	r1, r0
 8010044:	6b6b      	ldr	r3, [r5, #52]	; 0x34
 8010046:	6ba8      	ldr	r0, [r5, #56]	; 0x38
 8010048:	2201      	movs	r2, #1
 801004a:	fb01 0103 	mla	r1, r1, r3, r0
 801004e:	6beb      	ldr	r3, [r5, #60]	; 0x3c
 8010050:	4638      	mov	r0, r7
 8010052:	1859      	adds	r1, r3, r1
 8010054:	f004 fc1c 	bl	8014890 <ble_time_add_uint>
 8010058:	e724      	b.n	800fea4 <??add_evnt_17>

0801005a <??add_evnt_12>:
 801005a:	241f      	movs	r4, #31

0801005c <??add_evnt_21>:
 801005c:	2000      	movs	r0, #0
 801005e:	2101      	movs	r1, #1
 8010060:	458a      	cmp	sl, r1
 8010062:	bf08      	it	eq
 8010064:	4580      	cmpeq	r8, r0
 8010066:	d10e      	bne.n	8010086 <??add_evnt_4>
 8010068:	4630      	mov	r0, r6
 801006a:	f7f2 fa10 	bl	800248e <evnt_schdlr_free_evnt>
 801006e:	e00a      	b.n	8010086 <??add_evnt_4>

08010070 <??add_evnt_30>:
 8010070:	f8d9 2008 	ldr.w	r2, [r9, #8]
 8010074:	42b2      	cmp	r2, r6
 8010076:	d006      	beq.n	8010086 <??add_evnt_4>
 8010078:	1c40      	adds	r0, r0, #1
 801007a:	f109 0904 	add.w	r9, r9, #4

0801007e <??add_evnt_24>:
 801007e:	b2c2      	uxtb	r2, r0
 8010080:	429a      	cmp	r2, r3
 8010082:	d3f5      	bcc.n	8010070 <??add_evnt_30>

08010084 <??add_evnt_5>:
 8010084:	241f      	movs	r4, #31

08010086 <??add_evnt_4>:
 8010086:	f8df 07fc 	ldr.w	r0, [pc, #2044]	; 8010884 <??DataTable29>
 801008a:	6800      	ldr	r0, [r0, #0]
 801008c:	f004 f9f1 	bl	8014472 <os_rcrsv_mutex_release>
 8010090:	4620      	mov	r0, r4
 8010092:	e8bd 8ff2 	ldmia.w	sp!, {r1, r4, r5, r6, r7, r8, r9, sl, fp, pc}

08010096 <rem_from_evnts_list>:
 8010096:	f8df 25a0 	ldr.w	r2, [pc, #1440]	; 8010638 <??DataTable27>
 801009a:	6811      	ldr	r1, [r2, #0]
 801009c:	4281      	cmp	r1, r0
 801009e:	d105      	bne.n	80100ac <??rem_from_evnts_list_0>
 80100a0:	6f49      	ldr	r1, [r1, #116]	; 0x74
 80100a2:	6011      	str	r1, [r2, #0]
 80100a4:	2200      	movs	r2, #0
 80100a6:	6742      	str	r2, [r0, #116]	; 0x74
 80100a8:	4770      	bx	lr

080100aa <??rem_from_evnts_list_1>:
 80100aa:	4611      	mov	r1, r2

080100ac <??rem_from_evnts_list_0>:
 80100ac:	b131      	cbz	r1, 80100bc <??rem_from_evnts_list_2>
 80100ae:	6f4a      	ldr	r2, [r1, #116]	; 0x74
 80100b0:	4282      	cmp	r2, r0
 80100b2:	d1fa      	bne.n	80100aa <??rem_from_evnts_list_1>
 80100b4:	6f42      	ldr	r2, [r0, #116]	; 0x74
 80100b6:	674a      	str	r2, [r1, #116]	; 0x74
 80100b8:	2100      	movs	r1, #0
 80100ba:	6741      	str	r1, [r0, #116]	; 0x74

080100bc <??rem_from_evnts_list_2>:
 80100bc:	4770      	bx	lr

080100be <update_radio_period_after_rmv_evnt>:
 80100be:	4601      	mov	r1, r0
 80100c0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80100c2:	f8df 4574 	ldr.w	r4, [pc, #1396]	; 8010638 <??DataTable27>
 80100c6:	f894 0038 	ldrb.w	r0, [r4, #56]	; 0x38
 80100ca:	f64f 72ff 	movw	r2, #65535	; 0xffff
 80100ce:	2500      	movs	r5, #0
 80100d0:	4613      	mov	r3, r2
 80100d2:	b908      	cbnz	r0, 80100d8 <??update_radio_period_after_rmv_evnt_0>
 80100d4:	6360      	str	r0, [r4, #52]	; 0x34
 80100d6:	bdf1      	pop	{r0, r4, r5, r6, r7, pc}

080100d8 <??update_radio_period_after_rmv_evnt_0>:
 80100d8:	2801      	cmp	r0, #1
 80100da:	d137      	bne.n	801014c <??update_radio_period_after_rmv_evnt_1>
 80100dc:	68a0      	ldr	r0, [r4, #8]
 80100de:	6365      	str	r5, [r4, #52]	; 0x34
 80100e0:	e9d0 2324 	ldrd	r2, r3, [r0, #144]	; 0x90
 80100e4:	2b00      	cmp	r3, #0
 80100e6:	bf08      	it	eq
 80100e8:	2a80      	cmpeq	r2, #128	; 0x80
 80100ea:	d104      	bne.n	80100f6 <??update_radio_period_after_rmv_evnt_2>
 80100ec:	6ec1      	ldr	r1, [r0, #108]	; 0x6c
 80100ee:	8ac8      	ldrh	r0, [r1, #22]
 80100f0:	f7fe fed4 	bl	800ee9c <get_intrv_slot_period>
 80100f4:	e00d      	b.n	8010112 <??update_radio_period_after_rmv_evnt_3>

080100f6 <??update_radio_period_after_rmv_evnt_2>:
 80100f6:	2b00      	cmp	r3, #0
 80100f8:	bf08      	it	eq
 80100fa:	2a20      	cmpeq	r2, #32
 80100fc:	d003      	beq.n	8010106 <??update_radio_period_after_rmv_evnt_4>
 80100fe:	2b00      	cmp	r3, #0
 8010100:	bf08      	it	eq
 8010102:	2a10      	cmpeq	r2, #16
 8010104:	d161      	bne.n	80101ca <??update_radio_period_after_rmv_evnt_5>

08010106 <??update_radio_period_after_rmv_evnt_4>:
 8010106:	6f00      	ldr	r0, [r0, #112]	; 0x70
 8010108:	f100 010a 	add.w	r1, r0, #10
 801010c:	3008      	adds	r0, #8
 801010e:	f7fe feed 	bl	800eeec <get_scan_intrv_slot_period>

08010112 <??update_radio_period_after_rmv_evnt_3>:
 8010112:	68a1      	ldr	r1, [r4, #8]
 8010114:	f8a1 0088 	strh.w	r0, [r1, #136]	; 0x88
 8010118:	6b60      	ldr	r0, [r4, #52]	; 0x34
 801011a:	2800      	cmp	r0, #0
 801011c:	d055      	beq.n	80101ca <??update_radio_period_after_rmv_evnt_5>
 801011e:	68a1      	ldr	r1, [r4, #8]
 8010120:	eb00 0380 	add.w	r3, r0, r0, lsl #2
 8010124:	00db      	lsls	r3, r3, #3
 8010126:	f851 2f50 	ldr.w	r2, [r1, #80]!
 801012a:	fbb2 f3f3 	udiv	r3, r2, r3
 801012e:	4358      	muls	r0, r3
 8010130:	eb00 0480 	add.w	r4, r0, r0, lsl #2
 8010134:	eba2 02c4 	sub.w	r2, r2, r4, lsl #3
 8010138:	86ca      	strh	r2, [r1, #54]	; 0x36
 801013a:	bdf1      	pop	{r0, r4, r5, r6, r7, pc}

0801013c <??update_radio_period_after_rmv_evnt_6>:
 801013c:	8840      	ldrh	r0, [r0, #2]
 801013e:	4281      	cmp	r1, r0
 8010140:	d243      	bcs.n	80101ca <??update_radio_period_after_rmv_evnt_5>
 8010142:	4298      	cmp	r0, r3
 8010144:	da01      	bge.n	801014a <??update_radio_period_after_rmv_evnt_7>
 8010146:	b100      	cbz	r0, 801014a <??update_radio_period_after_rmv_evnt_7>
 8010148:	4603      	mov	r3, r0

0801014a <??update_radio_period_after_rmv_evnt_7>:
 801014a:	1c6d      	adds	r5, r5, #1

0801014c <??update_radio_period_after_rmv_evnt_1>:
 801014c:	eb04 0085 	add.w	r0, r4, r5, lsl #2
 8010150:	6880      	ldr	r0, [r0, #8]
 8010152:	2800      	cmp	r0, #0
 8010154:	bf1c      	itt	ne
 8010156:	f830 6f86 	ldrhne.w	r6, [r0, #134]!
 801015a:	4296      	cmpne	r6, r2
 801015c:	d1ee      	bne.n	801013c <??update_radio_period_after_rmv_evnt_6>
 801015e:	4293      	cmp	r3, r2
 8010160:	d033      	beq.n	80101ca <??update_radio_period_after_rmv_evnt_5>
 8010162:	f104 0108 	add.w	r1, r4, #8
 8010166:	e006      	b.n	8010176 <??update_radio_period_after_rmv_evnt_8>

08010168 <??update_radio_period_after_rmv_evnt_9>:
 8010168:	8840      	ldrh	r0, [r0, #2]
 801016a:	fb90 f5f3 	sdiv	r5, r0, r3
 801016e:	fb03 0015 	mls	r0, r3, r5, r0
 8010172:	bb50      	cbnz	r0, 80101ca <??update_radio_period_after_rmv_evnt_5>
 8010174:	1d09      	adds	r1, r1, #4

08010176 <??update_radio_period_after_rmv_evnt_8>:
 8010176:	6808      	ldr	r0, [r1, #0]
 8010178:	2800      	cmp	r0, #0
 801017a:	bf1c      	itt	ne
 801017c:	f830 5f86 	ldrhne.w	r5, [r0, #134]!
 8010180:	4295      	cmpne	r5, r2
 8010182:	d1f1      	bne.n	8010168 <??update_radio_period_after_rmv_evnt_9>
 8010184:	6b60      	ldr	r0, [r4, #52]	; 0x34
 8010186:	f104 0108 	add.w	r1, r4, #8
 801018a:	4358      	muls	r0, r3
 801018c:	6360      	str	r0, [r4, #52]	; 0x34
 801018e:	e017      	b.n	80101c0 <??update_radio_period_after_rmv_evnt_10>

08010190 <??update_radio_period_after_rmv_evnt_11>:
 8010190:	f8b0 0086 	ldrh.w	r0, [r0, #134]	; 0x86
 8010194:	4290      	cmp	r0, r2
 8010196:	d018      	beq.n	80101ca <??update_radio_period_after_rmv_evnt_5>
 8010198:	f851 0b04 	ldr.w	r0, [r1], #4
 801019c:	3050      	adds	r0, #80	; 0x50
 801019e:	8f05      	ldrh	r5, [r0, #56]	; 0x38
 80101a0:	fb95 f5f3 	sdiv	r5, r5, r3
 80101a4:	8705      	strh	r5, [r0, #56]	; 0x38
 80101a6:	6b66      	ldr	r6, [r4, #52]	; 0x34
 80101a8:	6805      	ldr	r5, [r0, #0]
 80101aa:	eb06 0786 	add.w	r7, r6, r6, lsl #2
 80101ae:	00ff      	lsls	r7, r7, #3
 80101b0:	fbb5 f7f7 	udiv	r7, r5, r7
 80101b4:	437e      	muls	r6, r7
 80101b6:	eb06 0c86 	add.w	ip, r6, r6, lsl #2
 80101ba:	eba5 05cc 	sub.w	r5, r5, ip, lsl #3
 80101be:	86c5      	strh	r5, [r0, #54]	; 0x36

080101c0 <??update_radio_period_after_rmv_evnt_10>:
 80101c0:	6808      	ldr	r0, [r1, #0]
 80101c2:	2800      	cmp	r0, #0
 80101c4:	d1e4      	bne.n	8010190 <??update_radio_period_after_rmv_evnt_11>
 80101c6:	f7fe be19 	b.w	800edfc <?Subroutine0>

080101ca <??update_radio_period_after_rmv_evnt_5>:
 80101ca:	bdf1      	pop	{r0, r4, r5, r6, r7, pc}

080101cc <??DataTable21>:
 80101cc:	174c 2000                                   L.. 

080101d0 <??DataTable21_1>:
 80101d0:	cccd cccc                                   ....

080101d4 <rmv_evnt>:
 80101d4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80101d6:	4684      	mov	ip, r0
 80101d8:	e9dc 2324 	ldrd	r2, r3, [ip, #144]	; 0x90
 80101dc:	f10c 0e74 	add.w	lr, ip, #116	; 0x74
 80101e0:	f8df 4454 	ldr.w	r4, [pc, #1108]	; 8010638 <??DataTable27>
 80101e4:	2100      	movs	r1, #0
 80101e6:	f8be 6014 	ldrh.w	r6, [lr, #20]
 80101ea:	f8be 7012 	ldrh.w	r7, [lr, #18]
 80101ee:	f104 0538 	add.w	r5, r4, #56	; 0x38
 80101f2:	f04f 4080 	mov.w	r0, #1073741824	; 0x40000000
 80101f6:	428b      	cmp	r3, r1
 80101f8:	bf08      	it	eq
 80101fa:	4282      	cmpeq	r2, r0
 80101fc:	d114      	bne.n	8010228 <??rmv_evnt_0>
 80101fe:	6860      	ldr	r0, [r4, #4]
 8010200:	4560      	cmp	r0, ip
 8010202:	d103      	bne.n	801020c <??rmv_evnt_1>
 8010204:	6f40      	ldr	r0, [r0, #116]	; 0x74
 8010206:	6060      	str	r0, [r4, #4]
 8010208:	e00a      	b.n	8010220 <??rmv_evnt_2>

0801020a <??rmv_evnt_3>:
 801020a:	4608      	mov	r0, r1

0801020c <??rmv_evnt_1>:
 801020c:	b140      	cbz	r0, 8010220 <??rmv_evnt_2>
 801020e:	6f41      	ldr	r1, [r0, #116]	; 0x74
 8010210:	4561      	cmp	r1, ip
 8010212:	d1fa      	bne.n	801020a <??rmv_evnt_3>
 8010214:	f8de 1000 	ldr.w	r1, [lr]
 8010218:	6741      	str	r1, [r0, #116]	; 0x74
 801021a:	2000      	movs	r0, #0
 801021c:	f8ce 0000 	str.w	r0, [lr]

08010220 <??rmv_evnt_2>:
 8010220:	7869      	ldrb	r1, [r5, #1]
 8010222:	1e48      	subs	r0, r1, #1
 8010224:	7068      	strb	r0, [r5, #1]
 8010226:	e075      	b.n	8010314 <??rmv_evnt_4>

08010228 <??rmv_evnt_0>:
 8010228:	2000      	movs	r0, #0
 801022a:	f104 0108 	add.w	r1, r4, #8
 801022e:	782a      	ldrb	r2, [r5, #0]
 8010230:	e000      	b.n	8010234 <??rmv_evnt_5>

08010232 <??rmv_evnt_6>:
 8010232:	1c40      	adds	r0, r0, #1

08010234 <??rmv_evnt_5>:
 8010234:	4290      	cmp	r0, r2
 8010236:	da03      	bge.n	8010240 <??rmv_evnt_7>
 8010238:	f851 3b04 	ldr.w	r3, [r1], #4
 801023c:	4563      	cmp	r3, ip
 801023e:	d1f8      	bne.n	8010232 <??rmv_evnt_6>

08010240 <??rmv_evnt_7>:
 8010240:	7829      	ldrb	r1, [r5, #0]
 8010242:	4288      	cmp	r0, r1
 8010244:	da11      	bge.n	801026a <??rmv_evnt_8>
 8010246:	1c42      	adds	r2, r0, #1
 8010248:	428a      	cmp	r2, r1
 801024a:	d105      	bne.n	8010258 <??rmv_evnt_9>
 801024c:	2100      	movs	r1, #0
 801024e:	f104 0308 	add.w	r3, r4, #8
 8010252:	f843 1020 	str.w	r1, [r3, r0, lsl #2]
 8010256:	e006      	b.n	8010266 <??rmv_evnt_10>

08010258 <??rmv_evnt_9>:
 8010258:	eb04 0180 	add.w	r1, r4, r0, lsl #2
 801025c:	68cb      	ldr	r3, [r1, #12]
 801025e:	f104 0e08 	add.w	lr, r4, #8
 8010262:	f84e 3020 	str.w	r3, [lr, r0, lsl #2]

08010266 <??rmv_evnt_10>:
 8010266:	4610      	mov	r0, r2
 8010268:	e7ea      	b.n	8010240 <??rmv_evnt_7>

0801026a <??rmv_evnt_8>:
 801026a:	4660      	mov	r0, ip
 801026c:	f7ff ff13 	bl	8010096 <rem_from_evnts_list>
 8010270:	7828      	ldrb	r0, [r5, #0]
 8010272:	1e41      	subs	r1, r0, #1
 8010274:	b2ca      	uxtb	r2, r1
 8010276:	7029      	strb	r1, [r5, #0]
 8010278:	2a00      	cmp	r2, #0
 801027a:	bf04      	itt	eq
 801027c:	7868      	ldrbeq	r0, [r5, #1]
 801027e:	2800      	cmpeq	r0, #0
 8010280:	d113      	bne.n	80102aa <??rmv_evnt_11>
 8010282:	f104 0608 	add.w	r6, r4, #8
 8010286:	250b      	movs	r5, #11

08010288 <??rmv_evnt_12>:
 8010288:	6830      	ldr	r0, [r6, #0]
 801028a:	b118      	cbz	r0, 8010294 <??rmv_evnt_13>
 801028c:	f7f2 f8ff 	bl	800248e <evnt_schdlr_free_evnt>
 8010290:	2000      	movs	r0, #0
 8010292:	6030      	str	r0, [r6, #0]

08010294 <??rmv_evnt_13>:
 8010294:	1d36      	adds	r6, r6, #4
 8010296:	1e6d      	subs	r5, r5, #1
 8010298:	d1f6      	bne.n	8010288 <??rmv_evnt_12>
 801029a:	223c      	movs	r2, #60	; 0x3c
 801029c:	2100      	movs	r1, #0
 801029e:	4620      	mov	r0, r4
 80102a0:	f7fe fca3 	bl	800ebea <ble_memset>
 80102a4:	2000      	movs	r0, #0
 80102a6:	6360      	str	r0, [r4, #52]	; 0x34
 80102a8:	e034      	b.n	8010314 <??rmv_evnt_4>

080102aa <??rmv_evnt_11>:
 80102aa:	f64f 72ff 	movw	r2, #65535	; 0xffff
 80102ae:	4297      	cmp	r7, r2
 80102b0:	d102      	bne.n	80102b8 <??rmv_evnt_14>
 80102b2:	b2c9      	uxtb	r1, r1
 80102b4:	2901      	cmp	r1, #1
 80102b6:	d102      	bne.n	80102be <??rmv_evnt_15>

080102b8 <??rmv_evnt_14>:
 80102b8:	4630      	mov	r0, r6
 80102ba:	f7ff ff00 	bl	80100be <update_radio_period_after_rmv_evnt>

080102be <??rmv_evnt_15>:
 80102be:	f04f 0e00 	mov.w	lr, #0
 80102c2:	2300      	movs	r3, #0
 80102c4:	e01d      	b.n	8010302 <??rmv_evnt_16>

080102c6 <??rmv_evnt_17>:
 80102c6:	e9d1 6724 	ldrd	r6, r7, [r1, #144]	; 0x90
 80102ca:	2f00      	cmp	r7, #0
 80102cc:	bf08      	it	eq
 80102ce:	2e40      	cmpeq	r6, #64	; 0x40
 80102d0:	d005      	beq.n	80102de <??rmv_evnt_18>
 80102d2:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 80102d6:	429f      	cmp	r7, r3
 80102d8:	bf08      	it	eq
 80102da:	4296      	cmpeq	r6, r2
 80102dc:	d10d      	bne.n	80102fa <??rmv_evnt_19>

080102de <??rmv_evnt_18>:
 80102de:	6888      	ldr	r0, [r1, #8]
 80102e0:	b158      	cbz	r0, 80102fa <??rmv_evnt_19>
 80102e2:	6f09      	ldr	r1, [r1, #112]	; 0x70
 80102e4:	8108      	strh	r0, [r1, #8]
 80102e6:	f8dc 0008 	ldr.w	r0, [ip, #8]
 80102ea:	6881      	ldr	r1, [r0, #8]
 80102ec:	eb01 0281 	add.w	r2, r1, r1, lsl #2
 80102f0:	0092      	lsls	r2, r2, #2
 80102f2:	6602      	str	r2, [r0, #96]	; 0x60
 80102f4:	f8dc 1008 	ldr.w	r1, [ip, #8]
 80102f8:	608b      	str	r3, [r1, #8]

080102fa <??rmv_evnt_19>:
 80102fa:	f10e 0e01 	add.w	lr, lr, #1
 80102fe:	fa5f fe8e 	uxtb.w	lr, lr

08010302 <??rmv_evnt_16>:
 8010302:	7828      	ldrb	r0, [r5, #0]
 8010304:	4586      	cmp	lr, r0
 8010306:	da05      	bge.n	8010314 <??rmv_evnt_4>
 8010308:	eb04 0c8e 	add.w	ip, r4, lr, lsl #2
 801030c:	f8dc 1008 	ldr.w	r1, [ip, #8]
 8010310:	2900      	cmp	r1, #0
 8010312:	d1d8      	bne.n	80102c6 <??rmv_evnt_17>

08010314 <??rmv_evnt_4>:
 8010314:	2000      	movs	r0, #0
 8010316:	bdf2      	pop	{r1, r4, r5, r6, r7, pc}

08010318 <get_nxt_evnt>:
 8010318:	48c7      	ldr	r0, [pc, #796]	; (8010638 <??DataTable27>)
 801031a:	6800      	ldr	r0, [r0, #0]
 801031c:	4770      	bx	lr

0801031e <get_nxt_when_idle_evnt>:
 801031e:	e92d 41fc 	stmdb	sp!, {r2, r3, r4, r5, r6, r7, r8, lr}
 8010322:	2500      	movs	r5, #0
 8010324:	2700      	movs	r7, #0
 8010326:	f8df 8310 	ldr.w	r8, [pc, #784]	; 8010638 <??DataTable27>
 801032a:	f8d8 4004 	ldr.w	r4, [r8, #4]
 801032e:	2801      	cmp	r0, #1
 8010330:	d021      	beq.n	8010376 <??get_nxt_when_idle_evnt_0>
 8010332:	4668      	mov	r0, sp
 8010334:	f7fb feb1 	bl	800c09a <llhwc_slptmr_get>
 8010338:	f8df 654c 	ldr.w	r6, [pc, #1356]	; 8010888 <??DataTable29_1>
 801033c:	e005      	b.n	801034a <??get_nxt_when_idle_evnt_1>

0801033e <??get_nxt_when_idle_evnt_2>:
 801033e:	78f0      	ldrb	r0, [r6, #3]
 8010340:	07c1      	lsls	r1, r0, #31
 8010342:	d418      	bmi.n	8010376 <??get_nxt_when_idle_evnt_0>

08010344 <??get_nxt_when_idle_evnt_3>:
 8010344:	f104 0050 	add.w	r0, r4, #80	; 0x50
 8010348:	6a44      	ldr	r4, [r0, #36]	; 0x24

0801034a <??get_nxt_when_idle_evnt_1>:
 801034a:	b1ac      	cbz	r4, 8010378 <??get_nxt_when_idle_evnt_4>
 801034c:	f898 1039 	ldrb.w	r1, [r8, #57]	; 0x39
 8010350:	1c7f      	adds	r7, r7, #1
 8010352:	b2fa      	uxtb	r2, r7
 8010354:	4291      	cmp	r1, r2
 8010356:	4180      	sbcs	r0, r0
 8010358:	43c0      	mvns	r0, r0
 801035a:	0fc0      	lsrs	r0, r0, #31
 801035c:	f7ef ff38 	bl	80001d0 <bsp_assert>
 8010360:	f894 0046 	ldrb.w	r0, [r4, #70]	; 0x46
 8010364:	2801      	cmp	r0, #1
 8010366:	d1ed      	bne.n	8010344 <??get_nxt_when_idle_evnt_3>
 8010368:	78b0      	ldrb	r0, [r6, #2]
 801036a:	2801      	cmp	r0, #1
 801036c:	d0e7      	beq.n	801033e <??get_nxt_when_idle_evnt_2>
 801036e:	6d20      	ldr	r0, [r4, #80]	; 0x50
 8010370:	9900      	ldr	r1, [sp, #0]
 8010372:	4288      	cmp	r0, r1
 8010374:	d2e6      	bcs.n	8010344 <??get_nxt_when_idle_evnt_3>

08010376 <??get_nxt_when_idle_evnt_0>:
 8010376:	4625      	mov	r5, r4

08010378 <??get_nxt_when_idle_evnt_4>:
 8010378:	4628      	mov	r0, r5
 801037a:	e8bd 81f6 	ldmia.w	sp!, {r1, r2, r4, r5, r6, r7, r8, pc}
	...

08010380 <??DataTable24>:
 8010380:	0000 2000                                   ... 

08010384 <??DataTable24_1>:
 8010384:	0048 2000                                   H.. 

08010388 <extend_gnrc_evnt_durn_chk>:
 8010388:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 801038c:	4606      	mov	r6, r0
 801038e:	4688      	mov	r8, r1
 8010390:	4615      	mov	r5, r2
 8010392:	f000 fa7d 	bl	8010890 <get_priority>
 8010396:	4fa8      	ldr	r7, [pc, #672]	; (8010638 <??DataTable27>)
 8010398:	4681      	mov	r9, r0
 801039a:	683c      	ldr	r4, [r7, #0]
 801039c:	f004 f85b 	bl	8014456 <os_disable_isr>
 80103a0:	ea5f 0008 	movs.w	r0, r8
 80103a4:	d116      	bne.n	80103d4 <??extend_gnrc_evnt_durn_chk_0>
 80103a6:	f896 008b 	ldrb.w	r0, [r6, #139]	; 0x8b
 80103aa:	b910      	cbnz	r0, 80103b2 <??extend_gnrc_evnt_durn_chk_1>
 80103ac:	6f74      	ldr	r4, [r6, #116]	; 0x74
 80103ae:	e000      	b.n	80103b2 <??extend_gnrc_evnt_durn_chk_1>

080103b0 <??extend_gnrc_evnt_durn_chk_2>:
 80103b0:	6f64      	ldr	r4, [r4, #116]	; 0x74

080103b2 <??extend_gnrc_evnt_durn_chk_1>:
 80103b2:	b174      	cbz	r4, 80103d2 <??extend_gnrc_evnt_durn_chk_3>
 80103b4:	f8df 1cd0 	ldr.w	r1, [pc, #3280]	; 8011088 <??DataTable35>
 80103b8:	6d20      	ldr	r0, [r4, #80]	; 0x50
 80103ba:	680a      	ldr	r2, [r1, #0]
 80103bc:	1a80      	subs	r0, r0, r2
 80103be:	3814      	subs	r0, #20
 80103c0:	42a8      	cmp	r0, r5
 80103c2:	d206      	bcs.n	80103d2 <??extend_gnrc_evnt_durn_chk_3>
 80103c4:	4620      	mov	r0, r4
 80103c6:	f000 fa63 	bl	8010890 <get_priority>
 80103ca:	4548      	cmp	r0, r9
 80103cc:	daf0      	bge.n	80103b0 <??extend_gnrc_evnt_durn_chk_2>
 80103ce:	2500      	movs	r5, #0
 80103d0:	e04d      	b.n	801046e <??extend_gnrc_evnt_durn_chk_4>

080103d2 <??extend_gnrc_evnt_durn_chk_3>:
 80103d2:	683c      	ldr	r4, [r7, #0]

080103d4 <??extend_gnrc_evnt_durn_chk_0>:
 80103d4:	2c00      	cmp	r4, #0
 80103d6:	d041      	beq.n	801045c <??extend_gnrc_evnt_durn_chk_5>
 80103d8:	42b4      	cmp	r4, r6
 80103da:	bf04      	itt	eq
 80103dc:	6f70      	ldreq	r0, [r6, #116]	; 0x74
 80103de:	2800      	cmpeq	r0, #0
 80103e0:	d03c      	beq.n	801045c <??extend_gnrc_evnt_durn_chk_5>
 80103e2:	f896 008b 	ldrb.w	r0, [r6, #139]	; 0x8b
 80103e6:	b910      	cbnz	r0, 80103ee <??extend_gnrc_evnt_durn_chk_6>
 80103e8:	6f74      	ldr	r4, [r6, #116]	; 0x74

080103ea <??extend_gnrc_evnt_durn_chk_7>:
 80103ea:	2c00      	cmp	r4, #0
 80103ec:	d036      	beq.n	801045c <??extend_gnrc_evnt_durn_chk_5>

080103ee <??extend_gnrc_evnt_durn_chk_6>:
 80103ee:	f8df ac98 	ldr.w	sl, [pc, #3224]	; 8011088 <??DataTable35>
 80103f2:	6d21      	ldr	r1, [r4, #80]	; 0x50
 80103f4:	f8da 0000 	ldr.w	r0, [sl]
 80103f8:	1a09      	subs	r1, r1, r0
 80103fa:	3914      	subs	r1, #20
 80103fc:	42a9      	cmp	r1, r5
 80103fe:	d22d      	bcs.n	801045c <??extend_gnrc_evnt_durn_chk_5>
 8010400:	4620      	mov	r0, r4
 8010402:	f000 fa45 	bl	8010890 <get_priority>
 8010406:	4548      	cmp	r0, r9
 8010408:	da14      	bge.n	8010434 <??extend_gnrc_evnt_durn_chk_8>
 801040a:	f1b8 0f01 	cmp.w	r8, #1
 801040e:	bf0c      	ite	eq
 8010410:	2001      	moveq	r0, #1
 8010412:	2000      	movne	r0, #0
 8010414:	f7ef fedc 	bl	80001d0 <bsp_assert>
 8010418:	6d20      	ldr	r0, [r4, #80]	; 0x50
 801041a:	e9d4 2324 	ldrd	r2, r3, [r4, #144]	; 0x90
 801041e:	2400      	movs	r4, #0
 8010420:	2501      	movs	r5, #1
 8010422:	42ab      	cmp	r3, r5
 8010424:	bf06      	itte	eq
 8010426:	42a2      	cmpeq	r2, r4
 8010428:	250f      	moveq	r5, #15
 801042a:	f8da 5000 	ldrne.w	r5, [sl]
 801042e:	1b45      	subs	r5, r0, r5
 8010430:	3d14      	subs	r5, #20
 8010432:	e013      	b.n	801045c <??extend_gnrc_evnt_durn_chk_5>

08010434 <??extend_gnrc_evnt_durn_chk_8>:
 8010434:	f896 008b 	ldrb.w	r0, [r6, #139]	; 0x8b
 8010438:	b970      	cbnz	r0, 8010458 <??extend_gnrc_evnt_durn_chk_9>
 801043a:	200d      	movs	r0, #13
 801043c:	f7ef fef4 	bl	8000228 <bsp_debug_gpio_set>
 8010440:	2001      	movs	r0, #1
 8010442:	f104 0190 	add.w	r1, r4, #144	; 0x90
 8010446:	7288      	strb	r0, [r1, #10]
 8010448:	f897 003a 	ldrb.w	r0, [r7, #58]	; 0x3a
 801044c:	1c40      	adds	r0, r0, #1
 801044e:	f887 003a 	strb.w	r0, [r7, #58]	; 0x3a
 8010452:	200d      	movs	r0, #13
 8010454:	f7ef feea 	bl	800022c <bsp_debug_gpio_clear>

08010458 <??extend_gnrc_evnt_durn_chk_9>:
 8010458:	6f64      	ldr	r4, [r4, #116]	; 0x74
 801045a:	e7c6      	b.n	80103ea <??extend_gnrc_evnt_durn_chk_7>

0801045c <??extend_gnrc_evnt_durn_chk_5>:
 801045c:	b13d      	cbz	r5, 801046e <??extend_gnrc_evnt_durn_chk_4>
 801045e:	6d31      	ldr	r1, [r6, #80]	; 0x50
 8010460:	f8df 2c24 	ldr.w	r2, [pc, #3108]	; 8011088 <??DataTable35>
 8010464:	6810      	ldr	r0, [r2, #0]
 8010466:	1a69      	subs	r1, r5, r1
 8010468:	1841      	adds	r1, r0, r1
 801046a:	3114      	adds	r1, #20
 801046c:	6631      	str	r1, [r6, #96]	; 0x60

0801046e <??extend_gnrc_evnt_durn_chk_4>:
 801046e:	f897 003a 	ldrb.w	r0, [r7, #58]	; 0x3a
 8010472:	b108      	cbz	r0, 8010478 <??extend_gnrc_evnt_durn_chk_10>
 8010474:	f7fe fdfa 	bl	800f06c <recheck_conflicting>

08010478 <??extend_gnrc_evnt_durn_chk_10>:
 8010478:	f003 ffef 	bl	801445a <os_enable_isr>
 801047c:	4628      	mov	r0, r5
 801047e:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
	...

08010484 <??DataTable25>:
 8010484:	0050 2000                                   P.. 

08010488 <chk_when_idle_evnt_priority>:
 8010488:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801048c:	4605      	mov	r5, r0
 801048e:	468a      	mov	sl, r1
 8010490:	f7fb fba5 	bl	800bbde <llhwc_get_num_of_prdc_clbr_chnls>
 8010494:	4683      	mov	fp, r0
 8010496:	4868      	ldr	r0, [pc, #416]	; (8010638 <??DataTable27>)
 8010498:	f04f 0901 	mov.w	r9, #1
 801049c:	f04f 0800 	mov.w	r8, #0
 80104a0:	270d      	movs	r7, #13
 80104a2:	6804      	ldr	r4, [r0, #0]
 80104a4:	b1ed      	cbz	r5, 80104e2 <??chk_when_idle_evnt_priority_0>
 80104a6:	4668      	mov	r0, sp
 80104a8:	f7fb fdf7 	bl	800c09a <llhwc_slptmr_get>
 80104ac:	f105 0645 	add.w	r6, r5, #69	; 0x45
 80104b0:	7870      	ldrb	r0, [r6, #1]
 80104b2:	2801      	cmp	r0, #1
 80104b4:	d152      	bne.n	801055c <??chk_when_idle_evnt_priority_1>
 80104b6:	78b0      	ldrb	r0, [r6, #2]
 80104b8:	4583      	cmp	fp, r0
 80104ba:	bfac      	ite	ge
 80104bc:	2001      	movge	r0, #1
 80104be:	2000      	movlt	r0, #0
 80104c0:	f7ef fe86 	bl	80001d0 <bsp_assert>
 80104c4:	78b0      	ldrb	r0, [r6, #2]
 80104c6:	ebab 0b00 	sub.w	fp, fp, r0
 80104ca:	f8df 03bc 	ldr.w	r0, [pc, #956]	; 8010888 <??DataTable29_1>
 80104ce:	7881      	ldrb	r1, [r0, #2]
 80104d0:	2901      	cmp	r1, #1
 80104d2:	d102      	bne.n	80104da <??chk_when_idle_evnt_priority_2>
 80104d4:	78c0      	ldrb	r0, [r0, #3]
 80104d6:	07c2      	lsls	r2, r0, #31
 80104d8:	d503      	bpl.n	80104e2 <??chk_when_idle_evnt_priority_0>

080104da <??chk_when_idle_evnt_priority_2>:
 80104da:	6d28      	ldr	r0, [r5, #80]	; 0x50
 80104dc:	9a00      	ldr	r2, [sp, #0]
 80104de:	4282      	cmp	r2, r0
 80104e0:	d201      	bcs.n	80104e6 <??chk_when_idle_evnt_priority_3>

080104e2 <??chk_when_idle_evnt_priority_0>:
 80104e2:	46c1      	mov	r9, r8
 80104e4:	e086      	b.n	80105f4 <??chk_when_idle_evnt_priority_4>

080104e6 <??chk_when_idle_evnt_priority_3>:
 80104e6:	2901      	cmp	r1, #1
 80104e8:	bf02      	ittt	eq
 80104ea:	2800      	cmpeq	r0, #0
 80104ec:	f5a2 507a 	subeq.w	r0, r2, #16000	; 0x3e80
 80104f0:	6528      	streq	r0, [r5, #80]	; 0x50
 80104f2:	9900      	ldr	r1, [sp, #0]
 80104f4:	6d28      	ldr	r0, [r5, #80]	; 0x50
 80104f6:	f8df 3644 	ldr.w	r3, [pc, #1604]	; 8010b3c <??DataTable32_1>
 80104fa:	1a09      	subs	r1, r1, r0
 80104fc:	fba1 3203 	umull	r3, r2, r1, r3
 8010500:	02d7      	lsls	r7, r2, #11
 8010502:	0e3f      	lsrs	r7, r7, #24
 8010504:	f1c7 010d 	rsb	r1, r7, #13
 8010508:	2903      	cmp	r1, #3
 801050a:	dd05      	ble.n	8010518 <??chk_when_idle_evnt_priority_5>
 801050c:	f1c7 070d 	rsb	r7, r7, #13
 8010510:	b2ff      	uxtb	r7, r7
 8010512:	2f03      	cmp	r7, #3
 8010514:	d103      	bne.n	801051e <??chk_when_idle_evnt_priority_6>
 8010516:	e000      	b.n	801051a <??chk_when_idle_evnt_priority_7>

08010518 <??chk_when_idle_evnt_priority_5>:
 8010518:	2703      	movs	r7, #3

0801051a <??chk_when_idle_evnt_priority_7>:
 801051a:	f886 9000 	strb.w	r9, [r6]

0801051e <??chk_when_idle_evnt_priority_6>:
 801051e:	78f1      	ldrb	r1, [r6, #3]
 8010520:	2901      	cmp	r1, #1
 8010522:	bf0c      	ite	eq
 8010524:	6ba8      	ldreq	r0, [r5, #56]	; 0x38
 8010526:	6be8      	ldrne	r0, [r5, #60]	; 0x3c
 8010528:	6b69      	ldr	r1, [r5, #52]	; 0x34
 801052a:	fa5f fb8b 	uxtb.w	fp, fp
 801052e:	f8df 260c 	ldr.w	r2, [pc, #1548]	; 8010b3c <??DataTable32_1>
 8010532:	fb0b 0b01 	mla	fp, fp, r1, r0
 8010536:	f8df 1b50 	ldr.w	r1, [pc, #2896]	; 8011088 <??DataTable35>
 801053a:	f8d1 8000 	ldr.w	r8, [r1]
 801053e:	ea4f 0b8b 	mov.w	fp, fp, lsl #2
 8010542:	f10b 0b7d 	add.w	fp, fp, #125	; 0x7d
 8010546:	fbab 2002 	umull	r2, r0, fp, r2
 801054a:	ebb8 1f90 	cmp.w	r8, r0, lsr #6
 801054e:	bf38      	it	cc
 8010550:	ea4f 1890 	movcc.w	r8, r0, lsr #6
 8010554:	9800      	ldr	r0, [sp, #0]
 8010556:	4480      	add	r8, r0
 8010558:	e000      	b.n	801055c <??chk_when_idle_evnt_priority_1>

0801055a <??chk_when_idle_evnt_priority_8>:
 801055a:	6f64      	ldr	r4, [r4, #116]	; 0x74

0801055c <??chk_when_idle_evnt_priority_1>:
 801055c:	b1c4      	cbz	r4, 8010590 <??chk_when_idle_evnt_priority_9>
 801055e:	f8df 1b28 	ldr.w	r1, [pc, #2856]	; 8011088 <??DataTable35>
 8010562:	6d20      	ldr	r0, [r4, #80]	; 0x50
 8010564:	680a      	ldr	r2, [r1, #0]
 8010566:	1a80      	subs	r0, r0, r2
 8010568:	4540      	cmp	r0, r8
 801056a:	d211      	bcs.n	8010590 <??chk_when_idle_evnt_priority_9>
 801056c:	4620      	mov	r0, r4
 801056e:	f000 f98f 	bl	8010890 <get_priority>
 8010572:	42b8      	cmp	r0, r7
 8010574:	db0a      	blt.n	801058c <??chk_when_idle_evnt_priority_10>
 8010576:	7870      	ldrb	r0, [r6, #1]
 8010578:	2801      	cmp	r0, #1
 801057a:	d1ee      	bne.n	801055a <??chk_when_idle_evnt_priority_8>
 801057c:	e9d4 0124 	ldrd	r0, r1, [r4, #144]	; 0x90
 8010580:	f410 1ff0 	tst.w	r0, #1966080	; 0x1e0000
 8010584:	d0e9      	beq.n	801055a <??chk_when_idle_evnt_priority_8>
 8010586:	f04f 0900 	mov.w	r9, #0
 801058a:	e004      	b.n	8010596 <??chk_when_idle_evnt_priority_11>

0801058c <??chk_when_idle_evnt_priority_10>:
 801058c:	f04f 0900 	mov.w	r9, #0

08010590 <??chk_when_idle_evnt_priority_9>:
 8010590:	7870      	ldrb	r0, [r6, #1]
 8010592:	2801      	cmp	r0, #1
 8010594:	d12e      	bne.n	80105f4 <??chk_when_idle_evnt_priority_4>

08010596 <??chk_when_idle_evnt_priority_11>:
 8010596:	f1ba 0f00 	cmp.w	sl, #0
 801059a:	bf14      	ite	ne
 801059c:	2001      	movne	r0, #1
 801059e:	2000      	moveq	r0, #0
 80105a0:	f7ef fe16 	bl	80001d0 <bsp_assert>
 80105a4:	ea5f 0009 	movs.w	r0, r9
 80105a8:	d007      	beq.n	80105ba <??chk_when_idle_evnt_priority_12>
 80105aa:	9800      	ldr	r0, [sp, #0]
 80105ac:	eba8 0800 	sub.w	r8, r8, r0
 80105b0:	f108 080f 	add.w	r8, r8, #15
 80105b4:	f8ca 8000 	str.w	r8, [sl]
 80105b8:	e01c      	b.n	80105f4 <??chk_when_idle_evnt_priority_4>

080105ba <??chk_when_idle_evnt_priority_12>:
 80105ba:	b1dc      	cbz	r4, 80105f4 <??chk_when_idle_evnt_priority_4>
 80105bc:	f8df 0ac8 	ldr.w	r0, [pc, #2760]	; 8011088 <??DataTable35>
 80105c0:	6802      	ldr	r2, [r0, #0]
 80105c2:	9b00      	ldr	r3, [sp, #0]
 80105c4:	6d21      	ldr	r1, [r4, #80]	; 0x50
 80105c6:	18d3      	adds	r3, r2, r3
 80105c8:	428b      	cmp	r3, r1
 80105ca:	d213      	bcs.n	80105f4 <??chk_when_idle_evnt_priority_4>
 80105cc:	2f0b      	cmp	r7, #11
 80105ce:	da11      	bge.n	80105f4 <??chk_when_idle_evnt_priority_4>
 80105d0:	9800      	ldr	r0, [sp, #0]
 80105d2:	310f      	adds	r1, #15
 80105d4:	f8df 3564 	ldr.w	r3, [pc, #1380]	; 8010b3c <??DataTable32_1>
 80105d8:	1a09      	subs	r1, r1, r0
 80105da:	1a89      	subs	r1, r1, r2
 80105dc:	6baa      	ldr	r2, [r5, #56]	; 0x38
 80105de:	0092      	lsls	r2, r2, #2
 80105e0:	327d      	adds	r2, #125	; 0x7d
 80105e2:	fba2 3003 	umull	r3, r0, r2, r3
 80105e6:	0980      	lsrs	r0, r0, #6
 80105e8:	4288      	cmp	r0, r1
 80105ea:	bf3c      	itt	cc
 80105ec:	f8ca 1000 	strcc.w	r1, [sl]
 80105f0:	f04f 0901 	movcc.w	r9, #1

080105f4 <??chk_when_idle_evnt_priority_4>:
 80105f4:	4648      	mov	r0, r9
 80105f6:	e8bd 8ff2 	ldmia.w	sp!, {r1, r4, r5, r6, r7, r8, r9, sl, fp, pc}
	...

080105fc <??DataTable26>:
 80105fc:	6e98 8312                                   .n..

08010600 <evnt_on_air>:
 8010600:	b538      	push	{r3, r4, r5, lr}
 8010602:	4605      	mov	r5, r0
 8010604:	f8df 4c90 	ldr.w	r4, [pc, #3216]	; 8011298 <??DataTable37>
 8010608:	6820      	ldr	r0, [r4, #0]
 801060a:	b100      	cbz	r0, 801060e <??evnt_on_air_0>
 801060c:	2001      	movs	r0, #1

0801060e <??evnt_on_air_0>:
 801060e:	f7ef fddf 	bl	80001d0 <bsp_assert>
 8010612:	6820      	ldr	r0, [r4, #0]
 8010614:	42a8      	cmp	r0, r5
 8010616:	bf0c      	ite	eq
 8010618:	2001      	moveq	r0, #1
 801061a:	2000      	movne	r0, #0
 801061c:	f7ef fdd8 	bl	80001d0 <bsp_assert>
 8010620:	f105 0074 	add.w	r0, r5, #116	; 0x74
 8010624:	2101      	movs	r1, #1
 8010626:	75c1      	strb	r1, [r0, #23]
 8010628:	6822      	ldr	r2, [r4, #0]
 801062a:	2300      	movs	r3, #0
 801062c:	6f51      	ldr	r1, [r2, #116]	; 0x74
 801062e:	6021      	str	r1, [r4, #0]
 8010630:	6003      	str	r3, [r0, #0]
 8010632:	2000      	movs	r0, #0
 8010634:	bd32      	pop	{r1, r4, r5, pc}
	...

08010638 <??DataTable27>:
 8010638:	1750 2000                                   P.. 

0801063c <??DataTable27_1>:
 801063c:	2000 0040                                   . @.

08010640 <hndl_missed_evnt>:
 8010640:	e92d 43fe 	stmdb	sp!, {r1, r2, r3, r4, r5, r6, r7, r8, r9, lr}
 8010644:	4606      	mov	r6, r0
 8010646:	200e      	movs	r0, #14
 8010648:	f8df 5c4c 	ldr.w	r5, [pc, #3148]	; 8011298 <??DataTable37>
 801064c:	f7ef fdec 	bl	8000228 <bsp_debug_gpio_set>
 8010650:	6828      	ldr	r0, [r5, #0]
 8010652:	2100      	movs	r1, #0
 8010654:	9101      	str	r1, [sp, #4]
 8010656:	b100      	cbz	r0, 801065a <??hndl_missed_evnt_0>
 8010658:	2001      	movs	r0, #1

0801065a <??hndl_missed_evnt_0>:
 801065a:	f7ef fdb9 	bl	80001d0 <bsp_assert>
 801065e:	6828      	ldr	r0, [r5, #0]
 8010660:	42b0      	cmp	r0, r6
 8010662:	bf0c      	ite	eq
 8010664:	2001      	moveq	r0, #1
 8010666:	2000      	movne	r0, #0
 8010668:	f7ef fdb2 	bl	80001d0 <bsp_assert>
 801066c:	f106 0990 	add.w	r9, r6, #144	; 0x90
 8010670:	f899 0008 	ldrb.w	r0, [r9, #8]
 8010674:	2802      	cmp	r0, #2
 8010676:	bf14      	ite	ne
 8010678:	2001      	movne	r0, #1
 801067a:	2000      	moveq	r0, #0
 801067c:	f7ef fda8 	bl	80001d0 <bsp_assert>
 8010680:	6828      	ldr	r0, [r5, #0]
 8010682:	2200      	movs	r2, #0
 8010684:	6f41      	ldr	r1, [r0, #116]	; 0x74
 8010686:	6029      	str	r1, [r5, #0]
 8010688:	f886 208b 	strb.w	r2, [r6, #139]	; 0x8b
 801068c:	6772      	str	r2, [r6, #116]	; 0x74
 801068e:	6830      	ldr	r0, [r6, #0]
 8010690:	b300      	cbz	r0, 80106d4 <??hndl_missed_evnt_1>
 8010692:	e9d9 2300 	ldrd	r2, r3, [r9]
 8010696:	2b00      	cmp	r3, #0
 8010698:	bf08      	it	eq
 801069a:	f5b2 2f80 	cmpeq.w	r2, #262144	; 0x40000
 801069e:	d019      	beq.n	80106d4 <??hndl_missed_evnt_1>
 80106a0:	2b00      	cmp	r3, #0
 80106a2:	bf08      	it	eq
 80106a4:	f5b2 1f80 	cmpeq.w	r2, #1048576	; 0x100000
 80106a8:	d014      	beq.n	80106d4 <??hndl_missed_evnt_1>
 80106aa:	2000      	movs	r0, #0
 80106ac:	2b00      	cmp	r3, #0
 80106ae:	bf02      	ittt	eq
 80106b0:	f5b2 7f80 	cmpeq.w	r2, #256	; 0x100
 80106b4:	6f30      	ldreq	r0, [r6, #112]	; 0x70
 80106b6:	f890 012d 	ldrbeq.w	r0, [r0, #301]	; 0x12d
 80106ba:	2103      	movs	r1, #3
 80106bc:	f7fc f982 	bl	800c9c4 <llhwc_get_hw_setup_time>
 80106c0:	4601      	mov	r1, r0
 80106c2:	6830      	ldr	r0, [r6, #0]
 80106c4:	2201      	movs	r2, #1
 80106c6:	1809      	adds	r1, r1, r0
 80106c8:	f106 0050 	add.w	r0, r6, #80	; 0x50
 80106cc:	f004 f8e0 	bl	8014890 <ble_time_add_uint>
 80106d0:	2000      	movs	r0, #0
 80106d2:	6030      	str	r0, [r6, #0]

080106d4 <??hndl_missed_evnt_1>:
 80106d4:	a801      	add	r0, sp, #4
 80106d6:	f7fb fce0 	bl	800c09a <llhwc_slptmr_get>
 80106da:	e9d9 0100 	ldrd	r0, r1, [r9]
 80106de:	2200      	movs	r2, #0
 80106e0:	2301      	movs	r3, #1
 80106e2:	f8d6 8050 	ldr.w	r8, [r6, #80]	; 0x50
 80106e6:	4299      	cmp	r1, r3
 80106e8:	bf08      	it	eq
 80106ea:	4290      	cmpeq	r0, r2
 80106ec:	d004      	beq.n	80106f8 <??hndl_missed_evnt_2>
 80106ee:	f8df 4998 	ldr.w	r4, [pc, #2456]	; 8011088 <??DataTable35>
 80106f2:	6820      	ldr	r0, [r4, #0]
 80106f4:	eba8 0800 	sub.w	r8, r8, r0

080106f8 <??hndl_missed_evnt_2>:
 80106f8:	9901      	ldr	r1, [sp, #4]
 80106fa:	4588      	cmp	r8, r1
 80106fc:	f080 807d 	bcs.w	80107fa <??hndl_missed_evnt_3>
 8010700:	f88d 2000 	strb.w	r2, [sp]
 8010704:	2400      	movs	r4, #0
 8010706:	6f37      	ldr	r7, [r6, #112]	; 0x70
 8010708:	e9d9 0100 	ldrd	r0, r1, [r9]
 801070c:	f05f 020a 	movs.w	r2, #10
 8010710:	f7f1 fea0 	bl	8002454 <__iar_llswitch>

08010714 <?<Jumptable for hndl_missed_evnt>_0>:
 8010714:	0001 0000 0000 0000 009b 0000 0002 0000     ................
 8010724:	0000 0000 008f 0000 0004 0000 0000 0000     ................
 8010734:	0083 0000 0008 0000 0000 0000 0077 0000     ............w...
 8010744:	0010 0000 0000 0000 0061 0000 0020 0000     ........a... ...
 8010754:	0000 0000 0055 0000 0040 0000 0000 0000     ....U...@.......
 8010764:	0049 0000 0080 0000 0000 0000 0033 0000     I...........3...
 8010774:	0100 0000 0000 0000 0027 0000 0000 0000     ........'.......
 8010784:	0001 0000 0005 0000 0057 0000               ........W...

08010790 <??hndl_missed_evnt_7>:
 8010790:	68b0      	ldr	r0, [r6, #8]
 8010792:	b108      	cbz	r0, 8010798 <??hndl_missed_evnt_9>
 8010794:	4604      	mov	r4, r0
 8010796:	e029      	b.n	80107ec <??hndl_missed_evnt_10>

08010798 <??hndl_missed_evnt_9>:
 8010798:	f8df 18ec 	ldr.w	r1, [pc, #2284]	; 8011088 <??DataTable35>
 801079c:	6e30      	ldr	r0, [r6, #96]	; 0x60
 801079e:	680c      	ldr	r4, [r1, #0]
 80107a0:	1b04      	subs	r4, r0, r4
 80107a2:	3c14      	subs	r4, #20
 80107a4:	e022      	b.n	80107ec <??hndl_missed_evnt_10>

080107a6 <??hndl_missed_evnt_6>:
 80107a6:	8af8      	ldrh	r0, [r7, #22]
 80107a8:	eb00 0180 	add.w	r1, r0, r0, lsl #2
 80107ac:	00cc      	lsls	r4, r1, #3
 80107ae:	e01d      	b.n	80107ec <??hndl_missed_evnt_10>

080107b0 <??hndl_missed_evnt_5>:
 80107b0:	8938      	ldrh	r0, [r7, #8]
 80107b2:	eb00 0180 	add.w	r1, r0, r0, lsl #2
 80107b6:	008c      	lsls	r4, r1, #2
 80107b8:	e018      	b.n	80107ec <??hndl_missed_evnt_10>

080107ba <??hndl_missed_evnt_4>:
 80107ba:	f897 0021 	ldrb.w	r0, [r7, #33]	; 0x21
 80107be:	2801      	cmp	r0, #1
 80107c0:	d009      	beq.n	80107d6 <??hndl_missed_evnt_11>
 80107c2:	2101      	movs	r1, #1
 80107c4:	4668      	mov	r0, sp
 80107c6:	f7fb f9f0 	bl	800bbaa <llhwc_gen_rnd_num>
 80107ca:	f89d 0000 	ldrb.w	r0, [sp]
 80107ce:	f000 000f 	and.w	r0, r0, #15
 80107d2:	f88d 0000 	strb.w	r0, [sp]

080107d6 <??hndl_missed_evnt_11>:
 80107d6:	69f9      	ldr	r1, [r7, #28]
 80107d8:	f89d 0000 	ldrb.w	r0, [sp]
 80107dc:	1841      	adds	r1, r0, r1
 80107de:	eb01 0281 	add.w	r2, r1, r1, lsl #2
 80107e2:	0094      	lsls	r4, r2, #2
 80107e4:	e002      	b.n	80107ec <??hndl_missed_evnt_10>

080107e6 <??hndl_missed_evnt_8>:
 80107e6:	2000      	movs	r0, #0
 80107e8:	f7ef fcf2 	bl	80001d0 <bsp_assert>

080107ec <??hndl_missed_evnt_10>:
 80107ec:	9801      	ldr	r0, [sp, #4]
 80107ee:	eba0 0808 	sub.w	r8, r0, r8
 80107f2:	fbb8 f2f4 	udiv	r2, r8, r4
 80107f6:	1c52      	adds	r2, r2, #1
 80107f8:	e000      	b.n	80107fc <??hndl_missed_evnt_12>

080107fa <??hndl_missed_evnt_3>:
 80107fa:	2201      	movs	r2, #1

080107fc <??hndl_missed_evnt_12>:
 80107fc:	e9d9 0100 	ldrd	r0, r1, [r9]
 8010800:	f410 7fc0 	tst.w	r0, #384	; 0x180
 8010804:	bf1e      	ittt	ne
 8010806:	6f31      	ldrne	r1, [r6, #112]	; 0x70
 8010808:	f8b1 0070 	ldrhne.w	r0, [r1, #112]	; 0x70
 801080c:	2800      	cmpne	r0, #0
 801080e:	d005      	beq.n	801081c <??hndl_missed_evnt_13>
 8010810:	f8b1 10da 	ldrh.w	r1, [r1, #218]	; 0xda
 8010814:	1853      	adds	r3, r2, r1
 8010816:	4283      	cmp	r3, r0
 8010818:	bf28      	it	cs
 801081a:	1a42      	subcs	r2, r0, r1

0801081c <??hndl_missed_evnt_13>:
 801081c:	f899 0009 	ldrb.w	r0, [r9, #9]
 8010820:	4611      	mov	r1, r2
 8010822:	1810      	adds	r0, r2, r0
 8010824:	f889 0009 	strb.w	r0, [r9, #9]
 8010828:	4630      	mov	r0, r6
 801082a:	f000 f989 	bl	8010b40 <add_intrvl_to_evnt_time_stamp>
 801082e:	0004      	movs	r4, r0
 8010830:	d108      	bne.n	8010844 <??hndl_missed_evnt_14>
 8010832:	2100      	movs	r1, #0
 8010834:	4630      	mov	r0, r6
 8010836:	f7fe fe4a 	bl	800f4ce <schedule_event>
 801083a:	f895 003a 	ldrb.w	r0, [r5, #58]	; 0x3a
 801083e:	b108      	cbz	r0, 8010844 <??hndl_missed_evnt_14>
 8010840:	f7fe fc14 	bl	800f06c <recheck_conflicting>

08010844 <??hndl_missed_evnt_14>:
 8010844:	200e      	movs	r0, #14
 8010846:	f7ef fcf1 	bl	800022c <bsp_debug_gpio_clear>
 801084a:	4620      	mov	r0, r4
 801084c:	b003      	add	sp, #12
 801084e:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}

08010852 <evnt_schdlr_check_if_evnt_exist>:
 8010852:	4601      	mov	r1, r0
 8010854:	2000      	movs	r0, #0
 8010856:	2200      	movs	r2, #0
 8010858:	2900      	cmp	r1, #0
 801085a:	d100      	bne.n	801085e <??evnt_schdlr_check_if_evnt_exist_0>
 801085c:	4770      	bx	lr

0801085e <??evnt_schdlr_check_if_evnt_exist_0>:
 801085e:	b430      	push	{r4, r5}
 8010860:	e000      	b.n	8010864 <??evnt_schdlr_check_if_evnt_exist_1>

08010862 <??evnt_schdlr_check_if_evnt_exist_2>:
 8010862:	1c52      	adds	r2, r2, #1

08010864 <??evnt_schdlr_check_if_evnt_exist_1>:
 8010864:	f8df 3a30 	ldr.w	r3, [pc, #2608]	; 8011298 <??DataTable37>
 8010868:	f893 5038 	ldrb.w	r5, [r3, #56]	; 0x38
 801086c:	b2d4      	uxtb	r4, r2
 801086e:	42ac      	cmp	r4, r5
 8010870:	d205      	bcs.n	801087e <??evnt_schdlr_check_if_evnt_exist_3>
 8010872:	eb03 0384 	add.w	r3, r3, r4, lsl #2
 8010876:	689c      	ldr	r4, [r3, #8]
 8010878:	428c      	cmp	r4, r1
 801087a:	d1f2      	bne.n	8010862 <??evnt_schdlr_check_if_evnt_exist_2>
 801087c:	4608      	mov	r0, r1

0801087e <??evnt_schdlr_check_if_evnt_exist_3>:
 801087e:	bc30      	pop	{r4, r5}
 8010880:	4770      	bx	lr
	...

08010884 <??DataTable29>:
 8010884:	18c0 2000                                   ... 

08010888 <??DataTable29_1>:
 8010888:	0840 2000                                   @.. 

0801088c <??DataTable29_2>:
 801088c:	003c 2000                                   <.. 

08010890 <get_priority>:
 8010890:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8010894:	4605      	mov	r5, r0
 8010896:	f105 0690 	add.w	r6, r5, #144	; 0x90
 801089a:	e9d6 8700 	ldrd	r8, r7, [r6]
 801089e:	240b      	movs	r4, #11
 80108a0:	4640      	mov	r0, r8
 80108a2:	4639      	mov	r1, r7
 80108a4:	f05f 020a 	movs.w	r2, #10
 80108a8:	f7f1 fdd4 	bl	8002454 <__iar_llswitch>

080108ac <?<Jumptable for get_priority>_0>:
 80108ac:	0001 0000 0000 0000 00cf 0000 0002 0000     ................
 80108bc:	0000 0000 00c3 0000 0004 0000 0000 0000     ................
 80108cc:	00b7 0000 0008 0000 0000 0000 00ab 0000     ................
 80108dc:	0010 0000 0000 0000 0171 0000 0020 0000     ........q... ...
 80108ec:	0000 0000 0165 0000 0040 0000 0000 0000     ....e...@.......
 80108fc:	00b9 0000 0080 0000 0000 0000 001d 0000     ................
 801090c:	0100 0000 0000 0000 0011 0000 0000 0000     ................
 801091c:	0001 0000 0143 0000 015b 0000               ....C...[...

08010928 <??get_priority_3>:
 8010928:	7e6b      	ldrb	r3, [r5, #25]
 801092a:	2b01      	cmp	r3, #1
 801092c:	bf08      	it	eq
 801092e:	2400      	moveq	r4, #0
 8010930:	f000 80a7 	beq.w	8010a82 <??get_priority_5>
 8010934:	f895 008a 	ldrb.w	r0, [r5, #138]	; 0x8a
 8010938:	b908      	cbnz	r0, 801093e <??get_priority_6>
 801093a:	2401      	movs	r4, #1
 801093c:	e0a1      	b.n	8010a82 <??get_priority_5>

0801093e <??get_priority_6>:
 801093e:	6eec      	ldr	r4, [r5, #108]	; 0x6c
 8010940:	f105 0050 	add.w	r0, r5, #80	; 0x50
 8010944:	f104 0108 	add.w	r1, r4, #8
 8010948:	f003 ff1b 	bl	8014782 <ble_time_diff_us>
 801094c:	8b62      	ldrh	r2, [r4, #26]
 801094e:	f8df 1b58 	ldr.w	r1, [pc, #2904]	; 80114a8 <??DataTable41>
 8010952:	f8df 3b58 	ldr.w	r3, [pc, #2904]	; 80114ac <??DataTable41_1>
 8010956:	434a      	muls	r2, r1
 8010958:	fb82 4303 	smull	r4, r3, r2, r3
 801095c:	115b      	asrs	r3, r3, #5
 801095e:	eb03 73d3 	add.w	r3, r3, r3, lsr #31
 8010962:	4298      	cmp	r0, r3
 8010964:	bf28      	it	cs
 8010966:	2402      	movcs	r4, #2
 8010968:	f080 808b 	bcs.w	8010a82 <??get_priority_5>
 801096c:	7a71      	ldrb	r1, [r6, #9]
 801096e:	7af4      	ldrb	r4, [r6, #11]
 8010970:	2903      	cmp	r1, #3
 8010972:	bfb8      	it	lt
 8010974:	2c03      	cmplt	r4, #3
 8010976:	db6d      	blt.n	8010a54 <??get_priority_7>
 8010978:	1860      	adds	r0, r4, r1
 801097a:	2806      	cmp	r0, #6
 801097c:	da77      	bge.n	8010a6e <??get_priority_8>
 801097e:	f1c1 0108 	rsb	r1, r1, #8
 8010982:	1b0c      	subs	r4, r1, r4
 8010984:	e07d      	b.n	8010a82 <??get_priority_5>

08010986 <??get_priority_0>:
 8010986:	6f28      	ldr	r0, [r5, #112]	; 0x70
 8010988:	2f00      	cmp	r7, #0
 801098a:	bf01      	itttt	eq
 801098c:	f1b8 0f02 	cmpeq.w	r8, #2
 8010990:	f100 011c 	addeq.w	r1, r0, #28
 8010994:	794a      	ldrbeq	r2, [r1, #5]
 8010996:	2a01      	cmpeq	r2, #1
 8010998:	d069      	beq.n	8010a6e <??get_priority_8>
 801099a:	7a71      	ldrb	r1, [r6, #9]
 801099c:	2903      	cmp	r1, #3
 801099e:	da6d      	bge.n	8010a7c <??get_priority_9>
 80109a0:	69c0      	ldr	r0, [r0, #28]
 80109a2:	f248 0101 	movw	r1, #32769	; 0x8001
 80109a6:	4288      	cmp	r0, r1
 80109a8:	d268      	bcs.n	8010a7c <??get_priority_9>
 80109aa:	2f00      	cmp	r7, #0
 80109ac:	bf08      	it	eq
 80109ae:	f1b8 0f02 	cmpeq.w	r8, #2
 80109b2:	d165      	bne.n	8010a80 <??get_priority_10>
 80109b4:	2407      	movs	r4, #7
 80109b6:	e064      	b.n	8010a82 <??get_priority_5>

080109b8 <??get_priority_2>:
 80109b8:	6f28      	ldr	r0, [r5, #112]	; 0x70
 80109ba:	f240 2171 	movw	r1, #625	; 0x271
 80109be:	f8df 2af0 	ldr.w	r2, [pc, #2800]	; 80114b0 <??DataTable41_2>
 80109c2:	f8b0 9008 	ldrh.w	r9, [r0, #8]
 80109c6:	f04f 37ff 	mov.w	r7, #4294967295	; 0xffffffff
 80109ca:	fb01 f109 	mul.w	r1, r1, r9
 80109ce:	fba1 2002 	umull	r2, r0, r1, r2
 80109d2:	ea4f 3850 	mov.w	r8, r0, lsr #13
 80109d6:	2001      	movs	r0, #1
 80109d8:	f7ef fbfa 	bl	80001d0 <bsp_assert>
 80109dc:	68a8      	ldr	r0, [r5, #8]
 80109de:	bba8      	cbnz	r0, 8010a4c <??get_priority_11>
 80109e0:	f8df 38b4 	ldr.w	r3, [pc, #2228]	; 8011298 <??DataTable37>
 80109e4:	2200      	movs	r2, #0
 80109e6:	f893 c038 	ldrb.w	ip, [r3, #56]	; 0x38
 80109ea:	e017      	b.n	8010a1c <??get_priority_12>

080109ec <??get_priority_13>:
 80109ec:	f8de 0000 	ldr.w	r0, [lr]
 80109f0:	8b40      	ldrh	r0, [r0, #26]
 80109f2:	4540      	cmp	r0, r8
 80109f4:	d210      	bcs.n	8010a18 <??get_priority_14>
 80109f6:	6898      	ldr	r0, [r3, #8]
 80109f8:	6f01      	ldr	r1, [r0, #112]	; 0x70
 80109fa:	8b48      	ldrh	r0, [r1, #26]
 80109fc:	42b8      	cmp	r0, r7
 80109fe:	d80b      	bhi.n	8010a18 <??get_priority_14>
 8010a00:	4607      	mov	r7, r0
 8010a02:	e009      	b.n	8010a18 <??get_priority_14>

08010a04 <??get_priority_15>:
 8010a04:	f100 0e70 	add.w	lr, r0, #112	; 0x70
 8010a08:	e9de 0108 	ldrd	r0, r1, [lr, #32]
 8010a0c:	b921      	cbnz	r1, 8010a18 <??get_priority_14>
 8010a0e:	2880      	cmp	r0, #128	; 0x80
 8010a10:	bf18      	it	ne
 8010a12:	f5b0 7f80 	cmpne.w	r0, #256	; 0x100
 8010a16:	d0e9      	beq.n	80109ec <??get_priority_13>

08010a18 <??get_priority_14>:
 8010a18:	1c52      	adds	r2, r2, #1
 8010a1a:	1d1b      	adds	r3, r3, #4

08010a1c <??get_priority_12>:
 8010a1c:	4562      	cmp	r2, ip
 8010a1e:	da02      	bge.n	8010a26 <??get_priority_16>
 8010a20:	6898      	ldr	r0, [r3, #8]
 8010a22:	2800      	cmp	r0, #0
 8010a24:	d1ee      	bne.n	8010a04 <??get_priority_15>

08010a26 <??get_priority_16>:
 8010a26:	f117 0f01 	cmn.w	r7, #1
 8010a2a:	d013      	beq.n	8010a54 <??get_priority_7>
 8010a2c:	6f29      	ldr	r1, [r5, #112]	; 0x70
 8010a2e:	087f      	lsrs	r7, r7, #1
 8010a30:	f8c5 9008 	str.w	r9, [r5, #8]
 8010a34:	0138      	lsls	r0, r7, #4
 8010a36:	8108      	strh	r0, [r1, #8]
 8010a38:	b280      	uxth	r0, r0
 8010a3a:	eb00 0280 	add.w	r2, r0, r0, lsl #2
 8010a3e:	f8df 0648 	ldr.w	r0, [pc, #1608]	; 8011088 <??DataTable35>
 8010a42:	6801      	ldr	r1, [r0, #0]
 8010a44:	eb01 0182 	add.w	r1, r1, r2, lsl #2
 8010a48:	3114      	adds	r1, #20
 8010a4a:	6629      	str	r1, [r5, #96]	; 0x60

08010a4c <??get_priority_11>:
 8010a4c:	7a70      	ldrb	r0, [r6, #9]
 8010a4e:	2803      	cmp	r0, #3
 8010a50:	dd17      	ble.n	8010a82 <??get_priority_5>
 8010a52:	e006      	b.n	8010a62 <??get_priority_17>

08010a54 <??get_priority_7>:
 8010a54:	2408      	movs	r4, #8
 8010a56:	e014      	b.n	8010a82 <??get_priority_5>

08010a58 <??get_priority_1>:
 8010a58:	7a70      	ldrb	r0, [r6, #9]
 8010a5a:	280a      	cmp	r0, #10
 8010a5c:	bfa8      	it	ge
 8010a5e:	2405      	movge	r4, #5
 8010a60:	da0f      	bge.n	8010a82 <??get_priority_5>

08010a62 <??get_priority_17>:
 8010a62:	2409      	movs	r4, #9
 8010a64:	e00d      	b.n	8010a82 <??get_priority_5>

08010a66 <??get_priority_4>:
 8010a66:	f895 0020 	ldrb.w	r0, [r5, #32]
 8010a6a:	2802      	cmp	r0, #2
 8010a6c:	d101      	bne.n	8010a72 <??get_priority_18>

08010a6e <??get_priority_8>:
 8010a6e:	2403      	movs	r4, #3
 8010a70:	e007      	b.n	8010a82 <??get_priority_5>

08010a72 <??get_priority_18>:
 8010a72:	2801      	cmp	r0, #1
 8010a74:	d002      	beq.n	8010a7c <??get_priority_9>
 8010a76:	7a70      	ldrb	r0, [r6, #9]
 8010a78:	2806      	cmp	r0, #6
 8010a7a:	db01      	blt.n	8010a80 <??get_priority_10>

08010a7c <??get_priority_9>:
 8010a7c:	2406      	movs	r4, #6
 8010a7e:	e000      	b.n	8010a82 <??get_priority_5>

08010a80 <??get_priority_10>:
 8010a80:	240a      	movs	r4, #10

08010a82 <??get_priority_5>:
 8010a82:	b2e0      	uxtb	r0, r4
 8010a84:	e8bd 83f2 	ldmia.w	sp!, {r1, r4, r5, r6, r7, r8, r9, pc}

08010a88 <evnt_schdlr_get_master_conn_anchor_point>:
 8010a88:	b538      	push	{r3, r4, r5, lr}
 8010a8a:	4604      	mov	r4, r0
 8010a8c:	f240 2071 	movw	r0, #625	; 0x271
 8010a90:	4341      	muls	r1, r0
 8010a92:	29b2      	cmp	r1, #178	; 0xb2
 8010a94:	bf38      	it	cc
 8010a96:	2006      	movcc	r0, #6
 8010a98:	d30b      	bcc.n	8010ab2 <??evnt_schdlr_get_master_conn_anchor_point_0>
 8010a9a:	f240 40fb 	movw	r0, #1275	; 0x4fb
 8010a9e:	4281      	cmp	r1, r0
 8010aa0:	bf28      	it	cs
 8010aa2:	2029      	movcs	r0, #41	; 0x29
 8010aa4:	d205      	bcs.n	8010ab2 <??evnt_schdlr_get_master_conn_anchor_point_0>
 8010aa6:	0089      	lsls	r1, r1, #2
 8010aa8:	317d      	adds	r1, #125	; 0x7d
 8010aaa:	4a24      	ldr	r2, [pc, #144]	; (8010b3c <??DataTable32_1>)
 8010aac:	fba1 2002 	umull	r2, r0, r1, r2
 8010ab0:	0980      	lsrs	r0, r0, #6

08010ab2 <??evnt_schdlr_get_master_conn_anchor_point_0>:
 8010ab2:	f8df 15d4 	ldr.w	r1, [pc, #1492]	; 8011088 <??DataTable35>
 8010ab6:	f8df 27e0 	ldr.w	r2, [pc, #2016]	; 8011298 <??DataTable37>
 8010aba:	6809      	ldr	r1, [r1, #0]
 8010abc:	6b53      	ldr	r3, [r2, #52]	; 0x34
 8010abe:	1808      	adds	r0, r1, r0
 8010ac0:	3014      	adds	r0, #20
 8010ac2:	eb03 0583 	add.w	r5, r3, r3, lsl #2
 8010ac6:	00ea      	lsls	r2, r5, #3
 8010ac8:	4282      	cmp	r2, r0
 8010aca:	d203      	bcs.n	8010ad4 <??evnt_schdlr_get_master_conn_anchor_point_1>
 8010acc:	28b2      	cmp	r0, #178	; 0xb2
 8010ace:	bf84      	itt	hi
 8010ad0:	1a50      	subhi	r0, r2, r1
 8010ad2:	3814      	subhi	r0, #20

08010ad4 <??evnt_schdlr_get_master_conn_anchor_point_1>:
 8010ad4:	2280      	movs	r2, #128	; 0x80
 8010ad6:	2300      	movs	r3, #0
 8010ad8:	2100      	movs	r1, #0
 8010ada:	f7fe ffab 	bl	800fa34 <get_slot_offset>
 8010ade:	6020      	str	r0, [r4, #0]
 8010ae0:	2200      	movs	r2, #0
 8010ae2:	6062      	str	r2, [r4, #4]
 8010ae4:	bd31      	pop	{r0, r4, r5, pc}

08010ae6 <schdlr_nxt_cycle>:
 8010ae6:	b538      	push	{r3, r4, r5, lr}
 8010ae8:	4604      	mov	r4, r0
 8010aea:	f104 0574 	add.w	r5, r4, #116	; 0x74
 8010aee:	6828      	ldr	r0, [r5, #0]
 8010af0:	2800      	cmp	r0, #0
 8010af2:	bf0c      	ite	eq
 8010af4:	2001      	moveq	r0, #1
 8010af6:	2000      	movne	r0, #0
 8010af8:	f7ef fb6a 	bl	80001d0 <bsp_assert>
 8010afc:	f894 0098 	ldrb.w	r0, [r4, #152]	; 0x98
 8010b00:	2802      	cmp	r0, #2
 8010b02:	bf14      	ite	ne
 8010b04:	2001      	movne	r0, #1
 8010b06:	2000      	moveq	r0, #0
 8010b08:	f7ef fb62 	bl	80001d0 <bsp_assert>
 8010b0c:	2000      	movs	r0, #0
 8010b0e:	75e8      	strb	r0, [r5, #23]
 8010b10:	2101      	movs	r1, #1
 8010b12:	4620      	mov	r0, r4
 8010b14:	f000 f814 	bl	8010b40 <add_intrvl_to_evnt_time_stamp>
 8010b18:	b960      	cbnz	r0, 8010b34 <??schdlr_nxt_cycle_0>
 8010b1a:	2100      	movs	r1, #0
 8010b1c:	4620      	mov	r0, r4
 8010b1e:	f7fe fcd6 	bl	800f4ce <schedule_event>
 8010b22:	f8df 1774 	ldr.w	r1, [pc, #1908]	; 8011298 <??DataTable37>
 8010b26:	f891 003a 	ldrb.w	r0, [r1, #58]	; 0x3a
 8010b2a:	b118      	cbz	r0, 8010b34 <??schdlr_nxt_cycle_0>
 8010b2c:	e8bd 4031 	ldmia.w	sp!, {r0, r4, r5, lr}
 8010b30:	f7fe ba9c 	b.w	800f06c <recheck_conflicting>

08010b34 <??schdlr_nxt_cycle_0>:
 8010b34:	bd31      	pop	{r0, r4, r5, pc}
	...

08010b38 <??DataTable32>:
 8010b38:	1788 2000                                   ... 

08010b3c <??DataTable32_1>:
 8010b3c:	6e98 8312                                   .n..

08010b40 <add_intrvl_to_evnt_time_stamp>:
 8010b40:	e92d 4ffe 	stmdb	sp!, {r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8010b44:	f8df 296c 	ldr.w	r2, [pc, #2412]	; 80114b4 <??DataTable41_3>
 8010b48:	f04f 0800 	mov.w	r8, #0
 8010b4c:	4604      	mov	r4, r0
 8010b4e:	6810      	ldr	r0, [r2, #0]
 8010b50:	460e      	mov	r6, r1
 8010b52:	f88d 8000 	strb.w	r8, [sp]
 8010b56:	6f25      	ldr	r5, [r4, #112]	; 0x70
 8010b58:	f04f 31ff 	mov.w	r1, #4294967295	; 0xffffffff
 8010b5c:	f003 fc83 	bl	8014466 <os_rcrsv_mutex_wait>
 8010b60:	e9d4 0124 	ldrd	r0, r1, [r4, #144]	; 0x90
 8010b64:	f05f 020a 	movs.w	r2, #10
 8010b68:	f7f1 fc74 	bl	8002454 <__iar_llswitch>

08010b6c <?<Jumptable for add_intrvl_to_evnt_time_stamp>_0>:
 8010b6c:	0001 0000 0000 0000 0071 0000 0002 0000     ........q.......
 8010b7c:	0000 0000 0065 0000 0004 0000 0000 0000     ....e...........
 8010b8c:	0059 0000 0008 0000 0000 0000 004d 0000     Y...........M...
 8010b9c:	0010 0000 0000 0000 0075 0000 0020 0000     ........u... ...
 8010bac:	0000 0000 0069 0000 0040 0000 0000 0000     ....i...@.......
 8010bbc:	0079 0000 0080 0000 0000 0000 007f 0000     y...............
 8010bcc:	0100 0000 0000 0000 0089 0000 0000 0000     ................
 8010bdc:	0001 0000 0089 0000 02a3 0000               ............

08010be8 <??add_intrvl_to_evnt_time_stamp_0>:
 8010be8:	351c      	adds	r5, #28
 8010bea:	7968      	ldrb	r0, [r5, #5]
 8010bec:	2801      	cmp	r0, #1
 8010bee:	d00f      	beq.n	8010c10 <??add_intrvl_to_evnt_time_stamp_7>
 8010bf0:	2101      	movs	r1, #1
 8010bf2:	4668      	mov	r0, sp
 8010bf4:	f7fa ffd9 	bl	800bbaa <llhwc_gen_rnd_num>
 8010bf8:	4680      	mov	r8, r0
 8010bfa:	1e40      	subs	r0, r0, #1
 8010bfc:	4180      	sbcs	r0, r0
 8010bfe:	0fc0      	lsrs	r0, r0, #31
 8010c00:	f7ef fae6 	bl	80001d0 <bsp_assert>
 8010c04:	f89d 0000 	ldrb.w	r0, [sp]
 8010c08:	f000 000f 	and.w	r0, r0, #15
 8010c0c:	f88d 0000 	strb.w	r0, [sp]

08010c10 <??add_intrvl_to_evnt_time_stamp_7>:
 8010c10:	6829      	ldr	r1, [r5, #0]
 8010c12:	f89d 0000 	ldrb.w	r0, [sp]
 8010c16:	2202      	movs	r2, #2
 8010c18:	1841      	adds	r1, r0, r1
 8010c1a:	e010      	b.n	8010c3e <??add_intrvl_to_evnt_time_stamp_8>

08010c1c <??add_intrvl_to_evnt_time_stamp_1>:
 8010c1c:	6f20      	ldr	r0, [r4, #112]	; 0x70
 8010c1e:	2202      	movs	r2, #2
 8010c20:	8901      	ldrh	r1, [r0, #8]
 8010c22:	f104 0050 	add.w	r0, r4, #80	; 0x50
 8010c26:	4371      	muls	r1, r6
 8010c28:	f003 fe32 	bl	8014890 <ble_time_add_uint>
 8010c2c:	f104 0084 	add.w	r0, r4, #132	; 0x84
 8010c30:	8801      	ldrh	r1, [r0, #0]
 8010c32:	1c49      	adds	r1, r1, #1
 8010c34:	8001      	strh	r1, [r0, #0]
 8010c36:	e12a      	b.n	8010e8e <??add_intrvl_to_evnt_time_stamp_9>

08010c38 <??add_intrvl_to_evnt_time_stamp_2>:
 8010c38:	6f20      	ldr	r0, [r4, #112]	; 0x70
 8010c3a:	2202      	movs	r2, #2
 8010c3c:	8901      	ldrh	r1, [r0, #8]

08010c3e <??add_intrvl_to_evnt_time_stamp_8>:
 8010c3e:	4371      	muls	r1, r6
 8010c40:	f104 0050 	add.w	r0, r4, #80	; 0x50
 8010c44:	f003 fe24 	bl	8014890 <ble_time_add_uint>
 8010c48:	e121      	b.n	8010e8e <??add_intrvl_to_evnt_time_stamp_9>

08010c4a <??add_intrvl_to_evnt_time_stamp_3>:
 8010c4a:	6f20      	ldr	r0, [r4, #112]	; 0x70
 8010c4c:	f8b0 10da 	ldrh.w	r1, [r0, #218]	; 0xda
 8010c50:	1871      	adds	r1, r6, r1
 8010c52:	f8a0 10da 	strh.w	r1, [r0, #218]	; 0xda
 8010c56:	4631      	mov	r1, r6
 8010c58:	4620      	mov	r0, r4
 8010c5a:	f7f1 fe64 	bl	8002926 <evnt_schdlr_update_master_conn_timers>
 8010c5e:	e116      	b.n	8010e8e <??add_intrvl_to_evnt_time_stamp_9>

08010c60 <??add_intrvl_to_evnt_time_stamp_4>:
 8010c60:	4631      	mov	r1, r6
 8010c62:	4620      	mov	r0, r4
 8010c64:	f7f1 fd78 	bl	8002758 <evnt_schdlr_update_slave_conn_timers>
 8010c68:	4680      	mov	r8, r0
 8010c6a:	e110      	b.n	8010e8e <??add_intrvl_to_evnt_time_stamp_9>

08010c6c <??add_intrvl_to_evnt_time_stamp_5>:
 8010c6c:	f8df 9628 	ldr.w	r9, [pc, #1576]	; 8011298 <??DataTable37>
 8010c70:	f8d9 5000 	ldr.w	r5, [r9]
 8010c74:	a801      	add	r0, sp, #4
 8010c76:	f7fb fa10 	bl	800c09a <llhwc_slptmr_get>
 8010c7a:	68a0      	ldr	r0, [r4, #8]
 8010c7c:	2800      	cmp	r0, #0
 8010c7e:	d169      	bne.n	8010d54 <??add_intrvl_to_evnt_time_stamp_10>
 8010c80:	6920      	ldr	r0, [r4, #16]
 8010c82:	b110      	cbz	r0, 8010c8a <??add_intrvl_to_evnt_time_stamp_11>
 8010c84:	9901      	ldr	r1, [sp, #4]
 8010c86:	4281      	cmp	r1, r0
 8010c88:	d224      	bcs.n	8010cd4 <??add_intrvl_to_evnt_time_stamp_12>

08010c8a <??add_intrvl_to_evnt_time_stamp_11>:
 8010c8a:	6d26      	ldr	r6, [r4, #80]	; 0x50
 8010c8c:	6f60      	ldr	r0, [r4, #116]	; 0x74
 8010c8e:	46b4      	mov	ip, r6
 8010c90:	b158      	cbz	r0, 8010caa <??add_intrvl_to_evnt_time_stamp_13>
 8010c92:	e9d0 2324 	ldrd	r2, r3, [r0, #144]	; 0x90
 8010c96:	2101      	movs	r1, #1
 8010c98:	428b      	cmp	r3, r1
 8010c9a:	bf07      	ittee	eq
 8010c9c:	4542      	cmpeq	r2, r8
 8010c9e:	200f      	moveq	r0, #15
 8010ca0:	f8df 03e4 	ldrne.w	r0, [pc, #996]	; 8011088 <??DataTable35>
 8010ca4:	6800      	ldrne	r0, [r0, #0]
 8010ca6:	ebac 0c00 	sub.w	ip, ip, r0

08010caa <??add_intrvl_to_evnt_time_stamp_13>:
 8010caa:	b15d      	cbz	r5, 8010cc4 <??add_intrvl_to_evnt_time_stamp_14>
 8010cac:	9801      	ldr	r0, [sp, #4]
 8010cae:	4560      	cmp	r0, ip
 8010cb0:	d32f      	bcc.n	8010d12 <??add_intrvl_to_evnt_time_stamp_15>
 8010cb2:	6d2a      	ldr	r2, [r5, #80]	; 0x50
 8010cb4:	6e21      	ldr	r1, [r4, #96]	; 0x60
 8010cb6:	1a12      	subs	r2, r2, r0
 8010cb8:	4291      	cmp	r1, r2
 8010cba:	d22a      	bcs.n	8010d12 <??add_intrvl_to_evnt_time_stamp_15>
 8010cbc:	4620      	mov	r0, r4
 8010cbe:	f7fe f95a 	bl	800ef76 <set_evnt_start_time>
 8010cc2:	e0e4      	b.n	8010e8e <??add_intrvl_to_evnt_time_stamp_9>

08010cc4 <??add_intrvl_to_evnt_time_stamp_14>:
 8010cc4:	4620      	mov	r0, r4
 8010cc6:	f7fe f956 	bl	800ef76 <set_evnt_start_time>

08010cca <??add_intrvl_to_evnt_time_stamp_16>:
 8010cca:	6920      	ldr	r0, [r4, #16]
 8010ccc:	b388      	cbz	r0, 8010d32 <??add_intrvl_to_evnt_time_stamp_17>
 8010cce:	6d21      	ldr	r1, [r4, #80]	; 0x50
 8010cd0:	4288      	cmp	r0, r1
 8010cd2:	d22e      	bcs.n	8010d32 <??add_intrvl_to_evnt_time_stamp_17>

08010cd4 <??add_intrvl_to_evnt_time_stamp_12>:
 8010cd4:	2501      	movs	r5, #1

08010cd6 <??add_intrvl_to_evnt_time_stamp_18>:
 8010cd6:	f104 0190 	add.w	r1, r4, #144	; 0x90
 8010cda:	f891 a00a 	ldrb.w	sl, [r1, #10]
 8010cde:	f104 0084 	add.w	r0, r4, #132	; 0x84
 8010ce2:	e9d1 2300 	ldrd	r2, r3, [r1]
 8010ce6:	f8b0 b004 	ldrh.w	fp, [r0, #4]
 8010cea:	8847      	ldrh	r7, [r0, #2]
 8010cec:	2100      	movs	r1, #0
 8010cee:	f04f 081f 	mov.w	r8, #31
 8010cf2:	f109 0638 	add.w	r6, r9, #56	; 0x38
 8010cf6:	f04f 4080 	mov.w	r0, #1073741824	; 0x40000000
 8010cfa:	428b      	cmp	r3, r1
 8010cfc:	bf08      	it	eq
 8010cfe:	4282      	cmpeq	r2, r0
 8010d00:	d13b      	bne.n	8010d7a <??add_intrvl_to_evnt_time_stamp_19>
 8010d02:	f8d9 0004 	ldr.w	r0, [r9, #4]
 8010d06:	42a0      	cmp	r0, r4
 8010d08:	d12b      	bne.n	8010d62 <??add_intrvl_to_evnt_time_stamp_20>
 8010d0a:	6f40      	ldr	r0, [r0, #116]	; 0x74
 8010d0c:	f8c9 0004 	str.w	r0, [r9, #4]
 8010d10:	e02f      	b.n	8010d72 <??add_intrvl_to_evnt_time_stamp_21>

08010d12 <??add_intrvl_to_evnt_time_stamp_15>:
 8010d12:	4628      	mov	r0, r5

08010d14 <??add_intrvl_to_evnt_time_stamp_22>:
 8010d14:	6d01      	ldr	r1, [r0, #80]	; 0x50
 8010d16:	6e02      	ldr	r2, [r0, #96]	; 0x60
 8010d18:	1851      	adds	r1, r2, r1
 8010d1a:	428e      	cmp	r6, r1
 8010d1c:	d303      	bcc.n	8010d26 <??add_intrvl_to_evnt_time_stamp_23>
 8010d1e:	6f40      	ldr	r0, [r0, #116]	; 0x74
 8010d20:	2800      	cmp	r0, #0
 8010d22:	d1f7      	bne.n	8010d14 <??add_intrvl_to_evnt_time_stamp_22>
 8010d24:	e7ce      	b.n	8010cc4 <??add_intrvl_to_evnt_time_stamp_14>

08010d26 <??add_intrvl_to_evnt_time_stamp_23>:
 8010d26:	2205      	movs	r2, #5
 8010d28:	f104 0050 	add.w	r0, r4, #80	; 0x50
 8010d2c:	f003 fd60 	bl	80147f0 <ble_time_set_uint>
 8010d30:	e7cb      	b.n	8010cca <??add_intrvl_to_evnt_time_stamp_16>

08010d32 <??add_intrvl_to_evnt_time_stamp_17>:
 8010d32:	69e0      	ldr	r0, [r4, #28]
 8010d34:	2800      	cmp	r0, #0
 8010d36:	f000 80aa 	beq.w	8010e8e <??add_intrvl_to_evnt_time_stamp_9>
 8010d3a:	6d23      	ldr	r3, [r4, #80]	; 0x50
 8010d3c:	6e22      	ldr	r2, [r4, #96]	; 0x60
 8010d3e:	f8df 5348 	ldr.w	r5, [pc, #840]	; 8011088 <??DataTable35>
 8010d42:	6829      	ldr	r1, [r5, #0]
 8010d44:	18d3      	adds	r3, r2, r3
 8010d46:	1a5b      	subs	r3, r3, r1
 8010d48:	3b14      	subs	r3, #20
 8010d4a:	4298      	cmp	r0, r3
 8010d4c:	f080 809f 	bcs.w	8010e8e <??add_intrvl_to_evnt_time_stamp_9>
 8010d50:	2504      	movs	r5, #4
 8010d52:	e7c0      	b.n	8010cd6 <??add_intrvl_to_evnt_time_stamp_18>

08010d54 <??add_intrvl_to_evnt_time_stamp_10>:
 8010d54:	6d21      	ldr	r1, [r4, #80]	; 0x50
 8010d56:	b2f6      	uxtb	r6, r6
 8010d58:	fb06 1600 	mla	r6, r6, r0, r1
 8010d5c:	6526      	str	r6, [r4, #80]	; 0x50
 8010d5e:	e096      	b.n	8010e8e <??add_intrvl_to_evnt_time_stamp_9>

08010d60 <??add_intrvl_to_evnt_time_stamp_24>:
 8010d60:	4608      	mov	r0, r1

08010d62 <??add_intrvl_to_evnt_time_stamp_20>:
 8010d62:	b130      	cbz	r0, 8010d72 <??add_intrvl_to_evnt_time_stamp_21>
 8010d64:	6f41      	ldr	r1, [r0, #116]	; 0x74
 8010d66:	42a1      	cmp	r1, r4
 8010d68:	d1fa      	bne.n	8010d60 <??add_intrvl_to_evnt_time_stamp_24>
 8010d6a:	6f61      	ldr	r1, [r4, #116]	; 0x74
 8010d6c:	6741      	str	r1, [r0, #116]	; 0x74
 8010d6e:	2000      	movs	r0, #0
 8010d70:	6760      	str	r0, [r4, #116]	; 0x74

08010d72 <??add_intrvl_to_evnt_time_stamp_21>:
 8010d72:	7870      	ldrb	r0, [r6, #1]
 8010d74:	1e41      	subs	r1, r0, #1
 8010d76:	7071      	strb	r1, [r6, #1]
 8010d78:	e079      	b.n	8010e6e <??add_intrvl_to_evnt_time_stamp_25>

08010d7a <??add_intrvl_to_evnt_time_stamp_19>:
 8010d7a:	f109 0008 	add.w	r0, r9, #8
 8010d7e:	7832      	ldrb	r2, [r6, #0]
 8010d80:	e000      	b.n	8010d84 <??add_intrvl_to_evnt_time_stamp_26>

08010d82 <??add_intrvl_to_evnt_time_stamp_27>:
 8010d82:	1c49      	adds	r1, r1, #1

08010d84 <??add_intrvl_to_evnt_time_stamp_26>:
 8010d84:	4291      	cmp	r1, r2
 8010d86:	da03      	bge.n	8010d90 <??add_intrvl_to_evnt_time_stamp_28>
 8010d88:	f850 3b04 	ldr.w	r3, [r0], #4
 8010d8c:	42a3      	cmp	r3, r4
 8010d8e:	d1f8      	bne.n	8010d82 <??add_intrvl_to_evnt_time_stamp_27>

08010d90 <??add_intrvl_to_evnt_time_stamp_28>:
 8010d90:	7832      	ldrb	r2, [r6, #0]
 8010d92:	4291      	cmp	r1, r2
 8010d94:	da11      	bge.n	8010dba <??add_intrvl_to_evnt_time_stamp_29>
 8010d96:	1c48      	adds	r0, r1, #1
 8010d98:	4290      	cmp	r0, r2
 8010d9a:	d105      	bne.n	8010da8 <??add_intrvl_to_evnt_time_stamp_30>
 8010d9c:	2200      	movs	r2, #0
 8010d9e:	f109 0308 	add.w	r3, r9, #8
 8010da2:	f843 2021 	str.w	r2, [r3, r1, lsl #2]
 8010da6:	e006      	b.n	8010db6 <??add_intrvl_to_evnt_time_stamp_31>

08010da8 <??add_intrvl_to_evnt_time_stamp_30>:
 8010da8:	eb09 0281 	add.w	r2, r9, r1, lsl #2
 8010dac:	68d3      	ldr	r3, [r2, #12]
 8010dae:	f109 0c08 	add.w	ip, r9, #8
 8010db2:	f84c 3021 	str.w	r3, [ip, r1, lsl #2]

08010db6 <??add_intrvl_to_evnt_time_stamp_31>:
 8010db6:	4601      	mov	r1, r0
 8010db8:	e7ea      	b.n	8010d90 <??add_intrvl_to_evnt_time_stamp_28>

08010dba <??add_intrvl_to_evnt_time_stamp_29>:
 8010dba:	4620      	mov	r0, r4
 8010dbc:	f7ff f96b 	bl	8010096 <rem_from_evnts_list>
 8010dc0:	7830      	ldrb	r0, [r6, #0]
 8010dc2:	1e41      	subs	r1, r0, #1
 8010dc4:	b2ca      	uxtb	r2, r1
 8010dc6:	7031      	strb	r1, [r6, #0]
 8010dc8:	2a00      	cmp	r2, #0
 8010dca:	bf04      	itt	eq
 8010dcc:	7870      	ldrbeq	r0, [r6, #1]
 8010dce:	2800      	cmpeq	r0, #0
 8010dd0:	d117      	bne.n	8010e02 <??add_intrvl_to_evnt_time_stamp_32>
 8010dd2:	f109 0b08 	add.w	fp, r9, #8
 8010dd6:	270b      	movs	r7, #11

08010dd8 <??add_intrvl_to_evnt_time_stamp_33>:
 8010dd8:	f8db 0000 	ldr.w	r0, [fp]
 8010ddc:	b120      	cbz	r0, 8010de8 <??add_intrvl_to_evnt_time_stamp_34>
 8010dde:	f7f1 fb56 	bl	800248e <evnt_schdlr_free_evnt>
 8010de2:	2000      	movs	r0, #0
 8010de4:	f8cb 0000 	str.w	r0, [fp]

08010de8 <??add_intrvl_to_evnt_time_stamp_34>:
 8010de8:	f10b 0b04 	add.w	fp, fp, #4
 8010dec:	1e7f      	subs	r7, r7, #1
 8010dee:	d1f3      	bne.n	8010dd8 <??add_intrvl_to_evnt_time_stamp_33>
 8010df0:	223c      	movs	r2, #60	; 0x3c
 8010df2:	2100      	movs	r1, #0
 8010df4:	4648      	mov	r0, r9
 8010df6:	f7fd fef8 	bl	800ebea <ble_memset>
 8010dfa:	2000      	movs	r0, #0
 8010dfc:	f8c9 0034 	str.w	r0, [r9, #52]	; 0x34
 8010e00:	e035      	b.n	8010e6e <??add_intrvl_to_evnt_time_stamp_25>

08010e02 <??add_intrvl_to_evnt_time_stamp_32>:
 8010e02:	f64f 72ff 	movw	r2, #65535	; 0xffff
 8010e06:	4297      	cmp	r7, r2
 8010e08:	d102      	bne.n	8010e10 <??add_intrvl_to_evnt_time_stamp_35>
 8010e0a:	b2c9      	uxtb	r1, r1
 8010e0c:	2901      	cmp	r1, #1
 8010e0e:	d102      	bne.n	8010e16 <??add_intrvl_to_evnt_time_stamp_36>

08010e10 <??add_intrvl_to_evnt_time_stamp_35>:
 8010e10:	4658      	mov	r0, fp
 8010e12:	f7ff f954 	bl	80100be <update_radio_period_after_rmv_evnt>

08010e16 <??add_intrvl_to_evnt_time_stamp_36>:
 8010e16:	2700      	movs	r7, #0
 8010e18:	e01f      	b.n	8010e5a <??add_intrvl_to_evnt_time_stamp_37>

08010e1a <??add_intrvl_to_evnt_time_stamp_38>:
 8010e1a:	e9dc 2324 	ldrd	r2, r3, [ip, #144]	; 0x90
 8010e1e:	2b00      	cmp	r3, #0
 8010e20:	bf08      	it	eq
 8010e22:	2a40      	cmpeq	r2, #64	; 0x40
 8010e24:	d006      	beq.n	8010e34 <??add_intrvl_to_evnt_time_stamp_39>
 8010e26:	2100      	movs	r1, #0
 8010e28:	f04f 5080 	mov.w	r0, #268435456	; 0x10000000
 8010e2c:	428b      	cmp	r3, r1
 8010e2e:	bf08      	it	eq
 8010e30:	4282      	cmpeq	r2, r0
 8010e32:	d110      	bne.n	8010e56 <??add_intrvl_to_evnt_time_stamp_40>

08010e34 <??add_intrvl_to_evnt_time_stamp_39>:
 8010e34:	f8dc 0008 	ldr.w	r0, [ip, #8]
 8010e38:	b168      	cbz	r0, 8010e56 <??add_intrvl_to_evnt_time_stamp_40>
 8010e3a:	f8dc 1070 	ldr.w	r1, [ip, #112]	; 0x70
 8010e3e:	8108      	strh	r0, [r1, #8]
 8010e40:	f8de 0008 	ldr.w	r0, [lr, #8]
 8010e44:	6881      	ldr	r1, [r0, #8]
 8010e46:	eb01 0281 	add.w	r2, r1, r1, lsl #2
 8010e4a:	0092      	lsls	r2, r2, #2
 8010e4c:	6602      	str	r2, [r0, #96]	; 0x60
 8010e4e:	f8de 1008 	ldr.w	r1, [lr, #8]
 8010e52:	2000      	movs	r0, #0
 8010e54:	6088      	str	r0, [r1, #8]

08010e56 <??add_intrvl_to_evnt_time_stamp_40>:
 8010e56:	1c7f      	adds	r7, r7, #1
 8010e58:	b2ff      	uxtb	r7, r7

08010e5a <??add_intrvl_to_evnt_time_stamp_37>:
 8010e5a:	7830      	ldrb	r0, [r6, #0]
 8010e5c:	4287      	cmp	r7, r0
 8010e5e:	da06      	bge.n	8010e6e <??add_intrvl_to_evnt_time_stamp_25>
 8010e60:	eb09 0e87 	add.w	lr, r9, r7, lsl #2
 8010e64:	f8de c008 	ldr.w	ip, [lr, #8]
 8010e68:	f1bc 0f00 	cmp.w	ip, #0
 8010e6c:	d1d5      	bne.n	8010e1a <??add_intrvl_to_evnt_time_stamp_38>

08010e6e <??add_intrvl_to_evnt_time_stamp_25>:
 8010e6e:	f1ba 0f01 	cmp.w	sl, #1
 8010e72:	d102      	bne.n	8010e7a <??add_intrvl_to_evnt_time_stamp_41>
 8010e74:	78b0      	ldrb	r0, [r6, #2]
 8010e76:	1e41      	subs	r1, r0, #1
 8010e78:	70b1      	strb	r1, [r6, #2]

08010e7a <??add_intrvl_to_evnt_time_stamp_41>:
 8010e7a:	6ae1      	ldr	r1, [r4, #44]	; 0x2c
 8010e7c:	b109      	cbz	r1, 8010e82 <??add_intrvl_to_evnt_time_stamp_42>
 8010e7e:	4628      	mov	r0, r5
 8010e80:	4788      	blx	r1

08010e82 <??add_intrvl_to_evnt_time_stamp_42>:
 8010e82:	4620      	mov	r0, r4
 8010e84:	f7f1 fb03 	bl	800248e <evnt_schdlr_free_evnt>
 8010e88:	e001      	b.n	8010e8e <??add_intrvl_to_evnt_time_stamp_9>

08010e8a <??add_intrvl_to_evnt_time_stamp_6>:
 8010e8a:	f04f 081f 	mov.w	r8, #31

08010e8e <??add_intrvl_to_evnt_time_stamp_9>:
 8010e8e:	f8df 0624 	ldr.w	r0, [pc, #1572]	; 80114b4 <??DataTable41_3>
 8010e92:	6800      	ldr	r0, [r0, #0]
 8010e94:	f003 faed 	bl	8014472 <os_rcrsv_mutex_release>

08010e98 <?Subroutine1>:
 8010e98:	4640      	mov	r0, r8

08010e9a <??Subroutine1_0>:
 8010e9a:	b003      	add	sp, #12
 8010e9c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08010ea0 <resume_scan>:
 8010ea0:	e92d 4ffe 	stmdb	sp!, {r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8010ea4:	4681      	mov	r9, r0
 8010ea6:	2001      	movs	r0, #1
 8010ea8:	9000      	str	r0, [sp, #0]
 8010eaa:	f8df 63ec 	ldr.w	r6, [pc, #1004]	; 8011298 <??DataTable37>
 8010eae:	468a      	mov	sl, r1
 8010eb0:	2700      	movs	r7, #0
 8010eb2:	6834      	ldr	r4, [r6, #0]
 8010eb4:	e000      	b.n	8010eb8 <??resume_scan_0>

08010eb6 <??resume_scan_1>:
 8010eb6:	6f64      	ldr	r4, [r4, #116]	; 0x74

08010eb8 <??resume_scan_0>:
 8010eb8:	b17c      	cbz	r4, 8010eda <??resume_scan_2>
 8010eba:	f104 0b90 	add.w	fp, r4, #144	; 0x90
 8010ebe:	f89b 0000 	ldrb.w	r0, [fp]
 8010ec2:	f010 0f70 	tst.w	r0, #112	; 0x70
 8010ec6:	d0f6      	beq.n	8010eb6 <??resume_scan_1>
 8010ec8:	4668      	mov	r0, sp
 8010eca:	f7fb f8e6 	bl	800c09a <llhwc_slptmr_get>
 8010ece:	f8df 55e4 	ldr.w	r5, [pc, #1508]	; 80114b4 <??DataTable41_3>
 8010ed2:	f8df 85e4 	ldr.w	r8, [pc, #1508]	; 80114b8 <??DataTable41_4>
 8010ed6:	9701      	str	r7, [sp, #4]
 8010ed8:	e018      	b.n	8010f0c <??resume_scan_3>

08010eda <??resume_scan_2>:
 8010eda:	201f      	movs	r0, #31
 8010edc:	e067      	b.n	8010fae <??resume_scan_4>

08010ede <??resume_scan_5>:
 8010ede:	6828      	ldr	r0, [r5, #0]
 8010ee0:	f04f 31ff 	mov.w	r1, #4294967295	; 0xffffffff
 8010ee4:	f003 fabf 	bl	8014466 <os_rcrsv_mutex_wait>
 8010ee8:	e9db 0100 	ldrd	r0, r1, [fp]
 8010eec:	b959      	cbnz	r1, 8010f06 <??resume_scan_6>
 8010eee:	2810      	cmp	r0, #16
 8010ef0:	bf1c      	itt	ne
 8010ef2:	2820      	cmpne	r0, #32
 8010ef4:	2840      	cmpne	r0, #64	; 0x40
 8010ef6:	d106      	bne.n	8010f06 <??resume_scan_6>
 8010ef8:	6f20      	ldr	r0, [r4, #112]	; 0x70
 8010efa:	2202      	movs	r2, #2
 8010efc:	8901      	ldrh	r1, [r0, #8]
 8010efe:	f104 0050 	add.w	r0, r4, #80	; 0x50
 8010f02:	f003 fd43 	bl	801498c <ble_time_rmv_uint>

08010f06 <??resume_scan_6>:
 8010f06:	6828      	ldr	r0, [r5, #0]
 8010f08:	f003 fab3 	bl	8014472 <os_rcrsv_mutex_release>

08010f0c <??resume_scan_3>:
 8010f0c:	f8d8 2000 	ldr.w	r2, [r8]
 8010f10:	9800      	ldr	r0, [sp, #0]
 8010f12:	6d21      	ldr	r1, [r4, #80]	; 0x50
 8010f14:	1810      	adds	r0, r2, r0
 8010f16:	4288      	cmp	r0, r1
 8010f18:	d3e1      	bcc.n	8010ede <??resume_scan_5>
 8010f1a:	68a0      	ldr	r0, [r4, #8]
 8010f1c:	2800      	cmp	r0, #0
 8010f1e:	bf07      	ittee	eq
 8010f20:	6e20      	ldreq	r0, [r4, #96]	; 0x60
 8010f22:	1a82      	subeq	r2, r0, r2
 8010f24:	eb00 0380 	addne.w	r3, r0, r0, lsl #2
 8010f28:	ebc2 0283 	rsbne	r2, r2, r3, lsl #2
 8010f2c:	6837      	ldr	r7, [r6, #0]
 8010f2e:	3a14      	subs	r2, #20
 8010f30:	1855      	adds	r5, r2, r1
 8010f32:	42bc      	cmp	r4, r7
 8010f34:	d00d      	beq.n	8010f52 <??resume_scan_7>
 8010f36:	4620      	mov	r0, r4
 8010f38:	f7ff f8ad 	bl	8010096 <rem_from_evnts_list>
 8010f3c:	6830      	ldr	r0, [r6, #0]
 8010f3e:	6760      	str	r0, [r4, #116]	; 0x74
 8010f40:	6034      	str	r4, [r6, #0]
 8010f42:	6d39      	ldr	r1, [r7, #80]	; 0x50
 8010f44:	f8d8 0000 	ldr.w	r0, [r8]
 8010f48:	1a08      	subs	r0, r1, r0
 8010f4a:	3814      	subs	r0, #20
 8010f4c:	42a8      	cmp	r0, r5
 8010f4e:	bf38      	it	cc
 8010f50:	4605      	movcc	r5, r0

08010f52 <??resume_scan_7>:
 8010f52:	9800      	ldr	r0, [sp, #0]
 8010f54:	9900      	ldr	r1, [sp, #0]
 8010f56:	1a28      	subs	r0, r5, r0
 8010f58:	42a9      	cmp	r1, r5
 8010f5a:	bf3e      	ittt	cc
 8010f5c:	f8d8 2000 	ldrcc.w	r2, [r8]
 8010f60:	3210      	addcc	r2, #16
 8010f62:	4282      	cmpcc	r2, r0
 8010f64:	d325      	bcc.n	8010fb2 <??resume_scan_8>
 8010f66:	4620      	mov	r0, r4
 8010f68:	f7ff f895 	bl	8010096 <rem_from_evnts_list>
 8010f6c:	6f60      	ldr	r0, [r4, #116]	; 0x74
 8010f6e:	2800      	cmp	r0, #0
 8010f70:	bf0c      	ite	eq
 8010f72:	2001      	moveq	r0, #1
 8010f74:	2000      	movne	r0, #0
 8010f76:	f7ef f92b 	bl	80001d0 <bsp_assert>
 8010f7a:	f89b 0008 	ldrb.w	r0, [fp, #8]
 8010f7e:	2802      	cmp	r0, #2
 8010f80:	bf14      	ite	ne
 8010f82:	2001      	movne	r0, #1
 8010f84:	2000      	moveq	r0, #0
 8010f86:	f7ef f923 	bl	80001d0 <bsp_assert>
 8010f8a:	2000      	movs	r0, #0
 8010f8c:	f884 008b 	strb.w	r0, [r4, #139]	; 0x8b
 8010f90:	2101      	movs	r1, #1
 8010f92:	4620      	mov	r0, r4
 8010f94:	f7ff fdd4 	bl	8010b40 <add_intrvl_to_evnt_time_stamp>
 8010f98:	b940      	cbnz	r0, 8010fac <??resume_scan_9>
 8010f9a:	2100      	movs	r1, #0
 8010f9c:	4620      	mov	r0, r4
 8010f9e:	f7fe fa96 	bl	800f4ce <schedule_event>
 8010fa2:	f896 003a 	ldrb.w	r0, [r6, #58]	; 0x3a
 8010fa6:	b108      	cbz	r0, 8010fac <??resume_scan_9>
 8010fa8:	f7fe f860 	bl	800f06c <recheck_conflicting>

08010fac <??resume_scan_9>:
 8010fac:	203a      	movs	r0, #58	; 0x3a

08010fae <??resume_scan_4>:
 8010fae:	9001      	str	r0, [sp, #4]
 8010fb0:	e003      	b.n	8010fba <??resume_scan_10>

08010fb2 <??resume_scan_8>:
 8010fb2:	f8c9 4000 	str.w	r4, [r9]
 8010fb6:	f8ca 0000 	str.w	r0, [sl]

08010fba <??resume_scan_10>:
 8010fba:	9801      	ldr	r0, [sp, #4]
 8010fbc:	e76d      	b.n	8010e9a <??Subroutine1_0>

08010fbe <updt_radio_period>:
 8010fbe:	b538      	push	{r3, r4, r5, lr}
 8010fc0:	4604      	mov	r4, r0
 8010fc2:	2500      	movs	r5, #0
 8010fc4:	f64f 72ff 	movw	r2, #65535	; 0xffff
 8010fc8:	4bb3      	ldr	r3, [pc, #716]	; (8011298 <??DataTable37>)
 8010fca:	e000      	b.n	8010fce <??updt_radio_period_0>

08010fcc <??updt_radio_period_1>:
 8010fcc:	1c6d      	adds	r5, r5, #1

08010fce <??updt_radio_period_0>:
 8010fce:	b2e8      	uxtb	r0, r5
 8010fd0:	eb03 0080 	add.w	r0, r3, r0, lsl #2
 8010fd4:	6880      	ldr	r0, [r0, #8]
 8010fd6:	2800      	cmp	r0, #0
 8010fd8:	bf1c      	itt	ne
 8010fda:	f8b0 0086 	ldrhne.w	r0, [r0, #134]	; 0x86
 8010fde:	4290      	cmpne	r0, r2
 8010fe0:	d1f4      	bne.n	8010fcc <??updt_radio_period_1>
 8010fe2:	b2ed      	uxtb	r5, r5
 8010fe4:	2d01      	cmp	r5, #1
 8010fe6:	bf04      	itt	eq
 8010fe8:	6898      	ldreq	r0, [r3, #8]
 8010fea:	42a0      	cmpeq	r0, r4
 8010fec:	d005      	beq.n	8010ffa <??updt_radio_period_2>
 8010fee:	6b58      	ldr	r0, [r3, #52]	; 0x34
 8010ff0:	2800      	cmp	r0, #0
 8010ff2:	bf1c      	itt	ne
 8010ff4:	460d      	movne	r5, r1
 8010ff6:	4285      	cmpne	r5, r0
 8010ff8:	d111      	bne.n	801101e <??updt_radio_period_3>

08010ffa <??updt_radio_period_2>:
 8010ffa:	6359      	str	r1, [r3, #52]	; 0x34
 8010ffc:	f104 0050 	add.w	r0, r4, #80	; 0x50
 8011000:	6802      	ldr	r2, [r0, #0]
 8011002:	eb01 0381 	add.w	r3, r1, r1, lsl #2
 8011006:	00db      	lsls	r3, r3, #3
 8011008:	fbb2 f3f3 	udiv	r3, r2, r3
 801100c:	4359      	muls	r1, r3
 801100e:	eb01 0481 	add.w	r4, r1, r1, lsl #2
 8011012:	eba2 02c4 	sub.w	r2, r2, r4, lsl #3
 8011016:	2101      	movs	r1, #1
 8011018:	86c2      	strh	r2, [r0, #54]	; 0x36
 801101a:	8701      	strh	r1, [r0, #56]	; 0x38
 801101c:	e024      	b.n	8011068 <??updt_radio_period_4>

0801101e <??updt_radio_period_3>:
 801101e:	d20d      	bcs.n	801103c <??updt_radio_period_5>
 8011020:	fbb0 f1f5 	udiv	r1, r0, r5
 8011024:	fb05 0011 	mls	r0, r5, r1, r0
 8011028:	bb10      	cbnz	r0, 8011070 <??updt_radio_period_6>
 801102a:	635d      	str	r5, [r3, #52]	; 0x34
 801102c:	b2c8      	uxtb	r0, r1
 801102e:	f7fd febd 	bl	800edac <update_slot_period>
 8011032:	2001      	movs	r0, #1
 8011034:	f104 0150 	add.w	r1, r4, #80	; 0x50
 8011038:	8708      	strh	r0, [r1, #56]	; 0x38
 801103a:	bd31      	pop	{r0, r4, r5, pc}

0801103c <??updt_radio_period_5>:
 801103c:	fbb5 f1f0 	udiv	r1, r5, r0
 8011040:	fb00 5011 	mls	r0, r0, r1, r5
 8011044:	b9a0      	cbnz	r0, 8011070 <??updt_radio_period_6>
 8011046:	f104 0050 	add.w	r0, r4, #80	; 0x50
 801104a:	b2c9      	uxtb	r1, r1
 801104c:	8701      	strh	r1, [r0, #56]	; 0x38
 801104e:	6b59      	ldr	r1, [r3, #52]	; 0x34
 8011050:	6802      	ldr	r2, [r0, #0]
 8011052:	eb01 0381 	add.w	r3, r1, r1, lsl #2
 8011056:	00db      	lsls	r3, r3, #3
 8011058:	fbb2 f3f3 	udiv	r3, r2, r3
 801105c:	4359      	muls	r1, r3
 801105e:	eb01 0481 	add.w	r4, r1, r1, lsl #2
 8011062:	eba2 02c4 	sub.w	r2, r2, r4, lsl #3
 8011066:	86c2      	strh	r2, [r0, #54]	; 0x36

08011068 <??updt_radio_period_4>:
 8011068:	e8bd 4031 	ldmia.w	sp!, {r0, r4, r5, lr}
 801106c:	f7fd be81 	b.w	800ed72 <sort_events_table>

08011070 <??updt_radio_period_6>:
 8011070:	3450      	adds	r4, #80	; 0x50
 8011072:	2000      	movs	r0, #0
 8011074:	8720      	strh	r0, [r4, #56]	; 0x38
 8011076:	86e2      	strh	r2, [r4, #54]	; 0x36
 8011078:	f7fd fe7b 	bl	800ed72 <sort_events_table>
 801107c:	8f20      	ldrh	r0, [r4, #56]	; 0x38
 801107e:	e8bd 4032 	ldmia.w	sp!, {r1, r4, r5, lr}
 8011082:	f7ff b81c 	b.w	80100be <update_radio_period_after_rmv_evnt>
	...

08011088 <??DataTable35>:
 8011088:	0048 2000                                   H.. 

0801108c <optm_conn_param>:
 801108c:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8011090:	b084      	sub	sp, #16
 8011092:	4681      	mov	r9, r0
 8011094:	f8d9 a070 	ldr.w	sl, [r9, #112]	; 0x70
 8011098:	460d      	mov	r5, r1
 801109a:	2400      	movs	r4, #0
 801109c:	f10a 077c 	add.w	r7, sl, #124	; 0x7c
 80110a0:	8879      	ldrh	r1, [r7, #2]
 80110a2:	8838      	ldrh	r0, [r7, #0]
 80110a4:	f8b7 8010 	ldrh.w	r8, [r7, #16]
 80110a8:	f10a 028e 	add.w	r2, sl, #142	; 0x8e
 80110ac:	f7fd fea9 	bl	800ee02 <evnt_schdlr_choose_conn_intrv>
 80110b0:	89b8      	ldrh	r0, [r7, #12]
 80110b2:	2800      	cmp	r0, #0
 80110b4:	f000 80b3 	beq.w	801121e <??optm_conn_param_0>
 80110b8:	8a78      	ldrh	r0, [r7, #18]
 80110ba:	f7fd feef 	bl	800ee9c <get_intrv_slot_period>
 80110be:	2800      	cmp	r0, #0
 80110c0:	f000 808e 	beq.w	80111e0 <??optm_conn_param_1>
 80110c4:	8a38      	ldrh	r0, [r7, #16]
 80110c6:	f8ba 40da 	ldrh.w	r4, [sl, #218]	; 0xda
 80110ca:	f8ba 3016 	ldrh.w	r3, [sl, #22]
 80110ce:	f8d9 2050 	ldr.w	r2, [r9, #80]	; 0x50
 80110d2:	42a0      	cmp	r0, r4
 80110d4:	d206      	bcs.n	80110e4 <??optm_conn_param_2>
 80110d6:	1a21      	subs	r1, r4, r0
 80110d8:	4359      	muls	r1, r3
 80110da:	eb01 0081 	add.w	r0, r1, r1, lsl #2
 80110de:	eba2 02c0 	sub.w	r2, r2, r0, lsl #3
 80110e2:	e005      	b.n	80110f0 <??optm_conn_param_3>

080110e4 <??optm_conn_param_2>:
 80110e4:	1b01      	subs	r1, r0, r4
 80110e6:	4359      	muls	r1, r3
 80110e8:	eb01 0381 	add.w	r3, r1, r1, lsl #2
 80110ec:	eb02 02c3 	add.w	r2, r2, r3, lsl #3

080110f0 <??optm_conn_param_3>:
 80110f0:	89b8      	ldrh	r0, [r7, #12]
 80110f2:	f8d9 e060 	ldr.w	lr, [r9, #96]	; 0x60
 80110f6:	eb00 0180 	add.w	r1, r0, r0, lsl #2
 80110fa:	4867      	ldr	r0, [pc, #412]	; (8011298 <??DataTable37>)
 80110fc:	eb02 02c1 	add.w	r2, r2, r1, lsl #3
 8011100:	f100 0634 	add.w	r6, r0, #52	; 0x34
 8011104:	6831      	ldr	r1, [r6, #0]
 8011106:	eb01 0381 	add.w	r3, r1, r1, lsl #2
 801110a:	00db      	lsls	r3, r3, #3
 801110c:	fbb2 f3f3 	udiv	r3, r2, r3
 8011110:	4359      	muls	r1, r3
 8011112:	eb01 0481 	add.w	r4, r1, r1, lsl #2
 8011116:	f8df 13a4 	ldr.w	r1, [pc, #932]	; 80114bc <??DataTable41_5>
 801111a:	780b      	ldrb	r3, [r1, #0]
 801111c:	eba2 02c4 	sub.w	r2, r2, r4, lsl #3
 8011120:	2b02      	cmp	r3, #2
 8011122:	d106      	bne.n	8011132 <??optm_conn_param_4>
 8011124:	f8df 4390 	ldr.w	r4, [pc, #912]	; 80114b8 <??DataTable41_4>
 8011128:	6821      	ldr	r1, [r4, #0]
 801112a:	ebae 0e01 	sub.w	lr, lr, r1
 801112e:	f1ae 0e0d 	sub.w	lr, lr, #13

08011132 <??optm_conn_param_4>:
 8011132:	f8d6 c000 	ldr.w	ip, [r6]
 8011136:	b292      	uxth	r2, r2
 8011138:	4496      	add	lr, r2
 801113a:	eb0c 0b8c 	add.w	fp, ip, ip, lsl #2
 801113e:	ea4f 0bcb 	mov.w	fp, fp, lsl #3
 8011142:	f8cd b000 	str.w	fp, [sp]
 8011146:	9b00      	ldr	r3, [sp, #0]
 8011148:	2400      	movs	r4, #0
 801114a:	2100      	movs	r1, #0
 801114c:	fbbe f3f3 	udiv	r3, lr, r3
 8011150:	fb0c f303 	mul.w	r3, ip, r3
 8011154:	eb03 0b83 	add.w	fp, r3, r3, lsl #2
 8011158:	ebae 0bcb 	sub.w	fp, lr, fp, lsl #3
 801115c:	f8cd b008 	str.w	fp, [sp, #8]
 8011160:	7933      	ldrb	r3, [r6, #4]
 8011162:	f8cd 900c 	str.w	r9, [sp, #12]
 8011166:	9301      	str	r3, [sp, #4]
 8011168:	4603      	mov	r3, r0
 801116a:	e001      	b.n	8011170 <??optm_conn_param_5>

0801116c <??optm_conn_param_6>:
 801116c:	1c49      	adds	r1, r1, #1
 801116e:	1d1b      	adds	r3, r3, #4

08011170 <??optm_conn_param_5>:
 8011170:	9801      	ldr	r0, [sp, #4]
 8011172:	4281      	cmp	r1, r0
 8011174:	da30      	bge.n	80111d8 <??optm_conn_param_7>
 8011176:	6898      	ldr	r0, [r3, #8]
 8011178:	b370      	cbz	r0, 80111d8 <??optm_conn_param_7>
 801117a:	f100 0660 	add.w	r6, r0, #96	; 0x60
 801117e:	f8b6 9026 	ldrh.w	r9, [r6, #38]	; 0x26
 8011182:	f64f 7bff 	movw	fp, #65535	; 0xffff
 8011186:	45d9      	cmp	r9, fp
 8011188:	d026      	beq.n	80111d8 <??optm_conn_param_7>
 801118a:	f8dd b00c 	ldr.w	fp, [sp, #12]
 801118e:	4558      	cmp	r0, fp
 8011190:	d0ec      	beq.n	801116c <??optm_conn_param_6>
 8011192:	6830      	ldr	r0, [r6, #0]
 8011194:	454a      	cmp	r2, r9
 8011196:	4448      	add	r0, r9
 8011198:	bf28      	it	cs
 801119a:	4290      	cmpcs	r0, r2
 801119c:	d21b      	bcs.n	80111d6 <??optm_conn_param_8>
 801119e:	45ce      	cmp	lr, r9
 80111a0:	bf28      	it	cs
 80111a2:	4570      	cmpcs	r0, lr
 80111a4:	d217      	bcs.n	80111d6 <??optm_conn_param_8>
 80111a6:	4591      	cmp	r9, r2
 80111a8:	bf28      	it	cs
 80111aa:	4586      	cmpcs	lr, r0
 80111ac:	d213      	bcs.n	80111d6 <??optm_conn_param_8>
 80111ae:	9e00      	ldr	r6, [sp, #0]
 80111b0:	42b0      	cmp	r0, r6
 80111b2:	d30a      	bcc.n	80111ca <??optm_conn_param_9>
 80111b4:	46b3      	mov	fp, r6
 80111b6:	fbb0 fbfb 	udiv	fp, r0, fp
 80111ba:	fb0b fb0c 	mul.w	fp, fp, ip
 80111be:	eb0b 068b 	add.w	r6, fp, fp, lsl #2
 80111c2:	eba0 00c6 	sub.w	r0, r0, r6, lsl #3
 80111c6:	4290      	cmp	r0, r2
 80111c8:	d205      	bcs.n	80111d6 <??optm_conn_param_8>

080111ca <??optm_conn_param_9>:
 80111ca:	9800      	ldr	r0, [sp, #0]
 80111cc:	4586      	cmp	lr, r0
 80111ce:	bf24      	itt	cs
 80111d0:	9e02      	ldrcs	r6, [sp, #8]
 80111d2:	454e      	cmpcs	r6, r9
 80111d4:	d3ca      	bcc.n	801116c <??optm_conn_param_6>

080111d6 <??optm_conn_param_8>:
 80111d6:	2420      	movs	r4, #32

080111d8 <??optm_conn_param_7>:
 80111d8:	b114      	cbz	r4, 80111e0 <??optm_conn_param_1>
 80111da:	2000      	movs	r0, #0
 80111dc:	81b8      	strh	r0, [r7, #12]
 80111de:	e01e      	b.n	801121e <??optm_conn_param_0>

080111e0 <??optm_conn_param_1>:
 80111e0:	4545      	cmp	r5, r8
 80111e2:	d01c      	beq.n	801121e <??optm_conn_param_0>
 80111e4:	8a79      	ldrh	r1, [r7, #18]
 80111e6:	89ba      	ldrh	r2, [r7, #12]
 80111e8:	f8ba 0016 	ldrh.w	r0, [sl, #22]
 80111ec:	da08      	bge.n	8011200 <??optm_conn_param_10>
 80111ee:	eba8 0505 	sub.w	r5, r8, r5
 80111f2:	fb00 2505 	mla	r5, r0, r5, r2
 80111f6:	fb95 f0f1 	sdiv	r0, r5, r1
 80111fa:	fb01 5510 	mls	r5, r1, r0, r5
 80111fe:	e00d      	b.n	801121c <??optm_conn_param_11>

08011200 <??optm_conn_param_10>:
 8011200:	eba5 0508 	sub.w	r5, r5, r8
 8011204:	4345      	muls	r5, r0
 8011206:	1aad      	subs	r5, r5, r2
 8011208:	fb95 f0f1 	sdiv	r0, r5, r1
 801120c:	fb01 5510 	mls	r5, r1, r0, r5
 8011210:	b2ad      	uxth	r5, r5
 8011212:	1b48      	subs	r0, r1, r5
 8011214:	fb90 f5f1 	sdiv	r5, r0, r1
 8011218:	fb01 0515 	mls	r5, r1, r5, r0

0801121c <??optm_conn_param_11>:
 801121c:	81bd      	strh	r5, [r7, #12]

0801121e <??optm_conn_param_0>:
 801121e:	4620      	mov	r0, r4
 8011220:	f7fe bd06 	b.w	800fc30 <?Subroutine2>

08011224 <calc_win_offset>:
 8011224:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8011226:	6f02      	ldr	r2, [r0, #112]	; 0x70
 8011228:	460c      	mov	r4, r1
 801122a:	6d06      	ldr	r6, [r0, #80]	; 0x50
 801122c:	f102 0588 	add.w	r5, r2, #136	; 0x88
 8011230:	88ab      	ldrh	r3, [r5, #4]
 8011232:	f8b2 10da 	ldrh.w	r1, [r2, #218]	; 0xda
 8011236:	8ad0      	ldrh	r0, [r2, #22]
 8011238:	4f17      	ldr	r7, [pc, #92]	; (8011298 <??DataTable37>)
 801123a:	1a5b      	subs	r3, r3, r1
 801123c:	6b79      	ldr	r1, [r7, #52]	; 0x34
 801123e:	4343      	muls	r3, r0
 8011240:	1e48      	subs	r0, r1, #1
 8011242:	4180      	sbcs	r0, r0
 8011244:	eb03 0283 	add.w	r2, r3, r3, lsl #2
 8011248:	43c0      	mvns	r0, r0
 801124a:	eb06 06c2 	add.w	r6, r6, r2, lsl #3
 801124e:	0fc0      	lsrs	r0, r0, #31
 8011250:	f7ee ffbe 	bl	80001d0 <bsp_assert>
 8011254:	6b78      	ldr	r0, [r7, #52]	; 0x34
 8011256:	eb00 0180 	add.w	r1, r0, r0, lsl #2
 801125a:	00c9      	lsls	r1, r1, #3
 801125c:	fbb6 f2f1 	udiv	r2, r6, r1
 8011260:	eb00 0780 	add.w	r7, r0, r0, lsl #2
 8011264:	eb04 07c7 	add.w	r7, r4, r7, lsl #3
 8011268:	4342      	muls	r2, r0
 801126a:	b289      	uxth	r1, r1
 801126c:	190c      	adds	r4, r1, r4
 801126e:	eb02 0382 	add.w	r3, r2, r2, lsl #2
 8011272:	eba6 06c3 	sub.w	r6, r6, r3, lsl #3
 8011276:	1bbf      	subs	r7, r7, r6
 8011278:	b2b6      	uxth	r6, r6
 801127a:	1ba4      	subs	r4, r4, r6
 801127c:	fb94 f4f1 	sdiv	r4, r4, r1
 8011280:	4360      	muls	r0, r4
 8011282:	eb00 0680 	add.w	r6, r0, r0, lsl #2
 8011286:	eba7 07c6 	sub.w	r7, r7, r6, lsl #3
 801128a:	b2bf      	uxth	r7, r7
 801128c:	f64c 40cd 	movw	r0, #52429	; 0xcccd
 8011290:	4378      	muls	r0, r7
 8011292:	0d40      	lsrs	r0, r0, #21
 8011294:	8028      	strh	r0, [r5, #0]
 8011296:	bdf1      	pop	{r0, r4, r5, r6, r7, pc}

08011298 <??DataTable37>:
 8011298:	1750 2000                                   P.. 

0801129c <conn_param_req>:
 801129c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 801129e:	4605      	mov	r5, r0
 80112a0:	6f28      	ldr	r0, [r5, #112]	; 0x70
 80112a2:	f100 047c 	add.w	r4, r0, #124	; 0x7c
 80112a6:	8861      	ldrh	r1, [r4, #2]
 80112a8:	f100 028e 	add.w	r2, r0, #142	; 0x8e
 80112ac:	8820      	ldrh	r0, [r4, #0]
 80112ae:	f7fd fda8 	bl	800ee02 <evnt_schdlr_choose_conn_intrv>
 80112b2:	8a61      	ldrh	r1, [r4, #18]
 80112b4:	2800      	cmp	r0, #0
 80112b6:	8021      	strh	r1, [r4, #0]
 80112b8:	8061      	strh	r1, [r4, #2]
 80112ba:	bf02      	ittt	eq
 80112bc:	f8b5 0086 	ldrheq.w	r0, [r5, #134]	; 0x86
 80112c0:	f64f 71ff 	movweq	r1, #65535	; 0xffff
 80112c4:	4288      	cmpeq	r0, r1
 80112c6:	d147      	bne.n	8011358 <??conn_param_req_0>
 80112c8:	e9d5 2324 	ldrd	r2, r3, [r5, #144]	; 0x90
 80112cc:	2b00      	cmp	r3, #0
 80112ce:	bf0f      	iteee	eq
 80112d0:	f5b2 7f80 	cmpeq.w	r2, #256	; 0x100
 80112d4:	4c7a      	ldrne	r4, [pc, #488]	; (80114c0 <??DataTable41_6>)
 80112d6:	6b60      	ldrne	r0, [r4, #52]	; 0x34
 80112d8:	2800      	cmpne	r0, #0
 80112da:	d03d      	beq.n	8011358 <??conn_param_req_0>
 80112dc:	6e28      	ldr	r0, [r5, #96]	; 0x60
 80112de:	2100      	movs	r1, #0
 80112e0:	3028      	adds	r0, #40	; 0x28
 80112e2:	f7fe fba7 	bl	800fa34 <get_slot_offset>
 80112e6:	f100 0628 	add.w	r6, r0, #40	; 0x28
 80112ea:	6f28      	ldr	r0, [r5, #112]	; 0x70
 80112ec:	6d2d      	ldr	r5, [r5, #80]	; 0x50
 80112ee:	f100 0788 	add.w	r7, r0, #136	; 0x88
 80112f2:	88ba      	ldrh	r2, [r7, #4]
 80112f4:	f8b0 10da 	ldrh.w	r1, [r0, #218]	; 0xda
 80112f8:	8ac0      	ldrh	r0, [r0, #22]
 80112fa:	1a52      	subs	r2, r2, r1
 80112fc:	6b61      	ldr	r1, [r4, #52]	; 0x34
 80112fe:	4342      	muls	r2, r0
 8011300:	1e48      	subs	r0, r1, #1
 8011302:	4180      	sbcs	r0, r0
 8011304:	eb02 0382 	add.w	r3, r2, r2, lsl #2
 8011308:	43c0      	mvns	r0, r0
 801130a:	eb05 05c3 	add.w	r5, r5, r3, lsl #3
 801130e:	0fc0      	lsrs	r0, r0, #31
 8011310:	f7ee ff5e 	bl	80001d0 <bsp_assert>
 8011314:	6b60      	ldr	r0, [r4, #52]	; 0x34
 8011316:	eb00 0180 	add.w	r1, r0, r0, lsl #2
 801131a:	00c9      	lsls	r1, r1, #3
 801131c:	fbb5 f2f1 	udiv	r2, r5, r1
 8011320:	eb00 0480 	add.w	r4, r0, r0, lsl #2
 8011324:	eb06 04c4 	add.w	r4, r6, r4, lsl #3
 8011328:	4342      	muls	r2, r0
 801132a:	b289      	uxth	r1, r1
 801132c:	b2b6      	uxth	r6, r6
 801132e:	eb02 0382 	add.w	r3, r2, r2, lsl #2
 8011332:	eba5 05c3 	sub.w	r5, r5, r3, lsl #3
 8011336:	1b64      	subs	r4, r4, r5
 8011338:	198e      	adds	r6, r1, r6
 801133a:	b2ad      	uxth	r5, r5
 801133c:	1b76      	subs	r6, r6, r5
 801133e:	fb96 f5f1 	sdiv	r5, r6, r1
 8011342:	4368      	muls	r0, r5
 8011344:	eb00 0680 	add.w	r6, r0, r0, lsl #2
 8011348:	eba4 04c6 	sub.w	r4, r4, r6, lsl #3
 801134c:	b2a4      	uxth	r4, r4
 801134e:	f64c 40cd 	movw	r0, #52429	; 0xcccd
 8011352:	4360      	muls	r0, r4
 8011354:	0d40      	lsrs	r0, r0, #21
 8011356:	8038      	strh	r0, [r7, #0]

08011358 <??conn_param_req_0>:
 8011358:	bdf1      	pop	{r0, r4, r5, r6, r7, pc}

0801135a <evnt_schdlr_multi_role_instance>:
 801135a:	485a      	ldr	r0, [pc, #360]	; (80114c4 <??DataTable41_7>)
 801135c:	4770      	bx	lr
	...

08011360 <evnt_schdlr_update_master_conn_params>:
 8011360:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8011364:	4683      	mov	fp, r0
 8011366:	980a      	ldr	r0, [sp, #40]	; 0x28
 8011368:	2700      	movs	r7, #0
 801136a:	f240 48e2 	movw	r8, #1250	; 0x4e2
 801136e:	460d      	mov	r5, r1
 8011370:	4692      	mov	sl, r2
 8011372:	461e      	mov	r6, r3
 8011374:	46c1      	mov	r9, r8
 8011376:	2825      	cmp	r0, #37	; 0x25
 8011378:	da08      	bge.n	801138c <??evnt_schdlr_update_master_conn_params_1>
 801137a:	f1ba 0f04 	cmp.w	sl, #4
 801137e:	bf16      	itet	ne
 8011380:	f1ba 0f03 	cmpne.w	sl, #3
 8011384:	f640 69a6 	movweq	r9, #3750	; 0xea6
 8011388:	f640 19c4 	movwne	r9, #2500	; 0x9c4

0801138c <??evnt_schdlr_update_master_conn_params_1>:
 801138c:	980b      	ldr	r0, [sp, #44]	; 0x2c
 801138e:	f002 f8b3 	bl	80134f8 <pdu_trnsprt_hndlr_get_payload_lngth>
 8011392:	2200      	movs	r2, #0
 8011394:	4651      	mov	r1, sl
 8011396:	f7f1 fbe9 	bl	8002b6c <evnt_schdlr_get_pckt_durn_on_air>
 801139a:	4682      	mov	sl, r0
 801139c:	484a      	ldr	r0, [pc, #296]	; (80114c8 <??DataTable41_8>)
 801139e:	6a81      	ldr	r1, [r0, #40]	; 0x28
 80113a0:	6f08      	ldr	r0, [r1, #112]	; 0x70
 80113a2:	8d00      	ldrh	r0, [r0, #40]	; 0x28
 80113a4:	2808      	cmp	r0, #8
 80113a6:	bfba      	itte	lt
 80113a8:	4948      	ldrlt	r1, [pc, #288]	; (80114cc <??DataTable41_9>)
 80113aa:	f851 4020 	ldrlt.w	r4, [r1, r0, lsl #2]
 80113ae:	2400      	movge	r4, #0
 80113b0:	f88d 6000 	strb.w	r6, [sp]
 80113b4:	8ae0      	ldrh	r0, [r4, #22]
 80113b6:	f89d 2000 	ldrb.w	r2, [sp]
 80113ba:	eb00 0180 	add.w	r1, r0, r0, lsl #2
 80113be:	00ce      	lsls	r6, r1, #3
 80113c0:	1e52      	subs	r2, r2, #1
 80113c2:	2a03      	cmp	r2, #3
 80113c4:	d809      	bhi.n	80113da <??evnt_schdlr_update_master_conn_params_2>
 80113c6:	e8df f002 	tbb	[pc, r2]

080113ca <??evnt_schdlr_update_master_conn_params_0>:
 80113ca:	020b 0406                                   ....

080113ce <??evnt_schdlr_update_master_conn_params_3>:
 80113ce:	2701      	movs	r7, #1
 80113d0:	e006      	b.n	80113e0 <??evnt_schdlr_update_master_conn_params_4>

080113d2 <??evnt_schdlr_update_master_conn_params_5>:
 80113d2:	2702      	movs	r7, #2
 80113d4:	e004      	b.n	80113e0 <??evnt_schdlr_update_master_conn_params_4>

080113d6 <??evnt_schdlr_update_master_conn_params_6>:
 80113d6:	2703      	movs	r7, #3
 80113d8:	e002      	b.n	80113e0 <??evnt_schdlr_update_master_conn_params_4>

080113da <??evnt_schdlr_update_master_conn_params_2>:
 80113da:	2000      	movs	r0, #0
 80113dc:	f7ee fef8 	bl	80001d0 <bsp_assert>

080113e0 <??evnt_schdlr_update_master_conn_params_4>:
 80113e0:	a03b      	add	r0, pc, #236	; (adr r0, 80114d0 <conn_req_time_us>)
 80113e2:	f830 1017 	ldrh.w	r1, [r0, r7, lsl #1]
 80113e6:	2201      	movs	r2, #1
 80113e8:	4658      	mov	r0, fp
 80113ea:	3198      	adds	r1, #152	; 0x98
 80113ec:	4451      	add	r1, sl
 80113ee:	f003 fa4f 	bl	8014890 <ble_time_add_uint>
 80113f2:	6ba0      	ldr	r0, [r4, #56]	; 0x38
 80113f4:	f8db 1000 	ldr.w	r1, [fp]
 80113f8:	1a09      	subs	r1, r1, r0
 80113fa:	fbb1 f1f6 	udiv	r1, r1, r6
 80113fe:	fb06 0001 	mla	r0, r6, r1, r0
 8011402:	4659      	mov	r1, fp
 8011404:	1830      	adds	r0, r6, r0
 8011406:	63a0      	str	r0, [r4, #56]	; 0x38
 8011408:	2000      	movs	r0, #0
 801140a:	63e0      	str	r0, [r4, #60]	; 0x3c
 801140c:	f104 0038 	add.w	r0, r4, #56	; 0x38
 8011410:	f003 f9b7 	bl	8014782 <ble_time_diff_us>
 8011414:	6028      	str	r0, [r5, #0]
 8011416:	f89d 0000 	ldrb.w	r0, [sp]
 801141a:	2100      	movs	r1, #0
 801141c:	f7fb fad2 	bl	800c9c4 <llhwc_get_hw_setup_time>
 8011420:	6829      	ldr	r1, [r5, #0]
 8011422:	1841      	adds	r1, r0, r1
 8011424:	f209 40e2 	addw	r0, r9, #1250	; 0x4e2
 8011428:	4281      	cmp	r1, r0
 801142a:	d208      	bcs.n	801143e <??evnt_schdlr_update_master_conn_params_7>
 801142c:	8ae2      	ldrh	r2, [r4, #22]
 801142e:	fb08 1802 	mla	r8, r8, r2, r1
 8011432:	f8c5 8000 	str.w	r8, [r5]
 8011436:	6ba0      	ldr	r0, [r4, #56]	; 0x38
 8011438:	1836      	adds	r6, r6, r0
 801143a:	63a6      	str	r6, [r4, #56]	; 0x38
 801143c:	6829      	ldr	r1, [r5, #0]

0801143e <??evnt_schdlr_update_master_conn_params_7>:
 801143e:	eba1 0909 	sub.w	r9, r1, r9
 8011442:	f2a9 298a 	subw	r9, r9, #650	; 0x28a
 8011446:	491a      	ldr	r1, [pc, #104]	; (80114b0 <??DataTable41_2>)
 8011448:	fba9 1001 	umull	r1, r0, r9, r1
 801144c:	0a80      	lsrs	r0, r0, #10
 801144e:	8220      	strh	r0, [r4, #16]
 8011450:	6028      	str	r0, [r5, #0]
 8011452:	e8bd 8ff1 	ldmia.w	sp!, {r0, r4, r5, r6, r7, r8, r9, sl, fp, pc}

08011456 <evnt_util_check_duplicate_access_addr>:
 8011456:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 801145a:	4681      	mov	r9, r0
 801145c:	2600      	movs	r6, #0
 801145e:	2700      	movs	r7, #0
 8011460:	2400      	movs	r4, #0
 8011462:	f8df 805c 	ldr.w	r8, [pc, #92]	; 80114c0 <??DataTable41_6>
 8011466:	e001      	b.n	801146c <??evnt_util_check_duplicate_access_addr_0>

08011468 <??evnt_util_check_duplicate_access_addr_1>:
 8011468:	1c64      	adds	r4, r4, #1
 801146a:	b2e4      	uxtb	r4, r4

0801146c <??evnt_util_check_duplicate_access_addr_0>:
 801146c:	f898 0038 	ldrb.w	r0, [r8, #56]	; 0x38
 8011470:	4284      	cmp	r4, r0
 8011472:	da16      	bge.n	80114a2 <??evnt_util_check_duplicate_access_addr_2>
 8011474:	eb08 0584 	add.w	r5, r8, r4, lsl #2
 8011478:	68a8      	ldr	r0, [r5, #8]
 801147a:	b100      	cbz	r0, 801147e <??evnt_util_check_duplicate_access_addr_3>
 801147c:	2001      	movs	r0, #1

0801147e <??evnt_util_check_duplicate_access_addr_3>:
 801147e:	f7ee fea7 	bl	80001d0 <bsp_assert>
 8011482:	68a8      	ldr	r0, [r5, #8]
 8011484:	f100 0270 	add.w	r2, r0, #112	; 0x70
 8011488:	e9d2 0108 	ldrd	r0, r1, [r2, #32]
 801148c:	b929      	cbnz	r1, 801149a <??evnt_util_check_duplicate_access_addr_4>
 801148e:	2880      	cmp	r0, #128	; 0x80
 8011490:	bf12      	itee	ne
 8011492:	f5b0 7f80 	cmpne.w	r0, #256	; 0x100
 8011496:	6810      	ldreq	r0, [r2, #0]
 8011498:	6ac7      	ldreq	r7, [r0, #44]	; 0x2c

0801149a <??evnt_util_check_duplicate_access_addr_4>:
 801149a:	454f      	cmp	r7, r9
 801149c:	d1e4      	bne.n	8011468 <??evnt_util_check_duplicate_access_addr_1>
 801149e:	f04f 36ff 	mov.w	r6, #4294967295	; 0xffffffff

080114a2 <??evnt_util_check_duplicate_access_addr_2>:
 80114a2:	4630      	mov	r0, r6
 80114a4:	e8bd 83f2 	ldmia.w	sp!, {r1, r4, r5, r6, r7, r8, r9, pc}

080114a8 <??DataTable41>:
 80114a8:	a120 0007                                    ...

080114ac <??DataTable41_1>:
 80114ac:	851f 51eb                                   ...Q

080114b0 <??DataTable41_2>:
 80114b0:	1759 d1b7                                   Y...

080114b4 <??DataTable41_3>:
 80114b4:	18c0 2000                                   ... 

080114b8 <??DataTable41_4>:
 80114b8:	0048 2000                                   H.. 

080114bc <??DataTable41_5>:
 80114bc:	174c 2000                                   L.. 

080114c0 <??DataTable41_6>:
 80114c0:	1750 2000                                   P.. 

080114c4 <??DataTable41_7>:
 80114c4:	1d6c 0803                                   l...

080114c8 <??DataTable41_8>:
 80114c8:	0000 2000                                   ... 

080114cc <??DataTable41_9>:
 80114cc:	03e8 2000                                   ... 

080114d0 <conn_req_time_us>:
 80114d0:	0160 00b4 03ee 0b50                         `.....P.

080114d8 <non_conn_mngr_reset>:
 80114d8:	b538      	push	{r3, r4, r5, lr}
 80114da:	f8df 4b1c 	ldr.w	r4, [pc, #2844]	; 8011ff8 <??DataTable9>
 80114de:	f104 0570 	add.w	r5, r4, #112	; 0x70
 80114e2:	69e8      	ldr	r0, [r5, #28]
 80114e4:	b118      	cbz	r0, 80114ee <??non_conn_mngr_reset_0>
 80114e6:	f7f0 f806 	bl	80014f6 <evnt_schdlr_unrgstr_evnt>
 80114ea:	2000      	movs	r0, #0
 80114ec:	61e8      	str	r0, [r5, #28]

080114ee <??non_conn_mngr_reset_0>:
 80114ee:	68a8      	ldr	r0, [r5, #8]
 80114f0:	b120      	cbz	r0, 80114fc <??non_conn_mngr_reset_1>
 80114f2:	1f00      	subs	r0, r0, #4
 80114f4:	f7f3 fe92 	bl	800521c <os_mem_pool_free>
 80114f8:	2000      	movs	r0, #0
 80114fa:	60a8      	str	r0, [r5, #8]

080114fc <??non_conn_mngr_reset_1>:
 80114fc:	2240      	movs	r2, #64	; 0x40
 80114fe:	2100      	movs	r1, #0
 8011500:	f104 0068 	add.w	r0, r4, #104	; 0x68
 8011504:	f7fd fb71 	bl	800ebea <ble_memset>
 8011508:	20ff      	movs	r0, #255	; 0xff
 801150a:	7128      	strb	r0, [r5, #4]
 801150c:	2010      	movs	r0, #16
 801150e:	8028      	strh	r0, [r5, #0]
 8011510:	8068      	strh	r0, [r5, #2]
 8011512:	6de0      	ldr	r0, [r4, #92]	; 0x5c
 8011514:	2101      	movs	r1, #1
 8011516:	f884 1091 	strb.w	r1, [r4, #145]	; 0x91
 801151a:	b118      	cbz	r0, 8011524 <??non_conn_mngr_reset_2>
 801151c:	f7ef ffeb 	bl	80014f6 <evnt_schdlr_unrgstr_evnt>
 8011520:	2000      	movs	r0, #0
 8011522:	65e0      	str	r0, [r4, #92]	; 0x5c

08011524 <??non_conn_mngr_reset_2>:
 8011524:	6b20      	ldr	r0, [r4, #48]	; 0x30
 8011526:	b110      	cbz	r0, 801152e <??non_conn_mngr_reset_3>
 8011528:	1f00      	subs	r0, r0, #4
 801152a:	f7f3 fe77 	bl	800521c <os_mem_pool_free>

0801152e <??non_conn_mngr_reset_3>:
 801152e:	6ca0      	ldr	r0, [r4, #72]	; 0x48
 8011530:	b110      	cbz	r0, 8011538 <??non_conn_mngr_reset_4>
 8011532:	1f00      	subs	r0, r0, #4
 8011534:	f7f3 fe72 	bl	800521c <os_mem_pool_free>

08011538 <??non_conn_mngr_reset_4>:
 8011538:	2268      	movs	r2, #104	; 0x68
 801153a:	2100      	movs	r1, #0
 801153c:	4620      	mov	r0, r4
 801153e:	f7fd fb54 	bl	800ebea <ble_memset>
 8011542:	2001      	movs	r0, #1
 8011544:	f884 0061 	strb.w	r0, [r4, #97]	; 0x61
 8011548:	f44f 6000 	mov.w	r0, #2048	; 0x800
 801154c:	61a0      	str	r0, [r4, #24]
 801154e:	61e0      	str	r0, [r4, #28]
 8011550:	2007      	movs	r0, #7
 8011552:	f884 0020 	strb.w	r0, [r4, #32]
 8011556:	f104 05c0 	add.w	r5, r4, #192	; 0xc0
 801155a:	69a8      	ldr	r0, [r5, #24]
 801155c:	b118      	cbz	r0, 8011566 <??non_conn_mngr_reset_5>
 801155e:	f7ef ffca 	bl	80014f6 <evnt_schdlr_unrgstr_evnt>
 8011562:	2000      	movs	r0, #0
 8011564:	61a8      	str	r0, [r5, #24]

08011566 <??non_conn_mngr_reset_5>:
 8011566:	6828      	ldr	r0, [r5, #0]
 8011568:	b110      	cbz	r0, 8011570 <??non_conn_mngr_reset_6>
 801156a:	1f00      	subs	r0, r0, #4
 801156c:	f7f3 fe56 	bl	800521c <os_mem_pool_free>

08011570 <??non_conn_mngr_reset_6>:
 8011570:	2244      	movs	r2, #68	; 0x44
 8011572:	2100      	movs	r1, #0
 8011574:	f104 00a8 	add.w	r0, r4, #168	; 0xa8
 8011578:	f7fd fb37 	bl	800ebea <ble_memset>
 801157c:	2001      	movs	r0, #1
 801157e:	7728      	strb	r0, [r5, #28]
 8011580:	bd31      	pop	{r0, r4, r5, pc}

08011582 <non_conn_mngr_add_rmv_clr_device_white_list>:
 8011582:	b5f0      	push	{r4, r5, r6, r7, lr}
 8011584:	b083      	sub	sp, #12
 8011586:	2400      	movs	r4, #0
 8011588:	4605      	mov	r5, r0
 801158a:	460f      	mov	r7, r1
 801158c:	4616      	mov	r6, r2
 801158e:	9402      	str	r4, [sp, #8]
 8011590:	b91d      	cbnz	r5, 801159a <??non_conn_mngr_add_rmv_clr_device_white_list_0>
 8011592:	2e02      	cmp	r6, #2
 8011594:	bf18      	it	ne
 8011596:	2411      	movne	r4, #17
 8011598:	d174      	bne.n	8011684 <??non_conn_mngr_add_rmv_clr_device_white_list_1>

0801159a <??non_conn_mngr_add_rmv_clr_device_white_list_0>:
 801159a:	f8df 1a5c 	ldr.w	r1, [pc, #2652]	; 8011ff8 <??DataTable9>
 801159e:	f891 0091 	ldrb.w	r0, [r1, #145]	; 0x91
 80115a2:	f101 0261 	add.w	r2, r1, #97	; 0x61
 80115a6:	2800      	cmp	r0, #0
 80115a8:	bf04      	itt	eq
 80115aa:	7d93      	ldrbeq	r3, [r2, #22]
 80115ac:	2b01      	cmpeq	r3, #1
 80115ae:	d065      	beq.n	801167c <??non_conn_mngr_add_rmv_clr_device_white_list_2>
 80115b0:	7810      	ldrb	r0, [r2, #0]
 80115b2:	b968      	cbnz	r0, 80115d0 <??non_conn_mngr_add_rmv_clr_device_white_list_3>
 80115b4:	f891 002c 	ldrb.w	r0, [r1, #44]	; 0x2c
 80115b8:	2801      	cmp	r0, #1
 80115ba:	bf1c      	itt	ne
 80115bc:	2802      	cmpne	r0, #2
 80115be:	2803      	cmpne	r0, #3
 80115c0:	d05c      	beq.n	801167c <??non_conn_mngr_add_rmv_clr_device_white_list_2>
 80115c2:	f8df 2a38 	ldr.w	r2, [pc, #2616]	; 8011ffc <??DataTable9_1>
 80115c6:	7810      	ldrb	r0, [r2, #0]
 80115c8:	b110      	cbz	r0, 80115d0 <??non_conn_mngr_add_rmv_clr_device_white_list_3>
 80115ca:	7f10      	ldrb	r0, [r2, #28]
 80115cc:	2803      	cmp	r0, #3
 80115ce:	d055      	beq.n	801167c <??non_conn_mngr_add_rmv_clr_device_white_list_2>

080115d0 <??non_conn_mngr_add_rmv_clr_device_white_list_3>:
 80115d0:	31bd      	adds	r1, #189	; 0xbd
 80115d2:	7fc8      	ldrb	r0, [r1, #31]
 80115d4:	2800      	cmp	r0, #0
 80115d6:	bf04      	itt	eq
 80115d8:	7809      	ldrbeq	r1, [r1, #0]
 80115da:	2901      	cmpeq	r1, #1
 80115dc:	d04e      	beq.n	801167c <??non_conn_mngr_add_rmv_clr_device_white_list_2>
 80115de:	0030      	movs	r0, r6
 80115e0:	d007      	beq.n	80115f2 <??non_conn_mngr_add_rmv_clr_device_white_list_4>
 80115e2:	2802      	cmp	r0, #2
 80115e4:	d001      	beq.n	80115ea <??non_conn_mngr_add_rmv_clr_device_white_list_5>
 80115e6:	d304      	bcc.n	80115f2 <??non_conn_mngr_add_rmv_clr_device_white_list_4>
 80115e8:	e048      	b.n	801167c <??non_conn_mngr_add_rmv_clr_device_white_list_2>

080115ea <??non_conn_mngr_add_rmv_clr_device_white_list_5>:
 80115ea:	2000      	movs	r0, #0
 80115ec:	f7f8 fa5e 	bl	8009aac <llhwc_lst_clr>
 80115f0:	e048      	b.n	8011684 <??non_conn_mngr_add_rmv_clr_device_white_list_1>

080115f2 <??non_conn_mngr_add_rmv_clr_device_white_list_4>:
 80115f2:	2100      	movs	r1, #0
 80115f4:	9100      	str	r1, [sp, #0]
 80115f6:	462b      	mov	r3, r5
 80115f8:	463a      	mov	r2, r7
 80115fa:	f7f8 f853 	bl	80096a4 <llhwc_lst_add_rmv_dev>
 80115fe:	0004      	movs	r4, r0
 8011600:	bf01      	itttt	eq
 8011602:	2f01      	cmpeq	r7, #1
 8011604:	7968      	ldrbeq	r0, [r5, #5]
 8011606:	0980      	lsreq	r0, r0, #6
 8011608:	2801      	cmpeq	r0, #1
 801160a:	d13b      	bne.n	8011684 <??non_conn_mngr_add_rmv_clr_device_white_list_1>
 801160c:	2300      	movs	r3, #0
 801160e:	aa02      	add	r2, sp, #8
 8011610:	4629      	mov	r1, r5
 8011612:	2002      	movs	r0, #2
 8011614:	f002 fb52 	bl	8013cbc <prvcy_mngr_srch_fw_reslvng_list>
 8011618:	0004      	movs	r4, r0
 801161a:	d133      	bne.n	8011684 <??non_conn_mngr_add_rmv_clr_device_white_list_1>
 801161c:	9802      	ldr	r0, [sp, #8]
 801161e:	b150      	cbz	r0, 8011636 <??non_conn_mngr_add_rmv_clr_device_white_list_6>
 8011620:	6800      	ldr	r0, [r0, #0]
 8011622:	2e01      	cmp	r6, #1
 8011624:	d103      	bne.n	801162e <??non_conn_mngr_add_rmv_clr_device_white_list_7>
 8011626:	b2c0      	uxtb	r0, r0
 8011628:	f7f8 fa31 	bl	8009a8e <llhwc_lst_rmv_by_loc>
 801162c:	e02a      	b.n	8011684 <??non_conn_mngr_add_rmv_clr_device_white_list_1>

0801162e <??non_conn_mngr_add_rmv_clr_device_white_list_7>:
 801162e:	b2c1      	uxtb	r1, r0
 8011630:	2200      	movs	r2, #0
 8011632:	2003      	movs	r0, #3
 8011634:	e01f      	b.n	8011676 <??non_conn_mngr_add_rmv_clr_device_white_list_8>

08011636 <??non_conn_mngr_add_rmv_clr_device_white_list_6>:
 8011636:	a801      	add	r0, sp, #4
 8011638:	9000      	str	r0, [sp, #0]
 801163a:	462b      	mov	r3, r5
 801163c:	2201      	movs	r2, #1
 801163e:	2103      	movs	r1, #3
 8011640:	2000      	movs	r0, #0
 8011642:	f7f8 f82f 	bl	80096a4 <llhwc_lst_add_rmv_dev>
 8011646:	4604      	mov	r4, r0
 8011648:	2c07      	cmp	r4, #7
 801164a:	d10f      	bne.n	801166c <??non_conn_mngr_add_rmv_clr_device_white_list_9>
 801164c:	2003      	movs	r0, #3
 801164e:	f002 fda0 	bl	8014192 <prvcy_mngr_remove_random_addr_list>
 8011652:	0004      	movs	r4, r0
 8011654:	d116      	bne.n	8011684 <??non_conn_mngr_add_rmv_clr_device_white_list_1>
 8011656:	a801      	add	r0, sp, #4
 8011658:	9000      	str	r0, [sp, #0]
 801165a:	462b      	mov	r3, r5
 801165c:	2201      	movs	r2, #1
 801165e:	2103      	movs	r1, #3
 8011660:	2000      	movs	r0, #0
 8011662:	f7f8 f81f 	bl	80096a4 <llhwc_lst_add_rmv_dev>
 8011666:	0004      	movs	r4, r0
 8011668:	d10c      	bne.n	8011684 <??non_conn_mngr_add_rmv_clr_device_white_list_1>
 801166a:	e000      	b.n	801166e <??non_conn_mngr_add_rmv_clr_device_white_list_10>

0801166c <??non_conn_mngr_add_rmv_clr_device_white_list_9>:
 801166c:	b954      	cbnz	r4, 8011684 <??non_conn_mngr_add_rmv_clr_device_white_list_1>

0801166e <??non_conn_mngr_add_rmv_clr_device_white_list_10>:
 801166e:	2200      	movs	r2, #0
 8011670:	f89d 1004 	ldrb.w	r1, [sp, #4]
 8011674:	2000      	movs	r0, #0

08011676 <??non_conn_mngr_add_rmv_clr_device_white_list_8>:
 8011676:	f7f8 f9f1 	bl	8009a5c <llhwc_lst_edit_indicators>
 801167a:	e003      	b.n	8011684 <??non_conn_mngr_add_rmv_clr_device_white_list_1>

0801167c <??non_conn_mngr_add_rmv_clr_device_white_list_2>:
 801167c:	2040      	movs	r0, #64	; 0x40
 801167e:	240c      	movs	r4, #12
 8011680:	f7ee fdd6 	bl	8000230 <bsp_debug_gpio_toggle>

08011684 <??non_conn_mngr_add_rmv_clr_device_white_list_1>:
 8011684:	4620      	mov	r0, r4
 8011686:	b003      	add	sp, #12
 8011688:	bdf0      	pop	{r4, r5, r6, r7, pc}

0801168a <non_conn_mngr_interrupt>:
 801168a:	e92d 4ff4 	stmdb	sp!, {r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801168e:	4604      	mov	r4, r0
 8011690:	2000      	movs	r0, #0
 8011692:	b086      	sub	sp, #24
 8011694:	9f11      	ldr	r7, [sp, #68]	; 0x44
 8011696:	460d      	mov	r5, r1
 8011698:	9001      	str	r0, [sp, #4]
 801169a:	4681      	mov	r9, r0
 801169c:	469b      	mov	fp, r3
 801169e:	f8dd 8040 	ldr.w	r8, [sp, #64]	; 0x40
 80116a2:	2210      	movs	r2, #16
 80116a4:	2100      	movs	r1, #0
 80116a6:	a802      	add	r0, sp, #8
 80116a8:	f01f fc81 	bl	8030fae <memset>
 80116ac:	f8df a948 	ldr.w	sl, [pc, #2376]	; 8011ff8 <??DataTable9>
 80116b0:	2d00      	cmp	r5, #0
 80116b2:	bf08      	it	eq
 80116b4:	2c10      	cmpeq	r4, #16
 80116b6:	d10e      	bne.n	80116d6 <??non_conn_mngr_interrupt_0>
 80116b8:	f89a 0076 	ldrb.w	r0, [sl, #118]	; 0x76
 80116bc:	7038      	strb	r0, [r7, #0]
 80116be:	f89a 1076 	ldrb.w	r1, [sl, #118]	; 0x76
 80116c2:	4606      	mov	r6, r0
 80116c4:	1e89      	subs	r1, r1, #2
 80116c6:	2902      	cmp	r1, #2
 80116c8:	bf38      	it	cc
 80116ca:	1e80      	subcc	r0, r0, #2
 80116cc:	7038      	strb	r0, [r7, #0]
 80116ce:	2206      	movs	r2, #6
 80116d0:	f10a 0168 	add.w	r1, sl, #104	; 0x68
 80116d4:	e00d      	b.n	80116f2 <??non_conn_mngr_interrupt_1>

080116d6 <??non_conn_mngr_interrupt_0>:
 80116d6:	f89a 00be 	ldrb.w	r0, [sl, #190]	; 0xbe
 80116da:	7038      	strb	r0, [r7, #0]
 80116dc:	f89a 10be 	ldrb.w	r1, [sl, #190]	; 0xbe
 80116e0:	4606      	mov	r6, r0
 80116e2:	1e89      	subs	r1, r1, #2
 80116e4:	2902      	cmp	r1, #2
 80116e6:	bf38      	it	cc
 80116e8:	1e80      	subcc	r0, r0, #2
 80116ea:	7038      	strb	r0, [r7, #0]
 80116ec:	2206      	movs	r2, #6
 80116ee:	f10a 01a8 	add.w	r1, sl, #168	; 0xa8

080116f2 <??non_conn_mngr_interrupt_1>:
 80116f2:	4640      	mov	r0, r8
 80116f4:	f7fd fa28 	bl	800eb48 <ble_memcpy>
 80116f8:	4659      	mov	r1, fp
 80116fa:	f8dd b018 	ldr.w	fp, [sp, #24]
 80116fe:	0008      	movs	r0, r1
 8011700:	d008      	beq.n	8011714 <??non_conn_mngr_interrupt_2>
 8011702:	2901      	cmp	r1, #1
 8011704:	d125      	bne.n	8011752 <??non_conn_mngr_interrupt_3>
 8011706:	f89b 0005 	ldrb.w	r0, [fp, #5]
 801170a:	0980      	lsrs	r0, r0, #6
 801170c:	2803      	cmp	r0, #3
 801170e:	bf18      	it	ne
 8011710:	2800      	cmpne	r0, #0
 8011712:	d11e      	bne.n	8011752 <??non_conn_mngr_interrupt_3>

08011714 <??non_conn_mngr_interrupt_2>:
 8011714:	2d00      	cmp	r5, #0
 8011716:	bf08      	it	eq
 8011718:	2c10      	cmpeq	r4, #16
 801171a:	d10b      	bne.n	8011734 <??non_conn_mngr_interrupt_4>
 801171c:	f89a 0076 	ldrb.w	r0, [sl, #118]	; 0x76
 8011720:	1e80      	subs	r0, r0, #2
 8011722:	2802      	cmp	r0, #2
 8011724:	d23d      	bcs.n	80117a2 <??non_conn_mngr_interrupt_5>
 8011726:	4641      	mov	r1, r8
 8011728:	4658      	mov	r0, fp
 801172a:	f002 f8f9 	bl	8013920 <prvcy_mngr_get_local_rpa>
 801172e:	2800      	cmp	r0, #0
 8011730:	d137      	bne.n	80117a2 <??non_conn_mngr_interrupt_5>
 8011732:	e031      	b.n	8011798 <??non_conn_mngr_interrupt_6>

08011734 <??non_conn_mngr_interrupt_4>:
 8011734:	2d00      	cmp	r5, #0
 8011736:	bf08      	it	eq
 8011738:	2c40      	cmpeq	r4, #64	; 0x40
 801173a:	d132      	bne.n	80117a2 <??non_conn_mngr_interrupt_5>
 801173c:	f89a 00be 	ldrb.w	r0, [sl, #190]	; 0xbe
 8011740:	1e80      	subs	r0, r0, #2
 8011742:	2802      	cmp	r0, #2
 8011744:	d22d      	bcs.n	80117a2 <??non_conn_mngr_interrupt_5>
 8011746:	4641      	mov	r1, r8
 8011748:	4658      	mov	r0, fp
 801174a:	f002 f8e9 	bl	8013920 <prvcy_mngr_get_local_rpa>
 801174e:	bb40      	cbnz	r0, 80117a2 <??non_conn_mngr_interrupt_5>
 8011750:	e022      	b.n	8011798 <??non_conn_mngr_interrupt_6>

08011752 <??non_conn_mngr_interrupt_3>:
 8011752:	466b      	mov	r3, sp
 8011754:	465a      	mov	r2, fp
 8011756:	2003      	movs	r0, #3
 8011758:	f7f7 fea2 	bl	80094a0 <llhwc_lst_search>
 801175c:	f89d 0000 	ldrb.w	r0, [sp]
 8011760:	07c1      	lsls	r1, r0, #31
 8011762:	d41c      	bmi.n	801179e <??non_conn_mngr_interrupt_7>
 8011764:	1eb6      	subs	r6, r6, #2
 8011766:	2e02      	cmp	r6, #2
 8011768:	d21b      	bcs.n	80117a2 <??non_conn_mngr_interrupt_5>
 801176a:	2300      	movs	r3, #0
 801176c:	aa01      	add	r2, sp, #4
 801176e:	4669      	mov	r1, sp
 8011770:	2004      	movs	r0, #4
 8011772:	f002 faa3 	bl	8013cbc <prvcy_mngr_srch_fw_reslvng_list>
 8011776:	9801      	ldr	r0, [sp, #4]
 8011778:	b150      	cbz	r0, 8011790 <??non_conn_mngr_interrupt_8>
 801177a:	2206      	movs	r2, #6
 801177c:	a902      	add	r1, sp, #8
 801177e:	f7fd fa6e 	bl	800ec5e <ble_memcmp>
 8011782:	b170      	cbz	r0, 80117a2 <??non_conn_mngr_interrupt_5>
 8011784:	9901      	ldr	r1, [sp, #4]
 8011786:	2206      	movs	r2, #6
 8011788:	4640      	mov	r0, r8
 801178a:	f7fd f9dd 	bl	800eb48 <ble_memcpy>
 801178e:	e003      	b.n	8011798 <??non_conn_mngr_interrupt_6>

08011790 <??non_conn_mngr_interrupt_8>:
 8011790:	4641      	mov	r1, r8
 8011792:	4658      	mov	r0, fp
 8011794:	f002 f8c4 	bl	8013920 <prvcy_mngr_get_local_rpa>

08011798 <??non_conn_mngr_interrupt_6>:
 8011798:	2001      	movs	r0, #1
 801179a:	7038      	strb	r0, [r7, #0]
 801179c:	e001      	b.n	80117a2 <??non_conn_mngr_interrupt_5>

0801179e <??non_conn_mngr_interrupt_7>:
 801179e:	f04f 0901 	mov.w	r9, #1

080117a2 <??non_conn_mngr_interrupt_5>:
 80117a2:	4648      	mov	r0, r9
 80117a4:	b007      	add	sp, #28
 80117a6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

080117aa <non_conn_mngr_set_scan_params>:
 80117aa:	b570      	push	{r4, r5, r6, lr}
 80117ac:	4601      	mov	r1, r0
 80117ae:	2400      	movs	r4, #0
 80117b0:	b909      	cbnz	r1, 80117b6 <??non_conn_mngr_set_scan_params_0>
 80117b2:	2412      	movs	r4, #18
 80117b4:	e018      	b.n	80117e8 <??non_conn_mngr_set_scan_params_1>

080117b6 <??non_conn_mngr_set_scan_params_0>:
 80117b6:	f8df 5840 	ldr.w	r5, [pc, #2112]	; 8011ff8 <??DataTable9>
 80117ba:	f105 0674 	add.w	r6, r5, #116	; 0x74
 80117be:	7f70      	ldrb	r0, [r6, #29]
 80117c0:	b920      	cbnz	r0, 80117cc <??non_conn_mngr_set_scan_params_2>
 80117c2:	2040      	movs	r0, #64	; 0x40
 80117c4:	240c      	movs	r4, #12
 80117c6:	f7ee fd33 	bl	8000230 <bsp_debug_gpio_toggle>
 80117ca:	e00d      	b.n	80117e8 <??non_conn_mngr_set_scan_params_1>

080117cc <??non_conn_mngr_set_scan_params_2>:
 80117cc:	2208      	movs	r2, #8
 80117ce:	f105 0070 	add.w	r0, r5, #112	; 0x70
 80117d2:	f7fd f9b9 	bl	800eb48 <ble_memcpy>
 80117d6:	7830      	ldrb	r0, [r6, #0]
 80117d8:	2801      	cmp	r0, #1
 80117da:	bf08      	it	eq
 80117dc:	2010      	moveq	r0, #16
 80117de:	d001      	beq.n	80117e4 <??non_conn_mngr_set_scan_params_3>
 80117e0:	b910      	cbnz	r0, 80117e8 <??non_conn_mngr_set_scan_params_1>
 80117e2:	2020      	movs	r0, #32

080117e4 <??non_conn_mngr_set_scan_params_3>:
 80117e4:	e9c5 0426 	strd	r0, r4, [r5, #152]	; 0x98

080117e8 <??non_conn_mngr_set_scan_params_1>:
 80117e8:	4620      	mov	r0, r4
 80117ea:	bd70      	pop	{r4, r5, r6, pc}

080117ec <non_conn_mngr_scan_enable>:
 80117ec:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80117f0:	f8df 8804 	ldr.w	r8, [pc, #2052]	; 8011ff8 <??DataTable9>
 80117f4:	b084      	sub	sp, #16
 80117f6:	f108 0574 	add.w	r5, r8, #116	; 0x74
 80117fa:	78af      	ldrb	r7, [r5, #2]
 80117fc:	f108 02a0 	add.w	r2, r8, #160	; 0xa0
 8011800:	2301      	movs	r3, #1
 8011802:	7013      	strb	r3, [r2, #0]
 8011804:	7053      	strb	r3, [r2, #1]
 8011806:	2400      	movs	r4, #0
 8011808:	2620      	movs	r6, #32
 801180a:	1ebb      	subs	r3, r7, #2
 801180c:	2b02      	cmp	r3, #2
 801180e:	d203      	bcs.n	8011818 <??non_conn_mngr_scan_enable_0>
 8011810:	1ebf      	subs	r7, r7, #2
 8011812:	f8df 27e8 	ldr.w	r2, [pc, #2024]	; 8011ffc <??DataTable9_1>
 8011816:	7397      	strb	r7, [r2, #14]

08011818 <??non_conn_mngr_scan_enable_0>:
 8011818:	7729      	strb	r1, [r5, #28]
 801181a:	7f69      	ldrb	r1, [r5, #29]
 801181c:	2800      	cmp	r0, #0
 801181e:	d148      	bne.n	80118b2 <??non_conn_mngr_scan_enable_1>
 8011820:	2900      	cmp	r1, #0
 8011822:	d072      	beq.n	801190a <??non_conn_mngr_scan_enable_2>
 8011824:	f7f8 f9c6 	bl	8009bb4 <llhwc_is_dtm_enabled>
 8011828:	2800      	cmp	r0, #0
 801182a:	d16e      	bne.n	801190a <??non_conn_mngr_scan_enable_2>
 801182c:	2003      	movs	r0, #3
 801182e:	f002 fe41 	bl	80144b4 <state_mngr_alloc_state_mchn>
 8011832:	2800      	cmp	r0, #0
 8011834:	bf14      	ite	ne
 8011836:	2101      	movne	r1, #1
 8011838:	2100      	moveq	r1, #0
 801183a:	6168      	str	r0, [r5, #20]
 801183c:	4608      	mov	r0, r1
 801183e:	f7ee fcc7 	bl	80001d0 <bsp_assert>
 8011842:	f108 0168 	add.w	r1, r8, #104	; 0x68
 8011846:	b2f8      	uxtb	r0, r7
 8011848:	f004 fc9f 	bl	801618a <db_get_src_address>
 801184c:	0004      	movs	r4, r0
 801184e:	d15c      	bne.n	801190a <??non_conn_mngr_scan_enable_2>
 8011850:	7828      	ldrb	r0, [r5, #0]
 8011852:	2801      	cmp	r0, #1
 8011854:	d116      	bne.n	8011884 <??non_conn_mngr_scan_enable_3>
 8011856:	2004      	movs	r0, #4
 8011858:	81e8      	strh	r0, [r5, #14]
 801185a:	6868      	ldr	r0, [r5, #4]
 801185c:	2100      	movs	r1, #0
 801185e:	2610      	movs	r6, #16
 8011860:	8229      	strh	r1, [r5, #16]
 8011862:	b920      	cbnz	r0, 801186e <??non_conn_mngr_scan_enable_4>
 8011864:	f8df 0c2c 	ldr.w	r0, [pc, #3116]	; 8012494 <??DataTable11>
 8011868:	f7f3 fcda 	bl	8005220 <os_shrd_mem_alloc>
 801186c:	6068      	str	r0, [r5, #4]

0801186e <??non_conn_mngr_scan_enable_4>:
 801186e:	2000      	movs	r0, #0
 8011870:	9000      	str	r0, [sp, #0]
 8011872:	2300      	movs	r3, #0
 8011874:	2203      	movs	r2, #3
 8011876:	f108 0178 	add.w	r1, r8, #120	; 0x78
 801187a:	b2f8      	uxtb	r0, r7
 801187c:	f001 fa5b 	bl	8012d36 <pdu_trnsprt_hndlr_form_nconn_scan>
 8011880:	0004      	movs	r4, r0
 8011882:	d142      	bne.n	801190a <??non_conn_mngr_scan_enable_2>

08011884 <??non_conn_mngr_scan_enable_3>:
 8011884:	2000      	movs	r0, #0
 8011886:	9002      	str	r0, [sp, #8]
 8011888:	9001      	str	r0, [sp, #4]
 801188a:	9000      	str	r0, [sp, #0]
 801188c:	f20f 0385 	addw	r3, pc, #133	; 0x85
 8011890:	f108 0268 	add.w	r2, r8, #104	; 0x68
 8011894:	4630      	mov	r0, r6
 8011896:	2100      	movs	r1, #0
 8011898:	f7ef fd2e 	bl	80012f8 <evnt_schdlr_rgstr_evnt>
 801189c:	2800      	cmp	r0, #0
 801189e:	bf14      	ite	ne
 80118a0:	2101      	movne	r1, #1
 80118a2:	2100      	moveq	r1, #0
 80118a4:	61a8      	str	r0, [r5, #24]
 80118a6:	4608      	mov	r0, r1
 80118a8:	f7ee fc92 	bl	80001d0 <bsp_assert>
 80118ac:	2000      	movs	r0, #0
 80118ae:	7768      	strb	r0, [r5, #29]
 80118b0:	e02b      	b.n	801190a <??non_conn_mngr_scan_enable_2>

080118b2 <??non_conn_mngr_scan_enable_1>:
 80118b2:	2901      	cmp	r1, #1
 80118b4:	d029      	beq.n	801190a <??non_conn_mngr_scan_enable_2>
 80118b6:	6868      	ldr	r0, [r5, #4]
 80118b8:	b118      	cbz	r0, 80118c2 <??non_conn_mngr_scan_enable_5>
 80118ba:	1f00      	subs	r0, r0, #4
 80118bc:	f7f3 fcae 	bl	800521c <os_mem_pool_free>
 80118c0:	606c      	str	r4, [r5, #4]

080118c2 <??non_conn_mngr_scan_enable_5>:
 80118c2:	69a8      	ldr	r0, [r5, #24]
 80118c4:	f7ef fe17 	bl	80014f6 <evnt_schdlr_unrgstr_evnt>
 80118c8:	0004      	movs	r4, r0
 80118ca:	d11e      	bne.n	801190a <??non_conn_mngr_scan_enable_2>
 80118cc:	2000      	movs	r0, #0
 80118ce:	61a8      	str	r0, [r5, #24]
 80118d0:	6968      	ldr	r0, [r5, #20]
 80118d2:	2100      	movs	r1, #0
 80118d4:	f002 fe4c 	bl	8014570 <state_mngr_update_state>
 80118d8:	0004      	movs	r4, r0
 80118da:	d116      	bne.n	801190a <??non_conn_mngr_scan_enable_2>
 80118dc:	f8df 0c14 	ldr.w	r0, [pc, #3092]	; 80124f4 <??DataTable12>
 80118e0:	f890 1020 	ldrb.w	r1, [r0, #32]
 80118e4:	2901      	cmp	r1, #1
 80118e6:	bf04      	itt	eq
 80118e8:	2003      	moveq	r0, #3
 80118ea:	f7f8 f8df 	bleq	8009aac <llhwc_lst_clr>
 80118ee:	2002      	movs	r0, #2
 80118f0:	f7f8 f8dc 	bl	8009aac <llhwc_lst_clr>
 80118f4:	2001      	movs	r0, #1
 80118f6:	7768      	strb	r0, [r5, #29]
 80118f8:	f88d 000c 	strb.w	r0, [sp, #12]
 80118fc:	f8df 3bf8 	ldr.w	r3, [pc, #3064]	; 80124f8 <??DataTable12_1>
 8011900:	aa03      	add	r2, sp, #12
 8011902:	2100      	movs	r1, #0
 8011904:	2008      	movs	r0, #8
 8011906:	f7ee fe19 	bl	800053c <emngr_remove_conditional_event>

0801190a <??non_conn_mngr_scan_enable_2>:
 801190a:	4620      	mov	r0, r4
 801190c:	b004      	add	sp, #16
 801190e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
	...

08011914 <non_conn_mngr_scan_cbk>:
 8011914:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8011918:	b09d      	sub	sp, #116	; 0x74
 801191a:	468b      	mov	fp, r1
 801191c:	207c      	movs	r0, #124	; 0x7c
 801191e:	2501      	movs	r5, #1
 8011920:	f7ee fc82 	bl	8000228 <bsp_debug_gpio_set>
 8011924:	f1bb 0f00 	cmp.w	fp, #0
 8011928:	bf14      	ite	ne
 801192a:	2001      	movne	r0, #1
 801192c:	2000      	moveq	r0, #0
 801192e:	f7ee fc4f 	bl	80001d0 <bsp_assert>
 8011932:	f10b 0024 	add.w	r0, fp, #36	; 0x24
 8011936:	f890 8007 	ldrb.w	r8, [r0, #7]
 801193a:	f89b 0020 	ldrb.w	r0, [fp, #32]
 801193e:	2208      	movs	r2, #8
 8011940:	2100      	movs	r1, #0
 8011942:	9002      	str	r0, [sp, #8]
 8011944:	a803      	add	r0, sp, #12
 8011946:	f7fd f950 	bl	800ebea <ble_memset>
 801194a:	9802      	ldr	r0, [sp, #8]
 801194c:	f8df 9ba4 	ldr.w	r9, [pc, #2980]	; 80124f4 <??DataTable12>
 8011950:	f109 0624 	add.w	r6, r9, #36	; 0x24
 8011954:	2801      	cmp	r0, #1
 8011956:	db2c      	blt.n	80119b2 <??non_conn_mngr_scan_cbk_1>
 8011958:	af03      	add	r7, sp, #12
 801195a:	f10d 0a14 	add.w	sl, sp, #20
 801195e:	4604      	mov	r4, r0

08011960 <??non_conn_mngr_scan_cbk_2>:
 8011960:	f8db 0008 	ldr.w	r0, [fp, #8]
 8011964:	b100      	cbz	r0, 8011968 <??non_conn_mngr_scan_cbk_3>
 8011966:	2001      	movs	r0, #1

08011968 <??non_conn_mngr_scan_cbk_3>:
 8011968:	f7ee fc32 	bl	80001d0 <bsp_assert>
 801196c:	2000      	movs	r0, #0
 801196e:	9000      	str	r0, [sp, #0]
 8011970:	f8db 0008 	ldr.w	r0, [fp, #8]
 8011974:	f10d 0305 	add.w	r3, sp, #5
 8011978:	f109 0208 	add.w	r2, r9, #8
 801197c:	4651      	mov	r1, sl
 801197e:	f001 f8d5 	bl	8012b2c <pdu_trnsprt_hndlr_parse_nconn_adv>
 8011982:	f89d 1005 	ldrb.w	r1, [sp, #5]
 8011986:	2800      	cmp	r0, #0
 8011988:	72b1      	strb	r1, [r6, #10]
 801198a:	f040 819b 	bne.w	8011cc4 <??non_conn_mngr_scan_cbk_4>
 801198e:	f89b 0022 	ldrb.w	r0, [fp, #34]	; 0x22
 8011992:	f88a 0018 	strb.w	r0, [sl, #24]
 8011996:	f8db 1008 	ldr.w	r1, [fp, #8]
 801199a:	f10a 0a1c 	add.w	sl, sl, #28
 801199e:	f847 1b04 	str.w	r1, [r7], #4
 80119a2:	f8db 0008 	ldr.w	r0, [fp, #8]
 80119a6:	f001 fdf5 	bl	8013594 <get_nxt_data_packet>
 80119aa:	f8cb 0008 	str.w	r0, [fp, #8]
 80119ae:	1e64      	subs	r4, r4, #1
 80119b0:	d1d6      	bne.n	8011960 <??non_conn_mngr_scan_cbk_2>

080119b2 <??non_conn_mngr_scan_cbk_1>:
 80119b2:	2003      	movs	r0, #3
 80119b4:	72f0      	strb	r0, [r6, #11]
 80119b6:	ac05      	add	r4, sp, #20
 80119b8:	7e60      	ldrb	r0, [r4, #25]
 80119ba:	2803      	cmp	r0, #3
 80119bc:	f200 8182 	bhi.w	8011cc4 <??non_conn_mngr_scan_cbk_4>
 80119c0:	e8df f010 	tbh	[pc, r0, lsl #1]

080119c4 <??non_conn_mngr_scan_cbk_0>:
 80119c4:	0004 0006 0008 000a                         ........

080119cc <??non_conn_mngr_scan_cbk_5>:
 80119cc:	2000      	movs	r0, #0
 80119ce:	e004      	b.n	80119da <??non_conn_mngr_scan_cbk_6>

080119d0 <??non_conn_mngr_scan_cbk_7>:
 80119d0:	2001      	movs	r0, #1
 80119d2:	e002      	b.n	80119da <??non_conn_mngr_scan_cbk_6>

080119d4 <??non_conn_mngr_scan_cbk_8>:
 80119d4:	2006      	movs	r0, #6
 80119d6:	e000      	b.n	80119da <??non_conn_mngr_scan_cbk_6>

080119d8 <??non_conn_mngr_scan_cbk_9>:
 80119d8:	2002      	movs	r0, #2

080119da <??non_conn_mngr_scan_cbk_6>:
 80119da:	7330      	strb	r0, [r6, #12]
 80119dc:	2206      	movs	r2, #6
 80119de:	a905      	add	r1, sp, #20
 80119e0:	4648      	mov	r0, r9
 80119e2:	f7fd f8b1 	bl	800eb48 <ble_memcpy>
 80119e6:	7ea0      	ldrb	r0, [r4, #26]
 80119e8:	f8c6 9000 	str.w	r9, [r6]
 80119ec:	f8df 7b0c 	ldr.w	r7, [pc, #2828]	; 80124fc <??DataTable12_2>
 80119f0:	7270      	strb	r0, [r6, #9]
 80119f2:	7230      	strb	r0, [r6, #8]
 80119f4:	7879      	ldrb	r1, [r7, #1]
 80119f6:	7671      	strb	r1, [r6, #25]
 80119f8:	f899 0020 	ldrb.w	r0, [r9, #32]
 80119fc:	2801      	cmp	r0, #1
 80119fe:	d105      	bne.n	8011a0c <??non_conn_mngr_scan_cbk_10>
 8011a00:	4640      	mov	r0, r8
 8011a02:	f001 fe0d 	bl	8013620 <prvcy_mngr_addr_hndlr>
 8011a06:	2800      	cmp	r0, #0
 8011a08:	f040 815c 	bne.w	8011cc4 <??non_conn_mngr_scan_cbk_4>

08011a0c <??non_conn_mngr_scan_cbk_10>:
 8011a0c:	ea5f 0008 	movs.w	r0, r8
 8011a10:	bf18      	it	ne
 8011a12:	2500      	movne	r5, #0
 8011a14:	7838      	ldrb	r0, [r7, #0]
 8011a16:	2800      	cmp	r0, #0
 8011a18:	f000 80aa 	beq.w	8011b70 <??non_conn_mngr_scan_cbk_11>
 8011a1c:	2801      	cmp	r0, #1
 8011a1e:	f040 8151 	bne.w	8011cc4 <??non_conn_mngr_scan_cbk_4>
 8011a22:	f899 1020 	ldrb.w	r1, [r9, #32]
 8011a26:	2901      	cmp	r1, #1
 8011a28:	d175      	bne.n	8011b16 <??non_conn_mngr_scan_cbk_12>
 8011a2a:	7a70      	ldrb	r0, [r6, #9]
 8011a2c:	2206      	movs	r2, #6
 8011a2e:	76a0      	strb	r0, [r4, #26]
 8011a30:	6831      	ldr	r1, [r6, #0]
 8011a32:	a805      	add	r0, sp, #20
 8011a34:	f7fd f888 	bl	800eb48 <ble_memcpy>
 8011a38:	7a70      	ldrb	r0, [r6, #9]
 8011a3a:	2206      	movs	r2, #6
 8011a3c:	f88d 004a 	strb.w	r0, [sp, #74]	; 0x4a
 8011a40:	6831      	ldr	r1, [r6, #0]
 8011a42:	a80c      	add	r0, sp, #48	; 0x30
 8011a44:	f7fd f880 	bl	800eb48 <ble_memcpy>
 8011a48:	6830      	ldr	r0, [r6, #0]
 8011a4a:	b100      	cbz	r0, 8011a4e <??non_conn_mngr_scan_cbk_13>
 8011a4c:	2001      	movs	r0, #1

08011a4e <??non_conn_mngr_scan_cbk_13>:
 8011a4e:	f7ee fbbf 	bl	80001d0 <bsp_assert>
 8011a52:	7f38      	ldrb	r0, [r7, #28]
 8011a54:	2801      	cmp	r0, #1
 8011a56:	bf08      	it	eq
 8011a58:	f1b8 0f00 	cmpeq.w	r8, #0
 8011a5c:	f040 8101 	bne.w	8011c62 <??non_conn_mngr_scan_cbk_14>
 8011a60:	9802      	ldr	r0, [sp, #8]
 8011a62:	2500      	movs	r5, #0
 8011a64:	2802      	cmp	r0, #2
 8011a66:	d008      	beq.n	8011a7a <??non_conn_mngr_scan_cbk_15>
 8011a68:	2801      	cmp	r0, #1
 8011a6a:	f040 80fa 	bne.w	8011c62 <??non_conn_mngr_scan_cbk_14>
 8011a6e:	7e60      	ldrb	r0, [r4, #25]
 8011a70:	2801      	cmp	r0, #1
 8011a72:	bf18      	it	ne
 8011a74:	2803      	cmpne	r0, #3
 8011a76:	f040 80f4 	bne.w	8011c62 <??non_conn_mngr_scan_cbk_14>

08011a7a <??non_conn_mngr_scan_cbk_15>:
 8011a7a:	7ea1      	ldrb	r1, [r4, #26]
 8011a7c:	2901      	cmp	r1, #1
 8011a7e:	bf02      	ittt	eq
 8011a80:	7960      	ldrbeq	r0, [r4, #5]
 8011a82:	0980      	lsreq	r0, r0, #6
 8011a84:	2801      	cmpeq	r0, #1
 8011a86:	d108      	bne.n	8011a9a <??non_conn_mngr_scan_cbk_16>
 8011a88:	ab01      	add	r3, sp, #4
 8011a8a:	aa05      	add	r2, sp, #20
 8011a8c:	2003      	movs	r0, #3
 8011a8e:	f7f7 fd07 	bl	80094a0 <llhwc_lst_search>
 8011a92:	2800      	cmp	r0, #0
 8011a94:	f040 8116 	bne.w	8011cc4 <??non_conn_mngr_scan_cbk_4>
 8011a98:	e036      	b.n	8011b08 <??non_conn_mngr_scan_cbk_17>

08011a9a <??non_conn_mngr_scan_cbk_16>:
 8011a9a:	ab01      	add	r3, sp, #4
 8011a9c:	aa05      	add	r2, sp, #20
 8011a9e:	2002      	movs	r0, #2
 8011aa0:	f7f7 fcfe 	bl	80094a0 <llhwc_lst_search>
 8011aa4:	2800      	cmp	r0, #0
 8011aa6:	f040 810d 	bne.w	8011cc4 <??non_conn_mngr_scan_cbk_4>
 8011aaa:	f89d 0004 	ldrb.w	r0, [sp, #4]
 8011aae:	07c1      	lsls	r1, r0, #31
 8011ab0:	d519      	bpl.n	8011ae6 <??non_conn_mngr_scan_cbk_18>
 8011ab2:	7ea2      	ldrb	r2, [r4, #26]
 8011ab4:	2000      	movs	r0, #0
 8011ab6:	9000      	str	r0, [sp, #0]
 8011ab8:	ab05      	add	r3, sp, #20
 8011aba:	2102      	movs	r1, #2
 8011abc:	f7f7 fdf2 	bl	80096a4 <llhwc_lst_add_rmv_dev>
 8011ac0:	2807      	cmp	r0, #7
 8011ac2:	d10d      	bne.n	8011ae0 <??non_conn_mngr_scan_cbk_19>
 8011ac4:	2002      	movs	r0, #2
 8011ac6:	f7f7 fff1 	bl	8009aac <llhwc_lst_clr>
 8011aca:	7ea2      	ldrb	r2, [r4, #26]
 8011acc:	2000      	movs	r0, #0
 8011ace:	9000      	str	r0, [sp, #0]
 8011ad0:	ab05      	add	r3, sp, #20
 8011ad2:	2102      	movs	r1, #2
 8011ad4:	f7f7 fde6 	bl	80096a4 <llhwc_lst_add_rmv_dev>
 8011ad8:	2800      	cmp	r0, #0
 8011ada:	f040 80f3 	bne.w	8011cc4 <??non_conn_mngr_scan_cbk_4>
 8011ade:	e002      	b.n	8011ae6 <??non_conn_mngr_scan_cbk_18>

08011ae0 <??non_conn_mngr_scan_cbk_19>:
 8011ae0:	2800      	cmp	r0, #0
 8011ae2:	f040 80ef 	bne.w	8011cc4 <??non_conn_mngr_scan_cbk_4>

08011ae6 <??non_conn_mngr_scan_cbk_18>:
 8011ae6:	7a30      	ldrb	r0, [r6, #8]
 8011ae8:	2801      	cmp	r0, #1
 8011aea:	bf02      	ittt	eq
 8011aec:	f899 0005 	ldrbeq.w	r0, [r9, #5]
 8011af0:	0980      	lsreq	r0, r0, #6
 8011af2:	2801      	cmpeq	r0, #1
 8011af4:	d13a      	bne.n	8011b6c <??non_conn_mngr_scan_cbk_20>
 8011af6:	ab01      	add	r3, sp, #4
 8011af8:	464a      	mov	r2, r9
 8011afa:	2101      	movs	r1, #1
 8011afc:	2003      	movs	r0, #3
 8011afe:	f7f7 fccf 	bl	80094a0 <llhwc_lst_search>
 8011b02:	2800      	cmp	r0, #0
 8011b04:	f040 80de 	bne.w	8011cc4 <??non_conn_mngr_scan_cbk_4>

08011b08 <??non_conn_mngr_scan_cbk_17>:
 8011b08:	f89d 1004 	ldrb.w	r1, [sp, #4]
 8011b0c:	2200      	movs	r2, #0
 8011b0e:	2002      	movs	r0, #2
 8011b10:	f7f7 ffa4 	bl	8009a5c <llhwc_lst_edit_indicators>
 8011b14:	e02a      	b.n	8011b6c <??non_conn_mngr_scan_cbk_20>

08011b16 <??non_conn_mngr_scan_cbk_12>:
 8011b16:	7f38      	ldrb	r0, [r7, #28]
 8011b18:	2801      	cmp	r0, #1
 8011b1a:	f040 80a2 	bne.w	8011c62 <??non_conn_mngr_scan_cbk_14>
 8011b1e:	9802      	ldr	r0, [sp, #8]
 8011b20:	2500      	movs	r5, #0
 8011b22:	2802      	cmp	r0, #2
 8011b24:	d008      	beq.n	8011b38 <??non_conn_mngr_scan_cbk_21>
 8011b26:	2801      	cmp	r0, #1
 8011b28:	f040 809b 	bne.w	8011c62 <??non_conn_mngr_scan_cbk_14>
 8011b2c:	7e60      	ldrb	r0, [r4, #25]
 8011b2e:	2801      	cmp	r0, #1
 8011b30:	bf18      	it	ne
 8011b32:	2803      	cmpne	r0, #3
 8011b34:	f040 8095 	bne.w	8011c62 <??non_conn_mngr_scan_cbk_14>

08011b38 <??non_conn_mngr_scan_cbk_21>:
 8011b38:	7ea2      	ldrb	r2, [r4, #26]
 8011b3a:	2000      	movs	r0, #0
 8011b3c:	9000      	str	r0, [sp, #0]
 8011b3e:	ab05      	add	r3, sp, #20
 8011b40:	2102      	movs	r1, #2
 8011b42:	f7f7 fdaf 	bl	80096a4 <llhwc_lst_add_rmv_dev>
 8011b46:	2807      	cmp	r0, #7
 8011b48:	d10d      	bne.n	8011b66 <??non_conn_mngr_scan_cbk_22>
 8011b4a:	2002      	movs	r0, #2
 8011b4c:	f7f7 ffae 	bl	8009aac <llhwc_lst_clr>
 8011b50:	7ea2      	ldrb	r2, [r4, #26]
 8011b52:	2000      	movs	r0, #0
 8011b54:	9000      	str	r0, [sp, #0]
 8011b56:	ab05      	add	r3, sp, #20
 8011b58:	2102      	movs	r1, #2
 8011b5a:	f7f7 fda3 	bl	80096a4 <llhwc_lst_add_rmv_dev>
 8011b5e:	2800      	cmp	r0, #0
 8011b60:	f040 80b0 	bne.w	8011cc4 <??non_conn_mngr_scan_cbk_4>
 8011b64:	e002      	b.n	8011b6c <??non_conn_mngr_scan_cbk_20>

08011b66 <??non_conn_mngr_scan_cbk_22>:
 8011b66:	2800      	cmp	r0, #0
 8011b68:	f040 80ac 	bne.w	8011cc4 <??non_conn_mngr_scan_cbk_4>

08011b6c <??non_conn_mngr_scan_cbk_20>:
 8011b6c:	2501      	movs	r5, #1
 8011b6e:	e078      	b.n	8011c62 <??non_conn_mngr_scan_cbk_14>

08011b70 <??non_conn_mngr_scan_cbk_11>:
 8011b70:	f899 0020 	ldrb.w	r0, [r9, #32]
 8011b74:	2801      	cmp	r0, #1
 8011b76:	d15a      	bne.n	8011c2e <??non_conn_mngr_scan_cbk_23>
 8011b78:	7a70      	ldrb	r0, [r6, #9]
 8011b7a:	2206      	movs	r2, #6
 8011b7c:	76a0      	strb	r0, [r4, #26]
 8011b7e:	6831      	ldr	r1, [r6, #0]
 8011b80:	a805      	add	r0, sp, #20
 8011b82:	f7fc ffe1 	bl	800eb48 <ble_memcpy>
 8011b86:	f1b8 0f00 	cmp.w	r8, #0
 8011b8a:	d16a      	bne.n	8011c62 <??non_conn_mngr_scan_cbk_14>
 8011b8c:	6830      	ldr	r0, [r6, #0]
 8011b8e:	b100      	cbz	r0, 8011b92 <??non_conn_mngr_scan_cbk_24>
 8011b90:	2001      	movs	r0, #1

08011b92 <??non_conn_mngr_scan_cbk_24>:
 8011b92:	f7ee fb1d 	bl	80001d0 <bsp_assert>
 8011b96:	7f38      	ldrb	r0, [r7, #28]
 8011b98:	2801      	cmp	r0, #1
 8011b9a:	d162      	bne.n	8011c62 <??non_conn_mngr_scan_cbk_14>
 8011b9c:	7ea1      	ldrb	r1, [r4, #26]
 8011b9e:	2901      	cmp	r1, #1
 8011ba0:	bf02      	ittt	eq
 8011ba2:	7960      	ldrbeq	r0, [r4, #5]
 8011ba4:	0980      	lsreq	r0, r0, #6
 8011ba6:	2801      	cmpeq	r0, #1
 8011ba8:	d108      	bne.n	8011bbc <??non_conn_mngr_scan_cbk_25>
 8011baa:	ab01      	add	r3, sp, #4
 8011bac:	aa05      	add	r2, sp, #20
 8011bae:	2003      	movs	r0, #3
 8011bb0:	f7f7 fc76 	bl	80094a0 <llhwc_lst_search>
 8011bb4:	2800      	cmp	r0, #0
 8011bb6:	f040 8085 	bne.w	8011cc4 <??non_conn_mngr_scan_cbk_4>
 8011bba:	e031      	b.n	8011c20 <??non_conn_mngr_scan_cbk_26>

08011bbc <??non_conn_mngr_scan_cbk_25>:
 8011bbc:	ab01      	add	r3, sp, #4
 8011bbe:	aa05      	add	r2, sp, #20
 8011bc0:	2002      	movs	r0, #2
 8011bc2:	f7f7 fc6d 	bl	80094a0 <llhwc_lst_search>
 8011bc6:	2800      	cmp	r0, #0
 8011bc8:	d17c      	bne.n	8011cc4 <??non_conn_mngr_scan_cbk_4>
 8011bca:	f89d 0004 	ldrb.w	r0, [sp, #4]
 8011bce:	07c1      	lsls	r1, r0, #31
 8011bd0:	d515      	bpl.n	8011bfe <??non_conn_mngr_scan_cbk_27>
 8011bd2:	7ea2      	ldrb	r2, [r4, #26]
 8011bd4:	2000      	movs	r0, #0
 8011bd6:	9000      	str	r0, [sp, #0]
 8011bd8:	ab05      	add	r3, sp, #20
 8011bda:	2102      	movs	r1, #2
 8011bdc:	f7f7 fd62 	bl	80096a4 <llhwc_lst_add_rmv_dev>
 8011be0:	2807      	cmp	r0, #7
 8011be2:	d109      	bne.n	8011bf8 <??non_conn_mngr_scan_cbk_28>
 8011be4:	2002      	movs	r0, #2
 8011be6:	f7f7 ff61 	bl	8009aac <llhwc_lst_clr>
 8011bea:	7ea2      	ldrb	r2, [r4, #26]
 8011bec:	2000      	movs	r0, #0
 8011bee:	9000      	str	r0, [sp, #0]
 8011bf0:	ab05      	add	r3, sp, #20
 8011bf2:	2102      	movs	r1, #2
 8011bf4:	f7f7 fd56 	bl	80096a4 <llhwc_lst_add_rmv_dev>

08011bf8 <??non_conn_mngr_scan_cbk_28>:
 8011bf8:	2800      	cmp	r0, #0
 8011bfa:	d163      	bne.n	8011cc4 <??non_conn_mngr_scan_cbk_4>
 8011bfc:	e000      	b.n	8011c00 <??non_conn_mngr_scan_cbk_29>

08011bfe <??non_conn_mngr_scan_cbk_27>:
 8011bfe:	2500      	movs	r5, #0

08011c00 <??non_conn_mngr_scan_cbk_29>:
 8011c00:	7a30      	ldrb	r0, [r6, #8]
 8011c02:	2801      	cmp	r0, #1
 8011c04:	bf02      	ittt	eq
 8011c06:	f899 0005 	ldrbeq.w	r0, [r9, #5]
 8011c0a:	0980      	lsreq	r0, r0, #6
 8011c0c:	2801      	cmpeq	r0, #1
 8011c0e:	d128      	bne.n	8011c62 <??non_conn_mngr_scan_cbk_14>
 8011c10:	ab01      	add	r3, sp, #4
 8011c12:	464a      	mov	r2, r9
 8011c14:	2101      	movs	r1, #1
 8011c16:	2003      	movs	r0, #3
 8011c18:	f7f7 fc42 	bl	80094a0 <llhwc_lst_search>
 8011c1c:	2800      	cmp	r0, #0
 8011c1e:	d151      	bne.n	8011cc4 <??non_conn_mngr_scan_cbk_4>

08011c20 <??non_conn_mngr_scan_cbk_26>:
 8011c20:	f89d 1004 	ldrb.w	r1, [sp, #4]
 8011c24:	2200      	movs	r2, #0
 8011c26:	2002      	movs	r0, #2
 8011c28:	f7f7 ff18 	bl	8009a5c <llhwc_lst_edit_indicators>
 8011c2c:	e019      	b.n	8011c62 <??non_conn_mngr_scan_cbk_14>

08011c2e <??non_conn_mngr_scan_cbk_23>:
 8011c2e:	7f38      	ldrb	r0, [r7, #28]
 8011c30:	2801      	cmp	r0, #1
 8011c32:	d116      	bne.n	8011c62 <??non_conn_mngr_scan_cbk_14>
 8011c34:	2100      	movs	r1, #0
 8011c36:	7ea2      	ldrb	r2, [r4, #26]
 8011c38:	9100      	str	r1, [sp, #0]
 8011c3a:	ab05      	add	r3, sp, #20
 8011c3c:	2102      	movs	r1, #2
 8011c3e:	2000      	movs	r0, #0
 8011c40:	f7f7 fd30 	bl	80096a4 <llhwc_lst_add_rmv_dev>
 8011c44:	2807      	cmp	r0, #7
 8011c46:	d10b      	bne.n	8011c60 <??non_conn_mngr_scan_cbk_30>
 8011c48:	2002      	movs	r0, #2
 8011c4a:	f7f7 ff2f 	bl	8009aac <llhwc_lst_clr>
 8011c4e:	7ea2      	ldrb	r2, [r4, #26]
 8011c50:	2000      	movs	r0, #0
 8011c52:	9000      	str	r0, [sp, #0]
 8011c54:	ab05      	add	r3, sp, #20
 8011c56:	2102      	movs	r1, #2
 8011c58:	f7f7 fd24 	bl	80096a4 <llhwc_lst_add_rmv_dev>
 8011c5c:	bb90      	cbnz	r0, 8011cc4 <??non_conn_mngr_scan_cbk_4>
 8011c5e:	e000      	b.n	8011c62 <??non_conn_mngr_scan_cbk_14>

08011c60 <??non_conn_mngr_scan_cbk_30>:
 8011c60:	bb80      	cbnz	r0, 8011cc4 <??non_conn_mngr_scan_cbk_4>

08011c62 <??non_conn_mngr_scan_cbk_14>:
 8011c62:	f899 0021 	ldrb.w	r0, [r9, #33]	; 0x21
 8011c66:	2801      	cmp	r0, #1
 8011c68:	d120      	bne.n	8011cac <??non_conn_mngr_scan_cbk_31>
 8011c6a:	7ea0      	ldrb	r0, [r4, #26]
 8011c6c:	2101      	movs	r1, #1
 8011c6e:	f88d 105f 	strb.w	r1, [sp, #95]	; 0x5f
 8011c72:	f88d 005e 	strb.w	r0, [sp, #94]	; 0x5e
 8011c76:	7e20      	ldrb	r0, [r4, #24]
 8011c78:	f88d 105d 	strb.w	r1, [sp, #93]	; 0x5d
 8011c7c:	2206      	movs	r2, #6
 8011c7e:	f88d 005c 	strb.w	r0, [sp, #92]	; 0x5c
 8011c82:	f109 0108 	add.w	r1, r9, #8
 8011c86:	a815      	add	r0, sp, #84	; 0x54
 8011c88:	f7fc ff5e 	bl	800eb48 <ble_memcpy>
 8011c8c:	2206      	movs	r2, #6
 8011c8e:	a905      	add	r1, sp, #20
 8011c90:	a813      	add	r0, sp, #76	; 0x4c
 8011c92:	f7fc ff59 	bl	800eb48 <ble_memcpy>
 8011c96:	f8df 0bec 	ldr.w	r0, [pc, #3052]	; 8012884 <??DataTable18>
 8011c9a:	6801      	ldr	r1, [r0, #0]
 8011c9c:	6a49      	ldr	r1, [r1, #36]	; 0x24
 8011c9e:	b109      	cbz	r1, 8011ca4 <??non_conn_mngr_scan_cbk_32>
 8011ca0:	a813      	add	r0, sp, #76	; 0x4c
 8011ca2:	4788      	blx	r1

08011ca4 <??non_conn_mngr_scan_cbk_32>:
 8011ca4:	2000      	movs	r0, #0
 8011ca6:	f889 0021 	strb.w	r0, [r9, #33]	; 0x21
 8011caa:	e00b      	b.n	8011cc4 <??non_conn_mngr_scan_cbk_4>

08011cac <??non_conn_mngr_scan_cbk_31>:
 8011cac:	2d00      	cmp	r5, #0
 8011cae:	bf1f      	itttt	ne
 8011cb0:	f8df 0bd0 	ldrne.w	r0, [pc, #3024]	; 8012884 <??DataTable18>
 8011cb4:	6801      	ldrne	r1, [r0, #0]
 8011cb6:	6a0a      	ldrne	r2, [r1, #32]
 8011cb8:	2a00      	cmpne	r2, #0
 8011cba:	d003      	beq.n	8011cc4 <??non_conn_mngr_scan_cbk_4>
 8011cbc:	9802      	ldr	r0, [sp, #8]
 8011cbe:	b2c1      	uxtb	r1, r0
 8011cc0:	a805      	add	r0, sp, #20
 8011cc2:	4790      	blx	r2

08011cc4 <??non_conn_mngr_scan_cbk_4>:
 8011cc4:	f89b 0024 	ldrb.w	r0, [fp, #36]	; 0x24
 8011cc8:	2801      	cmp	r0, #1
 8011cca:	d104      	bne.n	8011cd6 <??non_conn_mngr_scan_cbk_33>
 8011ccc:	f8df 082c 	ldr.w	r0, [pc, #2092]	; 80124fc <??DataTable12_2>
 8011cd0:	6980      	ldr	r0, [r0, #24]
 8011cd2:	f7f0 f876 	bl	8001dc2 <evnt_schdlr_evnt_updtd>

08011cd6 <??non_conn_mngr_scan_cbk_33>:
 8011cd6:	9802      	ldr	r0, [sp, #8]
 8011cd8:	2801      	cmp	r0, #1
 8011cda:	db08      	blt.n	8011cee <??non_conn_mngr_scan_cbk_34>
 8011cdc:	ad03      	add	r5, sp, #12
 8011cde:	4604      	mov	r4, r0

08011ce0 <??non_conn_mngr_scan_cbk_35>:
 8011ce0:	6828      	ldr	r0, [r5, #0]
 8011ce2:	b108      	cbz	r0, 8011ce8 <??non_conn_mngr_scan_cbk_36>
 8011ce4:	f001 fc3c 	bl	8013560 <free_buff_hdr>

08011ce8 <??non_conn_mngr_scan_cbk_36>:
 8011ce8:	1d2d      	adds	r5, r5, #4
 8011cea:	1e64      	subs	r4, r4, #1
 8011cec:	d1f8      	bne.n	8011ce0 <??non_conn_mngr_scan_cbk_35>

08011cee <??non_conn_mngr_scan_cbk_34>:
 8011cee:	207c      	movs	r0, #124	; 0x7c
 8011cf0:	f7ee fa9c 	bl	800022c <bsp_debug_gpio_clear>
 8011cf4:	b01d      	add	sp, #116	; 0x74
 8011cf6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08011cfa <non_conn_mngr_set_adv_params>:
 8011cfa:	b538      	push	{r3, r4, r5, lr}
 8011cfc:	4601      	mov	r1, r0
 8011cfe:	2400      	movs	r4, #0
 8011d00:	b909      	cbnz	r1, 8011d06 <??non_conn_mngr_set_adv_params_0>
 8011d02:	2412      	movs	r4, #18
 8011d04:	e023      	b.n	8011d4e <??non_conn_mngr_set_adv_params_1>

08011d06 <??non_conn_mngr_set_adv_params_0>:
 8011d06:	f8df 5b80 	ldr.w	r5, [pc, #2944]	; 8012888 <??DataTable18_1>
 8011d0a:	f895 0061 	ldrb.w	r0, [r5, #97]	; 0x61
 8011d0e:	b920      	cbnz	r0, 8011d1a <??non_conn_mngr_set_adv_params_2>
 8011d10:	2040      	movs	r0, #64	; 0x40
 8011d12:	240c      	movs	r4, #12
 8011d14:	f7ee fa8c 	bl	8000230 <bsp_debug_gpio_toggle>
 8011d18:	e019      	b.n	8011d4e <??non_conn_mngr_set_adv_params_1>

08011d1a <??non_conn_mngr_set_adv_params_2>:
 8011d1a:	7d48      	ldrb	r0, [r1, #21]
 8011d1c:	2801      	cmp	r0, #1
 8011d1e:	bf14      	ite	ne
 8011d20:	2804      	cmpne	r0, #4
 8011d22:	f881 4020 	strbeq.w	r4, [r1, #32]
 8011d26:	2224      	movs	r2, #36	; 0x24
 8011d28:	f105 000c 	add.w	r0, r5, #12
 8011d2c:	f7fc ff0c 	bl	800eb48 <ble_memcpy>
 8011d30:	f105 0022 	add.w	r0, r5, #34	; 0x22
 8011d34:	7a41      	ldrb	r1, [r0, #9]
 8011d36:	7a82      	ldrb	r2, [r0, #10]
 8011d38:	7800      	ldrb	r0, [r0, #0]
 8011d3a:	7229      	strb	r1, [r5, #8]
 8011d3c:	72aa      	strb	r2, [r5, #10]
 8011d3e:	7268      	strb	r0, [r5, #9]
 8011d40:	2206      	movs	r2, #6
 8011d42:	f105 0123 	add.w	r1, r5, #35	; 0x23
 8011d46:	f105 000c 	add.w	r0, r5, #12
 8011d4a:	f7fc fefd 	bl	800eb48 <ble_memcpy>

08011d4e <??non_conn_mngr_set_adv_params_1>:
 8011d4e:	4620      	mov	r0, r4
 8011d50:	bd32      	pop	{r1, r4, r5, pc}

08011d52 <non_conn_mngr_set_adv_data>:
 8011d52:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8011d54:	4604      	mov	r4, r0
 8011d56:	460f      	mov	r7, r1
 8011d58:	2500      	movs	r5, #0
 8011d5a:	b90c      	cbnz	r4, 8011d60 <??non_conn_mngr_set_adv_data_0>
 8011d5c:	2512      	movs	r5, #18
 8011d5e:	e01e      	b.n	8011d9e <??non_conn_mngr_set_adv_data_1>

08011d60 <??non_conn_mngr_set_adv_data_0>:
 8011d60:	4ea5      	ldr	r6, [pc, #660]	; (8011ff8 <??DataTable9>)
 8011d62:	6b31      	ldr	r1, [r6, #48]	; 0x30
 8011d64:	b921      	cbnz	r1, 8011d70 <??non_conn_mngr_set_adv_data_2>
 8011d66:	f8df 072c 	ldr.w	r0, [pc, #1836]	; 8012494 <??DataTable11>
 8011d6a:	f7f3 fa59 	bl	8005220 <os_shrd_mem_alloc>
 8011d6e:	6330      	str	r0, [r6, #48]	; 0x30

08011d70 <??non_conn_mngr_set_adv_data_2>:
 8011d70:	2004      	movs	r0, #4
 8011d72:	8770      	strh	r0, [r6, #58]	; 0x3a
 8011d74:	6b30      	ldr	r0, [r6, #48]	; 0x30
 8011d76:	2304      	movs	r3, #4
 8011d78:	6437      	str	r7, [r6, #64]	; 0x40
 8011d7a:	87b7      	strh	r7, [r6, #60]	; 0x3c
 8011d7c:	463a      	mov	r2, r7
 8011d7e:	4621      	mov	r1, r4
 8011d80:	4418      	add	r0, r3
 8011d82:	f7fc fee1 	bl	800eb48 <ble_memcpy>
 8011d86:	f896 0061 	ldrb.w	r0, [r6, #97]	; 0x61
 8011d8a:	b940      	cbnz	r0, 8011d9e <??non_conn_mngr_set_adv_data_1>
 8011d8c:	f106 0330 	add.w	r3, r6, #48	; 0x30
 8011d90:	2200      	movs	r2, #0
 8011d92:	2100      	movs	r1, #0
 8011d94:	f106 000c 	add.w	r0, r6, #12
 8011d98:	f000 fe06 	bl	80129a8 <pdu_trnsprt_hndlr_form_nconn_adv>
 8011d9c:	4605      	mov	r5, r0

08011d9e <??non_conn_mngr_set_adv_data_1>:
 8011d9e:	4628      	mov	r0, r5
 8011da0:	bdf2      	pop	{r1, r4, r5, r6, r7, pc}

08011da2 <non_conn_mngr_set_scan_rsp_data>:
 8011da2:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8011da4:	460e      	mov	r6, r1
 8011da6:	4f94      	ldr	r7, [pc, #592]	; (8011ff8 <??DataTable9>)
 8011da8:	2104      	movs	r1, #4
 8011daa:	4604      	mov	r4, r0
 8011dac:	2500      	movs	r5, #0
 8011dae:	647e      	str	r6, [r7, #68]	; 0x44
 8011db0:	f8a7 1052 	strh.w	r1, [r7, #82]	; 0x52
 8011db4:	b90c      	cbnz	r4, 8011dba <??non_conn_mngr_set_scan_rsp_data_0>
 8011db6:	2512      	movs	r5, #18
 8011db8:	e00e      	b.n	8011dd8 <??non_conn_mngr_set_scan_rsp_data_1>

08011dba <??non_conn_mngr_set_scan_rsp_data_0>:
 8011dba:	6cb9      	ldr	r1, [r7, #72]	; 0x48
 8011dbc:	b921      	cbnz	r1, 8011dc8 <??non_conn_mngr_set_scan_rsp_data_2>
 8011dbe:	f8df 06d4 	ldr.w	r0, [pc, #1748]	; 8012494 <??DataTable11>
 8011dc2:	f7f3 fa2d 	bl	8005220 <os_shrd_mem_alloc>
 8011dc6:	64b8      	str	r0, [r7, #72]	; 0x48

08011dc8 <??non_conn_mngr_set_scan_rsp_data_2>:
 8011dc8:	6cb8      	ldr	r0, [r7, #72]	; 0x48
 8011dca:	f8b7 3052 	ldrh.w	r3, [r7, #82]	; 0x52
 8011dce:	4632      	mov	r2, r6
 8011dd0:	4621      	mov	r1, r4
 8011dd2:	4418      	add	r0, r3
 8011dd4:	f7fc feb8 	bl	800eb48 <ble_memcpy>

08011dd8 <??non_conn_mngr_set_scan_rsp_data_1>:
 8011dd8:	4628      	mov	r0, r5
 8011dda:	bdf2      	pop	{r1, r4, r5, r6, r7, pc}

08011ddc <non_conn_mngr_adv_enable>:
 8011ddc:	e92d 4bf0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, fp, lr}
 8011de0:	f8df 9214 	ldr.w	r9, [pc, #532]	; 8011ff8 <??DataTable9>
 8011de4:	b088      	sub	sp, #32
 8011de6:	f109 0721 	add.w	r7, r9, #33	; 0x21
 8011dea:	7ab9      	ldrb	r1, [r7, #10]
 8011dec:	4605      	mov	r5, r0
 8011dee:	2400      	movs	r4, #0
 8011df0:	f88d 1000 	strb.w	r1, [sp]
 8011df4:	9403      	str	r4, [sp, #12]
 8011df6:	2210      	movs	r2, #16
 8011df8:	2100      	movs	r1, #0
 8011dfa:	a804      	add	r0, sp, #16
 8011dfc:	f01f f8d7 	bl	8030fae <memset>
 8011e00:	f899 0008 	ldrb.w	r0, [r9, #8]
 8011e04:	2206      	movs	r2, #6
 8011e06:	72b8      	strb	r0, [r7, #10]
 8011e08:	f899 100a 	ldrb.w	r1, [r9, #10]
 8011e0c:	72f9      	strb	r1, [r7, #11]
 8011e0e:	f899 0009 	ldrb.w	r0, [r9, #9]
 8011e12:	f109 010c 	add.w	r1, r9, #12
 8011e16:	7078      	strb	r0, [r7, #1]
 8011e18:	f109 0023 	add.w	r0, r9, #35	; 0x23
 8011e1c:	f7fc fe94 	bl	800eb48 <ble_memcpy>
 8011e20:	f109 0062 	add.w	r0, r9, #98	; 0x62
 8011e24:	f004 fa48 	bl	80162b8 <db_get_tx_power_value>
 8011e28:	7ab8      	ldrb	r0, [r7, #10]
 8011e2a:	4974      	ldr	r1, [pc, #464]	; (8011ffc <??DataTable9_1>)
 8011e2c:	1e82      	subs	r2, r0, #2
 8011e2e:	2a02      	cmp	r2, #2
 8011e30:	d203      	bcs.n	8011e3a <??non_conn_mngr_adv_enable_1>
 8011e32:	1e80      	subs	r0, r0, #2
 8011e34:	7388      	strb	r0, [r1, #14]
 8011e36:	f88d 0000 	strb.w	r0, [sp]

08011e3a <??non_conn_mngr_adv_enable_1>:
 8011e3a:	7af8      	ldrb	r0, [r7, #11]
 8011e3c:	f109 0860 	add.w	r8, r9, #96	; 0x60
 8011e40:	f888 0000 	strb.w	r0, [r8]
 8011e44:	7708      	strb	r0, [r1, #28]
 8011e46:	7809      	ldrb	r1, [r1, #0]
 8011e48:	2901      	cmp	r1, #1
 8011e4a:	d107      	bne.n	8011e5c <??non_conn_mngr_adv_enable_2>
 8011e4c:	2803      	cmp	r0, #3
 8011e4e:	bf08      	it	eq
 8011e50:	72fc      	strbeq	r4, [r7, #11]
 8011e52:	d003      	beq.n	8011e5c <??non_conn_mngr_adv_enable_2>
 8011e54:	2801      	cmp	r0, #1
 8011e56:	bf04      	itt	eq
 8011e58:	2002      	moveq	r0, #2
 8011e5a:	72f8      	strbeq	r0, [r7, #11]

08011e5c <??non_conn_mngr_adv_enable_2>:
 8011e5c:	7839      	ldrb	r1, [r7, #0]
 8011e5e:	2904      	cmp	r1, #4
 8011e60:	d820      	bhi.n	8011ea4 <??non_conn_mngr_adv_enable_3>
 8011e62:	e8df f001 	tbb	[pc, r1]

08011e66 <??non_conn_mngr_adv_enable_0>:
 8011e66:	0e03 1d19 0015                              ......

08011e6c <??non_conn_mngr_adv_enable_4>:
 8011e6c:	2601      	movs	r6, #1
 8011e6e:	46b3      	mov	fp, r6

08011e70 <??non_conn_mngr_adv_enable_5>:
 8011e70:	2d00      	cmp	r5, #0
 8011e72:	f040 80a7 	bne.w	8011fc4 <??non_conn_mngr_adv_enable_6>
 8011e76:	f7f7 fe9d 	bl	8009bb4 <llhwc_is_dtm_enabled>
 8011e7a:	b1a8      	cbz	r0, 8011ea8 <??non_conn_mngr_adv_enable_7>
 8011e7c:	240c      	movs	r4, #12
 8011e7e:	2040      	movs	r0, #64	; 0x40
 8011e80:	e020      	b.n	8011ec4 <??non_conn_mngr_adv_enable_8>

08011e82 <??non_conn_mngr_adv_enable_9>:
 8011e82:	2006      	movs	r0, #6
 8011e84:	2602      	movs	r6, #2
 8011e86:	f04f 0b01 	mov.w	fp, #1
 8011e8a:	f8c9 001c 	str.w	r0, [r9, #28]
 8011e8e:	e7ef      	b.n	8011e70 <??non_conn_mngr_adv_enable_5>

08011e90 <??non_conn_mngr_adv_enable_10>:
 8011e90:	2602      	movs	r6, #2
 8011e92:	f04f 0b01 	mov.w	fp, #1
 8011e96:	e7eb      	b.n	8011e70 <??non_conn_mngr_adv_enable_5>

08011e98 <??non_conn_mngr_adv_enable_11>:
 8011e98:	2608      	movs	r6, #8

08011e9a <??non_conn_mngr_adv_enable_12>:
 8011e9a:	f04f 0b02 	mov.w	fp, #2
 8011e9e:	e7e7      	b.n	8011e70 <??non_conn_mngr_adv_enable_5>

08011ea0 <??non_conn_mngr_adv_enable_13>:
 8011ea0:	2604      	movs	r6, #4
 8011ea2:	e7fa      	b.n	8011e9a <??non_conn_mngr_adv_enable_12>

08011ea4 <??non_conn_mngr_adv_enable_3>:
 8011ea4:	2411      	movs	r4, #17
 8011ea6:	e0a3      	b.n	8011ff0 <??non_conn_mngr_adv_enable_14>

08011ea8 <??non_conn_mngr_adv_enable_7>:
 8011ea8:	f898 0001 	ldrb.w	r0, [r8, #1]
 8011eac:	2800      	cmp	r0, #0
 8011eae:	f000 809f 	beq.w	8011ff0 <??non_conn_mngr_adv_enable_14>
 8011eb2:	4658      	mov	r0, fp
 8011eb4:	f109 0530 	add.w	r5, r9, #48	; 0x30
 8011eb8:	f002 fafc 	bl	80144b4 <state_mngr_alloc_state_mchn>
 8011ebc:	62a8      	str	r0, [r5, #40]	; 0x28
 8011ebe:	b920      	cbnz	r0, 8011eca <??non_conn_mngr_adv_enable_15>
 8011ec0:	2407      	movs	r4, #7
 8011ec2:	203f      	movs	r0, #63	; 0x3f

08011ec4 <??non_conn_mngr_adv_enable_8>:
 8011ec4:	f7ee f9b4 	bl	8000230 <bsp_debug_gpio_toggle>
 8011ec8:	e092      	b.n	8011ff0 <??non_conn_mngr_adv_enable_14>

08011eca <??non_conn_mngr_adv_enable_15>:
 8011eca:	f89d 0000 	ldrb.w	r0, [sp]
 8011ece:	4649      	mov	r1, r9
 8011ed0:	f004 f95b 	bl	801618a <db_get_src_address>
 8011ed4:	0004      	movs	r4, r0
 8011ed6:	f040 808b 	bne.w	8011ff0 <??non_conn_mngr_adv_enable_14>
 8011eda:	7ab8      	ldrb	r0, [r7, #10]
 8011edc:	2802      	cmp	r0, #2
 8011ede:	bf18      	it	ne
 8011ee0:	2803      	cmpne	r0, #3
 8011ee2:	d107      	bne.n	8011ef4 <??non_conn_mngr_adv_enable_16>
 8011ee4:	4649      	mov	r1, r9
 8011ee6:	f109 0023 	add.w	r0, r9, #35	; 0x23
 8011eea:	f001 fd19 	bl	8013920 <prvcy_mngr_get_local_rpa>
 8011eee:	b908      	cbnz	r0, 8011ef4 <??non_conn_mngr_adv_enable_16>
 8011ef0:	2001      	movs	r0, #1
 8011ef2:	72b8      	strb	r0, [r7, #10]

08011ef4 <??non_conn_mngr_adv_enable_16>:
 8011ef4:	2e02      	cmp	r6, #2
 8011ef6:	d117      	bne.n	8011f28 <??non_conn_mngr_adv_enable_17>
 8011ef8:	2300      	movs	r3, #0
 8011efa:	aa03      	add	r2, sp, #12
 8011efc:	f109 0123 	add.w	r1, r9, #35	; 0x23
 8011f00:	2001      	movs	r0, #1
 8011f02:	f001 fedb 	bl	8013cbc <prvcy_mngr_srch_fw_reslvng_list>
 8011f06:	9803      	ldr	r0, [sp, #12]
 8011f08:	b170      	cbz	r0, 8011f28 <??non_conn_mngr_adv_enable_17>
 8011f0a:	2210      	movs	r2, #16
 8011f0c:	a904      	add	r1, sp, #16
 8011f0e:	f7fc fea6 	bl	800ec5e <ble_memcmp>
 8011f12:	b148      	cbz	r0, 8011f28 <??non_conn_mngr_adv_enable_17>
 8011f14:	9803      	ldr	r0, [sp, #12]
 8011f16:	f109 0123 	add.w	r1, r9, #35	; 0x23
 8011f1a:	f001 fd51 	bl	80139c0 <prvcy_mngr_addr_gen>
 8011f1e:	4604      	mov	r4, r0
 8011f20:	2001      	movs	r0, #1
 8011f22:	7078      	strb	r0, [r7, #1]
 8011f24:	2c00      	cmp	r4, #0
 8011f26:	d163      	bne.n	8011ff0 <??non_conn_mngr_adv_enable_14>

08011f28 <??non_conn_mngr_adv_enable_17>:
 8011f28:	2004      	movs	r0, #4
 8011f2a:	8168      	strh	r0, [r5, #10]
 8011f2c:	7838      	ldrb	r0, [r7, #0]
 8011f2e:	2801      	cmp	r0, #1
 8011f30:	bf16      	itet	ne
 8011f32:	2804      	cmpne	r0, #4
 8011f34:	2000      	moveq	r0, #0
 8011f36:	6928      	ldrne	r0, [r5, #16]
 8011f38:	81a8      	strh	r0, [r5, #12]
 8011f3a:	6828      	ldr	r0, [r5, #0]
 8011f3c:	b920      	cbnz	r0, 8011f48 <??non_conn_mngr_adv_enable_18>
 8011f3e:	f8df 0554 	ldr.w	r0, [pc, #1364]	; 8012494 <??DataTable11>
 8011f42:	f7f3 f96d 	bl	8005220 <os_shrd_mem_alloc>
 8011f46:	6028      	str	r0, [r5, #0]

08011f48 <??non_conn_mngr_adv_enable_18>:
 8011f48:	462b      	mov	r3, r5
 8011f4a:	2200      	movs	r2, #0
 8011f4c:	2100      	movs	r1, #0
 8011f4e:	f109 000c 	add.w	r0, r9, #12
 8011f52:	f000 fd29 	bl	80129a8 <pdu_trnsprt_hndlr_form_nconn_adv>
 8011f56:	0004      	movs	r4, r0
 8011f58:	d14a      	bne.n	8011ff0 <??non_conn_mngr_adv_enable_14>
 8011f5a:	7838      	ldrb	r0, [r7, #0]
 8011f5c:	2800      	cmp	r0, #0
 8011f5e:	bf18      	it	ne
 8011f60:	2802      	cmpne	r0, #2
 8011f62:	d115      	bne.n	8011f90 <??non_conn_mngr_adv_enable_19>
 8011f64:	2004      	movs	r0, #4
 8011f66:	8468      	strh	r0, [r5, #34]	; 0x22
 8011f68:	6969      	ldr	r1, [r5, #20]
 8011f6a:	84a9      	strh	r1, [r5, #36]	; 0x24
 8011f6c:	69a8      	ldr	r0, [r5, #24]
 8011f6e:	b920      	cbnz	r0, 8011f7a <??non_conn_mngr_adv_enable_20>
 8011f70:	f8df 0520 	ldr.w	r0, [pc, #1312]	; 8012494 <??DataTable11>
 8011f74:	f7f3 f954 	bl	8005220 <os_shrd_mem_alloc>
 8011f78:	61a8      	str	r0, [r5, #24]

08011f7a <??non_conn_mngr_adv_enable_20>:
 8011f7a:	2000      	movs	r0, #0
 8011f7c:	9000      	str	r0, [sp, #0]
 8011f7e:	7ab8      	ldrb	r0, [r7, #10]
 8011f80:	2300      	movs	r3, #0
 8011f82:	2204      	movs	r2, #4
 8011f84:	f109 0148 	add.w	r1, r9, #72	; 0x48
 8011f88:	f000 fed5 	bl	8012d36 <pdu_trnsprt_hndlr_form_nconn_scan>
 8011f8c:	0004      	movs	r4, r0
 8011f8e:	d12f      	bne.n	8011ff0 <??non_conn_mngr_adv_enable_14>

08011f90 <??non_conn_mngr_adv_enable_19>:
 8011f90:	f04f 0c00 	mov.w	ip, #0
 8011f94:	f8cd c008 	str.w	ip, [sp, #8]
 8011f98:	f8cd c004 	str.w	ip, [sp, #4]
 8011f9c:	2700      	movs	r7, #0
 8011f9e:	9700      	str	r7, [sp, #0]
 8011fa0:	f20f 035d 	addw	r3, pc, #93	; 0x5d
 8011fa4:	464a      	mov	r2, r9
 8011fa6:	4630      	mov	r0, r6
 8011fa8:	2100      	movs	r1, #0
 8011faa:	f7ef f9a5 	bl	80012f8 <evnt_schdlr_rgstr_evnt>
 8011fae:	2800      	cmp	r0, #0
 8011fb0:	bf14      	ite	ne
 8011fb2:	2101      	movne	r1, #1
 8011fb4:	2100      	moveq	r1, #0
 8011fb6:	62e8      	str	r0, [r5, #44]	; 0x2c
 8011fb8:	4608      	mov	r0, r1
 8011fba:	f7ee f909 	bl	80001d0 <bsp_assert>
 8011fbe:	f888 7001 	strb.w	r7, [r8, #1]
 8011fc2:	e015      	b.n	8011ff0 <??non_conn_mngr_adv_enable_14>

08011fc4 <??non_conn_mngr_adv_enable_6>:
 8011fc4:	f898 0001 	ldrb.w	r0, [r8, #1]
 8011fc8:	2801      	cmp	r0, #1
 8011fca:	d011      	beq.n	8011ff0 <??non_conn_mngr_adv_enable_14>
 8011fcc:	f109 0630 	add.w	r6, r9, #48	; 0x30
 8011fd0:	6af0      	ldr	r0, [r6, #44]	; 0x2c
 8011fd2:	f7ef fa90 	bl	80014f6 <evnt_schdlr_unrgstr_evnt>
 8011fd6:	0004      	movs	r4, r0
 8011fd8:	d10a      	bne.n	8011ff0 <??non_conn_mngr_adv_enable_14>
 8011fda:	2000      	movs	r0, #0
 8011fdc:	62f0      	str	r0, [r6, #44]	; 0x2c
 8011fde:	6ab0      	ldr	r0, [r6, #40]	; 0x28
 8011fe0:	2100      	movs	r1, #0
 8011fe2:	f002 fac5 	bl	8014570 <state_mngr_update_state>
 8011fe6:	0004      	movs	r4, r0
 8011fe8:	bf04      	itt	eq
 8011fea:	2001      	moveq	r0, #1
 8011fec:	f888 0001 	strbeq.w	r0, [r8, #1]

08011ff0 <??non_conn_mngr_adv_enable_14>:
 8011ff0:	4620      	mov	r0, r4
 8011ff2:	b008      	add	sp, #32
 8011ff4:	e8bd 8bf0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, fp, pc}

08011ff8 <??DataTable9>:
 8011ff8:	1790 2000                                   ... 

08011ffc <??DataTable9_1>:
 8011ffc:	1a38 2000                                   8.. 

08012000 <non_conn_mngr_adv_cbk>:
 8012000:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8012004:	b096      	sub	sp, #88	; 0x58
 8012006:	460d      	mov	r5, r1
 8012008:	f895 b02b 	ldrb.w	fp, [r5, #43]	; 0x2b
 801200c:	207d      	movs	r0, #125	; 0x7d
 801200e:	2400      	movs	r4, #0
 8012010:	f7ee f90a 	bl	8000228 <bsp_debug_gpio_set>
 8012014:	2d00      	cmp	r5, #0
 8012016:	bf14      	ite	ne
 8012018:	2001      	movne	r0, #1
 801201a:	2000      	moveq	r0, #0
 801201c:	f7ee f8d8 	bl	80001d0 <bsp_assert>
 8012020:	2238      	movs	r2, #56	; 0x38
 8012022:	2100      	movs	r1, #0
 8012024:	a808      	add	r0, sp, #32
 8012026:	f7fc fde0 	bl	800ebea <ble_memset>
 801202a:	f895 0020 	ldrb.w	r0, [r5, #32]
 801202e:	f8df 8858 	ldr.w	r8, [pc, #2136]	; 8012888 <??DataTable18_1>
 8012032:	2801      	cmp	r0, #1
 8012034:	f040 8125 	bne.w	8012282 <??non_conn_mngr_adv_cbk_0>
 8012038:	68a8      	ldr	r0, [r5, #8]
 801203a:	f000 fde7 	bl	8012c0c <pdu_trnsprt_hndlr_get_pdu_type>
 801203e:	4606      	mov	r6, r0
 8012040:	2e03      	cmp	r6, #3
 8012042:	d005      	beq.n	8012050 <??non_conn_mngr_adv_cbk_1>
 8012044:	68a8      	ldr	r0, [r5, #8]
 8012046:	2e05      	cmp	r6, #5
 8012048:	d13a      	bne.n	80120c0 <??non_conn_mngr_adv_cbk_2>
 801204a:	a908      	add	r1, sp, #32
 801204c:	f000 fe16 	bl	8012c7c <pdu_trnsprt_hndlr_parse_conn_req>

08012050 <??non_conn_mngr_adv_cbk_1>:
 8012050:	f108 0921 	add.w	r9, r8, #33	; 0x21
 8012054:	f899 1000 	ldrb.w	r1, [r9]
 8012058:	2000      	movs	r0, #0
 801205a:	2901      	cmp	r1, #1
 801205c:	bf14      	ite	ne
 801205e:	2904      	cmpne	r1, #4
 8012060:	2001      	moveq	r0, #1
 8012062:	f8df a490 	ldr.w	sl, [pc, #1168]	; 80124f4 <??DataTable12>
 8012066:	f10a 072c 	add.w	r7, sl, #44	; 0x2c
 801206a:	70f8      	strb	r0, [r7, #3]
 801206c:	f1bb 0f01 	cmp.w	fp, #1
 8012070:	d141      	bne.n	80120f6 <??non_conn_mngr_adv_cbk_3>
 8012072:	2e03      	cmp	r6, #3
 8012074:	d11b      	bne.n	80120ae <??non_conn_mngr_adv_cbk_4>
 8012076:	68a8      	ldr	r0, [r5, #8]
 8012078:	2206      	movs	r2, #6
 801207a:	6801      	ldr	r1, [r0, #0]
 801207c:	4650      	mov	r0, sl
 801207e:	1d09      	adds	r1, r1, #4
 8012080:	f7fc fd62 	bl	800eb48 <ble_memcpy>
 8012084:	68a8      	ldr	r0, [r5, #8]
 8012086:	6801      	ldr	r1, [r0, #0]
 8012088:	780a      	ldrb	r2, [r1, #0]
 801208a:	f3c2 1080 	ubfx	r0, r2, #6, #1
 801208e:	7038      	strb	r0, [r7, #0]
 8012090:	f8ca a024 	str.w	sl, [sl, #36]	; 0x24
 8012094:	7078      	strb	r0, [r7, #1]
 8012096:	2003      	movs	r0, #3
 8012098:	7138      	strb	r0, [r7, #4]
 801209a:	f89a 1020 	ldrb.w	r1, [sl, #32]
 801209e:	2901      	cmp	r1, #1
 80120a0:	d105      	bne.n	80120ae <??non_conn_mngr_adv_cbk_4>
 80120a2:	f108 0058 	add.w	r0, r8, #88	; 0x58
 80120a6:	7a01      	ldrb	r1, [r0, #8]
 80120a8:	2001      	movs	r0, #1
 80120aa:	f001 fab9 	bl	8013620 <prvcy_mngr_addr_hndlr>

080120ae <??non_conn_mngr_adv_cbk_4>:
 80120ae:	f108 0058 	add.w	r0, r8, #88	; 0x58
 80120b2:	6840      	ldr	r0, [r0, #4]
 80120b4:	f7ef fe85 	bl	8001dc2 <evnt_schdlr_evnt_updtd>
 80120b8:	68a8      	ldr	r0, [r5, #8]
 80120ba:	f001 fa51 	bl	8013560 <free_buff_hdr>
 80120be:	e014      	b.n	80120ea <??non_conn_mngr_adv_cbk_5>

080120c0 <??non_conn_mngr_adv_cbk_2>:
 80120c0:	f001 fa4e 	bl	8013560 <free_buff_hdr>
 80120c4:	2000      	movs	r0, #0
 80120c6:	241f      	movs	r4, #31
 80120c8:	f7ee f882 	bl	80001d0 <bsp_assert>

080120cc <??non_conn_mngr_adv_cbk_6>:
 80120cc:	fa5f fb8b 	uxtb.w	fp, fp
 80120d0:	f1bb 0f00 	cmp.w	fp, #0
 80120d4:	d109      	bne.n	80120ea <??non_conn_mngr_adv_cbk_5>
 80120d6:	2c00      	cmp	r4, #0
 80120d8:	bf1f      	itttt	ne
 80120da:	f8df 07a8 	ldrne.w	r0, [pc, #1960]	; 8012884 <??DataTable18>
 80120de:	6801      	ldrne	r1, [r0, #0]
 80120e0:	6809      	ldrne	r1, [r1, #0]
 80120e2:	2900      	cmpne	r1, #0
 80120e4:	bf1c      	itt	ne
 80120e6:	2003      	movne	r0, #3
 80120e8:	4788      	blxne	r1

080120ea <??non_conn_mngr_adv_cbk_5>:
 80120ea:	207d      	movs	r0, #125	; 0x7d
 80120ec:	f7ee f89e 	bl	800022c <bsp_debug_gpio_clear>
 80120f0:	b017      	add	sp, #92	; 0x5c
 80120f2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

080120f6 <??non_conn_mngr_adv_cbk_3>:
 80120f6:	ea5f 000b 	movs.w	r0, fp
 80120fa:	d11f      	bne.n	801213c <??non_conn_mngr_adv_cbk_7>
 80120fc:	2e05      	cmp	r6, #5
 80120fe:	d147      	bne.n	8012190 <??non_conn_mngr_adv_cbk_8>
 8012100:	2005      	movs	r0, #5
 8012102:	7138      	strb	r0, [r7, #4]
 8012104:	68a8      	ldr	r0, [r5, #8]
 8012106:	2206      	movs	r2, #6
 8012108:	6801      	ldr	r1, [r0, #0]
 801210a:	4650      	mov	r0, sl
 801210c:	1d09      	adds	r1, r1, #4
 801210e:	f7fc fd1b 	bl	800eb48 <ble_memcpy>
 8012112:	68a8      	ldr	r0, [r5, #8]
 8012114:	6801      	ldr	r1, [r0, #0]
 8012116:	780a      	ldrb	r2, [r1, #0]
 8012118:	f3c2 1080 	ubfx	r0, r2, #6, #1
 801211c:	7038      	strb	r0, [r7, #0]
 801211e:	f8ca a024 	str.w	sl, [sl, #36]	; 0x24
 8012122:	7078      	strb	r0, [r7, #1]
 8012124:	f89a 0020 	ldrb.w	r0, [sl, #32]
 8012128:	2801      	cmp	r0, #1
 801212a:	d107      	bne.n	801213c <??non_conn_mngr_adv_cbk_7>
 801212c:	f108 0158 	add.w	r1, r8, #88	; 0x58
 8012130:	7a09      	ldrb	r1, [r1, #8]
 8012132:	2000      	movs	r0, #0
 8012134:	f001 fa74 	bl	8013620 <prvcy_mngr_addr_hndlr>
 8012138:	0004      	movs	r4, r0
 801213a:	d129      	bne.n	8012190 <??non_conn_mngr_adv_cbk_8>

0801213c <??non_conn_mngr_adv_cbk_7>:
 801213c:	7878      	ldrb	r0, [r7, #1]
 801213e:	f8da 1024 	ldr.w	r1, [sl, #36]	; 0x24
 8012142:	2206      	movs	r2, #6
 8012144:	f88d 0043 	strb.w	r0, [sp, #67]	; 0x43
 8012148:	a808      	add	r0, sp, #32
 801214a:	f7fc fcfd 	bl	800eb48 <ble_memcpy>
 801214e:	f89a 0020 	ldrb.w	r0, [sl, #32]
 8012152:	2801      	cmp	r0, #1
 8012154:	d127      	bne.n	80121a6 <??non_conn_mngr_adv_cbk_9>
 8012156:	f8da 2024 	ldr.w	r2, [sl, #36]	; 0x24
 801215a:	7879      	ldrb	r1, [r7, #1]
 801215c:	ab07      	add	r3, sp, #28
 801215e:	f7f7 f99f 	bl	80094a0 <llhwc_lst_search>
 8012162:	0004      	movs	r4, r0
 8012164:	d1b2      	bne.n	80120cc <??non_conn_mngr_adv_cbk_6>
 8012166:	f89d 001c 	ldrb.w	r0, [sp, #28]
 801216a:	07c1      	lsls	r1, r0, #31
 801216c:	d41b      	bmi.n	80121a6 <??non_conn_mngr_adv_cbk_9>
 801216e:	ab07      	add	r3, sp, #28
 8012170:	4652      	mov	r2, sl
 8012172:	2101      	movs	r1, #1
 8012174:	2003      	movs	r0, #3
 8012176:	f7f7 f993 	bl	80094a0 <llhwc_lst_search>
 801217a:	0004      	movs	r4, r0
 801217c:	d1a6      	bne.n	80120cc <??non_conn_mngr_adv_cbk_6>
 801217e:	f89d 001c 	ldrb.w	r0, [sp, #28]
 8012182:	07c1      	lsls	r1, r0, #31
 8012184:	d404      	bmi.n	8012190 <??non_conn_mngr_adv_cbk_8>
 8012186:	4601      	mov	r1, r0
 8012188:	2200      	movs	r2, #0
 801218a:	2001      	movs	r0, #1
 801218c:	f7f7 fc66 	bl	8009a5c <llhwc_lst_edit_indicators>

08012190 <??non_conn_mngr_adv_cbk_8>:
 8012190:	f108 0058 	add.w	r0, r8, #88	; 0x58
 8012194:	6840      	ldr	r0, [r0, #4]
 8012196:	f10b 0b01 	add.w	fp, fp, #1
 801219a:	f7ef fe12 	bl	8001dc2 <evnt_schdlr_evnt_updtd>
 801219e:	68a8      	ldr	r0, [r5, #8]
 80121a0:	f001 f9de 	bl	8013560 <free_buff_hdr>
 80121a4:	e792      	b.n	80120cc <??non_conn_mngr_adv_cbk_6>

080121a6 <??non_conn_mngr_adv_cbk_9>:
 80121a6:	68a8      	ldr	r0, [r5, #8]
 80121a8:	f001 f9da 	bl	8013560 <free_buff_hdr>
 80121ac:	2e05      	cmp	r6, #5
 80121ae:	d162      	bne.n	8012276 <??non_conn_mngr_adv_cbk_10>
 80121b0:	f899 0000 	ldrb.w	r0, [r9]
 80121b4:	2801      	cmp	r0, #1
 80121b6:	bf18      	it	ne
 80121b8:	2804      	cmpne	r0, #4
 80121ba:	d124      	bne.n	8012206 <??non_conn_mngr_adv_cbk_11>
 80121bc:	2206      	movs	r2, #6
 80121be:	a908      	add	r1, sp, #32
 80121c0:	f108 0023 	add.w	r0, r8, #35	; 0x23
 80121c4:	f7fc fd4b 	bl	800ec5e <ble_memcmp>
 80121c8:	2800      	cmp	r0, #0
 80121ca:	bf02      	ittt	eq
 80121cc:	f898 0009 	ldrbeq.w	r0, [r8, #9]
 80121d0:	f89d 1043 	ldrbeq.w	r1, [sp, #67]	; 0x43
 80121d4:	4288      	cmpeq	r0, r1
 80121d6:	d016      	beq.n	8012206 <??non_conn_mngr_adv_cbk_11>
 80121d8:	f89a 0020 	ldrb.w	r0, [sl, #32]
 80121dc:	2800      	cmp	r0, #0
 80121de:	d04a      	beq.n	8012276 <??non_conn_mngr_adv_cbk_10>
 80121e0:	f89d 1043 	ldrb.w	r1, [sp, #67]	; 0x43
 80121e4:	f898 0009 	ldrb.w	r0, [r8, #9]
 80121e8:	1e89      	subs	r1, r1, #2
 80121ea:	4288      	cmp	r0, r1
 80121ec:	d105      	bne.n	80121fa <??non_conn_mngr_adv_cbk_12>
 80121ee:	f108 0123 	add.w	r1, r8, #35	; 0x23
 80121f2:	a808      	add	r0, sp, #32
 80121f4:	f002 f8c2 	bl	801437c <prvcy_mngr_chck_rpa>
 80121f8:	b128      	cbz	r0, 8012206 <??non_conn_mngr_adv_cbk_11>

080121fa <??non_conn_mngr_adv_cbk_12>:
 80121fa:	f89d 1043 	ldrb.w	r1, [sp, #67]	; 0x43
 80121fe:	a808      	add	r0, sp, #32
 8012200:	f002 f8dd 	bl	80143be <prvcy_mngr_chck_dev_prvcy_mode>
 8012204:	bbb8      	cbnz	r0, 8012276 <??non_conn_mngr_adv_cbk_10>

08012206 <??non_conn_mngr_adv_cbk_11>:
 8012206:	f108 0658 	add.w	r6, r8, #88	; 0x58
 801220a:	6830      	ldr	r0, [r6, #0]
 801220c:	2105      	movs	r1, #5
 801220e:	f002 f9af 	bl	8014570 <state_mngr_update_state>
 8012212:	0004      	movs	r4, r0
 8012214:	f47f af5a 	bne.w	80120cc <??non_conn_mngr_adv_cbk_6>
 8012218:	4629      	mov	r1, r5
 801221a:	a80a      	add	r0, sp, #40	; 0x28
 801221c:	f002 fae2 	bl	80147e4 <ble_time_set>
 8012220:	2001      	movs	r0, #1
 8012222:	f7f0 f842 	bl	80022aa <evnt_schdlr_set_pndg_evnts>
 8012226:	6870      	ldr	r0, [r6, #4]
 8012228:	f7ef f965 	bl	80014f6 <evnt_schdlr_unrgstr_evnt>
 801222c:	0004      	movs	r4, r0
 801222e:	f47f af4d 	bne.w	80120cc <??non_conn_mngr_adv_cbk_6>
 8012232:	2000      	movs	r0, #0
 8012234:	6070      	str	r0, [r6, #4]
 8012236:	2101      	movs	r1, #1
 8012238:	7271      	strb	r1, [r6, #9]
 801223a:	f240 40e2 	movw	r0, #1250	; 0x4e2
 801223e:	9004      	str	r0, [sp, #16]
 8012240:	f899 000a 	ldrb.w	r0, [r9, #10]
 8012244:	f898 1008 	ldrb.w	r1, [r8, #8]
 8012248:	f8cd 8008 	str.w	r8, [sp, #8]
 801224c:	9000      	str	r0, [sp, #0]
 801224e:	2200      	movs	r2, #0
 8012250:	f89a 3020 	ldrb.w	r3, [sl, #32]
 8012254:	9203      	str	r2, [sp, #12]
 8012256:	9101      	str	r1, [sp, #4]
 8012258:	6830      	ldr	r0, [r6, #0]
 801225a:	4652      	mov	r2, sl
 801225c:	a908      	add	r1, sp, #32
 801225e:	f003 fad9 	bl	8015814 <conn_mngr_slave_start_connection>
 8012262:	4604      	mov	r4, r0
 8012264:	2000      	movs	r0, #0
 8012266:	f7f0 f820 	bl	80022aa <evnt_schdlr_set_pndg_evnts>
 801226a:	2c00      	cmp	r4, #0
 801226c:	f47f af2e 	bne.w	80120cc <??non_conn_mngr_adv_cbk_6>
 8012270:	2001      	movs	r0, #1
 8012272:	7270      	strb	r0, [r6, #9]
 8012274:	e739      	b.n	80120ea <??non_conn_mngr_adv_cbk_5>

08012276 <??non_conn_mngr_adv_cbk_10>:
 8012276:	f108 0158 	add.w	r1, r8, #88	; 0x58
 801227a:	6848      	ldr	r0, [r1, #4]
 801227c:	f7ef fda1 	bl	8001dc2 <evnt_schdlr_evnt_updtd>
 8012280:	e733      	b.n	80120ea <??non_conn_mngr_adv_cbk_5>

08012282 <??non_conn_mngr_adv_cbk_0>:
 8012282:	2800      	cmp	r0, #0
 8012284:	f47f af31 	bne.w	80120ea <??non_conn_mngr_adv_cbk_5>
 8012288:	f108 0558 	add.w	r5, r8, #88	; 0x58
 801228c:	6868      	ldr	r0, [r5, #4]
 801228e:	f7ef f932 	bl	80014f6 <evnt_schdlr_unrgstr_evnt>
 8012292:	0004      	movs	r4, r0
 8012294:	f47f af1a 	bne.w	80120cc <??non_conn_mngr_adv_cbk_6>
 8012298:	2000      	movs	r0, #0
 801229a:	6068      	str	r0, [r5, #4]
 801229c:	6828      	ldr	r0, [r5, #0]
 801229e:	2100      	movs	r1, #0
 80122a0:	f002 f966 	bl	8014570 <state_mngr_update_state>
 80122a4:	0004      	movs	r4, r0
 80122a6:	f47f af11 	bne.w	80120cc <??non_conn_mngr_adv_cbk_6>
 80122aa:	f8df 05d8 	ldr.w	r0, [pc, #1496]	; 8012884 <??DataTable18>
 80122ae:	6801      	ldr	r1, [r0, #0]
 80122b0:	688c      	ldr	r4, [r1, #8]
 80122b2:	b914      	cbnz	r4, 80122ba <??non_conn_mngr_adv_cbk_13>

080122b4 <??non_conn_mngr_adv_cbk_14>:
 80122b4:	2001      	movs	r0, #1
 80122b6:	7268      	strb	r0, [r5, #9]
 80122b8:	e717      	b.n	80120ea <??non_conn_mngr_adv_cbk_5>

080122ba <??non_conn_mngr_adv_cbk_13>:
 80122ba:	f108 0321 	add.w	r3, r8, #33	; 0x21
 80122be:	f108 0223 	add.w	r2, r8, #35	; 0x23
 80122c2:	785b      	ldrb	r3, [r3, #1]
 80122c4:	2100      	movs	r1, #0
 80122c6:	9200      	str	r2, [sp, #0]
 80122c8:	9106      	str	r1, [sp, #24]
 80122ca:	9105      	str	r1, [sp, #20]
 80122cc:	9104      	str	r1, [sp, #16]
 80122ce:	9103      	str	r1, [sp, #12]
 80122d0:	9102      	str	r1, [sp, #8]
 80122d2:	9101      	str	r1, [sp, #4]
 80122d4:	2201      	movs	r2, #1
 80122d6:	203c      	movs	r0, #60	; 0x3c
 80122d8:	47a0      	blx	r4
 80122da:	e7eb      	b.n	80122b4 <??non_conn_mngr_adv_cbk_14>

080122dc <non_conn_mngr_conn_create>:
 80122dc:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80122e0:	b088      	sub	sp, #32
 80122e2:	4605      	mov	r5, r0
 80122e4:	4690      	mov	r8, r2
 80122e6:	461f      	mov	r7, r3
 80122e8:	2210      	movs	r2, #16
 80122ea:	2100      	movs	r1, #0
 80122ec:	a804      	add	r0, sp, #16
 80122ee:	2400      	movs	r4, #0
 80122f0:	f01e fe5d 	bl	8030fae <memset>
 80122f4:	9403      	str	r4, [sp, #12]
 80122f6:	b90d      	cbnz	r5, 80122fc <??non_conn_mngr_conn_create_0>
 80122f8:	2412      	movs	r4, #18
 80122fa:	e0c6      	b.n	801248a <??non_conn_mngr_conn_create_1>

080122fc <??non_conn_mngr_conn_create_0>:
 80122fc:	f8df 9588 	ldr.w	r9, [pc, #1416]	; 8012888 <??DataTable18_1>
 8012300:	f109 06c0 	add.w	r6, r9, #192	; 0xc0
 8012304:	7f30      	ldrb	r0, [r6, #28]
 8012306:	b110      	cbz	r0, 801230e <??non_conn_mngr_conn_create_2>
 8012308:	f7f7 fc54 	bl	8009bb4 <llhwc_is_dtm_enabled>
 801230c:	b120      	cbz	r0, 8012318 <??non_conn_mngr_conn_create_3>

0801230e <??non_conn_mngr_conn_create_2>:
 801230e:	2040      	movs	r0, #64	; 0x40
 8012310:	240c      	movs	r4, #12
 8012312:	f7ed ff8d 	bl	8000230 <bsp_debug_gpio_toggle>
 8012316:	e0b8      	b.n	801248a <??non_conn_mngr_conn_create_1>

08012318 <??non_conn_mngr_conn_create_3>:
 8012318:	7be9      	ldrb	r1, [r5, #15]
 801231a:	1d68      	adds	r0, r5, #5
 801231c:	f003 fa18 	bl	8015750 <conn_mngr_check_duplicate_connection>
 8012320:	b108      	cbz	r0, 8012326 <??non_conn_mngr_conn_create_4>
 8012322:	240b      	movs	r4, #11
 8012324:	e0b1      	b.n	801248a <??non_conn_mngr_conn_create_1>

08012326 <??non_conn_mngr_conn_create_4>:
 8012326:	2f00      	cmp	r7, #0
 8012328:	bf08      	it	eq
 801232a:	f1b8 0f40 	cmpeq.w	r8, #64	; 0x40
 801232e:	f040 808f 	bne.w	8012450 <??non_conn_mngr_conn_create_5>
 8012332:	7ba8      	ldrb	r0, [r5, #14]
 8012334:	f88d 0000 	strb.w	r0, [sp]
 8012338:	2004      	movs	r0, #4
 801233a:	f002 f8bb 	bl	80144b4 <state_mngr_alloc_state_mchn>
 801233e:	6170      	str	r0, [r6, #20]
 8012340:	2800      	cmp	r0, #0
 8012342:	f000 8088 	beq.w	8012456 <??non_conn_mngr_conn_create_6>
 8012346:	f109 07bd 	add.w	r7, r9, #189	; 0xbd
 801234a:	2210      	movs	r2, #16
 801234c:	4629      	mov	r1, r5
 801234e:	f109 00b0 	add.w	r0, r9, #176	; 0xb0
 8012352:	f7fc fbf9 	bl	800eb48 <ble_memcpy>
 8012356:	7878      	ldrb	r0, [r7, #1]
 8012358:	f8df 8530 	ldr.w	r8, [pc, #1328]	; 801288c <??DataTable18_2>
 801235c:	4641      	mov	r1, r8
 801235e:	f000 0001 	and.w	r0, r0, #1
 8012362:	f003 ff12 	bl	801618a <db_get_src_address>
 8012366:	0004      	movs	r4, r0
 8012368:	f040 808f 	bne.w	801248a <??non_conn_mngr_conn_create_1>
 801236c:	f8df a184 	ldr.w	sl, [pc, #388]	; 80124f4 <??DataTable12>
 8012370:	f10a 0b20 	add.w	fp, sl, #32
 8012374:	f89b 0000 	ldrb.w	r0, [fp]
 8012378:	2801      	cmp	r0, #1
 801237a:	bf1c      	itt	ne
 801237c:	7839      	ldrbne	r1, [r7, #0]
 801237e:	2901      	cmpne	r1, #1
 8012380:	d110      	bne.n	80123a4 <??non_conn_mngr_conn_create_7>
 8012382:	7878      	ldrb	r0, [r7, #1]
 8012384:	1e81      	subs	r1, r0, #2
 8012386:	2902      	cmp	r1, #2
 8012388:	d20c      	bcs.n	80123a4 <??non_conn_mngr_conn_create_7>
 801238a:	f000 0001 	and.w	r0, r0, #1
 801238e:	f88b 000e 	strb.w	r0, [fp, #14]
 8012392:	4641      	mov	r1, r8
 8012394:	f109 00b5 	add.w	r0, r9, #181	; 0xb5
 8012398:	f001 fac2 	bl	8013920 <prvcy_mngr_get_local_rpa>
 801239c:	b910      	cbnz	r0, 80123a4 <??non_conn_mngr_conn_create_7>
 801239e:	2001      	movs	r0, #1
 80123a0:	f88d 0000 	strb.w	r0, [sp]

080123a4 <??non_conn_mngr_conn_create_7>:
 80123a4:	f8df 44e8 	ldr.w	r4, [pc, #1256]	; 8012890 <??DataTable18_3>
 80123a8:	2206      	movs	r2, #6
 80123aa:	4621      	mov	r1, r4
 80123ac:	f10a 0010 	add.w	r0, sl, #16
 80123b0:	f7fc fbca 	bl	800eb48 <ble_memcpy>
 80123b4:	78b8      	ldrb	r0, [r7, #2]
 80123b6:	f000 0101 	and.w	r1, r0, #1
 80123ba:	f88b 100a 	strb.w	r1, [fp, #10]
 80123be:	2802      	cmp	r0, #2
 80123c0:	bf18      	it	ne
 80123c2:	2803      	cmpne	r0, #3
 80123c4:	d113      	bne.n	80123ee <??non_conn_mngr_conn_create_8>
 80123c6:	2300      	movs	r3, #0
 80123c8:	aa03      	add	r2, sp, #12
 80123ca:	4621      	mov	r1, r4
 80123cc:	2006      	movs	r0, #6
 80123ce:	f001 fc75 	bl	8013cbc <prvcy_mngr_srch_fw_reslvng_list>
 80123d2:	9803      	ldr	r0, [sp, #12]
 80123d4:	b158      	cbz	r0, 80123ee <??non_conn_mngr_conn_create_8>
 80123d6:	2206      	movs	r2, #6
 80123d8:	a904      	add	r1, sp, #16
 80123da:	f7fc fc40 	bl	800ec5e <ble_memcmp>
 80123de:	b130      	cbz	r0, 80123ee <??non_conn_mngr_conn_create_8>
 80123e0:	9903      	ldr	r1, [sp, #12]
 80123e2:	2206      	movs	r2, #6
 80123e4:	4620      	mov	r0, r4
 80123e6:	f7fc fbaf 	bl	800eb48 <ble_memcpy>
 80123ea:	2001      	movs	r0, #1
 80123ec:	70b8      	strb	r0, [r7, #2]

080123ee <??non_conn_mngr_conn_create_8>:
 80123ee:	8ca8      	ldrh	r0, [r5, #36]	; 0x24
 80123f0:	f105 0210 	add.w	r2, r5, #16
 80123f4:	8430      	strh	r0, [r6, #32]
 80123f6:	8c69      	ldrh	r1, [r5, #34]	; 0x22
 80123f8:	83f1      	strh	r1, [r6, #30]
 80123fa:	8d28      	ldrh	r0, [r5, #40]	; 0x28
 80123fc:	8470      	strh	r0, [r6, #34]	; 0x22
 80123fe:	8d69      	ldrh	r1, [r5, #42]	; 0x2a
 8012400:	84b1      	strh	r1, [r6, #36]	; 0x24
 8012402:	8da8      	ldrh	r0, [r5, #44]	; 0x2c
 8012404:	84f0      	strh	r0, [r6, #38]	; 0x26
 8012406:	8de9      	ldrh	r1, [r5, #46]	; 0x2e
 8012408:	8531      	strh	r1, [r6, #40]	; 0x28
 801240a:	6970      	ldr	r0, [r6, #20]
 801240c:	f109 01d0 	add.w	r1, r9, #208	; 0xd0
 8012410:	f003 f92a 	bl	8015668 <conn_mngr_create_connection>
 8012414:	0004      	movs	r4, r0
 8012416:	d138      	bne.n	801248a <??non_conn_mngr_conn_create_1>
 8012418:	2104      	movs	r1, #4
 801241a:	8171      	strh	r1, [r6, #10]
 801241c:	6830      	ldr	r0, [r6, #0]
 801241e:	b918      	cbnz	r0, 8012428 <??non_conn_mngr_conn_create_9>
 8012420:	481c      	ldr	r0, [pc, #112]	; (8012494 <??DataTable11>)
 8012422:	f7f2 fefd 	bl	8005220 <os_shrd_mem_alloc>
 8012426:	6030      	str	r0, [r6, #0]

08012428 <??non_conn_mngr_conn_create_9>:
 8012428:	f89d 3000 	ldrb.w	r3, [sp]
 801242c:	4632      	mov	r2, r6
 801242e:	f105 0110 	add.w	r1, r5, #16
 8012432:	f109 00b0 	add.w	r0, r9, #176	; 0xb0
 8012436:	f000 fae4 	bl	8012a02 <pdu_trnsprt_hndlr_form_nconn_init>
 801243a:	0004      	movs	r4, r0
 801243c:	d125      	bne.n	801248a <??non_conn_mngr_conn_create_1>
 801243e:	7b6a      	ldrb	r2, [r5, #13]
 8012440:	7be9      	ldrb	r1, [r5, #15]
 8012442:	1d68      	adds	r0, r5, #5
 8012444:	f001 ffd9 	bl	80143fa <prvcy_mngr_can_rslv_peer_init>
 8012448:	2801      	cmp	r0, #1
 801244a:	bf18      	it	ne
 801244c:	2000      	movne	r0, #0
 801244e:	e004      	b.n	801245a <??non_conn_mngr_conn_create_10>

08012450 <??non_conn_mngr_conn_create_5>:
 8012450:	f7ed febe 	bl	80001d0 <bsp_assert>
 8012454:	e019      	b.n	801248a <??non_conn_mngr_conn_create_1>

08012456 <??non_conn_mngr_conn_create_6>:
 8012456:	2409      	movs	r4, #9
 8012458:	e017      	b.n	801248a <??non_conn_mngr_conn_create_1>

0801245a <??non_conn_mngr_conn_create_10>:
 801245a:	f8df 1438 	ldr.w	r1, [pc, #1080]	; 8012894 <??DataTable18_4>
 801245e:	7008      	strb	r0, [r1, #0]
 8012460:	2000      	movs	r0, #0
 8012462:	9002      	str	r0, [sp, #8]
 8012464:	9001      	str	r0, [sp, #4]
 8012466:	9000      	str	r0, [sp, #0]
 8012468:	f20f 0395 	addw	r3, pc, #149	; 0x95
 801246c:	4642      	mov	r2, r8
 801246e:	2040      	movs	r0, #64	; 0x40
 8012470:	2100      	movs	r1, #0
 8012472:	f7ee ff41 	bl	80012f8 <evnt_schdlr_rgstr_evnt>
 8012476:	2800      	cmp	r0, #0
 8012478:	bf14      	ite	ne
 801247a:	2101      	movne	r1, #1
 801247c:	2100      	moveq	r1, #0
 801247e:	61b0      	str	r0, [r6, #24]
 8012480:	4608      	mov	r0, r1
 8012482:	f7ed fea5 	bl	80001d0 <bsp_assert>
 8012486:	2000      	movs	r0, #0
 8012488:	7730      	strb	r0, [r6, #28]

0801248a <??non_conn_mngr_conn_create_1>:
 801248a:	4620      	mov	r0, r4
 801248c:	b009      	add	sp, #36	; 0x24
 801248e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
	...

08012494 <??DataTable11>:
 8012494:	3644 2000                                   D6. 

08012498 <non_conn_mngr_conn_create_cancel>:
 8012498:	b570      	push	{r4, r5, r6, lr}
 801249a:	4605      	mov	r5, r0
 801249c:	f8df 63f8 	ldr.w	r6, [pc, #1016]	; 8012898 <??DataTable18_5>
 80124a0:	7f30      	ldrb	r0, [r6, #28]
 80124a2:	2801      	cmp	r0, #1
 80124a4:	d104      	bne.n	80124b0 <??non_conn_mngr_conn_create_cancel_0>
 80124a6:	2040      	movs	r0, #64	; 0x40
 80124a8:	240c      	movs	r4, #12
 80124aa:	f7ed fec1 	bl	8000230 <bsp_debug_gpio_toggle>
 80124ae:	e018      	b.n	80124e2 <??non_conn_mngr_conn_create_cancel_1>

080124b0 <??non_conn_mngr_conn_create_cancel_0>:
 80124b0:	6830      	ldr	r0, [r6, #0]
 80124b2:	b120      	cbz	r0, 80124be <??non_conn_mngr_conn_create_cancel_2>
 80124b4:	1f00      	subs	r0, r0, #4
 80124b6:	f7f2 feb1 	bl	800521c <os_mem_pool_free>
 80124ba:	2000      	movs	r0, #0
 80124bc:	6030      	str	r0, [r6, #0]

080124be <??non_conn_mngr_conn_create_cancel_2>:
 80124be:	8a30      	ldrh	r0, [r6, #16]
 80124c0:	f003 fc29 	bl	8015d16 <conn_mngr_free_handle>
 80124c4:	69b0      	ldr	r0, [r6, #24]
 80124c6:	f7ef f816 	bl	80014f6 <evnt_schdlr_unrgstr_evnt>
 80124ca:	0004      	movs	r4, r0
 80124cc:	d110      	bne.n	80124f0 <??non_conn_mngr_conn_create_cancel_3>
 80124ce:	2000      	movs	r0, #0
 80124d0:	61b0      	str	r0, [r6, #24]
 80124d2:	2100      	movs	r1, #0
 80124d4:	4628      	mov	r0, r5
 80124d6:	f002 f84b 	bl	8014570 <state_mngr_update_state>
 80124da:	0004      	movs	r4, r0
 80124dc:	d108      	bne.n	80124f0 <??non_conn_mngr_conn_create_cancel_3>
 80124de:	2001      	movs	r0, #1
 80124e0:	7730      	strb	r0, [r6, #28]

080124e2 <??non_conn_mngr_conn_create_cancel_1>:
 80124e2:	f8df 13b8 	ldr.w	r1, [pc, #952]	; 801289c <??DataTable18_6>
 80124e6:	200c      	movs	r0, #12
 80124e8:	7108      	strb	r0, [r1, #4]
 80124ea:	2002      	movs	r0, #2
 80124ec:	f7ed fef7 	bl	80002de <emngr_post_event>

080124f0 <??non_conn_mngr_conn_create_cancel_3>:
 80124f0:	4620      	mov	r0, r4
 80124f2:	bd70      	pop	{r4, r5, r6, pc}

080124f4 <??DataTable12>:
 80124f4:	1a18 2000                                   ... 

080124f8 <??DataTable12_1>:
 80124f8:	28a9 0801                                   .(..

080124fc <??DataTable12_2>:
 80124fc:	1804 2000                                   ... 

08012500 <non_conn_mngr_init_cbk>:
 8012500:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8012504:	b092      	sub	sp, #72	; 0x48
 8012506:	460d      	mov	r5, r1
 8012508:	4691      	mov	r9, r2
 801250a:	207e      	movs	r0, #126	; 0x7e
 801250c:	f7ed fe8c 	bl	8000228 <bsp_debug_gpio_set>
 8012510:	2d00      	cmp	r5, #0
 8012512:	bf14      	ite	ne
 8012514:	2001      	movne	r0, #1
 8012516:	2000      	moveq	r0, #0
 8012518:	f7ed fe5a 	bl	80001d0 <bsp_assert>
 801251c:	68a8      	ldr	r0, [r5, #8]
 801251e:	f895 a02b 	ldrb.w	sl, [r5, #43]	; 0x2b
 8012522:	f8df 637c 	ldr.w	r6, [pc, #892]	; 80128a0 <??DataTable18_7>
 8012526:	f000 fb71 	bl	8012c0c <pdu_trnsprt_hndlr_get_pdu_type>
 801252a:	4604      	mov	r4, r0
 801252c:	68a8      	ldr	r0, [r5, #8]
 801252e:	f106 072c 	add.w	r7, r6, #44	; 0x2c
 8012532:	f000 fb7d 	bl	8012c30 <pdu_trnsprt_hndlr_get_addrs_type>
 8012536:	70b8      	strb	r0, [r7, #2]
 8012538:	2208      	movs	r2, #8
 801253a:	4631      	mov	r1, r6
 801253c:	a807      	add	r0, sp, #28
 801253e:	f7fc fb03 	bl	800eb48 <ble_memcpy>
 8012542:	f896 0020 	ldrb.w	r0, [r6, #32]
 8012546:	b138      	cbz	r0, 8012558 <??non_conn_mngr_init_cbk_0>
 8012548:	49d2      	ldr	r1, [pc, #840]	; (8012894 <??DataTable18_4>)
 801254a:	7808      	ldrb	r0, [r1, #0]
 801254c:	1e41      	subs	r1, r0, #1
 801254e:	4189      	sbcs	r1, r1
 8012550:	0fc9      	lsrs	r1, r1, #31
 8012552:	f88d 1017 	strb.w	r1, [sp, #23]
 8012556:	e002      	b.n	801255e <??non_conn_mngr_init_cbk_1>

08012558 <??non_conn_mngr_init_cbk_0>:
 8012558:	2200      	movs	r2, #0
 801255a:	f88d 2017 	strb.w	r2, [sp, #23]

0801255e <??non_conn_mngr_init_cbk_1>:
 801255e:	f10d 0016 	add.w	r0, sp, #22
 8012562:	9000      	str	r0, [sp, #0]
 8012564:	68a8      	ldr	r0, [r5, #8]
 8012566:	2300      	movs	r3, #0
 8012568:	f106 0208 	add.w	r2, r6, #8
 801256c:	a90b      	add	r1, sp, #44	; 0x2c
 801256e:	f000 fadd 	bl	8012b2c <pdu_trnsprt_hndlr_parse_nconn_adv>
 8012572:	ea5f 0800 	movs.w	r8, r0
 8012576:	a80b      	add	r0, sp, #44	; 0x2c
 8012578:	9006      	str	r0, [sp, #24]
 801257a:	f89d 0046 	ldrb.w	r0, [sp, #70]	; 0x46
 801257e:	f88d 0014 	strb.w	r0, [sp, #20]
 8012582:	f040 80e7 	bne.w	8012754 <??non_conn_mngr_init_cbk_2>
 8012586:	f895 0020 	ldrb.w	r0, [r5, #32]
 801258a:	f8df b2fc 	ldr.w	fp, [pc, #764]	; 8012888 <??DataTable18_1>
 801258e:	2802      	cmp	r0, #2
 8012590:	d127      	bne.n	80125e2 <??non_conn_mngr_init_cbk_3>
 8012592:	2101      	movs	r1, #1
 8012594:	f88d 1016 	strb.w	r1, [sp, #22]
 8012598:	68a8      	ldr	r0, [r5, #8]
 801259a:	a906      	add	r1, sp, #24
 801259c:	6840      	ldr	r0, [r0, #4]
 801259e:	f000 fb58 	bl	8012c52 <pdu_trnsprt_hndlr_get_addr_from_aux_con_rsp>
 80125a2:	9906      	ldr	r1, [sp, #24]
 80125a4:	4680      	mov	r8, r0
 80125a6:	2206      	movs	r2, #6
 80125a8:	4630      	mov	r0, r6
 80125aa:	f7fc facd 	bl	800eb48 <ble_memcpy>
 80125ae:	6276      	str	r6, [r6, #36]	; 0x24
 80125b0:	f887 8001 	strb.w	r8, [r7, #1]
 80125b4:	f887 8000 	strb.w	r8, [r7]
 80125b8:	f10b 00ad 	add.w	r0, fp, #173	; 0xad
 80125bc:	7c01      	ldrb	r1, [r0, #16]
 80125be:	4650      	mov	r0, sl
 80125c0:	f001 f82e 	bl	8013620 <prvcy_mngr_addr_hndlr>
 80125c4:	7879      	ldrb	r1, [r7, #1]
 80125c6:	4680      	mov	r8, r0
 80125c8:	a807      	add	r0, sp, #28
 80125ca:	f88d 1014 	strb.w	r1, [sp, #20]
 80125ce:	6a72      	ldr	r2, [r6, #36]	; 0x24
 80125d0:	4631      	mov	r1, r6
 80125d2:	9206      	str	r2, [sp, #24]
 80125d4:	2208      	movs	r2, #8
 80125d6:	f7fc fab7 	bl	800eb48 <ble_memcpy>
 80125da:	68a8      	ldr	r0, [r5, #8]
 80125dc:	6840      	ldr	r0, [r0, #4]
 80125de:	f000 ffbf 	bl	8013560 <free_buff_hdr>

080125e2 <??non_conn_mngr_init_cbk_3>:
 80125e2:	68a8      	ldr	r0, [r5, #8]
 80125e4:	f000 ffbc 	bl	8013560 <free_buff_hdr>
 80125e8:	f895 0020 	ldrb.w	r0, [r5, #32]
 80125ec:	2801      	cmp	r0, #1
 80125ee:	d165      	bne.n	80126bc <??non_conn_mngr_init_cbk_4>
 80125f0:	9906      	ldr	r1, [sp, #24]
 80125f2:	2206      	movs	r2, #6
 80125f4:	4630      	mov	r0, r6
 80125f6:	f7fc faa7 	bl	800eb48 <ble_memcpy>
 80125fa:	f89d 0014 	ldrb.w	r0, [sp, #20]
 80125fe:	f1ba 0f01 	cmp.w	sl, #1
 8012602:	7038      	strb	r0, [r7, #0]
 8012604:	6276      	str	r6, [r6, #36]	; 0x24
 8012606:	7078      	strb	r0, [r7, #1]
 8012608:	d10e      	bne.n	8012628 <??non_conn_mngr_init_cbk_5>
 801260a:	713c      	strb	r4, [r7, #4]
 801260c:	2005      	movs	r0, #5
 801260e:	70f8      	strb	r0, [r7, #3]
 8012610:	f896 1020 	ldrb.w	r1, [r6, #32]
 8012614:	2901      	cmp	r1, #1
 8012616:	d14b      	bne.n	80126b0 <??non_conn_mngr_init_cbk_6>
 8012618:	f10b 00ad 	add.w	r0, fp, #173	; 0xad
 801261c:	7c01      	ldrb	r1, [r0, #16]
 801261e:	2001      	movs	r0, #1
 8012620:	f000 fffe 	bl	8013620 <prvcy_mngr_addr_hndlr>
 8012624:	4680      	mov	r8, r0
 8012626:	e043      	b.n	80126b0 <??non_conn_mngr_init_cbk_6>

08012628 <??non_conn_mngr_init_cbk_5>:
 8012628:	ea5f 000a 	movs.w	r0, sl
 801262c:	d119      	bne.n	8012662 <??non_conn_mngr_init_cbk_7>
 801262e:	f896 0020 	ldrb.w	r0, [r6, #32]
 8012632:	2801      	cmp	r0, #1
 8012634:	d106      	bne.n	8012644 <??non_conn_mngr_init_cbk_8>
 8012636:	f10b 01ad 	add.w	r1, fp, #173	; 0xad
 801263a:	7c09      	ldrb	r1, [r1, #16]
 801263c:	2000      	movs	r0, #0
 801263e:	f000 ffef 	bl	8013620 <prvcy_mngr_addr_hndlr>
 8012642:	4680      	mov	r8, r0

08012644 <??non_conn_mngr_init_cbk_8>:
 8012644:	f1b8 0f00 	cmp.w	r8, #0
 8012648:	bf18      	it	ne
 801264a:	f04f 0a01 	movne.w	sl, #1
 801264e:	f040 8081 	bne.w	8012754 <??non_conn_mngr_init_cbk_2>
 8012652:	7878      	ldrb	r0, [r7, #1]
 8012654:	2206      	movs	r2, #6
 8012656:	f88d 0014 	strb.w	r0, [sp, #20]
 801265a:	6a71      	ldr	r1, [r6, #36]	; 0x24
 801265c:	9806      	ldr	r0, [sp, #24]
 801265e:	f7fc fa73 	bl	800eb48 <ble_memcpy>

08012662 <??non_conn_mngr_init_cbk_7>:
 8012662:	f896 0020 	ldrb.w	r0, [r6, #32]
 8012666:	2801      	cmp	r0, #1
 8012668:	d128      	bne.n	80126bc <??non_conn_mngr_init_cbk_4>
 801266a:	9a06      	ldr	r2, [sp, #24]
 801266c:	f89d 1014 	ldrb.w	r1, [sp, #20]
 8012670:	f10d 0315 	add.w	r3, sp, #21
 8012674:	f7f6 ff14 	bl	80094a0 <llhwc_lst_search>
 8012678:	ea5f 0800 	movs.w	r8, r0
 801267c:	d16a      	bne.n	8012754 <??non_conn_mngr_init_cbk_2>
 801267e:	f89d 0015 	ldrb.w	r0, [sp, #21]
 8012682:	07c1      	lsls	r1, r0, #31
 8012684:	d41a      	bmi.n	80126bc <??non_conn_mngr_init_cbk_4>
 8012686:	f10d 0315 	add.w	r3, sp, #21
 801268a:	4632      	mov	r2, r6
 801268c:	2101      	movs	r1, #1
 801268e:	2003      	movs	r0, #3
 8012690:	f7f6 ff06 	bl	80094a0 <llhwc_lst_search>
 8012694:	ea5f 0800 	movs.w	r8, r0
 8012698:	d15c      	bne.n	8012754 <??non_conn_mngr_init_cbk_2>
 801269a:	f89d 0015 	ldrb.w	r0, [sp, #21]
 801269e:	07c1      	lsls	r1, r0, #31
 80126a0:	d404      	bmi.n	80126ac <??non_conn_mngr_init_cbk_9>
 80126a2:	4601      	mov	r1, r0
 80126a4:	2200      	movs	r2, #0
 80126a6:	2001      	movs	r0, #1
 80126a8:	f7f7 f9d8 	bl	8009a5c <llhwc_lst_edit_indicators>

080126ac <??non_conn_mngr_init_cbk_9>:
 80126ac:	f10a 0a01 	add.w	sl, sl, #1

080126b0 <??non_conn_mngr_init_cbk_6>:
 80126b0:	f10b 00c0 	add.w	r0, fp, #192	; 0xc0
 80126b4:	6980      	ldr	r0, [r0, #24]
 80126b6:	f7ef fb84 	bl	8001dc2 <evnt_schdlr_evnt_updtd>
 80126ba:	e04b      	b.n	8012754 <??non_conn_mngr_init_cbk_2>

080126bc <??non_conn_mngr_init_cbk_4>:
 80126bc:	f10b 04c0 	add.w	r4, fp, #192	; 0xc0
 80126c0:	6960      	ldr	r0, [r4, #20]
 80126c2:	2105      	movs	r1, #5
 80126c4:	f001 ff54 	bl	8014570 <state_mngr_update_state>
 80126c8:	ea5f 0800 	movs.w	r8, r0
 80126cc:	d142      	bne.n	8012754 <??non_conn_mngr_init_cbk_2>
 80126ce:	6821      	ldr	r1, [r4, #0]
 80126d0:	7808      	ldrb	r0, [r1, #0]
 80126d2:	f3c0 1080 	ubfx	r0, r0, #6, #1
 80126d6:	b138      	cbz	r0, 80126e8 <??non_conn_mngr_init_cbk_10>
 80126d8:	f10b 00ad 	add.w	r0, fp, #173	; 0xad
 80126dc:	7802      	ldrb	r2, [r0, #0]
 80126de:	0992      	lsrs	r2, r2, #6
 80126e0:	2a01      	cmp	r2, #1
 80126e2:	bf08      	it	eq
 80126e4:	7c46      	ldrbeq	r6, [r0, #17]
 80126e6:	d000      	beq.n	80126ea <??non_conn_mngr_init_cbk_11>

080126e8 <??non_conn_mngr_init_cbk_10>:
 80126e8:	2600      	movs	r6, #0

080126ea <??non_conn_mngr_init_cbk_11>:
 80126ea:	1f08      	subs	r0, r1, #4
 80126ec:	f7f2 fd96 	bl	800521c <os_mem_pool_free>
 80126f0:	2000      	movs	r0, #0
 80126f2:	6020      	str	r0, [r4, #0]
 80126f4:	2001      	movs	r0, #1
 80126f6:	f7ef fdd8 	bl	80022aa <evnt_schdlr_set_pndg_evnts>
 80126fa:	69a0      	ldr	r0, [r4, #24]
 80126fc:	f7ee fefb 	bl	80014f6 <evnt_schdlr_unrgstr_evnt>
 8012700:	ea5f 0800 	movs.w	r8, r0
 8012704:	d126      	bne.n	8012754 <??non_conn_mngr_init_cbk_2>
 8012706:	69a1      	ldr	r1, [r4, #24]
 8012708:	4648      	mov	r0, r9
 801270a:	4281      	cmp	r1, r0
 801270c:	d004      	beq.n	8012718 <??non_conn_mngr_init_cbk_12>
 801270e:	f7ee fef2 	bl	80014f6 <evnt_schdlr_unrgstr_evnt>
 8012712:	ea5f 0800 	movs.w	r8, r0
 8012716:	d11d      	bne.n	8012754 <??non_conn_mngr_init_cbk_2>

08012718 <??non_conn_mngr_init_cbk_12>:
 8012718:	2000      	movs	r0, #0
 801271a:	61a0      	str	r0, [r4, #24]
 801271c:	4629      	mov	r1, r5
 801271e:	a809      	add	r0, sp, #36	; 0x24
 8012720:	f002 f860 	bl	80147e4 <ble_time_set>
 8012724:	f89d 0016 	ldrb.w	r0, [sp, #22]
 8012728:	f10b 01a8 	add.w	r1, fp, #168	; 0xa8
 801272c:	9103      	str	r1, [sp, #12]
 801272e:	9004      	str	r0, [sp, #16]
 8012730:	9602      	str	r6, [sp, #8]
 8012732:	f89d 2017 	ldrb.w	r2, [sp, #23]
 8012736:	a807      	add	r0, sp, #28
 8012738:	9000      	str	r0, [sp, #0]
 801273a:	9201      	str	r2, [sp, #4]
 801273c:	9a06      	ldr	r2, [sp, #24]
 801273e:	f89d 1014 	ldrb.w	r1, [sp, #20]
 8012742:	8a20      	ldrh	r0, [r4, #16]
 8012744:	ab09      	add	r3, sp, #36	; 0x24
 8012746:	f003 f827 	bl	8015798 <conn_mngr_master_start_connection>
 801274a:	ea5f 0800 	movs.w	r8, r0
 801274e:	bf04      	itt	eq
 8012750:	2001      	moveq	r0, #1
 8012752:	7720      	strbeq	r0, [r4, #28]

08012754 <??non_conn_mngr_init_cbk_2>:
 8012754:	2000      	movs	r0, #0
 8012756:	f7ef fda8 	bl	80022aa <evnt_schdlr_set_pndg_evnts>
 801275a:	fa5f fa8a 	uxtb.w	sl, sl
 801275e:	f1ba 0f00 	cmp.w	sl, #0
 8012762:	d109      	bne.n	8012778 <??non_conn_mngr_init_cbk_13>
 8012764:	f1b8 0f00 	cmp.w	r8, #0
 8012768:	bf1f      	itttt	ne
 801276a:	4846      	ldrne	r0, [pc, #280]	; (8012884 <??DataTable18>)
 801276c:	6801      	ldrne	r1, [r0, #0]
 801276e:	6809      	ldrne	r1, [r1, #0]
 8012770:	2900      	cmpne	r1, #0
 8012772:	bf1c      	itt	ne
 8012774:	2003      	movne	r0, #3
 8012776:	4788      	blxne	r1

08012778 <??non_conn_mngr_init_cbk_13>:
 8012778:	207e      	movs	r0, #126	; 0x7e
 801277a:	f7ed fd57 	bl	800022c <bsp_debug_gpio_clear>
 801277e:	b013      	add	sp, #76	; 0x4c
 8012780:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08012784 <non_conn_mngr_get_init_cbk>:
 8012784:	4847      	ldr	r0, [pc, #284]	; (80128a4 <??DataTable18_8>)
 8012786:	4770      	bx	lr

08012788 <non_conn_mngr_event_status_check>:
 8012788:	b510      	push	{r4, lr}
 801278a:	2400      	movs	r4, #0
 801278c:	493e      	ldr	r1, [pc, #248]	; (8012888 <??DataTable18_1>)
 801278e:	f891 0061 	ldrb.w	r0, [r1, #97]	; 0x61
 8012792:	f891 20dc 	ldrb.w	r2, [r1, #220]	; 0xdc
 8012796:	2800      	cmp	r0, #0
 8012798:	bf1c      	itt	ne
 801279a:	f891 0091 	ldrbne.w	r0, [r1, #145]	; 0x91
 801279e:	2800      	cmpne	r0, #0
 80127a0:	d000      	beq.n	80127a4 <??non_conn_mngr_event_status_check_0>
 80127a2:	b91a      	cbnz	r2, 80127ac <??non_conn_mngr_event_status_check_1>

080127a4 <??non_conn_mngr_event_status_check_0>:
 80127a4:	2040      	movs	r0, #64	; 0x40
 80127a6:	240c      	movs	r4, #12
 80127a8:	f7ed fd42 	bl	8000230 <bsp_debug_gpio_toggle>

080127ac <??non_conn_mngr_event_status_check_1>:
 80127ac:	4620      	mov	r0, r4
 80127ae:	bd10      	pop	{r4, pc}

080127b0 <non_conn_mngr_update_rpa_src_addr>:
 80127b0:	b580      	push	{r7, lr}
 80127b2:	4935      	ldr	r1, [pc, #212]	; (8012888 <??DataTable18_1>)
 80127b4:	f891 0061 	ldrb.w	r0, [r1, #97]	; 0x61
 80127b8:	b938      	cbnz	r0, 80127ca <??non_conn_mngr_update_rpa_src_addr_0>
 80127ba:	7a08      	ldrb	r0, [r1, #8]
 80127bc:	2802      	cmp	r0, #2
 80127be:	bf12      	itee	ne
 80127c0:	2803      	cmpne	r0, #3
 80127c2:	f101 0023 	addeq.w	r0, r1, #35	; 0x23
 80127c6:	f001 f8ab 	bleq	8013920 <prvcy_mngr_get_local_rpa>

080127ca <??non_conn_mngr_update_rpa_src_addr_0>:
 80127ca:	2000      	movs	r0, #0
 80127cc:	bd02      	pop	{r1, pc}

080127ce <non_conn_mngr_set_random_address>:
 80127ce:	b510      	push	{r4, lr}
 80127d0:	4a2d      	ldr	r2, [pc, #180]	; (8012888 <??DataTable18_1>)
 80127d2:	f892 1061 	ldrb.w	r1, [r2, #97]	; 0x61
 80127d6:	f892 30dc 	ldrb.w	r3, [r2, #220]	; 0xdc
 80127da:	2900      	cmp	r1, #0
 80127dc:	bf1c      	itt	ne
 80127de:	f892 1091 	ldrbne.w	r1, [r2, #145]	; 0x91
 80127e2:	2900      	cmpne	r1, #0
 80127e4:	d000      	beq.n	80127e8 <??non_conn_mngr_set_random_address_0>
 80127e6:	b923      	cbnz	r3, 80127f2 <??non_conn_mngr_set_random_address_1>

080127e8 <??non_conn_mngr_set_random_address_0>:
 80127e8:	2040      	movs	r0, #64	; 0x40
 80127ea:	240c      	movs	r4, #12
 80127ec:	f7ed fd20 	bl	8000230 <bsp_debug_gpio_toggle>
 80127f0:	e002      	b.n	80127f8 <??non_conn_mngr_set_random_address_2>

080127f2 <??non_conn_mngr_set_random_address_1>:
 80127f2:	f003 fe9f 	bl	8016534 <db_set_random_address>
 80127f6:	4604      	mov	r4, r0

080127f8 <??non_conn_mngr_set_random_address_2>:
 80127f8:	4620      	mov	r0, r4
 80127fa:	bd10      	pop	{r4, pc}

080127fc <non_conn_mngr_get_link_status>:
 80127fc:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80127fe:	4604      	mov	r4, r0
 8012800:	4f21      	ldr	r7, [pc, #132]	; (8012888 <??DataTable18_1>)
 8012802:	f897 0061 	ldrb.w	r0, [r7, #97]	; 0x61
 8012806:	460d      	mov	r5, r1
 8012808:	4616      	mov	r6, r2
 801280a:	b9d8      	cbnz	r0, 8012844 <??non_conn_mngr_get_link_status_0>
 801280c:	e008      	b.n	8012820 <??non_conn_mngr_get_link_status_1>

0801280e <??non_conn_mngr_get_link_status_2>:
 801280e:	1c49      	adds	r1, r1, #1
 8012810:	b2c8      	uxtb	r0, r1
 8012812:	280a      	cmp	r0, #10
 8012814:	bfac      	ite	ge
 8012816:	2000      	movge	r0, #0
 8012818:	2001      	movlt	r0, #1
 801281a:	7031      	strb	r1, [r6, #0]
 801281c:	f7ed fcd8 	bl	80001d0 <bsp_assert>

08012820 <??non_conn_mngr_get_link_status_1>:
 8012820:	7831      	ldrb	r1, [r6, #0]
 8012822:	460a      	mov	r2, r1
 8012824:	5ca0      	ldrb	r0, [r4, r2]
 8012826:	2800      	cmp	r0, #0
 8012828:	d1f1      	bne.n	801280e <??non_conn_mngr_get_link_status_2>
 801282a:	2101      	movs	r1, #1
 801282c:	54a1      	strb	r1, [r4, r2]
 801282e:	7832      	ldrb	r2, [r6, #0]
 8012830:	20ff      	movs	r0, #255	; 0xff
 8012832:	1c69      	adds	r1, r5, #1
 8012834:	f805 0012 	strb.w	r0, [r5, r2, lsl #1]
 8012838:	7833      	ldrb	r3, [r6, #0]
 801283a:	f801 0013 	strb.w	r0, [r1, r3, lsl #1]
 801283e:	7830      	ldrb	r0, [r6, #0]
 8012840:	1c40      	adds	r0, r0, #1
 8012842:	7030      	strb	r0, [r6, #0]

08012844 <??non_conn_mngr_get_link_status_0>:
 8012844:	f897 0091 	ldrb.w	r0, [r7, #145]	; 0x91
 8012848:	b9d8      	cbnz	r0, 8012882 <??non_conn_mngr_get_link_status_3>
 801284a:	e008      	b.n	801285e <??non_conn_mngr_get_link_status_4>

0801284c <??non_conn_mngr_get_link_status_5>:
 801284c:	1c49      	adds	r1, r1, #1
 801284e:	b2c8      	uxtb	r0, r1
 8012850:	280a      	cmp	r0, #10
 8012852:	bfac      	ite	ge
 8012854:	2000      	movge	r0, #0
 8012856:	2001      	movlt	r0, #1
 8012858:	7031      	strb	r1, [r6, #0]
 801285a:	f7ed fcb9 	bl	80001d0 <bsp_assert>

0801285e <??non_conn_mngr_get_link_status_4>:
 801285e:	7831      	ldrb	r1, [r6, #0]
 8012860:	460a      	mov	r2, r1
 8012862:	5ca0      	ldrb	r0, [r4, r2]
 8012864:	2800      	cmp	r0, #0
 8012866:	d1f1      	bne.n	801284c <??non_conn_mngr_get_link_status_5>
 8012868:	2103      	movs	r1, #3
 801286a:	54a1      	strb	r1, [r4, r2]
 801286c:	7832      	ldrb	r2, [r6, #0]
 801286e:	20ff      	movs	r0, #255	; 0xff
 8012870:	1c69      	adds	r1, r5, #1
 8012872:	f805 0012 	strb.w	r0, [r5, r2, lsl #1]
 8012876:	7833      	ldrb	r3, [r6, #0]
 8012878:	f801 0013 	strb.w	r0, [r1, r3, lsl #1]
 801287c:	7830      	ldrb	r0, [r6, #0]
 801287e:	1c40      	adds	r0, r0, #1
 8012880:	7030      	strb	r0, [r6, #0]

08012882 <??non_conn_mngr_get_link_status_3>:
 8012882:	bdf1      	pop	{r0, r4, r5, r6, r7, pc}

08012884 <??DataTable18>:
 8012884:	06f0 2000                                   ... 

08012888 <??DataTable18_1>:
 8012888:	1790 2000                                   ... 

0801288c <??DataTable18_2>:
 801288c:	1838 2000                                   8.. 

08012890 <??DataTable18_3>:
 8012890:	1845 2000                                   E.. 

08012894 <??DataTable18_4>:
 8012894:	1884 2000                                   ... 

08012898 <??DataTable18_5>:
 8012898:	1850 2000                                   P.. 

0801289c <??DataTable18_6>:
 801289c:	187c 2000                                   |.. 

080128a0 <??DataTable18_7>:
 80128a0:	1a18 2000                                   ... 

080128a4 <??DataTable18_8>:
 80128a4:	2501 0801                                   .%..

080128a8 <non_conn_mngr_remove_conditional_event>:
 80128a8:	b538      	push	{r3, r4, r5, lr}
 80128aa:	6802      	ldr	r2, [r0, #0]
 80128ac:	8943      	ldrh	r3, [r0, #10]
 80128ae:	780d      	ldrb	r5, [r1, #0]
 80128b0:	2400      	movs	r4, #0
 80128b2:	441a      	add	r2, r3
 80128b4:	b11d      	cbz	r5, 80128be <??non_conn_mngr_remove_conditional_event_0>
 80128b6:	2d02      	cmp	r5, #2
 80128b8:	d010      	beq.n	80128dc <??non_conn_mngr_remove_conditional_event_1>
 80128ba:	d309      	bcc.n	80128d0 <??non_conn_mngr_remove_conditional_event_2>
 80128bc:	e015      	b.n	80128ea <??non_conn_mngr_remove_conditional_event_3>

080128be <??non_conn_mngr_remove_conditional_event_0>:
 80128be:	7813      	ldrb	r3, [r2, #0]
 80128c0:	7852      	ldrb	r2, [r2, #1]
 80128c2:	8849      	ldrh	r1, [r1, #2]
 80128c4:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
 80128c8:	f3c3 030b 	ubfx	r3, r3, #0, #12
 80128cc:	4299      	cmp	r1, r3
 80128ce:	e003      	b.n	80128d8 <??non_conn_mngr_remove_conditional_event_4>

080128d0 <??non_conn_mngr_remove_conditional_event_2>:
 80128d0:	7891      	ldrb	r1, [r2, #2]
 80128d2:	2902      	cmp	r1, #2
 80128d4:	d005      	beq.n	80128e2 <??non_conn_mngr_remove_conditional_event_5>
 80128d6:	290b      	cmp	r1, #11

080128d8 <??non_conn_mngr_remove_conditional_event_4>:
 80128d8:	d10a      	bne.n	80128f0 <??non_conn_mngr_remove_conditional_event_6>
 80128da:	e002      	b.n	80128e2 <??non_conn_mngr_remove_conditional_event_5>

080128dc <??non_conn_mngr_remove_conditional_event_1>:
 80128dc:	7891      	ldrb	r1, [r2, #2]
 80128de:	290d      	cmp	r1, #13
 80128e0:	d106      	bne.n	80128f0 <??non_conn_mngr_remove_conditional_event_6>

080128e2 <??non_conn_mngr_remove_conditional_event_5>:
 80128e2:	2401      	movs	r4, #1
 80128e4:	f7f2 fb8b 	bl	8004ffe <ll_intf_free_ll_pkt_hndlr>
 80128e8:	e002      	b.n	80128f0 <??non_conn_mngr_remove_conditional_event_6>

080128ea <??non_conn_mngr_remove_conditional_event_3>:
 80128ea:	2000      	movs	r0, #0
 80128ec:	f7ed fc70 	bl	80001d0 <bsp_assert>

080128f0 <??non_conn_mngr_remove_conditional_event_6>:
 80128f0:	4620      	mov	r0, r4
 80128f2:	bd32      	pop	{r1, r4, r5, pc}

080128f4 <intr_hndlr_reg>:
 80128f4:	4a07      	ldr	r2, [pc, #28]	; (8012914 <??DataTable1>)
 80128f6:	f842 0031 	str.w	r0, [r2, r1, lsl #3]
 80128fa:	2000      	movs	r0, #0
 80128fc:	eb02 01c1 	add.w	r1, r2, r1, lsl #3
 8012900:	6048      	str	r0, [r1, #4]
 8012902:	4770      	bx	lr

08012904 <os_process_isr>:
 8012904:	4601      	mov	r1, r0
 8012906:	4a03      	ldr	r2, [pc, #12]	; (8012914 <??DataTable1>)
 8012908:	eb02 03c1 	add.w	r3, r2, r1, lsl #3
 801290c:	6858      	ldr	r0, [r3, #4]
 801290e:	f852 1031 	ldr.w	r1, [r2, r1, lsl #3]

08012912 <__iar_annotation$$tailcall>:
 8012912:	4708      	bx	r1

08012914 <??DataTable1>:
 8012914:	1888 2000                                   ... 

08012918 <os_wrapper_init>:
 8012918:	f7f2 bf10 	b.w	800573c <os_timer_init>

0801291c <os_wrapper_reset>:
 801291c:	f7f2 bf18 	b.w	8005750 <os_timer_reset>

08012920 <os_wrapper_is_rtos_used>:
 8012920:	2000      	movs	r0, #0
 8012922:	4770      	bx	lr

08012924 <pdu_trnsprt_hndlr_form_adv_PDU_Hdr>:
 8012924:	b5f0      	push	{r4, r5, r6, r7, lr}
 8012926:	2400      	movs	r4, #0
 8012928:	2900      	cmp	r1, #0
 801292a:	d039      	beq.n	80129a0 <??pdu_trnsprt_hndlr_form_adv_PDU_Hdr_1>
 801292c:	2929      	cmp	r1, #41	; 0x29
 801292e:	d237      	bcs.n	80129a0 <??pdu_trnsprt_hndlr_form_adv_PDU_Hdr_1>
 8012930:	8985      	ldrh	r5, [r0, #12]
 8012932:	1cef      	adds	r7, r5, #3
 8012934:	08bf      	lsrs	r7, r7, #2
 8012936:	00bf      	lsls	r7, r7, #2
 8012938:	b915      	cbnz	r5, 8012940 <??pdu_trnsprt_hndlr_form_adv_PDU_Hdr_2>
 801293a:	f8d0 e000 	ldr.w	lr, [r0]
 801293e:	e004      	b.n	801294a <??pdu_trnsprt_hndlr_form_adv_PDU_Hdr_3>

08012940 <??pdu_trnsprt_hndlr_form_adv_PDU_Hdr_2>:
 8012940:	6805      	ldr	r5, [r0, #0]
 8012942:	8946      	ldrh	r6, [r0, #10]
 8012944:	442e      	add	r6, r5
 8012946:	f1a6 0e04 	sub.w	lr, r6, #4

0801294a <??pdu_trnsprt_hndlr_form_adv_PDU_Hdr_3>:
 801294a:	2a06      	cmp	r2, #6
 801294c:	d828      	bhi.n	80129a0 <??pdu_trnsprt_hndlr_form_adv_PDU_Hdr_1>
 801294e:	e8df f002 	tbb	[pc, r2]

08012952 <??pdu_trnsprt_hndlr_form_adv_PDU_Hdr_0>:
 8012952:	0404 0b0b 060b 000b                         ........

0801295a <??pdu_trnsprt_hndlr_form_adv_PDU_Hdr_4>:
 801295a:	2520      	movs	r5, #32
 801295c:	e005      	b.n	801296a <??pdu_trnsprt_hndlr_form_adv_PDU_Hdr_5>

0801295e <??pdu_trnsprt_hndlr_form_adv_PDU_Hdr_6>:
 801295e:	9d06      	ldr	r5, [sp, #24]
 8012960:	016d      	lsls	r5, r5, #5
 8012962:	f005 0520 	and.w	r5, r5, #32
 8012966:	e000      	b.n	801296a <??pdu_trnsprt_hndlr_form_adv_PDU_Hdr_5>

08012968 <??pdu_trnsprt_hndlr_form_adv_PDU_Hdr_7>:
 8012968:	2500      	movs	r5, #0

0801296a <??pdu_trnsprt_hndlr_form_adv_PDU_Hdr_5>:
 801296a:	6806      	ldr	r6, [r0, #0]
 801296c:	45b6      	cmp	lr, r6
 801296e:	d317      	bcc.n	80129a0 <??pdu_trnsprt_hndlr_form_adv_PDU_Hdr_1>
 8012970:	f002 02af 	and.w	r2, r2, #175	; 0xaf
 8012974:	ea42 1283 	orr.w	r2, r2, r3, lsl #6
 8012978:	9e05      	ldr	r6, [sp, #20]
 801297a:	f002 027f 	and.w	r2, r2, #127	; 0x7f
 801297e:	ea42 12c6 	orr.w	r2, r2, r6, lsl #7
 8012982:	f002 02df 	and.w	r2, r2, #223	; 0xdf
 8012986:	432a      	orrs	r2, r5
 8012988:	f88e 2000 	strb.w	r2, [lr]
 801298c:	f88e 1001 	strb.w	r1, [lr, #1]
 8012990:	8981      	ldrh	r1, [r0, #12]
 8012992:	b109      	cbz	r1, 8012998 <??pdu_trnsprt_hndlr_form_adv_PDU_Hdr_8>
 8012994:	8941      	ldrh	r1, [r0, #10]
 8012996:	1f09      	subs	r1, r1, #4

08012998 <??pdu_trnsprt_hndlr_form_adv_PDU_Hdr_8>:
 8012998:	1d3f      	adds	r7, r7, #4
 801299a:	8141      	strh	r1, [r0, #10]
 801299c:	8187      	strh	r7, [r0, #12]
 801299e:	e000      	b.n	80129a2 <??pdu_trnsprt_hndlr_form_adv_PDU_Hdr_9>

080129a0 <??pdu_trnsprt_hndlr_form_adv_PDU_Hdr_1>:
 80129a0:	241f      	movs	r4, #31

080129a2 <??pdu_trnsprt_hndlr_form_adv_PDU_Hdr_9>:
 80129a2:	4620      	mov	r0, r4
 80129a4:	bdf0      	pop	{r4, r5, r6, r7, pc}
	...

080129a8 <pdu_trnsprt_hndlr_form_nconn_adv>:
 80129a8:	b53e      	push	{r1, r2, r3, r4, r5, lr}
 80129aa:	4604      	mov	r4, r0
 80129ac:	001d      	movs	r5, r3
 80129ae:	bf1a      	itte	ne
 80129b0:	2c00      	cmpne	r4, #0
 80129b2:	2001      	movne	r0, #1
 80129b4:	2000      	moveq	r0, #0
 80129b6:	f7ed fc0b 	bl	80001d0 <bsp_assert>
 80129ba:	6828      	ldr	r0, [r5, #0]
 80129bc:	b100      	cbz	r0, 80129c0 <??pdu_trnsprt_hndlr_form_nconn_adv_1>
 80129be:	2001      	movs	r0, #1

080129c0 <??pdu_trnsprt_hndlr_form_nconn_adv_1>:
 80129c0:	f7ed fc06 	bl	80001d0 <bsp_assert>
 80129c4:	7d60      	ldrb	r0, [r4, #21]
 80129c6:	2804      	cmp	r0, #4
 80129c8:	d818      	bhi.n	80129fc <??pdu_trnsprt_hndlr_form_nconn_adv_2>
 80129ca:	e8df f000 	tbb	[pc, r0]

080129ce <??pdu_trnsprt_hndlr_form_nconn_adv_0>:
 80129ce:	1003 1513 0010                              ......

080129d4 <??pdu_trnsprt_hndlr_form_nconn_adv_3>:
 80129d4:	2200      	movs	r2, #0

080129d6 <??pdu_trnsprt_hndlr_form_nconn_adv_4>:
 80129d6:	89a9      	ldrh	r1, [r5, #12]
 80129d8:	1d89      	adds	r1, r1, #6

080129da <??pdu_trnsprt_hndlr_form_nconn_adv_5>:
 80129da:	2000      	movs	r0, #0
 80129dc:	9001      	str	r0, [sp, #4]
 80129de:	7da3      	ldrb	r3, [r4, #22]
 80129e0:	4628      	mov	r0, r5
 80129e2:	9300      	str	r3, [sp, #0]
 80129e4:	7fe3      	ldrb	r3, [r4, #31]
 80129e6:	f7ff ff9d 	bl	8012924 <pdu_trnsprt_hndlr_form_adv_PDU_Hdr>
 80129ea:	b003      	add	sp, #12
 80129ec:	bd30      	pop	{r4, r5, pc}

080129ee <??pdu_trnsprt_hndlr_form_nconn_adv_6>:
 80129ee:	2201      	movs	r2, #1
 80129f0:	210c      	movs	r1, #12
 80129f2:	e7f2      	b.n	80129da <??pdu_trnsprt_hndlr_form_nconn_adv_5>

080129f4 <??pdu_trnsprt_hndlr_form_nconn_adv_7>:
 80129f4:	2206      	movs	r2, #6
 80129f6:	e7ee      	b.n	80129d6 <??pdu_trnsprt_hndlr_form_nconn_adv_4>

080129f8 <??pdu_trnsprt_hndlr_form_nconn_adv_8>:
 80129f8:	2202      	movs	r2, #2
 80129fa:	e7ec      	b.n	80129d6 <??pdu_trnsprt_hndlr_form_nconn_adv_4>

080129fc <??pdu_trnsprt_hndlr_form_nconn_adv_2>:
 80129fc:	201f      	movs	r0, #31
 80129fe:	b003      	add	sp, #12
 8012a00:	bd30      	pop	{r4, r5, pc}

08012a02 <pdu_trnsprt_hndlr_form_nconn_init>:
 8012a02:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8012a06:	4680      	mov	r8, r0
 8012a08:	460d      	mov	r5, r1
 8012a0a:	0014      	movs	r4, r2
 8012a0c:	461f      	mov	r7, r3
 8012a0e:	bf1a      	itte	ne
 8012a10:	2d00      	cmpne	r5, #0
 8012a12:	2001      	movne	r0, #1
 8012a14:	2000      	moveq	r0, #0
 8012a16:	f7ed fbdb 	bl	80001d0 <bsp_assert>
 8012a1a:	6820      	ldr	r0, [r4, #0]
 8012a1c:	b100      	cbz	r0, 8012a20 <??pdu_trnsprt_hndlr_form_nconn_init_0>
 8012a1e:	2001      	movs	r0, #1

08012a20 <??pdu_trnsprt_hndlr_form_nconn_init_0>:
 8012a20:	f7ed fbd6 	bl	80001d0 <bsp_assert>
 8012a24:	6820      	ldr	r0, [r4, #0]
 8012a26:	01bf      	lsls	r7, r7, #6
 8012a28:	f007 077f 	and.w	r7, r7, #127	; 0x7f
 8012a2c:	1d06      	adds	r6, r0, #4
 8012a2e:	f105 0028 	add.w	r0, r5, #40	; 0x28
 8012a32:	6841      	ldr	r1, [r0, #4]
 8012a34:	7031      	strb	r1, [r6, #0]
 8012a36:	6842      	ldr	r2, [r0, #4]
 8012a38:	0a12      	lsrs	r2, r2, #8
 8012a3a:	7072      	strb	r2, [r6, #1]
 8012a3c:	6841      	ldr	r1, [r0, #4]
 8012a3e:	0c09      	lsrs	r1, r1, #16
 8012a40:	70b1      	strb	r1, [r6, #2]
 8012a42:	6841      	ldr	r1, [r0, #4]
 8012a44:	0e09      	lsrs	r1, r1, #24
 8012a46:	70f1      	strb	r1, [r6, #3]
 8012a48:	6802      	ldr	r2, [r0, #0]
 8012a4a:	7132      	strb	r2, [r6, #4]
 8012a4c:	6801      	ldr	r1, [r0, #0]
 8012a4e:	2205      	movs	r2, #5
 8012a50:	0a09      	lsrs	r1, r1, #8
 8012a52:	7171      	strb	r1, [r6, #5]
 8012a54:	6800      	ldr	r0, [r0, #0]
 8012a56:	0c00      	lsrs	r0, r0, #16
 8012a58:	71b0      	strb	r0, [r6, #6]
 8012a5a:	f895 0020 	ldrb.w	r0, [r5, #32]
 8012a5e:	71f0      	strb	r0, [r6, #7]
 8012a60:	8a29      	ldrh	r1, [r5, #16]
 8012a62:	7231      	strb	r1, [r6, #8]
 8012a64:	8a28      	ldrh	r0, [r5, #16]
 8012a66:	0a00      	lsrs	r0, r0, #8
 8012a68:	7270      	strb	r0, [r6, #9]
 8012a6a:	8ae8      	ldrh	r0, [r5, #22]
 8012a6c:	72b0      	strb	r0, [r6, #10]
 8012a6e:	8ae9      	ldrh	r1, [r5, #22]
 8012a70:	0a09      	lsrs	r1, r1, #8
 8012a72:	72f1      	strb	r1, [r6, #11]
 8012a74:	8b28      	ldrh	r0, [r5, #24]
 8012a76:	7330      	strb	r0, [r6, #12]
 8012a78:	8b29      	ldrh	r1, [r5, #24]
 8012a7a:	0a09      	lsrs	r1, r1, #8
 8012a7c:	7371      	strb	r1, [r6, #13]
 8012a7e:	8b68      	ldrh	r0, [r5, #26]
 8012a80:	73b0      	strb	r0, [r6, #14]
 8012a82:	8b69      	ldrh	r1, [r5, #26]
 8012a84:	f106 0010 	add.w	r0, r6, #16
 8012a88:	0a09      	lsrs	r1, r1, #8
 8012a8a:	73f1      	strb	r1, [r6, #15]
 8012a8c:	f105 0130 	add.w	r1, r5, #48	; 0x30
 8012a90:	f7fc f85a 	bl	800eb48 <ble_memcpy>
 8012a94:	f105 0021 	add.w	r0, r5, #33	; 0x21
 8012a98:	7942      	ldrb	r2, [r0, #5]
 8012a9a:	7d71      	ldrb	r1, [r6, #21]
 8012a9c:	f362 0104 	bfi	r1, r2, #0, #5
 8012aa0:	7571      	strb	r1, [r6, #21]
 8012aa2:	7802      	ldrb	r2, [r0, #0]
 8012aa4:	f001 011f 	and.w	r1, r1, #31
 8012aa8:	ea41 1142 	orr.w	r1, r1, r2, lsl #5
 8012aac:	2204      	movs	r2, #4
 8012aae:	7571      	strb	r1, [r6, #21]
 8012ab0:	2116      	movs	r1, #22
 8012ab2:	81a1      	strh	r1, [r4, #12]
 8012ab4:	8162      	strh	r2, [r4, #10]
 8012ab6:	f898 200f 	ldrb.w	r2, [r8, #15]
 8012aba:	7840      	ldrb	r0, [r0, #1]
 8012abc:	6821      	ldr	r1, [r4, #0]
 8012abe:	ea47 17c2 	orr.w	r7, r7, r2, lsl #7
 8012ac2:	0140      	lsls	r0, r0, #5
 8012ac4:	f000 0020 	and.w	r0, r0, #32
 8012ac8:	4307      	orrs	r7, r0
 8012aca:	f047 0705 	orr.w	r7, r7, #5
 8012ace:	700f      	strb	r7, [r1, #0]
 8012ad0:	2222      	movs	r2, #34	; 0x22
 8012ad2:	704a      	strb	r2, [r1, #1]
 8012ad4:	89a0      	ldrh	r0, [r4, #12]
 8012ad6:	b108      	cbz	r0, 8012adc <??pdu_trnsprt_hndlr_form_nconn_init_1>
 8012ad8:	8960      	ldrh	r0, [r4, #10]
 8012ada:	1f00      	subs	r0, r0, #4

08012adc <??pdu_trnsprt_hndlr_form_nconn_init_1>:
 8012adc:	8160      	strh	r0, [r4, #10]
 8012ade:	201c      	movs	r0, #28
 8012ae0:	81a0      	strh	r0, [r4, #12]
 8012ae2:	2000      	movs	r0, #0
 8012ae4:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

08012ae8 <pdu_trnsprt_hndlr_nconn_init_patch>:
 8012ae8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8012aea:	0004      	movs	r4, r0
 8012aec:	460d      	mov	r5, r1
 8012aee:	4616      	mov	r6, r2
 8012af0:	461f      	mov	r7, r3
 8012af2:	bf18      	it	ne
 8012af4:	2001      	movne	r0, #1
 8012af6:	f7ed fb6b 	bl	80001d0 <bsp_assert>
 8012afa:	6820      	ldr	r0, [r4, #0]
 8012afc:	b100      	cbz	r0, 8012b00 <??pdu_trnsprt_hndlr_nconn_init_patch_0>
 8012afe:	2001      	movs	r0, #1

08012b00 <??pdu_trnsprt_hndlr_nconn_init_patch_0>:
 8012b00:	f7ed fb66 	bl	80001d0 <bsp_assert>
 8012b04:	6820      	ldr	r0, [r4, #0]
 8012b06:	f89d 1018 	ldrb.w	r1, [sp, #24]
 8012b0a:	7802      	ldrb	r2, [r0, #0]
 8012b0c:	f361 1245 	bfi	r2, r1, #5, #1
 8012b10:	7002      	strb	r2, [r0, #0]
 8012b12:	6820      	ldr	r0, [r4, #0]
 8012b14:	1d00      	adds	r0, r0, #4
 8012b16:	7285      	strb	r5, [r0, #10]
 8012b18:	7306      	strb	r6, [r0, #12]
 8012b1a:	7387      	strb	r7, [r0, #14]
 8012b1c:	0a2d      	lsrs	r5, r5, #8
 8012b1e:	0a36      	lsrs	r6, r6, #8
 8012b20:	0a3f      	lsrs	r7, r7, #8
 8012b22:	72c5      	strb	r5, [r0, #11]
 8012b24:	7346      	strb	r6, [r0, #13]
 8012b26:	73c7      	strb	r7, [r0, #15]
 8012b28:	2000      	movs	r0, #0
 8012b2a:	bdf2      	pop	{r1, r4, r5, r6, r7, pc}

08012b2c <pdu_trnsprt_hndlr_parse_nconn_adv>:
 8012b2c:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8012b30:	4607      	mov	r7, r0
 8012b32:	460c      	mov	r4, r1
 8012b34:	4690      	mov	r8, r2
 8012b36:	461d      	mov	r5, r3
 8012b38:	2600      	movs	r6, #0
 8012b3a:	b107      	cbz	r7, 8012b3e <??pdu_trnsprt_hndlr_parse_nconn_adv_1>
 8012b3c:	2001      	movs	r0, #1

08012b3e <??pdu_trnsprt_hndlr_parse_nconn_adv_1>:
 8012b3e:	f7ed fb47 	bl	80001d0 <bsp_assert>
 8012b42:	6838      	ldr	r0, [r7, #0]
 8012b44:	b100      	cbz	r0, 8012b48 <??pdu_trnsprt_hndlr_parse_nconn_adv_2>
 8012b46:	2001      	movs	r0, #1

08012b48 <??pdu_trnsprt_hndlr_parse_nconn_adv_2>:
 8012b48:	f7ed fb42 	bl	80001d0 <bsp_assert>
 8012b4c:	6838      	ldr	r0, [r7, #0]
 8012b4e:	8979      	ldrh	r1, [r7, #10]
 8012b50:	1847      	adds	r7, r0, r1
 8012b52:	f897 9000 	ldrb.w	r9, [r7]
 8012b56:	f1b8 0f00 	cmp.w	r8, #0
 8012b5a:	f009 090f 	and.w	r9, r9, #15
 8012b5e:	d005      	beq.n	8012b6c <??pdu_trnsprt_hndlr_parse_nconn_adv_3>
 8012b60:	2206      	movs	r2, #6
 8012b62:	f107 010a 	add.w	r1, r7, #10
 8012b66:	4640      	mov	r0, r8
 8012b68:	f7fb ffee 	bl	800eb48 <ble_memcpy>

08012b6c <??pdu_trnsprt_hndlr_parse_nconn_adv_3>:
 8012b6c:	7838      	ldrb	r0, [r7, #0]
 8012b6e:	f107 020a 	add.w	r2, r7, #10
 8012b72:	f3c0 1080 	ubfx	r0, r0, #6, #1
 8012b76:	76a0      	strb	r0, [r4, #26]
 8012b78:	7878      	ldrb	r0, [r7, #1]
 8012b7a:	60a2      	str	r2, [r4, #8]
 8012b7c:	2206      	movs	r2, #6
 8012b7e:	1f81      	subs	r1, r0, #6
 8012b80:	82a1      	strh	r1, [r4, #20]
 8012b82:	8266      	strh	r6, [r4, #18]
 8012b84:	1d39      	adds	r1, r7, #4
 8012b86:	4620      	mov	r0, r4
 8012b88:	f7fb ffde 	bl	800eb48 <ble_memcpy>
 8012b8c:	9808      	ldr	r0, [sp, #32]
 8012b8e:	f1b9 0f06 	cmp.w	r9, #6
 8012b92:	d819      	bhi.n	8012bc8 <??pdu_trnsprt_hndlr_parse_nconn_adv_4>
 8012b94:	e8df f009 	tbb	[pc, r9]

08012b98 <??pdu_trnsprt_hndlr_parse_nconn_adv_0>:
 8012b98:	0604 1810 1815 0012                         ........

08012ba0 <??pdu_trnsprt_hndlr_parse_nconn_adv_5>:
 8012ba0:	7666      	strb	r6, [r4, #25]
 8012ba2:	e003      	b.n	8012bac <??pdu_trnsprt_hndlr_parse_nconn_adv_6>

08012ba4 <??pdu_trnsprt_hndlr_parse_nconn_adv_7>:
 8012ba4:	2201      	movs	r2, #1
 8012ba6:	7662      	strb	r2, [r4, #25]
 8012ba8:	82a6      	strh	r6, [r4, #20]
 8012baa:	60a6      	str	r6, [r4, #8]

08012bac <??pdu_trnsprt_hndlr_parse_nconn_adv_6>:
 8012bac:	b168      	cbz	r0, 8012bca <??pdu_trnsprt_hndlr_parse_nconn_adv_8>
 8012bae:	7839      	ldrb	r1, [r7, #0]
 8012bb0:	f3c1 1140 	ubfx	r1, r1, #5, #1
 8012bb4:	7001      	strb	r1, [r0, #0]
 8012bb6:	e008      	b.n	8012bca <??pdu_trnsprt_hndlr_parse_nconn_adv_8>

08012bb8 <??pdu_trnsprt_hndlr_parse_nconn_adv_9>:
 8012bb8:	2003      	movs	r0, #3
 8012bba:	e003      	b.n	8012bc4 <??pdu_trnsprt_hndlr_parse_nconn_adv_10>

08012bbc <??pdu_trnsprt_hndlr_parse_nconn_adv_11>:
 8012bbc:	2102      	movs	r1, #2
 8012bbe:	7661      	strb	r1, [r4, #25]
 8012bc0:	e003      	b.n	8012bca <??pdu_trnsprt_hndlr_parse_nconn_adv_8>

08012bc2 <??pdu_trnsprt_hndlr_parse_nconn_adv_12>:
 8012bc2:	2004      	movs	r0, #4

08012bc4 <??pdu_trnsprt_hndlr_parse_nconn_adv_10>:
 8012bc4:	7660      	strb	r0, [r4, #25]
 8012bc6:	e000      	b.n	8012bca <??pdu_trnsprt_hndlr_parse_nconn_adv_8>

08012bc8 <??pdu_trnsprt_hndlr_parse_nconn_adv_4>:
 8012bc8:	261f      	movs	r6, #31

08012bca <??pdu_trnsprt_hndlr_parse_nconn_adv_8>:
 8012bca:	2d00      	cmp	r5, #0
 8012bcc:	bf18      	it	ne
 8012bce:	2c00      	cmpne	r4, #0
 8012bd0:	d002      	beq.n	8012bd8 <??pdu_trnsprt_hndlr_parse_nconn_adv_13>
 8012bd2:	7838      	ldrb	r0, [r7, #0]
 8012bd4:	09c0      	lsrs	r0, r0, #7
 8012bd6:	7028      	strb	r0, [r5, #0]

08012bd8 <??pdu_trnsprt_hndlr_parse_nconn_adv_13>:
 8012bd8:	4630      	mov	r0, r6
 8012bda:	e8bd 83f2 	ldmia.w	sp!, {r1, r4, r5, r6, r7, r8, r9, pc}

08012bde <pdu_trnsprt_parse_scn_req>:
 8012bde:	b570      	push	{r4, r5, r6, lr}
 8012be0:	0004      	movs	r4, r0
 8012be2:	460d      	mov	r5, r1
 8012be4:	4616      	mov	r6, r2
 8012be6:	bf18      	it	ne
 8012be8:	2001      	movne	r0, #1
 8012bea:	f7ed faf1 	bl	80001d0 <bsp_assert>
 8012bee:	6820      	ldr	r0, [r4, #0]
 8012bf0:	b100      	cbz	r0, 8012bf4 <??pdu_trnsprt_parse_scn_req_0>
 8012bf2:	2001      	movs	r0, #1

08012bf4 <??pdu_trnsprt_parse_scn_req_0>:
 8012bf4:	f7ed faec 	bl	80001d0 <bsp_assert>
 8012bf8:	6820      	ldr	r0, [r4, #0]
 8012bfa:	8961      	ldrh	r1, [r4, #10]
 8012bfc:	4408      	add	r0, r1
 8012bfe:	f810 2b04 	ldrb.w	r2, [r0], #4
 8012c02:	f3c2 1180 	ubfx	r1, r2, #6, #1
 8012c06:	7031      	strb	r1, [r6, #0]
 8012c08:	6028      	str	r0, [r5, #0]
 8012c0a:	bd70      	pop	{r4, r5, r6, pc}

08012c0c <pdu_trnsprt_hndlr_get_pdu_type>:
 8012c0c:	b510      	push	{r4, lr}
 8012c0e:	0004      	movs	r4, r0
 8012c10:	bf14      	ite	ne
 8012c12:	2001      	movne	r0, #1
 8012c14:	2000      	moveq	r0, #0
 8012c16:	f7ed fadb 	bl	80001d0 <bsp_assert>
 8012c1a:	6820      	ldr	r0, [r4, #0]
 8012c1c:	b100      	cbz	r0, 8012c20 <??pdu_trnsprt_hndlr_get_pdu_type_0>
 8012c1e:	2001      	movs	r0, #1

08012c20 <??pdu_trnsprt_hndlr_get_pdu_type_0>:
 8012c20:	f7ed fad6 	bl	80001d0 <bsp_assert>
 8012c24:	6820      	ldr	r0, [r4, #0]
 8012c26:	8961      	ldrh	r1, [r4, #10]
 8012c28:	5c40      	ldrb	r0, [r0, r1]
 8012c2a:	f000 000f 	and.w	r0, r0, #15
 8012c2e:	bd10      	pop	{r4, pc}

08012c30 <pdu_trnsprt_hndlr_get_addrs_type>:
 8012c30:	b510      	push	{r4, lr}
 8012c32:	0004      	movs	r4, r0
 8012c34:	bf14      	ite	ne
 8012c36:	2001      	movne	r0, #1
 8012c38:	2000      	moveq	r0, #0
 8012c3a:	f7ed fac9 	bl	80001d0 <bsp_assert>
 8012c3e:	6820      	ldr	r0, [r4, #0]
 8012c40:	b100      	cbz	r0, 8012c44 <??pdu_trnsprt_hndlr_get_addrs_type_0>
 8012c42:	2001      	movs	r0, #1

08012c44 <??pdu_trnsprt_hndlr_get_addrs_type_0>:
 8012c44:	f7ed fac4 	bl	80001d0 <bsp_assert>
 8012c48:	6820      	ldr	r0, [r4, #0]
 8012c4a:	8961      	ldrh	r1, [r4, #10]
 8012c4c:	5c40      	ldrb	r0, [r0, r1]
 8012c4e:	09c0      	lsrs	r0, r0, #7
 8012c50:	bd10      	pop	{r4, pc}

08012c52 <pdu_trnsprt_hndlr_get_addr_from_aux_con_rsp>:
 8012c52:	b538      	push	{r3, r4, r5, lr}
 8012c54:	0004      	movs	r4, r0
 8012c56:	460d      	mov	r5, r1
 8012c58:	bf18      	it	ne
 8012c5a:	2001      	movne	r0, #1
 8012c5c:	f7ed fab8 	bl	80001d0 <bsp_assert>
 8012c60:	6820      	ldr	r0, [r4, #0]
 8012c62:	b100      	cbz	r0, 8012c66 <??pdu_trnsprt_hndlr_get_addr_from_aux_con_rsp_0>
 8012c64:	2001      	movs	r0, #1

08012c66 <??pdu_trnsprt_hndlr_get_addr_from_aux_con_rsp_0>:
 8012c66:	f7ed fab3 	bl	80001d0 <bsp_assert>
 8012c6a:	8961      	ldrh	r1, [r4, #10]
 8012c6c:	6822      	ldr	r2, [r4, #0]
 8012c6e:	5c50      	ldrb	r0, [r2, r1]
 8012c70:	4411      	add	r1, r2
 8012c72:	1d89      	adds	r1, r1, #6
 8012c74:	f3c0 1080 	ubfx	r0, r0, #6, #1
 8012c78:	6029      	str	r1, [r5, #0]
 8012c7a:	bd32      	pop	{r1, r4, r5, pc}

08012c7c <pdu_trnsprt_hndlr_parse_conn_req>:
 8012c7c:	b570      	push	{r4, r5, r6, lr}
 8012c7e:	4605      	mov	r5, r0
 8012c80:	000c      	movs	r4, r1
 8012c82:	bf1a      	itte	ne
 8012c84:	2d00      	cmpne	r5, #0
 8012c86:	2001      	movne	r0, #1
 8012c88:	2000      	moveq	r0, #0
 8012c8a:	f7ed faa1 	bl	80001d0 <bsp_assert>
 8012c8e:	6828      	ldr	r0, [r5, #0]
 8012c90:	b100      	cbz	r0, 8012c94 <??pdu_trnsprt_hndlr_parse_conn_req_0>
 8012c92:	2001      	movs	r0, #1

08012c94 <??pdu_trnsprt_hndlr_parse_conn_req_0>:
 8012c94:	f7ed fa9c 	bl	80001d0 <bsp_assert>
 8012c98:	6828      	ldr	r0, [r5, #0]
 8012c9a:	8969      	ldrh	r1, [r5, #10]
 8012c9c:	f104 0521 	add.w	r5, r4, #33	; 0x21
 8012ca0:	2206      	movs	r2, #6
 8012ca2:	1846      	adds	r6, r0, r1
 8012ca4:	7830      	ldrb	r0, [r6, #0]
 8012ca6:	1d31      	adds	r1, r6, #4
 8012ca8:	f3c0 1040 	ubfx	r0, r0, #5, #1
 8012cac:	7068      	strb	r0, [r5, #1]
 8012cae:	7830      	ldrb	r0, [r6, #0]
 8012cb0:	f3c0 1080 	ubfx	r0, r0, #6, #1
 8012cb4:	70a8      	strb	r0, [r5, #2]
 8012cb6:	4620      	mov	r0, r4
 8012cb8:	f7fb ff46 	bl	800eb48 <ble_memcpy>
 8012cbc:	f816 1f10 	ldrb.w	r1, [r6, #16]!
 8012cc0:	f104 0028 	add.w	r0, r4, #40	; 0x28
 8012cc4:	7872      	ldrb	r2, [r6, #1]
 8012cc6:	78b3      	ldrb	r3, [r6, #2]
 8012cc8:	ea41 2102 	orr.w	r1, r1, r2, lsl #8
 8012ccc:	78f2      	ldrb	r2, [r6, #3]
 8012cce:	ea41 4103 	orr.w	r1, r1, r3, lsl #16
 8012cd2:	ea41 6102 	orr.w	r1, r1, r2, lsl #24
 8012cd6:	6041      	str	r1, [r0, #4]
 8012cd8:	7931      	ldrb	r1, [r6, #4]
 8012cda:	7972      	ldrb	r2, [r6, #5]
 8012cdc:	79b3      	ldrb	r3, [r6, #6]
 8012cde:	ea41 2102 	orr.w	r1, r1, r2, lsl #8
 8012ce2:	2205      	movs	r2, #5
 8012ce4:	ea41 4103 	orr.w	r1, r1, r3, lsl #16
 8012ce8:	6001      	str	r1, [r0, #0]
 8012cea:	79f0      	ldrb	r0, [r6, #7]
 8012cec:	f884 0020 	strb.w	r0, [r4, #32]
 8012cf0:	7a31      	ldrb	r1, [r6, #8]
 8012cf2:	7a70      	ldrb	r0, [r6, #9]
 8012cf4:	ea41 2100 	orr.w	r1, r1, r0, lsl #8
 8012cf8:	8221      	strh	r1, [r4, #16]
 8012cfa:	7ab0      	ldrb	r0, [r6, #10]
 8012cfc:	7af1      	ldrb	r1, [r6, #11]
 8012cfe:	ea40 2001 	orr.w	r0, r0, r1, lsl #8
 8012d02:	82e0      	strh	r0, [r4, #22]
 8012d04:	7b30      	ldrb	r0, [r6, #12]
 8012d06:	7b71      	ldrb	r1, [r6, #13]
 8012d08:	ea40 2001 	orr.w	r0, r0, r1, lsl #8
 8012d0c:	8320      	strh	r0, [r4, #24]
 8012d0e:	7bb0      	ldrb	r0, [r6, #14]
 8012d10:	7bf1      	ldrb	r1, [r6, #15]
 8012d12:	ea40 2001 	orr.w	r0, r0, r1, lsl #8
 8012d16:	f106 0110 	add.w	r1, r6, #16
 8012d1a:	8360      	strh	r0, [r4, #26]
 8012d1c:	f104 0030 	add.w	r0, r4, #48	; 0x30
 8012d20:	f7fb ff12 	bl	800eb48 <ble_memcpy>
 8012d24:	7d70      	ldrb	r0, [r6, #21]
 8012d26:	f000 001f 	and.w	r0, r0, #31
 8012d2a:	7168      	strb	r0, [r5, #5]
 8012d2c:	7d70      	ldrb	r0, [r6, #21]
 8012d2e:	0940      	lsrs	r0, r0, #5
 8012d30:	7028      	strb	r0, [r5, #0]
 8012d32:	2000      	movs	r0, #0
 8012d34:	bd70      	pop	{r4, r5, r6, pc}

08012d36 <pdu_trnsprt_hndlr_form_nconn_scan>:
 8012d36:	b5fe      	push	{r1, r2, r3, r4, r5, r6, r7, lr}
 8012d38:	460c      	mov	r4, r1
 8012d3a:	2600      	movs	r6, #0
 8012d3c:	4605      	mov	r5, r0
 8012d3e:	4617      	mov	r7, r2
 8012d40:	2c00      	cmp	r4, #0
 8012d42:	bf14      	ite	ne
 8012d44:	2001      	movne	r0, #1
 8012d46:	2000      	moveq	r0, #0
 8012d48:	f7ed fa42 	bl	80001d0 <bsp_assert>
 8012d4c:	6820      	ldr	r0, [r4, #0]
 8012d4e:	b100      	cbz	r0, 8012d52 <??pdu_trnsprt_hndlr_form_nconn_scan_0>
 8012d50:	2001      	movs	r0, #1

08012d52 <??pdu_trnsprt_hndlr_form_nconn_scan_0>:
 8012d52:	f7ed fa3d 	bl	80001d0 <bsp_assert>
 8012d56:	2f03      	cmp	r7, #3
 8012d58:	bf08      	it	eq
 8012d5a:	260c      	moveq	r6, #12
 8012d5c:	d003      	beq.n	8012d66 <??pdu_trnsprt_hndlr_form_nconn_scan_1>
 8012d5e:	2f04      	cmp	r7, #4
 8012d60:	bf04      	itt	eq
 8012d62:	89a6      	ldrheq	r6, [r4, #12]
 8012d64:	1db6      	addeq	r6, r6, #6

08012d66 <??pdu_trnsprt_hndlr_form_nconn_scan_1>:
 8012d66:	2000      	movs	r0, #0
 8012d68:	9001      	str	r0, [sp, #4]
 8012d6a:	9000      	str	r0, [sp, #0]
 8012d6c:	462b      	mov	r3, r5
 8012d6e:	463a      	mov	r2, r7
 8012d70:	4631      	mov	r1, r6
 8012d72:	4620      	mov	r0, r4
 8012d74:	f7ff fdd6 	bl	8012924 <pdu_trnsprt_hndlr_form_adv_PDU_Hdr>
 8012d78:	b003      	add	sp, #12
 8012d7a:	bdf0      	pop	{r4, r5, r6, r7, pc}

08012d7c <pdu_trnsprt_hndlr_form_data_pdu>:
 8012d7c:	b538      	push	{r3, r4, r5, lr}
 8012d7e:	0004      	movs	r4, r0
 8012d80:	bf14      	ite	ne
 8012d82:	2001      	movne	r0, #1
 8012d84:	2000      	moveq	r0, #0
 8012d86:	f7ed fa23 	bl	80001d0 <bsp_assert>
 8012d8a:	6820      	ldr	r0, [r4, #0]
 8012d8c:	b100      	cbz	r0, 8012d90 <??pdu_trnsprt_hndlr_form_data_pdu_0>
 8012d8e:	2001      	movs	r0, #1

08012d90 <??pdu_trnsprt_hndlr_form_data_pdu_0>:
 8012d90:	f7ed fa1e 	bl	80001d0 <bsp_assert>
 8012d94:	6820      	ldr	r0, [r4, #0]
 8012d96:	8963      	ldrh	r3, [r4, #10]
 8012d98:	89a5      	ldrh	r5, [r4, #12]
 8012d9a:	2204      	movs	r2, #4
 8012d9c:	4403      	add	r3, r0
 8012d9e:	2100      	movs	r1, #0
 8012da0:	f1a3 0008 	sub.w	r0, r3, #8
 8012da4:	f7fb ff21 	bl	800ebea <ble_memset>
 8012da8:	6820      	ldr	r0, [r4, #0]
 8012daa:	8961      	ldrh	r1, [r4, #10]
 8012dac:	2200      	movs	r2, #0
 8012dae:	2300      	movs	r3, #0
 8012db0:	4401      	add	r1, r0
 8012db2:	1f08      	subs	r0, r1, #4
 8012db4:	7002      	strb	r2, [r0, #0]
 8012db6:	7043      	strb	r3, [r0, #1]
 8012db8:	7082      	strb	r2, [r0, #2]
 8012dba:	70c2      	strb	r2, [r0, #3]
 8012dbc:	7ba1      	ldrb	r1, [r4, #14]
 8012dbe:	07ca      	lsls	r2, r1, #31
 8012dc0:	bf47      	ittee	mi
 8012dc2:	2112      	movmi	r1, #18
 8012dc4:	7001      	strbmi	r1, [r0, #0]
 8012dc6:	2211      	movpl	r2, #17
 8012dc8:	7002      	strbpl	r2, [r0, #0]
 8012dca:	7045      	strb	r5, [r0, #1]
 8012dcc:	8960      	ldrh	r0, [r4, #10]
 8012dce:	1ced      	adds	r5, r5, #3
 8012dd0:	1f01      	subs	r1, r0, #4
 8012dd2:	f64f 70fc 	movw	r0, #65532	; 0xfffc
 8012dd6:	4005      	ands	r5, r0
 8012dd8:	1d2d      	adds	r5, r5, #4
 8012dda:	8161      	strh	r1, [r4, #10]
 8012ddc:	81a5      	strh	r5, [r4, #12]
 8012dde:	2000      	movs	r0, #0
 8012de0:	bd32      	pop	{r1, r4, r5, pc}
	...

08012de4 <pdu_trnsprt_hndlr_form_cntrl_pdu>:
 8012de4:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8012de8:	4606      	mov	r6, r0
 8012dea:	460c      	mov	r4, r1
 8012dec:	0015      	movs	r5, r2
 8012dee:	f04f 0800 	mov.w	r8, #0
 8012df2:	bf14      	ite	ne
 8012df4:	2001      	movne	r0, #1
 8012df6:	2000      	moveq	r0, #0
 8012df8:	f7ed f9ea 	bl	80001d0 <bsp_assert>
 8012dfc:	6828      	ldr	r0, [r5, #0]
 8012dfe:	b100      	cbz	r0, 8012e02 <??pdu_trnsprt_hndlr_form_cntrl_pdu_1>
 8012e00:	2001      	movs	r0, #1

08012e02 <??pdu_trnsprt_hndlr_form_cntrl_pdu_1>:
 8012e02:	f7ed f9e5 	bl	80001d0 <bsp_assert>
 8012e06:	2e19      	cmp	r6, #25
 8012e08:	f200 81c7 	bhi.w	801319a <??pdu_trnsprt_hndlr_form_cntrl_pdu_2>
 8012e0c:	e8df f016 	tbh	[pc, r6, lsl #1]

08012e10 <??pdu_trnsprt_hndlr_form_cntrl_pdu_0>:
 8012e10:	001a 0064 00fa 007d 016e 018f 0191 0152     ..d...}.n.....R.
 8012e20:	0105 0112 00aa 0193 0116 015d 0105 00b2     ..........].....
 8012e30:	00b2 0161 0195 0197 0133 0133 0199 0199     ..a.....3.3.....
 8012e40:	01a2 01b5                                   ....

08012e44 <??pdu_trnsprt_hndlr_form_cntrl_pdu_3>:
 8012e44:	2c00      	cmp	r4, #0
 8012e46:	bf14      	ite	ne
 8012e48:	2001      	movne	r0, #1
 8012e4a:	2000      	moveq	r0, #0
 8012e4c:	f7ed f9c0 	bl	80001d0 <bsp_assert>
 8012e50:	6828      	ldr	r0, [r5, #0]
 8012e52:	f800 8f04 	strb.w	r8, [r0, #4]!
 8012e56:	7f22      	ldrb	r2, [r4, #28]
 8012e58:	f800 2f01 	strb.w	r2, [r0, #1]!
 8012e5c:	8aa1      	ldrh	r1, [r4, #20]
 8012e5e:	7041      	strb	r1, [r0, #1]
 8012e60:	8aa2      	ldrh	r2, [r4, #20]
 8012e62:	0a12      	lsrs	r2, r2, #8
 8012e64:	7082      	strb	r2, [r0, #2]
 8012e66:	8b61      	ldrh	r1, [r4, #26]
 8012e68:	70c1      	strb	r1, [r0, #3]
 8012e6a:	8b62      	ldrh	r2, [r4, #26]
 8012e6c:	0a12      	lsrs	r2, r2, #8
 8012e6e:	7102      	strb	r2, [r0, #4]
 8012e70:	89a1      	ldrh	r1, [r4, #12]
 8012e72:	7141      	strb	r1, [r0, #5]
 8012e74:	89a2      	ldrh	r2, [r4, #12]
 8012e76:	0a12      	lsrs	r2, r2, #8
 8012e78:	7182      	strb	r2, [r0, #6]
 8012e7a:	89e1      	ldrh	r1, [r4, #14]
 8012e7c:	71c1      	strb	r1, [r0, #7]
 8012e7e:	89e2      	ldrh	r2, [r4, #14]
 8012e80:	0a12      	lsrs	r2, r2, #8
 8012e82:	7202      	strb	r2, [r0, #8]
 8012e84:	8b21      	ldrh	r1, [r4, #24]
 8012e86:	7241      	strb	r1, [r0, #9]
 8012e88:	8b22      	ldrh	r2, [r4, #24]
 8012e8a:	210c      	movs	r1, #12
 8012e8c:	0a12      	lsrs	r2, r2, #8
 8012e8e:	7282      	strb	r2, [r0, #10]
 8012e90:	2004      	movs	r0, #4
 8012e92:	8168      	strh	r0, [r5, #10]

08012e94 <??pdu_trnsprt_hndlr_form_cntrl_pdu_4>:
 8012e94:	81a9      	strh	r1, [r5, #12]
 8012e96:	460c      	mov	r4, r1

08012e98 <??pdu_trnsprt_hndlr_form_cntrl_pdu_5>:
 8012e98:	6828      	ldr	r0, [r5, #0]
 8012e9a:	2204      	movs	r2, #4
 8012e9c:	2100      	movs	r1, #0
 8012e9e:	1f00      	subs	r0, r0, #4
 8012ea0:	f7fb fea3 	bl	800ebea <ble_memset>
 8012ea4:	6828      	ldr	r0, [r5, #0]
 8012ea6:	8969      	ldrh	r1, [r5, #10]
 8012ea8:	2203      	movs	r2, #3
 8012eaa:	4401      	add	r1, r0
 8012eac:	1f08      	subs	r0, r1, #4
 8012eae:	7002      	strb	r2, [r0, #0]
 8012eb0:	2e02      	cmp	r6, #2
 8012eb2:	bf1c      	itt	ne
 8012eb4:	2113      	movne	r1, #19
 8012eb6:	7001      	strbne	r1, [r0, #0]
 8012eb8:	7044      	strb	r4, [r0, #1]
 8012eba:	8968      	ldrh	r0, [r5, #10]
 8012ebc:	89a9      	ldrh	r1, [r5, #12]
 8012ebe:	1f00      	subs	r0, r0, #4
 8012ec0:	8168      	strh	r0, [r5, #10]
 8012ec2:	1d09      	adds	r1, r1, #4
 8012ec4:	81a9      	strh	r1, [r5, #12]
 8012ec6:	682a      	ldr	r2, [r5, #0]
 8012ec8:	b280      	uxth	r0, r0
 8012eca:	b289      	uxth	r1, r1
 8012ecc:	4410      	add	r0, r2
 8012ece:	4408      	add	r0, r1
 8012ed0:	7106      	strb	r6, [r0, #4]

08012ed2 <??pdu_trnsprt_hndlr_form_cntrl_pdu_6>:
 8012ed2:	4640      	mov	r0, r8
 8012ed4:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

08012ed8 <??pdu_trnsprt_hndlr_form_cntrl_pdu_7>:
 8012ed8:	2c00      	cmp	r4, #0
 8012eda:	bf14      	ite	ne
 8012edc:	2001      	movne	r0, #1
 8012ede:	2000      	moveq	r0, #0
 8012ee0:	f7ed f976 	bl	80001d0 <bsp_assert>
 8012ee4:	6828      	ldr	r0, [r5, #0]
 8012ee6:	2101      	movs	r1, #1
 8012ee8:	2205      	movs	r2, #5
 8012eea:	1d07      	adds	r7, r0, #4
 8012eec:	f807 1b01 	strb.w	r1, [r7], #1
 8012ef0:	1ca1      	adds	r1, r4, #2
 8012ef2:	4638      	mov	r0, r7
 8012ef4:	f7fb fe28 	bl	800eb48 <ble_memcpy>
 8012ef8:	8820      	ldrh	r0, [r4, #0]
 8012efa:	7178      	strb	r0, [r7, #5]
 8012efc:	8821      	ldrh	r1, [r4, #0]
 8012efe:	2004      	movs	r0, #4
 8012f00:	0a09      	lsrs	r1, r1, #8
 8012f02:	71b9      	strb	r1, [r7, #6]
 8012f04:	8168      	strh	r0, [r5, #10]
 8012f06:	2108      	movs	r1, #8
 8012f08:	e7c4      	b.n	8012e94 <??pdu_trnsprt_hndlr_form_cntrl_pdu_4>

08012f0a <??pdu_trnsprt_hndlr_form_cntrl_pdu_8>:
 8012f0a:	2c00      	cmp	r4, #0
 8012f0c:	bf14      	ite	ne
 8012f0e:	2001      	movne	r0, #1
 8012f10:	2000      	moveq	r0, #0
 8012f12:	f7ed f95d 	bl	80001d0 <bsp_assert>
 8012f16:	6828      	ldr	r0, [r5, #0]
 8012f18:	2103      	movs	r1, #3
 8012f1a:	2208      	movs	r2, #8
 8012f1c:	1d07      	adds	r7, r0, #4
 8012f1e:	f807 1b01 	strb.w	r1, [r7], #1
 8012f22:	4621      	mov	r1, r4
 8012f24:	4638      	mov	r0, r7
 8012f26:	f7fb fe0f 	bl	800eb48 <ble_memcpy>
 8012f2a:	8aa0      	ldrh	r0, [r4, #20]
 8012f2c:	2208      	movs	r2, #8
 8012f2e:	7238      	strb	r0, [r7, #8]
 8012f30:	8aa1      	ldrh	r1, [r4, #20]
 8012f32:	0a09      	lsrs	r1, r1, #8
 8012f34:	7279      	strb	r1, [r7, #9]
 8012f36:	370a      	adds	r7, #10
 8012f38:	f104 0108 	add.w	r1, r4, #8
 8012f3c:	4638      	mov	r0, r7
 8012f3e:	f7fb fe03 	bl	800eb48 <ble_memcpy>
 8012f42:	6920      	ldr	r0, [r4, #16]
 8012f44:	7238      	strb	r0, [r7, #8]
 8012f46:	6921      	ldr	r1, [r4, #16]
 8012f48:	0a09      	lsrs	r1, r1, #8
 8012f4a:	7279      	strb	r1, [r7, #9]
 8012f4c:	6920      	ldr	r0, [r4, #16]
 8012f4e:	2104      	movs	r1, #4
 8012f50:	0c00      	lsrs	r0, r0, #16
 8012f52:	72b8      	strb	r0, [r7, #10]
 8012f54:	6920      	ldr	r0, [r4, #16]
 8012f56:	2417      	movs	r4, #23
 8012f58:	0e00      	lsrs	r0, r0, #24
 8012f5a:	72f8      	strb	r0, [r7, #11]
 8012f5c:	2018      	movs	r0, #24
 8012f5e:	8169      	strh	r1, [r5, #10]
 8012f60:	81a8      	strh	r0, [r5, #12]
 8012f62:	e799      	b.n	8012e98 <??pdu_trnsprt_hndlr_form_cntrl_pdu_5>

08012f64 <??pdu_trnsprt_hndlr_form_cntrl_pdu_9>:
 8012f64:	200a      	movs	r0, #10

08012f66 <??pdu_trnsprt_hndlr_form_cntrl_pdu_10>:
 8012f66:	6829      	ldr	r1, [r5, #0]
 8012f68:	2204      	movs	r2, #4
 8012f6a:	2401      	movs	r4, #1
 8012f6c:	7108      	strb	r0, [r1, #4]
 8012f6e:	816a      	strh	r2, [r5, #10]
 8012f70:	81aa      	strh	r2, [r5, #12]
 8012f72:	e791      	b.n	8012e98 <??pdu_trnsprt_hndlr_form_cntrl_pdu_5>

08012f74 <??pdu_trnsprt_hndlr_form_cntrl_pdu_11>:
 8012f74:	2c00      	cmp	r4, #0
 8012f76:	bf14      	ite	ne
 8012f78:	2001      	movne	r0, #1
 8012f7a:	2000      	moveq	r0, #0
 8012f7c:	f7ed f928 	bl	80001d0 <bsp_assert>
 8012f80:	6828      	ldr	r0, [r5, #0]
 8012f82:	f800 6f04 	strb.w	r6, [r0, #4]!
 8012f86:	8921      	ldrh	r1, [r4, #8]
 8012f88:	f800 1f01 	strb.w	r1, [r0, #1]!
 8012f8c:	8922      	ldrh	r2, [r4, #8]
 8012f8e:	0a12      	lsrs	r2, r2, #8
 8012f90:	7042      	strb	r2, [r0, #1]
 8012f92:	8961      	ldrh	r1, [r4, #10]
 8012f94:	7081      	strb	r1, [r0, #2]
 8012f96:	8962      	ldrh	r2, [r4, #10]
 8012f98:	0a12      	lsrs	r2, r2, #8
 8012f9a:	70c2      	strb	r2, [r0, #3]
 8012f9c:	89a1      	ldrh	r1, [r4, #12]
 8012f9e:	7101      	strb	r1, [r0, #4]
 8012fa0:	89a2      	ldrh	r2, [r4, #12]
 8012fa2:	0a12      	lsrs	r2, r2, #8
 8012fa4:	7142      	strb	r2, [r0, #5]
 8012fa6:	89e1      	ldrh	r1, [r4, #14]
 8012fa8:	7181      	strb	r1, [r0, #6]
 8012faa:	89e2      	ldrh	r2, [r4, #14]
 8012fac:	0a12      	lsrs	r2, r2, #8
 8012fae:	71c2      	strb	r2, [r0, #7]
 8012fb0:	f894 1028 	ldrb.w	r1, [r4, #40]	; 0x28
 8012fb4:	7201      	strb	r1, [r0, #8]
 8012fb6:	8b22      	ldrh	r2, [r4, #24]
 8012fb8:	7242      	strb	r2, [r0, #9]
 8012fba:	8b21      	ldrh	r1, [r4, #24]
 8012fbc:	0a09      	lsrs	r1, r1, #8
 8012fbe:	7281      	strb	r1, [r0, #10]
 8012fc0:	8aa1      	ldrh	r1, [r4, #20]
 8012fc2:	72c1      	strb	r1, [r0, #11]
 8012fc4:	8aa2      	ldrh	r2, [r4, #20]
 8012fc6:	0a12      	lsrs	r2, r2, #8
 8012fc8:	7302      	strb	r2, [r0, #12]
 8012fca:	8be1      	ldrh	r1, [r4, #30]
 8012fcc:	7341      	strb	r1, [r0, #13]
 8012fce:	8be2      	ldrh	r2, [r4, #30]
 8012fd0:	0a12      	lsrs	r2, r2, #8
 8012fd2:	7382      	strb	r2, [r0, #14]
 8012fd4:	8c21      	ldrh	r1, [r4, #32]
 8012fd6:	73c1      	strb	r1, [r0, #15]
 8012fd8:	8c22      	ldrh	r2, [r4, #32]
 8012fda:	0a12      	lsrs	r2, r2, #8
 8012fdc:	7402      	strb	r2, [r0, #16]
 8012fde:	8c61      	ldrh	r1, [r4, #34]	; 0x22
 8012fe0:	7441      	strb	r1, [r0, #17]
 8012fe2:	8c62      	ldrh	r2, [r4, #34]	; 0x22
 8012fe4:	0a12      	lsrs	r2, r2, #8
 8012fe6:	7482      	strb	r2, [r0, #18]
 8012fe8:	8ca1      	ldrh	r1, [r4, #36]	; 0x24
 8012fea:	74c1      	strb	r1, [r0, #19]
 8012fec:	8ca2      	ldrh	r2, [r4, #36]	; 0x24
 8012fee:	0a12      	lsrs	r2, r2, #8
 8012ff0:	7502      	strb	r2, [r0, #20]
 8012ff2:	8ce1      	ldrh	r1, [r4, #38]	; 0x26
 8012ff4:	7541      	strb	r1, [r0, #21]
 8012ff6:	8ce2      	ldrh	r2, [r4, #38]	; 0x26
 8012ff8:	2118      	movs	r1, #24
 8012ffa:	0a12      	lsrs	r2, r2, #8
 8012ffc:	7582      	strb	r2, [r0, #22]
 8012ffe:	2004      	movs	r0, #4
 8013000:	8168      	strh	r0, [r5, #10]
 8013002:	e747      	b.n	8012e94 <??pdu_trnsprt_hndlr_form_cntrl_pdu_4>

08013004 <??pdu_trnsprt_hndlr_form_cntrl_pdu_12>:
 8013004:	6829      	ldr	r1, [r5, #0]
 8013006:	7820      	ldrb	r0, [r4, #0]
 8013008:	2202      	movs	r2, #2
 801300a:	f801 2f04 	strb.w	r2, [r1, #4]!
 801300e:	7048      	strb	r0, [r1, #1]
 8013010:	2004      	movs	r0, #4
 8013012:	8168      	strh	r0, [r5, #10]
 8013014:	81a8      	strh	r0, [r5, #12]
 8013016:	2402      	movs	r4, #2
 8013018:	e73e      	b.n	8012e98 <??pdu_trnsprt_hndlr_form_cntrl_pdu_5>

0801301a <??pdu_trnsprt_hndlr_form_cntrl_pdu_13>:
 801301a:	6828      	ldr	r0, [r5, #0]
 801301c:	7106      	strb	r6, [r0, #4]

0801301e <??pdu_trnsprt_hndlr_form_cntrl_pdu_14>:
 801301e:	2208      	movs	r2, #8
 8013020:	4621      	mov	r1, r4
 8013022:	1d40      	adds	r0, r0, #5
 8013024:	f7fb fd90 	bl	800eb48 <ble_memcpy>

08013028 <??pdu_trnsprt_hndlr_form_cntrl_pdu_15>:
 8013028:	2004      	movs	r0, #4
 801302a:	210c      	movs	r1, #12
 801302c:	8168      	strh	r0, [r5, #10]
 801302e:	81a9      	strh	r1, [r5, #12]
 8013030:	2409      	movs	r4, #9
 8013032:	e731      	b.n	8012e98 <??pdu_trnsprt_hndlr_form_cntrl_pdu_5>

08013034 <??pdu_trnsprt_hndlr_form_cntrl_pdu_16>:
 8013034:	6828      	ldr	r0, [r5, #0]
 8013036:	2109      	movs	r1, #9
 8013038:	7101      	strb	r1, [r0, #4]
 801303a:	e7f0      	b.n	801301e <??pdu_trnsprt_hndlr_form_cntrl_pdu_14>

0801303c <??pdu_trnsprt_hndlr_form_cntrl_pdu_17>:
 801303c:	2c00      	cmp	r4, #0
 801303e:	bf14      	ite	ne
 8013040:	2001      	movne	r0, #1
 8013042:	2000      	moveq	r0, #0
 8013044:	f7ed f8c4 	bl	80001d0 <bsp_assert>
 8013048:	6828      	ldr	r0, [r5, #0]
 801304a:	210c      	movs	r1, #12
 801304c:	f800 1f04 	strb.w	r1, [r0, #4]!
 8013050:	7922      	ldrb	r2, [r4, #4]
 8013052:	f800 2f01 	strb.w	r2, [r0, #1]!
 8013056:	8821      	ldrh	r1, [r4, #0]
 8013058:	7041      	strb	r1, [r0, #1]
 801305a:	8822      	ldrh	r2, [r4, #0]
 801305c:	0a12      	lsrs	r2, r2, #8
 801305e:	7082      	strb	r2, [r0, #2]
 8013060:	8861      	ldrh	r1, [r4, #2]
 8013062:	70c1      	strb	r1, [r0, #3]
 8013064:	8862      	ldrh	r2, [r4, #2]
 8013066:	2108      	movs	r1, #8
 8013068:	2406      	movs	r4, #6
 801306a:	0a12      	lsrs	r2, r2, #8
 801306c:	7102      	strb	r2, [r0, #4]
 801306e:	2004      	movs	r0, #4
 8013070:	8168      	strh	r0, [r5, #10]
 8013072:	81a9      	strh	r1, [r5, #12]
 8013074:	e710      	b.n	8012e98 <??pdu_trnsprt_hndlr_form_cntrl_pdu_5>

08013076 <??pdu_trnsprt_hndlr_form_cntrl_pdu_18>:
 8013076:	2c00      	cmp	r4, #0
 8013078:	bf14      	ite	ne
 801307a:	2001      	movne	r0, #1
 801307c:	2000      	moveq	r0, #0
 801307e:	f7ed f8a7 	bl	80001d0 <bsp_assert>
 8013082:	6828      	ldr	r0, [r5, #0]
 8013084:	f800 6f04 	strb.w	r6, [r0, #4]!
 8013088:	8821      	ldrh	r1, [r4, #0]
 801308a:	f800 1f01 	strb.w	r1, [r0, #1]!
 801308e:	8822      	ldrh	r2, [r4, #0]
 8013090:	0a12      	lsrs	r2, r2, #8
 8013092:	7042      	strb	r2, [r0, #1]
 8013094:	8861      	ldrh	r1, [r4, #2]
 8013096:	7081      	strb	r1, [r0, #2]
 8013098:	8862      	ldrh	r2, [r4, #2]
 801309a:	0a12      	lsrs	r2, r2, #8
 801309c:	70c2      	strb	r2, [r0, #3]
 801309e:	88a1      	ldrh	r1, [r4, #4]
 80130a0:	7101      	strb	r1, [r0, #4]
 80130a2:	88a2      	ldrh	r2, [r4, #4]
 80130a4:	0a12      	lsrs	r2, r2, #8
 80130a6:	7142      	strb	r2, [r0, #5]
 80130a8:	88e1      	ldrh	r1, [r4, #6]
 80130aa:	7181      	strb	r1, [r0, #6]
 80130ac:	88e2      	ldrh	r2, [r4, #6]
 80130ae:	0a12      	lsrs	r2, r2, #8
 80130b0:	71c2      	strb	r2, [r0, #7]
 80130b2:	e7b9      	b.n	8013028 <??pdu_trnsprt_hndlr_form_cntrl_pdu_15>

080130b4 <??pdu_trnsprt_hndlr_form_cntrl_pdu_19>:
 80130b4:	7820      	ldrb	r0, [r4, #0]
 80130b6:	6829      	ldr	r1, [r5, #0]
 80130b8:	2207      	movs	r2, #7

080130ba <??pdu_trnsprt_hndlr_form_cntrl_pdu_20>:
 80130ba:	f801 2f04 	strb.w	r2, [r1, #4]!
 80130be:	7048      	strb	r0, [r1, #1]
 80130c0:	2004      	movs	r0, #4
 80130c2:	8168      	strh	r0, [r5, #10]
 80130c4:	81a8      	strh	r0, [r5, #12]
 80130c6:	2402      	movs	r4, #2
 80130c8:	e6e6      	b.n	8012e98 <??pdu_trnsprt_hndlr_form_cntrl_pdu_5>

080130ca <??pdu_trnsprt_hndlr_form_cntrl_pdu_21>:
 80130ca:	7820      	ldrb	r0, [r4, #0]
 80130cc:	6829      	ldr	r1, [r5, #0]
 80130ce:	220d      	movs	r2, #13
 80130d0:	e7f3      	b.n	80130ba <??pdu_trnsprt_hndlr_form_cntrl_pdu_20>

080130d2 <??pdu_trnsprt_hndlr_form_cntrl_pdu_22>:
 80130d2:	682a      	ldr	r2, [r5, #0]
 80130d4:	7860      	ldrb	r0, [r4, #1]
 80130d6:	7821      	ldrb	r1, [r4, #0]
 80130d8:	2311      	movs	r3, #17
 80130da:	f802 3f04 	strb.w	r3, [r2, #4]!
 80130de:	7051      	strb	r1, [r2, #1]
 80130e0:	7090      	strb	r0, [r2, #2]

080130e2 <??pdu_trnsprt_hndlr_form_cntrl_pdu_23>:
 80130e2:	2004      	movs	r0, #4
 80130e4:	8168      	strh	r0, [r5, #10]
 80130e6:	81a8      	strh	r0, [r5, #12]
 80130e8:	2403      	movs	r4, #3
 80130ea:	e6d5      	b.n	8012e98 <??pdu_trnsprt_hndlr_form_cntrl_pdu_5>

080130ec <??pdu_trnsprt_hndlr_form_cntrl_pdu_24>:
 80130ec:	2c00      	cmp	r4, #0
 80130ee:	bf14      	ite	ne
 80130f0:	2001      	movne	r0, #1
 80130f2:	2000      	moveq	r0, #0
 80130f4:	f7ed f86c 	bl	80001d0 <bsp_assert>
 80130f8:	6828      	ldr	r0, [r5, #0]
 80130fa:	2104      	movs	r1, #4
 80130fc:	2208      	movs	r2, #8
 80130fe:	1d07      	adds	r7, r0, #4
 8013100:	f807 1b01 	strb.w	r1, [r7], #1
 8013104:	1d21      	adds	r1, r4, #4
 8013106:	4638      	mov	r0, r7
 8013108:	f7fb fd1e 	bl	800eb48 <ble_memcpy>
 801310c:	6820      	ldr	r0, [r4, #0]
 801310e:	7238      	strb	r0, [r7, #8]
 8013110:	6821      	ldr	r1, [r4, #0]
 8013112:	0a09      	lsrs	r1, r1, #8
 8013114:	7279      	strb	r1, [r7, #9]
 8013116:	6820      	ldr	r0, [r4, #0]
 8013118:	0c00      	lsrs	r0, r0, #16
 801311a:	72b8      	strb	r0, [r7, #10]
 801311c:	6821      	ldr	r1, [r4, #0]
 801311e:	2004      	movs	r0, #4
 8013120:	240d      	movs	r4, #13
 8013122:	0e09      	lsrs	r1, r1, #24
 8013124:	72f9      	strb	r1, [r7, #11]
 8013126:	2110      	movs	r1, #16
 8013128:	8168      	strh	r0, [r5, #10]
 801312a:	81a9      	strh	r1, [r5, #12]
 801312c:	e6b4      	b.n	8012e98 <??pdu_trnsprt_hndlr_form_cntrl_pdu_5>

0801312e <??pdu_trnsprt_hndlr_form_cntrl_pdu_25>:
 801312e:	2005      	movs	r0, #5
 8013130:	e719      	b.n	8012f66 <??pdu_trnsprt_hndlr_form_cntrl_pdu_10>

08013132 <??pdu_trnsprt_hndlr_form_cntrl_pdu_26>:
 8013132:	2006      	movs	r0, #6
 8013134:	e717      	b.n	8012f66 <??pdu_trnsprt_hndlr_form_cntrl_pdu_10>

08013136 <??pdu_trnsprt_hndlr_form_cntrl_pdu_27>:
 8013136:	200b      	movs	r0, #11
 8013138:	e715      	b.n	8012f66 <??pdu_trnsprt_hndlr_form_cntrl_pdu_10>

0801313a <??pdu_trnsprt_hndlr_form_cntrl_pdu_28>:
 801313a:	2012      	movs	r0, #18
 801313c:	e713      	b.n	8012f66 <??pdu_trnsprt_hndlr_form_cntrl_pdu_10>

0801313e <??pdu_trnsprt_hndlr_form_cntrl_pdu_29>:
 801313e:	2013      	movs	r0, #19
 8013140:	e711      	b.n	8012f66 <??pdu_trnsprt_hndlr_form_cntrl_pdu_10>

08013142 <??pdu_trnsprt_hndlr_form_cntrl_pdu_30>:
 8013142:	682a      	ldr	r2, [r5, #0]
 8013144:	7820      	ldrb	r0, [r4, #0]
 8013146:	7861      	ldrb	r1, [r4, #1]
 8013148:	f802 6f04 	strb.w	r6, [r2, #4]!
 801314c:	f802 0f01 	strb.w	r0, [r2, #1]!
 8013150:	7051      	strb	r1, [r2, #1]
 8013152:	e7c6      	b.n	80130e2 <??pdu_trnsprt_hndlr_form_cntrl_pdu_23>

08013154 <??pdu_trnsprt_hndlr_form_cntrl_pdu_31>:
 8013154:	682b      	ldr	r3, [r5, #0]
 8013156:	7820      	ldrb	r0, [r4, #0]
 8013158:	7861      	ldrb	r1, [r4, #1]
 801315a:	8862      	ldrh	r2, [r4, #2]
 801315c:	2418      	movs	r4, #24
 801315e:	f803 4f04 	strb.w	r4, [r3, #4]!
 8013162:	f803 0f01 	strb.w	r0, [r3, #1]!
 8013166:	709a      	strb	r2, [r3, #2]
 8013168:	0a12      	lsrs	r2, r2, #8
 801316a:	7059      	strb	r1, [r3, #1]
 801316c:	70da      	strb	r2, [r3, #3]
 801316e:	2004      	movs	r0, #4
 8013170:	2108      	movs	r1, #8
 8013172:	8168      	strh	r0, [r5, #10]
 8013174:	81a9      	strh	r1, [r5, #12]
 8013176:	2405      	movs	r4, #5
 8013178:	e68e      	b.n	8012e98 <??pdu_trnsprt_hndlr_form_cntrl_pdu_5>

0801317a <??pdu_trnsprt_hndlr_form_cntrl_pdu_32>:
 801317a:	2c00      	cmp	r4, #0
 801317c:	bf14      	ite	ne
 801317e:	2001      	movne	r0, #1
 8013180:	2000      	moveq	r0, #0
 8013182:	f7ed f825 	bl	80001d0 <bsp_assert>
 8013186:	6828      	ldr	r0, [r5, #0]
 8013188:	2119      	movs	r1, #25
 801318a:	f800 1f04 	strb.w	r1, [r0, #4]!
 801318e:	7822      	ldrb	r2, [r4, #0]
 8013190:	f800 2f01 	strb.w	r2, [r0, #1]!
 8013194:	7861      	ldrb	r1, [r4, #1]
 8013196:	7041      	strb	r1, [r0, #1]
 8013198:	e7a3      	b.n	80130e2 <??pdu_trnsprt_hndlr_form_cntrl_pdu_23>

0801319a <??pdu_trnsprt_hndlr_form_cntrl_pdu_2>:
 801319a:	f04f 081f 	mov.w	r8, #31
 801319e:	e698      	b.n	8012ed2 <??pdu_trnsprt_hndlr_form_cntrl_pdu_6>

080131a0 <pdu_trnsprt_hndlr_parse_data_cntrl>:
 80131a0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80131a4:	461d      	mov	r5, r3
 80131a6:	2700      	movs	r7, #0
 80131a8:	4606      	mov	r6, r0
 80131aa:	4688      	mov	r8, r1
 80131ac:	4614      	mov	r4, r2
 80131ae:	2d00      	cmp	r5, #0
 80131b0:	bf18      	it	ne
 80131b2:	f1b8 0f00 	cmpne.w	r8, #0
 80131b6:	d004      	beq.n	80131c2 <??pdu_trnsprt_hndlr_parse_data_cntrl_1>
 80131b8:	2e00      	cmp	r6, #0
 80131ba:	bf1c      	itt	ne
 80131bc:	2c00      	cmpne	r4, #0
 80131be:	2001      	movne	r0, #1
 80131c0:	d100      	bne.n	80131c4 <??pdu_trnsprt_hndlr_parse_data_cntrl_2>

080131c2 <??pdu_trnsprt_hndlr_parse_data_cntrl_1>:
 80131c2:	2000      	movs	r0, #0

080131c4 <??pdu_trnsprt_hndlr_parse_data_cntrl_2>:
 80131c4:	f7ed f804 	bl	80001d0 <bsp_assert>
 80131c8:	6828      	ldr	r0, [r5, #0]
 80131ca:	b100      	cbz	r0, 80131ce <??pdu_trnsprt_hndlr_parse_data_cntrl_3>
 80131cc:	2001      	movs	r0, #1

080131ce <??pdu_trnsprt_hndlr_parse_data_cntrl_3>:
 80131ce:	f7ec ffff 	bl	80001d0 <bsp_assert>
 80131d2:	6828      	ldr	r0, [r5, #0]
 80131d4:	8969      	ldrh	r1, [r5, #10]
 80131d6:	4408      	add	r0, r1
 80131d8:	7801      	ldrb	r1, [r0, #0]
 80131da:	f001 0103 	and.w	r1, r1, #3
 80131de:	7031      	strb	r1, [r6, #0]
 80131e0:	2903      	cmp	r1, #3
 80131e2:	f040 8185 	bne.w	80134f0 <??pdu_trnsprt_hndlr_parse_data_cntrl_4>
 80131e6:	7900      	ldrb	r0, [r0, #4]
 80131e8:	f888 0000 	strb.w	r0, [r8]
 80131ec:	2819      	cmp	r0, #25
 80131ee:	f200 817f 	bhi.w	80134f0 <??pdu_trnsprt_hndlr_parse_data_cntrl_4>
 80131f2:	e8df f010 	tbh	[pc, r0, lsl #1]

080131f6 <??pdu_trnsprt_hndlr_parse_data_cntrl_0>:
 80131f6:	001a 0040 010f 0055 0133 017e 017e 010f     ..@...U.3.~.~...
 8013206:	00c1 00cd 017e 017e 00d9 011b 00c1 007c     ....~.~.......|.
 8013216:	007c 0127 017e 017e 00f0 00f0 014a 014a     |.'.~.~.....J.J.
 8013226:	014f 0163                                   O.c.

0801322a <??pdu_trnsprt_hndlr_parse_data_cntrl_5>:
 801322a:	2c00      	cmp	r4, #0
 801322c:	bf14      	ite	ne
 801322e:	2001      	movne	r0, #1
 8013230:	2000      	moveq	r0, #0
 8013232:	f7ec ffcd 	bl	80001d0 <bsp_assert>
 8013236:	6828      	ldr	r0, [r5, #0]
 8013238:	8969      	ldrh	r1, [r5, #10]
 801323a:	4401      	add	r1, r0
 801323c:	1d48      	adds	r0, r1, #5
 801323e:	7802      	ldrb	r2, [r0, #0]
 8013240:	7722      	strb	r2, [r4, #28]
 8013242:	7841      	ldrb	r1, [r0, #1]
 8013244:	7882      	ldrb	r2, [r0, #2]
 8013246:	ea41 2102 	orr.w	r1, r1, r2, lsl #8
 801324a:	82a1      	strh	r1, [r4, #20]
 801324c:	78c1      	ldrb	r1, [r0, #3]
 801324e:	7902      	ldrb	r2, [r0, #4]
 8013250:	ea41 2102 	orr.w	r1, r1, r2, lsl #8
 8013254:	8361      	strh	r1, [r4, #26]
 8013256:	7941      	ldrb	r1, [r0, #5]
 8013258:	7982      	ldrb	r2, [r0, #6]
 801325a:	ea41 2102 	orr.w	r1, r1, r2, lsl #8
 801325e:	81a1      	strh	r1, [r4, #12]
 8013260:	79c1      	ldrb	r1, [r0, #7]
 8013262:	7a02      	ldrb	r2, [r0, #8]
 8013264:	ea41 2102 	orr.w	r1, r1, r2, lsl #8
 8013268:	81e1      	strh	r1, [r4, #14]
 801326a:	7a41      	ldrb	r1, [r0, #9]
 801326c:	7a80      	ldrb	r0, [r0, #10]
 801326e:	ea41 2100 	orr.w	r1, r1, r0, lsl #8
 8013272:	8321      	strh	r1, [r4, #24]
 8013274:	e13d      	b.n	80134f2 <??pdu_trnsprt_hndlr_parse_data_cntrl_6>

08013276 <??pdu_trnsprt_hndlr_parse_data_cntrl_7>:
 8013276:	2c00      	cmp	r4, #0
 8013278:	bf14      	ite	ne
 801327a:	2001      	movne	r0, #1
 801327c:	2000      	moveq	r0, #0
 801327e:	f7ec ffa7 	bl	80001d0 <bsp_assert>
 8013282:	6828      	ldr	r0, [r5, #0]
 8013284:	8969      	ldrh	r1, [r5, #10]
 8013286:	2205      	movs	r2, #5
 8013288:	4401      	add	r1, r0
 801328a:	1d4d      	adds	r5, r1, #5
 801328c:	4629      	mov	r1, r5
 801328e:	1ca0      	adds	r0, r4, #2
 8013290:	f7fb fc5a 	bl	800eb48 <ble_memcpy>
 8013294:	7968      	ldrb	r0, [r5, #5]
 8013296:	79a9      	ldrb	r1, [r5, #6]
 8013298:	ea40 2001 	orr.w	r0, r0, r1, lsl #8
 801329c:	8020      	strh	r0, [r4, #0]
 801329e:	e128      	b.n	80134f2 <??pdu_trnsprt_hndlr_parse_data_cntrl_6>

080132a0 <??pdu_trnsprt_hndlr_parse_data_cntrl_8>:
 80132a0:	2c00      	cmp	r4, #0
 80132a2:	bf14      	ite	ne
 80132a4:	2001      	movne	r0, #1
 80132a6:	2000      	moveq	r0, #0
 80132a8:	f7ec ff92 	bl	80001d0 <bsp_assert>
 80132ac:	6828      	ldr	r0, [r5, #0]
 80132ae:	8969      	ldrh	r1, [r5, #10]
 80132b0:	2208      	movs	r2, #8
 80132b2:	4401      	add	r1, r0
 80132b4:	1d4d      	adds	r5, r1, #5
 80132b6:	4629      	mov	r1, r5
 80132b8:	4620      	mov	r0, r4
 80132ba:	f7fb fc45 	bl	800eb48 <ble_memcpy>
 80132be:	7a28      	ldrb	r0, [r5, #8]
 80132c0:	7a69      	ldrb	r1, [r5, #9]
 80132c2:	2208      	movs	r2, #8
 80132c4:	ea40 2001 	orr.w	r0, r0, r1, lsl #8
 80132c8:	f105 010a 	add.w	r1, r5, #10
 80132cc:	82a0      	strh	r0, [r4, #20]
 80132ce:	f104 0008 	add.w	r0, r4, #8
 80132d2:	f7fb fc39 	bl	800eb48 <ble_memcpy>
 80132d6:	7ca8      	ldrb	r0, [r5, #18]
 80132d8:	7ce9      	ldrb	r1, [r5, #19]
 80132da:	7d2a      	ldrb	r2, [r5, #20]
 80132dc:	ea40 2001 	orr.w	r0, r0, r1, lsl #8
 80132e0:	7d69      	ldrb	r1, [r5, #21]
 80132e2:	ea40 4002 	orr.w	r0, r0, r2, lsl #16
 80132e6:	ea40 6001 	orr.w	r0, r0, r1, lsl #24
 80132ea:	6120      	str	r0, [r4, #16]
 80132ec:	e101      	b.n	80134f2 <??pdu_trnsprt_hndlr_parse_data_cntrl_6>

080132ee <??pdu_trnsprt_hndlr_parse_data_cntrl_9>:
 80132ee:	2c00      	cmp	r4, #0
 80132f0:	bf14      	ite	ne
 80132f2:	2001      	movne	r0, #1
 80132f4:	2000      	moveq	r0, #0
 80132f6:	f7ec ff6b 	bl	80001d0 <bsp_assert>
 80132fa:	6828      	ldr	r0, [r5, #0]
 80132fc:	8969      	ldrh	r1, [r5, #10]
 80132fe:	4401      	add	r1, r0
 8013300:	1d48      	adds	r0, r1, #5
 8013302:	7802      	ldrb	r2, [r0, #0]
 8013304:	7841      	ldrb	r1, [r0, #1]
 8013306:	ea42 2201 	orr.w	r2, r2, r1, lsl #8
 801330a:	8122      	strh	r2, [r4, #8]
 801330c:	7881      	ldrb	r1, [r0, #2]
 801330e:	78c2      	ldrb	r2, [r0, #3]
 8013310:	ea41 2102 	orr.w	r1, r1, r2, lsl #8
 8013314:	8161      	strh	r1, [r4, #10]
 8013316:	7901      	ldrb	r1, [r0, #4]
 8013318:	7942      	ldrb	r2, [r0, #5]
 801331a:	ea41 2102 	orr.w	r1, r1, r2, lsl #8
 801331e:	81a1      	strh	r1, [r4, #12]
 8013320:	7981      	ldrb	r1, [r0, #6]
 8013322:	79c2      	ldrb	r2, [r0, #7]
 8013324:	ea41 2102 	orr.w	r1, r1, r2, lsl #8
 8013328:	81e1      	strh	r1, [r4, #14]
 801332a:	7a01      	ldrb	r1, [r0, #8]
 801332c:	f884 1028 	strb.w	r1, [r4, #40]	; 0x28
 8013330:	7a42      	ldrb	r2, [r0, #9]
 8013332:	7a81      	ldrb	r1, [r0, #10]
 8013334:	ea42 2201 	orr.w	r2, r2, r1, lsl #8
 8013338:	8322      	strh	r2, [r4, #24]
 801333a:	7ac1      	ldrb	r1, [r0, #11]
 801333c:	7b02      	ldrb	r2, [r0, #12]
 801333e:	ea41 2102 	orr.w	r1, r1, r2, lsl #8
 8013342:	82a1      	strh	r1, [r4, #20]
 8013344:	7b41      	ldrb	r1, [r0, #13]
 8013346:	7b82      	ldrb	r2, [r0, #14]
 8013348:	ea41 2102 	orr.w	r1, r1, r2, lsl #8
 801334c:	83e1      	strh	r1, [r4, #30]
 801334e:	7bc1      	ldrb	r1, [r0, #15]
 8013350:	7c02      	ldrb	r2, [r0, #16]
 8013352:	ea41 2102 	orr.w	r1, r1, r2, lsl #8
 8013356:	8421      	strh	r1, [r4, #32]
 8013358:	7c41      	ldrb	r1, [r0, #17]
 801335a:	7c82      	ldrb	r2, [r0, #18]
 801335c:	ea41 2102 	orr.w	r1, r1, r2, lsl #8
 8013360:	8461      	strh	r1, [r4, #34]	; 0x22
 8013362:	7cc1      	ldrb	r1, [r0, #19]
 8013364:	7d02      	ldrb	r2, [r0, #20]
 8013366:	ea41 2102 	orr.w	r1, r1, r2, lsl #8
 801336a:	84a1      	strh	r1, [r4, #36]	; 0x24
 801336c:	7d41      	ldrb	r1, [r0, #21]
 801336e:	7d80      	ldrb	r0, [r0, #22]
 8013370:	ea41 2100 	orr.w	r1, r1, r0, lsl #8
 8013374:	84e1      	strh	r1, [r4, #38]	; 0x26
 8013376:	e0bc      	b.n	80134f2 <??pdu_trnsprt_hndlr_parse_data_cntrl_6>

08013378 <??pdu_trnsprt_hndlr_parse_data_cntrl_10>:
 8013378:	2c00      	cmp	r4, #0
 801337a:	bf14      	ite	ne
 801337c:	2001      	movne	r0, #1
 801337e:	2000      	moveq	r0, #0
 8013380:	f7ec ff26 	bl	80001d0 <bsp_assert>
 8013384:	6828      	ldr	r0, [r5, #0]
 8013386:	8969      	ldrh	r1, [r5, #10]
 8013388:	2208      	movs	r2, #8
 801338a:	4401      	add	r1, r0
 801338c:	1d49      	adds	r1, r1, #5
 801338e:	e078      	b.n	8013482 <??pdu_trnsprt_hndlr_parse_data_cntrl_11>

08013390 <??pdu_trnsprt_hndlr_parse_data_cntrl_12>:
 8013390:	2c00      	cmp	r4, #0
 8013392:	bf14      	ite	ne
 8013394:	2001      	movne	r0, #1
 8013396:	2000      	moveq	r0, #0
 8013398:	f7ec ff1a 	bl	80001d0 <bsp_assert>
 801339c:	6828      	ldr	r0, [r5, #0]
 801339e:	8969      	ldrh	r1, [r5, #10]
 80133a0:	2208      	movs	r2, #8
 80133a2:	4401      	add	r1, r0
 80133a4:	1d49      	adds	r1, r1, #5
 80133a6:	e06c      	b.n	8013482 <??pdu_trnsprt_hndlr_parse_data_cntrl_11>

080133a8 <??pdu_trnsprt_hndlr_parse_data_cntrl_13>:
 80133a8:	2c00      	cmp	r4, #0
 80133aa:	bf14      	ite	ne
 80133ac:	2001      	movne	r0, #1
 80133ae:	2000      	moveq	r0, #0
 80133b0:	f7ec ff0e 	bl	80001d0 <bsp_assert>
 80133b4:	6828      	ldr	r0, [r5, #0]
 80133b6:	8969      	ldrh	r1, [r5, #10]
 80133b8:	4401      	add	r1, r0
 80133ba:	1d48      	adds	r0, r1, #5
 80133bc:	7802      	ldrb	r2, [r0, #0]
 80133be:	7122      	strb	r2, [r4, #4]
 80133c0:	7841      	ldrb	r1, [r0, #1]
 80133c2:	7882      	ldrb	r2, [r0, #2]
 80133c4:	ea41 2102 	orr.w	r1, r1, r2, lsl #8
 80133c8:	8021      	strh	r1, [r4, #0]
 80133ca:	78c1      	ldrb	r1, [r0, #3]
 80133cc:	7900      	ldrb	r0, [r0, #4]
 80133ce:	ea41 2100 	orr.w	r1, r1, r0, lsl #8
 80133d2:	8061      	strh	r1, [r4, #2]
 80133d4:	e08d      	b.n	80134f2 <??pdu_trnsprt_hndlr_parse_data_cntrl_6>

080133d6 <??pdu_trnsprt_hndlr_parse_data_cntrl_14>:
 80133d6:	2c00      	cmp	r4, #0
 80133d8:	bf14      	ite	ne
 80133da:	2001      	movne	r0, #1
 80133dc:	2000      	moveq	r0, #0
 80133de:	f7ec fef7 	bl	80001d0 <bsp_assert>
 80133e2:	6828      	ldr	r0, [r5, #0]
 80133e4:	8969      	ldrh	r1, [r5, #10]
 80133e6:	4401      	add	r1, r0
 80133e8:	1d48      	adds	r0, r1, #5
 80133ea:	7802      	ldrb	r2, [r0, #0]
 80133ec:	7841      	ldrb	r1, [r0, #1]
 80133ee:	ea42 2201 	orr.w	r2, r2, r1, lsl #8
 80133f2:	8022      	strh	r2, [r4, #0]
 80133f4:	7882      	ldrb	r2, [r0, #2]
 80133f6:	78c1      	ldrb	r1, [r0, #3]
 80133f8:	ea42 2201 	orr.w	r2, r2, r1, lsl #8
 80133fc:	8062      	strh	r2, [r4, #2]
 80133fe:	7901      	ldrb	r1, [r0, #4]
 8013400:	7942      	ldrb	r2, [r0, #5]
 8013402:	ea41 2102 	orr.w	r1, r1, r2, lsl #8
 8013406:	80a1      	strh	r1, [r4, #4]
 8013408:	7981      	ldrb	r1, [r0, #6]
 801340a:	79c0      	ldrb	r0, [r0, #7]
 801340c:	ea41 2100 	orr.w	r1, r1, r0, lsl #8
 8013410:	80e1      	strh	r1, [r4, #6]
 8013412:	e06e      	b.n	80134f2 <??pdu_trnsprt_hndlr_parse_data_cntrl_6>

08013414 <??pdu_trnsprt_hndlr_parse_data_cntrl_15>:
 8013414:	2c00      	cmp	r4, #0
 8013416:	bf14      	ite	ne
 8013418:	2001      	movne	r0, #1
 801341a:	2000      	moveq	r0, #0
 801341c:	f7ec fed8 	bl	80001d0 <bsp_assert>
 8013420:	6828      	ldr	r0, [r5, #0]
 8013422:	8969      	ldrh	r1, [r5, #10]
 8013424:	4401      	add	r1, r0
 8013426:	7948      	ldrb	r0, [r1, #5]
 8013428:	7020      	strb	r0, [r4, #0]
 801342a:	e062      	b.n	80134f2 <??pdu_trnsprt_hndlr_parse_data_cntrl_6>

0801342c <??pdu_trnsprt_hndlr_parse_data_cntrl_16>:
 801342c:	2c00      	cmp	r4, #0
 801342e:	bf14      	ite	ne
 8013430:	2001      	movne	r0, #1
 8013432:	2000      	moveq	r0, #0
 8013434:	f7ec fecc 	bl	80001d0 <bsp_assert>
 8013438:	6828      	ldr	r0, [r5, #0]
 801343a:	8969      	ldrh	r1, [r5, #10]
 801343c:	4401      	add	r1, r0
 801343e:	794a      	ldrb	r2, [r1, #5]
 8013440:	7022      	strb	r2, [r4, #0]
 8013442:	e056      	b.n	80134f2 <??pdu_trnsprt_hndlr_parse_data_cntrl_6>

08013444 <??pdu_trnsprt_hndlr_parse_data_cntrl_17>:
 8013444:	1c60      	adds	r0, r4, #1
 8013446:	bf18      	it	ne
 8013448:	2001      	movne	r0, #1
 801344a:	f7ec fec1 	bl	80001d0 <bsp_assert>
 801344e:	6828      	ldr	r0, [r5, #0]
 8013450:	8969      	ldrh	r1, [r5, #10]
 8013452:	4408      	add	r0, r1
 8013454:	7942      	ldrb	r2, [r0, #5]
 8013456:	7022      	strb	r2, [r4, #0]
 8013458:	7980      	ldrb	r0, [r0, #6]
 801345a:	e047      	b.n	80134ec <??pdu_trnsprt_hndlr_parse_data_cntrl_18>

0801345c <??pdu_trnsprt_hndlr_parse_data_cntrl_19>:
 801345c:	2c00      	cmp	r4, #0
 801345e:	bf14      	ite	ne
 8013460:	2001      	movne	r0, #1
 8013462:	2000      	moveq	r0, #0
 8013464:	f7ec feb4 	bl	80001d0 <bsp_assert>
 8013468:	6828      	ldr	r0, [r5, #0]
 801346a:	8969      	ldrh	r1, [r5, #10]
 801346c:	2208      	movs	r2, #8
 801346e:	4401      	add	r1, r0
 8013470:	1d49      	adds	r1, r1, #5
 8013472:	1d20      	adds	r0, r4, #4
 8013474:	f7fb fb68 	bl	800eb48 <ble_memcpy>
 8013478:	6828      	ldr	r0, [r5, #0]
 801347a:	8969      	ldrh	r1, [r5, #10]
 801347c:	2204      	movs	r2, #4
 801347e:	4401      	add	r1, r0
 8013480:	310d      	adds	r1, #13

08013482 <??pdu_trnsprt_hndlr_parse_data_cntrl_11>:
 8013482:	4620      	mov	r0, r4
 8013484:	f7fb fb60 	bl	800eb48 <ble_memcpy>
 8013488:	e033      	b.n	80134f2 <??pdu_trnsprt_hndlr_parse_data_cntrl_6>

0801348a <??pdu_trnsprt_hndlr_parse_data_cntrl_20>:
 801348a:	2c00      	cmp	r4, #0
 801348c:	bf0c      	ite	eq
 801348e:	2000      	moveq	r0, #0
 8013490:	2001      	movne	r0, #1
 8013492:	e022      	b.n	80134da <??pdu_trnsprt_hndlr_parse_data_cntrl_21>

08013494 <??pdu_trnsprt_hndlr_parse_data_cntrl_22>:
 8013494:	2c00      	cmp	r4, #0
 8013496:	bf14      	ite	ne
 8013498:	2001      	movne	r0, #1
 801349a:	2000      	moveq	r0, #0
 801349c:	f7ec fe98 	bl	80001d0 <bsp_assert>
 80134a0:	6828      	ldr	r0, [r5, #0]
 80134a2:	8969      	ldrh	r1, [r5, #10]
 80134a4:	4401      	add	r1, r0
 80134a6:	1d48      	adds	r0, r1, #5
 80134a8:	7802      	ldrb	r2, [r0, #0]
 80134aa:	7022      	strb	r2, [r4, #0]
 80134ac:	7841      	ldrb	r1, [r0, #1]
 80134ae:	7061      	strb	r1, [r4, #1]
 80134b0:	7882      	ldrb	r2, [r0, #2]
 80134b2:	78c0      	ldrb	r0, [r0, #3]
 80134b4:	ea42 2200 	orr.w	r2, r2, r0, lsl #8
 80134b8:	8062      	strh	r2, [r4, #2]
 80134ba:	e01a      	b.n	80134f2 <??pdu_trnsprt_hndlr_parse_data_cntrl_6>

080134bc <??pdu_trnsprt_hndlr_parse_data_cntrl_23>:
 80134bc:	2c00      	cmp	r4, #0
 80134be:	bf14      	ite	ne
 80134c0:	2001      	movne	r0, #1
 80134c2:	2000      	moveq	r0, #0
 80134c4:	f7ec fe84 	bl	80001d0 <bsp_assert>
 80134c8:	2d00      	cmp	r5, #0
 80134ca:	bf14      	ite	ne
 80134cc:	2001      	movne	r0, #1
 80134ce:	2000      	moveq	r0, #0
 80134d0:	f7ec fe7e 	bl	80001d0 <bsp_assert>
 80134d4:	6828      	ldr	r0, [r5, #0]
 80134d6:	b100      	cbz	r0, 80134da <??pdu_trnsprt_hndlr_parse_data_cntrl_21>
 80134d8:	2001      	movs	r0, #1

080134da <??pdu_trnsprt_hndlr_parse_data_cntrl_21>:
 80134da:	f7ec fe79 	bl	80001d0 <bsp_assert>
 80134de:	6828      	ldr	r0, [r5, #0]
 80134e0:	8969      	ldrh	r1, [r5, #10]
 80134e2:	4401      	add	r1, r0
 80134e4:	1d48      	adds	r0, r1, #5
 80134e6:	7802      	ldrb	r2, [r0, #0]
 80134e8:	7022      	strb	r2, [r4, #0]
 80134ea:	7840      	ldrb	r0, [r0, #1]

080134ec <??pdu_trnsprt_hndlr_parse_data_cntrl_18>:
 80134ec:	7060      	strb	r0, [r4, #1]
 80134ee:	e000      	b.n	80134f2 <??pdu_trnsprt_hndlr_parse_data_cntrl_6>

080134f0 <??pdu_trnsprt_hndlr_parse_data_cntrl_4>:
 80134f0:	271f      	movs	r7, #31

080134f2 <??pdu_trnsprt_hndlr_parse_data_cntrl_6>:
 80134f2:	4638      	mov	r0, r7
 80134f4:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

080134f8 <pdu_trnsprt_hndlr_get_payload_lngth>:
 80134f8:	6801      	ldr	r1, [r0, #0]
 80134fa:	8940      	ldrh	r0, [r0, #10]
 80134fc:	4408      	add	r0, r1
 80134fe:	7840      	ldrb	r0, [r0, #1]
 8013500:	4770      	bx	lr
	...

08013504 <allocate_data_packet>:
 8013504:	b570      	push	{r4, r5, r6, lr}
 8013506:	4605      	mov	r5, r0
 8013508:	460e      	mov	r6, r1
 801350a:	4814      	ldr	r0, [pc, #80]	; (801355c <??DataTable0>)
 801350c:	f7f1 fe84 	bl	8005218 <os_mem_pool_alloc>
 8013510:	0004      	movs	r4, r0
 8013512:	bf14      	ite	ne
 8013514:	2001      	movne	r0, #1
 8013516:	2000      	moveq	r0, #0
 8013518:	f7ec fe5a 	bl	80001d0 <bsp_assert>
 801351c:	b184      	cbz	r4, 8013540 <??allocate_data_packet_0>
 801351e:	2210      	movs	r2, #16
 8013520:	2100      	movs	r1, #0
 8013522:	4620      	mov	r0, r4
 8013524:	f7fb fb61 	bl	800ebea <ble_memset>
 8013528:	4630      	mov	r0, r6
 801352a:	f7f1 fe79 	bl	8005220 <os_shrd_mem_alloc>
 801352e:	6020      	str	r0, [r4, #0]
 8013530:	b920      	cbnz	r0, 801353c <??allocate_data_packet_1>
 8013532:	4620      	mov	r0, r4
 8013534:	f7f1 fe72 	bl	800521c <os_mem_pool_free>
 8013538:	2400      	movs	r4, #0
 801353a:	e001      	b.n	8013540 <??allocate_data_packet_0>

0801353c <??allocate_data_packet_1>:
 801353c:	6830      	ldr	r0, [r6, #0]
 801353e:	8120      	strh	r0, [r4, #8]

08013540 <??allocate_data_packet_0>:
 8013540:	b105      	cbz	r5, 8013544 <??allocate_data_packet_2>
 8013542:	606c      	str	r4, [r5, #4]

08013544 <??allocate_data_packet_2>:
 8013544:	2c00      	cmp	r4, #0
 8013546:	bf1c      	itt	ne
 8013548:	6820      	ldrne	r0, [r4, #0]
 801354a:	2800      	cmpne	r0, #0
 801354c:	d004      	beq.n	8013558 <??allocate_data_packet_3>
 801354e:	2204      	movs	r2, #4
 8013550:	2100      	movs	r1, #0
 8013552:	1f00      	subs	r0, r0, #4
 8013554:	f7fb fb49 	bl	800ebea <ble_memset>

08013558 <??allocate_data_packet_3>:
 8013558:	4620      	mov	r0, r4
 801355a:	bd70      	pop	{r4, r5, r6, pc}

0801355c <??DataTable0>:
 801355c:	3624 2000                                   $6. 

08013560 <free_buff_hdr>:
 8013560:	b538      	push	{r3, r4, r5, lr}
 8013562:	0004      	movs	r4, r0
 8013564:	bf14      	ite	ne
 8013566:	2001      	movne	r0, #1
 8013568:	2000      	moveq	r0, #0
 801356a:	f7ec fe31 	bl	80001d0 <bsp_assert>
 801356e:	7ba0      	ldrb	r0, [r4, #14]
 8013570:	2500      	movs	r5, #0
 8013572:	0741      	lsls	r1, r0, #29
 8013574:	d409      	bmi.n	801358a <??free_buff_hdr_0>
 8013576:	6820      	ldr	r0, [r4, #0]
 8013578:	b100      	cbz	r0, 801357c <??free_buff_hdr_1>
 801357a:	2001      	movs	r0, #1

0801357c <??free_buff_hdr_1>:
 801357c:	f7ec fe28 	bl	80001d0 <bsp_assert>
 8013580:	6820      	ldr	r0, [r4, #0]
 8013582:	2501      	movs	r5, #1
 8013584:	1f00      	subs	r0, r0, #4
 8013586:	f7f1 fe49 	bl	800521c <os_mem_pool_free>

0801358a <??free_buff_hdr_0>:
 801358a:	4620      	mov	r0, r4
 801358c:	f7f1 fe46 	bl	800521c <os_mem_pool_free>
 8013590:	4628      	mov	r0, r5
 8013592:	bd32      	pop	{r1, r4, r5, pc}

08013594 <get_nxt_data_packet>:
 8013594:	6840      	ldr	r0, [r0, #4]
 8013596:	4770      	bx	lr

08013598 <alloc_data_packet_list>:
 8013598:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 801359c:	4681      	mov	r9, r0
 801359e:	460f      	mov	r7, r1
 80135a0:	4692      	mov	sl, r2
 80135a2:	783c      	ldrb	r4, [r7, #0]
 80135a4:	4651      	mov	r1, sl
 80135a6:	2000      	movs	r0, #0
 80135a8:	2600      	movs	r6, #0
 80135aa:	f7ff ffab 	bl	8013504 <allocate_data_packet>
 80135ae:	46b0      	mov	r8, r6
 80135b0:	0005      	movs	r5, r0
 80135b2:	bf14      	ite	ne
 80135b4:	2001      	movne	r0, #1
 80135b6:	2000      	moveq	r0, #0
 80135b8:	f7ec fe0a 	bl	80001d0 <bsp_assert>
 80135bc:	b165      	cbz	r5, 80135d8 <??alloc_data_packet_list_0>
 80135be:	46a8      	mov	r8, r5
 80135c0:	4628      	mov	r0, r5
 80135c2:	e003      	b.n	80135cc <??alloc_data_packet_list_1>

080135c4 <??alloc_data_packet_list_2>:
 80135c4:	4651      	mov	r1, sl
 80135c6:	f7ff ff9d 	bl	8013504 <allocate_data_packet>
 80135ca:	1c76      	adds	r6, r6, #1

080135cc <??alloc_data_packet_list_1>:
 80135cc:	b2f1      	uxtb	r1, r6
 80135ce:	1e62      	subs	r2, r4, #1
 80135d0:	4291      	cmp	r1, r2
 80135d2:	da01      	bge.n	80135d8 <??alloc_data_packet_list_0>
 80135d4:	2800      	cmp	r0, #0
 80135d6:	d1f5      	bne.n	80135c4 <??alloc_data_packet_list_2>

080135d8 <??alloc_data_packet_list_0>:
 80135d8:	703e      	strb	r6, [r7, #0]
 80135da:	f1b9 0f00 	cmp.w	r9, #0
 80135de:	bf18      	it	ne
 80135e0:	f8c9 8004 	strne.w	r8, [r9, #4]
 80135e4:	4640      	mov	r0, r8
 80135e6:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
	...

080135ec <prvcy_mngr_reset>:
 80135ec:	b51c      	push	{r2, r3, r4, lr}
 80135ee:	f8df 0ca8 	ldr.w	r0, [pc, #3240]	; 8014298 <??DataTable10>
 80135f2:	f500 74ba 	add.w	r4, r0, #372	; 0x174
 80135f6:	2100      	movs	r1, #0
 80135f8:	23aa      	movs	r3, #170	; 0xaa
 80135fa:	8021      	strh	r1, [r4, #0]
 80135fc:	7263      	strb	r3, [r4, #9]
 80135fe:	2206      	movs	r2, #6
 8013600:	f500 70b6 	add.w	r0, r0, #364	; 0x16c
 8013604:	f7fb faf1 	bl	800ebea <ble_memset>
 8013608:	f44f 7061 	mov.w	r0, #900	; 0x384
 801360c:	2100      	movs	r1, #0
 801360e:	8320      	strh	r0, [r4, #24]
 8013610:	72e1      	strb	r1, [r4, #11]
 8013612:	9100      	str	r1, [sp, #0]
 8013614:	2300      	movs	r3, #0
 8013616:	2200      	movs	r2, #0
 8013618:	2002      	movs	r0, #2
 801361a:	f000 fa2e 	bl	8013a7a <prvcy_mngr_add_rmv_clr_fw_reslvng_list>
 801361e:	bd16      	pop	{r1, r2, r4, pc}

08013620 <prvcy_mngr_addr_hndlr>:
 8013620:	e92d 4ff2 	stmdb	sp!, {r1, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8013624:	f8df bc70 	ldr.w	fp, [pc, #3184]	; 8014298 <??DataTable10>
 8013628:	b082      	sub	sp, #8
 801362a:	4682      	mov	sl, r0
 801362c:	f50b 75bc 	add.w	r5, fp, #376	; 0x178
 8013630:	7a28      	ldrb	r0, [r5, #8]
 8013632:	2700      	movs	r7, #0
 8013634:	2400      	movs	r4, #0
 8013636:	46a0      	mov	r8, r4
 8013638:	2801      	cmp	r0, #1
 801363a:	bf02      	ittt	eq
 801363c:	f89b 0159 	ldrbeq.w	r0, [fp, #345]	; 0x159
 8013640:	0980      	lsreq	r0, r0, #6
 8013642:	2801      	cmpeq	r0, #1
 8013644:	f040 80fe 	bne.w	8013844 <??prvcy_mngr_addr_hndlr_0>
 8013648:	7128      	strb	r0, [r5, #4]
 801364a:	f50b 79aa 	add.w	r9, fp, #340	; 0x154
 801364e:	ab01      	add	r3, sp, #4
 8013650:	464a      	mov	r2, r9
 8013652:	2101      	movs	r1, #1
 8013654:	2003      	movs	r0, #3
 8013656:	f7f5 ff23 	bl	80094a0 <llhwc_lst_search>
 801365a:	0007      	movs	r7, r0
 801365c:	f040 815d 	bne.w	801391a <??prvcy_mngr_addr_hndlr_1>
 8013660:	f89d 0004 	ldrb.w	r0, [sp, #4]
 8013664:	07c1      	lsls	r1, r0, #31
 8013666:	f140 8095 	bpl.w	8013794 <??prvcy_mngr_addr_hndlr_2>
 801366a:	2600      	movs	r6, #0
 801366c:	2000      	movs	r0, #0
 801366e:	465f      	mov	r7, fp

08013670 <??prvcy_mngr_addr_hndlr_3>:
 8013670:	7e39      	ldrb	r1, [r7, #24]
 8013672:	2901      	cmp	r1, #1
 8013674:	d106      	bne.n	8013684 <??prvcy_mngr_addr_hndlr_4>
 8013676:	4649      	mov	r1, r9
 8013678:	f107 0030 	add.w	r0, r7, #48	; 0x30
 801367c:	f000 f9d4 	bl	8013a28 <prvcy_mngr_addr_rsln>
 8013680:	280f      	cmp	r0, #15
 8013682:	d104      	bne.n	801368e <??prvcy_mngr_addr_hndlr_5>

08013684 <??prvcy_mngr_addr_hndlr_4>:
 8013684:	1c76      	adds	r6, r6, #1
 8013686:	3744      	adds	r7, #68	; 0x44
 8013688:	2e05      	cmp	r6, #5
 801368a:	dbf1      	blt.n	8013670 <??prvcy_mngr_addr_hndlr_3>
 801368c:	e016      	b.n	80136bc <??prvcy_mngr_addr_hndlr_6>

0801368e <??prvcy_mngr_addr_hndlr_5>:
 801368e:	0007      	movs	r7, r0
 8013690:	f040 8143 	bne.w	801391a <??prvcy_mngr_addr_hndlr_1>
 8013694:	eb06 1006 	add.w	r0, r6, r6, lsl #4
 8013698:	f10b 0119 	add.w	r1, fp, #25
 801369c:	0080      	lsls	r0, r0, #2
 801369e:	eb0b 0300 	add.w	r3, fp, r0
 80136a2:	602b      	str	r3, [r5, #0]
 80136a4:	5c08      	ldrb	r0, [r1, r0]
 80136a6:	4651      	mov	r1, sl
 80136a8:	1c82      	adds	r2, r0, #2
 80136aa:	726a      	strb	r2, [r5, #9]
 80136ac:	9000      	str	r0, [sp, #0]
 80136ae:	f89d 0008 	ldrb.w	r0, [sp, #8]
 80136b2:	b2f2      	uxtb	r2, r6
 80136b4:	f000 fc86 	bl	8013fc4 <prvcy_mngr_add_rmv_hw_reslvng_list>
 80136b8:	0007      	movs	r7, r0
 80136ba:	e038      	b.n	801372e <??prvcy_mngr_addr_hndlr_7>

080136bc <??prvcy_mngr_addr_hndlr_6>:
 80136bc:	4607      	mov	r7, r0
 80136be:	2f0f      	cmp	r7, #15
 80136c0:	d160      	bne.n	8013784 <??prvcy_mngr_addr_hndlr_8>
 80136c2:	ea5f 000a 	movs.w	r0, sl
 80136c6:	d135      	bne.n	8013734 <??prvcy_mngr_addr_hndlr_9>
 80136c8:	7b28      	ldrb	r0, [r5, #12]
 80136ca:	2805      	cmp	r0, #5
 80136cc:	d109      	bne.n	80136e2 <??prvcy_mngr_addr_hndlr_10>
 80136ce:	7e28      	ldrb	r0, [r5, #24]
 80136d0:	2803      	cmp	r0, #3
 80136d2:	bf18      	it	ne
 80136d4:	2801      	cmpne	r0, #1
 80136d6:	f000 8120 	beq.w	801391a <??prvcy_mngr_addr_hndlr_1>
 80136da:	7ae8      	ldrb	r0, [r5, #11]
 80136dc:	2801      	cmp	r0, #1
 80136de:	d106      	bne.n	80136ee <??prvcy_mngr_addr_hndlr_11>
 80136e0:	e11b      	b.n	801391a <??prvcy_mngr_addr_hndlr_1>

080136e2 <??prvcy_mngr_addr_hndlr_10>:
 80136e2:	2809      	cmp	r0, #9
 80136e4:	bf04      	itt	eq
 80136e6:	7ae8      	ldrbeq	r0, [r5, #11]
 80136e8:	2809      	cmpeq	r0, #9
 80136ea:	f000 8116 	beq.w	801391a <??prvcy_mngr_addr_hndlr_1>

080136ee <??prvcy_mngr_addr_hndlr_11>:
 80136ee:	f8c5 9000 	str.w	r9, [r5]
 80136f2:	7a2a      	ldrb	r2, [r5, #8]
 80136f4:	a801      	add	r0, sp, #4
 80136f6:	464b      	mov	r3, r9
 80136f8:	726a      	strb	r2, [r5, #9]
 80136fa:	9000      	str	r0, [sp, #0]
 80136fc:	2103      	movs	r1, #3
 80136fe:	2000      	movs	r0, #0
 8013700:	f7f5 ffd0 	bl	80096a4 <llhwc_lst_add_rmv_dev>
 8013704:	4607      	mov	r7, r0
 8013706:	2f07      	cmp	r7, #7
 8013708:	d110      	bne.n	801372c <??prvcy_mngr_addr_hndlr_12>
 801370a:	2003      	movs	r0, #3
 801370c:	f7f6 f95c 	bl	80099c8 <llhwc_lst_rmv_rand_add>
 8013710:	0007      	movs	r7, r0
 8013712:	f040 8102 	bne.w	801391a <??prvcy_mngr_addr_hndlr_1>
 8013716:	a801      	add	r0, sp, #4
 8013718:	9000      	str	r0, [sp, #0]
 801371a:	7a2a      	ldrb	r2, [r5, #8]
 801371c:	464b      	mov	r3, r9
 801371e:	2103      	movs	r1, #3
 8013720:	2000      	movs	r0, #0
 8013722:	f7f5 ffbf 	bl	80096a4 <llhwc_lst_add_rmv_dev>
 8013726:	0007      	movs	r7, r0
 8013728:	d11f      	bne.n	801376a <??prvcy_mngr_addr_hndlr_13>
 801372a:	e02b      	b.n	8013784 <??prvcy_mngr_addr_hndlr_8>

0801372c <??prvcy_mngr_addr_hndlr_12>:
 801372c:	2f00      	cmp	r7, #0

0801372e <??prvcy_mngr_addr_hndlr_7>:
 801372e:	f040 80f4 	bne.w	801391a <??prvcy_mngr_addr_hndlr_1>
 8013732:	e027      	b.n	8013784 <??prvcy_mngr_addr_hndlr_8>

08013734 <??prvcy_mngr_addr_hndlr_9>:
 8013734:	a801      	add	r0, sp, #4
 8013736:	9000      	str	r0, [sp, #0]
 8013738:	7a2a      	ldrb	r2, [r5, #8]
 801373a:	464b      	mov	r3, r9
 801373c:	2103      	movs	r1, #3
 801373e:	2000      	movs	r0, #0
 8013740:	f7f5 ffb0 	bl	80096a4 <llhwc_lst_add_rmv_dev>
 8013744:	4607      	mov	r7, r0
 8013746:	2f07      	cmp	r7, #7
 8013748:	d113      	bne.n	8013772 <??prvcy_mngr_addr_hndlr_14>
 801374a:	2003      	movs	r0, #3
 801374c:	f7f6 f93c 	bl	80099c8 <llhwc_lst_rmv_rand_add>
 8013750:	0007      	movs	r7, r0
 8013752:	f040 80e2 	bne.w	801391a <??prvcy_mngr_addr_hndlr_1>
 8013756:	a801      	add	r0, sp, #4
 8013758:	9000      	str	r0, [sp, #0]
 801375a:	7a2a      	ldrb	r2, [r5, #8]
 801375c:	464b      	mov	r3, r9
 801375e:	2103      	movs	r1, #3
 8013760:	2000      	movs	r0, #0
 8013762:	f7f5 ff9f 	bl	80096a4 <llhwc_lst_add_rmv_dev>
 8013766:	0007      	movs	r7, r0
 8013768:	d006      	beq.n	8013778 <??prvcy_mngr_addr_hndlr_15>

0801376a <??prvcy_mngr_addr_hndlr_13>:
 801376a:	2000      	movs	r0, #0
 801376c:	f7ec fd30 	bl	80001d0 <bsp_assert>
 8013770:	e0d3      	b.n	801391a <??prvcy_mngr_addr_hndlr_1>

08013772 <??prvcy_mngr_addr_hndlr_14>:
 8013772:	2f00      	cmp	r7, #0
 8013774:	f040 80d1 	bne.w	801391a <??prvcy_mngr_addr_hndlr_1>

08013778 <??prvcy_mngr_addr_hndlr_15>:
 8013778:	f89d 1004 	ldrb.w	r1, [sp, #4]
 801377c:	2201      	movs	r2, #1
 801377e:	2000      	movs	r0, #0
 8013780:	f7f6 f96c 	bl	8009a5c <llhwc_lst_edit_indicators>

08013784 <??prvcy_mngr_addr_hndlr_8>:
 8013784:	7ae8      	ldrb	r0, [r5, #11]
 8013786:	2803      	cmp	r0, #3
 8013788:	d15d      	bne.n	8013846 <??prvcy_mngr_addr_hndlr_16>
 801378a:	7b28      	ldrb	r0, [r5, #12]
 801378c:	2801      	cmp	r0, #1
 801378e:	d15d      	bne.n	801384c <??prvcy_mngr_addr_hndlr_17>
 8013790:	2401      	movs	r4, #1
 8013792:	e05e      	b.n	8013852 <??prvcy_mngr_addr_hndlr_18>

08013794 <??prvcy_mngr_addr_hndlr_2>:
 8013794:	7b28      	ldrb	r0, [r5, #12]
 8013796:	2805      	cmp	r0, #5
 8013798:	d10d      	bne.n	80137b6 <??prvcy_mngr_addr_hndlr_19>
 801379a:	7e28      	ldrb	r0, [r5, #24]
 801379c:	2803      	cmp	r0, #3
 801379e:	bf18      	it	ne
 80137a0:	2801      	cmpne	r0, #1
 80137a2:	d108      	bne.n	80137b6 <??prvcy_mngr_addr_hndlr_19>
 80137a4:	f89d 0004 	ldrb.w	r0, [sp, #4]
 80137a8:	f7f6 f94f 	bl	8009a4a <llhwc_lst_read_indicators>
 80137ac:	0740      	lsls	r0, r0, #29
 80137ae:	bf58      	it	pl
 80137b0:	270f      	movpl	r7, #15
 80137b2:	f140 80b2 	bpl.w	801391a <??prvcy_mngr_addr_hndlr_1>

080137b6 <??prvcy_mngr_addr_hndlr_19>:
 80137b6:	2201      	movs	r2, #1
 80137b8:	f10b 011c 	add.w	r1, fp, #28
 80137bc:	a801      	add	r0, sp, #4
 80137be:	2401      	movs	r4, #1
 80137c0:	2600      	movs	r6, #0
 80137c2:	f7fb fa4c 	bl	800ec5e <ble_memcmp>
 80137c6:	b300      	cbz	r0, 801380a <??prvcy_mngr_addr_hndlr_20>
 80137c8:	2201      	movs	r2, #1
 80137ca:	f10b 0160 	add.w	r1, fp, #96	; 0x60
 80137ce:	a801      	add	r0, sp, #4
 80137d0:	2644      	movs	r6, #68	; 0x44
 80137d2:	f7fb fa44 	bl	800ec5e <ble_memcmp>
 80137d6:	b1c0      	cbz	r0, 801380a <??prvcy_mngr_addr_hndlr_20>
 80137d8:	2201      	movs	r2, #1
 80137da:	f10b 01a4 	add.w	r1, fp, #164	; 0xa4
 80137de:	a801      	add	r0, sp, #4
 80137e0:	2688      	movs	r6, #136	; 0x88
 80137e2:	f7fb fa3c 	bl	800ec5e <ble_memcmp>
 80137e6:	b180      	cbz	r0, 801380a <??prvcy_mngr_addr_hndlr_20>
 80137e8:	2201      	movs	r2, #1
 80137ea:	f10b 01e8 	add.w	r1, fp, #232	; 0xe8
 80137ee:	a801      	add	r0, sp, #4
 80137f0:	26cc      	movs	r6, #204	; 0xcc
 80137f2:	f7fb fa34 	bl	800ec5e <ble_memcmp>
 80137f6:	b140      	cbz	r0, 801380a <??prvcy_mngr_addr_hndlr_20>
 80137f8:	2201      	movs	r2, #1
 80137fa:	f50b 7196 	add.w	r1, fp, #300	; 0x12c
 80137fe:	a801      	add	r0, sp, #4
 8013800:	f44f 7688 	mov.w	r6, #272	; 0x110
 8013804:	f7fb fa2b 	bl	800ec5e <ble_memcmp>
 8013808:	b9b8      	cbnz	r0, 801383a <??prvcy_mngr_addr_hndlr_21>

0801380a <??prvcy_mngr_addr_hndlr_20>:
 801380a:	f10b 0019 	add.w	r0, fp, #25
 801380e:	eb0b 0206 	add.w	r2, fp, r6
 8013812:	5d81      	ldrb	r1, [r0, r6]
 8013814:	602a      	str	r2, [r5, #0]
 8013816:	2006      	movs	r0, #6
 8013818:	1c8b      	adds	r3, r1, #2
 801381a:	726b      	strb	r3, [r5, #9]
 801381c:	ab01      	add	r3, sp, #4
 801381e:	f7f5 fe3f 	bl	80094a0 <llhwc_lst_search>
 8013822:	0007      	movs	r7, r0
 8013824:	d179      	bne.n	801391a <??prvcy_mngr_addr_hndlr_1>
 8013826:	f89d 0004 	ldrb.w	r0, [sp, #4]
 801382a:	07c1      	lsls	r1, r0, #31
 801382c:	d40b      	bmi.n	8013846 <??prvcy_mngr_addr_hndlr_16>
 801382e:	4601      	mov	r1, r0
 8013830:	2200      	movs	r2, #0
 8013832:	2006      	movs	r0, #6
 8013834:	f7f6 f912 	bl	8009a5c <llhwc_lst_edit_indicators>
 8013838:	e005      	b.n	8013846 <??prvcy_mngr_addr_hndlr_16>

0801383a <??prvcy_mngr_addr_hndlr_21>:
 801383a:	f8c5 9000 	str.w	r9, [r5]
 801383e:	7a28      	ldrb	r0, [r5, #8]
 8013840:	7268      	strb	r0, [r5, #9]
 8013842:	e000      	b.n	8013846 <??prvcy_mngr_addr_hndlr_16>

08013844 <??prvcy_mngr_addr_hndlr_0>:
 8013844:	2401      	movs	r4, #1

08013846 <??prvcy_mngr_addr_hndlr_16>:
 8013846:	7ae8      	ldrb	r0, [r5, #11]
 8013848:	2803      	cmp	r0, #3
 801384a:	d108      	bne.n	801385e <??prvcy_mngr_addr_hndlr_22>

0801384c <??prvcy_mngr_addr_hndlr_17>:
 801384c:	7b28      	ldrb	r0, [r5, #12]
 801384e:	2801      	cmp	r0, #1
 8013850:	d105      	bne.n	801385e <??prvcy_mngr_addr_hndlr_22>

08013852 <??prvcy_mngr_addr_hndlr_18>:
 8013852:	7e68      	ldrb	r0, [r5, #25]
 8013854:	2802      	cmp	r0, #2
 8013856:	bf14      	ite	ne
 8013858:	2803      	cmpne	r0, #3
 801385a:	f04f 0801 	moveq.w	r8, #1

0801385e <??prvcy_mngr_addr_hndlr_22>:
 801385e:	7aa8      	ldrb	r0, [r5, #10]
 8013860:	2801      	cmp	r0, #1
 8013862:	bf01      	itttt	eq
 8013864:	f20b 1959 	addweq	r9, fp, #345	; 0x159
 8013868:	f899 0008 	ldrbeq.w	r0, [r9, #8]
 801386c:	0980      	lsreq	r0, r0, #6
 801386e:	2801      	cmpeq	r0, #1
 8013870:	d153      	bne.n	801391a <??prvcy_mngr_addr_hndlr_1>
 8013872:	2c00      	cmp	r4, #0
 8013874:	d051      	beq.n	801391a <??prvcy_mngr_addr_hndlr_1>
 8013876:	2000      	movs	r0, #0
 8013878:	7128      	strb	r0, [r5, #4]
 801387a:	f1b8 0f00 	cmp.w	r8, #0
 801387e:	d102      	bne.n	8013886 <??prvcy_mngr_addr_hndlr_23>
 8013880:	f1ba 0f01 	cmp.w	sl, #1
 8013884:	d13b      	bne.n	80138fe <??prvcy_mngr_addr_hndlr_24>

08013886 <??prvcy_mngr_addr_hndlr_23>:
 8013886:	f50b 78ae 	add.w	r8, fp, #348	; 0x15c
 801388a:	4641      	mov	r1, r8
 801388c:	f10b 0020 	add.w	r0, fp, #32
 8013890:	f000 f8ca 	bl	8013a28 <prvcy_mngr_addr_rsln>
 8013894:	2400      	movs	r4, #0
 8013896:	4607      	mov	r7, r0
 8013898:	2f0f      	cmp	r7, #15
 801389a:	d00c      	beq.n	80138b6 <??prvcy_mngr_addr_hndlr_25>

0801389c <??prvcy_mngr_addr_hndlr_26>:
 801389c:	2f00      	cmp	r7, #0
 801389e:	d13c      	bne.n	801391a <??prvcy_mngr_addr_hndlr_1>
 80138a0:	7aa8      	ldrb	r0, [r5, #10]
 80138a2:	4643      	mov	r3, r8
 80138a4:	4622      	mov	r2, r4
 80138a6:	9000      	str	r0, [sp, #0]
 80138a8:	f89d 0008 	ldrb.w	r0, [sp, #8]
 80138ac:	4651      	mov	r1, sl
 80138ae:	f000 fb89 	bl	8013fc4 <prvcy_mngr_add_rmv_hw_reslvng_list>
 80138b2:	4607      	mov	r7, r0
 80138b4:	e031      	b.n	801391a <??prvcy_mngr_addr_hndlr_1>

080138b6 <??prvcy_mngr_addr_hndlr_25>:
 80138b6:	4641      	mov	r1, r8
 80138b8:	f10b 0064 	add.w	r0, fp, #100	; 0x64
 80138bc:	f000 f8b4 	bl	8013a28 <prvcy_mngr_addr_rsln>
 80138c0:	2401      	movs	r4, #1
 80138c2:	4607      	mov	r7, r0
 80138c4:	2f0f      	cmp	r7, #15
 80138c6:	d1e9      	bne.n	801389c <??prvcy_mngr_addr_hndlr_26>
 80138c8:	4641      	mov	r1, r8
 80138ca:	f10b 00a8 	add.w	r0, fp, #168	; 0xa8
 80138ce:	f000 f8ab 	bl	8013a28 <prvcy_mngr_addr_rsln>
 80138d2:	2402      	movs	r4, #2
 80138d4:	4607      	mov	r7, r0
 80138d6:	2f0f      	cmp	r7, #15
 80138d8:	d1e0      	bne.n	801389c <??prvcy_mngr_addr_hndlr_26>
 80138da:	4641      	mov	r1, r8
 80138dc:	f10b 00ec 	add.w	r0, fp, #236	; 0xec
 80138e0:	f000 f8a2 	bl	8013a28 <prvcy_mngr_addr_rsln>
 80138e4:	2403      	movs	r4, #3
 80138e6:	4607      	mov	r7, r0
 80138e8:	2f0f      	cmp	r7, #15
 80138ea:	d1d7      	bne.n	801389c <??prvcy_mngr_addr_hndlr_26>
 80138ec:	4641      	mov	r1, r8
 80138ee:	f50b 7098 	add.w	r0, fp, #304	; 0x130
 80138f2:	f000 f899 	bl	8013a28 <prvcy_mngr_addr_rsln>
 80138f6:	2404      	movs	r4, #4
 80138f8:	4607      	mov	r7, r0
 80138fa:	2f0f      	cmp	r7, #15
 80138fc:	d1ce      	bne.n	801389c <??prvcy_mngr_addr_hndlr_26>

080138fe <??prvcy_mngr_addr_hndlr_24>:
 80138fe:	7ae8      	ldrb	r0, [r5, #11]
 8013900:	2803      	cmp	r0, #3
 8013902:	bf08      	it	eq
 8013904:	2f0f      	cmpeq	r7, #15
 8013906:	d108      	bne.n	801391a <??prvcy_mngr_addr_hndlr_1>
 8013908:	7e68      	ldrb	r0, [r5, #25]
 801390a:	2802      	cmp	r0, #2
 801390c:	bf18      	it	ne
 801390e:	2803      	cmpne	r0, #3
 8013910:	d103      	bne.n	801391a <??prvcy_mngr_addr_hndlr_1>
 8013912:	2001      	movs	r0, #1
 8013914:	2700      	movs	r7, #0
 8013916:	f889 001c 	strb.w	r0, [r9, #28]

0801391a <??prvcy_mngr_addr_hndlr_1>:
 801391a:	4638      	mov	r0, r7
 801391c:	f000 bc36 	b.w	801418c <?Subroutine0>

08013920 <prvcy_mngr_get_local_rpa>:
 8013920:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8013924:	b084      	sub	sp, #16
 8013926:	4680      	mov	r8, r0
 8013928:	460c      	mov	r4, r1
 801392a:	2210      	movs	r2, #16
 801392c:	2100      	movs	r1, #0
 801392e:	4668      	mov	r0, sp
 8013930:	f01d fb3d 	bl	8030fae <memset>
 8013934:	f8df 6b04 	ldr.w	r6, [pc, #2820]	; 801443c <??DataTable15>
 8013938:	2206      	movs	r2, #6
 801393a:	4631      	mov	r1, r6
 801393c:	4640      	mov	r0, r8
 801393e:	2501      	movs	r5, #1
 8013940:	2700      	movs	r7, #0
 8013942:	f7fb f98c 	bl	800ec5e <ble_memcmp>
 8013946:	b1f8      	cbz	r0, 8013988 <??prvcy_mngr_get_local_rpa_0>
 8013948:	2206      	movs	r2, #6
 801394a:	f106 0144 	add.w	r1, r6, #68	; 0x44
 801394e:	4640      	mov	r0, r8
 8013950:	2701      	movs	r7, #1
 8013952:	f7fb f984 	bl	800ec5e <ble_memcmp>
 8013956:	b1b8      	cbz	r0, 8013988 <??prvcy_mngr_get_local_rpa_0>
 8013958:	2206      	movs	r2, #6
 801395a:	f106 0188 	add.w	r1, r6, #136	; 0x88
 801395e:	4640      	mov	r0, r8
 8013960:	2702      	movs	r7, #2
 8013962:	f7fb f97c 	bl	800ec5e <ble_memcmp>
 8013966:	b178      	cbz	r0, 8013988 <??prvcy_mngr_get_local_rpa_0>
 8013968:	2206      	movs	r2, #6
 801396a:	f106 01cc 	add.w	r1, r6, #204	; 0xcc
 801396e:	4640      	mov	r0, r8
 8013970:	2703      	movs	r7, #3
 8013972:	f7fb f974 	bl	800ec5e <ble_memcmp>
 8013976:	b138      	cbz	r0, 8013988 <??prvcy_mngr_get_local_rpa_0>
 8013978:	2206      	movs	r2, #6
 801397a:	f506 7188 	add.w	r1, r6, #272	; 0x110
 801397e:	4640      	mov	r0, r8
 8013980:	2704      	movs	r7, #4
 8013982:	f7fb f96c 	bl	800ec5e <ble_memcmp>
 8013986:	b9b8      	cbnz	r0, 80139b8 <??prvcy_mngr_get_local_rpa_1>

08013988 <??prvcy_mngr_get_local_rpa_0>:
 8013988:	eb07 1107 	add.w	r1, r7, r7, lsl #4
 801398c:	f886 717d 	strb.w	r7, [r6, #381]	; 0x17d
 8013990:	2210      	movs	r2, #16
 8013992:	eb06 0081 	add.w	r0, r6, r1, lsl #2
 8013996:	3020      	adds	r0, #32
 8013998:	4669      	mov	r1, sp
 801399a:	f7fb f960 	bl	800ec5e <ble_memcmp>
 801399e:	b158      	cbz	r0, 80139b8 <??prvcy_mngr_get_local_rpa_1>
 80139a0:	f896 017d 	ldrb.w	r0, [r6, #381]	; 0x17d
 80139a4:	2206      	movs	r2, #6
 80139a6:	2500      	movs	r5, #0
 80139a8:	eb00 1100 	add.w	r1, r0, r0, lsl #4
 80139ac:	4620      	mov	r0, r4
 80139ae:	eb06 0181 	add.w	r1, r6, r1, lsl #2
 80139b2:	3108      	adds	r1, #8
 80139b4:	f7fb f8c8 	bl	800eb48 <ble_memcpy>

080139b8 <??prvcy_mngr_get_local_rpa_1>:
 80139b8:	4628      	mov	r0, r5
 80139ba:	b004      	add	sp, #16
 80139bc:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

080139c0 <prvcy_mngr_addr_gen>:
 80139c0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80139c2:	b088      	sub	sp, #32
 80139c4:	4605      	mov	r5, r0
 80139c6:	460e      	mov	r6, r1
 80139c8:	2210      	movs	r2, #16
 80139ca:	2100      	movs	r1, #0
 80139cc:	4668      	mov	r0, sp
 80139ce:	f7fb f90c 	bl	800ebea <ble_memset>
 80139d2:	2210      	movs	r2, #16
 80139d4:	2100      	movs	r1, #0
 80139d6:	a804      	add	r0, sp, #16
 80139d8:	f7fb f907 	bl	800ebea <ble_memset>
 80139dc:	f8df 7a60 	ldr.w	r7, [pc, #2656]	; 8014440 <??DataTable15_1>

080139e0 <??prvcy_mngr_addr_gen_0>:
 80139e0:	2103      	movs	r1, #3
 80139e2:	4668      	mov	r0, sp
 80139e4:	f7f8 f8e1 	bl	800bbaa <llhwc_gen_rnd_num>
 80139e8:	0004      	movs	r4, r0
 80139ea:	d11a      	bne.n	8013a22 <??prvcy_mngr_addr_gen_1>
 80139ec:	9800      	ldr	r0, [sp, #0]
 80139ee:	0280      	lsls	r0, r0, #10
 80139f0:	bf18      	it	ne
 80139f2:	42b8      	cmpne	r0, r7
 80139f4:	d0f4      	beq.n	80139e0 <??prvcy_mngr_addr_gen_0>
 80139f6:	9900      	ldr	r1, [sp, #0]
 80139f8:	2001      	movs	r0, #1
 80139fa:	aa04      	add	r2, sp, #16
 80139fc:	f360 519f 	bfi	r1, r0, #22, #10
 8013a00:	9100      	str	r1, [sp, #0]
 8013a02:	4629      	mov	r1, r5
 8013a04:	4668      	mov	r0, sp
 8013a06:	f7f6 f8ba 	bl	8009b7e <llhwc_128_encrypt>
 8013a0a:	0004      	movs	r4, r0
 8013a0c:	d109      	bne.n	8013a22 <??prvcy_mngr_addr_gen_1>
 8013a0e:	2203      	movs	r2, #3
 8013a10:	a904      	add	r1, sp, #16
 8013a12:	4630      	mov	r0, r6
 8013a14:	f7fb f898 	bl	800eb48 <ble_memcpy>
 8013a18:	2203      	movs	r2, #3
 8013a1a:	4669      	mov	r1, sp
 8013a1c:	1cf0      	adds	r0, r6, #3
 8013a1e:	f7fb f893 	bl	800eb48 <ble_memcpy>

08013a22 <??prvcy_mngr_addr_gen_1>:
 8013a22:	4620      	mov	r0, r4
 8013a24:	b009      	add	sp, #36	; 0x24
 8013a26:	bdf0      	pop	{r4, r5, r6, r7, pc}

08013a28 <prvcy_mngr_addr_rsln>:
 8013a28:	b538      	push	{r3, r4, r5, lr}
 8013a2a:	b08a      	sub	sp, #40	; 0x28
 8013a2c:	4604      	mov	r4, r0
 8013a2e:	460d      	mov	r5, r1
 8013a30:	2210      	movs	r2, #16
 8013a32:	2100      	movs	r1, #0
 8013a34:	a802      	add	r0, sp, #8
 8013a36:	f7fb f8d8 	bl	800ebea <ble_memset>
 8013a3a:	2210      	movs	r2, #16
 8013a3c:	2100      	movs	r1, #0
 8013a3e:	a806      	add	r0, sp, #24
 8013a40:	f7fb f8d3 	bl	800ebea <ble_memset>
 8013a44:	2203      	movs	r2, #3
 8013a46:	1ce9      	adds	r1, r5, #3
 8013a48:	a802      	add	r0, sp, #8
 8013a4a:	f7fb f87d 	bl	800eb48 <ble_memcpy>
 8013a4e:	aa06      	add	r2, sp, #24
 8013a50:	4621      	mov	r1, r4
 8013a52:	a802      	add	r0, sp, #8
 8013a54:	f7f6 f893 	bl	8009b7e <llhwc_128_encrypt>
 8013a58:	0004      	movs	r4, r0
 8013a5a:	d10b      	bne.n	8013a74 <??prvcy_mngr_addr_rsln_0>
 8013a5c:	2203      	movs	r2, #3
 8013a5e:	a906      	add	r1, sp, #24
 8013a60:	4668      	mov	r0, sp
 8013a62:	f7fb f871 	bl	800eb48 <ble_memcpy>
 8013a66:	2203      	movs	r2, #3
 8013a68:	4629      	mov	r1, r5
 8013a6a:	4668      	mov	r0, sp
 8013a6c:	f7fb f8f7 	bl	800ec5e <ble_memcmp>
 8013a70:	b100      	cbz	r0, 8013a74 <??prvcy_mngr_addr_rsln_0>
 8013a72:	240f      	movs	r4, #15

08013a74 <??prvcy_mngr_addr_rsln_0>:
 8013a74:	4620      	mov	r0, r4
 8013a76:	b00b      	add	sp, #44	; 0x2c
 8013a78:	bd30      	pop	{r4, r5, pc}

08013a7a <prvcy_mngr_add_rmv_clr_fw_reslvng_list>:
 8013a7a:	e92d 47f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, lr}
 8013a7e:	b085      	sub	sp, #20
 8013a80:	4682      	mov	sl, r0
 8013a82:	460e      	mov	r6, r1
 8013a84:	4615      	mov	r5, r2
 8013a86:	4699      	mov	r9, r3
 8013a88:	2210      	movs	r2, #16
 8013a8a:	2100      	movs	r1, #0
 8013a8c:	a801      	add	r0, sp, #4
 8013a8e:	f8df 8808 	ldr.w	r8, [pc, #2056]	; 8014298 <??DataTable10>
 8013a92:	f01d fa8c 	bl	8030fae <memset>
 8013a96:	f508 77ba 	add.w	r7, r8, #372	; 0x174
 8013a9a:	7838      	ldrb	r0, [r7, #0]
 8013a9c:	2400      	movs	r4, #0
 8013a9e:	2801      	cmp	r0, #1
 8013aa0:	d104      	bne.n	8013aac <??prvcy_mngr_add_rmv_clr_fw_reslvng_list_0>
 8013aa2:	f7fe fe71 	bl	8012788 <non_conn_mngr_event_status_check>
 8013aa6:	0004      	movs	r4, r0
 8013aa8:	f040 8104 	bne.w	8013cb4 <??prvcy_mngr_add_rmv_clr_fw_reslvng_list_1>

08013aac <??prvcy_mngr_add_rmv_clr_fw_reslvng_list_0>:
 8013aac:	b92d      	cbnz	r5, 8013aba <??prvcy_mngr_add_rmv_clr_fw_reslvng_list_2>
 8013aae:	f1ba 0f02 	cmp.w	sl, #2
 8013ab2:	f000 80e8 	beq.w	8013c86 <??prvcy_mngr_add_rmv_clr_fw_reslvng_list_3>
 8013ab6:	2411      	movs	r4, #17
 8013ab8:	e0fc      	b.n	8013cb4 <??prvcy_mngr_add_rmv_clr_fw_reslvng_list_1>

08013aba <??prvcy_mngr_add_rmv_clr_fw_reslvng_list_2>:
 8013aba:	f1ba 0f00 	cmp.w	sl, #0
 8013abe:	d006      	beq.n	8013ace <??prvcy_mngr_add_rmv_clr_fw_reslvng_list_4>
 8013ac0:	f1ba 0f02 	cmp.w	sl, #2
 8013ac4:	f000 80df 	beq.w	8013c86 <??prvcy_mngr_add_rmv_clr_fw_reslvng_list_3>
 8013ac8:	f0c0 8087 	bcc.w	8013bda <??prvcy_mngr_add_rmv_clr_fw_reslvng_list_5>
 8013acc:	e0ee      	b.n	8013cac <??prvcy_mngr_add_rmv_clr_fw_reslvng_list_6>

08013ace <??prvcy_mngr_add_rmv_clr_fw_reslvng_list_4>:
 8013ace:	6978      	ldr	r0, [r7, #20]
 8013ad0:	b9c8      	cbnz	r0, 8013b06 <??prvcy_mngr_add_rmv_clr_fw_reslvng_list_7>
 8013ad2:	2200      	movs	r2, #0
 8013ad4:	2101      	movs	r1, #1
 8013ad6:	f20f 7055 	addw	r0, pc, #1877	; 0x755
 8013ada:	f7f1 fe3a 	bl	8005752 <os_timer_create>
 8013ade:	2400      	movs	r4, #0
 8013ae0:	6178      	str	r0, [r7, #20]
 8013ae2:	b920      	cbnz	r0, 8013aee <??prvcy_mngr_add_rmv_clr_fw_reslvng_list_8>
 8013ae4:	203f      	movs	r0, #63	; 0x3f
 8013ae6:	2407      	movs	r4, #7
 8013ae8:	f7ec fba2 	bl	8000230 <bsp_debug_gpio_toggle>
 8013aec:	e008      	b.n	8013b00 <??prvcy_mngr_add_rmv_clr_fw_reslvng_list_9>

08013aee <??prvcy_mngr_add_rmv_clr_fw_reslvng_list_8>:
 8013aee:	f7f1 ff0c 	bl	800590a <os_timer_stop>
 8013af2:	8b39      	ldrh	r1, [r7, #24]
 8013af4:	f44f 40fa 	mov.w	r0, #32000	; 0x7d00
 8013af8:	4341      	muls	r1, r0
 8013afa:	6978      	ldr	r0, [r7, #20]
 8013afc:	f7f1 fecc 	bl	8005898 <os_timer_start>

08013b00 <??prvcy_mngr_add_rmv_clr_fw_reslvng_list_9>:
 8013b00:	2c00      	cmp	r4, #0
 8013b02:	f040 80d7 	bne.w	8013cb4 <??prvcy_mngr_add_rmv_clr_fw_reslvng_list_1>

08013b06 <??prvcy_mngr_add_rmv_clr_fw_reslvng_list_7>:
 8013b06:	f898 0018 	ldrb.w	r0, [r8, #24]
 8013b0a:	2100      	movs	r1, #0
 8013b0c:	2800      	cmp	r0, #0
 8013b0e:	d14d      	bne.n	8013bac <??prvcy_mngr_add_rmv_clr_fw_reslvng_list_10>

08013b10 <??prvcy_mngr_add_rmv_clr_fw_reslvng_list_11>:
 8013b10:	eb01 1001 	add.w	r0, r1, r1, lsl #4
 8013b14:	9f0e      	ldr	r7, [sp, #56]	; 0x38
 8013b16:	2206      	movs	r2, #6
 8013b18:	eb08 0880 	add.w	r8, r8, r0, lsl #2
 8013b1c:	f888 6019 	strb.w	r6, [r8, #25]
 8013b20:	4629      	mov	r1, r5
 8013b22:	4640      	mov	r0, r8
 8013b24:	f7fb f810 	bl	800eb48 <ble_memcpy>
 8013b28:	2210      	movs	r2, #16
 8013b2a:	4639      	mov	r1, r7
 8013b2c:	f108 0020 	add.w	r0, r8, #32
 8013b30:	f7fb f80a 	bl	800eb48 <ble_memcpy>
 8013b34:	2210      	movs	r2, #16
 8013b36:	4649      	mov	r1, r9
 8013b38:	f108 0030 	add.w	r0, r8, #48	; 0x30
 8013b3c:	f7fb f804 	bl	800eb48 <ble_memcpy>
 8013b40:	2001      	movs	r0, #1
 8013b42:	f888 0018 	strb.w	r0, [r8, #24]
 8013b46:	2210      	movs	r2, #16
 8013b48:	a901      	add	r1, sp, #4
 8013b4a:	f108 0030 	add.w	r0, r8, #48	; 0x30
 8013b4e:	f7fb f886 	bl	800ec5e <ble_memcmp>
 8013b52:	b168      	cbz	r0, 8013b70 <??prvcy_mngr_add_rmv_clr_fw_reslvng_list_12>
 8013b54:	2000      	movs	r0, #0
 8013b56:	f888 0040 	strb.w	r0, [r8, #64]	; 0x40
 8013b5a:	9000      	str	r0, [sp, #0]
 8013b5c:	f898 2019 	ldrb.w	r2, [r8, #25]
 8013b60:	4643      	mov	r3, r8
 8013b62:	2105      	movs	r1, #5
 8013b64:	f7f5 fd9e 	bl	80096a4 <llhwc_lst_add_rmv_dev>
 8013b68:	0004      	movs	r4, r0
 8013b6a:	f040 80a3 	bne.w	8013cb4 <??prvcy_mngr_add_rmv_clr_fw_reslvng_list_1>
 8013b6e:	e002      	b.n	8013b76 <??prvcy_mngr_add_rmv_clr_fw_reslvng_list_13>

08013b70 <??prvcy_mngr_add_rmv_clr_fw_reslvng_list_12>:
 8013b70:	2001      	movs	r0, #1
 8013b72:	f888 0040 	strb.w	r0, [r8, #64]	; 0x40

08013b76 <??prvcy_mngr_add_rmv_clr_fw_reslvng_list_13>:
 8013b76:	f8df 08cc 	ldr.w	r0, [pc, #2252]	; 8014444 <??DataTable15_2>
 8013b7a:	7801      	ldrb	r1, [r0, #0]
 8013b7c:	2210      	movs	r2, #16
 8013b7e:	1c49      	adds	r1, r1, #1
 8013b80:	7001      	strb	r1, [r0, #0]
 8013b82:	a901      	add	r1, sp, #4
 8013b84:	f108 0020 	add.w	r0, r8, #32
 8013b88:	f7fb f869 	bl	800ec5e <ble_memcmp>
 8013b8c:	b138      	cbz	r0, 8013b9e <??prvcy_mngr_add_rmv_clr_fw_reslvng_list_14>
 8013b8e:	f108 0108 	add.w	r1, r8, #8
 8013b92:	f108 0020 	add.w	r0, r8, #32
 8013b96:	f7ff ff13 	bl	80139c0 <prvcy_mngr_addr_gen>
 8013b9a:	4604      	mov	r4, r0
 8013b9c:	e08a      	b.n	8013cb4 <??prvcy_mngr_add_rmv_clr_fw_reslvng_list_1>

08013b9e <??prvcy_mngr_add_rmv_clr_fw_reslvng_list_14>:
 8013b9e:	2206      	movs	r2, #6
 8013ba0:	2100      	movs	r1, #0
 8013ba2:	f108 0008 	add.w	r0, r8, #8
 8013ba6:	f7fb f820 	bl	800ebea <ble_memset>
 8013baa:	e083      	b.n	8013cb4 <??prvcy_mngr_add_rmv_clr_fw_reslvng_list_1>

08013bac <??prvcy_mngr_add_rmv_clr_fw_reslvng_list_10>:
 8013bac:	f898 005c 	ldrb.w	r0, [r8, #92]	; 0x5c
 8013bb0:	2101      	movs	r1, #1
 8013bb2:	2800      	cmp	r0, #0
 8013bb4:	bf1e      	ittt	ne
 8013bb6:	2102      	movne	r1, #2
 8013bb8:	f898 00a0 	ldrbne.w	r0, [r8, #160]	; 0xa0
 8013bbc:	2800      	cmpne	r0, #0
 8013bbe:	d0a7      	beq.n	8013b10 <??prvcy_mngr_add_rmv_clr_fw_reslvng_list_11>
 8013bc0:	f898 00e4 	ldrb.w	r0, [r8, #228]	; 0xe4
 8013bc4:	2103      	movs	r1, #3
 8013bc6:	2800      	cmp	r0, #0
 8013bc8:	bf1e      	ittt	ne
 8013bca:	2104      	movne	r1, #4
 8013bcc:	f898 0128 	ldrbne.w	r0, [r8, #296]	; 0x128
 8013bd0:	2800      	cmpne	r0, #0
 8013bd2:	d09d      	beq.n	8013b10 <??prvcy_mngr_add_rmv_clr_fw_reslvng_list_11>
 8013bd4:	2407      	movs	r4, #7
 8013bd6:	203f      	movs	r0, #63	; 0x3f
 8013bd8:	e06a      	b.n	8013cb0 <??prvcy_mngr_add_rmv_clr_fw_reslvng_list_15>

08013bda <??prvcy_mngr_add_rmv_clr_fw_reslvng_list_5>:
 8013bda:	2206      	movs	r2, #6
 8013bdc:	4641      	mov	r1, r8
 8013bde:	4628      	mov	r0, r5
 8013be0:	f7fb f83d 	bl	800ec5e <ble_memcmp>
 8013be4:	f88d 0000 	strb.w	r0, [sp]
 8013be8:	f89d 0000 	ldrb.w	r0, [sp]
 8013bec:	2600      	movs	r6, #0
 8013bee:	b9a0      	cbnz	r0, 8013c1a <??prvcy_mngr_add_rmv_clr_fw_reslvng_list_16>

08013bf0 <??prvcy_mngr_add_rmv_clr_fw_reslvng_list_17>:
 8013bf0:	eb06 1106 	add.w	r1, r6, r6, lsl #4
 8013bf4:	2200      	movs	r2, #0
 8013bf6:	f108 0318 	add.w	r3, r8, #24
 8013bfa:	0088      	lsls	r0, r1, #2
 8013bfc:	541a      	strb	r2, [r3, r0]
 8013bfe:	f8df 5844 	ldr.w	r5, [pc, #2116]	; 8014444 <??DataTable15_2>
 8013c02:	7829      	ldrb	r1, [r5, #0]
 8013c04:	4440      	add	r0, r8
 8013c06:	1e4a      	subs	r2, r1, #1
 8013c08:	702a      	strb	r2, [r5, #0]
 8013c0a:	2244      	movs	r2, #68	; 0x44
 8013c0c:	2100      	movs	r1, #0
 8013c0e:	f7fa ffec 	bl	800ebea <ble_memset>
 8013c12:	7828      	ldrb	r0, [r5, #0]
 8013c14:	2800      	cmp	r0, #0
 8013c16:	d14d      	bne.n	8013cb4 <??prvcy_mngr_add_rmv_clr_fw_reslvng_list_1>
 8013c18:	e045      	b.n	8013ca6 <??prvcy_mngr_add_rmv_clr_fw_reslvng_list_18>

08013c1a <??prvcy_mngr_add_rmv_clr_fw_reslvng_list_16>:
 8013c1a:	2206      	movs	r2, #6
 8013c1c:	f108 0144 	add.w	r1, r8, #68	; 0x44
 8013c20:	4628      	mov	r0, r5
 8013c22:	f7fb f81c 	bl	800ec5e <ble_memcmp>
 8013c26:	f88d 0000 	strb.w	r0, [sp]
 8013c2a:	f89d 0000 	ldrb.w	r0, [sp]
 8013c2e:	2601      	movs	r6, #1
 8013c30:	2800      	cmp	r0, #0
 8013c32:	d0dd      	beq.n	8013bf0 <??prvcy_mngr_add_rmv_clr_fw_reslvng_list_17>
 8013c34:	2206      	movs	r2, #6
 8013c36:	f108 0188 	add.w	r1, r8, #136	; 0x88
 8013c3a:	4628      	mov	r0, r5
 8013c3c:	f7fb f80f 	bl	800ec5e <ble_memcmp>
 8013c40:	f88d 0000 	strb.w	r0, [sp]
 8013c44:	f89d 0000 	ldrb.w	r0, [sp]
 8013c48:	2602      	movs	r6, #2
 8013c4a:	2800      	cmp	r0, #0
 8013c4c:	d0d0      	beq.n	8013bf0 <??prvcy_mngr_add_rmv_clr_fw_reslvng_list_17>
 8013c4e:	2206      	movs	r2, #6
 8013c50:	f108 01cc 	add.w	r1, r8, #204	; 0xcc
 8013c54:	4628      	mov	r0, r5
 8013c56:	f7fb f802 	bl	800ec5e <ble_memcmp>
 8013c5a:	f88d 0000 	strb.w	r0, [sp]
 8013c5e:	f89d 0000 	ldrb.w	r0, [sp]
 8013c62:	2603      	movs	r6, #3
 8013c64:	2800      	cmp	r0, #0
 8013c66:	d0c3      	beq.n	8013bf0 <??prvcy_mngr_add_rmv_clr_fw_reslvng_list_17>
 8013c68:	2206      	movs	r2, #6
 8013c6a:	f508 7188 	add.w	r1, r8, #272	; 0x110
 8013c6e:	4628      	mov	r0, r5
 8013c70:	f7fa fff5 	bl	800ec5e <ble_memcmp>
 8013c74:	f88d 0000 	strb.w	r0, [sp]
 8013c78:	f89d 0000 	ldrb.w	r0, [sp]
 8013c7c:	2604      	movs	r6, #4
 8013c7e:	2800      	cmp	r0, #0
 8013c80:	d0b6      	beq.n	8013bf0 <??prvcy_mngr_add_rmv_clr_fw_reslvng_list_17>
 8013c82:	2402      	movs	r4, #2
 8013c84:	e016      	b.n	8013cb4 <??prvcy_mngr_add_rmv_clr_fw_reslvng_list_1>

08013c86 <??prvcy_mngr_add_rmv_clr_fw_reslvng_list_3>:
 8013c86:	f44f 72aa 	mov.w	r2, #340	; 0x154
 8013c8a:	2100      	movs	r1, #0
 8013c8c:	4640      	mov	r0, r8
 8013c8e:	f7fa ffac 	bl	800ebea <ble_memset>
 8013c92:	2003      	movs	r0, #3
 8013c94:	f7f5 ff0a 	bl	8009aac <llhwc_lst_clr>
 8013c98:	2004      	movs	r0, #4
 8013c9a:	f7f5 ff07 	bl	8009aac <llhwc_lst_clr>
 8013c9e:	2000      	movs	r0, #0
 8013ca0:	f8df 17a0 	ldr.w	r1, [pc, #1952]	; 8014444 <??DataTable15_2>
 8013ca4:	7008      	strb	r0, [r1, #0]

08013ca6 <??prvcy_mngr_add_rmv_clr_fw_reslvng_list_18>:
 8013ca6:	f000 fb57 	bl	8014358 <prvcy_mngr_free_tmr>
 8013caa:	e003      	b.n	8013cb4 <??prvcy_mngr_add_rmv_clr_fw_reslvng_list_1>

08013cac <??prvcy_mngr_add_rmv_clr_fw_reslvng_list_6>:
 8013cac:	240c      	movs	r4, #12
 8013cae:	2040      	movs	r0, #64	; 0x40

08013cb0 <??prvcy_mngr_add_rmv_clr_fw_reslvng_list_15>:
 8013cb0:	f7ec fabe 	bl	8000230 <bsp_debug_gpio_toggle>

08013cb4 <??prvcy_mngr_add_rmv_clr_fw_reslvng_list_1>:
 8013cb4:	4620      	mov	r0, r4
 8013cb6:	b006      	add	sp, #24
 8013cb8:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}

08013cbc <prvcy_mngr_srch_fw_reslvng_list>:
 8013cbc:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8013cc0:	4688      	mov	r8, r1
 8013cc2:	4617      	mov	r7, r2
 8013cc4:	461c      	mov	r4, r3
 8013cc6:	f8df 55d0 	ldr.w	r5, [pc, #1488]	; 8014298 <??DataTable10>
 8013cca:	2806      	cmp	r0, #6
 8013ccc:	f200 8177 	bhi.w	8013fbe <??prvcy_mngr_srch_fw_reslvng_list_1>
 8013cd0:	e8df f010 	tbh	[pc, r0, lsl #1]

08013cd4 <??prvcy_mngr_srch_fw_reslvng_list_0>:
 8013cd4:	0007 003b 0072 00a6 00df 0113 0142          ..;.r.......B.

08013ce2 <??prvcy_mngr_srch_fw_reslvng_list_2>:
 8013ce2:	2206      	movs	r2, #6
 8013ce4:	4629      	mov	r1, r5
 8013ce6:	4640      	mov	r0, r8
 8013ce8:	2400      	movs	r4, #0
 8013cea:	f7fa ffb8 	bl	800ec5e <ble_memcmp>
 8013cee:	b930      	cbnz	r0, 8013cfe <??prvcy_mngr_srch_fw_reslvng_list_3>

08013cf0 <??prvcy_mngr_srch_fw_reslvng_list_4>:
 8013cf0:	eb04 1104 	add.w	r1, r4, r4, lsl #4
 8013cf4:	eb05 0081 	add.w	r0, r5, r1, lsl #2
 8013cf8:	f100 0220 	add.w	r2, r0, #32
 8013cfc:	e032      	b.n	8013d64 <??prvcy_mngr_srch_fw_reslvng_list_5>

08013cfe <??prvcy_mngr_srch_fw_reslvng_list_3>:
 8013cfe:	2206      	movs	r2, #6
 8013d00:	f105 0144 	add.w	r1, r5, #68	; 0x44
 8013d04:	4640      	mov	r0, r8
 8013d06:	2401      	movs	r4, #1
 8013d08:	f7fa ffa9 	bl	800ec5e <ble_memcmp>
 8013d0c:	2800      	cmp	r0, #0
 8013d0e:	d0ef      	beq.n	8013cf0 <??prvcy_mngr_srch_fw_reslvng_list_4>
 8013d10:	2206      	movs	r2, #6
 8013d12:	f105 0188 	add.w	r1, r5, #136	; 0x88
 8013d16:	4640      	mov	r0, r8
 8013d18:	2402      	movs	r4, #2
 8013d1a:	f7fa ffa0 	bl	800ec5e <ble_memcmp>
 8013d1e:	2800      	cmp	r0, #0
 8013d20:	d0e6      	beq.n	8013cf0 <??prvcy_mngr_srch_fw_reslvng_list_4>
 8013d22:	2206      	movs	r2, #6
 8013d24:	f105 01cc 	add.w	r1, r5, #204	; 0xcc
 8013d28:	4640      	mov	r0, r8
 8013d2a:	2403      	movs	r4, #3
 8013d2c:	f7fa ff97 	bl	800ec5e <ble_memcmp>
 8013d30:	2800      	cmp	r0, #0
 8013d32:	d0dd      	beq.n	8013cf0 <??prvcy_mngr_srch_fw_reslvng_list_4>
 8013d34:	2206      	movs	r2, #6
 8013d36:	f505 7188 	add.w	r1, r5, #272	; 0x110
 8013d3a:	4640      	mov	r0, r8
 8013d3c:	2404      	movs	r4, #4
 8013d3e:	f7fa ff8e 	bl	800ec5e <ble_memcmp>
 8013d42:	2800      	cmp	r0, #0
 8013d44:	f040 813b 	bne.w	8013fbe <??prvcy_mngr_srch_fw_reslvng_list_1>
 8013d48:	e7d2      	b.n	8013cf0 <??prvcy_mngr_srch_fw_reslvng_list_4>

08013d4a <??prvcy_mngr_srch_fw_reslvng_list_6>:
 8013d4a:	2206      	movs	r2, #6
 8013d4c:	4629      	mov	r1, r5
 8013d4e:	4640      	mov	r0, r8
 8013d50:	2400      	movs	r4, #0
 8013d52:	f7fa ff84 	bl	800ec5e <ble_memcmp>
 8013d56:	b948      	cbnz	r0, 8013d6c <??prvcy_mngr_srch_fw_reslvng_list_7>

08013d58 <??prvcy_mngr_srch_fw_reslvng_list_8>:
 8013d58:	eb04 1104 	add.w	r1, r4, r4, lsl #4
 8013d5c:	eb05 0081 	add.w	r0, r5, r1, lsl #2
 8013d60:	f100 0230 	add.w	r2, r0, #48	; 0x30

08013d64 <??prvcy_mngr_srch_fw_reslvng_list_5>:
 8013d64:	603a      	str	r2, [r7, #0]
 8013d66:	f885 417d 	strb.w	r4, [r5, #381]	; 0x17d
 8013d6a:	e128      	b.n	8013fbe <??prvcy_mngr_srch_fw_reslvng_list_1>

08013d6c <??prvcy_mngr_srch_fw_reslvng_list_7>:
 8013d6c:	2206      	movs	r2, #6
 8013d6e:	f105 0144 	add.w	r1, r5, #68	; 0x44
 8013d72:	4640      	mov	r0, r8
 8013d74:	2401      	movs	r4, #1
 8013d76:	f7fa ff72 	bl	800ec5e <ble_memcmp>
 8013d7a:	2800      	cmp	r0, #0
 8013d7c:	d0ec      	beq.n	8013d58 <??prvcy_mngr_srch_fw_reslvng_list_8>
 8013d7e:	2206      	movs	r2, #6
 8013d80:	f105 0188 	add.w	r1, r5, #136	; 0x88
 8013d84:	4640      	mov	r0, r8
 8013d86:	2402      	movs	r4, #2
 8013d88:	f7fa ff69 	bl	800ec5e <ble_memcmp>
 8013d8c:	2800      	cmp	r0, #0
 8013d8e:	d0e3      	beq.n	8013d58 <??prvcy_mngr_srch_fw_reslvng_list_8>
 8013d90:	2206      	movs	r2, #6
 8013d92:	f105 01cc 	add.w	r1, r5, #204	; 0xcc
 8013d96:	4640      	mov	r0, r8
 8013d98:	2403      	movs	r4, #3
 8013d9a:	f7fa ff60 	bl	800ec5e <ble_memcmp>
 8013d9e:	2800      	cmp	r0, #0
 8013da0:	d0da      	beq.n	8013d58 <??prvcy_mngr_srch_fw_reslvng_list_8>
 8013da2:	2206      	movs	r2, #6
 8013da4:	f505 7188 	add.w	r1, r5, #272	; 0x110
 8013da8:	4640      	mov	r0, r8
 8013daa:	2404      	movs	r4, #4
 8013dac:	f7fa ff57 	bl	800ec5e <ble_memcmp>
 8013db0:	2800      	cmp	r0, #0
 8013db2:	f040 8104 	bne.w	8013fbe <??prvcy_mngr_srch_fw_reslvng_list_1>
 8013db6:	e7cf      	b.n	8013d58 <??prvcy_mngr_srch_fw_reslvng_list_8>

08013db8 <??prvcy_mngr_srch_fw_reslvng_list_9>:
 8013db8:	2206      	movs	r2, #6
 8013dba:	4629      	mov	r1, r5
 8013dbc:	4640      	mov	r0, r8
 8013dbe:	2400      	movs	r4, #0
 8013dc0:	f7fa ff4d 	bl	800ec5e <ble_memcmp>
 8013dc4:	b930      	cbnz	r0, 8013dd4 <??prvcy_mngr_srch_fw_reslvng_list_10>

08013dc6 <??prvcy_mngr_srch_fw_reslvng_list_11>:
 8013dc6:	eb04 1104 	add.w	r1, r4, r4, lsl #4
 8013dca:	f105 001c 	add.w	r0, r5, #28
 8013dce:	eb00 0181 	add.w	r1, r0, r1, lsl #2
 8013dd2:	e0ce      	b.n	8013f72 <??prvcy_mngr_srch_fw_reslvng_list_12>

08013dd4 <??prvcy_mngr_srch_fw_reslvng_list_10>:
 8013dd4:	2206      	movs	r2, #6
 8013dd6:	f105 0144 	add.w	r1, r5, #68	; 0x44
 8013dda:	4640      	mov	r0, r8
 8013ddc:	2401      	movs	r4, #1
 8013dde:	f7fa ff3e 	bl	800ec5e <ble_memcmp>
 8013de2:	2800      	cmp	r0, #0
 8013de4:	d0ef      	beq.n	8013dc6 <??prvcy_mngr_srch_fw_reslvng_list_11>
 8013de6:	2206      	movs	r2, #6
 8013de8:	f105 0188 	add.w	r1, r5, #136	; 0x88
 8013dec:	4640      	mov	r0, r8
 8013dee:	2402      	movs	r4, #2
 8013df0:	f7fa ff35 	bl	800ec5e <ble_memcmp>
 8013df4:	2800      	cmp	r0, #0
 8013df6:	d0e6      	beq.n	8013dc6 <??prvcy_mngr_srch_fw_reslvng_list_11>
 8013df8:	2206      	movs	r2, #6
 8013dfa:	f105 01cc 	add.w	r1, r5, #204	; 0xcc
 8013dfe:	4640      	mov	r0, r8
 8013e00:	2403      	movs	r4, #3
 8013e02:	f7fa ff2c 	bl	800ec5e <ble_memcmp>
 8013e06:	2800      	cmp	r0, #0
 8013e08:	d0dd      	beq.n	8013dc6 <??prvcy_mngr_srch_fw_reslvng_list_11>
 8013e0a:	2206      	movs	r2, #6
 8013e0c:	f505 7188 	add.w	r1, r5, #272	; 0x110
 8013e10:	4640      	mov	r0, r8
 8013e12:	2404      	movs	r4, #4
 8013e14:	f7fa ff23 	bl	800ec5e <ble_memcmp>
 8013e18:	2800      	cmp	r0, #0
 8013e1a:	f040 80d0 	bne.w	8013fbe <??prvcy_mngr_srch_fw_reslvng_list_1>
 8013e1e:	e7d2      	b.n	8013dc6 <??prvcy_mngr_srch_fw_reslvng_list_11>

08013e20 <??prvcy_mngr_srch_fw_reslvng_list_13>:
 8013e20:	2201      	movs	r2, #1
 8013e22:	f105 011c 	add.w	r1, r5, #28
 8013e26:	4640      	mov	r0, r8
 8013e28:	2600      	movs	r6, #0
 8013e2a:	f7fa ff18 	bl	800ec5e <ble_memcmp>
 8013e2e:	b950      	cbnz	r0, 8013e46 <??prvcy_mngr_srch_fw_reslvng_list_14>

08013e30 <??prvcy_mngr_srch_fw_reslvng_list_15>:
 8013e30:	eb06 1006 	add.w	r0, r6, r6, lsl #4
 8013e34:	2c00      	cmp	r4, #0
 8013e36:	eb05 0080 	add.w	r0, r5, r0, lsl #2
 8013e3a:	6038      	str	r0, [r7, #0]
 8013e3c:	f000 80bf 	beq.w	8013fbe <??prvcy_mngr_srch_fw_reslvng_list_1>
 8013e40:	7e40      	ldrb	r0, [r0, #25]
 8013e42:	7020      	strb	r0, [r4, #0]
 8013e44:	e0bb      	b.n	8013fbe <??prvcy_mngr_srch_fw_reslvng_list_1>

08013e46 <??prvcy_mngr_srch_fw_reslvng_list_14>:
 8013e46:	2201      	movs	r2, #1
 8013e48:	f105 0160 	add.w	r1, r5, #96	; 0x60
 8013e4c:	4640      	mov	r0, r8
 8013e4e:	2601      	movs	r6, #1
 8013e50:	f7fa ff05 	bl	800ec5e <ble_memcmp>
 8013e54:	2800      	cmp	r0, #0
 8013e56:	d0eb      	beq.n	8013e30 <??prvcy_mngr_srch_fw_reslvng_list_15>
 8013e58:	2201      	movs	r2, #1
 8013e5a:	f105 01a4 	add.w	r1, r5, #164	; 0xa4
 8013e5e:	4640      	mov	r0, r8
 8013e60:	2602      	movs	r6, #2
 8013e62:	f7fa fefc 	bl	800ec5e <ble_memcmp>
 8013e66:	2800      	cmp	r0, #0
 8013e68:	d0e2      	beq.n	8013e30 <??prvcy_mngr_srch_fw_reslvng_list_15>
 8013e6a:	2201      	movs	r2, #1
 8013e6c:	f105 01e8 	add.w	r1, r5, #232	; 0xe8
 8013e70:	4640      	mov	r0, r8
 8013e72:	2603      	movs	r6, #3
 8013e74:	f7fa fef3 	bl	800ec5e <ble_memcmp>
 8013e78:	2800      	cmp	r0, #0
 8013e7a:	d0d9      	beq.n	8013e30 <??prvcy_mngr_srch_fw_reslvng_list_15>
 8013e7c:	2201      	movs	r2, #1
 8013e7e:	f505 7196 	add.w	r1, r5, #300	; 0x12c
 8013e82:	4640      	mov	r0, r8
 8013e84:	2604      	movs	r6, #4
 8013e86:	f7fa feea 	bl	800ec5e <ble_memcmp>
 8013e8a:	2800      	cmp	r0, #0
 8013e8c:	f040 8097 	bne.w	8013fbe <??prvcy_mngr_srch_fw_reslvng_list_1>
 8013e90:	e7ce      	b.n	8013e30 <??prvcy_mngr_srch_fw_reslvng_list_15>

08013e92 <??prvcy_mngr_srch_fw_reslvng_list_16>:
 8013e92:	2201      	movs	r2, #1
 8013e94:	f105 011c 	add.w	r1, r5, #28
 8013e98:	4640      	mov	r0, r8
 8013e9a:	2400      	movs	r4, #0
 8013e9c:	f7fa fedf 	bl	800ec5e <ble_memcmp>
 8013ea0:	b930      	cbnz	r0, 8013eb0 <??prvcy_mngr_srch_fw_reslvng_list_17>

08013ea2 <??prvcy_mngr_srch_fw_reslvng_list_18>:
 8013ea2:	eb04 1004 	add.w	r0, r4, r4, lsl #4
 8013ea6:	eb05 0080 	add.w	r0, r5, r0, lsl #2
 8013eaa:	f100 0108 	add.w	r1, r0, #8
 8013eae:	e060      	b.n	8013f72 <??prvcy_mngr_srch_fw_reslvng_list_12>

08013eb0 <??prvcy_mngr_srch_fw_reslvng_list_17>:
 8013eb0:	2201      	movs	r2, #1
 8013eb2:	f105 0160 	add.w	r1, r5, #96	; 0x60
 8013eb6:	4640      	mov	r0, r8
 8013eb8:	2401      	movs	r4, #1
 8013eba:	f7fa fed0 	bl	800ec5e <ble_memcmp>
 8013ebe:	2800      	cmp	r0, #0
 8013ec0:	d0ef      	beq.n	8013ea2 <??prvcy_mngr_srch_fw_reslvng_list_18>
 8013ec2:	2201      	movs	r2, #1
 8013ec4:	f105 01a4 	add.w	r1, r5, #164	; 0xa4
 8013ec8:	4640      	mov	r0, r8
 8013eca:	2402      	movs	r4, #2
 8013ecc:	f7fa fec7 	bl	800ec5e <ble_memcmp>
 8013ed0:	2800      	cmp	r0, #0
 8013ed2:	d0e6      	beq.n	8013ea2 <??prvcy_mngr_srch_fw_reslvng_list_18>
 8013ed4:	2201      	movs	r2, #1
 8013ed6:	f105 01e8 	add.w	r1, r5, #232	; 0xe8
 8013eda:	4640      	mov	r0, r8
 8013edc:	2403      	movs	r4, #3
 8013ede:	f7fa febe 	bl	800ec5e <ble_memcmp>
 8013ee2:	2800      	cmp	r0, #0
 8013ee4:	d0dd      	beq.n	8013ea2 <??prvcy_mngr_srch_fw_reslvng_list_18>
 8013ee6:	2201      	movs	r2, #1
 8013ee8:	f505 7196 	add.w	r1, r5, #300	; 0x12c
 8013eec:	4640      	mov	r0, r8
 8013eee:	2404      	movs	r4, #4
 8013ef0:	f7fa feb5 	bl	800ec5e <ble_memcmp>
 8013ef4:	2800      	cmp	r0, #0
 8013ef6:	d162      	bne.n	8013fbe <??prvcy_mngr_srch_fw_reslvng_list_1>
 8013ef8:	e7d3      	b.n	8013ea2 <??prvcy_mngr_srch_fw_reslvng_list_18>

08013efa <??prvcy_mngr_srch_fw_reslvng_list_19>:
 8013efa:	2206      	movs	r2, #6
 8013efc:	4629      	mov	r1, r5
 8013efe:	4640      	mov	r0, r8
 8013f00:	2400      	movs	r4, #0
 8013f02:	f7fa feac 	bl	800ec5e <ble_memcmp>
 8013f06:	b918      	cbnz	r0, 8013f10 <??prvcy_mngr_srch_fw_reslvng_list_20>

08013f08 <??prvcy_mngr_srch_fw_reslvng_list_21>:
 8013f08:	f8df 053c 	ldr.w	r0, [pc, #1340]	; 8014448 <??DataTable15_3>
 8013f0c:	7004      	strb	r4, [r0, #0]
 8013f0e:	e056      	b.n	8013fbe <??prvcy_mngr_srch_fw_reslvng_list_1>

08013f10 <??prvcy_mngr_srch_fw_reslvng_list_20>:
 8013f10:	2206      	movs	r2, #6
 8013f12:	f105 0144 	add.w	r1, r5, #68	; 0x44
 8013f16:	4640      	mov	r0, r8
 8013f18:	2401      	movs	r4, #1
 8013f1a:	f7fa fea0 	bl	800ec5e <ble_memcmp>
 8013f1e:	2800      	cmp	r0, #0
 8013f20:	d0f2      	beq.n	8013f08 <??prvcy_mngr_srch_fw_reslvng_list_21>
 8013f22:	2206      	movs	r2, #6
 8013f24:	f105 0188 	add.w	r1, r5, #136	; 0x88
 8013f28:	4640      	mov	r0, r8
 8013f2a:	2402      	movs	r4, #2
 8013f2c:	f7fa fe97 	bl	800ec5e <ble_memcmp>
 8013f30:	2800      	cmp	r0, #0
 8013f32:	d0e9      	beq.n	8013f08 <??prvcy_mngr_srch_fw_reslvng_list_21>
 8013f34:	2206      	movs	r2, #6
 8013f36:	f105 01cc 	add.w	r1, r5, #204	; 0xcc
 8013f3a:	4640      	mov	r0, r8
 8013f3c:	2403      	movs	r4, #3
 8013f3e:	f7fa fe8e 	bl	800ec5e <ble_memcmp>
 8013f42:	2800      	cmp	r0, #0
 8013f44:	d0e0      	beq.n	8013f08 <??prvcy_mngr_srch_fw_reslvng_list_21>
 8013f46:	2206      	movs	r2, #6
 8013f48:	f505 7188 	add.w	r1, r5, #272	; 0x110
 8013f4c:	4640      	mov	r0, r8
 8013f4e:	2404      	movs	r4, #4
 8013f50:	f7fa fe85 	bl	800ec5e <ble_memcmp>
 8013f54:	bb98      	cbnz	r0, 8013fbe <??prvcy_mngr_srch_fw_reslvng_list_1>
 8013f56:	e7d7      	b.n	8013f08 <??prvcy_mngr_srch_fw_reslvng_list_21>

08013f58 <??prvcy_mngr_srch_fw_reslvng_list_22>:
 8013f58:	2206      	movs	r2, #6
 8013f5a:	4629      	mov	r1, r5
 8013f5c:	4640      	mov	r0, r8
 8013f5e:	2400      	movs	r4, #0
 8013f60:	f7fa fe7d 	bl	800ec5e <ble_memcmp>
 8013f64:	b938      	cbnz	r0, 8013f76 <??prvcy_mngr_srch_fw_reslvng_list_23>

08013f66 <??prvcy_mngr_srch_fw_reslvng_list_24>:
 8013f66:	eb04 1004 	add.w	r0, r4, r4, lsl #4
 8013f6a:	eb05 0080 	add.w	r0, r5, r0, lsl #2
 8013f6e:	f100 0110 	add.w	r1, r0, #16

08013f72 <??prvcy_mngr_srch_fw_reslvng_list_12>:
 8013f72:	6039      	str	r1, [r7, #0]
 8013f74:	e023      	b.n	8013fbe <??prvcy_mngr_srch_fw_reslvng_list_1>

08013f76 <??prvcy_mngr_srch_fw_reslvng_list_23>:
 8013f76:	2206      	movs	r2, #6
 8013f78:	f105 0144 	add.w	r1, r5, #68	; 0x44
 8013f7c:	4640      	mov	r0, r8
 8013f7e:	2401      	movs	r4, #1
 8013f80:	f7fa fe6d 	bl	800ec5e <ble_memcmp>
 8013f84:	2800      	cmp	r0, #0
 8013f86:	d0ee      	beq.n	8013f66 <??prvcy_mngr_srch_fw_reslvng_list_24>
 8013f88:	2206      	movs	r2, #6
 8013f8a:	f105 0188 	add.w	r1, r5, #136	; 0x88
 8013f8e:	4640      	mov	r0, r8
 8013f90:	2402      	movs	r4, #2
 8013f92:	f7fa fe64 	bl	800ec5e <ble_memcmp>
 8013f96:	2800      	cmp	r0, #0
 8013f98:	d0e5      	beq.n	8013f66 <??prvcy_mngr_srch_fw_reslvng_list_24>
 8013f9a:	2206      	movs	r2, #6
 8013f9c:	f105 01cc 	add.w	r1, r5, #204	; 0xcc
 8013fa0:	4640      	mov	r0, r8
 8013fa2:	2403      	movs	r4, #3
 8013fa4:	f7fa fe5b 	bl	800ec5e <ble_memcmp>
 8013fa8:	2800      	cmp	r0, #0
 8013faa:	d0dc      	beq.n	8013f66 <??prvcy_mngr_srch_fw_reslvng_list_24>
 8013fac:	2206      	movs	r2, #6
 8013fae:	f505 7188 	add.w	r1, r5, #272	; 0x110
 8013fb2:	4640      	mov	r0, r8
 8013fb4:	2404      	movs	r4, #4
 8013fb6:	f7fa fe52 	bl	800ec5e <ble_memcmp>
 8013fba:	2800      	cmp	r0, #0
 8013fbc:	d0d3      	beq.n	8013f66 <??prvcy_mngr_srch_fw_reslvng_list_24>

08013fbe <??prvcy_mngr_srch_fw_reslvng_list_1>:
 8013fbe:	2000      	movs	r0, #0
 8013fc0:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

08013fc4 <prvcy_mngr_add_rmv_hw_reslvng_list>:
 8013fc4:	e92d 4ffe 	stmdb	sp!, {r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8013fc8:	f8df 82cc 	ldr.w	r8, [pc, #716]	; 8014298 <??DataTable10>
 8013fcc:	4606      	mov	r6, r0
 8013fce:	f508 77be 	add.w	r7, r8, #380	; 0x17c
 8013fd2:	7838      	ldrb	r0, [r7, #0]
 8013fd4:	2400      	movs	r4, #0
 8013fd6:	2801      	cmp	r0, #1
 8013fd8:	f040 80b7 	bne.w	801414a <??prvcy_mngr_add_rmv_hw_reslvng_list_0>
 8013fdc:	f508 79aa 	add.w	r9, r8, #340	; 0x154
 8013fe0:	4615      	mov	r5, r2
 8013fe2:	469b      	mov	fp, r3
 8013fe4:	f8dd a030 	ldr.w	sl, [sp, #48]	; 0x30
 8013fe8:	2901      	cmp	r1, #1
 8013fea:	d16b      	bne.n	80140c4 <??prvcy_mngr_add_rmv_hw_reslvng_list_1>
 8013fec:	ab01      	add	r3, sp, #4
 8013fee:	9300      	str	r3, [sp, #0]
 8013ff0:	464b      	mov	r3, r9
 8013ff2:	2201      	movs	r2, #1
 8013ff4:	2103      	movs	r1, #3
 8013ff6:	2000      	movs	r0, #0
 8013ff8:	f7f5 fb54 	bl	80096a4 <llhwc_lst_add_rmv_dev>
 8013ffc:	4604      	mov	r4, r0
 8013ffe:	2c07      	cmp	r4, #7
 8014000:	d110      	bne.n	8014024 <??prvcy_mngr_add_rmv_hw_reslvng_list_2>
 8014002:	2003      	movs	r0, #3
 8014004:	f7f5 fce0 	bl	80099c8 <llhwc_lst_rmv_rand_add>
 8014008:	0004      	movs	r4, r0
 801400a:	f040 80be 	bne.w	801418a <??prvcy_mngr_add_rmv_hw_reslvng_list_3>
 801400e:	a801      	add	r0, sp, #4
 8014010:	9000      	str	r0, [sp, #0]
 8014012:	464b      	mov	r3, r9
 8014014:	2201      	movs	r2, #1
 8014016:	2103      	movs	r1, #3
 8014018:	2000      	movs	r0, #0
 801401a:	f7f5 fb43 	bl	80096a4 <llhwc_lst_add_rmv_dev>
 801401e:	0004      	movs	r4, r0
 8014020:	d003      	beq.n	801402a <??prvcy_mngr_add_rmv_hw_reslvng_list_4>
 8014022:	e0af      	b.n	8014184 <??prvcy_mngr_add_rmv_hw_reslvng_list_5>

08014024 <??prvcy_mngr_add_rmv_hw_reslvng_list_2>:
 8014024:	2c00      	cmp	r4, #0
 8014026:	f040 80b0 	bne.w	801418a <??prvcy_mngr_add_rmv_hw_reslvng_list_3>

0801402a <??prvcy_mngr_add_rmv_hw_reslvng_list_4>:
 801402a:	eb05 1005 	add.w	r0, r5, r5, lsl #4
 801402e:	f89d 1004 	ldrb.w	r1, [sp, #4]
 8014032:	f10d 0305 	add.w	r3, sp, #5
 8014036:	eb08 0580 	add.w	r5, r8, r0, lsl #2
 801403a:	61e9      	str	r1, [r5, #28]
 801403c:	465a      	mov	r2, fp
 801403e:	4651      	mov	r1, sl
 8014040:	2000      	movs	r0, #0
 8014042:	f7f5 fa2d 	bl	80094a0 <llhwc_lst_search>
 8014046:	0004      	movs	r4, r0
 8014048:	f040 809f 	bne.w	801418a <??prvcy_mngr_add_rmv_hw_reslvng_list_3>
 801404c:	f89d 0005 	ldrb.w	r0, [sp, #5]
 8014050:	07c1      	lsls	r1, r0, #31
 8014052:	d405      	bmi.n	8014060 <??prvcy_mngr_add_rmv_hw_reslvng_list_6>
 8014054:	f89d 1004 	ldrb.w	r1, [sp, #4]
 8014058:	2200      	movs	r2, #0
 801405a:	2000      	movs	r0, #0
 801405c:	f7f5 fcfe 	bl	8009a5c <llhwc_lst_edit_indicators>

08014060 <??prvcy_mngr_add_rmv_hw_reslvng_list_6>:
 8014060:	79f8      	ldrb	r0, [r7, #7]
 8014062:	2805      	cmp	r0, #5
 8014064:	d11a      	bne.n	801409c <??prvcy_mngr_add_rmv_hw_reslvng_list_7>
 8014066:	2206      	movs	r2, #6
 8014068:	4659      	mov	r1, fp
 801406a:	f508 70b2 	add.w	r0, r8, #356	; 0x164
 801406e:	f7fa fdf6 	bl	800ec5e <ble_memcmp>
 8014072:	2800      	cmp	r0, #0
 8014074:	bf04      	itt	eq
 8014076:	78b8      	ldrbeq	r0, [r7, #2]
 8014078:	4550      	cmpeq	r0, sl
 801407a:	d10f      	bne.n	801409c <??prvcy_mngr_add_rmv_hw_reslvng_list_7>
 801407c:	f8df 43cc 	ldr.w	r4, [pc, #972]	; 801444c <??DataTable15_4>
 8014080:	2206      	movs	r2, #6
 8014082:	4649      	mov	r1, r9
 8014084:	f104 000d 	add.w	r0, r4, #13
 8014088:	f7fa fd5e 	bl	800eb48 <ble_memcpy>
 801408c:	2206      	movs	r2, #6
 801408e:	4649      	mov	r1, r9
 8014090:	f105 0010 	add.w	r0, r5, #16
 8014094:	f7fa fd58 	bl	800eb48 <ble_memcpy>
 8014098:	7938      	ldrb	r0, [r7, #4]
 801409a:	75e0      	strb	r0, [r4, #23]

0801409c <??prvcy_mngr_add_rmv_hw_reslvng_list_7>:
 801409c:	f10d 0305 	add.w	r3, sp, #5
 80140a0:	465a      	mov	r2, fp
 80140a2:	4651      	mov	r1, sl
 80140a4:	2006      	movs	r0, #6
 80140a6:	f7f5 f9fb 	bl	80094a0 <llhwc_lst_search>
 80140aa:	0004      	movs	r4, r0
 80140ac:	d16d      	bne.n	801418a <??prvcy_mngr_add_rmv_hw_reslvng_list_3>
 80140ae:	f89d 0005 	ldrb.w	r0, [sp, #5]
 80140b2:	07c1      	lsls	r1, r0, #31
 80140b4:	d469      	bmi.n	801418a <??prvcy_mngr_add_rmv_hw_reslvng_list_3>
 80140b6:	f89d 1004 	ldrb.w	r1, [sp, #4]
 80140ba:	2200      	movs	r2, #0
 80140bc:	2006      	movs	r0, #6
 80140be:	f7f5 fccd 	bl	8009a5c <llhwc_lst_edit_indicators>
 80140c2:	e062      	b.n	801418a <??prvcy_mngr_add_rmv_hw_reslvng_list_3>

080140c4 <??prvcy_mngr_add_rmv_hw_reslvng_list_1>:
 80140c4:	a801      	add	r0, sp, #4
 80140c6:	9000      	str	r0, [sp, #0]
 80140c8:	464b      	mov	r3, r9
 80140ca:	2201      	movs	r2, #1
 80140cc:	2103      	movs	r1, #3
 80140ce:	2000      	movs	r0, #0
 80140d0:	f7f5 fae8 	bl	80096a4 <llhwc_lst_add_rmv_dev>
 80140d4:	4604      	mov	r4, r0
 80140d6:	2c07      	cmp	r4, #7
 80140d8:	d10f      	bne.n	80140fa <??prvcy_mngr_add_rmv_hw_reslvng_list_8>
 80140da:	2003      	movs	r0, #3
 80140dc:	f7f5 fc74 	bl	80099c8 <llhwc_lst_rmv_rand_add>
 80140e0:	0004      	movs	r4, r0
 80140e2:	d152      	bne.n	801418a <??prvcy_mngr_add_rmv_hw_reslvng_list_3>
 80140e4:	a801      	add	r0, sp, #4
 80140e6:	9000      	str	r0, [sp, #0]
 80140e8:	464b      	mov	r3, r9
 80140ea:	2201      	movs	r2, #1
 80140ec:	2103      	movs	r1, #3
 80140ee:	2000      	movs	r0, #0
 80140f0:	f7f5 fad8 	bl	80096a4 <llhwc_lst_add_rmv_dev>
 80140f4:	0004      	movs	r4, r0
 80140f6:	d002      	beq.n	80140fe <??prvcy_mngr_add_rmv_hw_reslvng_list_9>
 80140f8:	e044      	b.n	8014184 <??prvcy_mngr_add_rmv_hw_reslvng_list_5>

080140fa <??prvcy_mngr_add_rmv_hw_reslvng_list_8>:
 80140fa:	2c00      	cmp	r4, #0
 80140fc:	d145      	bne.n	801418a <??prvcy_mngr_add_rmv_hw_reslvng_list_3>

080140fe <??prvcy_mngr_add_rmv_hw_reslvng_list_9>:
 80140fe:	7a38      	ldrb	r0, [r7, #8]
 8014100:	2805      	cmp	r0, #5
 8014102:	bf04      	itt	eq
 8014104:	79f8      	ldrbeq	r0, [r7, #7]
 8014106:	2800      	cmpeq	r0, #0
 8014108:	d115      	bne.n	8014136 <??prvcy_mngr_add_rmv_hw_reslvng_list_10>
 801410a:	2e01      	cmp	r6, #1
 801410c:	bf18      	it	ne
 801410e:	2e03      	cmpne	r6, #3
 8014110:	d111      	bne.n	8014136 <??prvcy_mngr_add_rmv_hw_reslvng_list_10>
 8014112:	f10d 0305 	add.w	r3, sp, #5
 8014116:	465a      	mov	r2, fp
 8014118:	4651      	mov	r1, sl
 801411a:	f7f5 f9c1 	bl	80094a0 <llhwc_lst_search>
 801411e:	0004      	movs	r4, r0
 8014120:	d133      	bne.n	801418a <??prvcy_mngr_add_rmv_hw_reslvng_list_3>
 8014122:	f89d 0005 	ldrb.w	r0, [sp, #5]
 8014126:	07c1      	lsls	r1, r0, #31
 8014128:	d40d      	bmi.n	8014146 <??prvcy_mngr_add_rmv_hw_reslvng_list_11>
 801412a:	f89d 1004 	ldrb.w	r1, [sp, #4]
 801412e:	2200      	movs	r2, #0
 8014130:	2000      	movs	r0, #0
 8014132:	f7f5 fc93 	bl	8009a5c <llhwc_lst_edit_indicators>

08014136 <??prvcy_mngr_add_rmv_hw_reslvng_list_10>:
 8014136:	eb05 1105 	add.w	r1, r5, r5, lsl #4
 801413a:	f89d 0004 	ldrb.w	r0, [sp, #4]
 801413e:	eb08 0181 	add.w	r1, r8, r1, lsl #2
 8014142:	61c8      	str	r0, [r1, #28]
 8014144:	e021      	b.n	801418a <??prvcy_mngr_add_rmv_hw_reslvng_list_3>

08014146 <??prvcy_mngr_add_rmv_hw_reslvng_list_11>:
 8014146:	240f      	movs	r4, #15
 8014148:	e01f      	b.n	801418a <??prvcy_mngr_add_rmv_hw_reslvng_list_3>

0801414a <??prvcy_mngr_add_rmv_hw_reslvng_list_0>:
 801414a:	b9f0      	cbnz	r0, 801418a <??prvcy_mngr_add_rmv_hw_reslvng_list_3>
 801414c:	a801      	add	r0, sp, #4
 801414e:	f508 75ae 	add.w	r5, r8, #348	; 0x15c
 8014152:	9000      	str	r0, [sp, #0]
 8014154:	462b      	mov	r3, r5
 8014156:	2201      	movs	r2, #1
 8014158:	2104      	movs	r1, #4
 801415a:	2000      	movs	r0, #0
 801415c:	f7f5 faa2 	bl	80096a4 <llhwc_lst_add_rmv_dev>
 8014160:	4604      	mov	r4, r0
 8014162:	2c07      	cmp	r4, #7
 8014164:	d111      	bne.n	801418a <??prvcy_mngr_add_rmv_hw_reslvng_list_3>
 8014166:	2004      	movs	r0, #4
 8014168:	f7f5 fc2e 	bl	80099c8 <llhwc_lst_rmv_rand_add>
 801416c:	0004      	movs	r4, r0
 801416e:	d10c      	bne.n	801418a <??prvcy_mngr_add_rmv_hw_reslvng_list_3>
 8014170:	a801      	add	r0, sp, #4
 8014172:	9000      	str	r0, [sp, #0]
 8014174:	462b      	mov	r3, r5
 8014176:	2201      	movs	r2, #1
 8014178:	2104      	movs	r1, #4
 801417a:	2000      	movs	r0, #0
 801417c:	f7f5 fa92 	bl	80096a4 <llhwc_lst_add_rmv_dev>
 8014180:	0004      	movs	r4, r0
 8014182:	d002      	beq.n	801418a <??prvcy_mngr_add_rmv_hw_reslvng_list_3>

08014184 <??prvcy_mngr_add_rmv_hw_reslvng_list_5>:
 8014184:	2000      	movs	r0, #0
 8014186:	f7ec f823 	bl	80001d0 <bsp_assert>

0801418a <??prvcy_mngr_add_rmv_hw_reslvng_list_3>:
 801418a:	4620      	mov	r0, r4

0801418c <?Subroutine0>:
 801418c:	b003      	add	sp, #12
 801418e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08014192 <prvcy_mngr_remove_random_addr_list>:
 8014192:	f7f5 bc19 	b.w	80099c8 <llhwc_lst_rmv_rand_add>

08014196 <prvcy_mngr_rslvng_list_size>:
 8014196:	2105      	movs	r1, #5
 8014198:	7001      	strb	r1, [r0, #0]
 801419a:	2000      	movs	r0, #0
 801419c:	4770      	bx	lr

0801419e <prvcy_mngr_read_loc_peer_rslvng_addr>:
 801419e:	b57c      	push	{r2, r3, r4, r5, r6, lr}
 80141a0:	2500      	movs	r5, #0
 80141a2:	460c      	mov	r4, r1
 80141a4:	9500      	str	r5, [sp, #0]
 80141a6:	b112      	cbz	r2, 80141ae <??prvcy_mngr_read_loc_peer_rslvng_addr_0>
 80141a8:	2a01      	cmp	r2, #1
 80141aa:	d00f      	beq.n	80141cc <??prvcy_mngr_read_loc_peer_rslvng_addr_1>
 80141ac:	e028      	b.n	8014200 <??prvcy_mngr_read_loc_peer_rslvng_addr_2>

080141ae <??prvcy_mngr_read_loc_peer_rslvng_addr_0>:
 80141ae:	4601      	mov	r1, r0
 80141b0:	2300      	movs	r3, #0
 80141b2:	466a      	mov	r2, sp
 80141b4:	2002      	movs	r0, #2
 80141b6:	f7ff fd81 	bl	8013cbc <prvcy_mngr_srch_fw_reslvng_list>
 80141ba:	4605      	mov	r5, r0
 80141bc:	9800      	ldr	r0, [sp, #0]
 80141be:	b1f0      	cbz	r0, 80141fe <??prvcy_mngr_read_loc_peer_rslvng_addr_3>
 80141c0:	6800      	ldr	r0, [r0, #0]
 80141c2:	4621      	mov	r1, r4
 80141c4:	b2c0      	uxtb	r0, r0
 80141c6:	f7f5 fc2d 	bl	8009a24 <llhwc_lst_read_dev_addr>
 80141ca:	e019      	b.n	8014200 <??prvcy_mngr_read_loc_peer_rslvng_addr_2>

080141cc <??prvcy_mngr_read_loc_peer_rslvng_addr_1>:
 80141cc:	4601      	mov	r1, r0
 80141ce:	2300      	movs	r3, #0
 80141d0:	466a      	mov	r2, sp
 80141d2:	2005      	movs	r0, #5
 80141d4:	f7ff fd72 	bl	8013cbc <prvcy_mngr_srch_fw_reslvng_list>
 80141d8:	4605      	mov	r5, r0
 80141da:	4e9b      	ldr	r6, [pc, #620]	; (8014448 <??DataTable15_3>)
 80141dc:	7830      	ldrb	r0, [r6, #0]
 80141de:	28aa      	cmp	r0, #170	; 0xaa
 80141e0:	d00d      	beq.n	80141fe <??prvcy_mngr_read_loc_peer_rslvng_addr_3>
 80141e2:	eb00 1300 	add.w	r3, r0, r0, lsl #4
 80141e6:	4995      	ldr	r1, [pc, #596]	; (801443c <??DataTable15>)
 80141e8:	2206      	movs	r2, #6
 80141ea:	eb01 0083 	add.w	r0, r1, r3, lsl #2
 80141ee:	f100 0108 	add.w	r1, r0, #8
 80141f2:	4620      	mov	r0, r4
 80141f4:	f7fa fca8 	bl	800eb48 <ble_memcpy>
 80141f8:	20aa      	movs	r0, #170	; 0xaa
 80141fa:	7030      	strb	r0, [r6, #0]
 80141fc:	e000      	b.n	8014200 <??prvcy_mngr_read_loc_peer_rslvng_addr_2>

080141fe <??prvcy_mngr_read_loc_peer_rslvng_addr_3>:
 80141fe:	2502      	movs	r5, #2

08014200 <??prvcy_mngr_read_loc_peer_rslvng_addr_2>:
 8014200:	4628      	mov	r0, r5
 8014202:	bd76      	pop	{r1, r2, r4, r5, r6, pc}

08014204 <prvcy_mngr_set_addr_rsln_enble>:
 8014204:	b570      	push	{r4, r5, r6, lr}
 8014206:	4605      	mov	r5, r0
 8014208:	4e8c      	ldr	r6, [pc, #560]	; (801443c <??DataTable15>)
 801420a:	f896 0174 	ldrb.w	r0, [r6, #372]	; 0x174
 801420e:	2400      	movs	r4, #0
 8014210:	2801      	cmp	r0, #1
 8014212:	d103      	bne.n	801421c <??prvcy_mngr_set_addr_rsln_enble_0>
 8014214:	f7fe fab8 	bl	8012788 <non_conn_mngr_event_status_check>
 8014218:	0004      	movs	r4, r0
 801421a:	d104      	bne.n	8014226 <??prvcy_mngr_set_addr_rsln_enble_1>

0801421c <??prvcy_mngr_set_addr_rsln_enble_0>:
 801421c:	f886 5174 	strb.w	r5, [r6, #372]	; 0x174
 8014220:	4628      	mov	r0, r5
 8014222:	f7f4 ff14 	bl	800904e <llhwc_addr_rsln_en>

08014226 <??prvcy_mngr_set_addr_rsln_enble_1>:
 8014226:	4620      	mov	r0, r4
 8014228:	bd70      	pop	{r4, r5, r6, pc}
	...

0801422c <prvcy_post_timer_evnt_clbk>:
 801422c:	b53e      	push	{r1, r2, r3, r4, r5, lr}
 801422e:	2206      	movs	r2, #6
 8014230:	2100      	movs	r1, #0
 8014232:	4668      	mov	r0, sp
 8014234:	f01c febb 	bl	8030fae <memset>
 8014238:	2060      	movs	r0, #96	; 0x60
 801423a:	f7eb fff5 	bl	8000228 <bsp_debug_gpio_set>
 801423e:	4d7f      	ldr	r5, [pc, #508]	; (801443c <??DataTable15>)
 8014240:	2405      	movs	r4, #5

08014242 <??prvcy_post_timer_evnt_clbk_0>:
 8014242:	7e28      	ldrb	r0, [r5, #24]
 8014244:	2801      	cmp	r0, #1
 8014246:	d10d      	bne.n	8014264 <??prvcy_post_timer_evnt_clbk_1>
 8014248:	2206      	movs	r2, #6
 801424a:	4669      	mov	r1, sp
 801424c:	f105 0008 	add.w	r0, r5, #8
 8014250:	f7fa fd05 	bl	800ec5e <ble_memcmp>
 8014254:	b130      	cbz	r0, 8014264 <??prvcy_post_timer_evnt_clbk_1>
 8014256:	f105 0108 	add.w	r1, r5, #8
 801425a:	f105 0020 	add.w	r0, r5, #32
 801425e:	f7ff fbaf 	bl	80139c0 <prvcy_mngr_addr_gen>
 8014262:	b920      	cbnz	r0, 801426e <??prvcy_post_timer_evnt_clbk_2>

08014264 <??prvcy_post_timer_evnt_clbk_1>:
 8014264:	3544      	adds	r5, #68	; 0x44
 8014266:	1e64      	subs	r4, r4, #1
 8014268:	d1eb      	bne.n	8014242 <??prvcy_post_timer_evnt_clbk_0>
 801426a:	f7fe faa1 	bl	80127b0 <non_conn_mngr_update_rpa_src_addr>

0801426e <??prvcy_post_timer_evnt_clbk_2>:
 801426e:	2060      	movs	r0, #96	; 0x60
 8014270:	f7eb ffdc 	bl	800022c <bsp_debug_gpio_clear>
 8014274:	b003      	add	sp, #12
 8014276:	bd30      	pop	{r4, r5, pc}

08014278 <prvcy_mngr_resolvable_private_addr_timeout>:
 8014278:	b580      	push	{r7, lr}
 801427a:	4a75      	ldr	r2, [pc, #468]	; (8014450 <??DataTable15_5>)
 801427c:	8090      	strh	r0, [r2, #4]
 801427e:	6810      	ldr	r0, [r2, #0]
 8014280:	2100      	movs	r1, #0
 8014282:	b130      	cbz	r0, 8014292 <??prvcy_mngr_resolvable_private_addr_timeout_0>
 8014284:	8891      	ldrh	r1, [r2, #4]
 8014286:	f44f 42fa 	mov.w	r2, #32000	; 0x7d00
 801428a:	4351      	muls	r1, r2
 801428c:	f7f1 fbbc 	bl	8005a08 <os_timer_set>
 8014290:	4601      	mov	r1, r0

08014292 <??prvcy_mngr_resolvable_private_addr_timeout_0>:
 8014292:	4608      	mov	r0, r1
 8014294:	bd02      	pop	{r1, pc}
	...

08014298 <??DataTable10>:
 8014298:	18c4 2000                                   ... 

0801429c <get_addr_rsl_enable>:
 801429c:	4867      	ldr	r0, [pc, #412]	; (801443c <??DataTable15>)
 801429e:	f890 0174 	ldrb.w	r0, [r0, #372]	; 0x174
 80142a2:	4770      	bx	lr

080142a4 <prvcy_mngr_set_prvcy_mode>:
 80142a4:	b5f1      	push	{r0, r4, r5, r6, r7, lr}
 80142a6:	4c65      	ldr	r4, [pc, #404]	; (801443c <??DataTable15>)
 80142a8:	f894 0174 	ldrb.w	r0, [r4, #372]	; 0x174
 80142ac:	b084      	sub	sp, #16
 80142ae:	460d      	mov	r5, r1
 80142b0:	4616      	mov	r6, r2
 80142b2:	2801      	cmp	r0, #1
 80142b4:	d103      	bne.n	80142be <??prvcy_mngr_set_prvcy_mode_0>
 80142b6:	f7fe fa67 	bl	8012788 <non_conn_mngr_event_status_check>
 80142ba:	2800      	cmp	r0, #0
 80142bc:	d148      	bne.n	8014350 <??prvcy_mngr_set_prvcy_mode_1>

080142be <??prvcy_mngr_set_prvcy_mode_0>:
 80142be:	ab04      	add	r3, sp, #16
 80142c0:	aa02      	add	r2, sp, #8
 80142c2:	4629      	mov	r1, r5
 80142c4:	2005      	movs	r0, #5
 80142c6:	f7ff fcf9 	bl	8013cbc <prvcy_mngr_srch_fw_reslvng_list>
 80142ca:	4f5f      	ldr	r7, [pc, #380]	; (8014448 <??DataTable15_3>)
 80142cc:	7838      	ldrb	r0, [r7, #0]
 80142ce:	28aa      	cmp	r0, #170	; 0xaa
 80142d0:	bf08      	it	eq
 80142d2:	2002      	moveq	r0, #2
 80142d4:	d03c      	beq.n	8014350 <??prvcy_mngr_set_prvcy_mode_1>
 80142d6:	f89d 1010 	ldrb.w	r1, [sp, #16]
 80142da:	ab01      	add	r3, sp, #4
 80142dc:	462a      	mov	r2, r5
 80142de:	2005      	movs	r0, #5
 80142e0:	f7f5 f8de 	bl	80094a0 <llhwc_lst_search>
 80142e4:	bba0      	cbnz	r0, 8014350 <??prvcy_mngr_set_prvcy_mode_1>
 80142e6:	f89d 1004 	ldrb.w	r1, [sp, #4]
 80142ea:	07ca      	lsls	r2, r1, #31
 80142ec:	d513      	bpl.n	8014316 <??prvcy_mngr_set_prvcy_mode_2>
 80142ee:	0031      	movs	r1, r6
 80142f0:	d125      	bne.n	801433e <??prvcy_mngr_set_prvcy_mode_3>
 80142f2:	a801      	add	r0, sp, #4
 80142f4:	f89d 2010 	ldrb.w	r2, [sp, #16]
 80142f8:	9000      	str	r0, [sp, #0]
 80142fa:	462b      	mov	r3, r5
 80142fc:	2105      	movs	r1, #5
 80142fe:	2000      	movs	r0, #0
 8014300:	f7f5 f9d0 	bl	80096a4 <llhwc_lst_add_rmv_dev>
 8014304:	bb20      	cbnz	r0, 8014350 <??prvcy_mngr_set_prvcy_mode_1>
 8014306:	783a      	ldrb	r2, [r7, #0]
 8014308:	f104 0140 	add.w	r1, r4, #64	; 0x40
 801430c:	2500      	movs	r5, #0
 801430e:	eb02 1302 	add.w	r3, r2, r2, lsl #4
 8014312:	009b      	lsls	r3, r3, #2
 8014314:	e012      	b.n	801433c <??prvcy_mngr_set_prvcy_mode_4>

08014316 <??prvcy_mngr_set_prvcy_mode_2>:
 8014316:	2e01      	cmp	r6, #1
 8014318:	d111      	bne.n	801433e <??prvcy_mngr_set_prvcy_mode_3>
 801431a:	a801      	add	r0, sp, #4
 801431c:	f89d 2010 	ldrb.w	r2, [sp, #16]
 8014320:	9000      	str	r0, [sp, #0]
 8014322:	462b      	mov	r3, r5
 8014324:	2105      	movs	r1, #5
 8014326:	2001      	movs	r0, #1
 8014328:	f7f5 f9bc 	bl	80096a4 <llhwc_lst_add_rmv_dev>
 801432c:	b980      	cbnz	r0, 8014350 <??prvcy_mngr_set_prvcy_mode_1>
 801432e:	783a      	ldrb	r2, [r7, #0]
 8014330:	f104 0140 	add.w	r1, r4, #64	; 0x40
 8014334:	2501      	movs	r5, #1
 8014336:	eb02 1302 	add.w	r3, r2, r2, lsl #4
 801433a:	009b      	lsls	r3, r3, #2

0801433c <??prvcy_mngr_set_prvcy_mode_4>:
 801433c:	54cd      	strb	r5, [r1, r3]

0801433e <??prvcy_mngr_set_prvcy_mode_3>:
 801433e:	783a      	ldrb	r2, [r7, #0]
 8014340:	f104 0140 	add.w	r1, r4, #64	; 0x40
 8014344:	24aa      	movs	r4, #170	; 0xaa
 8014346:	eb02 1302 	add.w	r3, r2, r2, lsl #4
 801434a:	009b      	lsls	r3, r3, #2
 801434c:	54ce      	strb	r6, [r1, r3]
 801434e:	703c      	strb	r4, [r7, #0]

08014350 <??prvcy_mngr_set_prvcy_mode_1>:
 8014350:	b005      	add	sp, #20
 8014352:	bdf0      	pop	{r4, r5, r6, r7, pc}

08014354 <prvcy_mnger_update_src_addr_for_adv_sets>:
 8014354:	f7fe ba2c 	b.w	80127b0 <non_conn_mngr_update_rpa_src_addr>

08014358 <prvcy_mngr_free_tmr>:
 8014358:	4938      	ldr	r1, [pc, #224]	; (801443c <??DataTable15>)
 801435a:	f8d1 0188 	ldr.w	r0, [r1, #392]	; 0x188
 801435e:	2800      	cmp	r0, #0
 8014360:	d100      	bne.n	8014364 <??prvcy_mngr_free_tmr_0>
 8014362:	4770      	bx	lr

08014364 <??prvcy_mngr_free_tmr_0>:
 8014364:	b580      	push	{r7, lr}
 8014366:	f501 70c4 	add.w	r0, r1, #392	; 0x188
 801436a:	f7f1 fb40 	bl	80059ee <os_timer_stop_free>
 801436e:	1e40      	subs	r0, r0, #1
 8014370:	4180      	sbcs	r0, r0
 8014372:	0fc0      	lsrs	r0, r0, #31
 8014374:	e8bd 4002 	ldmia.w	sp!, {r1, lr}
 8014378:	f7eb bf2a 	b.w	80001d0 <bsp_assert>

0801437c <prvcy_mngr_chck_rpa>:
 801437c:	b578      	push	{r3, r4, r5, r6, lr}
 801437e:	4604      	mov	r4, r0
 8014380:	b085      	sub	sp, #20
 8014382:	2000      	movs	r0, #0
 8014384:	460d      	mov	r5, r1
 8014386:	9000      	str	r0, [sp, #0]
 8014388:	2210      	movs	r2, #16
 801438a:	2100      	movs	r1, #0
 801438c:	a801      	add	r0, sp, #4
 801438e:	f01c fe0e 	bl	8030fae <memset>
 8014392:	2300      	movs	r3, #0
 8014394:	466a      	mov	r2, sp
 8014396:	4621      	mov	r1, r4
 8014398:	2001      	movs	r0, #1
 801439a:	f7ff fc8f 	bl	8013cbc <prvcy_mngr_srch_fw_reslvng_list>
 801439e:	9800      	ldr	r0, [sp, #0]
 80143a0:	260f      	movs	r6, #15
 80143a2:	b148      	cbz	r0, 80143b8 <??prvcy_mngr_chck_rpa_0>
 80143a4:	2210      	movs	r2, #16
 80143a6:	a901      	add	r1, sp, #4
 80143a8:	f7fa fc59 	bl	800ec5e <ble_memcmp>
 80143ac:	b120      	cbz	r0, 80143b8 <??prvcy_mngr_chck_rpa_0>
 80143ae:	9800      	ldr	r0, [sp, #0]
 80143b0:	4629      	mov	r1, r5
 80143b2:	f7ff fb39 	bl	8013a28 <prvcy_mngr_addr_rsln>
 80143b6:	4606      	mov	r6, r0

080143b8 <??prvcy_mngr_chck_rpa_0>:
 80143b8:	4630      	mov	r0, r6
 80143ba:	b006      	add	sp, #24
 80143bc:	bd70      	pop	{r4, r5, r6, pc}

080143be <prvcy_mngr_chck_dev_prvcy_mode>:
 80143be:	b538      	push	{r3, r4, r5, lr}
 80143c0:	460c      	mov	r4, r1
 80143c2:	4601      	mov	r1, r0
 80143c4:	2300      	movs	r3, #0
 80143c6:	2200      	movs	r2, #0
 80143c8:	2005      	movs	r0, #5
 80143ca:	f7ff fc77 	bl	8013cbc <prvcy_mngr_srch_fw_reslvng_list>
 80143ce:	491e      	ldr	r1, [pc, #120]	; (8014448 <??DataTable15_3>)
 80143d0:	7808      	ldrb	r0, [r1, #0]
 80143d2:	28aa      	cmp	r0, #170	; 0xaa
 80143d4:	d101      	bne.n	80143da <??prvcy_mngr_chck_dev_prvcy_mode_0>
 80143d6:	200f      	movs	r0, #15
 80143d8:	bd32      	pop	{r1, r4, r5, pc}

080143da <??prvcy_mngr_chck_dev_prvcy_mode_0>:
 80143da:	eb00 1300 	add.w	r3, r0, r0, lsl #4
 80143de:	4a17      	ldr	r2, [pc, #92]	; (801443c <??DataTable15>)
 80143e0:	eb02 0083 	add.w	r0, r2, r3, lsl #2
 80143e4:	7e45      	ldrb	r5, [r0, #25]
 80143e6:	42a5      	cmp	r5, r4
 80143e8:	bf03      	ittte	eq
 80143ea:	f890 0040 	ldrbeq.w	r0, [r0, #64]	; 0x40
 80143ee:	2801      	cmpeq	r0, #1
 80143f0:	2000      	moveq	r0, #0
 80143f2:	200f      	movne	r0, #15
 80143f4:	22aa      	movs	r2, #170	; 0xaa
 80143f6:	700a      	strb	r2, [r1, #0]
 80143f8:	bd32      	pop	{r1, r4, r5, pc}

080143fa <prvcy_mngr_can_rslv_peer_init>:
 80143fa:	b570      	push	{r4, r5, r6, lr}
 80143fc:	4e0f      	ldr	r6, [pc, #60]	; (801443c <??DataTable15>)
 80143fe:	f896 3174 	ldrb.w	r3, [r6, #372]	; 0x174
 8014402:	4605      	mov	r5, r0
 8014404:	2001      	movs	r0, #1
 8014406:	b1ab      	cbz	r3, 8014434 <??prvcy_mngr_can_rslv_peer_init_0>
 8014408:	2901      	cmp	r1, #1
 801440a:	bf01      	itttt	eq
 801440c:	7969      	ldrbeq	r1, [r5, #5]
 801440e:	0989      	lsreq	r1, r1, #6
 8014410:	2901      	cmpeq	r1, #1
 8014412:	2a05      	cmpeq	r2, #5
 8014414:	d10e      	bne.n	8014434 <??prvcy_mngr_can_rslv_peer_init_0>
 8014416:	2405      	movs	r4, #5

08014418 <??prvcy_mngr_can_rslv_peer_init_1>:
 8014418:	7e31      	ldrb	r1, [r6, #24]
 801441a:	2901      	cmp	r1, #1
 801441c:	d106      	bne.n	801442c <??prvcy_mngr_can_rslv_peer_init_2>
 801441e:	4629      	mov	r1, r5
 8014420:	f106 0030 	add.w	r0, r6, #48	; 0x30
 8014424:	f7ff fb00 	bl	8013a28 <prvcy_mngr_addr_rsln>
 8014428:	b2c1      	uxtb	r1, r0
 801442a:	b119      	cbz	r1, 8014434 <??prvcy_mngr_can_rslv_peer_init_0>

0801442c <??prvcy_mngr_can_rslv_peer_init_2>:
 801442c:	3644      	adds	r6, #68	; 0x44
 801442e:	1e64      	subs	r4, r4, #1
 8014430:	d1f2      	bne.n	8014418 <??prvcy_mngr_can_rslv_peer_init_1>
 8014432:	e000      	b.n	8014436 <??prvcy_mngr_can_rslv_peer_init_3>

08014434 <??prvcy_mngr_can_rslv_peer_init_0>:
 8014434:	2000      	movs	r0, #0

08014436 <??prvcy_mngr_can_rslv_peer_init_3>:
 8014436:	b2c0      	uxtb	r0, r0
 8014438:	bd70      	pop	{r4, r5, r6, pc}
	...

0801443c <??DataTable15>:
 801443c:	18c4 2000                                   ... 

08014440 <??DataTable15_1>:
 8014440:	fc00 ffff                                   ....

08014444 <??DataTable15_2>:
 8014444:	1a58 2000                                   X.. 

08014448 <??DataTable15_3>:
 8014448:	03d4 2000                                   ... 

0801444c <??DataTable15_4>:
 801444c:	1838 2000                                   8.. 

08014450 <??DataTable15_5>:
 8014450:	1a4c 2000                                   L.. 

08014454 <os_start>:
 8014454:	4770      	bx	lr

08014456 <os_disable_isr>:
 8014456:	f013 bc0d 	b.w	8027c74 <LINKLAYER_PLAT_DisableIRQ>

0801445a <os_enable_isr>:
 801445a:	f013 bbfb 	b.w	8027c54 <LINKLAYER_PLAT_EnableIRQ>

0801445e <os_rcrsv_mutex_create>:
 801445e:	2000      	movs	r0, #0
 8014460:	4770      	bx	lr

08014462 <os_rcrsv_mutex_delete>:
 8014462:	2000      	movs	r0, #0
 8014464:	4770      	bx	lr

08014466 <os_rcrsv_mutex_wait>:
 8014466:	b580      	push	{r7, lr}
 8014468:	2003      	movs	r0, #3
 801446a:	f013 fc39 	bl	8027ce0 <LINKLAYER_PLAT_DisableSpecificIRQ>
 801446e:	2000      	movs	r0, #0
 8014470:	bd02      	pop	{r1, pc}

08014472 <os_rcrsv_mutex_release>:
 8014472:	b580      	push	{r7, lr}
 8014474:	2003      	movs	r0, #3
 8014476:	f013 fc05 	bl	8027c84 <LINKLAYER_PLAT_EnableSpecificIRQ>
 801447a:	2000      	movs	r0, #0
 801447c:	bd02      	pop	{r1, pc}

0801447e <os_semaphore_create>:
 801447e:	2000      	movs	r0, #0
 8014480:	4770      	bx	lr

08014482 <os_semaphore_wait>:
 8014482:	2000      	movs	r0, #0
 8014484:	4770      	bx	lr

08014486 <os_semaphore_wait_isr>:
 8014486:	2000      	movs	r0, #0
 8014488:	4770      	bx	lr

0801448a <os_semaphore_release>:
 801448a:	b580      	push	{r7, lr}
 801448c:	e000      	b.n	8014490 <?Subroutine0>

0801448e <os_semaphore_release_isr>:
 801448e:	b580      	push	{r7, lr}

08014490 <?Subroutine0>:
 8014490:	f013 fca6 	bl	8027de0 <ll_sys_schedule_bg_process>
 8014494:	2000      	movs	r0, #0
 8014496:	bd02      	pop	{r1, pc}

08014498 <os_semaphore_delete>:
 8014498:	2000      	movs	r0, #0
 801449a:	4770      	bx	lr

0801449c <state_mngr_reset>:
 801449c:	4963      	ldr	r1, [pc, #396]	; (801462c <??DataTable6>)
 801449e:	2000      	movs	r0, #0
 80144a0:	8188      	strh	r0, [r1, #12]
 80144a2:	7388      	strb	r0, [r1, #14]
 80144a4:	2200      	movs	r2, #0
 80144a6:	200a      	movs	r0, #10

080144a8 <??state_mngr_reset_0>:
 80144a8:	f801 2b01 	strb.w	r2, [r1], #1
 80144ac:	1e40      	subs	r0, r0, #1
 80144ae:	d1fb      	bne.n	80144a8 <??state_mngr_reset_0>
 80144b0:	4770      	bx	lr
	...

080144b4 <state_mngr_alloc_state_mchn>:
 80144b4:	4a5d      	ldr	r2, [pc, #372]	; (801462c <??DataTable6>)
 80144b6:	b510      	push	{r4, lr}
 80144b8:	7811      	ldrb	r1, [r2, #0]
 80144ba:	2400      	movs	r4, #0
 80144bc:	2300      	movs	r3, #0
 80144be:	2900      	cmp	r1, #0
 80144c0:	bf1e      	ittt	ne
 80144c2:	2301      	movne	r3, #1
 80144c4:	7851      	ldrbne	r1, [r2, #1]
 80144c6:	2900      	cmpne	r1, #0
 80144c8:	d017      	beq.n	80144fa <??state_mngr_alloc_state_mchn_1>
 80144ca:	7891      	ldrb	r1, [r2, #2]
 80144cc:	2302      	movs	r3, #2
 80144ce:	2900      	cmp	r1, #0
 80144d0:	bf1e      	ittt	ne
 80144d2:	2303      	movne	r3, #3
 80144d4:	78d1      	ldrbne	r1, [r2, #3]
 80144d6:	2900      	cmpne	r1, #0
 80144d8:	d00f      	beq.n	80144fa <??state_mngr_alloc_state_mchn_1>
 80144da:	7911      	ldrb	r1, [r2, #4]
 80144dc:	2304      	movs	r3, #4
 80144de:	2900      	cmp	r1, #0
 80144e0:	bf1e      	ittt	ne
 80144e2:	2305      	movne	r3, #5
 80144e4:	7951      	ldrbne	r1, [r2, #5]
 80144e6:	2900      	cmpne	r1, #0
 80144e8:	d007      	beq.n	80144fa <??state_mngr_alloc_state_mchn_1>
 80144ea:	7991      	ldrb	r1, [r2, #6]
 80144ec:	2306      	movs	r3, #6
 80144ee:	2900      	cmp	r1, #0
 80144f0:	bf1f      	itttt	ne
 80144f2:	2307      	movne	r3, #7
 80144f4:	79d1      	ldrbne	r1, [r2, #7]
 80144f6:	2900      	cmpne	r1, #0
 80144f8:	2308      	movne	r3, #8

080144fa <??state_mngr_alloc_state_mchn_1>:
 80144fa:	1e41      	subs	r1, r0, #1
 80144fc:	2903      	cmp	r1, #3
 80144fe:	d81f      	bhi.n	8014540 <??state_mngr_alloc_state_mchn_2>
 8014500:	e8df f001 	tbb	[pc, r1]

08014504 <??state_mngr_alloc_state_mchn_0>:
 8014504:	0214 140b                                   ....

08014508 <??state_mngr_alloc_state_mchn_3>:
 8014508:	7b51      	ldrb	r1, [r2, #13]
 801450a:	b979      	cbnz	r1, 801452c <??state_mngr_alloc_state_mchn_4>
 801450c:	2002      	movs	r0, #2
 801450e:	2101      	movs	r1, #1
 8014510:	7210      	strb	r0, [r2, #8]
 8014512:	f102 0408 	add.w	r4, r2, #8
 8014516:	7351      	strb	r1, [r2, #13]
 8014518:	e015      	b.n	8014546 <??state_mngr_alloc_state_mchn_5>

0801451a <??state_mngr_alloc_state_mchn_6>:
 801451a:	7b11      	ldrb	r1, [r2, #12]
 801451c:	b931      	cbnz	r1, 801452c <??state_mngr_alloc_state_mchn_4>
 801451e:	2003      	movs	r0, #3
 8014520:	2101      	movs	r1, #1
 8014522:	7250      	strb	r0, [r2, #9]
 8014524:	f102 0409 	add.w	r4, r2, #9
 8014528:	7311      	strb	r1, [r2, #12]
 801452a:	e00c      	b.n	8014546 <??state_mngr_alloc_state_mchn_5>

0801452c <??state_mngr_alloc_state_mchn_4>:
 801452c:	7b91      	ldrb	r1, [r2, #14]
 801452e:	2908      	cmp	r1, #8
 8014530:	bfb8      	it	lt
 8014532:	2b08      	cmplt	r3, #8
 8014534:	da07      	bge.n	8014546 <??state_mngr_alloc_state_mchn_5>
 8014536:	54d0      	strb	r0, [r2, r3]
 8014538:	1c49      	adds	r1, r1, #1
 801453a:	18d4      	adds	r4, r2, r3
 801453c:	7391      	strb	r1, [r2, #14]
 801453e:	e002      	b.n	8014546 <??state_mngr_alloc_state_mchn_5>

08014540 <??state_mngr_alloc_state_mchn_2>:
 8014540:	2000      	movs	r0, #0
 8014542:	f7eb fe45 	bl	80001d0 <bsp_assert>

08014546 <??state_mngr_alloc_state_mchn_5>:
 8014546:	4620      	mov	r0, r4
 8014548:	bd10      	pop	{r4, pc}

0801454a <state_mngr_get_num_states>:
 801454a:	2000      	movs	r0, #0
 801454c:	2200      	movs	r2, #0
 801454e:	4b37      	ldr	r3, [pc, #220]	; (801462c <??DataTable6>)

08014550 <??state_mngr_get_num_states_0>:
 8014550:	7819      	ldrb	r1, [r3, #0]
 8014552:	b101      	cbz	r1, 8014556 <??state_mngr_get_num_states_1>
 8014554:	1c40      	adds	r0, r0, #1

08014556 <??state_mngr_get_num_states_1>:
 8014556:	7859      	ldrb	r1, [r3, #1]
 8014558:	1c52      	adds	r2, r2, #1
 801455a:	b101      	cbz	r1, 801455e <??state_mngr_get_num_states_2>
 801455c:	1c40      	adds	r0, r0, #1

0801455e <??state_mngr_get_num_states_2>:
 801455e:	1c52      	adds	r2, r2, #1
 8014560:	1c9b      	adds	r3, r3, #2
 8014562:	2a0a      	cmp	r2, #10
 8014564:	d3f4      	bcc.n	8014550 <??state_mngr_get_num_states_0>
 8014566:	4770      	bx	lr

08014568 <state_mngr_get_num_concurrent_states>:
 8014568:	4830      	ldr	r0, [pc, #192]	; (801462c <??DataTable6>)
 801456a:	7b80      	ldrb	r0, [r0, #14]
 801456c:	4770      	bx	lr
	...

08014570 <state_mngr_update_state>:
 8014570:	2230      	movs	r2, #48	; 0x30
 8014572:	4b2e      	ldr	r3, [pc, #184]	; (801462c <??DataTable6>)
 8014574:	b430      	push	{r4, r5}
 8014576:	4298      	cmp	r0, r3
 8014578:	bf24      	itt	cs
 801457a:	f103 050a 	addcs.w	r5, r3, #10
 801457e:	4285      	cmpcs	r5, r0
 8014580:	d316      	bcc.n	80145b0 <??state_mngr_update_state_2>
 8014582:	2906      	cmp	r1, #6
 8014584:	d814      	bhi.n	80145b0 <??state_mngr_update_state_2>
 8014586:	e8df f001 	tbb	[pc, r1]

0801458a <??state_mngr_update_state_0>:
 801458a:	1104 1311 2413 002c                         .....$,.

08014592 <??state_mngr_update_state_3>:
 8014592:	7805      	ldrb	r5, [r0, #0]
 8014594:	7b9a      	ldrb	r2, [r3, #14]
 8014596:	1e6d      	subs	r5, r5, #1
 8014598:	2d05      	cmp	r5, #5
 801459a:	4614      	mov	r4, r2
 801459c:	d805      	bhi.n	80145aa <??state_mngr_update_state_4>
 801459e:	e8df f005 	tbb	[pc, r5]

080145a2 <??state_mngr_update_state_1>:
 80145a2:	1103 030a 0303                              ......

080145a8 <??state_mngr_update_state_5>:
 80145a8:	1e54      	subs	r4, r2, #1

080145aa <??state_mngr_update_state_4>:
 80145aa:	739c      	strb	r4, [r3, #14]

080145ac <??state_mngr_update_state_6>:
 80145ac:	7001      	strb	r1, [r0, #0]
 80145ae:	2200      	movs	r2, #0

080145b0 <??state_mngr_update_state_2>:
 80145b0:	4610      	mov	r0, r2
 80145b2:	bc30      	pop	{r4, r5}
 80145b4:	4770      	bx	lr

080145b6 <??state_mngr_update_state_7>:
 80145b6:	f103 0509 	add.w	r5, r3, #9
 80145ba:	42a8      	cmp	r0, r5
 80145bc:	d1f4      	bne.n	80145a8 <??state_mngr_update_state_5>
 80145be:	2200      	movs	r2, #0
 80145c0:	731a      	strb	r2, [r3, #12]
 80145c2:	e7f2      	b.n	80145aa <??state_mngr_update_state_4>

080145c4 <??state_mngr_update_state_8>:
 80145c4:	f103 0508 	add.w	r5, r3, #8
 80145c8:	42a8      	cmp	r0, r5
 80145ca:	d1ed      	bne.n	80145a8 <??state_mngr_update_state_5>
 80145cc:	2200      	movs	r2, #0
 80145ce:	735a      	strb	r2, [r3, #13]
 80145d0:	e7eb      	b.n	80145aa <??state_mngr_update_state_4>

080145d2 <??state_mngr_update_state_9>:
 80145d2:	7803      	ldrb	r3, [r0, #0]
 80145d4:	2b01      	cmp	r3, #1
 80145d6:	bf18      	it	ne
 80145d8:	2b04      	cmpne	r3, #4
 80145da:	d0e7      	beq.n	80145ac <??state_mngr_update_state_6>
 80145dc:	2b06      	cmp	r3, #6

080145de <??state_mngr_update_state_10>:
 80145de:	d1e7      	bne.n	80145b0 <??state_mngr_update_state_2>
 80145e0:	e7e4      	b.n	80145ac <??state_mngr_update_state_6>

080145e2 <??state_mngr_update_state_11>:
 80145e2:	7803      	ldrb	r3, [r0, #0]
 80145e4:	2b05      	cmp	r3, #5
 80145e6:	e7fa      	b.n	80145de <??state_mngr_update_state_10>

080145e8 <state_mngr_check_state>:
 80145e8:	b4b0      	push	{r4, r5, r7}
 80145ea:	4601      	mov	r1, r0
 80145ec:	4b0f      	ldr	r3, [pc, #60]	; (801462c <??DataTable6>)
 80145ee:	2200      	movs	r2, #0
 80145f0:	2000      	movs	r0, #0
 80145f2:	461c      	mov	r4, r3

080145f4 <??state_mngr_check_state_0>:
 80145f4:	f814 5b01 	ldrb.w	r5, [r4], #1
 80145f8:	428d      	cmp	r5, r1
 80145fa:	d005      	beq.n	8014608 <??state_mngr_check_state_1>
 80145fc:	1c52      	adds	r2, r2, #1
 80145fe:	b2d7      	uxtb	r7, r2
 8014600:	2f0a      	cmp	r7, #10
 8014602:	dbf7      	blt.n	80145f4 <??state_mngr_check_state_0>
 8014604:	bcb0      	pop	{r4, r5, r7}
 8014606:	4770      	bx	lr

08014608 <??state_mngr_check_state_1>:
 8014608:	b2d2      	uxtb	r2, r2
 801460a:	1898      	adds	r0, r3, r2
 801460c:	bcb0      	pop	{r4, r5, r7}
 801460e:	4770      	bx	lr

08014610 <state_mngr_get_state_type>:
 8014610:	b510      	push	{r4, lr}
 8014612:	240e      	movs	r4, #14
 8014614:	4a05      	ldr	r2, [pc, #20]	; (801462c <??DataTable6>)
 8014616:	4290      	cmp	r0, r2
 8014618:	bf24      	itt	cs
 801461a:	320a      	addcs	r2, #10
 801461c:	4282      	cmpcs	r2, r0
 801461e:	bf2e      	itee	cs
 8014620:	7804      	ldrbcs	r4, [r0, #0]
 8014622:	2000      	movcc	r0, #0
 8014624:	f7eb fdd4 	blcc	80001d0 <bsp_assert>
 8014628:	4620      	mov	r0, r4
 801462a:	bd10      	pop	{r4, pc}

0801462c <??DataTable6>:
 801462c:	1a5c 2000                                   \.. 

08014630 <sys_shared_init>:
 8014630:	4809      	ldr	r0, [pc, #36]	; (8014658 <??DataTable0>)
 8014632:	6801      	ldr	r1, [r0, #0]
 8014634:	2901      	cmp	r1, #1
 8014636:	d100      	bne.n	801463a <??sys_shared_init_0>
 8014638:	4770      	bx	lr

0801463a <??sys_shared_init_0>:
 801463a:	b580      	push	{r7, lr}
 801463c:	2201      	movs	r2, #1
 801463e:	6002      	str	r2, [r0, #0]
 8014640:	f7eb fdaa 	bl	8000198 <bsp_init>
 8014644:	f7fa f9b6 	bl	800e9b4 <ll_mem_init>
 8014648:	f7eb fe00 	bl	800024c <emngr_init>
 801464c:	f7fe f964 	bl	8012918 <os_wrapper_init>
 8014650:	e8bd 4001 	ldmia.w	sp!, {r0, lr}
 8014654:	f7f7 be20 	b.w	800c298 <llhwc_cmn_init>

08014658 <??DataTable0>:
 8014658:	1a6c 2000                                   l.. 

0801465c <sys_factory_reset>:
 801465c:	b580      	push	{r7, lr}
 801465e:	f7eb fe0d 	bl	800027c <emngr_reset>
 8014662:	f7fe f95b 	bl	801291c <os_wrapper_reset>
 8014666:	f7f7 fd53 	bl	800c110 <llhwc_cmn_reset>
 801466a:	e8bd 4001 	ldmia.w	sp!, {r0, lr}
 801466e:	f7ef bdf7 	b.w	8004260 <ll_intf_reset>
	...

08014674 <ble_mem_init>:
 8014674:	b538      	push	{r3, r4, r5, lr}
 8014676:	4c31      	ldr	r4, [pc, #196]	; (801473c <??DataTable1>)
 8014678:	2504      	movs	r5, #4
 801467a:	f641 309c 	movw	r0, #7068	; 0x1b9c
 801467e:	9500      	str	r5, [sp, #0]
 8014680:	2303      	movs	r3, #3
 8014682:	2230      	movs	r2, #48	; 0x30
 8014684:	4621      	mov	r1, r4
 8014686:	4420      	add	r0, r4
 8014688:	f7fa f9c4 	bl	800ea14 <mem_pool_init>
 801468c:	2105      	movs	r1, #5
 801468e:	9100      	str	r1, [sp, #0]
 8014690:	f641 30a4 	movw	r0, #7076	; 0x1ba4
 8014694:	230b      	movs	r3, #11
 8014696:	22a0      	movs	r2, #160	; 0xa0
 8014698:	f104 019c 	add.w	r1, r4, #156	; 0x9c
 801469c:	4420      	add	r0, r4
 801469e:	f7fa f9b9 	bl	800ea14 <mem_pool_init>
 80146a2:	2106      	movs	r1, #6
 80146a4:	9100      	str	r1, [sp, #0]
 80146a6:	f641 30ac 	movw	r0, #7084	; 0x1bac
 80146aa:	2308      	movs	r3, #8
 80146ac:	f44f 72a0 	mov.w	r2, #320	; 0x140
 80146b0:	f504 61f5 	add.w	r1, r4, #1960	; 0x7a8
 80146b4:	4420      	add	r0, r4
 80146b6:	f7fa f9ad 	bl	800ea14 <mem_pool_init>
 80146ba:	2107      	movs	r1, #7
 80146bc:	9100      	str	r1, [sp, #0]
 80146be:	f241 10c8 	movw	r0, #4552	; 0x11c8
 80146c2:	1821      	adds	r1, r4, r0
 80146c4:	f641 35b4 	movw	r5, #7092	; 0x1bb4
 80146c8:	237b      	movs	r3, #123	; 0x7b
 80146ca:	2210      	movs	r2, #16
 80146cc:	1960      	adds	r0, r4, r5
 80146ce:	f7fa f9a1 	bl	800ea14 <mem_pool_init>
 80146d2:	2008      	movs	r0, #8
 80146d4:	9000      	str	r0, [sp, #0]
 80146d6:	f641 3164 	movw	r1, #7012	; 0x1b64
 80146da:	f641 30bc 	movw	r0, #7100	; 0x1bbc
 80146de:	2302      	movs	r3, #2
 80146e0:	2218      	movs	r2, #24
 80146e2:	4421      	add	r1, r4
 80146e4:	4420      	add	r0, r4
 80146e6:	e025      	b.n	8014734 <?Subroutine0>

080146e8 <ble_mem_shared_reset>:
 80146e8:	b538      	push	{r3, r4, r5, lr}
 80146ea:	4c15      	ldr	r4, [pc, #84]	; (8014740 <??DataTable1_1>)
 80146ec:	2509      	movs	r5, #9
 80146ee:	9500      	str	r5, [sp, #0]
 80146f0:	2308      	movs	r3, #8
 80146f2:	f240 1285 	movw	r2, #389	; 0x185
 80146f6:	4913      	ldr	r1, [pc, #76]	; (8014744 <??DataTable1_2>)
 80146f8:	4620      	mov	r0, r4
 80146fa:	f7fa f98b 	bl	800ea14 <mem_pool_init>
 80146fe:	220a      	movs	r2, #10
 8014700:	9200      	str	r2, [sp, #0]
 8014702:	230c      	movs	r3, #12
 8014704:	2230      	movs	r2, #48	; 0x30
 8014706:	4910      	ldr	r1, [pc, #64]	; (8014748 <??DataTable1_3>)
 8014708:	f104 0010 	add.w	r0, r4, #16
 801470c:	f7fa f982 	bl	800ea14 <mem_pool_init>
 8014710:	200b      	movs	r0, #11
 8014712:	4d0e      	ldr	r5, [pc, #56]	; (801474c <??DataTable1_4>)
 8014714:	9000      	str	r0, [sp, #0]
 8014716:	2300      	movs	r3, #0
 8014718:	2200      	movs	r2, #0
 801471a:	4629      	mov	r1, r5
 801471c:	f104 0018 	add.w	r0, r4, #24
 8014720:	f7fa f978 	bl	800ea14 <mem_pool_init>
 8014724:	200c      	movs	r0, #12
 8014726:	9000      	str	r0, [sp, #0]
 8014728:	2327      	movs	r3, #39	; 0x27
 801472a:	f44f 7295 	mov.w	r2, #298	; 0x12a
 801472e:	4629      	mov	r1, r5
 8014730:	f104 0008 	add.w	r0, r4, #8

08014734 <?Subroutine0>:
 8014734:	f7fa f96e 	bl	800ea14 <mem_pool_init>
 8014738:	bd31      	pop	{r0, r4, r5, pc}
	...

0801473c <??DataTable1>:
 801473c:	1a70 2000                                   p.. 

08014740 <??DataTable1_1>:
 8014740:	3634 2000                                   46. 

08014744 <??DataTable1_2>:
 8014744:	8294 4802                                   ...H

08014748 <??DataTable1_3>:
 8014748:	8ef4 4802                                   ...H

0801474c <??DataTable1_4>:
 801474c:	9164 4802                                   d..H

08014750 <ble_get_mem_shrd_end>:
 8014750:	f643 50b4 	movw	r0, #15796	; 0x3db4
 8014754:	4770      	bx	lr

08014756 <ble_get_hci_transport_evnt_count>:
 8014756:	202b      	movs	r0, #43	; 0x2b
 8014758:	4770      	bx	lr
	...

0801475c <ble_time_comp>:
 801475c:	6802      	ldr	r2, [r0, #0]
 801475e:	680b      	ldr	r3, [r1, #0]
 8014760:	4293      	cmp	r3, r2
 8014762:	d305      	bcc.n	8014770 <??ble_time_comp_0>
 8014764:	429a      	cmp	r2, r3
 8014766:	d307      	bcc.n	8014778 <??ble_time_comp_1>
 8014768:	6840      	ldr	r0, [r0, #4]
 801476a:	6849      	ldr	r1, [r1, #4]
 801476c:	4281      	cmp	r1, r0
 801476e:	d201      	bcs.n	8014774 <??ble_time_comp_2>

08014770 <??ble_time_comp_0>:
 8014770:	2001      	movs	r0, #1
 8014772:	4770      	bx	lr

08014774 <??ble_time_comp_2>:
 8014774:	4288      	cmp	r0, r1
 8014776:	d202      	bcs.n	801477e <??ble_time_comp_3>

08014778 <??ble_time_comp_1>:
 8014778:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 801477c:	4770      	bx	lr

0801477e <??ble_time_comp_3>:
 801477e:	2000      	movs	r0, #0
 8014780:	4770      	bx	lr

08014782 <ble_time_diff_us>:
 8014782:	4602      	mov	r2, r0
 8014784:	6850      	ldr	r0, [r2, #4]
 8014786:	684b      	ldr	r3, [r1, #4]
 8014788:	6812      	ldr	r2, [r2, #0]
 801478a:	6809      	ldr	r1, [r1, #0]
 801478c:	4291      	cmp	r1, r2
 801478e:	d30e      	bcc.n	80147ae <??ble_time_diff_us_0>
 8014790:	428a      	cmp	r2, r1
 8014792:	d303      	bcc.n	801479c <??ble_time_diff_us_1>
 8014794:	4283      	cmp	r3, r0
 8014796:	d30a      	bcc.n	80147ae <??ble_time_diff_us_0>
 8014798:	4298      	cmp	r0, r3
 801479a:	d208      	bcs.n	80147ae <??ble_time_diff_us_0>

0801479c <??ble_time_diff_us_1>:
 801479c:	1a8a      	subs	r2, r1, r2
 801479e:	4283      	cmp	r3, r0
 80147a0:	d317      	bcc.n	80147d2 <??ble_time_diff_us_2>
 80147a2:	ebc2 1142 	rsb	r1, r2, r2, lsl #5
 80147a6:	eb01 0192 	add.w	r1, r1, r2, lsr #2
 80147aa:	185b      	adds	r3, r3, r1
 80147ac:	e018      	b.n	80147e0 <??ble_time_diff_us_3>

080147ae <??ble_time_diff_us_0>:
 80147ae:	1a52      	subs	r2, r2, r1
 80147b0:	4298      	cmp	r0, r3
 80147b2:	d305      	bcc.n	80147c0 <??ble_time_diff_us_4>
 80147b4:	ebc2 1c42 	rsb	ip, r2, r2, lsl #5
 80147b8:	eb0c 0c92 	add.w	ip, ip, r2, lsr #2
 80147bc:	4460      	add	r0, ip
 80147be:	e006      	b.n	80147ce <??ble_time_diff_us_5>

080147c0 <??ble_time_diff_us_4>:
 80147c0:	1e52      	subs	r2, r2, #1
 80147c2:	ebc2 1142 	rsb	r1, r2, r2, lsl #5
 80147c6:	eb01 0192 	add.w	r1, r1, r2, lsr #2
 80147ca:	1840      	adds	r0, r0, r1
 80147cc:	301f      	adds	r0, #31

080147ce <??ble_time_diff_us_5>:
 80147ce:	1ac0      	subs	r0, r0, r3
 80147d0:	4770      	bx	lr

080147d2 <??ble_time_diff_us_2>:
 80147d2:	1e52      	subs	r2, r2, #1
 80147d4:	ebc2 1142 	rsb	r1, r2, r2, lsl #5
 80147d8:	eb01 0192 	add.w	r1, r1, r2, lsr #2
 80147dc:	185b      	adds	r3, r3, r1
 80147de:	331f      	adds	r3, #31

080147e0 <??ble_time_diff_us_3>:
 80147e0:	1a18      	subs	r0, r3, r0
 80147e2:	4770      	bx	lr

080147e4 <ble_time_set>:
 80147e4:	680a      	ldr	r2, [r1, #0]
 80147e6:	6002      	str	r2, [r0, #0]
 80147e8:	6849      	ldr	r1, [r1, #4]
 80147ea:	6041      	str	r1, [r0, #4]
 80147ec:	4770      	bx	lr
	...

080147f0 <ble_time_set_uint>:
 80147f0:	1e52      	subs	r2, r2, #1
 80147f2:	b430      	push	{r4, r5}
 80147f4:	460b      	mov	r3, r1
 80147f6:	2a04      	cmp	r2, #4
 80147f8:	d830      	bhi.n	801485c <??ble_time_set_uint_1>
 80147fa:	e8df f002 	tbb	[pc, r2]

080147fe <??ble_time_set_uint_0>:
 80147fe:	0f03 221b 0016                              ..."..

08014804 <??ble_time_set_uint_2>:
 8014804:	009a      	lsls	r2, r3, #2
 8014806:	4d8d      	ldr	r5, [pc, #564]	; (8014a3c <??DataTable4>)
 8014808:	fba2 5405 	umull	r5, r4, r2, r5
 801480c:	09a2      	lsrs	r2, r4, #6
 801480e:	ebc2 1142 	rsb	r1, r2, r2, lsl #5
 8014812:	6002      	str	r2, [r0, #0]
 8014814:	1a5b      	subs	r3, r3, r1
 8014816:	eba3 0392 	sub.w	r3, r3, r2, lsr #2
 801481a:	e01c      	b.n	8014856 <??ble_time_set_uint_3>

0801481c <??ble_time_set_uint_4>:
 801481c:	eb03 0483 	add.w	r4, r3, r3, lsl #2
 8014820:	00a4      	lsls	r4, r4, #2
 8014822:	6004      	str	r4, [r0, #0]
 8014824:	f240 2271 	movw	r2, #625	; 0x271
 8014828:	e00f      	b.n	801484a <??ble_time_set_uint_5>

0801482a <??ble_time_set_uint_6>:
 801482a:	6003      	str	r3, [r0, #0]
 801482c:	2100      	movs	r1, #0
 801482e:	6041      	str	r1, [r0, #4]
 8014830:	bc30      	pop	{r4, r5}
 8014832:	4770      	bx	lr

08014834 <??ble_time_set_uint_7>:
 8014834:	eb03 0483 	add.w	r4, r3, r3, lsl #2
 8014838:	00e4      	lsls	r4, r4, #3
 801483a:	6004      	str	r4, [r0, #0]
 801483c:	f240 42e2 	movw	r2, #1250	; 0x4e2
 8014840:	e003      	b.n	801484a <??ble_time_set_uint_5>

08014842 <??ble_time_set_uint_8>:
 8014842:	015c      	lsls	r4, r3, #5
 8014844:	6004      	str	r4, [r0, #0]
 8014846:	f44f 727a 	mov.w	r2, #1000	; 0x3e8

0801484a <??ble_time_set_uint_5>:
 801484a:	4353      	muls	r3, r2
 801484c:	ebc4 1144 	rsb	r1, r4, r4, lsl #5
 8014850:	1a5b      	subs	r3, r3, r1
 8014852:	eba3 0394 	sub.w	r3, r3, r4, lsr #2

08014856 <??ble_time_set_uint_3>:
 8014856:	6043      	str	r3, [r0, #4]
 8014858:	bc30      	pop	{r4, r5}
 801485a:	4770      	bx	lr

0801485c <??ble_time_set_uint_1>:
 801485c:	2011      	movs	r0, #17
 801485e:	bc30      	pop	{r4, r5}
 8014860:	f7eb bcb6 	b.w	80001d0 <bsp_assert>

08014864 <ble_time_add>:
 8014864:	6843      	ldr	r3, [r0, #4]
 8014866:	684a      	ldr	r2, [r1, #4]
 8014868:	6809      	ldr	r1, [r1, #0]
 801486a:	18d3      	adds	r3, r2, r3
 801486c:	6802      	ldr	r2, [r0, #0]
 801486e:	188a      	adds	r2, r1, r2
 8014870:	2b1f      	cmp	r3, #31
 8014872:	bf88      	it	hi
 8014874:	1c52      	addhi	r2, r2, #1
 8014876:	f8df c1c8 	ldr.w	ip, [pc, #456]	; 8014a40 <??DataTable4_1>
 801487a:	2100      	movs	r1, #0
 801487c:	fbe3 c10c 	umlal	ip, r1, r3, ip
 8014880:	0909      	lsrs	r1, r1, #4
 8014882:	ebc1 1141 	rsb	r1, r1, r1, lsl #5
 8014886:	1a5b      	subs	r3, r3, r1
 8014888:	6043      	str	r3, [r0, #4]
 801488a:	6002      	str	r2, [r0, #0]
 801488c:	4770      	bx	lr
	...

08014890 <ble_time_add_uint>:
 8014890:	b478      	push	{r3, r4, r5, r6}
 8014892:	1e52      	subs	r2, r2, #1
 8014894:	460b      	mov	r3, r1
 8014896:	2a04      	cmp	r2, #4
 8014898:	d850      	bhi.n	801493c <??ble_time_add_uint_1>
 801489a:	e8df f002 	tbb	[pc, r2]

0801489e <??ble_time_add_uint_0>:
 801489e:	1303 3622 001d                              .."6..

080148a4 <??ble_time_add_uint_2>:
 80148a4:	0099      	lsls	r1, r3, #2
 80148a6:	4c65      	ldr	r4, [pc, #404]	; (8014a3c <??DataTable4>)
 80148a8:	fba1 4204 	umull	r4, r2, r1, r4
 80148ac:	6805      	ldr	r5, [r0, #0]
 80148ae:	0992      	lsrs	r2, r2, #6
 80148b0:	ebc2 1142 	rsb	r1, r2, r2, lsl #5
 80148b4:	1955      	adds	r5, r2, r5
 80148b6:	6005      	str	r5, [r0, #0]
 80148b8:	6846      	ldr	r6, [r0, #4]
 80148ba:	199b      	adds	r3, r3, r6
 80148bc:	1a5b      	subs	r3, r3, r1
 80148be:	eba3 0392 	sub.w	r3, r3, r2, lsr #2
 80148c2:	e01e      	b.n	8014902 <??ble_time_add_uint_3>

080148c4 <??ble_time_add_uint_4>:
 80148c4:	6805      	ldr	r5, [r0, #0]
 80148c6:	eb03 0183 	add.w	r1, r3, r3, lsl #2
 80148ca:	008c      	lsls	r4, r1, #2
 80148cc:	1965      	adds	r5, r4, r5
 80148ce:	6005      	str	r5, [r0, #0]
 80148d0:	6846      	ldr	r6, [r0, #4]
 80148d2:	f240 2271 	movw	r2, #625	; 0x271
 80148d6:	e00d      	b.n	80148f4 <??ble_time_add_uint_5>

080148d8 <??ble_time_add_uint_6>:
 80148d8:	6801      	ldr	r1, [r0, #0]
 80148da:	185b      	adds	r3, r3, r1
 80148dc:	6003      	str	r3, [r0, #0]
 80148de:	bc71      	pop	{r0, r4, r5, r6}
 80148e0:	4770      	bx	lr

080148e2 <??ble_time_add_uint_7>:
 80148e2:	6805      	ldr	r5, [r0, #0]
 80148e4:	eb03 0283 	add.w	r2, r3, r3, lsl #2
 80148e8:	00d4      	lsls	r4, r2, #3
 80148ea:	1965      	adds	r5, r4, r5
 80148ec:	6005      	str	r5, [r0, #0]
 80148ee:	6846      	ldr	r6, [r0, #4]
 80148f0:	f240 42e2 	movw	r2, #1250	; 0x4e2

080148f4 <??ble_time_add_uint_5>:
 80148f4:	fb02 6303 	mla	r3, r2, r3, r6
 80148f8:	ebc4 1144 	rsb	r1, r4, r4, lsl #5
 80148fc:	1a5b      	subs	r3, r3, r1
 80148fe:	eba3 0394 	sub.w	r3, r3, r4, lsr #2

08014902 <??ble_time_add_uint_3>:
 8014902:	6043      	str	r3, [r0, #4]
 8014904:	2b1f      	cmp	r3, #31
 8014906:	d91a      	bls.n	801493e <??ble_time_add_uint_8>
 8014908:	e010      	b.n	801492c <??ble_time_add_uint_9>

0801490a <??ble_time_add_uint_10>:
 801490a:	6801      	ldr	r1, [r0, #0]
 801490c:	015c      	lsls	r4, r3, #5
 801490e:	f44f 727a 	mov.w	r2, #1000	; 0x3e8
 8014912:	1861      	adds	r1, r4, r1
 8014914:	6001      	str	r1, [r0, #0]
 8014916:	6845      	ldr	r5, [r0, #4]
 8014918:	ebc4 1144 	rsb	r1, r4, r4, lsl #5
 801491c:	fb02 5303 	mla	r3, r2, r3, r5
 8014920:	1a5b      	subs	r3, r3, r1
 8014922:	eba3 0394 	sub.w	r3, r3, r4, lsr #2
 8014926:	6043      	str	r3, [r0, #4]
 8014928:	2b1f      	cmp	r3, #31
 801492a:	d908      	bls.n	801493e <??ble_time_add_uint_8>

0801492c <??ble_time_add_uint_9>:
 801492c:	6801      	ldr	r1, [r0, #0]
 801492e:	1c49      	adds	r1, r1, #1
 8014930:	6001      	str	r1, [r0, #0]
 8014932:	6842      	ldr	r2, [r0, #4]
 8014934:	3a1f      	subs	r2, #31
 8014936:	6042      	str	r2, [r0, #4]
 8014938:	bc71      	pop	{r0, r4, r5, r6}
 801493a:	4770      	bx	lr

0801493c <??ble_time_add_uint_1>:
 801493c:	e079      	b.n	8014a32 <??ble_time_rmv_uint_1>

0801493e <??ble_time_add_uint_8>:
 801493e:	bc71      	pop	{r0, r4, r5, r6}
 8014940:	4770      	bx	lr

08014942 <ble_time_rmv>:
 8014942:	b510      	push	{r4, lr}
 8014944:	4604      	mov	r4, r0
 8014946:	6820      	ldr	r0, [r4, #0]
 8014948:	680a      	ldr	r2, [r1, #0]
 801494a:	4282      	cmp	r2, r0
 801494c:	d307      	bcc.n	801495e <??ble_time_rmv_0>
 801494e:	4290      	cmp	r0, r2
 8014950:	d315      	bcc.n	801497e <??ble_time_rmv_1>
 8014952:	6862      	ldr	r2, [r4, #4]
 8014954:	684b      	ldr	r3, [r1, #4]
 8014956:	4293      	cmp	r3, r2
 8014958:	d301      	bcc.n	801495e <??ble_time_rmv_0>
 801495a:	429a      	cmp	r2, r3
 801495c:	d30f      	bcc.n	801497e <??ble_time_rmv_1>

0801495e <??ble_time_rmv_0>:
 801495e:	6862      	ldr	r2, [r4, #4]
 8014960:	684b      	ldr	r3, [r1, #4]
 8014962:	429a      	cmp	r2, r3
 8014964:	d205      	bcs.n	8014972 <??ble_time_rmv_2>
 8014966:	1e40      	subs	r0, r0, #1
 8014968:	6020      	str	r0, [r4, #0]
 801496a:	6848      	ldr	r0, [r1, #4]
 801496c:	321f      	adds	r2, #31
 801496e:	1a12      	subs	r2, r2, r0
 8014970:	e000      	b.n	8014974 <??ble_time_rmv_3>

08014972 <??ble_time_rmv_2>:
 8014972:	1ad2      	subs	r2, r2, r3

08014974 <??ble_time_rmv_3>:
 8014974:	6062      	str	r2, [r4, #4]
 8014976:	6822      	ldr	r2, [r4, #0]
 8014978:	6808      	ldr	r0, [r1, #0]
 801497a:	1a12      	subs	r2, r2, r0
 801497c:	6022      	str	r2, [r4, #0]

0801497e <??ble_time_rmv_1>:
 801497e:	2000      	movs	r0, #0
 8014980:	f7eb fc26 	bl	80001d0 <bsp_assert>
 8014984:	2100      	movs	r1, #0
 8014986:	6021      	str	r1, [r4, #0]
 8014988:	6061      	str	r1, [r4, #4]
 801498a:	bd10      	pop	{r4, pc}

0801498c <ble_time_rmv_uint>:
 801498c:	1e52      	subs	r2, r2, #1
 801498e:	b478      	push	{r3, r4, r5, r6}
 8014990:	2a04      	cmp	r2, #4
 8014992:	d84e      	bhi.n	8014a32 <??ble_time_rmv_uint_1>
 8014994:	e8df f002 	tbb	[pc, r2]

08014998 <??ble_time_rmv_uint_0>:
 8014998:	1503 3a28 0023                              ..(:#.

0801499e <??ble_time_rmv_uint_2>:
 801499e:	008b      	lsls	r3, r1, #2
 80149a0:	4d26      	ldr	r5, [pc, #152]	; (8014a3c <??DataTable4>)
 80149a2:	fba3 5405 	umull	r5, r4, r3, r5
 80149a6:	6806      	ldr	r6, [r0, #0]
 80149a8:	09a3      	lsrs	r3, r4, #6
 80149aa:	ebc3 1243 	rsb	r2, r3, r3, lsl #5
 80149ae:	1af6      	subs	r6, r6, r3
 80149b0:	6006      	str	r6, [r0, #0]
 80149b2:	1a89      	subs	r1, r1, r2
 80149b4:	eba1 0193 	sub.w	r1, r1, r3, lsr #2
 80149b8:	6843      	ldr	r3, [r0, #4]
 80149ba:	428b      	cmp	r3, r1
 80149bc:	d330      	bcc.n	8014a20 <??ble_time_rmv_uint_3>

080149be <??ble_time_rmv_uint_4>:
 80149be:	6842      	ldr	r2, [r0, #4]
 80149c0:	e033      	b.n	8014a2a <??ble_time_rmv_uint_5>

080149c2 <??ble_time_rmv_uint_6>:
 80149c2:	6803      	ldr	r3, [r0, #0]
 80149c4:	f06f 0213 	mvn.w	r2, #19
 80149c8:	eb01 0581 	add.w	r5, r1, r1, lsl #2
 80149cc:	fb02 3301 	mla	r3, r2, r1, r3
 80149d0:	eb01 0481 	add.w	r4, r1, r1, lsl #2
 80149d4:	00ad      	lsls	r5, r5, #2
 80149d6:	6003      	str	r3, [r0, #0]
 80149d8:	eba4 0195 	sub.w	r1, r4, r5, lsr #2
 80149dc:	e012      	b.n	8014a04 <??ble_time_rmv_uint_7>

080149de <??ble_time_rmv_uint_8>:
 80149de:	6803      	ldr	r3, [r0, #0]
 80149e0:	18c9      	adds	r1, r1, r3
 80149e2:	6001      	str	r1, [r0, #0]
 80149e4:	bc71      	pop	{r0, r4, r5, r6}
 80149e6:	4770      	bx	lr

080149e8 <??ble_time_rmv_uint_9>:
 80149e8:	6804      	ldr	r4, [r0, #0]
 80149ea:	f06f 0227 	mvn.w	r2, #39	; 0x27
 80149ee:	eb01 0381 	add.w	r3, r1, r1, lsl #2
 80149f2:	fb02 4401 	mla	r4, r2, r1, r4
 80149f6:	eb01 0581 	add.w	r5, r1, r1, lsl #2
 80149fa:	00e9      	lsls	r1, r5, #3
 80149fc:	0889      	lsrs	r1, r1, #2
 80149fe:	6004      	str	r4, [r0, #0]
 8014a00:	ebc1 0143 	rsb	r1, r1, r3, lsl #1

08014a04 <??ble_time_rmv_uint_7>:
 8014a04:	6842      	ldr	r2, [r0, #4]
 8014a06:	428a      	cmp	r2, r1
 8014a08:	d2d9      	bcs.n	80149be <??ble_time_rmv_uint_4>
 8014a0a:	e009      	b.n	8014a20 <??ble_time_rmv_uint_3>

08014a0c <??ble_time_rmv_uint_10>:
 8014a0c:	6803      	ldr	r3, [r0, #0]
 8014a0e:	014a      	lsls	r2, r1, #5
 8014a10:	00c9      	lsls	r1, r1, #3
 8014a12:	18d3      	adds	r3, r2, r3
 8014a14:	6003      	str	r3, [r0, #0]
 8014a16:	eba1 0192 	sub.w	r1, r1, r2, lsr #2
 8014a1a:	6842      	ldr	r2, [r0, #4]
 8014a1c:	428a      	cmp	r2, r1
 8014a1e:	d2ce      	bcs.n	80149be <??ble_time_rmv_uint_4>

08014a20 <??ble_time_rmv_uint_3>:
 8014a20:	6803      	ldr	r3, [r0, #0]
 8014a22:	1e5b      	subs	r3, r3, #1
 8014a24:	6003      	str	r3, [r0, #0]
 8014a26:	6842      	ldr	r2, [r0, #4]
 8014a28:	321f      	adds	r2, #31

08014a2a <??ble_time_rmv_uint_5>:
 8014a2a:	1a51      	subs	r1, r2, r1
 8014a2c:	6041      	str	r1, [r0, #4]
 8014a2e:	bc71      	pop	{r0, r4, r5, r6}
 8014a30:	4770      	bx	lr

08014a32 <??ble_time_rmv_uint_1>:
 8014a32:	2011      	movs	r0, #17
 8014a34:	bc72      	pop	{r1, r4, r5, r6}
 8014a36:	f7eb bbcb 	b.w	80001d0 <bsp_assert>
	...

08014a3c <??DataTable4>:
 8014a3c:	6e98 8312                                   .n..

08014a40 <??DataTable4_1>:
 8014a40:	0842 8421                                   B.!.

08014a44 <sprvsn_timer_set>:
 8014a44:	b57c      	push	{r2, r3, r4, r5, r6, lr}
 8014a46:	0004      	movs	r4, r0
 8014a48:	bf14      	ite	ne
 8014a4a:	2001      	movne	r0, #1
 8014a4c:	2000      	moveq	r0, #0
 8014a4e:	f7eb fbbf 	bl	80001d0 <bsp_assert>
 8014a52:	f8d4 00c4 	ldr.w	r0, [r4, #196]	; 0xc4
 8014a56:	b100      	cbz	r0, 8014a5a <??sprvsn_timer_set_0>
 8014a58:	2001      	movs	r0, #1

08014a5a <??sprvsn_timer_set_0>:
 8014a5a:	f7eb fbb9 	bl	80001d0 <bsp_assert>
 8014a5e:	4668      	mov	r0, sp
 8014a60:	f001 fca5 	bl	80163ae <db_get_slp_clk_accuracy>
 8014a64:	f89d 0000 	ldrb.w	r0, [sp]
 8014a68:	f8df 6ce0 	ldr.w	r6, [pc, #3296]	; 801574c <??DataTable10>
 8014a6c:	f7ed fd52 	bl	8002514 <get_sca_ppm>
 8014a70:	8b61      	ldrh	r1, [r4, #26]
 8014a72:	eb01 0281 	add.w	r2, r1, r1, lsl #2
 8014a76:	4348      	muls	r0, r1
 8014a78:	f8df 1d14 	ldr.w	r1, [pc, #3348]	; 8015790 <??DataTable11>
 8014a7c:	fb80 3101 	smull	r3, r1, r0, r1
 8014a80:	1148      	asrs	r0, r1, #5
 8014a82:	eb00 70d0 	add.w	r0, r0, r0, lsr #31
 8014a86:	0080      	lsls	r0, r0, #2
 8014a88:	fba0 6506 	umull	r6, r5, r0, r6
 8014a8c:	f8d4 00c4 	ldr.w	r0, [r4, #196]	; 0xc4
 8014a90:	09a9      	lsrs	r1, r5, #6
 8014a92:	eb01 1182 	add.w	r1, r1, r2, lsl #6
 8014a96:	f7f0 ffb7 	bl	8005a08 <os_timer_set>
 8014a9a:	bd73      	pop	{r0, r1, r4, r5, r6, pc}

08014a9c <conn_mngr_alloc_handle>:
 8014a9c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8014a9e:	f8df 0cf4 	ldr.w	r0, [pc, #3316]	; 8015794 <??DataTable11_1>
 8014aa2:	f7f0 fbb9 	bl	8005218 <os_mem_pool_alloc>
 8014aa6:	0004      	movs	r4, r0
 8014aa8:	bf14      	ite	ne
 8014aaa:	2501      	movne	r5, #1
 8014aac:	2500      	moveq	r5, #0
 8014aae:	4628      	mov	r0, r5
 8014ab0:	f7eb fb8e 	bl	80001d0 <bsp_assert>
 8014ab4:	4628      	mov	r0, r5
 8014ab6:	f7eb fb8b 	bl	80001d0 <bsp_assert>
 8014aba:	2c00      	cmp	r4, #0
 8014abc:	d07a      	beq.n	8014bb4 <??conn_mngr_alloc_handle_0>
 8014abe:	f104 0650 	add.w	r6, r4, #80	; 0x50
 8014ac2:	200b      	movs	r0, #11
 8014ac4:	7330      	strb	r0, [r6, #12]
 8014ac6:	f44f 72a0 	mov.w	r2, #320	; 0x140
 8014aca:	2100      	movs	r1, #0
 8014acc:	4620      	mov	r0, r4
 8014ace:	f7fa f88c 	bl	800ebea <ble_memset>
 8014ad2:	f104 0746 	add.w	r7, r4, #70	; 0x46
 8014ad6:	78b8      	ldrb	r0, [r7, #2]
 8014ad8:	2100      	movs	r1, #0
 8014ada:	f104 05a0 	add.w	r5, r4, #160	; 0xa0
 8014ade:	f040 0004 	orr.w	r0, r0, #4
 8014ae2:	70b8      	strb	r0, [r7, #2]
 8014ae4:	7938      	ldrb	r0, [r7, #4]
 8014ae6:	2208      	movs	r2, #8
 8014ae8:	f040 0002 	orr.w	r0, r0, #2
 8014aec:	7138      	strb	r0, [r7, #4]
 8014aee:	6034      	str	r4, [r6, #0]
 8014af0:	7131      	strb	r1, [r6, #4]
 8014af2:	201b      	movs	r0, #27
 8014af4:	80a8      	strh	r0, [r5, #4]
 8014af6:	8028      	strh	r0, [r5, #0]
 8014af8:	f44f 70a4 	mov.w	r0, #328	; 0x148
 8014afc:	f44f 6129 	mov.w	r1, #2704	; 0xa90
 8014b00:	80e8      	strh	r0, [r5, #6]
 8014b02:	8068      	strh	r0, [r5, #2]
 8014b04:	82a8      	strh	r0, [r5, #20]
 8014b06:	82e9      	strh	r1, [r5, #22]
 8014b08:	8228      	strh	r0, [r5, #16]
 8014b0a:	8269      	strh	r1, [r5, #18]
 8014b0c:	8329      	strh	r1, [r5, #24]
 8014b0e:	4629      	mov	r1, r5
 8014b10:	f104 00a8 	add.w	r0, r4, #168	; 0xa8
 8014b14:	f7fa f818 	bl	800eb48 <ble_memcpy>
 8014b18:	f640 30b8 	movw	r0, #3000	; 0xbb8
 8014b1c:	8728      	strh	r0, [r5, #56]	; 0x38
 8014b1e:	210a      	movs	r1, #10
 8014b20:	61b4      	str	r4, [r6, #24]
 8014b22:	7731      	strb	r1, [r6, #28]
 8014b24:	4638      	mov	r0, r7
 8014b26:	f001 fc70 	bl	801640a <db_get_le_feature_info>
 8014b2a:	207b      	movs	r0, #123	; 0x7b
 8014b2c:	7038      	strb	r0, [r7, #0]
 8014b2e:	4632      	mov	r2, r6
 8014b30:	2100      	movs	r1, #0
 8014b32:	f20f 508d 	addw	r0, pc, #1421	; 0x58d
 8014b36:	f7f0 fe0c 	bl	8005752 <os_timer_create>
 8014b3a:	6268      	str	r0, [r5, #36]	; 0x24
 8014b3c:	b100      	cbz	r0, 8014b40 <??conn_mngr_alloc_handle_1>
 8014b3e:	2001      	movs	r0, #1

08014b40 <??conn_mngr_alloc_handle_1>:
 8014b40:	f7eb fb46 	bl	80001d0 <bsp_assert>
 8014b44:	f8df 3cc8 	ldr.w	r3, [pc, #3272]	; 8015810 <??DataTable12>
 8014b48:	6919      	ldr	r1, [r3, #16]
 8014b4a:	2200      	movs	r2, #0
 8014b4c:	b931      	cbnz	r1, 8014b5c <??conn_mngr_alloc_handle_2>

08014b4e <??conn_mngr_alloc_handle_3>:
 8014b4e:	f103 0010 	add.w	r0, r3, #16
 8014b52:	f840 4022 	str.w	r4, [r0, r2, lsl #2]
 8014b56:	87ea      	strh	r2, [r5, #62]	; 0x3e
 8014b58:	2001      	movs	r0, #1
 8014b5a:	e01c      	b.n	8014b96 <??conn_mngr_alloc_handle_4>

08014b5c <??conn_mngr_alloc_handle_2>:
 8014b5c:	6958      	ldr	r0, [r3, #20]
 8014b5e:	2201      	movs	r2, #1
 8014b60:	2800      	cmp	r0, #0
 8014b62:	bf1e      	ittt	ne
 8014b64:	2202      	movne	r2, #2
 8014b66:	6999      	ldrne	r1, [r3, #24]
 8014b68:	2900      	cmpne	r1, #0
 8014b6a:	d0f0      	beq.n	8014b4e <??conn_mngr_alloc_handle_3>
 8014b6c:	69d8      	ldr	r0, [r3, #28]
 8014b6e:	2203      	movs	r2, #3
 8014b70:	2800      	cmp	r0, #0
 8014b72:	bf1e      	ittt	ne
 8014b74:	2204      	movne	r2, #4
 8014b76:	6a19      	ldrne	r1, [r3, #32]
 8014b78:	2900      	cmpne	r1, #0
 8014b7a:	d0e8      	beq.n	8014b4e <??conn_mngr_alloc_handle_3>
 8014b7c:	6a58      	ldr	r0, [r3, #36]	; 0x24
 8014b7e:	2205      	movs	r2, #5
 8014b80:	2800      	cmp	r0, #0
 8014b82:	bf1e      	ittt	ne
 8014b84:	2206      	movne	r2, #6
 8014b86:	6a99      	ldrne	r1, [r3, #40]	; 0x28
 8014b88:	2900      	cmpne	r1, #0
 8014b8a:	bf1e      	ittt	ne
 8014b8c:	2207      	movne	r2, #7
 8014b8e:	6ad8      	ldrne	r0, [r3, #44]	; 0x2c
 8014b90:	2800      	cmpne	r0, #0
 8014b92:	d0dc      	beq.n	8014b4e <??conn_mngr_alloc_handle_3>
 8014b94:	2000      	movs	r0, #0

08014b96 <??conn_mngr_alloc_handle_4>:
 8014b96:	f7eb fb1b 	bl	80001d0 <bsp_assert>
 8014b9a:	f504 7096 	add.w	r0, r4, #300	; 0x12c
 8014b9e:	2101      	movs	r1, #1
 8014ba0:	7001      	strb	r1, [r0, #0]
 8014ba2:	7041      	strb	r1, [r0, #1]
 8014ba4:	8041      	strh	r1, [r0, #2]
 8014ba6:	2100      	movs	r1, #0
 8014ba8:	7101      	strb	r1, [r0, #4]
 8014baa:	7141      	strb	r1, [r0, #5]
 8014bac:	7201      	strb	r1, [r0, #8]
 8014bae:	21ff      	movs	r1, #255	; 0xff
 8014bb0:	73c1      	strb	r1, [r0, #15]
 8014bb2:	7401      	strb	r1, [r0, #16]

08014bb4 <??conn_mngr_alloc_handle_0>:
 8014bb4:	4620      	mov	r0, r4
 8014bb6:	bdf2      	pop	{r1, r4, r5, r6, r7, pc}

08014bb8 <conn_mngr_update_ststic>:
 8014bb8:	e92d 47fc 	stmdb	sp!, {r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 8014bbc:	2400      	movs	r4, #0
 8014bbe:	4605      	mov	r5, r0
 8014bc0:	460e      	mov	r6, r1
 8014bc2:	2700      	movs	r7, #0
 8014bc4:	46a0      	mov	r8, r4
 8014bc6:	b105      	cbz	r5, 8014bca <??conn_mngr_update_ststic_0>
 8014bc8:	2001      	movs	r0, #1

08014bca <??conn_mngr_update_ststic_0>:
 8014bca:	f7eb fb01 	bl	80001d0 <bsp_assert>
 8014bce:	2e00      	cmp	r6, #0
 8014bd0:	bf14      	ite	ne
 8014bd2:	2001      	movne	r0, #1
 8014bd4:	2000      	moveq	r0, #0
 8014bd6:	f7eb fafb 	bl	80001d0 <bsp_assert>
 8014bda:	f105 01dc 	add.w	r1, r5, #220	; 0xdc
 8014bde:	8808      	ldrh	r0, [r1, #0]
 8014be0:	2800      	cmp	r0, #0
 8014be2:	f040 80aa 	bne.w	8014d3a <??conn_mngr_update_ststic_1>
 8014be6:	f991 004d 	ldrsb.w	r0, [r1, #77]	; 0x4d
 8014bea:	3050      	adds	r0, #80	; 0x50
 8014bec:	283d      	cmp	r0, #61	; 0x3d
 8014bee:	f080 80a4 	bcs.w	8014d3a <??conn_mngr_update_ststic_1>
 8014bf2:	f106 0028 	add.w	r0, r6, #40	; 0x28
 8014bf6:	7901      	ldrb	r1, [r0, #4]
 8014bf8:	078a      	lsls	r2, r1, #30
 8014bfa:	f140 809e 	bpl.w	8014d3a <??conn_mngr_update_ststic_1>
 8014bfe:	f8df 6c10 	ldr.w	r6, [pc, #3088]	; 8015810 <??DataTable12>
 8014c02:	88b1      	ldrh	r1, [r6, #4]
 8014c04:	1c49      	adds	r1, r1, #1
 8014c06:	80b1      	strh	r1, [r6, #4]
 8014c08:	b289      	uxth	r1, r1
 8014c0a:	f5b1 6f7a 	cmp.w	r1, #4000	; 0xfa0
 8014c0e:	bfbc      	itt	lt
 8014c10:	7831      	ldrblt	r1, [r6, #0]
 8014c12:	2923      	cmplt	r1, #35	; 0x23
 8014c14:	db2d      	blt.n	8014c72 <??conn_mngr_update_ststic_2>
 8014c16:	4668      	mov	r0, sp
 8014c18:	f001 faee 	bl	80161f8 <db_get_host_chnl_map>
 8014c1c:	f105 0030 	add.w	r0, r5, #48	; 0x30
 8014c20:	f89d 1000 	ldrb.w	r1, [sp]
 8014c24:	7802      	ldrb	r2, [r0, #0]
 8014c26:	4291      	cmp	r1, r2
 8014c28:	bf02      	ittt	eq
 8014c2a:	f89d 2001 	ldrbeq.w	r2, [sp, #1]
 8014c2e:	7843      	ldrbeq	r3, [r0, #1]
 8014c30:	429a      	cmpeq	r2, r3
 8014c32:	d10e      	bne.n	8014c52 <??conn_mngr_update_ststic_3>
 8014c34:	f89d 2002 	ldrb.w	r2, [sp, #2]
 8014c38:	7883      	ldrb	r3, [r0, #2]
 8014c3a:	429a      	cmp	r2, r3
 8014c3c:	bf02      	ittt	eq
 8014c3e:	f89d 2003 	ldrbeq.w	r2, [sp, #3]
 8014c42:	78c3      	ldrbeq	r3, [r0, #3]
 8014c44:	429a      	cmpeq	r2, r3
 8014c46:	bf02      	ittt	eq
 8014c48:	f89d 1004 	ldrbeq.w	r1, [sp, #4]
 8014c4c:	7900      	ldrbeq	r0, [r0, #4]
 8014c4e:	4281      	cmpeq	r1, r0
 8014c50:	d06e      	beq.n	8014d30 <??conn_mngr_update_ststic_4>

08014c52 <??conn_mngr_update_ststic_3>:
 8014c52:	2205      	movs	r2, #5
 8014c54:	4669      	mov	r1, sp
 8014c56:	1db0      	adds	r0, r6, #6
 8014c58:	f7f9 ff76 	bl	800eb48 <ble_memcpy>
 8014c5c:	2100      	movs	r1, #0
 8014c5e:	7034      	strb	r4, [r6, #0]
 8014c60:	80b1      	strh	r1, [r6, #4]
 8014c62:	2294      	movs	r2, #148	; 0x94
 8014c64:	f8df 0c84 	ldr.w	r0, [pc, #3204]	; 80158ec <??DataTable13>
 8014c68:	f7f9 ffbf 	bl	800ebea <ble_memset>
 8014c6c:	2701      	movs	r7, #1
 8014c6e:	8074      	strh	r4, [r6, #2]
 8014c70:	e05e      	b.n	8014d30 <??conn_mngr_update_ststic_4>

08014c72 <??conn_mngr_update_ststic_2>:
 8014c72:	7802      	ldrb	r2, [r0, #0]
 8014c74:	f106 0c06 	add.w	ip, r6, #6
 8014c78:	2101      	movs	r1, #1
 8014c7a:	0893      	lsrs	r3, r2, #2
 8014c7c:	eb02 7553 	add.w	r5, r2, r3, lsr #29
 8014c80:	08ed      	lsrs	r5, r5, #3
 8014c82:	f81c e005 	ldrb.w	lr, [ip, r5]
 8014c86:	eba2 03c5 	sub.w	r3, r2, r5, lsl #3
 8014c8a:	fa01 f303 	lsl.w	r3, r1, r3
 8014c8e:	ea03 0e0e 	and.w	lr, r3, lr
 8014c92:	459e      	cmp	lr, r3
 8014c94:	d10e      	bne.n	8014cb4 <??conn_mngr_update_ststic_5>
 8014c96:	f8df 3c54 	ldr.w	r3, [pc, #3156]	; 80158ec <??DataTable13>
 8014c9a:	f833 5012 	ldrh.w	r5, [r3, r2, lsl #1]
 8014c9e:	1c6d      	adds	r5, r5, #1
 8014ca0:	f823 5012 	strh.w	r5, [r3, r2, lsl #1]
 8014ca4:	7800      	ldrb	r0, [r0, #0]
 8014ca6:	f103 024a 	add.w	r2, r3, #74	; 0x4a
 8014caa:	f832 5010 	ldrh.w	r5, [r2, r0, lsl #1]
 8014cae:	1c6d      	adds	r5, r5, #1
 8014cb0:	f822 5010 	strh.w	r5, [r2, r0, lsl #1]

08014cb4 <??conn_mngr_update_ststic_5>:
 8014cb4:	8870      	ldrh	r0, [r6, #2]
 8014cb6:	1c40      	adds	r0, r0, #1
 8014cb8:	8070      	strh	r0, [r6, #2]
 8014cba:	b280      	uxth	r0, r0
 8014cbc:	f5b0 7f7a 	cmp.w	r0, #1000	; 0x3e8
 8014cc0:	db36      	blt.n	8014d30 <??conn_mngr_update_ststic_4>
 8014cc2:	f8df 3c28 	ldr.w	r3, [pc, #3112]	; 80158ec <??DataTable13>
 8014cc6:	2200      	movs	r2, #0
 8014cc8:	461d      	mov	r5, r3

08014cca <??conn_mngr_update_ststic_6>:
 8014cca:	7830      	ldrb	r0, [r6, #0]
 8014ccc:	2823      	cmp	r0, #35	; 0x23
 8014cce:	da29      	bge.n	8014d24 <??conn_mngr_update_ststic_7>
 8014cd0:	f8b5 e000 	ldrh.w	lr, [r5]
 8014cd4:	f8b5 c04a 	ldrh.w	ip, [r5, #74]	; 0x4a
 8014cd8:	ea4f 0e5e 	mov.w	lr, lr, lsr #1
 8014cdc:	45e6      	cmp	lr, ip
 8014cde:	d219      	bcs.n	8014d14 <??conn_mngr_update_ststic_8>
 8014ce0:	ea4f 09a2 	mov.w	r9, r2, asr #2
 8014ce4:	1c40      	adds	r0, r0, #1
 8014ce6:	eb02 7a59 	add.w	sl, r2, r9, lsr #29
 8014cea:	7030      	strb	r0, [r6, #0]
 8014cec:	10d0      	asrs	r0, r2, #3
 8014cee:	f106 0c06 	add.w	ip, r6, #6
 8014cf2:	f81c e000 	ldrb.w	lr, [ip, r0]
 8014cf6:	ea4f 0aea 	mov.w	sl, sl, asr #3
 8014cfa:	eba2 0cca 	sub.w	ip, r2, sl, lsl #3
 8014cfe:	fa01 fc0c 	lsl.w	ip, r1, ip
 8014d02:	ea2e 0e0c 	bic.w	lr, lr, ip
 8014d06:	f106 0906 	add.w	r9, r6, #6
 8014d0a:	f108 0801 	add.w	r8, r8, #1
 8014d0e:	2401      	movs	r4, #1
 8014d10:	f809 e000 	strb.w	lr, [r9, r0]

08014d14 <??conn_mngr_update_ststic_8>:
 8014d14:	1c52      	adds	r2, r2, #1
 8014d16:	1cad      	adds	r5, r5, #2
 8014d18:	2a25      	cmp	r2, #37	; 0x25
 8014d1a:	da03      	bge.n	8014d24 <??conn_mngr_update_ststic_7>
 8014d1c:	fa5f f088 	uxtb.w	r0, r8
 8014d20:	2804      	cmp	r0, #4
 8014d22:	ddd2      	ble.n	8014cca <??conn_mngr_update_ststic_6>

08014d24 <??conn_mngr_update_ststic_7>:
 8014d24:	2294      	movs	r2, #148	; 0x94
 8014d26:	2100      	movs	r1, #0
 8014d28:	4618      	mov	r0, r3
 8014d2a:	f7f9 ff5e 	bl	800ebea <ble_memset>
 8014d2e:	8077      	strh	r7, [r6, #2]

08014d30 <??conn_mngr_update_ststic_4>:
 8014d30:	433c      	orrs	r4, r7
 8014d32:	bf1c      	itt	ne
 8014d34:	1db0      	addne	r0, r6, #6
 8014d36:	f7f3 f97f 	blne	8008038 <llcp_update_chnl_map>

08014d3a <??conn_mngr_update_ststic_1>:
 8014d3a:	2000      	movs	r0, #0
 8014d3c:	e8bd 87f6 	ldmia.w	sp!, {r1, r2, r4, r5, r6, r7, r8, r9, sl, pc}

08014d40 <conn_mngr_pkt_transmited_received_cbk>:
 8014d40:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8014d44:	4681      	mov	r9, r0
 8014d46:	b084      	sub	sp, #16
 8014d48:	2000      	movs	r0, #0
 8014d4a:	f8ad 0000 	strh.w	r0, [sp]
 8014d4e:	9003      	str	r0, [sp, #12]
 8014d50:	460d      	mov	r5, r1
 8014d52:	2079      	movs	r0, #121	; 0x79
 8014d54:	f7eb fa68 	bl	8000228 <bsp_debug_gpio_set>
 8014d58:	f1b9 0f00 	cmp.w	r9, #0
 8014d5c:	f000 8161 	beq.w	8015022 <??conn_mngr_pkt_transmited_received_cbk_0>
 8014d60:	f109 06bc 	add.w	r6, r9, #188	; 0xbc
 8014d64:	8c70      	ldrh	r0, [r6, #34]	; 0x22
 8014d66:	9001      	str	r0, [sp, #4]
 8014d68:	f895 2020 	ldrb.w	r2, [r5, #32]
 8014d6c:	f895 3021 	ldrb.w	r3, [r5, #33]	; 0x21
 8014d70:	7f29      	ldrb	r1, [r5, #28]
 8014d72:	18d4      	adds	r4, r2, r3
 8014d74:	428c      	cmp	r4, r1
 8014d76:	bfa8      	it	ge
 8014d78:	18d1      	addge	r1, r2, r3
 8014d7a:	b2c9      	uxtb	r1, r1
 8014d7c:	4648      	mov	r0, r9
 8014d7e:	f7f2 fd11 	bl	80077a4 <llcp_check_update_prcdur>
 8014d82:	4629      	mov	r1, r5
 8014d84:	f109 0008 	add.w	r0, r9, #8
 8014d88:	f7ff fd2c 	bl	80147e4 <ble_time_set>
 8014d8c:	f209 171f 	addw	r7, r9, #287	; 0x11f
 8014d90:	7e78      	ldrb	r0, [r7, #25]
 8014d92:	b110      	cbz	r0, 8014d9a <??conn_mngr_pkt_transmited_received_cbk_1>
 8014d94:	4648      	mov	r0, r9
 8014d96:	f001 f8b2 	bl	8015efe <conn_mngr_send_inst_cntrl_hci_evnt>

08014d9a <??conn_mngr_pkt_transmited_received_cbk_1>:
 8014d9a:	f105 0421 	add.w	r4, r5, #33	; 0x21
 8014d9e:	f994 0001 	ldrsb.w	r0, [r4, #1]
 8014da2:	287f      	cmp	r0, #127	; 0x7f
 8014da4:	bf08      	it	eq
 8014da6:	78a0      	ldrbeq	r0, [r4, #2]
 8014da8:	72b8      	strb	r0, [r7, #10]
 8014daa:	4648      	mov	r0, r9
 8014dac:	f7ff fe4a 	bl	8014a44 <sprvsn_timer_set>
 8014db0:	79a2      	ldrb	r2, [r4, #6]
 8014db2:	f895 c01c 	ldrb.w	ip, [r5, #28]
 8014db6:	ebbc 0002 	subs.w	r0, ip, r2
 8014dba:	bf1f      	itttt	ne
 8014dbc:	f8df 3b30 	ldrne.w	r3, [pc, #2864]	; 80158f0 <??DataTable13_1>
 8014dc0:	6818      	ldrne	r0, [r3, #0]
 8014dc2:	69c3      	ldrne	r3, [r0, #28]
 8014dc4:	2b00      	cmpne	r3, #0
 8014dc6:	d008      	beq.n	8014dda <??conn_mngr_pkt_transmited_received_cbk_2>
 8014dc8:	ebac 0202 	sub.w	r2, ip, r2
 8014dcc:	f8ad 2000 	strh.w	r2, [sp]
 8014dd0:	466a      	mov	r2, sp
 8014dd2:	f109 01de 	add.w	r1, r9, #222	; 0xde
 8014dd6:	2001      	movs	r0, #1
 8014dd8:	4798      	blx	r3

08014dda <??conn_mngr_pkt_transmited_received_cbk_2>:
 8014dda:	7f68      	ldrb	r0, [r5, #29]
 8014ddc:	b128      	cbz	r0, 8014dea <??conn_mngr_pkt_transmited_received_cbk_3>
 8014dde:	78f9      	ldrb	r1, [r7, #3]
 8014de0:	2901      	cmp	r1, #1
 8014de2:	d102      	bne.n	8014dea <??conn_mngr_pkt_transmited_received_cbk_3>
 8014de4:	6af1      	ldr	r1, [r6, #44]	; 0x2c
 8014de6:	1840      	adds	r0, r0, r1
 8014de8:	62f0      	str	r0, [r6, #44]	; 0x2c

08014dea <??conn_mngr_pkt_transmited_received_cbk_3>:
 8014dea:	f895 0020 	ldrb.w	r0, [r5, #32]
 8014dee:	f8df 8a20 	ldr.w	r8, [pc, #2592]	; 8015810 <??DataTable12>
 8014df2:	2800      	cmp	r0, #0
 8014df4:	bf04      	itt	eq
 8014df6:	7821      	ldrbeq	r1, [r4, #0]
 8014df8:	2900      	cmpeq	r1, #0
 8014dfa:	f000 80a8 	beq.w	8014f4e <??conn_mngr_pkt_transmited_received_cbk_4>
 8014dfe:	78f9      	ldrb	r1, [r7, #3]
 8014e00:	2901      	cmp	r1, #1
 8014e02:	bf18      	it	ne
 8014e04:	2902      	cmpne	r1, #2
 8014e06:	d13f      	bne.n	8014e88 <??conn_mngr_pkt_transmited_received_cbk_5>
 8014e08:	7a63      	ldrb	r3, [r4, #9]
 8014e0a:	4298      	cmp	r0, r3
 8014e0c:	d125      	bne.n	8014e5a <??conn_mngr_pkt_transmited_received_cbk_6>
 8014e0e:	2800      	cmp	r0, #0
 8014e10:	d03a      	beq.n	8014e88 <??conn_mngr_pkt_transmited_received_cbk_5>
 8014e12:	6b30      	ldr	r0, [r6, #48]	; 0x30
 8014e14:	181b      	adds	r3, r3, r0
 8014e16:	6333      	str	r3, [r6, #48]	; 0x30
 8014e18:	7939      	ldrb	r1, [r7, #4]
 8014e1a:	2906      	cmp	r1, #6
 8014e1c:	bf1c      	itt	ne
 8014e1e:	69b0      	ldrne	r0, [r6, #24]
 8014e20:	2800      	cmpne	r0, #0
 8014e22:	d031      	beq.n	8014e88 <??conn_mngr_pkt_transmited_received_cbk_5>
 8014e24:	f7f0 fd71 	bl	800590a <os_timer_stop>
 8014e28:	f8b9 0016 	ldrh.w	r0, [r9, #22]
 8014e2c:	eb00 0080 	add.w	r0, r0, r0, lsl #2
 8014e30:	1041      	asrs	r1, r0, #1
 8014e32:	eb00 7091 	add.w	r0, r0, r1, lsr #30
 8014e36:	1080      	asrs	r0, r0, #2
 8014e38:	eb00 0240 	add.w	r2, r0, r0, lsl #1
 8014e3c:	8bb0      	ldrh	r0, [r6, #28]
 8014e3e:	eb00 0380 	add.w	r3, r0, r0, lsl #2
 8014e42:	0058      	lsls	r0, r3, #1
 8014e44:	ebb0 0f42 	cmp.w	r0, r2, lsl #1
 8014e48:	bf26      	itte	cs
 8014e4a:	eba0 0142 	subcs.w	r1, r0, r2, lsl #1
 8014e4e:	0149      	lslcs	r1, r1, #5
 8014e50:	21a0      	movcc	r1, #160	; 0xa0
 8014e52:	69b0      	ldr	r0, [r6, #24]
 8014e54:	f7f0 fd20 	bl	8005898 <os_timer_start>
 8014e58:	e016      	b.n	8014e88 <??conn_mngr_pkt_transmited_received_cbk_5>

08014e5a <??conn_mngr_pkt_transmited_received_cbk_6>:
 8014e5a:	b1a8      	cbz	r0, 8014e88 <??conn_mngr_pkt_transmited_received_cbk_5>
 8014e5c:	7978      	ldrb	r0, [r7, #5]
 8014e5e:	2808      	cmp	r0, #8
 8014e60:	d10b      	bne.n	8014e7a <??conn_mngr_pkt_transmited_received_cbk_7>
 8014e62:	f105 0227 	add.w	r2, r5, #39	; 0x27
 8014e66:	2100      	movs	r1, #0
 8014e68:	4648      	mov	r0, r9
 8014e6a:	f7f3 f9d1 	bl	8008210 <llcp_process_pkt>
 8014e6e:	e00b      	b.n	8014e88 <??conn_mngr_pkt_transmited_received_cbk_5>

08014e70 <??conn_mngr_pkt_transmited_received_cbk_8>:
 8014e70:	f7fe fb76 	bl	8013560 <free_buff_hdr>
 8014e74:	68a8      	ldr	r0, [r5, #8]
 8014e76:	6841      	ldr	r1, [r0, #4]
 8014e78:	60a9      	str	r1, [r5, #8]

08014e7a <??conn_mngr_pkt_transmited_received_cbk_7>:
 8014e7a:	68a8      	ldr	r0, [r5, #8]
 8014e7c:	2800      	cmp	r0, #0
 8014e7e:	d1f7      	bne.n	8014e70 <??conn_mngr_pkt_transmited_received_cbk_8>
 8014e80:	213d      	movs	r1, #61	; 0x3d
 8014e82:	4648      	mov	r0, r9
 8014e84:	f000 ff58 	bl	8015d38 <conn_mngr_disconnect>

08014e88 <??conn_mngr_pkt_transmited_received_cbk_5>:
 8014e88:	9901      	ldr	r1, [sp, #4]
 8014e8a:	f108 0010 	add.w	r0, r8, #16
 8014e8e:	f850 0021 	ldr.w	r0, [r0, r1, lsl #2]
 8014e92:	4548      	cmp	r0, r9
 8014e94:	d15b      	bne.n	8014f4e <??conn_mngr_pkt_transmited_received_cbk_4>
 8014e96:	f8b6 a022 	ldrh.w	sl, [r6, #34]	; 0x22
 8014e9a:	68ac      	ldr	r4, [r5, #8]
 8014e9c:	f8cd a008 	str.w	sl, [sp, #8]
 8014ea0:	e00f      	b.n	8014ec2 <??conn_mngr_pkt_transmited_received_cbk_9>

08014ea2 <??conn_mngr_pkt_transmited_received_cbk_10>:
 8014ea2:	2a02      	cmp	r2, #2
 8014ea4:	bf14      	ite	ne
 8014ea6:	2000      	movne	r0, #0
 8014ea8:	2001      	moveq	r0, #1
 8014eaa:	7ba1      	ldrb	r1, [r4, #14]
 8014eac:	4308      	orrs	r0, r1
 8014eae:	73a0      	strb	r0, [r4, #14]
 8014eb0:	f8df 0a3c 	ldr.w	r0, [pc, #2620]	; 80158f0 <??DataTable13_1>
 8014eb4:	6802      	ldr	r2, [r0, #0]
 8014eb6:	6992      	ldr	r2, [r2, #24]
 8014eb8:	b112      	cbz	r2, 8014ec0 <??conn_mngr_pkt_transmited_received_cbk_11>
 8014eba:	4621      	mov	r1, r4
 8014ebc:	4650      	mov	r0, sl
 8014ebe:	4790      	blx	r2

08014ec0 <??conn_mngr_pkt_transmited_received_cbk_11>:
 8014ec0:	465c      	mov	r4, fp

08014ec2 <??conn_mngr_pkt_transmited_received_cbk_9>:
 8014ec2:	b394      	cbz	r4, 8014f2a <??conn_mngr_pkt_transmited_received_cbk_12>
 8014ec4:	9902      	ldr	r1, [sp, #8]
 8014ec6:	f108 0010 	add.w	r0, r8, #16
 8014eca:	f850 0021 	ldr.w	r0, [r0, r1, lsl #2]
 8014ece:	4548      	cmp	r0, r9
 8014ed0:	d125      	bne.n	8014f1e <??conn_mngr_pkt_transmited_received_cbk_13>
 8014ed2:	8960      	ldrh	r0, [r4, #10]
 8014ed4:	6821      	ldr	r1, [r4, #0]
 8014ed6:	f8d4 b004 	ldr.w	fp, [r4, #4]
 8014eda:	5c0a      	ldrb	r2, [r1, r0]
 8014edc:	f002 0203 	and.w	r2, r2, #3
 8014ee0:	2a03      	cmp	r2, #3
 8014ee2:	d109      	bne.n	8014ef8 <??conn_mngr_pkt_transmited_received_cbk_14>
 8014ee4:	f105 0021 	add.w	r0, r5, #33	; 0x21
 8014ee8:	7a43      	ldrb	r3, [r0, #9]
 8014eea:	f105 0227 	add.w	r2, r5, #39	; 0x27
 8014eee:	4621      	mov	r1, r4
 8014ef0:	4648      	mov	r0, r9
 8014ef2:	f7f3 f98d 	bl	8008210 <llcp_process_pkt>
 8014ef6:	e7e3      	b.n	8014ec0 <??conn_mngr_pkt_transmited_received_cbk_11>

08014ef8 <??conn_mngr_pkt_transmited_received_cbk_14>:
 8014ef8:	4408      	add	r0, r1
 8014efa:	7840      	ldrb	r0, [r0, #1]
 8014efc:	b118      	cbz	r0, 8014f06 <??conn_mngr_pkt_transmited_received_cbk_15>
 8014efe:	2a01      	cmp	r2, #1
 8014f00:	bf18      	it	ne
 8014f02:	2a02      	cmpne	r2, #2
 8014f04:	d003      	beq.n	8014f0e <??conn_mngr_pkt_transmited_received_cbk_16>

08014f06 <??conn_mngr_pkt_transmited_received_cbk_15>:
 8014f06:	4620      	mov	r0, r4
 8014f08:	f7fe fb2a 	bl	8013560 <free_buff_hdr>
 8014f0c:	e7d8      	b.n	8014ec0 <??conn_mngr_pkt_transmited_received_cbk_11>

08014f0e <??conn_mngr_pkt_transmited_received_cbk_16>:
 8014f0e:	7838      	ldrb	r0, [r7, #0]
 8014f10:	28aa      	cmp	r0, #170	; 0xaa
 8014f12:	d1c6      	bne.n	8014ea2 <??conn_mngr_pkt_transmited_received_cbk_10>
 8014f14:	213d      	movs	r1, #61	; 0x3d
 8014f16:	4648      	mov	r0, r9
 8014f18:	f000 ff0e 	bl	8015d38 <conn_mngr_disconnect>
 8014f1c:	e017      	b.n	8014f4e <??conn_mngr_pkt_transmited_received_cbk_4>

08014f1e <??conn_mngr_pkt_transmited_received_cbk_13>:
 8014f1e:	4620      	mov	r0, r4
 8014f20:	f7fe fb1e 	bl	8013560 <free_buff_hdr>
 8014f24:	6864      	ldr	r4, [r4, #4]
 8014f26:	2c00      	cmp	r4, #0
 8014f28:	d1f9      	bne.n	8014f1e <??conn_mngr_pkt_transmited_received_cbk_13>

08014f2a <??conn_mngr_pkt_transmited_received_cbk_12>:
 8014f2a:	f105 0121 	add.w	r1, r5, #33	; 0x21
 8014f2e:	7988      	ldrb	r0, [r1, #6]
 8014f30:	b168      	cbz	r0, 8014f4e <??conn_mngr_pkt_transmited_received_cbk_4>
 8014f32:	9802      	ldr	r0, [sp, #8]
 8014f34:	f108 0210 	add.w	r2, r8, #16
 8014f38:	f852 2020 	ldr.w	r2, [r2, r0, lsl #2]
 8014f3c:	454a      	cmp	r2, r9
 8014f3e:	d106      	bne.n	8014f4e <??conn_mngr_pkt_transmited_received_cbk_4>
 8014f40:	7a4b      	ldrb	r3, [r1, #9]
 8014f42:	f105 0227 	add.w	r2, r5, #39	; 0x27
 8014f46:	2100      	movs	r1, #0
 8014f48:	4648      	mov	r0, r9
 8014f4a:	f7f3 f961 	bl	8008210 <llcp_process_pkt>

08014f4e <??conn_mngr_pkt_transmited_received_cbk_4>:
 8014f4e:	9901      	ldr	r1, [sp, #4]
 8014f50:	f108 0010 	add.w	r0, r8, #16
 8014f54:	f850 0021 	ldr.w	r0, [r0, r1, lsl #2]
 8014f58:	4548      	cmp	r0, r9
 8014f5a:	d126      	bne.n	8014faa <??conn_mngr_pkt_transmited_received_cbk_17>
 8014f5c:	8c31      	ldrh	r1, [r6, #32]
 8014f5e:	f64f 74ff 	movw	r4, #65535	; 0xffff
 8014f62:	42a1      	cmp	r1, r4
 8014f64:	d104      	bne.n	8014f70 <??conn_mngr_pkt_transmited_received_cbk_18>
 8014f66:	7fa8      	ldrb	r0, [r5, #30]
 8014f68:	b110      	cbz	r0, 8014f70 <??conn_mngr_pkt_transmited_received_cbk_18>
 8014f6a:	f8b9 0018 	ldrh.w	r0, [r9, #24]
 8014f6e:	8430      	strh	r0, [r6, #32]

08014f70 <??conn_mngr_pkt_transmited_received_cbk_18>:
 8014f70:	6830      	ldr	r0, [r6, #0]
 8014f72:	f7ff fb4d 	bl	8014610 <state_mngr_get_state_type>
 8014f76:	2805      	cmp	r0, #5
 8014f78:	d114      	bne.n	8014fa4 <??conn_mngr_pkt_transmited_received_cbk_19>
 8014f7a:	6830      	ldr	r0, [r6, #0]
 8014f7c:	2106      	movs	r1, #6
 8014f7e:	f7ff faf7 	bl	8014570 <state_mngr_update_state>
 8014f82:	79b8      	ldrb	r0, [r7, #6]
 8014f84:	2801      	cmp	r0, #1
 8014f86:	d10d      	bne.n	8014fa4 <??conn_mngr_pkt_transmited_received_cbk_19>
 8014f88:	f109 0108 	add.w	r1, r9, #8
 8014f8c:	f109 0038 	add.w	r0, r9, #56	; 0x38
 8014f90:	f7ff fc28 	bl	80147e4 <ble_time_set>
 8014f94:	2000      	movs	r0, #0
 8014f96:	f889 0020 	strb.w	r0, [r9, #32]
 8014f9a:	6870      	ldr	r0, [r6, #4]
 8014f9c:	8434      	strh	r4, [r6, #32]
 8014f9e:	210c      	movs	r1, #12
 8014fa0:	f7ec fee2 	bl	8001d68 <evnt_schdlr_conn_params_updtd>

08014fa4 <??conn_mngr_pkt_transmited_received_cbk_19>:
 8014fa4:	6870      	ldr	r0, [r6, #4]
 8014fa6:	f7ec ff0c 	bl	8001dc2 <evnt_schdlr_evnt_updtd>

08014faa <??conn_mngr_pkt_transmited_received_cbk_17>:
 8014faa:	7938      	ldrb	r0, [r7, #4]
 8014fac:	2800      	cmp	r0, #0
 8014fae:	d138      	bne.n	8015022 <??conn_mngr_pkt_transmited_received_cbk_0>
 8014fb0:	f8d8 4030 	ldr.w	r4, [r8, #48]	; 0x30
 8014fb4:	b114      	cbz	r4, 8014fbc <??conn_mngr_pkt_transmited_received_cbk_20>
 8014fb6:	9d03      	ldr	r5, [sp, #12]
 8014fb8:	9801      	ldr	r0, [sp, #4]
 8014fba:	e01b      	b.n	8014ff4 <??conn_mngr_pkt_transmited_received_cbk_21>

08014fbc <??conn_mngr_pkt_transmited_received_cbk_20>:
 8014fbc:	7f38      	ldrb	r0, [r7, #28]
 8014fbe:	28ff      	cmp	r0, #255	; 0xff
 8014fc0:	d02f      	beq.n	8015022 <??conn_mngr_pkt_transmited_received_cbk_0>
 8014fc2:	7f7a      	ldrb	r2, [r7, #29]
 8014fc4:	2100      	movs	r1, #0
 8014fc6:	2aff      	cmp	r2, #255	; 0xff
 8014fc8:	bf1c      	itt	ne
 8014fca:	773a      	strbne	r2, [r7, #28]
 8014fcc:	2101      	movne	r1, #1
 8014fce:	22ff      	movs	r2, #255	; 0xff
 8014fd0:	4449      	add	r1, r9
 8014fd2:	f881 213b 	strb.w	r2, [r1, #315]	; 0x13b
 8014fd6:	2802      	cmp	r0, #2
 8014fd8:	d005      	beq.n	8014fe6 <??conn_mngr_pkt_transmited_received_cbk_22>
 8014fda:	2803      	cmp	r0, #3
 8014fdc:	bf04      	itt	eq
 8014fde:	8c70      	ldrheq	r0, [r6, #34]	; 0x22
 8014fe0:	f7f2 fa5d 	bleq	800749e <llcp_read_remote_version>
 8014fe4:	e01d      	b.n	8015022 <??conn_mngr_pkt_transmited_received_cbk_0>

08014fe6 <??conn_mngr_pkt_transmited_received_cbk_22>:
 8014fe6:	f109 0076 	add.w	r0, r9, #118	; 0x76
 8014fea:	f7f3 f825 	bl	8008038 <llcp_update_chnl_map>
 8014fee:	e018      	b.n	8015022 <??conn_mngr_pkt_transmited_received_cbk_0>

08014ff0 <??conn_mngr_pkt_transmited_received_cbk_23>:
 8014ff0:	4625      	mov	r5, r4
 8014ff2:	6964      	ldr	r4, [r4, #20]

08014ff4 <??conn_mngr_pkt_transmited_received_cbk_21>:
 8014ff4:	2c00      	cmp	r4, #0
 8014ff6:	d0e1      	beq.n	8014fbc <??conn_mngr_pkt_transmited_received_cbk_20>
 8014ff8:	8861      	ldrh	r1, [r4, #2]
 8014ffa:	4281      	cmp	r1, r0
 8014ffc:	d1f8      	bne.n	8014ff0 <??conn_mngr_pkt_transmited_received_cbk_23>
 8014ffe:	4620      	mov	r0, r4
 8015000:	f7f3 fa72 	bl	80084e8 <llcp_re_exec_host_control>
 8015004:	283a      	cmp	r0, #58	; 0x3a
 8015006:	d0d9      	beq.n	8014fbc <??conn_mngr_pkt_transmited_received_cbk_20>
 8015008:	b10d      	cbz	r5, 801500e <??conn_mngr_pkt_transmited_received_cbk_24>
 801500a:	6960      	ldr	r0, [r4, #20]
 801500c:	6168      	str	r0, [r5, #20]

0801500e <??conn_mngr_pkt_transmited_received_cbk_24>:
 801500e:	4620      	mov	r0, r4
 8015010:	f7f0 f904 	bl	800521c <os_mem_pool_free>
 8015014:	f8d8 0030 	ldr.w	r0, [r8, #48]	; 0x30
 8015018:	42a0      	cmp	r0, r4
 801501a:	d102      	bne.n	8015022 <??conn_mngr_pkt_transmited_received_cbk_0>
 801501c:	6961      	ldr	r1, [r4, #20]
 801501e:	f8c8 1030 	str.w	r1, [r8, #48]	; 0x30

08015022 <??conn_mngr_pkt_transmited_received_cbk_0>:
 8015022:	2079      	movs	r0, #121	; 0x79
 8015024:	f7eb f902 	bl	800022c <bsp_debug_gpio_clear>
 8015028:	b005      	add	sp, #20
 801502a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801502e <conn_mngr_error_cbk>:
 801502e:	b570      	push	{r4, r5, r6, lr}
 8015030:	4604      	mov	r4, r0
 8015032:	460e      	mov	r6, r1
 8015034:	f104 05bc 	add.w	r5, r4, #188	; 0xbc
 8015038:	8c69      	ldrh	r1, [r5, #34]	; 0x22
 801503a:	f8df 08b8 	ldr.w	r0, [pc, #2232]	; 80158f4 <??DataTable13_2>
 801503e:	eb00 0281 	add.w	r2, r0, r1, lsl #2
 8015042:	6910      	ldr	r0, [r2, #16]
 8015044:	42a0      	cmp	r0, r4
 8015046:	d139      	bne.n	80150bc <??conn_mngr_error_cbk_0>
 8015048:	f896 002c 	ldrb.w	r0, [r6, #44]	; 0x2c
 801504c:	b918      	cbnz	r0, 8015056 <??conn_mngr_error_cbk_1>
 801504e:	4620      	mov	r0, r4
 8015050:	f7ff fcf8 	bl	8014a44 <sprvsn_timer_set>
 8015054:	e026      	b.n	80150a4 <??conn_mngr_error_cbk_2>

08015056 <??conn_mngr_error_cbk_1>:
 8015056:	0780      	lsls	r0, r0, #30
 8015058:	d524      	bpl.n	80150a4 <??conn_mngr_error_cbk_2>
 801505a:	6828      	ldr	r0, [r5, #0]
 801505c:	f7ff fad8 	bl	8014610 <state_mngr_get_state_type>
 8015060:	2805      	cmp	r0, #5
 8015062:	d11f      	bne.n	80150a4 <??conn_mngr_error_cbk_2>
 8015064:	4631      	mov	r1, r6
 8015066:	f104 0008 	add.w	r0, r4, #8
 801506a:	f7ff fbbb 	bl	80147e4 <ble_time_set>
 801506e:	4620      	mov	r0, r4
 8015070:	f7ff fce8 	bl	8014a44 <sprvsn_timer_set>
 8015074:	6828      	ldr	r0, [r5, #0]
 8015076:	2106      	movs	r1, #6
 8015078:	f7ff fa7a 	bl	8014570 <state_mngr_update_state>
 801507c:	f894 0125 	ldrb.w	r0, [r4, #293]	; 0x125
 8015080:	2801      	cmp	r0, #1
 8015082:	d10f      	bne.n	80150a4 <??conn_mngr_error_cbk_2>
 8015084:	f104 0108 	add.w	r1, r4, #8
 8015088:	f104 0038 	add.w	r0, r4, #56	; 0x38
 801508c:	f7ff fbaa 	bl	80147e4 <ble_time_set>
 8015090:	2000      	movs	r0, #0
 8015092:	f884 0020 	strb.w	r0, [r4, #32]
 8015096:	f64f 71ff 	movw	r1, #65535	; 0xffff
 801509a:	6868      	ldr	r0, [r5, #4]
 801509c:	8429      	strh	r1, [r5, #32]
 801509e:	210c      	movs	r1, #12
 80150a0:	f7ec fe62 	bl	8001d68 <evnt_schdlr_conn_params_updtd>

080150a4 <??conn_mngr_error_cbk_2>:
 80150a4:	f204 1125 	addw	r1, r4, #293	; 0x125
 80150a8:	7cc8      	ldrb	r0, [r1, #19]
 80150aa:	b110      	cbz	r0, 80150b2 <??conn_mngr_error_cbk_3>
 80150ac:	4620      	mov	r0, r4
 80150ae:	f000 ff26 	bl	8015efe <conn_mngr_send_inst_cntrl_hci_evnt>

080150b2 <??conn_mngr_error_cbk_3>:
 80150b2:	6868      	ldr	r0, [r5, #4]
 80150b4:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 80150b8:	f7ec be83 	b.w	8001dc2 <evnt_schdlr_evnt_updtd>

080150bc <??conn_mngr_error_cbk_0>:
 80150bc:	bd70      	pop	{r4, r5, r6, pc}
	...

080150c0 <conn_mngr_post_timer_evnt_clbk>:
 80150c0:	b510      	push	{r4, lr}
 80150c2:	4604      	mov	r4, r0
 80150c4:	205b      	movs	r0, #91	; 0x5b
 80150c6:	f7eb f8af 	bl	8000228 <bsp_debug_gpio_set>
 80150ca:	4621      	mov	r1, r4
 80150cc:	2002      	movs	r0, #2
 80150ce:	f7eb f906 	bl	80002de <emngr_post_event>
 80150d2:	205b      	movs	r0, #91	; 0x5b
 80150d4:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80150d8:	f7eb b8a8 	b.w	800022c <bsp_debug_gpio_clear>

080150dc <conn_mngr_check_conn_id>:
 80150dc:	6800      	ldr	r0, [r0, #0]
 80150de:	4288      	cmp	r0, r1
 80150e0:	d101      	bne.n	80150e6 <??conn_mngr_check_conn_id_0>
 80150e2:	2001      	movs	r0, #1
 80150e4:	4770      	bx	lr

080150e6 <??conn_mngr_check_conn_id_0>:
 80150e6:	2000      	movs	r0, #0
 80150e8:	4770      	bx	lr
	...

080150ec <conn_mngr_process_evnt_clbk>:
 80150ec:	e92d 47f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, lr}
 80150f0:	b089      	sub	sp, #36	; 0x24
 80150f2:	4682      	mov	sl, r0
 80150f4:	f8da 6000 	ldr.w	r6, [sl]
 80150f8:	208a      	movs	r0, #138	; 0x8a
 80150fa:	f7eb f895 	bl	8000228 <bsp_debug_gpio_set>
 80150fe:	f89a 0004 	ldrb.w	r0, [sl, #4]
 8015102:	2500      	movs	r5, #0
 8015104:	2400      	movs	r4, #0
 8015106:	280d      	cmp	r0, #13
 8015108:	f200 8183 	bhi.w	8015412 <??conn_mngr_process_evnt_clbk_1>
 801510c:	e8df f010 	tbh	[pc, r0, lsl #1]

08015110 <??conn_mngr_process_evnt_clbk_0>:
 8015110:	000e 0018 001a 0075 0094 00a6 00da 0018     ......u.........
 8015120:	00eb 015b 00b5 0181 0167 0179               ..[.....g.y.

0801512c <??conn_mngr_process_evnt_clbk_2>:
 801512c:	f106 0190 	add.w	r1, r6, #144	; 0x90
 8015130:	6b08      	ldr	r0, [r1, #48]	; 0x30
 8015132:	f7ed ff41 	bl	8002fb8 <evnt_util_is_connect_setup>
 8015136:	2800      	cmp	r0, #0
 8015138:	bf14      	ite	ne
 801513a:	2108      	movne	r1, #8
 801513c:	213e      	moveq	r1, #62	; 0x3e
 801513e:	e165      	b.n	801540c <??conn_mngr_process_evnt_clbk_3>

08015140 <??conn_mngr_process_evnt_clbk_4>:
 8015140:	2122      	movs	r1, #34	; 0x22
 8015142:	e163      	b.n	801540c <??conn_mngr_process_evnt_clbk_3>

08015144 <??conn_mngr_process_evnt_clbk_5>:
 8015144:	f106 00cc 	add.w	r0, r6, #204	; 0xcc
 8015148:	f7f0 fc51 	bl	80059ee <os_timer_stop_free>
 801514c:	f206 1823 	addw	r8, r6, #291	; 0x123
 8015150:	f898 0005 	ldrb.w	r0, [r8, #5]
 8015154:	2828      	cmp	r0, #40	; 0x28
 8015156:	d059      	beq.n	801520c <??conn_mngr_process_evnt_clbk_6>
 8015158:	f106 006c 	add.w	r0, r6, #108	; 0x6c
 801515c:	8af1      	ldrh	r1, [r6, #22]
 801515e:	8c42      	ldrh	r2, [r0, #34]	; 0x22
 8015160:	4291      	cmp	r1, r2
 8015162:	bf01      	itttt	eq
 8015164:	f106 01d8 	addeq.w	r1, r6, #216	; 0xd8
 8015168:	888a      	ldrheq	r2, [r1, #4]
 801516a:	8a81      	ldrheq	r1, [r0, #20]
 801516c:	428a      	cmpeq	r2, r1
 801516e:	d103      	bne.n	8015178 <??conn_mngr_process_evnt_clbk_7>
 8015170:	8b72      	ldrh	r2, [r6, #26]
 8015172:	8ac1      	ldrh	r1, [r0, #22]
 8015174:	428a      	cmp	r2, r1
 8015176:	d000      	beq.n	801517a <??conn_mngr_process_evnt_clbk_8>

08015178 <??conn_mngr_process_evnt_clbk_7>:
 8015178:	2501      	movs	r5, #1

0801517a <??conn_mngr_process_evnt_clbk_8>:
 801517a:	8a81      	ldrh	r1, [r0, #20]
 801517c:	f106 09d8 	add.w	r9, r6, #216	; 0xd8
 8015180:	f64f 72ff 	movw	r2, #65535	; 0xffff
 8015184:	8331      	strh	r1, [r6, #24]
 8015186:	f8a9 2004 	strh.w	r2, [r9, #4]
 801518a:	8ac1      	ldrh	r1, [r0, #22]
 801518c:	f106 0790 	add.w	r7, r6, #144	; 0x90
 8015190:	8371      	strh	r1, [r6, #26]
 8015192:	783a      	ldrb	r2, [r7, #0]
 8015194:	f886 2020 	strb.w	r2, [r6, #32]
 8015198:	8b80      	ldrh	r0, [r0, #28]
 801519a:	8230      	strh	r0, [r6, #16]
 801519c:	4630      	mov	r0, r6
 801519e:	f7ff fc51 	bl	8014a44 <sprvsn_timer_set>
 80151a2:	6af8      	ldr	r0, [r7, #44]	; 0x2c
 80151a4:	2105      	movs	r1, #5
 80151a6:	f7ff f9e3 	bl	8014570 <state_mngr_update_state>
 80151aa:	b115      	cbz	r5, 80151b2 <??conn_mngr_process_evnt_clbk_9>
 80151ac:	2001      	movs	r0, #1
 80151ae:	f888 0015 	strb.w	r0, [r8, #21]

080151b2 <??conn_mngr_process_evnt_clbk_9>:
 80151b2:	8c78      	ldrh	r0, [r7, #34]	; 0x22
 80151b4:	8d39      	ldrh	r1, [r7, #40]	; 0x28
 80151b6:	4288      	cmp	r0, r1
 80151b8:	bf1f      	itttt	ne
 80151ba:	f8df 0734 	ldrne.w	r0, [pc, #1844]	; 80158f0 <??DataTable13_1>
 80151be:	6802      	ldrne	r2, [r0, #0]
 80151c0:	6b14      	ldrne	r4, [r2, #48]	; 0x30
 80151c2:	2c00      	cmpne	r4, #0
 80151c4:	d007      	beq.n	80151d6 <??conn_mngr_process_evnt_clbk_10>
 80151c6:	8b78      	ldrh	r0, [r7, #26]
 80151c8:	9000      	str	r0, [sp, #0]
 80151ca:	8b3b      	ldrh	r3, [r7, #24]
 80151cc:	8bfa      	ldrh	r2, [r7, #30]
 80151ce:	8bb9      	ldrh	r1, [r7, #28]
 80151d0:	f8b9 0006 	ldrh.w	r0, [r9, #6]
 80151d4:	47a0      	blx	r4

080151d6 <??conn_mngr_process_evnt_clbk_10>:
 80151d6:	8c78      	ldrh	r0, [r7, #34]	; 0x22
 80151d8:	8538      	strh	r0, [r7, #40]	; 0x28
 80151da:	f898 1000 	ldrb.w	r1, [r8]
 80151de:	2901      	cmp	r1, #1
 80151e0:	d103      	bne.n	80151ea <??conn_mngr_process_evnt_clbk_11>
 80151e2:	2000      	movs	r0, #0
 80151e4:	f888 0000 	strb.w	r0, [r8]
 80151e8:	e022      	b.n	8015230 <??conn_mngr_process_evnt_clbk_12>

080151ea <??conn_mngr_process_evnt_clbk_11>:
 80151ea:	f898 1001 	ldrb.w	r1, [r8, #1]
 80151ee:	2901      	cmp	r1, #1
 80151f0:	d11e      	bne.n	8015230 <??conn_mngr_process_evnt_clbk_12>
 80151f2:	2000      	movs	r0, #0
 80151f4:	f888 0001 	strb.w	r0, [r8, #1]
 80151f8:	e01a      	b.n	8015230 <??conn_mngr_process_evnt_clbk_12>

080151fa <??conn_mngr_process_evnt_clbk_13>:
 80151fa:	f106 00cc 	add.w	r0, r6, #204	; 0xcc
 80151fe:	f7f0 fbf6 	bl	80059ee <os_timer_stop_free>
 8015202:	f206 1423 	addw	r4, r6, #291	; 0x123
 8015206:	7960      	ldrb	r0, [r4, #5]
 8015208:	2828      	cmp	r0, #40	; 0x28
 801520a:	d104      	bne.n	8015216 <??conn_mngr_process_evnt_clbk_14>

0801520c <??conn_mngr_process_evnt_clbk_6>:
 801520c:	2128      	movs	r1, #40	; 0x28
 801520e:	4630      	mov	r0, r6
 8015210:	f000 fd92 	bl	8015d38 <conn_mngr_disconnect>
 8015214:	e00c      	b.n	8015230 <??conn_mngr_process_evnt_clbk_12>

08015216 <??conn_mngr_process_evnt_clbk_14>:
 8015216:	4630      	mov	r0, r6
 8015218:	f7ff fc14 	bl	8014a44 <sprvsn_timer_set>
 801521c:	f64f 70ff 	movw	r0, #65535	; 0xffff
 8015220:	f106 01d8 	add.w	r1, r6, #216	; 0xd8
 8015224:	8088      	strh	r0, [r1, #4]
 8015226:	78a0      	ldrb	r0, [r4, #2]
 8015228:	2800      	cmp	r0, #0
 801522a:	bf0c      	ite	eq
 801522c:	7025      	strbeq	r5, [r4, #0]
 801522e:	7065      	strbne	r5, [r4, #1]

08015230 <??conn_mngr_process_evnt_clbk_12>:
 8015230:	210b      	movs	r1, #11
 8015232:	f88a 1004 	strb.w	r1, [sl, #4]
 8015236:	e0ec      	b.n	8015412 <??conn_mngr_process_evnt_clbk_1>

08015238 <??conn_mngr_process_evnt_clbk_15>:
 8015238:	f8df 06b4 	ldr.w	r0, [pc, #1716]	; 80158f0 <??DataTable13_1>
 801523c:	6801      	ldr	r1, [r0, #0]
 801523e:	68cc      	ldr	r4, [r1, #12]
 8015240:	b1c4      	cbz	r4, 8015274 <??conn_mngr_process_evnt_clbk_16>
 8015242:	f106 0042 	add.w	r0, r6, #66	; 0x42
 8015246:	8801      	ldrh	r1, [r0, #0]
 8015248:	9100      	str	r1, [sp, #0]
 801524a:	7882      	ldrb	r2, [r0, #2]
 801524c:	f8b6 3040 	ldrh.w	r3, [r6, #64]	; 0x40
 8015250:	f106 00d8 	add.w	r0, r6, #216	; 0xd8
 8015254:	88c1      	ldrh	r1, [r0, #6]
 8015256:	2000      	movs	r0, #0
 8015258:	47a0      	blx	r4
 801525a:	e00b      	b.n	8015274 <??conn_mngr_process_evnt_clbk_16>

0801525c <??conn_mngr_process_evnt_clbk_17>:
 801525c:	f8df 0690 	ldr.w	r0, [pc, #1680]	; 80158f0 <??DataTable13_1>
 8015260:	6801      	ldr	r1, [r0, #0]
 8015262:	690b      	ldr	r3, [r1, #16]
 8015264:	b133      	cbz	r3, 8015274 <??conn_mngr_process_evnt_clbk_16>
 8015266:	f106 00d8 	add.w	r0, r6, #216	; 0xd8
 801526a:	88c1      	ldrh	r1, [r0, #6]
 801526c:	f106 0246 	add.w	r2, r6, #70	; 0x46
 8015270:	2000      	movs	r0, #0
 8015272:	4798      	blx	r3

08015274 <??conn_mngr_process_evnt_clbk_16>:
 8015274:	f886 5123 	strb.w	r5, [r6, #291]	; 0x123
 8015278:	e0cb      	b.n	8015412 <??conn_mngr_process_evnt_clbk_1>

0801527a <??conn_mngr_process_evnt_clbk_18>:
 801527a:	f106 0490 	add.w	r4, r6, #144	; 0x90
 801527e:	6c60      	ldr	r0, [r4, #68]	; 0x44
 8015280:	f7f0 fb43 	bl	800590a <os_timer_stop>
 8015284:	8af0      	ldrh	r0, [r6, #22]
 8015286:	eb00 0080 	add.w	r0, r0, r0, lsl #2
 801528a:	1041      	asrs	r1, r0, #1
 801528c:	eb00 7091 	add.w	r0, r0, r1, lsr #30
 8015290:	1080      	asrs	r0, r0, #2
 8015292:	eb00 0240 	add.w	r2, r0, r0, lsl #1
 8015296:	f8b6 00d8 	ldrh.w	r0, [r6, #216]	; 0xd8
 801529a:	eb00 0380 	add.w	r3, r0, r0, lsl #2
 801529e:	0058      	lsls	r0, r3, #1
 80152a0:	ebb0 0f42 	cmp.w	r0, r2, lsl #1
 80152a4:	bf2c      	ite	cs
 80152a6:	eba0 0142 	subcs.w	r1, r0, r2, lsl #1
 80152aa:	2105      	movcc	r1, #5
 80152ac:	1a41      	subs	r1, r0, r1
 80152ae:	6c60      	ldr	r0, [r4, #68]	; 0x44
 80152b0:	0149      	lsls	r1, r1, #5
 80152b2:	f7f0 faf1 	bl	8005898 <os_timer_start>
 80152b6:	2006      	movs	r0, #6
 80152b8:	f886 006c 	strb.w	r0, [r6, #108]	; 0x6c
 80152bc:	4630      	mov	r0, r6
 80152be:	f7f2 f861 	bl	8007384 <llcp_ping_req>
 80152c2:	e0a6      	b.n	8015412 <??conn_mngr_process_evnt_clbk_1>

080152c4 <??conn_mngr_process_evnt_clbk_19>:
 80152c4:	f106 0090 	add.w	r0, r6, #144	; 0x90
 80152c8:	6c40      	ldr	r0, [r0, #68]	; 0x44
 80152ca:	f7f0 fb1e 	bl	800590a <os_timer_stop>
 80152ce:	f8df 0620 	ldr.w	r0, [pc, #1568]	; 80158f0 <??DataTable13_1>
 80152d2:	6801      	ldr	r1, [r0, #0]
 80152d4:	6c09      	ldr	r1, [r1, #64]	; 0x40
 80152d6:	2900      	cmp	r1, #0
 80152d8:	f000 809b 	beq.w	8015412 <??conn_mngr_process_evnt_clbk_1>
 80152dc:	f106 00d8 	add.w	r0, r6, #216	; 0xd8
 80152e0:	88c0      	ldrh	r0, [r0, #6]
 80152e2:	4788      	blx	r1
 80152e4:	e095      	b.n	8015412 <??conn_mngr_process_evnt_clbk_1>

080152e6 <??conn_mngr_process_evnt_clbk_20>:
 80152e6:	f106 00cc 	add.w	r0, r6, #204	; 0xcc
 80152ea:	f7f0 fb80 	bl	80059ee <os_timer_stop_free>
 80152ee:	f206 1523 	addw	r5, r6, #291	; 0x123
 80152f2:	7968      	ldrb	r0, [r5, #5]
 80152f4:	2828      	cmp	r0, #40	; 0x28
 80152f6:	bf08      	it	eq
 80152f8:	2128      	moveq	r1, #40	; 0x28
 80152fa:	f000 8087 	beq.w	801540c <??conn_mngr_process_evnt_clbk_3>
 80152fe:	4630      	mov	r0, r6
 8015300:	f7ff fba0 	bl	8014a44 <sprvsn_timer_set>
 8015304:	f64f 70ff 	movw	r0, #65535	; 0xffff
 8015308:	f106 01d8 	add.w	r1, r6, #216	; 0xd8
 801530c:	8088      	strh	r0, [r1, #4]
 801530e:	f106 0a6c 	add.w	sl, r6, #108	; 0x6c
 8015312:	f89a 0008 	ldrb.w	r0, [sl, #8]
 8015316:	2804      	cmp	r0, #4
 8015318:	bf08      	it	eq
 801531a:	2401      	moveq	r4, #1
 801531c:	d00a      	beq.n	8015334 <??conn_mngr_process_evnt_clbk_21>
 801531e:	f89a 1009 	ldrb.w	r1, [sl, #9]
 8015322:	2904      	cmp	r1, #4
 8015324:	bf1f      	itttt	ne
 8015326:	7a69      	ldrbne	r1, [r5, #9]
 8015328:	2904      	cmpne	r1, #4
 801532a:	7aa9      	ldrbne	r1, [r5, #10]
 801532c:	2904      	cmpne	r1, #4
 801532e:	d100      	bne.n	8015332 <??conn_mngr_process_evnt_clbk_22>
 8015330:	2401      	movs	r4, #1

08015332 <??conn_mngr_process_evnt_clbk_22>:
 8015332:	b100      	cbz	r0, 8015336 <??conn_mngr_process_evnt_clbk_23>

08015334 <??conn_mngr_process_evnt_clbk_21>:
 8015334:	7268      	strb	r0, [r5, #9]

08015336 <??conn_mngr_process_evnt_clbk_23>:
 8015336:	f89a 0009 	ldrb.w	r0, [sl, #9]
 801533a:	b100      	cbz	r0, 801533e <??conn_mngr_process_evnt_clbk_24>
 801533c:	72a8      	strb	r0, [r5, #10]

0801533e <??conn_mngr_process_evnt_clbk_24>:
 801533e:	7a69      	ldrb	r1, [r5, #9]
 8015340:	2000      	movs	r0, #0
 8015342:	7468      	strb	r0, [r5, #17]
 8015344:	f106 0090 	add.w	r0, r6, #144	; 0x90
 8015348:	2904      	cmp	r1, #4
 801534a:	bf0c      	ite	eq
 801534c:	8c41      	ldrheq	r1, [r0, #34]	; 0x22
 801534e:	8c01      	ldrhne	r1, [r0, #32]
 8015350:	83c1      	strh	r1, [r0, #30]
 8015352:	7aa9      	ldrb	r1, [r5, #10]
 8015354:	2904      	cmp	r1, #4
 8015356:	bf0c      	ite	eq
 8015358:	8cc1      	ldrheq	r1, [r0, #38]	; 0x26
 801535a:	8c81      	ldrhne	r1, [r0, #36]	; 0x24
 801535c:	8bc2      	ldrh	r2, [r0, #30]
 801535e:	8341      	strh	r1, [r0, #26]
 8015360:	6b00      	ldr	r0, [r0, #48]	; 0x30
 8015362:	1889      	adds	r1, r1, r2
 8015364:	f7ec fd1f 	bl	8001da6 <evnt_schdlr_updt_conn_evnt_durn>
 8015368:	2c00      	cmp	r4, #0
 801536a:	bf14      	ite	ne
 801536c:	2004      	movne	r0, #4
 801536e:	2003      	moveq	r0, #3
 8015370:	7568      	strb	r0, [r5, #21]
 8015372:	7828      	ldrb	r0, [r5, #0]
 8015374:	280c      	cmp	r0, #12
 8015376:	bf04      	itt	eq
 8015378:	2100      	moveq	r1, #0
 801537a:	7029      	strbeq	r1, [r5, #0]
 801537c:	7868      	ldrb	r0, [r5, #1]
 801537e:	280c      	cmp	r0, #12
 8015380:	bf04      	itt	eq
 8015382:	2100      	moveq	r1, #0
 8015384:	7069      	strbeq	r1, [r5, #1]
 8015386:	2000      	movs	r0, #0
 8015388:	f88a 000c 	strb.w	r0, [sl, #12]
 801538c:	7d29      	ldrb	r1, [r5, #20]
 801538e:	2901      	cmp	r1, #1
 8015390:	d13f      	bne.n	8015412 <??conn_mngr_process_evnt_clbk_1>
 8015392:	7aa8      	ldrb	r0, [r5, #10]
 8015394:	7ca9      	ldrb	r1, [r5, #18]
 8015396:	4208      	tst	r0, r1
 8015398:	d03b      	beq.n	8015412 <??conn_mngr_process_evnt_clbk_1>
 801539a:	f106 0030 	add.w	r0, r6, #48	; 0x30
 801539e:	f000 fc2c 	bl	8015bfa <conn_mngr_calc_num_of_used_data_chnls>
 80153a2:	7ce9      	ldrb	r1, [r5, #19]
 80153a4:	4288      	cmp	r0, r1
 80153a6:	d234      	bcs.n	8015412 <??conn_mngr_process_evnt_clbk_1>
 80153a8:	2205      	movs	r2, #5
 80153aa:	f106 0130 	add.w	r1, r6, #48	; 0x30
 80153ae:	a807      	add	r0, sp, #28
 80153b0:	f7f9 fbca 	bl	800eb48 <ble_memcpy>
 80153b4:	a907      	add	r1, sp, #28
 80153b6:	4630      	mov	r0, r6
 80153b8:	f7f0 fe08 	bl	8005fcc <llcp_set_req_chnls_in_min_chnls_prcdr>
 80153bc:	a907      	add	r1, sp, #28
 80153be:	4630      	mov	r0, r6
 80153c0:	f7f2 fe04 	bl	8007fcc <llcp_update_chnl_map_per_connection>
 80153c4:	e025      	b.n	8015412 <??conn_mngr_process_evnt_clbk_1>

080153c6 <??conn_mngr_process_evnt_clbk_25>:
 80153c6:	f206 1023 	addw	r0, r6, #291	; 0x123
 80153ca:	7a82      	ldrb	r2, [r0, #10]
 80153cc:	7a41      	ldrb	r1, [r0, #9]
 80153ce:	2300      	movs	r3, #0
 80153d0:	4630      	mov	r0, r6
 80153d2:	f000 fdcb 	bl	8015f6c <conn_mngr_send_le_phy_update_complete_event>
 80153d6:	f106 016c 	add.w	r1, r6, #108	; 0x6c
 80153da:	730c      	strb	r4, [r1, #12]
 80153dc:	e019      	b.n	8015412 <??conn_mngr_process_evnt_clbk_1>

080153de <??conn_mngr_process_evnt_clbk_26>:
 80153de:	f8df 0510 	ldr.w	r0, [pc, #1296]	; 80158f0 <??DataTable13_1>
 80153e2:	6801      	ldr	r1, [r0, #0]
 80153e4:	688c      	ldr	r4, [r1, #8]
 80153e6:	b1a4      	cbz	r4, 8015412 <??conn_mngr_process_evnt_clbk_1>
 80153e8:	2200      	movs	r2, #0
 80153ea:	2300      	movs	r3, #0
 80153ec:	9506      	str	r5, [sp, #24]
 80153ee:	9505      	str	r5, [sp, #20]
 80153f0:	9204      	str	r2, [sp, #16]
 80153f2:	9303      	str	r3, [sp, #12]
 80153f4:	9502      	str	r5, [sp, #8]
 80153f6:	9501      	str	r5, [sp, #4]
 80153f8:	9200      	str	r2, [sp, #0]
 80153fa:	21ff      	movs	r1, #255	; 0xff
 80153fc:	2002      	movs	r0, #2
 80153fe:	47a0      	blx	r4
 8015400:	e007      	b.n	8015412 <??conn_mngr_process_evnt_clbk_1>

08015402 <??conn_mngr_process_evnt_clbk_27>:
 8015402:	2016      	movs	r0, #22
 8015404:	f106 016c 	add.w	r1, r6, #108	; 0x6c
 8015408:	7208      	strb	r0, [r1, #8]
 801540a:	2116      	movs	r1, #22

0801540c <??conn_mngr_process_evnt_clbk_3>:
 801540c:	4630      	mov	r0, r6
 801540e:	f000 fc93 	bl	8015d38 <conn_mngr_disconnect>

08015412 <??conn_mngr_process_evnt_clbk_1>:
 8015412:	208a      	movs	r0, #138	; 0x8a
 8015414:	f7ea ff0a 	bl	800022c <bsp_debug_gpio_clear>
 8015418:	b00a      	add	sp, #40	; 0x28
 801541a:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}

0801541e <conn_mngr_free_all_timers>:
 801541e:	b538      	push	{r3, r4, r5, lr}
 8015420:	4604      	mov	r4, r0
 8015422:	f104 05c4 	add.w	r5, r4, #196	; 0xc4
 8015426:	6828      	ldr	r0, [r5, #0]
 8015428:	b110      	cbz	r0, 8015430 <??conn_mngr_free_all_timers_0>
 801542a:	4628      	mov	r0, r5
 801542c:	f7f0 fadf 	bl	80059ee <os_timer_stop_free>

08015430 <??conn_mngr_free_all_timers_0>:
 8015430:	6868      	ldr	r0, [r5, #4]
 8015432:	b118      	cbz	r0, 801543c <??conn_mngr_free_all_timers_1>
 8015434:	f104 00c8 	add.w	r0, r4, #200	; 0xc8
 8015438:	f7f0 fad9 	bl	80059ee <os_timer_stop_free>

0801543c <??conn_mngr_free_all_timers_1>:
 801543c:	68e8      	ldr	r0, [r5, #12]
 801543e:	b118      	cbz	r0, 8015448 <??conn_mngr_free_all_timers_2>
 8015440:	f104 00d0 	add.w	r0, r4, #208	; 0xd0
 8015444:	f7f0 fad3 	bl	80059ee <os_timer_stop_free>

08015448 <??conn_mngr_free_all_timers_2>:
 8015448:	68a8      	ldr	r0, [r5, #8]
 801544a:	b118      	cbz	r0, 8015454 <??conn_mngr_free_all_timers_3>
 801544c:	f104 00cc 	add.w	r0, r4, #204	; 0xcc
 8015450:	f7f0 facd 	bl	80059ee <os_timer_stop_free>

08015454 <??conn_mngr_free_all_timers_3>:
 8015454:	6928      	ldr	r0, [r5, #16]
 8015456:	b128      	cbz	r0, 8015464 <??conn_mngr_free_all_timers_4>
 8015458:	f104 00d4 	add.w	r0, r4, #212	; 0xd4
 801545c:	e8bd 4032 	ldmia.w	sp!, {r1, r4, r5, lr}
 8015460:	f7f0 bac5 	b.w	80059ee <os_timer_stop_free>

08015464 <??conn_mngr_free_all_timers_4>:
 8015464:	bd31      	pop	{r0, r4, r5, pc}

08015466 <conn_mngr_start_connection>:
 8015466:	e92d 4dfc 	stmdb	sp!, {r2, r3, r4, r5, r6, r7, r8, sl, fp, lr}
 801546a:	b08a      	sub	sp, #40	; 0x28
 801546c:	4606      	mov	r6, r0
 801546e:	9816      	ldr	r0, [sp, #88]	; 0x58
 8015470:	461d      	mov	r5, r3
 8015472:	2401      	movs	r4, #1
 8015474:	2300      	movs	r3, #0
 8015476:	f88d 401c 	strb.w	r4, [sp, #28]
 801547a:	4693      	mov	fp, r2
 801547c:	9309      	str	r3, [sp, #36]	; 0x24
 801547e:	9308      	str	r3, [sp, #32]
 8015480:	f106 0421 	add.w	r4, r6, #33	; 0x21
 8015484:	ea5f 0800 	movs.w	r8, r0
 8015488:	bf07      	ittee	eq
 801548a:	f04f 0880 	moveq.w	r8, #128	; 0x80
 801548e:	469a      	moveq	sl, r3
 8015490:	f44f 7880 	movne.w	r8, #256	; 0x100
 8015494:	f894 a000 	ldrbne.w	sl, [r4]
 8015498:	f88d 1000 	strb.w	r1, [sp]
 801549c:	f206 1725 	addw	r7, r6, #293	; 0x125
 80154a0:	7038      	strb	r0, [r7, #0]
 80154a2:	70e3      	strb	r3, [r4, #3]
 80154a4:	f106 0128 	add.w	r1, r6, #40	; 0x28
 80154a8:	f106 0024 	add.w	r0, r6, #36	; 0x24
 80154ac:	f7f3 febc 	bl	8009228 <llhwc_get_ch_idx>
 80154b0:	48d7      	ldr	r0, [pc, #860]	; (8015810 <??DataTable12>)
 80154b2:	7b01      	ldrb	r1, [r0, #12]
 80154b4:	1c49      	adds	r1, r1, #1
 80154b6:	7301      	strb	r1, [r0, #12]
 80154b8:	f89d 0000 	ldrb.w	r0, [sp]
 80154bc:	2802      	cmp	r0, #2
 80154be:	bf14      	ite	ne
 80154c0:	2803      	cmpne	r0, #3
 80154c2:	9509      	streq	r5, [sp, #36]	; 0x24
 80154c4:	9815      	ldr	r0, [sp, #84]	; 0x54
 80154c6:	f8df 5428 	ldr.w	r5, [pc, #1064]	; 80158f0 <??DataTable13_1>
 80154ca:	f000 0001 	and.w	r0, r0, #1
 80154ce:	7178      	strb	r0, [r7, #5]
 80154d0:	6828      	ldr	r0, [r5, #0]
 80154d2:	f8d0 c008 	ldr.w	ip, [r0, #8]
 80154d6:	f1bc 0f00 	cmp.w	ip, #0
 80154da:	d013      	beq.n	8015504 <??conn_mngr_start_connection_0>
 80154dc:	f8cd a018 	str.w	sl, [sp, #24]
 80154e0:	8b70      	ldrh	r0, [r6, #26]
 80154e2:	9005      	str	r0, [sp, #20]
 80154e4:	8b31      	ldrh	r1, [r6, #24]
 80154e6:	9104      	str	r1, [sp, #16]
 80154e8:	8af0      	ldrh	r0, [r6, #22]
 80154ea:	9909      	ldr	r1, [sp, #36]	; 0x24
 80154ec:	f8cd b004 	str.w	fp, [sp, #4]
 80154f0:	9003      	str	r0, [sp, #12]
 80154f2:	9102      	str	r1, [sp, #8]
 80154f4:	9600      	str	r6, [sp, #0]
 80154f6:	78a3      	ldrb	r3, [r4, #2]
 80154f8:	783a      	ldrb	r2, [r7, #0]
 80154fa:	f106 00c0 	add.w	r0, r6, #192	; 0xc0
 80154fe:	8bc1      	ldrh	r1, [r0, #30]
 8015500:	2000      	movs	r0, #0
 8015502:	47e0      	blx	ip

08015504 <??conn_mngr_start_connection_0>:
 8015504:	6828      	ldr	r0, [r5, #0]
 8015506:	6c82      	ldr	r2, [r0, #72]	; 0x48
 8015508:	b122      	cbz	r2, 8015514 <??conn_mngr_start_connection_1>
 801550a:	f106 00c0 	add.w	r0, r6, #192	; 0xc0
 801550e:	7979      	ldrb	r1, [r7, #5]
 8015510:	8bc0      	ldrh	r0, [r0, #30]
 8015512:	4790      	blx	r2

08015514 <??conn_mngr_start_connection_1>:
 8015514:	78a2      	ldrb	r2, [r4, #2]
 8015516:	2a01      	cmp	r2, #1
 8015518:	bf02      	ittt	eq
 801551a:	7970      	ldrbeq	r0, [r6, #5]
 801551c:	0980      	lsreq	r0, r0, #6
 801551e:	2801      	cmpeq	r0, #1
 8015520:	bf04      	itt	eq
 8015522:	9814      	ldreq	r0, [sp, #80]	; 0x50
 8015524:	2801      	cmpeq	r0, #1
 8015526:	d013      	beq.n	8015550 <??conn_mngr_start_connection_2>
 8015528:	2000      	movs	r0, #0
 801552a:	9000      	str	r0, [sp, #0]
 801552c:	4633      	mov	r3, r6
 801552e:	2101      	movs	r1, #1
 8015530:	f7f4 f8b8 	bl	80096a4 <llhwc_lst_add_rmv_dev>
 8015534:	2300      	movs	r3, #0
 8015536:	aa08      	add	r2, sp, #32
 8015538:	4631      	mov	r1, r6
 801553a:	2002      	movs	r0, #2
 801553c:	f7fe fbbe 	bl	8013cbc <prvcy_mngr_srch_fw_reslvng_list>
 8015540:	0004      	movs	r4, r0
 8015542:	d13f      	bne.n	80155c4 <??conn_mngr_start_connection_3>
 8015544:	9808      	ldr	r0, [sp, #32]
 8015546:	b158      	cbz	r0, 8015560 <??conn_mngr_start_connection_4>
 8015548:	6801      	ldr	r1, [r0, #0]
 801554a:	f88d 101c 	strb.w	r1, [sp, #28]
 801554e:	e007      	b.n	8015560 <??conn_mngr_start_connection_4>

08015550 <??conn_mngr_start_connection_2>:
 8015550:	ab07      	add	r3, sp, #28
 8015552:	4632      	mov	r2, r6
 8015554:	2101      	movs	r1, #1
 8015556:	2003      	movs	r0, #3
 8015558:	f7f3 ffa2 	bl	80094a0 <llhwc_lst_search>
 801555c:	0004      	movs	r4, r0
 801555e:	d131      	bne.n	80155c4 <??conn_mngr_start_connection_3>

08015560 <??conn_mngr_start_connection_4>:
 8015560:	f89d 001c 	ldrb.w	r0, [sp, #28]
 8015564:	07c1      	lsls	r1, r0, #31
 8015566:	d404      	bmi.n	8015572 <??conn_mngr_start_connection_5>
 8015568:	4601      	mov	r1, r0
 801556a:	2200      	movs	r2, #0
 801556c:	2001      	movs	r0, #1
 801556e:	f7f4 fa75 	bl	8009a5c <llhwc_lst_edit_indicators>

08015572 <??conn_mngr_start_connection_5>:
 8015572:	8af0      	ldrh	r0, [r6, #22]
 8015574:	f106 05c0 	add.w	r5, r6, #192	; 0xc0
 8015578:	eb00 0080 	add.w	r0, r0, r0, lsl #2
 801557c:	1080      	asrs	r0, r0, #2
 801557e:	eb00 0140 	add.w	r1, r0, r0, lsl #1
 8015582:	6868      	ldr	r0, [r5, #4]
 8015584:	0189      	lsls	r1, r1, #6
 8015586:	f7f0 fa3f 	bl	8005a08 <os_timer_set>
 801558a:	f7f6 fd21 	bl	800bfd0 <llhwc_is_in_augmented_mode>
 801558e:	b108      	cbz	r0, 8015594 <??conn_mngr_start_connection_6>
 8015590:	2001      	movs	r0, #1
 8015592:	70b8      	strb	r0, [r7, #2]

08015594 <??conn_mngr_start_connection_6>:
 8015594:	2200      	movs	r2, #0
 8015596:	9202      	str	r2, [sp, #8]
 8015598:	9201      	str	r2, [sp, #4]
 801559a:	9600      	str	r6, [sp, #0]
 801559c:	f8df 3b3c 	ldr.w	r3, [pc, #2876]	; 80160dc <??DataTable27>
 80155a0:	4632      	mov	r2, r6
 80155a2:	4640      	mov	r0, r8
 80155a4:	2100      	movs	r1, #0
 80155a6:	f7eb fea7 	bl	80012f8 <evnt_schdlr_rgstr_evnt>
 80155aa:	2800      	cmp	r0, #0
 80155ac:	bf14      	ite	ne
 80155ae:	2101      	movne	r1, #1
 80155b0:	2100      	moveq	r1, #0
 80155b2:	6028      	str	r0, [r5, #0]
 80155b4:	4608      	mov	r0, r1
 80155b6:	f7ea fe0b 	bl	80001d0 <bsp_assert>
 80155ba:	6829      	ldr	r1, [r5, #0]
 80155bc:	f8df 0b20 	ldr.w	r0, [pc, #2848]	; 80160e0 <??DataTable27_1>
 80155c0:	f7ec fc3e 	bl	8001e40 <evnt_schdlr_rgstr_error_cbk_evnt_cmplt>

080155c4 <??conn_mngr_start_connection_3>:
 80155c4:	4620      	mov	r0, r4
 80155c6:	b00c      	add	sp, #48	; 0x30
 80155c8:	e8bd 8df0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, sl, fp, pc}

080155cc <conn_mngr_init>:
 80155cc:	b580      	push	{r7, lr}
 80155ce:	f8df 2b14 	ldr.w	r2, [pc, #2836]	; 80160e4 <??DataTable27_2>
 80155d2:	2108      	movs	r1, #8
 80155d4:	2002      	movs	r0, #2
 80155d6:	f7ea fe63 	bl	80002a0 <emngr_handle_init>
 80155da:	f60f 02c9 	addw	r2, pc, #2249	; 0x8c9
 80155de:	2101      	movs	r1, #1
 80155e0:	2003      	movs	r0, #3
 80155e2:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 80155e6:	f7ea be5b 	b.w	80002a0 <emngr_handle_init>

080155ea <conn_mngr_reset>:
 80155ea:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80155ee:	4e88      	ldr	r6, [pc, #544]	; (8015810 <??DataTable12>)
 80155f0:	f8d6 8030 	ldr.w	r8, [r6, #48]	; 0x30
 80155f4:	2294      	movs	r2, #148	; 0x94
 80155f6:	2100      	movs	r1, #0
 80155f8:	48bc      	ldr	r0, [pc, #752]	; (80158ec <??DataTable13>)
 80155fa:	f7f9 faf6 	bl	800ebea <ble_memset>
 80155fe:	220c      	movs	r2, #12
 8015600:	2100      	movs	r1, #0
 8015602:	4630      	mov	r0, r6
 8015604:	f7f9 faf1 	bl	800ebea <ble_memset>
 8015608:	2205      	movs	r2, #5
 801560a:	f8df 1adc 	ldr.w	r1, [pc, #2780]	; 80160e8 <??DataTable27_3>
 801560e:	1db0      	adds	r0, r6, #6
 8015610:	f7f9 fa9a 	bl	800eb48 <ble_memcpy>
 8015614:	f106 0710 	add.w	r7, r6, #16
 8015618:	2408      	movs	r4, #8

0801561a <??conn_mngr_reset_0>:
 801561a:	683d      	ldr	r5, [r7, #0]
 801561c:	b155      	cbz	r5, 8015634 <??conn_mngr_reset_1>
 801561e:	f8d5 00c0 	ldr.w	r0, [r5, #192]	; 0xc0
 8015622:	b108      	cbz	r0, 8015628 <??conn_mngr_reset_2>
 8015624:	f7eb ff67 	bl	80014f6 <evnt_schdlr_unrgstr_evnt>

08015628 <??conn_mngr_reset_2>:
 8015628:	4628      	mov	r0, r5
 801562a:	f7ff fef8 	bl	801541e <conn_mngr_free_all_timers>
 801562e:	4628      	mov	r0, r5
 8015630:	f7ef fdf4 	bl	800521c <os_mem_pool_free>

08015634 <??conn_mngr_reset_1>:
 8015634:	1d3f      	adds	r7, r7, #4
 8015636:	1e64      	subs	r4, r4, #1
 8015638:	d1ef      	bne.n	801561a <??conn_mngr_reset_0>
 801563a:	2002      	movs	r0, #2
 801563c:	f7ea fe3a 	bl	80002b4 <emngr_handle_remove>
 8015640:	2000      	movs	r0, #0
 8015642:	7330      	strb	r0, [r6, #12]
 8015644:	2220      	movs	r2, #32
 8015646:	2100      	movs	r1, #0
 8015648:	f106 0010 	add.w	r0, r6, #16
 801564c:	f7f9 facd 	bl	800ebea <ble_memset>
 8015650:	4640      	mov	r0, r8
 8015652:	e005      	b.n	8015660 <??conn_mngr_reset_3>

08015654 <??conn_mngr_reset_4>:
 8015654:	6b31      	ldr	r1, [r6, #48]	; 0x30
 8015656:	694a      	ldr	r2, [r1, #20]
 8015658:	6332      	str	r2, [r6, #48]	; 0x30
 801565a:	f7ef fddf 	bl	800521c <os_mem_pool_free>
 801565e:	6b30      	ldr	r0, [r6, #48]	; 0x30

08015660 <??conn_mngr_reset_3>:
 8015660:	2800      	cmp	r0, #0
 8015662:	d1f7      	bne.n	8015654 <??conn_mngr_reset_4>
 8015664:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

08015668 <conn_mngr_create_connection>:
 8015668:	e92d 41fc 	stmdb	sp!, {r2, r3, r4, r5, r6, r7, r8, lr}
 801566c:	0007      	movs	r7, r0
 801566e:	460d      	mov	r5, r1
 8015670:	4616      	mov	r6, r2
 8015672:	bf18      	it	ne
 8015674:	2001      	movne	r0, #1
 8015676:	f7ea fdab 	bl	80001d0 <bsp_assert>
 801567a:	2d00      	cmp	r5, #0
 801567c:	bf14      	ite	ne
 801567e:	2001      	movne	r0, #1
 8015680:	2000      	moveq	r0, #0
 8015682:	f7ea fda5 	bl	80001d0 <bsp_assert>
 8015686:	2e00      	cmp	r6, #0
 8015688:	bf14      	ite	ne
 801568a:	2001      	movne	r0, #1
 801568c:	2000      	moveq	r0, #0
 801568e:	f7ea fd9f 	bl	80001d0 <bsp_assert>
 8015692:	f7ff fa03 	bl	8014a9c <conn_mngr_alloc_handle>
 8015696:	ea5f 0800 	movs.w	r8, r0
 801569a:	bf14      	ite	ne
 801569c:	2001      	movne	r0, #1
 801569e:	2000      	moveq	r0, #0
 80156a0:	f7ea fd96 	bl	80001d0 <bsp_assert>
 80156a4:	4638      	mov	r0, r7
 80156a6:	f7fe ffb3 	bl	8014610 <state_mngr_get_state_type>
 80156aa:	2804      	cmp	r0, #4
 80156ac:	bf0c      	ite	eq
 80156ae:	2001      	moveq	r0, #1
 80156b0:	2000      	movne	r0, #0
 80156b2:	f7ea fd8d 	bl	80001d0 <bsp_assert>
 80156b6:	f108 04bc 	add.w	r4, r8, #188	; 0xbc
 80156ba:	6027      	str	r7, [r4, #0]
 80156bc:	2100      	movs	r1, #0
 80156be:	f106 002c 	add.w	r0, r6, #44	; 0x2c
 80156c2:	f000 ffae 	bl	8016622 <utils_gen_access_addr>
 80156c6:	f106 0028 	add.w	r0, r6, #40	; 0x28
 80156ca:	f001 f83d 	bl	8016748 <utils_gen_crc_init>
 80156ce:	2205      	movs	r2, #5
 80156d0:	f8df 1a18 	ldr.w	r1, [pc, #2584]	; 80160ec <??DataTable27_4>
 80156d4:	f106 0030 	add.w	r0, r6, #48	; 0x30
 80156d8:	f7f9 fa36 	bl	800eb48 <ble_memcpy>
 80156dc:	f106 0021 	add.w	r0, r6, #33	; 0x21
 80156e0:	f000 fe65 	bl	80163ae <db_get_slp_clk_accuracy>
 80156e4:	f116 0026 	adds.w	r0, r6, #38	; 0x26
 80156e8:	bf18      	it	ne
 80156ea:	2001      	movne	r0, #1
 80156ec:	f7ea fd70 	bl	80001d0 <bsp_assert>
 80156f0:	2001      	movs	r0, #1
 80156f2:	f88d 0000 	strb.w	r0, [sp]
 80156f6:	2101      	movs	r1, #1
 80156f8:	4668      	mov	r0, sp
 80156fa:	f7f6 fa56 	bl	800bbaa <llhwc_gen_rnd_num>
 80156fe:	f89d 0000 	ldrb.w	r0, [sp]
 8015702:	f8df 19ec 	ldr.w	r1, [pc, #2540]	; 80160f0 <??DataTable27_5>
 8015706:	fb80 2101 	smull	r2, r1, r0, r1
 801570a:	10c9      	asrs	r1, r1, #3
 801570c:	eb01 71d1 	add.w	r1, r1, r1, lsr #31
 8015710:	eb01 1101 	add.w	r1, r1, r1, lsl #4
 8015714:	1a40      	subs	r0, r0, r1
 8015716:	f88d 0000 	strb.w	r0, [sp]
 801571a:	f89d 0000 	ldrb.w	r0, [sp]
 801571e:	2805      	cmp	r0, #5
 8015720:	bfbc      	itt	lt
 8015722:	1d40      	addlt	r0, r0, #5
 8015724:	f88d 0000 	strblt.w	r0, [sp]
 8015728:	f89d 1000 	ldrb.w	r1, [sp]
 801572c:	f106 0020 	add.w	r0, r6, #32
 8015730:	2202      	movs	r2, #2
 8015732:	7181      	strb	r1, [r0, #6]
 8015734:	7002      	strb	r2, [r0, #0]
 8015736:	2238      	movs	r2, #56	; 0x38
 8015738:	4631      	mov	r1, r6
 801573a:	4640      	mov	r0, r8
 801573c:	f7f9 fa04 	bl	800eb48 <ble_memcpy>
 8015740:	8c60      	ldrh	r0, [r4, #34]	; 0x22
 8015742:	8028      	strh	r0, [r5, #0]
 8015744:	2000      	movs	r0, #0
 8015746:	e8bd 81f6 	ldmia.w	sp!, {r1, r2, r4, r5, r6, r7, r8, pc}
	...

0801574c <??DataTable10>:
 801574c:	6e98 8312                                   .n..

08015750 <conn_mngr_check_duplicate_connection>:
 8015750:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8015754:	4605      	mov	r5, r0
 8015756:	4688      	mov	r8, r1
 8015758:	2700      	movs	r7, #0
 801575a:	b105      	cbz	r5, 801575e <??conn_mngr_check_duplicate_connection_0>
 801575c:	2001      	movs	r0, #1

0801575e <??conn_mngr_check_duplicate_connection_0>:
 801575e:	f7ea fd37 	bl	80001d0 <bsp_assert>
 8015762:	f8df 6990 	ldr.w	r6, [pc, #2448]	; 80160f4 <??DataTable27_6>
 8015766:	2408      	movs	r4, #8

08015768 <??conn_mngr_check_duplicate_connection_1>:
 8015768:	6831      	ldr	r1, [r6, #0]
 801576a:	b141      	cbz	r1, 801577e <??conn_mngr_check_duplicate_connection_2>
 801576c:	f891 2023 	ldrb.w	r2, [r1, #35]	; 0x23
 8015770:	4590      	cmp	r8, r2
 8015772:	d104      	bne.n	801577e <??conn_mngr_check_duplicate_connection_2>
 8015774:	2206      	movs	r2, #6
 8015776:	4628      	mov	r0, r5
 8015778:	f7f9 fa71 	bl	800ec5e <ble_memcmp>
 801577c:	b118      	cbz	r0, 8015786 <??conn_mngr_check_duplicate_connection_3>

0801577e <??conn_mngr_check_duplicate_connection_2>:
 801577e:	1d36      	adds	r6, r6, #4
 8015780:	1e64      	subs	r4, r4, #1
 8015782:	d1f1      	bne.n	8015768 <??conn_mngr_check_duplicate_connection_1>
 8015784:	e000      	b.n	8015788 <??conn_mngr_check_duplicate_connection_4>

08015786 <??conn_mngr_check_duplicate_connection_3>:
 8015786:	270b      	movs	r7, #11

08015788 <??conn_mngr_check_duplicate_connection_4>:
 8015788:	4638      	mov	r0, r7
 801578a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
	...

08015790 <??DataTable11>:
 8015790:	851f 51eb                                   ...Q

08015794 <??DataTable11_1>:
 8015794:	361c 2000                                   .6. 

08015798 <conn_mngr_master_start_connection>:
 8015798:	e92d 41f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, lr}
 801579c:	2700      	movs	r7, #0
 801579e:	b083      	sub	sp, #12
 80157a0:	460e      	mov	r6, r1
 80157a2:	4690      	mov	r8, r2
 80157a4:	2808      	cmp	r0, #8
 80157a6:	da2f      	bge.n	8015808 <??conn_mngr_master_start_connection_0>
 80157a8:	4919      	ldr	r1, [pc, #100]	; (8015810 <??DataTable12>)
 80157aa:	eb01 0080 	add.w	r0, r1, r0, lsl #2
 80157ae:	6904      	ldr	r4, [r0, #16]
 80157b0:	b354      	cbz	r4, 8015808 <??conn_mngr_master_start_connection_0>
 80157b2:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 80157b4:	f884 6023 	strb.w	r6, [r4, #35]	; 0x23
 80157b8:	4619      	mov	r1, r3
 80157ba:	f104 0008 	add.w	r0, r4, #8
 80157be:	f7ff f811 	bl	80147e4 <ble_time_set>
 80157c2:	8a21      	ldrh	r1, [r4, #16]
 80157c4:	f894 2020 	ldrb.w	r2, [r4, #32]
 80157c8:	68a0      	ldr	r0, [r4, #8]
 80157ca:	eb01 0152 	add.w	r1, r1, r2, lsr #1
 80157ce:	2206      	movs	r2, #6
 80157d0:	eb01 0381 	add.w	r3, r1, r1, lsl #2
 80157d4:	eb00 00c3 	add.w	r0, r0, r3, lsl #3
 80157d8:	60a0      	str	r0, [r4, #8]
 80157da:	4641      	mov	r1, r8
 80157dc:	4620      	mov	r0, r4
 80157de:	f7f9 f9b3 	bl	800eb48 <ble_memcpy>
 80157e2:	2d02      	cmp	r5, #2
 80157e4:	bf14      	ite	ne
 80157e6:	2d03      	cmpne	r5, #3
 80157e8:	9f0d      	ldreq	r7, [sp, #52]	; 0x34
 80157ea:	2000      	movs	r0, #0
 80157ec:	9002      	str	r0, [sp, #8]
 80157ee:	f89d 1038 	ldrb.w	r1, [sp, #56]	; 0x38
 80157f2:	f89d 002c 	ldrb.w	r0, [sp, #44]	; 0x2c
 80157f6:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 80157f8:	9101      	str	r1, [sp, #4]
 80157fa:	9000      	str	r0, [sp, #0]
 80157fc:	463a      	mov	r2, r7
 80157fe:	4631      	mov	r1, r6
 8015800:	4620      	mov	r0, r4
 8015802:	f7ff fe30 	bl	8015466 <conn_mngr_start_connection>
 8015806:	e000      	b.n	801580a <?Subroutine0>

08015808 <??conn_mngr_master_start_connection_0>:
 8015808:	2002      	movs	r0, #2

0801580a <?Subroutine0>:
 801580a:	b004      	add	sp, #16
 801580c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

08015810 <??DataTable12>:
 8015810:	03d8 2000                                   ... 

08015814 <conn_mngr_slave_start_connection>:
 8015814:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8015818:	b083      	sub	sp, #12
 801581a:	4681      	mov	r9, r0
 801581c:	460c      	mov	r4, r1
 801581e:	4690      	mov	r8, r2
 8015820:	469a      	mov	sl, r3
 8015822:	2700      	movs	r7, #0
 8015824:	f7fe fef4 	bl	8014610 <state_mngr_get_state_type>
 8015828:	2805      	cmp	r0, #5
 801582a:	bf0c      	ite	eq
 801582c:	2001      	moveq	r0, #1
 801582e:	2000      	movne	r0, #0
 8015830:	f7ea fcce 	bl	80001d0 <bsp_assert>
 8015834:	2c00      	cmp	r4, #0
 8015836:	bf14      	ite	ne
 8015838:	2001      	movne	r0, #1
 801583a:	2000      	moveq	r0, #0
 801583c:	f7ea fcc8 	bl	80001d0 <bsp_assert>
 8015840:	f7ff f92c 	bl	8014a9c <conn_mngr_alloc_handle>
 8015844:	0005      	movs	r5, r0
 8015846:	bf14      	ite	ne
 8015848:	2001      	movne	r0, #1
 801584a:	2000      	moveq	r0, #0
 801584c:	9e0f      	ldr	r6, [sp, #60]	; 0x3c
 801584e:	f7ea fcbf 	bl	80001d0 <bsp_assert>
 8015852:	f105 00bc 	add.w	r0, r5, #188	; 0xbc
 8015856:	b10e      	cbz	r6, 801585c <??conn_mngr_slave_start_connection_0>
 8015858:	8c41      	ldrh	r1, [r0, #34]	; 0x22
 801585a:	7031      	strb	r1, [r6, #0]

0801585c <??conn_mngr_slave_start_connection_0>:
 801585c:	f8dd b040 	ldr.w	fp, [sp, #64]	; 0x40
 8015860:	9e0c      	ldr	r6, [sp, #48]	; 0x30
 8015862:	f8c0 9000 	str.w	r9, [r0]
 8015866:	2238      	movs	r2, #56	; 0x38
 8015868:	4621      	mov	r1, r4
 801586a:	4628      	mov	r0, r5
 801586c:	f7f9 f96c 	bl	800eb48 <ble_memcpy>
 8015870:	8a28      	ldrh	r0, [r5, #16]
 8015872:	f895 3020 	ldrb.w	r3, [r5, #32]
 8015876:	68a9      	ldr	r1, [r5, #8]
 8015878:	eb00 0253 	add.w	r2, r0, r3, lsr #1
 801587c:	eb02 0c82 	add.w	ip, r2, r2, lsl #2
 8015880:	eb01 01cc 	add.w	r1, r1, ip, lsl #3
 8015884:	60a9      	str	r1, [r5, #8]
 8015886:	f8df 2870 	ldr.w	r2, [pc, #2160]	; 80160f8 <??DataTable27_7>
 801588a:	fbab 2102 	umull	r2, r1, fp, r2
 801588e:	eb00 2091 	add.w	r0, r0, r1, lsr #10
 8015892:	f104 0108 	add.w	r1, r4, #8
 8015896:	8228      	strh	r0, [r5, #16]
 8015898:	f105 0038 	add.w	r0, r5, #56	; 0x38
 801589c:	f7fe ffa2 	bl	80147e4 <ble_time_set>
 80158a0:	f505 7093 	add.w	r0, r5, #294	; 0x126
 80158a4:	f000 fd83 	bl	80163ae <db_get_slp_clk_accuracy>
 80158a8:	2e01      	cmp	r6, #1
 80158aa:	bf18      	it	ne
 80158ac:	2600      	movne	r6, #0
 80158ae:	980d      	ldr	r0, [sp, #52]	; 0x34
 80158b0:	2802      	cmp	r0, #2
 80158b2:	bf18      	it	ne
 80158b4:	2803      	cmpne	r0, #3
 80158b6:	d107      	bne.n	80158c8 <??conn_mngr_slave_start_connection_1>
 80158b8:	2e01      	cmp	r6, #1
 80158ba:	bf01      	itttt	eq
 80158bc:	980e      	ldreq	r0, [sp, #56]	; 0x38
 80158be:	7941      	ldrbeq	r1, [r0, #5]
 80158c0:	0989      	lsreq	r1, r1, #6
 80158c2:	2901      	cmpeq	r1, #1
 80158c4:	bf08      	it	eq
 80158c6:	4607      	moveq	r7, r0

080158c8 <??conn_mngr_slave_start_connection_1>:
 80158c8:	2001      	movs	r0, #1
 80158ca:	9002      	str	r0, [sp, #8]
 80158cc:	f895 1022 	ldrb.w	r1, [r5, #34]	; 0x22
 80158d0:	f8cd a000 	str.w	sl, [sp]
 80158d4:	4643      	mov	r3, r8
 80158d6:	9101      	str	r1, [sp, #4]
 80158d8:	f894 1023 	ldrb.w	r1, [r4, #35]	; 0x23
 80158dc:	463a      	mov	r2, r7
 80158de:	4628      	mov	r0, r5
 80158e0:	f7ff fdc1 	bl	8015466 <conn_mngr_start_connection>
 80158e4:	b003      	add	sp, #12
 80158e6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
	...

080158ec <??DataTable13>:
 80158ec:	3654 2000                                   T6. 

080158f0 <??DataTable13_1>:
 80158f0:	06f0 2000                                   ... 

080158f4 <??DataTable13_2>:
 80158f4:	03d8 2000                                   ... 

080158f8 <conn_mngr_send_pkt>:
 80158f8:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80158fc:	4689      	mov	r9, r1
 80158fe:	b086      	sub	sp, #24
 8015900:	2100      	movs	r1, #0
 8015902:	2600      	movs	r6, #0
 8015904:	9100      	str	r1, [sp, #0]
 8015906:	2808      	cmp	r0, #8
 8015908:	f300 8150 	bgt.w	8015bac <??conn_mngr_send_pkt_1>
 801590c:	f280 8148 	bge.w	8015ba0 <??conn_mngr_send_pkt_2>
 8015910:	f8df 17e8 	ldr.w	r1, [pc, #2024]	; 80160fc <??DataTable27_8>
 8015914:	eb01 0080 	add.w	r0, r1, r0, lsl #2
 8015918:	f8d0 8010 	ldr.w	r8, [r0, #16]
 801591c:	f1b8 0f00 	cmp.w	r8, #0
 8015920:	f000 813e 	beq.w	8015ba0 <??conn_mngr_send_pkt_2>
 8015924:	f508 7791 	add.w	r7, r8, #290	; 0x122
 8015928:	7ef8      	ldrb	r0, [r7, #27]
 801592a:	2801      	cmp	r0, #1
 801592c:	d12e      	bne.n	801598c <??conn_mngr_send_pkt_3>
 801592e:	f899 000e 	ldrb.w	r0, [r9, #14]
 8015932:	bb38      	cbnz	r0, 8015984 <??conn_mngr_send_pkt_4>
 8015934:	2101      	movs	r1, #1
 8015936:	f889 100e 	strb.w	r1, [r9, #14]
 801593a:	76f8      	strb	r0, [r7, #27]

0801593c <??conn_mngr_send_pkt_5>:
 801593c:	f108 0174 	add.w	r1, r8, #116	; 0x74
 8015940:	8f48      	ldrh	r0, [r1, #58]	; 0x3a
 8015942:	7cb9      	ldrb	r1, [r7, #18]
 8015944:	2900      	cmp	r1, #0
 8015946:	d06d      	beq.n	8015a24 <??conn_mngr_send_pkt_6>
 8015948:	2001      	movs	r0, #1
 801594a:	f7ea fc41 	bl	80001d0 <bsp_assert>
 801594e:	2001      	movs	r0, #1
 8015950:	f7ea fc3e 	bl	80001d0 <bsp_assert>
 8015954:	7aba      	ldrb	r2, [r7, #10]
 8015956:	7cb8      	ldrb	r0, [r7, #18]
 8015958:	f108 0474 	add.w	r4, r8, #116	; 0x74
 801595c:	7821      	ldrb	r1, [r4, #0]
 801595e:	4615      	mov	r5, r2
 8015960:	2805      	cmp	r0, #5
 8015962:	d82d      	bhi.n	80159c0 <??conn_mngr_send_pkt_7>
 8015964:	e8df f000 	tbb	[pc, r0]

08015968 <??conn_mngr_send_pkt_0>:
 8015968:	242f 031c 2f2f                              /$..//

0801596e <??conn_mngr_send_pkt_8>:
 801596e:	78fa      	ldrb	r2, [r7, #3]
 8015970:	2a01      	cmp	r2, #1
 8015972:	d125      	bne.n	80159c0 <??conn_mngr_send_pkt_7>
 8015974:	7860      	ldrb	r0, [r4, #1]
 8015976:	f20f 729c 	addw	r2, pc, #1948	; 0x79c
 801597a:	4001      	ands	r1, r0
 801597c:	5c55      	ldrb	r5, [r2, r1]
 801597e:	bb15      	cbnz	r5, 80159c6 <??conn_mngr_send_pkt_9>
 8015980:	5c15      	ldrb	r5, [r2, r0]
 8015982:	e020      	b.n	80159c6 <??conn_mngr_send_pkt_9>

08015984 <??conn_mngr_send_pkt_4>:
 8015984:	2000      	movs	r0, #0
 8015986:	f7ea fc23 	bl	80001d0 <bsp_assert>
 801598a:	e7d7      	b.n	801593c <??conn_mngr_send_pkt_5>

0801598c <??conn_mngr_send_pkt_3>:
 801598c:	f8b9 000c 	ldrh.w	r0, [r9, #12]
 8015990:	2800      	cmp	r0, #0
 8015992:	d1d3      	bne.n	801593c <??conn_mngr_send_pkt_5>
 8015994:	2101      	movs	r1, #1
 8015996:	76f9      	strb	r1, [r7, #27]
 8015998:	4648      	mov	r0, r9
 801599a:	f7fd fde1 	bl	8013560 <free_buff_hdr>
 801599e:	e10d      	b.n	8015bbc <??conn_mngr_send_pkt_10>

080159a0 <??conn_mngr_send_pkt_11>:
 80159a0:	78f8      	ldrb	r0, [r7, #3]
 80159a2:	2801      	cmp	r0, #1
 80159a4:	d10f      	bne.n	80159c6 <??conn_mngr_send_pkt_9>
 80159a6:	f20f 736c 	addw	r3, pc, #1900	; 0x76c
 80159aa:	430a      	orrs	r2, r1
 80159ac:	5c9d      	ldrb	r5, [r3, r2]
 80159ae:	e00a      	b.n	80159c6 <??conn_mngr_send_pkt_9>

080159b0 <??conn_mngr_send_pkt_12>:
 80159b0:	78f8      	ldrb	r0, [r7, #3]
 80159b2:	2800      	cmp	r0, #0
 80159b4:	bf0c      	ite	eq
 80159b6:	460d      	moveq	r5, r1
 80159b8:	7865      	ldrbne	r5, [r4, #1]
 80159ba:	b925      	cbnz	r5, 80159c6 <??conn_mngr_send_pkt_9>
 80159bc:	4615      	mov	r5, r2
 80159be:	e002      	b.n	80159c6 <??conn_mngr_send_pkt_9>

080159c0 <??conn_mngr_send_pkt_7>:
 80159c0:	2000      	movs	r0, #0
 80159c2:	f7ea fc05 	bl	80001d0 <bsp_assert>

080159c6 <??conn_mngr_send_pkt_9>:
 80159c6:	1e68      	subs	r0, r5, #1
 80159c8:	2801      	cmp	r0, #1
 80159ca:	d902      	bls.n	80159d2 <??conn_mngr_send_pkt_13>
 80159cc:	1ec0      	subs	r0, r0, #3
 80159ce:	d002      	beq.n	80159d6 <??conn_mngr_send_pkt_14>
 80159d0:	e004      	b.n	80159dc <??conn_mngr_send_pkt_15>

080159d2 <??conn_mngr_send_pkt_13>:
 80159d2:	8fa0      	ldrh	r0, [r4, #60]	; 0x3c
 80159d4:	e000      	b.n	80159d8 <??conn_mngr_send_pkt_16>

080159d6 <??conn_mngr_send_pkt_14>:
 80159d6:	8fe0      	ldrh	r0, [r4, #62]	; 0x3e

080159d8 <??conn_mngr_send_pkt_16>:
 80159d8:	8760      	strh	r0, [r4, #58]	; 0x3a
 80159da:	e002      	b.n	80159e2 <??conn_mngr_send_pkt_17>

080159dc <??conn_mngr_send_pkt_15>:
 80159dc:	2000      	movs	r0, #0
 80159de:	f7ea fbf7 	bl	80001d0 <bsp_assert>

080159e2 <??conn_mngr_send_pkt_17>:
 80159e2:	f897 a000 	ldrb.w	sl, [r7]
 80159e6:	8f60      	ldrh	r0, [r4, #58]	; 0x3a
 80159e8:	2d01      	cmp	r5, #1
 80159ea:	d012      	beq.n	8015a12 <??conn_mngr_send_pkt_18>
 80159ec:	2d02      	cmp	r5, #2
 80159ee:	d00d      	beq.n	8015a0c <??conn_mngr_send_pkt_19>
 80159f0:	2d04      	cmp	r5, #4
 80159f2:	d111      	bne.n	8015a18 <??conn_mngr_send_pkt_20>
 80159f4:	89b9      	ldrh	r1, [r7, #12]
 80159f6:	2902      	cmp	r1, #2
 80159f8:	d103      	bne.n	8015a02 <??conn_mngr_send_pkt_21>
 80159fa:	f5a0 7674 	sub.w	r6, r0, #976	; 0x3d0
 80159fe:	11b6      	asrs	r6, r6, #6
 8015a00:	e00d      	b.n	8015a1e <??conn_mngr_send_pkt_22>

08015a02 <??conn_mngr_send_pkt_21>:
 8015a02:	4606      	mov	r6, r0
 8015a04:	f2a6 260e 	subw	r6, r6, #526	; 0x20e
 8015a08:	1136      	asrs	r6, r6, #4
 8015a0a:	e008      	b.n	8015a1e <??conn_mngr_send_pkt_22>

08015a0c <??conn_mngr_send_pkt_19>:
 8015a0c:	0886      	lsrs	r6, r0, #2
 8015a0e:	3e0f      	subs	r6, #15
 8015a10:	e005      	b.n	8015a1e <??conn_mngr_send_pkt_22>

08015a12 <??conn_mngr_send_pkt_18>:
 8015a12:	08c6      	lsrs	r6, r0, #3
 8015a14:	3e0e      	subs	r6, #14
 8015a16:	e002      	b.n	8015a1e <??conn_mngr_send_pkt_22>

08015a18 <??conn_mngr_send_pkt_20>:
 8015a18:	2000      	movs	r0, #0
 8015a1a:	f7ea fbd9 	bl	80001d0 <bsp_assert>

08015a1e <??conn_mngr_send_pkt_22>:
 8015a1e:	f1ba 0f00 	cmp.w	sl, #0
 8015a22:	e01e      	b.n	8015a62 <??conn_mngr_send_pkt_23>

08015a24 <??conn_mngr_send_pkt_6>:
 8015a24:	7ab9      	ldrb	r1, [r7, #10]
 8015a26:	783c      	ldrb	r4, [r7, #0]
 8015a28:	2901      	cmp	r1, #1
 8015a2a:	d004      	beq.n	8015a36 <??conn_mngr_send_pkt_24>
 8015a2c:	2902      	cmp	r1, #2
 8015a2e:	d005      	beq.n	8015a3c <??conn_mngr_send_pkt_25>
 8015a30:	2904      	cmp	r1, #4
 8015a32:	d006      	beq.n	8015a42 <??conn_mngr_send_pkt_26>
 8015a34:	e011      	b.n	8015a5a <??conn_mngr_send_pkt_27>

08015a36 <??conn_mngr_send_pkt_24>:
 8015a36:	08c6      	lsrs	r6, r0, #3
 8015a38:	3e0e      	subs	r6, #14
 8015a3a:	e011      	b.n	8015a60 <??conn_mngr_send_pkt_28>

08015a3c <??conn_mngr_send_pkt_25>:
 8015a3c:	0886      	lsrs	r6, r0, #2
 8015a3e:	3e0f      	subs	r6, #15
 8015a40:	e00e      	b.n	8015a60 <??conn_mngr_send_pkt_28>

08015a42 <??conn_mngr_send_pkt_26>:
 8015a42:	89b9      	ldrh	r1, [r7, #12]
 8015a44:	2902      	cmp	r1, #2
 8015a46:	d103      	bne.n	8015a50 <??conn_mngr_send_pkt_29>
 8015a48:	f5a0 7674 	sub.w	r6, r0, #976	; 0x3d0
 8015a4c:	11b6      	asrs	r6, r6, #6
 8015a4e:	e007      	b.n	8015a60 <??conn_mngr_send_pkt_28>

08015a50 <??conn_mngr_send_pkt_29>:
 8015a50:	4606      	mov	r6, r0
 8015a52:	f2a6 260e 	subw	r6, r6, #526	; 0x20e
 8015a56:	1136      	asrs	r6, r6, #4
 8015a58:	e002      	b.n	8015a60 <??conn_mngr_send_pkt_28>

08015a5a <??conn_mngr_send_pkt_27>:
 8015a5a:	2000      	movs	r0, #0
 8015a5c:	f7ea fbb8 	bl	80001d0 <bsp_assert>

08015a60 <??conn_mngr_send_pkt_28>:
 8015a60:	2c00      	cmp	r4, #0

08015a62 <??conn_mngr_send_pkt_23>:
 8015a62:	bf08      	it	eq
 8015a64:	1d36      	addeq	r6, r6, #4
 8015a66:	f108 0574 	add.w	r5, r8, #116	; 0x74
 8015a6a:	f8b8 80ac 	ldrh.w	r8, [r8, #172]	; 0xac
 8015a6e:	b2b6      	uxth	r6, r6
 8015a70:	45b0      	cmp	r8, r6
 8015a72:	bf88      	it	hi
 8015a74:	46b0      	movhi	r8, r6
 8015a76:	f8b9 100c 	ldrh.w	r1, [r9, #12]
 8015a7a:	4588      	cmp	r8, r1
 8015a7c:	d308      	bcc.n	8015a90 <??conn_mngr_send_pkt_30>
 8015a7e:	4648      	mov	r0, r9
 8015a80:	f7fd f97c 	bl	8012d7c <pdu_trnsprt_hndlr_form_data_pdu>
 8015a84:	9000      	str	r0, [sp, #0]
 8015a86:	6ce8      	ldr	r0, [r5, #76]	; 0x4c
 8015a88:	4649      	mov	r1, r9
 8015a8a:	f7ec f8d7 	bl	8001c3c <evnt_schdlr_add_data_pkt>
 8015a8e:	e095      	b.n	8015bbc <??conn_mngr_send_pkt_10>

08015a90 <??conn_mngr_send_pkt_30>:
 8015a90:	f1b8 0001 	subs.w	r0, r8, #1
 8015a94:	4180      	sbcs	r0, r0
 8015a96:	43c0      	mvns	r0, r0
 8015a98:	0fc0      	lsrs	r0, r0, #31
 8015a9a:	f7ea fb99 	bl	80001d0 <bsp_assert>
 8015a9e:	4643      	mov	r3, r8
 8015aa0:	46c8      	mov	r8, r9
 8015aa2:	f8b8 700c 	ldrh.w	r7, [r8, #12]
 8015aa6:	1cd9      	adds	r1, r3, #3
 8015aa8:	f8d8 c000 	ldr.w	ip, [r8]
 8015aac:	19d8      	adds	r0, r3, r7
 8015aae:	1e40      	subs	r0, r0, #1
 8015ab0:	fbb0 f0f3 	udiv	r0, r0, r3
 8015ab4:	f8b8 e00a 	ldrh.w	lr, [r8, #10]
 8015ab8:	0889      	lsrs	r1, r1, #2
 8015aba:	4681      	mov	r9, r0
 8015abc:	f1a9 0201 	sub.w	r2, r9, #1
 8015ac0:	435a      	muls	r2, r3
 8015ac2:	0089      	lsls	r1, r1, #2
 8015ac4:	2600      	movs	r6, #0
 8015ac6:	1abf      	subs	r7, r7, r2
 8015ac8:	310c      	adds	r1, #12
 8015aca:	44e6      	add	lr, ip
 8015acc:	2400      	movs	r4, #0
 8015ace:	f8cd c008 	str.w	ip, [sp, #8]
 8015ad2:	eb0e 0a02 	add.w	sl, lr, r2
 8015ad6:	9601      	str	r6, [sp, #4]
 8015ad8:	2800      	cmp	r0, #0
 8015ada:	d06f      	beq.n	8015bbc <??conn_mngr_send_pkt_10>
 8015adc:	1e40      	subs	r0, r0, #1
 8015ade:	9003      	str	r0, [sp, #12]
 8015ae0:	9305      	str	r3, [sp, #20]
 8015ae2:	9104      	str	r1, [sp, #16]

08015ae4 <??conn_mngr_send_pkt_31>:
 8015ae4:	f1b9 0901 	subs.w	r9, r9, #1
 8015ae8:	d103      	bne.n	8015af2 <??conn_mngr_send_pkt_32>
 8015aea:	f8c8 4004 	str.w	r4, [r8, #4]
 8015aee:	4644      	mov	r4, r8
 8015af0:	e021      	b.n	8015b36 <??conn_mngr_send_pkt_33>

08015af2 <??conn_mngr_send_pkt_32>:
 8015af2:	f8df 060c 	ldr.w	r0, [pc, #1548]	; 8016100 <??DataTable27_9>
 8015af6:	46a3      	mov	fp, r4
 8015af8:	f7ef fb8e 	bl	8005218 <os_mem_pool_alloc>
 8015afc:	0004      	movs	r4, r0
 8015afe:	d030      	beq.n	8015b62 <??conn_mngr_send_pkt_34>
 8015b00:	2000      	movs	r0, #0
 8015b02:	73a0      	strb	r0, [r4, #14]
 8015b04:	f8c4 b004 	str.w	fp, [r4, #4]
 8015b08:	9904      	ldr	r1, [sp, #16]
 8015b0a:	f8b8 200a 	ldrh.w	r2, [r8, #10]
 8015b0e:	4638      	mov	r0, r7
 8015b10:	fb01 2109 	mla	r1, r1, r9, r2
 8015b14:	1d09      	adds	r1, r1, #4
 8015b16:	8161      	strh	r1, [r4, #10]
 8015b18:	b16f      	cbz	r7, 8015b36 <??conn_mngr_send_pkt_33>
 8015b1a:	eb0a 0100 	add.w	r1, sl, r0
 8015b1e:	1e4a      	subs	r2, r1, #1
 8015b20:	9902      	ldr	r1, [sp, #8]

08015b22 <??conn_mngr_send_pkt_35>:
 8015b22:	8963      	ldrh	r3, [r4, #10]
 8015b24:	f812 e901 	ldrb.w	lr, [r2], #-1
 8015b28:	1e40      	subs	r0, r0, #1
 8015b2a:	18c3      	adds	r3, r0, r3
 8015b2c:	f801 e003 	strb.w	lr, [r1, r3]
 8015b30:	2800      	cmp	r0, #0
 8015b32:	d1f6      	bne.n	8015b22 <??conn_mngr_send_pkt_35>
 8015b34:	9102      	str	r1, [sp, #8]

08015b36 <??conn_mngr_send_pkt_33>:
 8015b36:	9803      	ldr	r0, [sp, #12]
 8015b38:	4581      	cmp	r9, r0
 8015b3a:	d003      	beq.n	8015b44 <??conn_mngr_send_pkt_36>
 8015b3c:	7ba1      	ldrb	r1, [r4, #14]
 8015b3e:	f041 0104 	orr.w	r1, r1, #4
 8015b42:	73a1      	strb	r1, [r4, #14]

08015b44 <??conn_mngr_send_pkt_36>:
 8015b44:	f8d8 0000 	ldr.w	r0, [r8]
 8015b48:	1c76      	adds	r6, r6, #1
 8015b4a:	6020      	str	r0, [r4, #0]
 8015b4c:	81a7      	strh	r7, [r4, #12]
 8015b4e:	4620      	mov	r0, r4
 8015b50:	f7fd f914 	bl	8012d7c <pdu_trnsprt_hndlr_form_data_pdu>
 8015b54:	9f05      	ldr	r7, [sp, #20]
 8015b56:	4278      	negs	r0, r7
 8015b58:	4482      	add	sl, r0
 8015b5a:	f1b9 0f00 	cmp.w	r9, #0
 8015b5e:	d1c1      	bne.n	8015ae4 <??conn_mngr_send_pkt_31>
 8015b60:	e011      	b.n	8015b86 <??conn_mngr_send_pkt_37>

08015b62 <??conn_mngr_send_pkt_34>:
 8015b62:	f8d8 0000 	ldr.w	r0, [r8]
 8015b66:	f04f 0901 	mov.w	r9, #1
 8015b6a:	1f00      	subs	r0, r0, #4
 8015b6c:	f7ef fb56 	bl	800521c <os_mem_pool_free>
 8015b70:	f8cd 9004 	str.w	r9, [sp, #4]
 8015b74:	e007      	b.n	8015b86 <??conn_mngr_send_pkt_37>

08015b76 <??conn_mngr_send_pkt_38>:
 8015b76:	f1b8 0f00 	cmp.w	r8, #0
 8015b7a:	d004      	beq.n	8015b86 <??conn_mngr_send_pkt_37>
 8015b7c:	4640      	mov	r0, r8
 8015b7e:	f7ef fb4d 	bl	800521c <os_mem_pool_free>

08015b82 <??conn_mngr_send_pkt_39>:
 8015b82:	f8d8 8004 	ldr.w	r8, [r8, #4]

08015b86 <??conn_mngr_send_pkt_37>:
 8015b86:	b1ce      	cbz	r6, 8015bbc <??conn_mngr_send_pkt_10>
 8015b88:	9801      	ldr	r0, [sp, #4]
 8015b8a:	1e76      	subs	r6, r6, #1
 8015b8c:	2800      	cmp	r0, #0
 8015b8e:	d1f2      	bne.n	8015b76 <??conn_mngr_send_pkt_38>
 8015b90:	f1b8 0f00 	cmp.w	r8, #0
 8015b94:	d0f7      	beq.n	8015b86 <??conn_mngr_send_pkt_37>
 8015b96:	6ce8      	ldr	r0, [r5, #76]	; 0x4c
 8015b98:	4641      	mov	r1, r8
 8015b9a:	f7ec f84f 	bl	8001c3c <evnt_schdlr_add_data_pkt>
 8015b9e:	e7f0      	b.n	8015b82 <??conn_mngr_send_pkt_39>

08015ba0 <??conn_mngr_send_pkt_2>:
 8015ba0:	4648      	mov	r0, r9
 8015ba2:	f7fd fcdd 	bl	8013560 <free_buff_hdr>
 8015ba6:	2002      	movs	r0, #2
 8015ba8:	9000      	str	r0, [sp, #0]
 8015baa:	e007      	b.n	8015bbc <??conn_mngr_send_pkt_10>

08015bac <??conn_mngr_send_pkt_1>:
 8015bac:	4648      	mov	r0, r9
 8015bae:	f7fd fcd7 	bl	8013560 <free_buff_hdr>
 8015bb2:	2007      	movs	r0, #7
 8015bb4:	9000      	str	r0, [sp, #0]
 8015bb6:	203f      	movs	r0, #63	; 0x3f
 8015bb8:	f7ea fb3a 	bl	8000230 <bsp_debug_gpio_toggle>

08015bbc <??conn_mngr_send_pkt_10>:
 8015bbc:	9800      	ldr	r0, [sp, #0]
 8015bbe:	b007      	add	sp, #28
 8015bc0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08015bc4 <conn_mngr_get_channel_map>:
 8015bc4:	b538      	push	{r3, r4, r5, lr}
 8015bc6:	4605      	mov	r5, r0
 8015bc8:	000c      	movs	r4, r1
 8015bca:	bf14      	ite	ne
 8015bcc:	2001      	movne	r0, #1
 8015bce:	2000      	moveq	r0, #0
 8015bd0:	f7ea fafe 	bl	80001d0 <bsp_assert>
 8015bd4:	2d08      	cmp	r5, #8
 8015bd6:	da06      	bge.n	8015be6 <??conn_mngr_get_channel_map_0>
 8015bd8:	f8df 0520 	ldr.w	r0, [pc, #1312]	; 80160fc <??DataTable27_8>
 8015bdc:	eb00 0185 	add.w	r1, r0, r5, lsl #2
 8015be0:	6908      	ldr	r0, [r1, #16]
 8015be2:	2500      	movs	r5, #0
 8015be4:	b908      	cbnz	r0, 8015bea <??conn_mngr_get_channel_map_1>

08015be6 <??conn_mngr_get_channel_map_0>:
 8015be6:	2502      	movs	r5, #2
 8015be8:	e005      	b.n	8015bf6 <??conn_mngr_get_channel_map_2>

08015bea <??conn_mngr_get_channel_map_1>:
 8015bea:	f100 0130 	add.w	r1, r0, #48	; 0x30
 8015bee:	2205      	movs	r2, #5
 8015bf0:	4620      	mov	r0, r4
 8015bf2:	f7f8 ffa9 	bl	800eb48 <ble_memcpy>

08015bf6 <??conn_mngr_get_channel_map_2>:
 8015bf6:	4628      	mov	r0, r5
 8015bf8:	bd32      	pop	{r1, r4, r5, pc}

08015bfa <conn_mngr_calc_num_of_used_data_chnls>:
 8015bfa:	b57c      	push	{r2, r3, r4, r5, r6, lr}
 8015bfc:	0004      	movs	r4, r0
 8015bfe:	bf14      	ite	ne
 8015c00:	2001      	movne	r0, #1
 8015c02:	2000      	moveq	r0, #0
 8015c04:	f7ea fae4 	bl	80001d0 <bsp_assert>
 8015c08:	2205      	movs	r2, #5
 8015c0a:	4621      	mov	r1, r4
 8015c0c:	4668      	mov	r0, sp
 8015c0e:	f7f8 ff9b 	bl	800eb48 <ble_memcpy>
 8015c12:	f89d 1004 	ldrb.w	r1, [sp, #4]
 8015c16:	2500      	movs	r5, #0
 8015c18:	2002      	movs	r0, #2
 8015c1a:	9101      	str	r1, [sp, #4]
 8015c1c:	4669      	mov	r1, sp
 8015c1e:	f04f 3201 	mov.w	r2, #16843009	; 0x1010101

08015c22 <??conn_mngr_calc_num_of_used_data_chnls_0>:
 8015c22:	680b      	ldr	r3, [r1, #0]
 8015c24:	085c      	lsrs	r4, r3, #1
 8015c26:	f024 34aa 	bic.w	r4, r4, #2863311530	; 0xaaaaaaaa
 8015c2a:	1b1b      	subs	r3, r3, r4
 8015c2c:	f023 36cc 	bic.w	r6, r3, #3435973836	; 0xcccccccc
 8015c30:	089b      	lsrs	r3, r3, #2
 8015c32:	f023 33cc 	bic.w	r3, r3, #3435973836	; 0xcccccccc
 8015c36:	199b      	adds	r3, r3, r6
 8015c38:	eb03 1413 	add.w	r4, r3, r3, lsr #4
 8015c3c:	f841 3b04 	str.w	r3, [r1], #4
 8015c40:	f024 34f0 	bic.w	r4, r4, #4042322160	; 0xf0f0f0f0
 8015c44:	4354      	muls	r4, r2
 8015c46:	eb05 6514 	add.w	r5, r5, r4, lsr #24
 8015c4a:	1e40      	subs	r0, r0, #1
 8015c4c:	d1e9      	bne.n	8015c22 <??conn_mngr_calc_num_of_used_data_chnls_0>
 8015c4e:	b2e8      	uxtb	r0, r5
 8015c50:	bd76      	pop	{r1, r2, r4, r5, r6, pc}

08015c52 <conn_mngr_get_run_conn_no>:
 8015c52:	f8df 04a8 	ldr.w	r0, [pc, #1192]	; 80160fc <??DataTable27_8>
 8015c56:	7b00      	ldrb	r0, [r0, #12]
 8015c58:	4770      	bx	lr

08015c5a <conn_mngr_get_rssi>:
 8015c5a:	2808      	cmp	r0, #8
 8015c5c:	da06      	bge.n	8015c6c <??conn_mngr_get_rssi_0>
 8015c5e:	f8df 249c 	ldr.w	r2, [pc, #1180]	; 80160fc <??DataTable27_8>
 8015c62:	eb02 0080 	add.w	r0, r2, r0, lsl #2
 8015c66:	6902      	ldr	r2, [r0, #16]
 8015c68:	2000      	movs	r0, #0
 8015c6a:	b90a      	cbnz	r2, 8015c70 <??conn_mngr_get_rssi_1>

08015c6c <??conn_mngr_get_rssi_0>:
 8015c6c:	2002      	movs	r0, #2
 8015c6e:	4770      	bx	lr

08015c70 <??conn_mngr_get_rssi_1>:
 8015c70:	f892 2129 	ldrb.w	r2, [r2, #297]	; 0x129
 8015c74:	700a      	strb	r2, [r1, #0]
 8015c76:	4770      	bx	lr

08015c78 <conn_mngr_read_athntct_timeout>:
 8015c78:	2808      	cmp	r0, #8
 8015c7a:	da06      	bge.n	8015c8a <??conn_mngr_read_athntct_timeout_0>
 8015c7c:	f8df 247c 	ldr.w	r2, [pc, #1148]	; 80160fc <??DataTable27_8>
 8015c80:	eb02 0080 	add.w	r0, r2, r0, lsl #2
 8015c84:	6902      	ldr	r2, [r0, #16]
 8015c86:	2000      	movs	r0, #0
 8015c88:	b90a      	cbnz	r2, 8015c8e <??conn_mngr_read_athntct_timeout_1>

08015c8a <??conn_mngr_read_athntct_timeout_0>:
 8015c8a:	2002      	movs	r0, #2
 8015c8c:	4770      	bx	lr

08015c8e <??conn_mngr_read_athntct_timeout_1>:
 8015c8e:	f8b2 20d8 	ldrh.w	r2, [r2, #216]	; 0xd8
 8015c92:	800a      	strh	r2, [r1, #0]
 8015c94:	4770      	bx	lr

08015c96 <conn_mngr_write_athntct_timeout>:
 8015c96:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8015c98:	460e      	mov	r6, r1
 8015c9a:	2808      	cmp	r0, #8
 8015c9c:	da1b      	bge.n	8015cd6 <??conn_mngr_write_athntct_timeout_0>
 8015c9e:	f8df 145c 	ldr.w	r1, [pc, #1116]	; 80160fc <??DataTable27_8>
 8015ca2:	eb01 0080 	add.w	r0, r1, r0, lsl #2
 8015ca6:	6904      	ldr	r4, [r0, #16]
 8015ca8:	b1ac      	cbz	r4, 8015cd6 <??conn_mngr_write_athntct_timeout_0>
 8015caa:	2001      	movs	r0, #1
 8015cac:	f7ea fa90 	bl	80001d0 <bsp_assert>
 8015cb0:	f104 01d8 	add.w	r1, r4, #216	; 0xd8
 8015cb4:	888a      	ldrh	r2, [r1, #4]
 8015cb6:	8ae0      	ldrh	r0, [r4, #22]
 8015cb8:	eb06 0586 	add.w	r5, r6, r6, lsl #2
 8015cbc:	1c52      	adds	r2, r2, #1
 8015cbe:	4342      	muls	r2, r0
 8015cc0:	006d      	lsls	r5, r5, #1
 8015cc2:	eb02 0282 	add.w	r2, r2, r2, lsl #2
 8015cc6:	1057      	asrs	r7, r2, #1
 8015cc8:	eb02 7297 	add.w	r2, r2, r7, lsr #30
 8015ccc:	ebb5 0fa2 	cmp.w	r5, r2, asr #2
 8015cd0:	da03      	bge.n	8015cda <??conn_mngr_write_athntct_timeout_1>
 8015cd2:	2630      	movs	r6, #48	; 0x30
 8015cd4:	e01d      	b.n	8015d12 <??conn_mngr_write_athntct_timeout_2>

08015cd6 <??conn_mngr_write_athntct_timeout_0>:
 8015cd6:	2602      	movs	r6, #2
 8015cd8:	e01b      	b.n	8015d12 <??conn_mngr_write_athntct_timeout_2>

08015cda <??conn_mngr_write_athntct_timeout_1>:
 8015cda:	800e      	strh	r6, [r1, #0]
 8015cdc:	eb00 0080 	add.w	r0, r0, r0, lsl #2
 8015ce0:	1041      	asrs	r1, r0, #1
 8015ce2:	eb00 7091 	add.w	r0, r0, r1, lsr #30
 8015ce6:	1080      	asrs	r0, r0, #2
 8015ce8:	eb00 0240 	add.w	r2, r0, r0, lsl #1
 8015cec:	ebb5 0f42 	cmp.w	r5, r2, lsl #1
 8015cf0:	bf26      	itte	cs
 8015cf2:	eba5 0542 	subcs.w	r5, r5, r2, lsl #1
 8015cf6:	016d      	lslcs	r5, r5, #5
 8015cf8:	25a0      	movcc	r5, #160	; 0xa0
 8015cfa:	200a      	movs	r0, #10
 8015cfc:	f804 0f6c 	strb.w	r0, [r4, #108]!
 8015d00:	6ea0      	ldr	r0, [r4, #104]	; 0x68
 8015d02:	2600      	movs	r6, #0
 8015d04:	b128      	cbz	r0, 8015d12 <??conn_mngr_write_athntct_timeout_2>
 8015d06:	f7ef fe00 	bl	800590a <os_timer_stop>
 8015d0a:	6ea0      	ldr	r0, [r4, #104]	; 0x68
 8015d0c:	4629      	mov	r1, r5
 8015d0e:	f7ef fdc3 	bl	8005898 <os_timer_start>

08015d12 <??conn_mngr_write_athntct_timeout_2>:
 8015d12:	4630      	mov	r0, r6
 8015d14:	bdf2      	pop	{r1, r4, r5, r6, r7, pc}

08015d16 <conn_mngr_free_handle>:
 8015d16:	b538      	push	{r3, r4, r5, lr}
 8015d18:	2808      	cmp	r0, #8
 8015d1a:	da06      	bge.n	8015d2a <??conn_mngr_free_handle_0>
 8015d1c:	f8df 13dc 	ldr.w	r1, [pc, #988]	; 80160fc <??DataTable27_8>
 8015d20:	eb01 0480 	add.w	r4, r1, r0, lsl #2
 8015d24:	6920      	ldr	r0, [r4, #16]
 8015d26:	2500      	movs	r5, #0
 8015d28:	b908      	cbnz	r0, 8015d2e <??conn_mngr_free_handle_1>

08015d2a <??conn_mngr_free_handle_0>:
 8015d2a:	2502      	movs	r5, #2
 8015d2c:	e002      	b.n	8015d34 <??conn_mngr_free_handle_2>

08015d2e <??conn_mngr_free_handle_1>:
 8015d2e:	f7ef fa75 	bl	800521c <os_mem_pool_free>
 8015d32:	6125      	str	r5, [r4, #16]

08015d34 <??conn_mngr_free_handle_2>:
 8015d34:	4628      	mov	r0, r5
 8015d36:	bd32      	pop	{r1, r4, r5, pc}

08015d38 <conn_mngr_disconnect>:
 8015d38:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8015d3c:	b084      	sub	sp, #16
 8015d3e:	0007      	movs	r7, r0
 8015d40:	4688      	mov	r8, r1
 8015d42:	bf14      	ite	ne
 8015d44:	2001      	movne	r0, #1
 8015d46:	2000      	moveq	r0, #0
 8015d48:	f7ea fa42 	bl	80001d0 <bsp_assert>
 8015d4c:	2101      	movs	r1, #1
 8015d4e:	2200      	movs	r2, #0
 8015d50:	f88d 1004 	strb.w	r1, [sp, #4]
 8015d54:	9203      	str	r2, [sp, #12]
 8015d56:	f107 05bc 	add.w	r5, r7, #188	; 0xbc
 8015d5a:	6828      	ldr	r0, [r5, #0]
 8015d5c:	8c6e      	ldrh	r6, [r5, #34]	; 0x22
 8015d5e:	4691      	mov	r9, r2
 8015d60:	2400      	movs	r4, #0
 8015d62:	f7fe fc55 	bl	8014610 <state_mngr_get_state_type>
 8015d66:	2805      	cmp	r0, #5
 8015d68:	d004      	beq.n	8015d74 <??conn_mngr_disconnect_0>
 8015d6a:	6828      	ldr	r0, [r5, #0]
 8015d6c:	f7fe fc50 	bl	8014610 <state_mngr_get_state_type>
 8015d70:	2806      	cmp	r0, #6
 8015d72:	d101      	bne.n	8015d78 <??conn_mngr_disconnect_1>

08015d74 <??conn_mngr_disconnect_0>:
 8015d74:	2001      	movs	r0, #1
 8015d76:	e000      	b.n	8015d7a <??conn_mngr_disconnect_2>

08015d78 <??conn_mngr_disconnect_1>:
 8015d78:	2000      	movs	r0, #0

08015d7a <??conn_mngr_disconnect_2>:
 8015d7a:	f7ea fa29 	bl	80001d0 <bsp_assert>
 8015d7e:	6868      	ldr	r0, [r5, #4]
 8015d80:	b100      	cbz	r0, 8015d84 <??conn_mngr_disconnect_3>
 8015d82:	2001      	movs	r0, #1

08015d84 <??conn_mngr_disconnect_3>:
 8015d84:	f7ea fa24 	bl	80001d0 <bsp_assert>
 8015d88:	6868      	ldr	r0, [r5, #4]
 8015d8a:	f7eb fbb4 	bl	80014f6 <evnt_schdlr_unrgstr_evnt>
 8015d8e:	6828      	ldr	r0, [r5, #0]
 8015d90:	2100      	movs	r1, #0
 8015d92:	f7fe fbed 	bl	8014570 <state_mngr_update_state>
 8015d96:	68a8      	ldr	r0, [r5, #8]
 8015d98:	b100      	cbz	r0, 8015d9c <??conn_mngr_disconnect_4>
 8015d9a:	2001      	movs	r0, #1

08015d9c <??conn_mngr_disconnect_4>:
 8015d9c:	f7ea fa18 	bl	80001d0 <bsp_assert>
 8015da0:	4638      	mov	r0, r7
 8015da2:	f7ff fb3c 	bl	801541e <conn_mngr_free_all_timers>
 8015da6:	f7fe fa79 	bl	801429c <get_addr_rsl_enable>
 8015daa:	1d79      	adds	r1, r7, #5
 8015dac:	7f8a      	ldrb	r2, [r1, #30]
 8015dae:	2a01      	cmp	r2, #1
 8015db0:	bf01      	itttt	eq
 8015db2:	7809      	ldrbeq	r1, [r1, #0]
 8015db4:	0989      	lsreq	r1, r1, #6
 8015db6:	2901      	cmpeq	r1, #1
 8015db8:	2801      	cmpeq	r0, #1
 8015dba:	d014      	beq.n	8015de6 <??conn_mngr_disconnect_5>
 8015dbc:	9400      	str	r4, [sp, #0]
 8015dbe:	463b      	mov	r3, r7
 8015dc0:	2101      	movs	r1, #1
 8015dc2:	2001      	movs	r0, #1
 8015dc4:	f7f3 fc6e 	bl	80096a4 <llhwc_lst_add_rmv_dev>
 8015dc8:	ea5f 0900 	movs.w	r9, r0
 8015dcc:	d14f      	bne.n	8015e6e <??conn_mngr_disconnect_6>
 8015dce:	2300      	movs	r3, #0
 8015dd0:	aa03      	add	r2, sp, #12
 8015dd2:	4639      	mov	r1, r7
 8015dd4:	2002      	movs	r0, #2
 8015dd6:	f7fd ff71 	bl	8013cbc <prvcy_mngr_srch_fw_reslvng_list>
 8015dda:	9803      	ldr	r0, [sp, #12]
 8015ddc:	b140      	cbz	r0, 8015df0 <??conn_mngr_disconnect_7>
 8015dde:	6801      	ldr	r1, [r0, #0]
 8015de0:	f88d 1004 	strb.w	r1, [sp, #4]
 8015de4:	e004      	b.n	8015df0 <??conn_mngr_disconnect_7>

08015de6 <??conn_mngr_disconnect_5>:
 8015de6:	ab01      	add	r3, sp, #4
 8015de8:	463a      	mov	r2, r7
 8015dea:	2003      	movs	r0, #3
 8015dec:	f7f3 fb58 	bl	80094a0 <llhwc_lst_search>

08015df0 <??conn_mngr_disconnect_7>:
 8015df0:	f89d 0004 	ldrb.w	r0, [sp, #4]
 8015df4:	07c1      	lsls	r1, r0, #31
 8015df6:	d404      	bmi.n	8015e02 <??conn_mngr_disconnect_8>
 8015df8:	4601      	mov	r1, r0
 8015dfa:	2201      	movs	r2, #1
 8015dfc:	2001      	movs	r0, #1
 8015dfe:	f7f3 fe2d 	bl	8009a5c <llhwc_lst_edit_indicators>

08015e02 <??conn_mngr_disconnect_8>:
 8015e02:	2100      	movs	r1, #0
 8015e04:	f887 1134 	strb.w	r1, [r7, #308]	; 0x134
 8015e08:	f88d 1008 	strb.w	r1, [sp, #8]
 8015e0c:	f8ad 600a 	strh.w	r6, [sp, #10]
 8015e10:	4bbc      	ldr	r3, [pc, #752]	; (8016104 <??DataTable27_10>)
 8015e12:	aa02      	add	r2, sp, #8
 8015e14:	2007      	movs	r0, #7
 8015e16:	f7ea fb91 	bl	800053c <emngr_remove_conditional_event>
 8015e1a:	4630      	mov	r0, r6
 8015e1c:	f7ff ff7b 	bl	8015d16 <conn_mngr_free_handle>
 8015e20:	4fb6      	ldr	r7, [pc, #728]	; (80160fc <??DataTable27_8>)
 8015e22:	7b38      	ldrb	r0, [r7, #12]
 8015e24:	1e41      	subs	r1, r0, #1
 8015e26:	7339      	strb	r1, [r7, #12]
 8015e28:	2003      	movs	r0, #3
 8015e2a:	f000 f97d 	bl	8016128 <disable_specific_irq>
 8015e2e:	6b38      	ldr	r0, [r7, #48]	; 0x30
 8015e30:	e00b      	b.n	8015e4a <??conn_mngr_disconnect_9>

08015e32 <??conn_mngr_disconnect_10>:
 8015e32:	6b39      	ldr	r1, [r7, #48]	; 0x30
 8015e34:	4281      	cmp	r1, r0
 8015e36:	bf04      	itt	eq
 8015e38:	6942      	ldreq	r2, [r0, #20]
 8015e3a:	633a      	streq	r2, [r7, #48]	; 0x30
 8015e3c:	b10c      	cbz	r4, 8015e42 <??conn_mngr_disconnect_11>
 8015e3e:	6941      	ldr	r1, [r0, #20]
 8015e40:	6161      	str	r1, [r4, #20]

08015e42 <??conn_mngr_disconnect_11>:
 8015e42:	6945      	ldr	r5, [r0, #20]
 8015e44:	f7ef f9ea 	bl	800521c <os_mem_pool_free>
 8015e48:	4628      	mov	r0, r5

08015e4a <??conn_mngr_disconnect_9>:
 8015e4a:	b128      	cbz	r0, 8015e58 <??conn_mngr_disconnect_12>
 8015e4c:	8841      	ldrh	r1, [r0, #2]
 8015e4e:	42b1      	cmp	r1, r6
 8015e50:	d0ef      	beq.n	8015e32 <??conn_mngr_disconnect_10>
 8015e52:	4604      	mov	r4, r0
 8015e54:	6940      	ldr	r0, [r0, #20]
 8015e56:	e7f8      	b.n	8015e4a <??conn_mngr_disconnect_9>

08015e58 <??conn_mngr_disconnect_12>:
 8015e58:	2003      	movs	r0, #3
 8015e5a:	f000 f963 	bl	8016124 <enable_specific_irq>
 8015e5e:	48aa      	ldr	r0, [pc, #680]	; (8016108 <??DataTable27_11>)
 8015e60:	6801      	ldr	r1, [r0, #0]
 8015e62:	684b      	ldr	r3, [r1, #4]
 8015e64:	b11b      	cbz	r3, 8015e6e <??conn_mngr_disconnect_6>
 8015e66:	4642      	mov	r2, r8
 8015e68:	4631      	mov	r1, r6
 8015e6a:	2000      	movs	r0, #0
 8015e6c:	4798      	blx	r3

08015e6e <??conn_mngr_disconnect_6>:
 8015e6e:	4648      	mov	r0, r9
 8015e70:	b005      	add	sp, #20
 8015e72:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}

08015e76 <conn_mngr_get_ping_timeout_value>:
 8015e76:	8ac2      	ldrh	r2, [r0, #22]
 8015e78:	f8b0 00d8 	ldrh.w	r0, [r0, #216]	; 0xd8
 8015e7c:	eb02 0282 	add.w	r2, r2, r2, lsl #2
 8015e80:	1053      	asrs	r3, r2, #1
 8015e82:	eb02 7293 	add.w	r2, r2, r3, lsr #30
 8015e86:	eb00 0380 	add.w	r3, r0, r0, lsl #2
 8015e8a:	0058      	lsls	r0, r3, #1
 8015e8c:	1092      	asrs	r2, r2, #2
 8015e8e:	eb02 0c42 	add.w	ip, r2, r2, lsl #1
 8015e92:	ebb0 0f4c 	cmp.w	r0, ip, lsl #1
 8015e96:	bf2c      	ite	cs
 8015e98:	eba0 024c 	subcs.w	r2, r0, ip, lsl #1
 8015e9c:	2205      	movcc	r2, #5
 8015e9e:	600a      	str	r2, [r1, #0]
 8015ea0:	2000      	movs	r0, #0
 8015ea2:	4770      	bx	lr

08015ea4 <conn_mngr_updt_conn_param_evnt_clbk>:
 8015ea4:	b510      	push	{r4, lr}
 8015ea6:	4604      	mov	r4, r0
 8015ea8:	b084      	sub	sp, #16
 8015eaa:	208b      	movs	r0, #139	; 0x8b
 8015eac:	f7ea f9bc 	bl	8000228 <bsp_debug_gpio_set>
 8015eb0:	8ae0      	ldrh	r0, [r4, #22]
 8015eb2:	f64f 72ff 	movw	r2, #65535	; 0xffff
 8015eb6:	f8ad 0000 	strh.w	r0, [sp]
 8015eba:	8ae1      	ldrh	r1, [r4, #22]
 8015ebc:	f8ad 1002 	strh.w	r1, [sp, #2]
 8015ec0:	8b20      	ldrh	r0, [r4, #24]
 8015ec2:	2111      	movs	r1, #17
 8015ec4:	f8ad 0004 	strh.w	r0, [sp, #4]
 8015ec8:	8b60      	ldrh	r0, [r4, #26]
 8015eca:	f8ad 0006 	strh.w	r0, [sp, #6]
 8015ece:	8ba0      	ldrh	r0, [r4, #28]
 8015ed0:	f8ad 0008 	strh.w	r0, [sp, #8]
 8015ed4:	8be0      	ldrh	r0, [r4, #30]
 8015ed6:	f8ad 200c 	strh.w	r2, [sp, #12]
 8015eda:	f88d 100e 	strb.w	r1, [sp, #14]
 8015ede:	f8ad 000a 	strh.w	r0, [sp, #10]
 8015ee2:	f8b4 00de 	ldrh.w	r0, [r4, #222]	; 0xde
 8015ee6:	4669      	mov	r1, sp
 8015ee8:	f7f1 feb6 	bl	8007c58 <llcp_update_param_req>
 8015eec:	b110      	cbz	r0, 8015ef4 <??conn_mngr_updt_conn_param_evnt_clbk_0>
 8015eee:	2000      	movs	r0, #0
 8015ef0:	4986      	ldr	r1, [pc, #536]	; (801610c <??DataTable27_12>)
 8015ef2:	7008      	strb	r0, [r1, #0]

08015ef4 <??conn_mngr_updt_conn_param_evnt_clbk_0>:
 8015ef4:	208b      	movs	r0, #139	; 0x8b
 8015ef6:	f7ea f999 	bl	800022c <bsp_debug_gpio_clear>
 8015efa:	b004      	add	sp, #16
 8015efc:	bd10      	pop	{r4, pc}

08015efe <conn_mngr_send_inst_cntrl_hci_evnt>:
 8015efe:	b57c      	push	{r2, r3, r4, r5, r6, lr}
 8015f00:	4606      	mov	r6, r0
 8015f02:	f506 7596 	add.w	r5, r6, #300	; 0x12c
 8015f06:	7b28      	ldrb	r0, [r5, #12]
 8015f08:	2801      	cmp	r0, #1
 8015f0a:	d01f      	beq.n	8015f4c <??conn_mngr_send_inst_cntrl_hci_evnt_0>
 8015f0c:	2803      	cmp	r0, #3
 8015f0e:	d002      	beq.n	8015f16 <??conn_mngr_send_inst_cntrl_hci_evnt_1>
 8015f10:	2804      	cmp	r0, #4
 8015f12:	d007      	beq.n	8015f24 <??conn_mngr_send_inst_cntrl_hci_evnt_2>
 8015f14:	e027      	b.n	8015f66 <??conn_mngr_send_inst_cntrl_hci_evnt_3>

08015f16 <??conn_mngr_send_inst_cntrl_hci_evnt_1>:
 8015f16:	786a      	ldrb	r2, [r5, #1]
 8015f18:	7829      	ldrb	r1, [r5, #0]
 8015f1a:	2300      	movs	r3, #0
 8015f1c:	4630      	mov	r0, r6
 8015f1e:	f000 f825 	bl	8015f6c <conn_mngr_send_le_phy_update_complete_event>
 8015f22:	e020      	b.n	8015f66 <??conn_mngr_send_inst_cntrl_hci_evnt_3>

08015f24 <??conn_mngr_send_inst_cntrl_hci_evnt_2>:
 8015f24:	786a      	ldrb	r2, [r5, #1]
 8015f26:	7829      	ldrb	r1, [r5, #0]
 8015f28:	2300      	movs	r3, #0
 8015f2a:	4630      	mov	r0, r6
 8015f2c:	f000 f81e 	bl	8015f6c <conn_mngr_send_le_phy_update_complete_event>
 8015f30:	4875      	ldr	r0, [pc, #468]	; (8016108 <??DataTable27_11>)
 8015f32:	6801      	ldr	r1, [r0, #0]
 8015f34:	6b0c      	ldr	r4, [r1, #48]	; 0x30
 8015f36:	b1b4      	cbz	r4, 8015f66 <??conn_mngr_send_inst_cntrl_hci_evnt_3>
 8015f38:	f106 00a8 	add.w	r0, r6, #168	; 0xa8
 8015f3c:	8841      	ldrh	r1, [r0, #2]
 8015f3e:	9100      	str	r1, [sp, #0]
 8015f40:	8803      	ldrh	r3, [r0, #0]
 8015f42:	88c2      	ldrh	r2, [r0, #6]
 8015f44:	8881      	ldrh	r1, [r0, #4]
 8015f46:	8ec0      	ldrh	r0, [r0, #54]	; 0x36
 8015f48:	47a0      	blx	r4
 8015f4a:	e00c      	b.n	8015f66 <??conn_mngr_send_inst_cntrl_hci_evnt_3>

08015f4c <??conn_mngr_send_inst_cntrl_hci_evnt_0>:
 8015f4c:	486e      	ldr	r0, [pc, #440]	; (8016108 <??DataTable27_11>)
 8015f4e:	6801      	ldr	r1, [r0, #0]
 8015f50:	6a8c      	ldr	r4, [r1, #40]	; 0x28
 8015f52:	b144      	cbz	r4, 8015f66 <??conn_mngr_send_inst_cntrl_hci_evnt_3>
 8015f54:	8b70      	ldrh	r0, [r6, #26]
 8015f56:	9000      	str	r0, [sp, #0]
 8015f58:	8b33      	ldrh	r3, [r6, #24]
 8015f5a:	8af2      	ldrh	r2, [r6, #22]
 8015f5c:	f106 00a8 	add.w	r0, r6, #168	; 0xa8
 8015f60:	8ec1      	ldrh	r1, [r0, #54]	; 0x36
 8015f62:	2000      	movs	r0, #0
 8015f64:	47a0      	blx	r4

08015f66 <??conn_mngr_send_inst_cntrl_hci_evnt_3>:
 8015f66:	2000      	movs	r0, #0
 8015f68:	7328      	strb	r0, [r5, #12]
 8015f6a:	bd73      	pop	{r0, r1, r4, r5, r6, pc}

08015f6c <conn_mngr_send_le_phy_update_complete_event>:
 8015f6c:	b538      	push	{r3, r4, r5, lr}
 8015f6e:	461d      	mov	r5, r3
 8015f70:	4b65      	ldr	r3, [pc, #404]	; (8016108 <??DataTable27_11>)
 8015f72:	681c      	ldr	r4, [r3, #0]
 8015f74:	6b64      	ldr	r4, [r4, #52]	; 0x34
 8015f76:	b15c      	cbz	r4, 8015f90 <??conn_mngr_send_le_phy_update_complete_event_0>
 8015f78:	2a04      	cmp	r2, #4
 8015f7a:	bf08      	it	eq
 8015f7c:	2203      	moveq	r2, #3
 8015f7e:	2904      	cmp	r1, #4
 8015f80:	bf08      	it	eq
 8015f82:	2103      	moveq	r1, #3
 8015f84:	4613      	mov	r3, r2
 8015f86:	460a      	mov	r2, r1
 8015f88:	f8b0 10de 	ldrh.w	r1, [r0, #222]	; 0xde
 8015f8c:	4628      	mov	r0, r5
 8015f8e:	47a0      	blx	r4

08015f90 <??conn_mngr_send_le_phy_update_complete_event_0>:
 8015f90:	bd31      	pop	{r0, r4, r5, pc}

08015f92 <conn_mngr_set_conn_tx_power_level>:
 8015f92:	e92d 41fc 	stmdb	sp!, {r2, r3, r4, r5, r6, r7, r8, lr}
 8015f96:	2600      	movs	r6, #0
 8015f98:	4604      	mov	r4, r0
 8015f9a:	460d      	mov	r5, r1
 8015f9c:	f8ad 6000 	strh.w	r6, [sp]
 8015fa0:	b104      	cbz	r4, 8015fa4 <??conn_mngr_set_conn_tx_power_level_0>
 8015fa2:	2001      	movs	r0, #1

08015fa4 <??conn_mngr_set_conn_tx_power_level_0>:
 8015fa4:	f7ea f914 	bl	80001d0 <bsp_assert>
 8015fa8:	2d00      	cmp	r5, #0
 8015faa:	bf14      	ite	ne
 8015fac:	2001      	movne	r0, #1
 8015fae:	2000      	moveq	r0, #0
 8015fb0:	f7ea f90e 	bl	80001d0 <bsp_assert>
 8015fb4:	8820      	ldrh	r0, [r4, #0]
 8015fb6:	2808      	cmp	r0, #8
 8015fb8:	da04      	bge.n	8015fc4 <??conn_mngr_set_conn_tx_power_level_1>
 8015fba:	4950      	ldr	r1, [pc, #320]	; (80160fc <??DataTable27_8>)
 8015fbc:	eb01 0080 	add.w	r0, r1, r0, lsl #2
 8015fc0:	6900      	ldr	r0, [r0, #16]
 8015fc2:	b908      	cbnz	r0, 8015fc8 <??conn_mngr_set_conn_tx_power_level_2>

08015fc4 <??conn_mngr_set_conn_tx_power_level_1>:
 8015fc4:	2602      	movs	r6, #2
 8015fc6:	e036      	b.n	8016036 <??conn_mngr_set_conn_tx_power_level_3>

08015fc8 <??conn_mngr_set_conn_tx_power_level_2>:
 8015fc8:	78a1      	ldrb	r1, [r4, #2]
 8015fca:	2901      	cmp	r1, #1
 8015fcc:	bf18      	it	ne
 8015fce:	2902      	cmpne	r1, #2
 8015fd0:	d004      	beq.n	8015fdc <??conn_mngr_set_conn_tx_power_level_4>
 8015fd2:	2903      	cmp	r1, #3
 8015fd4:	bf1c      	itt	ne
 8015fd6:	2904      	cmpne	r1, #4
 8015fd8:	2611      	movne	r6, #17
 8015fda:	d12c      	bne.n	8016036 <??conn_mngr_set_conn_tx_power_level_3>

08015fdc <??conn_mngr_set_conn_tx_power_level_4>:
 8015fdc:	f500 7796 	add.w	r7, r0, #300	; 0x12c
 8015fe0:	7838      	ldrb	r0, [r7, #0]
 8015fe2:	f997 800d 	ldrsb.w	r8, [r7, #13]
 8015fe6:	2903      	cmp	r1, #3
 8015fe8:	bf08      	it	eq
 8015fea:	f997 800e 	ldrsbeq.w	r8, [r7, #14]
 8015fee:	4281      	cmp	r1, r0
 8015ff0:	d006      	beq.n	8016000 <??conn_mngr_set_conn_tx_power_level_5>
 8015ff2:	2804      	cmp	r0, #4
 8015ff4:	bf08      	it	eq
 8015ff6:	2903      	cmpeq	r1, #3
 8015ff8:	d002      	beq.n	8016000 <??conn_mngr_set_conn_tx_power_level_5>
 8015ffa:	207e      	movs	r0, #126	; 0x7e
 8015ffc:	7028      	strb	r0, [r5, #0]
 8015ffe:	e01a      	b.n	8016036 <??conn_mngr_set_conn_tx_power_level_3>

08016000 <??conn_mngr_set_conn_tx_power_level_5>:
 8016000:	4669      	mov	r1, sp
 8016002:	f10d 0001 	add.w	r0, sp, #1
 8016006:	f7ef fe38 	bl	8005c7a <ll_tx_pwr_if_get_min_max_supprtd_tx_power_levels>
 801600a:	f994 0003 	ldrsb.w	r0, [r4, #3]
 801600e:	4580      	cmp	r8, r0
 8016010:	d008      	beq.n	8016024 <??conn_mngr_set_conn_tx_power_level_6>
 8016012:	2201      	movs	r2, #1
 8016014:	2100      	movs	r1, #0
 8016016:	f7ef fe3f 	bl	8005c98 <ll_tx_pwr_if_get_tx_pwr_table_offset>
 801601a:	493d      	ldr	r1, [pc, #244]	; (8016110 <??DataTable27_13>)
 801601c:	680a      	ldr	r2, [r1, #0]
 801601e:	1cd3      	adds	r3, r2, #3
 8016020:	f913 8020 	ldrsb.w	r8, [r3, r0, lsl #2]

08016024 <??conn_mngr_set_conn_tx_power_level_6>:
 8016024:	f885 8000 	strb.w	r8, [r5]
 8016028:	78a1      	ldrb	r1, [r4, #2]
 801602a:	2903      	cmp	r1, #3
 801602c:	bf0c      	ite	eq
 801602e:	f887 800e 	strbeq.w	r8, [r7, #14]
 8016032:	f887 800d 	strbne.w	r8, [r7, #13]

08016036 <??conn_mngr_set_conn_tx_power_level_3>:
 8016036:	4630      	mov	r0, r6
 8016038:	e8bd 81f6 	ldmia.w	sp!, {r1, r2, r4, r5, r6, r7, r8, pc}

0801603c <conn_mngr_get_num_augmented_connection>:
 801603c:	2000      	movs	r0, #0
 801603e:	2200      	movs	r2, #0
 8016040:	4b2c      	ldr	r3, [pc, #176]	; (80160f4 <??DataTable27_6>)

08016042 <??conn_mngr_get_num_augmented_connection_0>:
 8016042:	6819      	ldr	r1, [r3, #0]
 8016044:	b121      	cbz	r1, 8016050 <??conn_mngr_get_num_augmented_connection_1>
 8016046:	f891 1127 	ldrb.w	r1, [r1, #295]	; 0x127
 801604a:	2901      	cmp	r1, #1
 801604c:	bf08      	it	eq
 801604e:	1c40      	addeq	r0, r0, #1

08016050 <??conn_mngr_get_num_augmented_connection_1>:
 8016050:	6859      	ldr	r1, [r3, #4]
 8016052:	1c52      	adds	r2, r2, #1
 8016054:	b121      	cbz	r1, 8016060 <??conn_mngr_get_num_augmented_connection_2>
 8016056:	f891 1127 	ldrb.w	r1, [r1, #295]	; 0x127
 801605a:	2901      	cmp	r1, #1
 801605c:	bf08      	it	eq
 801605e:	1c40      	addeq	r0, r0, #1

08016060 <??conn_mngr_get_num_augmented_connection_2>:
 8016060:	1c52      	adds	r2, r2, #1
 8016062:	3308      	adds	r3, #8
 8016064:	2a08      	cmp	r2, #8
 8016066:	dbec      	blt.n	8016042 <??conn_mngr_get_num_augmented_connection_0>
 8016068:	b2c0      	uxtb	r0, r0
 801606a:	4770      	bx	lr

0801606c <conn_mngr_get_link_status>:
 801606c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8016070:	4605      	mov	r5, r0
 8016072:	4688      	mov	r8, r1
 8016074:	4617      	mov	r7, r2
 8016076:	4e1f      	ldr	r6, [pc, #124]	; (80160f4 <??DataTable27_6>)
 8016078:	2408      	movs	r4, #8

0801607a <??conn_mngr_get_link_status_0>:
 801607a:	6830      	ldr	r0, [r6, #0]
 801607c:	b348      	cbz	r0, 80160d2 <??conn_mngr_get_link_status_1>
 801607e:	e008      	b.n	8016092 <??conn_mngr_get_link_status_2>

08016080 <??conn_mngr_get_link_status_3>:
 8016080:	1c49      	adds	r1, r1, #1
 8016082:	b2c8      	uxtb	r0, r1
 8016084:	280a      	cmp	r0, #10
 8016086:	bfac      	ite	ge
 8016088:	2000      	movge	r0, #0
 801608a:	2001      	movlt	r0, #1
 801608c:	7039      	strb	r1, [r7, #0]
 801608e:	f7ea f89f 	bl	80001d0 <bsp_assert>

08016092 <??conn_mngr_get_link_status_2>:
 8016092:	7839      	ldrb	r1, [r7, #0]
 8016094:	460a      	mov	r2, r1
 8016096:	5ca8      	ldrb	r0, [r5, r2]
 8016098:	2800      	cmp	r0, #0
 801609a:	d1f1      	bne.n	8016080 <??conn_mngr_get_link_status_3>
 801609c:	6831      	ldr	r1, [r6, #0]
 801609e:	f891 0125 	ldrb.w	r0, [r1, #293]	; 0x125
 80160a2:	b908      	cbnz	r0, 80160a8 <??conn_mngr_get_link_status_4>
 80160a4:	2005      	movs	r0, #5
 80160a6:	e002      	b.n	80160ae <??conn_mngr_get_link_status_5>

080160a8 <??conn_mngr_get_link_status_4>:
 80160a8:	2801      	cmp	r0, #1
 80160aa:	d101      	bne.n	80160b0 <??conn_mngr_get_link_status_6>
 80160ac:	2002      	movs	r0, #2

080160ae <??conn_mngr_get_link_status_5>:
 80160ae:	54a8      	strb	r0, [r5, r2]

080160b0 <??conn_mngr_get_link_status_6>:
 80160b0:	6831      	ldr	r1, [r6, #0]
 80160b2:	783a      	ldrb	r2, [r7, #0]
 80160b4:	f8b1 00de 	ldrh.w	r0, [r1, #222]	; 0xde
 80160b8:	f808 0012 	strb.w	r0, [r8, r2, lsl #1]
 80160bc:	7839      	ldrb	r1, [r7, #0]
 80160be:	6832      	ldr	r2, [r6, #0]
 80160c0:	eb08 0041 	add.w	r0, r8, r1, lsl #1
 80160c4:	f8b2 10de 	ldrh.w	r1, [r2, #222]	; 0xde
 80160c8:	0a09      	lsrs	r1, r1, #8
 80160ca:	7041      	strb	r1, [r0, #1]
 80160cc:	7838      	ldrb	r0, [r7, #0]
 80160ce:	1c40      	adds	r0, r0, #1
 80160d0:	7038      	strb	r0, [r7, #0]

080160d2 <??conn_mngr_get_link_status_1>:
 80160d2:	1d36      	adds	r6, r6, #4
 80160d4:	1e64      	subs	r4, r4, #1
 80160d6:	d1d0      	bne.n	801607a <??conn_mngr_get_link_status_0>
 80160d8:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

080160dc <??DataTable27>:
 80160dc:	4d41 0801                                   AM..

080160e0 <??DataTable27_1>:
 80160e0:	502f 0801                                   /P..

080160e4 <??DataTable27_2>:
 80160e4:	50ed 0801                                   .P..

080160e8 <??DataTable27_3>:
 80160e8:	65ac 0801                                   .e..

080160ec <??DataTable27_4>:
 80160ec:	03de 2000                                   ... 

080160f0 <??DataTable27_5>:
 80160f0:	7879 7878                                   yxxx

080160f4 <??DataTable27_6>:
 80160f4:	03e8 2000                                   ... 

080160f8 <??DataTable27_7>:
 80160f8:	1759 d1b7                                   Y...

080160fc <??DataTable27_8>:
 80160fc:	03d8 2000                                   ... 

08016100 <??DataTable27_9>:
 8016100:	3624 2000                                   $6. 

08016104 <??DataTable27_10>:
 8016104:	28a9 0801                                   .(..

08016108 <??DataTable27_11>:
 8016108:	06f0 2000                                   ... 

0801610c <??DataTable27_12>:
 801610c:	174c 2000                                   L.. 

08016110 <??DataTable27_13>:
 8016110:	0704 2000                                   ... 

08016114 <min_phy_matrix>:
 8016114:	0100 0102 0404 0404                         ........

0801611c <enable_irq>:
 801611c:	f01a ba36 	b.w	803058c <ll_sys_enable_irq>

08016120 <disable_irq>:
 8016120:	f01a ba36 	b.w	8030590 <ll_sys_disable_irq>

08016124 <enable_specific_irq>:
 8016124:	f01a ba36 	b.w	8030594 <ll_sys_enable_specific_irq>

08016128 <disable_specific_irq>:
 8016128:	f01a ba36 	b.w	8030598 <ll_sys_disable_specific_irq>

0801612c <db_reset>:
 801612c:	b510      	push	{r4, lr}
 801612e:	f8df 4458 	ldr.w	r4, [pc, #1112]	; 8016588 <??DataTable29>
 8016132:	201b      	movs	r0, #27
 8016134:	81a0      	strh	r0, [r4, #12]
 8016136:	f44f 70a4 	mov.w	r0, #328	; 0x148
 801613a:	211b      	movs	r1, #27
 801613c:	81e0      	strh	r0, [r4, #14]
 801613e:	8121      	strh	r1, [r4, #8]
 8016140:	8160      	strh	r0, [r4, #10]
 8016142:	2201      	movs	r2, #1
 8016144:	2100      	movs	r1, #0
 8016146:	200a      	movs	r0, #10
 8016148:	f7ef fda6 	bl	8005c98 <ll_tx_pwr_if_get_tx_pwr_table_offset>
 801614c:	f8df 143c 	ldr.w	r1, [pc, #1084]	; 801658c <??DataTable29_1>
 8016150:	680a      	ldr	r2, [r1, #0]
 8016152:	eb02 0080 	add.w	r0, r2, r0, lsl #2
 8016156:	78c1      	ldrb	r1, [r0, #3]
 8016158:	2000      	movs	r0, #0
 801615a:	2207      	movs	r2, #7
 801615c:	7161      	strb	r1, [r4, #5]
 801615e:	6120      	str	r0, [r4, #16]
 8016160:	7020      	strb	r0, [r4, #0]
 8016162:	7062      	strb	r2, [r4, #1]
 8016164:	70a2      	strb	r2, [r4, #2]
 8016166:	2205      	movs	r2, #5
 8016168:	f20f 4140 	addw	r1, pc, #1088	; 0x440
 801616c:	f104 0024 	add.w	r0, r4, #36	; 0x24
 8016170:	f7f8 fcea 	bl	800eb48 <ble_memcpy>
 8016174:	2206      	movs	r2, #6
 8016176:	2100      	movs	r1, #0
 8016178:	f104 001c 	add.w	r0, r4, #28
 801617c:	f7f8 fd35 	bl	800ebea <ble_memset>
 8016180:	2000      	movs	r0, #0
 8016182:	7120      	strb	r0, [r4, #4]
 8016184:	bd10      	pop	{r4, pc}

08016186 <db_destroy>:
 8016186:	2000      	movs	r0, #0
 8016188:	4770      	bx	lr

0801618a <db_get_src_address>:
 801618a:	b570      	push	{r4, r5, r6, lr}
 801618c:	460c      	mov	r4, r1
 801618e:	2500      	movs	r5, #0
 8016190:	4606      	mov	r6, r0
 8016192:	2c00      	cmp	r4, #0
 8016194:	bf14      	ite	ne
 8016196:	2001      	movne	r0, #1
 8016198:	2000      	moveq	r0, #0
 801619a:	f7ea f819 	bl	80001d0 <bsp_assert>
 801619e:	0030      	movs	r0, r6
 80161a0:	bf16      	itet	ne
 80161a2:	2e01      	cmpne	r6, #1
 80161a4:	2001      	moveq	r0, #1
 80161a6:	2000      	movne	r0, #0
 80161a8:	f7ea f812 	bl	80001d0 <bsp_assert>
 80161ac:	2e01      	cmp	r6, #1
 80161ae:	d10b      	bne.n	80161c8 <??db_get_src_address_0>
 80161b0:	f8df 63d4 	ldr.w	r6, [pc, #980]	; 8016588 <??DataTable29>
 80161b4:	2206      	movs	r2, #6
 80161b6:	f20f 31fc 	addw	r1, pc, #1020	; 0x3fc
 80161ba:	f106 001c 	add.w	r0, r6, #28
 80161be:	f7f8 fd4e 	bl	800ec5e <ble_memcmp>
 80161c2:	b930      	cbnz	r0, 80161d2 <??db_get_src_address_1>
 80161c4:	2512      	movs	r5, #18
 80161c6:	e00a      	b.n	80161de <??db_get_src_address_2>

080161c8 <??db_get_src_address_0>:
 80161c8:	b94e      	cbnz	r6, 80161de <??db_get_src_address_2>
 80161ca:	2206      	movs	r2, #6
 80161cc:	f8df 13c0 	ldr.w	r1, [pc, #960]	; 8016590 <??DataTable29_2>
 80161d0:	e002      	b.n	80161d8 <??db_get_src_address_3>

080161d2 <??db_get_src_address_1>:
 80161d2:	2206      	movs	r2, #6
 80161d4:	f106 011c 	add.w	r1, r6, #28

080161d8 <??db_get_src_address_3>:
 80161d8:	4620      	mov	r0, r4
 80161da:	f7f8 fcb5 	bl	800eb48 <ble_memcpy>

080161de <??db_get_src_address_2>:
 80161de:	4628      	mov	r0, r5
 80161e0:	bd70      	pop	{r4, r5, r6, pc}

080161e2 <db_get_chnl_map>:
 80161e2:	b510      	push	{r4, lr}
 80161e4:	0004      	movs	r4, r0
 80161e6:	bf14      	ite	ne
 80161e8:	2001      	movne	r0, #1
 80161ea:	2000      	moveq	r0, #0
 80161ec:	f7e9 fff0 	bl	80001d0 <bsp_assert>
 80161f0:	2205      	movs	r2, #5
 80161f2:	f20f 31b8 	addw	r1, pc, #952	; 0x3b8
 80161f6:	e009      	b.n	801620c <?Subroutine0>

080161f8 <db_get_host_chnl_map>:
 80161f8:	b510      	push	{r4, lr}
 80161fa:	0004      	movs	r4, r0
 80161fc:	bf14      	ite	ne
 80161fe:	2001      	movne	r0, #1
 8016200:	2000      	moveq	r0, #0
 8016202:	f7e9 ffe5 	bl	80001d0 <bsp_assert>
 8016206:	2205      	movs	r2, #5
 8016208:	f8df 1388 	ldr.w	r1, [pc, #904]	; 8016594 <??DataTable29_3>

0801620c <?Subroutine0>:
 801620c:	4620      	mov	r0, r4

0801620e <??Subroutine0_0>:
 801620e:	f7f8 fc9b 	bl	800eb48 <ble_memcpy>
 8016212:	2000      	movs	r0, #0
 8016214:	bd10      	pop	{r4, pc}

08016216 <db_get_advertising_channel_tx_power>:
 8016216:	b510      	push	{r4, lr}
 8016218:	0004      	movs	r4, r0
 801621a:	bf14      	ite	ne
 801621c:	2001      	movne	r0, #1
 801621e:	2000      	moveq	r0, #0
 8016220:	f7e9 ffd6 	bl	80001d0 <bsp_assert>
 8016224:	f8df 0360 	ldr.w	r0, [pc, #864]	; 8016588 <??DataTable29>
 8016228:	f990 0005 	ldrsb.w	r0, [r0, #5]
 801622c:	2815      	cmp	r0, #21
 801622e:	bfa8      	it	ge
 8016230:	2014      	movge	r0, #20
 8016232:	da04      	bge.n	801623e <??db_get_advertising_channel_tx_power_0>
 8016234:	f110 0f80 	cmn.w	r0, #128	; 0x80
 8016238:	bf08      	it	eq
 801623a:	f06f 007e 	mvneq.w	r0, #126	; 0x7e

0801623e <??db_get_advertising_channel_tx_power_0>:
 801623e:	7020      	strb	r0, [r4, #0]
 8016240:	2000      	movs	r0, #0
 8016242:	bd10      	pop	{r4, pc}

08016244 <db_get_channel_tx_power>:
 8016244:	b538      	push	{r3, r4, r5, lr}
 8016246:	460d      	mov	r5, r1
 8016248:	0014      	movs	r4, r2
 801624a:	bf14      	ite	ne
 801624c:	2001      	movne	r0, #1
 801624e:	2000      	moveq	r0, #0
 8016250:	f7e9 ffbe 	bl	80001d0 <bsp_assert>
 8016254:	0028      	movs	r0, r5
 8016256:	d10e      	bne.n	8016276 <??db_get_channel_tx_power_0>
 8016258:	48cb      	ldr	r0, [pc, #812]	; (8016588 <??DataTable29>)
 801625a:	f990 0005 	ldrsb.w	r0, [r0, #5]
 801625e:	2815      	cmp	r0, #21
 8016260:	db03      	blt.n	801626a <??db_get_channel_tx_power_1>
 8016262:	2014      	movs	r0, #20

08016264 <??db_get_channel_tx_power_2>:
 8016264:	7020      	strb	r0, [r4, #0]

08016266 <??db_get_channel_tx_power_3>:
 8016266:	2000      	movs	r0, #0
 8016268:	bd32      	pop	{r1, r4, r5, pc}

0801626a <??db_get_channel_tx_power_1>:
 801626a:	f110 0f1e 	cmn.w	r0, #30
 801626e:	daf9      	bge.n	8016264 <??db_get_channel_tx_power_2>
 8016270:	f06f 001d 	mvn.w	r0, #29
 8016274:	e7f6      	b.n	8016264 <??db_get_channel_tx_power_2>

08016276 <??db_get_channel_tx_power_0>:
 8016276:	2d01      	cmp	r5, #1
 8016278:	d1f5      	bne.n	8016266 <??db_get_channel_tx_power_3>
 801627a:	2014      	movs	r0, #20
 801627c:	e7f2      	b.n	8016264 <??db_get_channel_tx_power_2>

0801627e <db_get_min_max_supprtd_tx_power_values>:
 801627e:	b538      	push	{r3, r4, r5, lr}
 8016280:	460d      	mov	r5, r1
 8016282:	2100      	movs	r1, #0
 8016284:	4604      	mov	r4, r0
 8016286:	f8ad 1000 	strh.w	r1, [sp]
 801628a:	b104      	cbz	r4, 801628e <??db_get_min_max_supprtd_tx_power_values_0>
 801628c:	2001      	movs	r0, #1

0801628e <??db_get_min_max_supprtd_tx_power_values_0>:
 801628e:	f7e9 ff9f 	bl	80001d0 <bsp_assert>
 8016292:	2d00      	cmp	r5, #0
 8016294:	bf14      	ite	ne
 8016296:	2001      	movne	r0, #1
 8016298:	2000      	moveq	r0, #0
 801629a:	f7e9 ff99 	bl	80001d0 <bsp_assert>
 801629e:	4669      	mov	r1, sp
 80162a0:	f10d 0001 	add.w	r0, sp, #1
 80162a4:	f7ef fce9 	bl	8005c7a <ll_tx_pwr_if_get_min_max_supprtd_tx_power_levels>
 80162a8:	f89d 0001 	ldrb.w	r0, [sp, #1]
 80162ac:	7020      	strb	r0, [r4, #0]
 80162ae:	f89d 1000 	ldrb.w	r1, [sp]
 80162b2:	2000      	movs	r0, #0
 80162b4:	7029      	strb	r1, [r5, #0]
 80162b6:	bd32      	pop	{r1, r4, r5, pc}

080162b8 <db_get_tx_power_value>:
 80162b8:	49b3      	ldr	r1, [pc, #716]	; (8016588 <??DataTable29>)
 80162ba:	794a      	ldrb	r2, [r1, #5]
 80162bc:	7002      	strb	r2, [r0, #0]
 80162be:	2000      	movs	r0, #0
 80162c0:	4770      	bx	lr

080162c2 <db_set_tx_power_value>:
 80162c2:	49b1      	ldr	r1, [pc, #708]	; (8016588 <??DataTable29>)
 80162c4:	7148      	strb	r0, [r1, #5]
 80162c6:	2000      	movs	r0, #0
 80162c8:	4770      	bx	lr

080162ca <db_set_rf_path_compensation_value>:
 80162ca:	b4f0      	push	{r4, r5, r6, r7}
 80162cc:	4dae      	ldr	r5, [pc, #696]	; (8016588 <??DataTable29>)
 80162ce:	f9b5 7010 	ldrsh.w	r7, [r5, #16]
 80162d2:	f246 6667 	movw	r6, #26215	; 0x6667
 80162d6:	f246 6467 	movw	r4, #26215	; 0x6667
 80162da:	4346      	muls	r6, r0
 80162dc:	437c      	muls	r4, r7
 80162de:	14b3      	asrs	r3, r6, #18
 80162e0:	eb03 73d3 	add.w	r3, r3, r3, lsr #31
 80162e4:	14a4      	asrs	r4, r4, #18
 80162e6:	eb04 74d4 	add.w	r4, r4, r4, lsr #31
 80162ea:	1b1b      	subs	r3, r3, r4
 80162ec:	7013      	strb	r3, [r2, #0]
 80162ee:	8228      	strh	r0, [r5, #16]
 80162f0:	8269      	strh	r1, [r5, #18]
 80162f2:	2000      	movs	r0, #0
 80162f4:	bcf0      	pop	{r4, r5, r6, r7}
 80162f6:	4770      	bx	lr

080162f8 <db_get_rf_path_compensation_value>:
 80162f8:	4aa3      	ldr	r2, [pc, #652]	; (8016588 <??DataTable29>)
 80162fa:	8a13      	ldrh	r3, [r2, #16]
 80162fc:	8003      	strh	r3, [r0, #0]
 80162fe:	8a50      	ldrh	r0, [r2, #18]
 8016300:	8008      	strh	r0, [r1, #0]
 8016302:	2000      	movs	r0, #0
 8016304:	4770      	bx	lr

08016306 <db_calc_rssi_compensated_value>:
 8016306:	f990 1000 	ldrsb.w	r1, [r0]
 801630a:	297f      	cmp	r1, #127	; 0x7f
 801630c:	d017      	beq.n	801633e <??db_calc_rssi_compensated_value_0>
 801630e:	4a9e      	ldr	r2, [pc, #632]	; (8016588 <??DataTable29>)
 8016310:	f9b2 3012 	ldrsh.w	r3, [r2, #18]
 8016314:	f246 6c67 	movw	ip, #26215	; 0x6667
 8016318:	fb0c fc03 	mul.w	ip, ip, r3
 801631c:	ea4f 42ac 	mov.w	r2, ip, asr #18
 8016320:	eb02 72d2 	add.w	r2, r2, r2, lsr #31
 8016324:	1853      	adds	r3, r2, r1
 8016326:	b21b      	sxth	r3, r3
 8016328:	2b15      	cmp	r3, #21
 801632a:	bfa8      	it	ge
 801632c:	2114      	movge	r1, #20
 801632e:	da05      	bge.n	801633c <??db_calc_rssi_compensated_value_1>
 8016330:	f113 0f7f 	cmn.w	r3, #127	; 0x7f
 8016334:	bfb4      	ite	lt
 8016336:	f06f 017e 	mvnlt.w	r1, #126	; 0x7e
 801633a:	1851      	addge	r1, r2, r1

0801633c <??db_calc_rssi_compensated_value_1>:
 801633c:	7001      	strb	r1, [r0, #0]

0801633e <??db_calc_rssi_compensated_value_0>:
 801633e:	2000      	movs	r0, #0
 8016340:	4770      	bx	lr

08016342 <db_get_radiative_tx_pwr>:
 8016342:	4a91      	ldr	r2, [pc, #580]	; (8016588 <??DataTable29>)
 8016344:	f9b2 3010 	ldrsh.w	r3, [r2, #16]
 8016348:	f246 6c67 	movw	ip, #26215	; 0x6667
 801634c:	fb0c fc03 	mul.w	ip, ip, r3
 8016350:	ea4f 42ac 	mov.w	r2, ip, asr #18
 8016354:	eb02 72d2 	add.w	r2, r2, r2, lsr #31
 8016358:	1813      	adds	r3, r2, r0
 801635a:	b21b      	sxth	r3, r3
 801635c:	2b80      	cmp	r3, #128	; 0x80
 801635e:	bfa8      	it	ge
 8016360:	207f      	movge	r0, #127	; 0x7f
 8016362:	da05      	bge.n	8016370 <??db_get_radiative_tx_pwr_0>
 8016364:	f113 0f7f 	cmn.w	r3, #127	; 0x7f
 8016368:	bfb4      	ite	lt
 801636a:	f06f 007e 	mvnlt.w	r0, #126	; 0x7e
 801636e:	1810      	addge	r0, r2, r0

08016370 <??db_get_radiative_tx_pwr_0>:
 8016370:	e016      	b.n	80163a0 <??db_get_phy_conf_tx_pwr_0>

08016372 <db_get_phy_conf_tx_pwr>:
 8016372:	4a85      	ldr	r2, [pc, #532]	; (8016588 <??DataTable29>)
 8016374:	f9b2 3010 	ldrsh.w	r3, [r2, #16]
 8016378:	f246 6c67 	movw	ip, #26215	; 0x6667
 801637c:	fb0c fc03 	mul.w	ip, ip, r3
 8016380:	ea4f 42ac 	mov.w	r2, ip, asr #18
 8016384:	eb02 72d2 	add.w	r2, r2, r2, lsr #31
 8016388:	1a83      	subs	r3, r0, r2
 801638a:	b21b      	sxth	r3, r3
 801638c:	2b80      	cmp	r3, #128	; 0x80
 801638e:	bfa8      	it	ge
 8016390:	207f      	movge	r0, #127	; 0x7f
 8016392:	da05      	bge.n	80163a0 <??db_get_phy_conf_tx_pwr_0>
 8016394:	f113 0f7f 	cmn.w	r3, #127	; 0x7f
 8016398:	bfb4      	ite	lt
 801639a:	f06f 007e 	mvnlt.w	r0, #126	; 0x7e
 801639e:	1a80      	subge	r0, r0, r2

080163a0 <??db_get_phy_conf_tx_pwr_0>:
 80163a0:	7008      	strb	r0, [r1, #0]
 80163a2:	2000      	movs	r0, #0
 80163a4:	4770      	bx	lr

080163a6 <db_set_slp_clk_accuracy>:
 80163a6:	4978      	ldr	r1, [pc, #480]	; (8016588 <??DataTable29>)
 80163a8:	7108      	strb	r0, [r1, #4]
 80163aa:	2000      	movs	r0, #0
 80163ac:	4770      	bx	lr

080163ae <db_get_slp_clk_accuracy>:
 80163ae:	b510      	push	{r4, lr}
 80163b0:	0004      	movs	r4, r0
 80163b2:	bf14      	ite	ne
 80163b4:	2001      	movne	r0, #1
 80163b6:	2000      	moveq	r0, #0
 80163b8:	f7e9 ff0a 	bl	80001d0 <bsp_assert>
 80163bc:	4872      	ldr	r0, [pc, #456]	; (8016588 <??DataTable29>)
 80163be:	7901      	ldrb	r1, [r0, #4]
 80163c0:	2000      	movs	r0, #0
 80163c2:	7021      	strb	r1, [r4, #0]
 80163c4:	bd10      	pop	{r4, pc}

080163c6 <db_get_vrsn_info>:
 80163c6:	b510      	push	{r4, lr}
 80163c8:	0004      	movs	r4, r0
 80163ca:	bf14      	ite	ne
 80163cc:	2001      	movne	r0, #1
 80163ce:	2000      	moveq	r0, #0
 80163d0:	f7e9 fefe 	bl	80001d0 <bsp_assert>
 80163d4:	f44f 40a0 	mov.w	r0, #20480	; 0x5000
 80163d8:	8060      	strh	r0, [r4, #2]
 80163da:	210c      	movs	r1, #12
 80163dc:	7121      	strb	r1, [r4, #4]
 80163de:	2030      	movs	r0, #48	; 0x30
 80163e0:	8020      	strh	r0, [r4, #0]
 80163e2:	2000      	movs	r0, #0
 80163e4:	bd10      	pop	{r4, pc}

080163e6 <db_get_local_vrsn_info>:
 80163e6:	b510      	push	{r4, lr}
 80163e8:	0004      	movs	r4, r0
 80163ea:	bf14      	ite	ne
 80163ec:	2001      	movne	r0, #1
 80163ee:	2000      	moveq	r0, #0
 80163f0:	f7e9 feee 	bl	80001d0 <bsp_assert>
 80163f4:	f44f 40a0 	mov.w	r0, #20480	; 0x5000
 80163f8:	8020      	strh	r0, [r4, #0]
 80163fa:	210c      	movs	r1, #12
 80163fc:	71a1      	strb	r1, [r4, #6]
 80163fe:	71e1      	strb	r1, [r4, #7]
 8016400:	80a0      	strh	r0, [r4, #4]
 8016402:	2130      	movs	r1, #48	; 0x30
 8016404:	8061      	strh	r1, [r4, #2]
 8016406:	2000      	movs	r0, #0
 8016408:	bd10      	pop	{r4, pc}

0801640a <db_get_le_feature_info>:
 801640a:	b510      	push	{r4, lr}
 801640c:	0004      	movs	r4, r0
 801640e:	bf14      	ite	ne
 8016410:	2001      	movne	r0, #1
 8016412:	2000      	moveq	r0, #0
 8016414:	f7e9 fedc 	bl	80001d0 <bsp_assert>
 8016418:	f7ef fc94 	bl	8005d44 <ll_tx_pwr_if_is_le_power_class_1_supported>
 801641c:	2801      	cmp	r0, #1
 801641e:	d104      	bne.n	801642a <??db_get_le_feature_info_0>
 8016420:	485d      	ldr	r0, [pc, #372]	; (8016598 <??DataTable29_4>)
 8016422:	7841      	ldrb	r1, [r0, #1]
 8016424:	f041 0180 	orr.w	r1, r1, #128	; 0x80
 8016428:	e004      	b.n	8016434 <??db_get_le_feature_info_1>

0801642a <??db_get_le_feature_info_0>:
 801642a:	b920      	cbnz	r0, 8016436 <??db_get_le_feature_info_2>
 801642c:	485a      	ldr	r0, [pc, #360]	; (8016598 <??DataTable29_4>)
 801642e:	7841      	ldrb	r1, [r0, #1]
 8016430:	f001 017f 	and.w	r1, r1, #127	; 0x7f

08016434 <??db_get_le_feature_info_1>:
 8016434:	7041      	strb	r1, [r0, #1]

08016436 <??db_get_le_feature_info_2>:
 8016436:	2208      	movs	r2, #8
 8016438:	4957      	ldr	r1, [pc, #348]	; (8016598 <??DataTable29_4>)
 801643a:	e6e7      	b.n	801620c <?Subroutine0>

0801643c <db_check_encryption>:
 801643c:	4856      	ldr	r0, [pc, #344]	; (8016598 <??DataTable29_4>)
 801643e:	7801      	ldrb	r1, [r0, #0]
 8016440:	1e48      	subs	r0, r1, #1
 8016442:	4180      	sbcs	r0, r0
 8016444:	43c0      	mvns	r0, r0
 8016446:	0fc0      	lsrs	r0, r0, #31
 8016448:	4770      	bx	lr
	...

0801644c <db_get_feature_info>:
 801644c:	b510      	push	{r4, lr}
 801644e:	0004      	movs	r4, r0
 8016450:	bf14      	ite	ne
 8016452:	2001      	movne	r0, #1
 8016454:	2000      	moveq	r0, #0
 8016456:	f7e9 febb 	bl	80001d0 <bsp_assert>
 801645a:	2208      	movs	r2, #8
 801645c:	a157      	add	r1, pc, #348	; (adr r1, 80165bc <g_lmp_feature>)
 801645e:	e6d5      	b.n	801620c <?Subroutine0>

08016460 <db_get_supprtd_cmds>:
 8016460:	b510      	push	{r4, lr}
 8016462:	0004      	movs	r4, r0
 8016464:	bf14      	ite	ne
 8016466:	2001      	movne	r0, #1
 8016468:	2000      	moveq	r0, #0
 801646a:	f7e9 feb1 	bl	80001d0 <bsp_assert>
 801646e:	2240      	movs	r2, #64	; 0x40
 8016470:	494a      	ldr	r1, [pc, #296]	; (801659c <??DataTable29_5>)
 8016472:	e6cb      	b.n	801620c <?Subroutine0>

08016474 <db_get_supprtd_states>:
 8016474:	b510      	push	{r4, lr}
 8016476:	0004      	movs	r4, r0
 8016478:	bf14      	ite	ne
 801647a:	2001      	movne	r0, #1
 801647c:	2000      	moveq	r0, #0
 801647e:	f7e9 fea7 	bl	80001d0 <bsp_assert>
 8016482:	2208      	movs	r2, #8
 8016484:	a147      	add	r1, pc, #284	; (adr r1, 80165a4 <g_supported_states>)
 8016486:	e6c1      	b.n	801620c <?Subroutine0>

08016488 <db_get_bd_address>:
 8016488:	b510      	push	{r4, lr}
 801648a:	0004      	movs	r4, r0
 801648c:	bf14      	ite	ne
 801648e:	2001      	movne	r0, #1
 8016490:	2000      	moveq	r0, #0
 8016492:	f7e9 fe9d 	bl	80001d0 <bsp_assert>
 8016496:	2206      	movs	r2, #6
 8016498:	493d      	ldr	r1, [pc, #244]	; (8016590 <??DataTable29_2>)
 801649a:	e6b7      	b.n	801620c <?Subroutine0>

0801649c <db_set_bd_address>:
 801649c:	b510      	push	{r4, lr}
 801649e:	0004      	movs	r4, r0
 80164a0:	bf14      	ite	ne
 80164a2:	2001      	movne	r0, #1
 80164a4:	2000      	moveq	r0, #0
 80164a6:	f7e9 fe93 	bl	80001d0 <bsp_assert>
 80164aa:	2206      	movs	r2, #6
 80164ac:	4621      	mov	r1, r4
 80164ae:	4838      	ldr	r0, [pc, #224]	; (8016590 <??DataTable29_2>)
 80164b0:	e6ad      	b.n	801620e <??Subroutine0_0>

080164b2 <db_get_max_data_length>:
 80164b2:	b510      	push	{r4, lr}
 80164b4:	0004      	movs	r4, r0
 80164b6:	bf14      	ite	ne
 80164b8:	2001      	movne	r0, #1
 80164ba:	2000      	moveq	r0, #0
 80164bc:	f7e9 fe88 	bl	80001d0 <bsp_assert>
 80164c0:	4831      	ldr	r0, [pc, #196]	; (8016588 <??DataTable29>)
 80164c2:	8981      	ldrh	r1, [r0, #12]
 80164c4:	80a1      	strh	r1, [r4, #4]
 80164c6:	89c2      	ldrh	r2, [r0, #14]
 80164c8:	80e2      	strh	r2, [r4, #6]
 80164ca:	8901      	ldrh	r1, [r0, #8]
 80164cc:	8021      	strh	r1, [r4, #0]
 80164ce:	8940      	ldrh	r0, [r0, #10]
 80164d0:	8060      	strh	r0, [r4, #2]
 80164d2:	2000      	movs	r0, #0
 80164d4:	bd10      	pop	{r4, pc}

080164d6 <db_get_data_buffer_size>:
 80164d6:	22fb      	movs	r2, #251	; 0xfb
 80164d8:	7002      	strb	r2, [r0, #0]
 80164da:	2300      	movs	r3, #0
 80164dc:	7043      	strb	r3, [r0, #1]
 80164de:	2008      	movs	r0, #8
 80164e0:	e75e      	b.n	80163a0 <??db_get_phy_conf_tx_pwr_0>

080164e2 <db_get_data_buffer_size_v2>:
 80164e2:	b430      	push	{r4, r5}
 80164e4:	24fb      	movs	r4, #251	; 0xfb
 80164e6:	7004      	strb	r4, [r0, #0]
 80164e8:	2500      	movs	r5, #0
 80164ea:	7045      	strb	r5, [r0, #1]
 80164ec:	2008      	movs	r0, #8
 80164ee:	7008      	strb	r0, [r1, #0]
 80164f0:	7015      	strb	r5, [r2, #0]
 80164f2:	7055      	strb	r5, [r2, #1]
 80164f4:	2000      	movs	r0, #0
 80164f6:	7018      	strb	r0, [r3, #0]
 80164f8:	bc30      	pop	{r4, r5}
 80164fa:	4770      	bx	lr

080164fc <db_get_suggested_data_length>:
 80164fc:	4a22      	ldr	r2, [pc, #136]	; (8016588 <??DataTable29>)
 80164fe:	8913      	ldrh	r3, [r2, #8]
 8016500:	7003      	strb	r3, [r0, #0]
 8016502:	0a1b      	lsrs	r3, r3, #8
 8016504:	7043      	strb	r3, [r0, #1]
 8016506:	8950      	ldrh	r0, [r2, #10]
 8016508:	7008      	strb	r0, [r1, #0]
 801650a:	0a00      	lsrs	r0, r0, #8
 801650c:	7048      	strb	r0, [r1, #1]
 801650e:	2000      	movs	r0, #0
 8016510:	4770      	bx	lr

08016512 <db_set_suggested_data_length>:
 8016512:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8016514:	4604      	mov	r4, r0
 8016516:	381b      	subs	r0, #27
 8016518:	28e1      	cmp	r0, #225	; 0xe1
 801651a:	41b6      	sbcs	r6, r6
 801651c:	460d      	mov	r5, r1
 801651e:	0ff0      	lsrs	r0, r6, #31
 8016520:	f7e9 fe56 	bl	80001d0 <bsp_assert>
 8016524:	4f18      	ldr	r7, [pc, #96]	; (8016588 <??DataTable29>)
 8016526:	813c      	strh	r4, [r7, #8]
 8016528:	0ff0      	lsrs	r0, r6, #31
 801652a:	f7e9 fe51 	bl	80001d0 <bsp_assert>
 801652e:	817d      	strh	r5, [r7, #10]
 8016530:	2000      	movs	r0, #0
 8016532:	bdf2      	pop	{r1, r4, r5, r6, r7, pc}

08016534 <db_set_random_address>:
 8016534:	b510      	push	{r4, lr}
 8016536:	0004      	movs	r4, r0
 8016538:	bf14      	ite	ne
 801653a:	2001      	movne	r0, #1
 801653c:	2000      	moveq	r0, #0
 801653e:	f7e9 fe47 	bl	80001d0 <bsp_assert>
 8016542:	2206      	movs	r2, #6
 8016544:	4621      	mov	r1, r4
 8016546:	4816      	ldr	r0, [pc, #88]	; (80165a0 <??DataTable29_6>)
 8016548:	e661      	b.n	801620e <??Subroutine0_0>

0801654a <db_set_host_ch_clasfcn>:
 801654a:	4601      	mov	r1, r0
 801654c:	b580      	push	{r7, lr}
 801654e:	2205      	movs	r2, #5
 8016550:	4810      	ldr	r0, [pc, #64]	; (8016594 <??DataTable29_3>)
 8016552:	f7f8 faf9 	bl	800eb48 <ble_memcpy>
 8016556:	2000      	movs	r0, #0
 8016558:	bd02      	pop	{r1, pc}

0801655a <db_le_set_default_phy_cmd>:
 801655a:	4b0b      	ldr	r3, [pc, #44]	; (8016588 <??DataTable29>)
 801655c:	7018      	strb	r0, [r3, #0]
 801655e:	ea5f 7cc0 	movs.w	ip, r0, lsl #31
 8016562:	bf58      	it	pl
 8016564:	7059      	strbpl	r1, [r3, #1]
 8016566:	0780      	lsls	r0, r0, #30
 8016568:	bf58      	it	pl
 801656a:	709a      	strbpl	r2, [r3, #2]
 801656c:	2000      	movs	r0, #0
 801656e:	4770      	bx	lr

08016570 <db_le_get_default_phy_cmd>:
 8016570:	4b05      	ldr	r3, [pc, #20]	; (8016588 <??DataTable29>)
 8016572:	f893 c000 	ldrb.w	ip, [r3]
 8016576:	f880 c000 	strb.w	ip, [r0]
 801657a:	7858      	ldrb	r0, [r3, #1]
 801657c:	7008      	strb	r0, [r1, #0]
 801657e:	7899      	ldrb	r1, [r3, #2]
 8016580:	2000      	movs	r0, #0
 8016582:	7011      	strb	r1, [r2, #0]
 8016584:	4770      	bx	lr
	...

08016588 <??DataTable29>:
 8016588:	040c 2000                                   ... 

0801658c <??DataTable29_1>:
 801658c:	0704 2000                                   ... 

08016590 <??DataTable29_2>:
 8016590:	0420 2000                                    .. 

08016594 <??DataTable29_3>:
 8016594:	0430 2000                                   0.. 

08016598 <??DataTable29_4>:
 8016598:	0438 2000                                   8.. 

0801659c <??DataTable29_5>:
 801659c:	1dbc 0803                                   ....

080165a0 <??DataTable29_6>:
 80165a0:	0428 2000                                   (.. 

080165a4 <g_supported_states>:
 80165a4:	ffff ffff 03ff 0000                         ........

080165ac <default_chnl_map>:
 80165ac:	ffff ffff 001f 0000                         ........

080165b4 <uninitialized_addr>:
	...

080165bc <g_lmp_feature>:
 80165bc:	0000 0000 0060 0000                         ....`...

080165c4 <get_elapsed_time>:
 80165c4:	2000      	movs	r0, #0
 80165c6:	4770      	bx	lr

080165c8 <hw_ll_timer_init>:
 80165c8:	b510      	push	{r4, lr}
 80165ca:	0004      	movs	r4, r0
 80165cc:	bf14      	ite	ne
 80165ce:	2001      	movne	r0, #1
 80165d0:	2000      	moveq	r0, #0
 80165d2:	f7e9 fdfd 	bl	80001d0 <bsp_assert>
 80165d6:	4620      	mov	r0, r4
 80165d8:	f7f5 fd54 	bl	800c084 <llhwc_slptmr_init>
 80165dc:	2000      	movs	r0, #0
 80165de:	bd10      	pop	{r4, pc}

080165e0 <hw_ll_timer_start>:
 80165e0:	b53e      	push	{r1, r2, r3, r4, r5, lr}
 80165e2:	bf00      	nop
 80165e4:	a30c      	add	r3, pc, #48	; (adr r3, 8016618 <?_0>)
 80165e6:	e9d3 4500 	ldrd	r4, r5, [r3]
 80165ea:	460a      	mov	r2, r1
 80165ec:	4669      	mov	r1, sp
 80165ee:	e9cd 4500 	strd	r4, r5, [sp]
 80165f2:	9000      	str	r0, [sp, #0]
 80165f4:	2001      	movs	r0, #1
 80165f6:	f7f5 fea9 	bl	800c34c <llhwc_slptmr_set>
 80165fa:	2000      	movs	r0, #0
 80165fc:	b003      	add	sp, #12
 80165fe:	bd30      	pop	{r4, r5, pc}

08016600 <hw_ll_timer_stop>:
 8016600:	b580      	push	{r7, lr}
 8016602:	2001      	movs	r0, #1
 8016604:	f7f5 ffdc 	bl	800c5c0 <llhwc_slptmr_stop>
 8016608:	2000      	movs	r0, #0
 801660a:	bd02      	pop	{r1, pc}

0801660c <get_current_time>:
 801660c:	b580      	push	{r7, lr}
 801660e:	4668      	mov	r0, sp
 8016610:	f7f5 fd43 	bl	800c09a <llhwc_slptmr_get>
 8016614:	9800      	ldr	r0, [sp, #0]
 8016616:	bd02      	pop	{r1, pc}

08016618 <?_0>:
	...

08016620 <ble_utils_int>:
 8016620:	4770      	bx	lr

08016622 <utils_gen_access_addr>:
 8016622:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8016626:	ea5f 0800 	movs.w	r8, r0
 801662a:	bf14      	ite	ne
 801662c:	2001      	movne	r0, #1
 801662e:	2000      	moveq	r0, #0
 8016630:	f7e9 fdce 	bl	80001d0 <bsp_assert>
 8016634:	2001      	movs	r0, #1
 8016636:	9000      	str	r0, [sp, #0]
 8016638:	2600      	movs	r6, #0

0801663a <??utils_gen_access_addr_0>:
 801663a:	2104      	movs	r1, #4
 801663c:	4668      	mov	r0, sp
 801663e:	f7f5 fab4 	bl	800bbaa <llhwc_gen_rnd_num>
 8016642:	9800      	ldr	r0, [sp, #0]
 8016644:	493f      	ldr	r1, [pc, #252]	; (8016744 <??DataTable1>)
 8016646:	9a00      	ldr	r2, [sp, #0]
 8016648:	4048      	eors	r0, r1
 801664a:	9900      	ldr	r1, [sp, #0]
 801664c:	2400      	movs	r4, #0
 801664e:	2700      	movs	r7, #0
 8016650:	0849      	lsrs	r1, r1, #1
 8016652:	2500      	movs	r5, #0
 8016654:	0049      	lsls	r1, r1, #1
 8016656:	ea4f 4e02 	mov.w	lr, r2, lsl #16
 801665a:	fa5f fc82 	uxtb.w	ip, r2
 801665e:	46a3      	mov	fp, r4
 8016660:	46a1      	mov	r9, r4
 8016662:	46a2      	mov	sl, r4
 8016664:	ea81 0142 	eor.w	r1, r1, r2, lsl #1
 8016668:	ebbc 6f1e 	cmp.w	ip, lr, lsr #24
 801666c:	bf04      	itt	eq
 801666e:	ea4f 2e02 	moveq.w	lr, r2, lsl #8
 8016672:	ebbc 6f1e 	cmpeq.w	ip, lr, lsr #24
 8016676:	d105      	bne.n	8016684 <??utils_gen_access_addr_1>
 8016678:	b2d3      	uxtb	r3, r2
 801667a:	ebb3 6f12 	cmp.w	r3, r2, lsr #24
 801667e:	bf08      	it	eq
 8016680:	2401      	moveq	r4, #1
 8016682:	d04c      	beq.n	801671e <??utils_gen_access_addr_2>

08016684 <??utils_gen_access_addr_1>:
 8016684:	2200      	movs	r2, #0

08016686 <??utils_gen_access_addr_3>:
 8016686:	07c3      	lsls	r3, r0, #31
 8016688:	bf48      	it	mi
 801668a:	f10b 0b01 	addmi.w	fp, fp, #1
 801668e:	0840      	lsrs	r0, r0, #1
 8016690:	07cb      	lsls	r3, r1, #31
 8016692:	d506      	bpl.n	80166a2 <??utils_gen_access_addr_4>
 8016694:	2a1b      	cmp	r2, #27
 8016696:	da0f      	bge.n	80166b8 <??utils_gen_access_addr_5>
 8016698:	2a10      	cmp	r2, #16
 801669a:	bfb8      	it	lt
 801669c:	f10a 0a01 	addlt.w	sl, sl, #1
 80166a0:	1c7f      	adds	r7, r7, #1

080166a2 <??utils_gen_access_addr_4>:
 80166a2:	0849      	lsrs	r1, r1, #1
 80166a4:	2a08      	cmp	r2, #8
 80166a6:	da17      	bge.n	80166d8 <??utils_gen_access_addr_6>
 80166a8:	9b00      	ldr	r3, [sp, #0]
 80166aa:	40d3      	lsrs	r3, r2
 80166ac:	ea5f 7cc3 	movs.w	ip, r3, lsl #31
 80166b0:	d514      	bpl.n	80166dc <??utils_gen_access_addr_7>
 80166b2:	f109 0901 	add.w	r9, r9, #1
 80166b6:	e011      	b.n	80166dc <??utils_gen_access_addr_7>

080166b8 <??utils_gen_access_addr_5>:
 80166b8:	1c6d      	adds	r5, r5, #1
 80166ba:	0849      	lsrs	r1, r1, #1
 80166bc:	e01a      	b.n	80166f4 <??utils_gen_access_addr_8>

080166be <??utils_gen_access_addr_9>:
 80166be:	fa5f fb8b 	uxtb.w	fp, fp
 80166c2:	f1bb 0f01 	cmp.w	fp, #1
 80166c6:	bfc4      	itt	gt
 80166c8:	b2ed      	uxtbgt	r5, r5
 80166ca:	2d01      	cmpgt	r5, #1
 80166cc:	dd26      	ble.n	801671c <??utils_gen_access_addr_10>
 80166ce:	b2ff      	uxtb	r7, r7
 80166d0:	19ef      	adds	r7, r5, r7
 80166d2:	2f18      	cmp	r7, #24
 80166d4:	dd14      	ble.n	8016700 <??utils_gen_access_addr_11>
 80166d6:	e021      	b.n	801671c <??utils_gen_access_addr_10>

080166d8 <??utils_gen_access_addr_6>:
 80166d8:	2a18      	cmp	r2, #24
 80166da:	da0b      	bge.n	80166f4 <??utils_gen_access_addr_8>

080166dc <??utils_gen_access_addr_7>:
 80166dc:	f8dd c000 	ldr.w	ip, [sp]
 80166e0:	233f      	movs	r3, #63	; 0x3f
 80166e2:	4093      	lsls	r3, r2
 80166e4:	ea1c 0f03 	tst.w	ip, r3
 80166e8:	bf1c      	itt	ne
 80166ea:	ea6c 0303 	ornne	r3, ip, r3
 80166ee:	f113 0f01 	cmnne.w	r3, #1
 80166f2:	d003      	beq.n	80166fc <??utils_gen_access_addr_12>

080166f4 <??utils_gen_access_addr_8>:
 80166f4:	1c52      	adds	r2, r2, #1
 80166f6:	2a20      	cmp	r2, #32
 80166f8:	dbc5      	blt.n	8016686 <??utils_gen_access_addr_3>
 80166fa:	e7e0      	b.n	80166be <??utils_gen_access_addr_9>

080166fc <??utils_gen_access_addr_12>:
 80166fc:	2401      	movs	r4, #1
 80166fe:	e7de      	b.n	80166be <??utils_gen_access_addr_9>

08016700 <??utils_gen_access_addr_11>:
 8016700:	fa5f f989 	uxtb.w	r9, r9
 8016704:	f1b9 0f02 	cmp.w	r9, #2
 8016708:	dd08      	ble.n	801671c <??utils_gen_access_addr_10>
 801670a:	fa5f fa8a 	uxtb.w	sl, sl
 801670e:	f1ba 0f0c 	cmp.w	sl, #12
 8016712:	da03      	bge.n	801671c <??utils_gen_access_addr_10>
 8016714:	9800      	ldr	r0, [sp, #0]
 8016716:	f7fa fe9e 	bl	8011456 <evnt_util_check_duplicate_access_addr>
 801671a:	b100      	cbz	r0, 801671e <??utils_gen_access_addr_2>

0801671c <??utils_gen_access_addr_10>:
 801671c:	2401      	movs	r4, #1

0801671e <??utils_gen_access_addr_2>:
 801671e:	1c76      	adds	r6, r6, #1
 8016720:	b2f0      	uxtb	r0, r6
 8016722:	2832      	cmp	r0, #50	; 0x32
 8016724:	da01      	bge.n	801672a <??utils_gen_access_addr_13>
 8016726:	2c00      	cmp	r4, #0
 8016728:	d187      	bne.n	801663a <??utils_gen_access_addr_0>

0801672a <??utils_gen_access_addr_13>:
 801672a:	b2f6      	uxtb	r6, r6
 801672c:	2e32      	cmp	r6, #50	; 0x32
 801672e:	bf14      	ite	ne
 8016730:	2001      	movne	r0, #1
 8016732:	2000      	moveq	r0, #0
 8016734:	f7e9 fd4c 	bl	80001d0 <bsp_assert>
 8016738:	9800      	ldr	r0, [sp, #0]
 801673a:	f8c8 0000 	str.w	r0, [r8]
 801673e:	2000      	movs	r0, #0
 8016740:	e8bd 8ff2 	ldmia.w	sp!, {r1, r4, r5, r6, r7, r8, r9, sl, fp, pc}

08016744 <??DataTable1>:
 8016744:	bed6 8e89                                   ....

08016748 <utils_gen_crc_init>:
 8016748:	b510      	push	{r4, lr}
 801674a:	0004      	movs	r4, r0
 801674c:	bf14      	ite	ne
 801674e:	2001      	movne	r0, #1
 8016750:	2000      	moveq	r0, #0
 8016752:	f7e9 fd3d 	bl	80001d0 <bsp_assert>
 8016756:	2103      	movs	r1, #3
 8016758:	4620      	mov	r0, r4
 801675a:	f7f5 fa26 	bl	800bbaa <llhwc_gen_rnd_num>
 801675e:	2000      	movs	r0, #0
 8016760:	bd10      	pop	{r4, pc}
	...

08016764 <hci_disconnect_process>:
 8016764:	b510      	push	{r4, lr}
 8016766:	4604      	mov	r4, r0
 8016768:	79a1      	ldrb	r1, [r4, #6]
 801676a:	88a0      	ldrh	r0, [r4, #4]
 801676c:	f009 fbb7 	bl	801fede <hci_disconnect>
 8016770:	e004      	b.n	801677c <?Subroutine0>

08016772 <hci_read_remote_version_information_process>:
 8016772:	b510      	push	{r4, lr}
 8016774:	4604      	mov	r4, r0
 8016776:	88a0      	ldrh	r0, [r4, #4]
 8016778:	f009 fdb1 	bl	80202de <hci_read_remote_version_information>

0801677c <?Subroutine0>:
 801677c:	4601      	mov	r1, r0
 801677e:	4620      	mov	r0, r4

08016780 <??Subroutine0_0>:
 8016780:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8016784:	f001 b904 	b.w	8017990 <hci_status_event>

08016788 <hci_set_event_mask_process>:
 8016788:	b510      	push	{r4, lr}
 801678a:	4604      	mov	r4, r0
 801678c:	1d20      	adds	r0, r4, #4
 801678e:	f009 fbb9 	bl	801ff04 <hci_set_event_mask>
 8016792:	e003      	b.n	801679c <?Subroutine2>

08016794 <hci_reset_process>:
 8016794:	b510      	push	{r4, lr}
 8016796:	4604      	mov	r4, r0
 8016798:	f002 f830 	bl	80187fc <hci_reset>

0801679c <?Subroutine2>:
 801679c:	71a0      	strb	r0, [r4, #6]
 801679e:	4620      	mov	r0, r4
 80167a0:	2101      	movs	r1, #1

080167a2 <??Subroutine2_0>:
 80167a2:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80167a6:	f001 b903 	b.w	80179b0 <hci_complete_event>

080167aa <hci_read_transmit_power_level_process>:
 80167aa:	b51c      	push	{r2, r3, r4, lr}
 80167ac:	4604      	mov	r4, r0
 80167ae:	2000      	movs	r0, #0
 80167b0:	f88d 0000 	strb.w	r0, [sp]
 80167b4:	79a1      	ldrb	r1, [r4, #6]
 80167b6:	88a0      	ldrh	r0, [r4, #4]
 80167b8:	466a      	mov	r2, sp
 80167ba:	f009 fd4b 	bl	8020254 <hci_read_transmit_power_level>
 80167be:	e034      	b.n	801682a <?Subroutine4>

080167c0 <hci_read_local_version_information_process>:
 80167c0:	b530      	push	{r4, r5, lr}
 80167c2:	b083      	sub	sp, #12
 80167c4:	2100      	movs	r1, #0
 80167c6:	9101      	str	r1, [sp, #4]
 80167c8:	4604      	mov	r4, r0
 80167ca:	9102      	str	r1, [sp, #8]
 80167cc:	f10d 0506 	add.w	r5, sp, #6
 80167d0:	9500      	str	r5, [sp, #0]
 80167d2:	ab02      	add	r3, sp, #8
 80167d4:	aa01      	add	r2, sp, #4
 80167d6:	f10d 010a 	add.w	r1, sp, #10
 80167da:	f10d 0005 	add.w	r0, sp, #5
 80167de:	f009 fc6b 	bl	80200b8 <hci_read_local_version_information>
 80167e2:	f89d 1005 	ldrb.w	r1, [sp, #5]
 80167e6:	71e1      	strb	r1, [r4, #7]
 80167e8:	f8bd 200a 	ldrh.w	r2, [sp, #10]
 80167ec:	8122      	strh	r2, [r4, #8]
 80167ee:	f89d 1004 	ldrb.w	r1, [sp, #4]
 80167f2:	72a1      	strb	r1, [r4, #10]
 80167f4:	f8bd 2008 	ldrh.w	r2, [sp, #8]
 80167f8:	f8a4 200b 	strh.w	r2, [r4, #11]
 80167fc:	f8bd 1006 	ldrh.w	r1, [sp, #6]
 8016800:	71a0      	strb	r0, [r4, #6]
 8016802:	4620      	mov	r0, r4
 8016804:	f8a4 100d 	strh.w	r1, [r4, #13]
 8016808:	2109      	movs	r1, #9
 801680a:	e0d9      	b.n	80169c0 <??Subroutine12_1>

0801680c <hci_read_bd_addr_process>:
 801680c:	b53e      	push	{r1, r2, r3, r4, r5, lr}
 801680e:	4604      	mov	r4, r0
 8016810:	4668      	mov	r0, sp
 8016812:	f009 fc62 	bl	80200da <hci_read_bd_addr>
 8016816:	e0ca      	b.n	80169ae <?Subroutine6>

08016818 <hci_read_rssi_process>:
 8016818:	b51c      	push	{r2, r3, r4, lr}
 801681a:	4604      	mov	r4, r0
 801681c:	2000      	movs	r0, #0
 801681e:	f88d 0000 	strb.w	r0, [sp]
 8016822:	88a0      	ldrh	r0, [r4, #4]
 8016824:	4669      	mov	r1, sp
 8016826:	f009 fc5d 	bl	80200e4 <hci_read_rssi>

0801682a <?Subroutine4>:
 801682a:	88a1      	ldrh	r1, [r4, #4]
 801682c:	f8a4 1007 	strh.w	r1, [r4, #7]
 8016830:	f89d 2000 	ldrb.w	r2, [sp]
 8016834:	71a0      	strb	r0, [r4, #6]
 8016836:	2104      	movs	r1, #4
 8016838:	7262      	strb	r2, [r4, #9]

0801683a <??Subroutine11_0>:
 801683a:	4620      	mov	r0, r4

0801683c <??Subroutine11_1>:
 801683c:	f001 f8b8 	bl	80179b0 <hci_complete_event>
 8016840:	bd16      	pop	{r1, r2, r4, pc}

08016842 <hci_le_set_event_mask_process>:
 8016842:	b510      	push	{r4, lr}
 8016844:	4604      	mov	r4, r0
 8016846:	1d20      	adds	r0, r4, #4
 8016848:	f009 fb50 	bl	801feec <hci_le_set_event_mask>
 801684c:	e7a6      	b.n	801679c <?Subroutine2>

0801684e <hci_le_set_advertising_data_process>:
 801684e:	b510      	push	{r4, lr}
 8016850:	4604      	mov	r4, r0
 8016852:	7920      	ldrb	r0, [r4, #4]
 8016854:	1d61      	adds	r1, r4, #5
 8016856:	f009 fb9d 	bl	801ff94 <hci_le_set_advertising_data>
 801685a:	e79f      	b.n	801679c <?Subroutine2>

0801685c <hci_le_set_scan_response_data_process>:
 801685c:	b510      	push	{r4, lr}
 801685e:	4604      	mov	r4, r0
 8016860:	7920      	ldrb	r0, [r4, #4]
 8016862:	1d61      	adds	r1, r4, #5
 8016864:	f009 fb9b 	bl	801ff9e <hci_le_set_scan_response_data>
 8016868:	e798      	b.n	801679c <?Subroutine2>

0801686a <hci_le_connection_update_process>:
 801686a:	b518      	push	{r3, r4, lr}
 801686c:	b083      	sub	sp, #12
 801686e:	4604      	mov	r4, r0
 8016870:	8a20      	ldrh	r0, [r4, #16]
 8016872:	9002      	str	r0, [sp, #8]
 8016874:	89e1      	ldrh	r1, [r4, #14]
 8016876:	9101      	str	r1, [sp, #4]
 8016878:	89a0      	ldrh	r0, [r4, #12]
 801687a:	9000      	str	r0, [sp, #0]
 801687c:	8963      	ldrh	r3, [r4, #10]
 801687e:	8922      	ldrh	r2, [r4, #8]
 8016880:	88e1      	ldrh	r1, [r4, #6]
 8016882:	88a0      	ldrh	r0, [r4, #4]
 8016884:	f009 fc08 	bl	8020098 <hci_le_connection_update>
 8016888:	4601      	mov	r1, r0
 801688a:	4620      	mov	r0, r4
 801688c:	b004      	add	sp, #16
 801688e:	e777      	b.n	8016780 <??Subroutine0_0>

08016890 <hci_le_read_channel_map_process>:
 8016890:	b53e      	push	{r1, r2, r3, r4, r5, lr}
 8016892:	4604      	mov	r4, r0
 8016894:	88a0      	ldrh	r0, [r4, #4]
 8016896:	4669      	mov	r1, sp
 8016898:	f009 fca8 	bl	80201ec <hci_le_read_channel_map>
 801689c:	4605      	mov	r5, r0
 801689e:	88a0      	ldrh	r0, [r4, #4]
 80168a0:	2205      	movs	r2, #5
 80168a2:	4669      	mov	r1, sp
 80168a4:	f8a4 0007 	strh.w	r0, [r4, #7]
 80168a8:	f104 0009 	add.w	r0, r4, #9
 80168ac:	f01a fb1b 	bl	8030ee6 <__aeabi_memcpy>
 80168b0:	71a5      	strb	r5, [r4, #6]
 80168b2:	2108      	movs	r1, #8
 80168b4:	e083      	b.n	80169be <??Subroutine12_0>

080168b6 <hci_le_read_remote_features_process>:
 80168b6:	b510      	push	{r4, lr}
 80168b8:	4604      	mov	r4, r0
 80168ba:	88a0      	ldrh	r0, [r4, #4]
 80168bc:	f009 fbe5 	bl	802008a <hci_le_read_remote_features>
 80168c0:	e75c      	b.n	801677c <?Subroutine0>

080168c2 <hci_le_encrypt_process>:
 80168c2:	b538      	push	{r3, r4, r5, lr}
 80168c4:	b084      	sub	sp, #16
 80168c6:	4604      	mov	r4, r0
 80168c8:	466a      	mov	r2, sp
 80168ca:	f104 0114 	add.w	r1, r4, #20
 80168ce:	1d20      	adds	r0, r4, #4
 80168d0:	f009 fd2a 	bl	8020328 <hci_le_encrypt>
 80168d4:	4605      	mov	r5, r0
 80168d6:	2210      	movs	r2, #16
 80168d8:	4669      	mov	r1, sp
 80168da:	1de0      	adds	r0, r4, #7
 80168dc:	f01a fb03 	bl	8030ee6 <__aeabi_memcpy>
 80168e0:	71a5      	strb	r5, [r4, #6]
 80168e2:	2111      	movs	r1, #17
 80168e4:	4620      	mov	r0, r4
 80168e6:	f001 f863 	bl	80179b0 <hci_complete_event>
 80168ea:	b005      	add	sp, #20
 80168ec:	bd30      	pop	{r4, r5, pc}

080168ee <hci_le_rand_process>:
 80168ee:	b51c      	push	{r2, r3, r4, lr}
 80168f0:	4604      	mov	r4, r0
 80168f2:	4668      	mov	r0, sp
 80168f4:	f009 fc2c 	bl	8020150 <hci_le_rand>
 80168f8:	9b00      	ldr	r3, [sp, #0]
 80168fa:	1de2      	adds	r2, r4, #7
 80168fc:	2109      	movs	r1, #9
 80168fe:	6013      	str	r3, [r2, #0]
 8016900:	9b01      	ldr	r3, [sp, #4]
 8016902:	6053      	str	r3, [r2, #4]
 8016904:	71a0      	strb	r0, [r4, #6]
 8016906:	e798      	b.n	801683a <??Subroutine11_0>

08016908 <hci_le_receiver_test_process>:
 8016908:	b510      	push	{r4, lr}
 801690a:	4604      	mov	r4, r0
 801690c:	7920      	ldrb	r0, [r4, #4]
 801690e:	f009 fb9c 	bl	802004a <hci_le_receiver_test>
 8016912:	e743      	b.n	801679c <?Subroutine2>

08016914 <hci_le_transmitter_test_process>:
 8016914:	b510      	push	{r4, lr}
 8016916:	4604      	mov	r4, r0
 8016918:	79a2      	ldrb	r2, [r4, #6]
 801691a:	7961      	ldrb	r1, [r4, #5]
 801691c:	7920      	ldrb	r0, [r4, #4]
 801691e:	f009 fb99 	bl	8020054 <hci_le_transmitter_test>
 8016922:	e73b      	b.n	801679c <?Subroutine2>

08016924 <hci_le_test_end_process>:
 8016924:	b51c      	push	{r2, r3, r4, lr}
 8016926:	4604      	mov	r4, r0
 8016928:	2100      	movs	r1, #0
 801692a:	f8ad 1000 	strh.w	r1, [sp]
 801692e:	4668      	mov	r0, sp
 8016930:	f009 fb95 	bl	802005e <hci_le_test_end>
 8016934:	f8bd 1000 	ldrh.w	r1, [sp]
 8016938:	71a0      	strb	r0, [r4, #6]
 801693a:	4620      	mov	r0, r4
 801693c:	f8a4 1007 	strh.w	r1, [r4, #7]
 8016940:	2103      	movs	r1, #3
 8016942:	e77b      	b.n	801683c <??Subroutine11_1>

08016944 <hci_le_set_data_length_process>:
 8016944:	b510      	push	{r4, lr}
 8016946:	4604      	mov	r4, r0
 8016948:	8922      	ldrh	r2, [r4, #8]
 801694a:	88e1      	ldrh	r1, [r4, #6]
 801694c:	88a0      	ldrh	r0, [r4, #4]
 801694e:	f009 fb8b 	bl	8020068 <hci_le_set_data_length>
 8016952:	88a1      	ldrh	r1, [r4, #4]
 8016954:	71a0      	strb	r0, [r4, #6]
 8016956:	4620      	mov	r0, r4
 8016958:	f8a4 1007 	strh.w	r1, [r4, #7]
 801695c:	2103      	movs	r1, #3
 801695e:	e720      	b.n	80167a2 <??Subroutine2_0>

08016960 <hci_le_read_suggested_default_data_length_process>:
 8016960:	b51c      	push	{r2, r3, r4, lr}
 8016962:	4604      	mov	r4, r0
 8016964:	2200      	movs	r2, #0
 8016966:	9200      	str	r2, [sp, #0]
 8016968:	4669      	mov	r1, sp
 801696a:	f10d 0002 	add.w	r0, sp, #2
 801696e:	f009 fb82 	bl	8020076 <hci_le_read_suggested_default_data_length>
 8016972:	f8bd 1002 	ldrh.w	r1, [sp, #2]
 8016976:	f8a4 1007 	strh.w	r1, [r4, #7]
 801697a:	f8bd 2000 	ldrh.w	r2, [sp]
 801697e:	71a0      	strb	r0, [r4, #6]
 8016980:	2105      	movs	r1, #5
 8016982:	f8a4 2009 	strh.w	r2, [r4, #9]
 8016986:	e758      	b.n	801683a <??Subroutine11_0>

08016988 <hci_le_write_suggested_default_data_length_process>:
 8016988:	b510      	push	{r4, lr}
 801698a:	4604      	mov	r4, r0
 801698c:	88e1      	ldrh	r1, [r4, #6]
 801698e:	88a0      	ldrh	r0, [r4, #4]
 8016990:	f009 fb76 	bl	8020080 <hci_le_write_suggested_default_data_length>
 8016994:	e702      	b.n	801679c <?Subroutine2>

08016996 <hci_le_read_local_p256_public_key_process>:
 8016996:	b510      	push	{r4, lr}
 8016998:	4604      	mov	r4, r0
 801699a:	f00a f827 	bl	80209ec <hci_le_read_local_p256_public_key>
 801699e:	e6ed      	b.n	801677c <?Subroutine0>

080169a0 <hci_le_read_peer_resolvable_address_process>:
 80169a0:	b53e      	push	{r1, r2, r3, r4, r5, lr}
 80169a2:	4604      	mov	r4, r0
 80169a4:	7920      	ldrb	r0, [r4, #4]
 80169a6:	466a      	mov	r2, sp
 80169a8:	1d61      	adds	r1, r4, #5
 80169aa:	f009 fc35 	bl	8020218 <hci_le_read_peer_resolvable_address>

080169ae <?Subroutine6>:
 80169ae:	4605      	mov	r5, r0
 80169b0:	2206      	movs	r2, #6
 80169b2:	4669      	mov	r1, sp
 80169b4:	1de0      	adds	r0, r4, #7
 80169b6:	f01a fa96 	bl	8030ee6 <__aeabi_memcpy>
 80169ba:	71a5      	strb	r5, [r4, #6]
 80169bc:	2107      	movs	r1, #7

080169be <??Subroutine12_0>:
 80169be:	4620      	mov	r0, r4

080169c0 <??Subroutine12_1>:
 80169c0:	f000 fff6 	bl	80179b0 <hci_complete_event>
 80169c4:	b003      	add	sp, #12
 80169c6:	bd30      	pop	{r4, r5, pc}

080169c8 <hci_le_read_local_resolvable_address_process>:
 80169c8:	b53e      	push	{r1, r2, r3, r4, r5, lr}
 80169ca:	4604      	mov	r4, r0
 80169cc:	7920      	ldrb	r0, [r4, #4]
 80169ce:	466a      	mov	r2, sp
 80169d0:	1d61      	adds	r1, r4, #5
 80169d2:	f009 fc1c 	bl	802020e <hci_le_read_local_resolvable_address>
 80169d6:	e7ea      	b.n	80169ae <?Subroutine6>

080169d8 <hci_le_set_resolvable_private_address_timeout_process>:
 80169d8:	b510      	push	{r4, lr}
 80169da:	4604      	mov	r4, r0
 80169dc:	88a0      	ldrh	r0, [r4, #4]
 80169de:	f009 fc20 	bl	8020222 <hci_le_set_resolvable_private_address_timeout>
 80169e2:	e6db      	b.n	801679c <?Subroutine2>

080169e4 <hci_le_read_maximum_data_length_process>:
 80169e4:	b51c      	push	{r2, r3, r4, lr}
 80169e6:	2200      	movs	r2, #0
 80169e8:	9201      	str	r2, [sp, #4]
 80169ea:	4604      	mov	r4, r0
 80169ec:	9200      	str	r2, [sp, #0]
 80169ee:	466b      	mov	r3, sp
 80169f0:	f10d 0202 	add.w	r2, sp, #2
 80169f4:	a901      	add	r1, sp, #4
 80169f6:	f10d 0006 	add.w	r0, sp, #6
 80169fa:	f009 fb7f 	bl	80200fc <hci_le_read_maximum_data_length>
 80169fe:	f8bd 1006 	ldrh.w	r1, [sp, #6]
 8016a02:	f8a4 1007 	strh.w	r1, [r4, #7]
 8016a06:	f8bd 2004 	ldrh.w	r2, [sp, #4]
 8016a0a:	f8a4 2009 	strh.w	r2, [r4, #9]
 8016a0e:	f8bd 1002 	ldrh.w	r1, [sp, #2]
 8016a12:	f8a4 100b 	strh.w	r1, [r4, #11]
 8016a16:	f8bd 2000 	ldrh.w	r2, [sp]
 8016a1a:	71a0      	strb	r0, [r4, #6]
 8016a1c:	2109      	movs	r1, #9
 8016a1e:	f8a4 200d 	strh.w	r2, [r4, #13]
 8016a22:	e70a      	b.n	801683a <??Subroutine11_0>

08016a24 <hci_le_read_phy_process>:
 8016a24:	b51c      	push	{r2, r3, r4, lr}
 8016a26:	4604      	mov	r4, r0
 8016a28:	2100      	movs	r1, #0
 8016a2a:	f8ad 1000 	strh.w	r1, [sp]
 8016a2e:	88a0      	ldrh	r0, [r4, #4]
 8016a30:	466a      	mov	r2, sp
 8016a32:	f10d 0101 	add.w	r1, sp, #1
 8016a36:	f009 fc28 	bl	802028a <hci_le_read_phy>
 8016a3a:	88a1      	ldrh	r1, [r4, #4]
 8016a3c:	f8a4 1007 	strh.w	r1, [r4, #7]
 8016a40:	f89d 2001 	ldrb.w	r2, [sp, #1]
 8016a44:	7262      	strb	r2, [r4, #9]
 8016a46:	f89d 1000 	ldrb.w	r1, [sp]
 8016a4a:	71a0      	strb	r0, [r4, #6]
 8016a4c:	4620      	mov	r0, r4
 8016a4e:	72a1      	strb	r1, [r4, #10]
 8016a50:	2105      	movs	r1, #5
 8016a52:	e6f3      	b.n	801683c <??Subroutine11_1>

08016a54 <hci_le_set_default_phy_process>:
 8016a54:	b510      	push	{r4, lr}
 8016a56:	4604      	mov	r4, r0
 8016a58:	79a2      	ldrb	r2, [r4, #6]
 8016a5a:	7961      	ldrb	r1, [r4, #5]
 8016a5c:	7920      	ldrb	r0, [r4, #4]
 8016a5e:	f009 fc1b 	bl	8020298 <hci_le_set_default_phy>
 8016a62:	e69b      	b.n	801679c <?Subroutine2>

08016a64 <hci_le_set_phy_process>:
 8016a64:	b51c      	push	{r2, r3, r4, lr}
 8016a66:	4604      	mov	r4, r0
 8016a68:	f8b4 0009 	ldrh.w	r0, [r4, #9]
 8016a6c:	9000      	str	r0, [sp, #0]
 8016a6e:	7a23      	ldrb	r3, [r4, #8]
 8016a70:	79e2      	ldrb	r2, [r4, #7]
 8016a72:	79a1      	ldrb	r1, [r4, #6]
 8016a74:	88a0      	ldrh	r0, [r4, #4]
 8016a76:	f009 fc14 	bl	80202a2 <hci_le_set_phy>
 8016a7a:	e274      	b.n	8016f66 <?Subroutine1>

08016a7c <hci_le_receiver_test_v2_process>:
 8016a7c:	b510      	push	{r4, lr}
 8016a7e:	4604      	mov	r4, r0
 8016a80:	79a2      	ldrb	r2, [r4, #6]
 8016a82:	7961      	ldrb	r1, [r4, #5]
 8016a84:	7920      	ldrb	r0, [r4, #4]
 8016a86:	f009 fc20 	bl	80202ca <hci_le_receiver_test_v2>
 8016a8a:	e007      	b.n	8016a9c <?Subroutine9>

08016a8c <hci_le_transmitter_test_v2_process>:
 8016a8c:	b510      	push	{r4, lr}
 8016a8e:	4604      	mov	r4, r0
 8016a90:	79e3      	ldrb	r3, [r4, #7]
 8016a92:	79a2      	ldrb	r2, [r4, #6]
 8016a94:	7961      	ldrb	r1, [r4, #5]
 8016a96:	7920      	ldrb	r0, [r4, #4]
 8016a98:	f009 fc1c 	bl	80202d4 <hci_le_transmitter_test_v2>

08016a9c <?Subroutine9>:
 8016a9c:	71a0      	strb	r0, [r4, #6]
 8016a9e:	7860      	ldrb	r0, [r4, #1]
 8016aa0:	78a1      	ldrb	r1, [r4, #2]
 8016aa2:	220e      	movs	r2, #14
 8016aa4:	7120      	strb	r0, [r4, #4]
 8016aa6:	7161      	strb	r1, [r4, #5]
 8016aa8:	2004      	movs	r0, #4
 8016aaa:	7020      	strb	r0, [r4, #0]
 8016aac:	70a0      	strb	r0, [r4, #2]
 8016aae:	2001      	movs	r0, #1
 8016ab0:	70e0      	strb	r0, [r4, #3]
 8016ab2:	7062      	strb	r2, [r4, #1]
 8016ab4:	2007      	movs	r0, #7
 8016ab6:	bd10      	pop	{r4, pc}

08016ab8 <hci_le_set_privacy_mode_process>:
 8016ab8:	b510      	push	{r4, lr}
 8016aba:	4604      	mov	r4, r0
 8016abc:	7ae2      	ldrb	r2, [r4, #11]
 8016abe:	7920      	ldrb	r0, [r4, #4]
 8016ac0:	1d61      	adds	r1, r4, #5
 8016ac2:	f009 fb9a 	bl	80201fa <hci_le_set_privacy_mode>
 8016ac6:	e7e9      	b.n	8016a9c <?Subroutine9>

08016ac8 <aci_hal_get_fw_build_number_process>:
 8016ac8:	b51c      	push	{r2, r3, r4, lr}
 8016aca:	4604      	mov	r4, r0
 8016acc:	2100      	movs	r1, #0
 8016ace:	f8ad 1000 	strh.w	r1, [sp]
 8016ad2:	4668      	mov	r0, sp
 8016ad4:	f001 feeb 	bl	80188ae <aci_hal_get_fw_build_number>
 8016ad8:	f8bd 1000 	ldrh.w	r1, [sp]
 8016adc:	71a0      	strb	r0, [r4, #6]
 8016ade:	7860      	ldrb	r0, [r4, #1]
 8016ae0:	f8a4 1007 	strh.w	r1, [r4, #7]
 8016ae4:	78a1      	ldrb	r1, [r4, #2]
 8016ae6:	7120      	strb	r0, [r4, #4]
 8016ae8:	2004      	movs	r0, #4
 8016aea:	7161      	strb	r1, [r4, #5]
 8016aec:	e1b9      	b.n	8016e62 <?Subroutine5>

08016aee <aci_hal_write_config_data_process>:
 8016aee:	b510      	push	{r4, lr}
 8016af0:	4604      	mov	r4, r0
 8016af2:	7961      	ldrb	r1, [r4, #5]
 8016af4:	7920      	ldrb	r0, [r4, #4]
 8016af6:	1da2      	adds	r2, r4, #6
 8016af8:	f009 fc3a 	bl	8020370 <aci_hal_write_config_data>
 8016afc:	e7ce      	b.n	8016a9c <?Subroutine9>

08016afe <aci_hal_read_config_data_process>:
 8016afe:	b538      	push	{r3, r4, r5, lr}
 8016b00:	4604      	mov	r4, r0
 8016b02:	b0c0      	sub	sp, #256	; 0x100
 8016b04:	2000      	movs	r0, #0
 8016b06:	f88d 0000 	strb.w	r0, [sp]
 8016b0a:	7920      	ldrb	r0, [r4, #4]
 8016b0c:	aa01      	add	r2, sp, #4
 8016b0e:	4669      	mov	r1, sp
 8016b10:	f009 fc3e 	bl	8020390 <aci_hal_read_config_data>
 8016b14:	4605      	mov	r5, r0
 8016b16:	f89d 0000 	ldrb.w	r0, [sp]
 8016b1a:	71e0      	strb	r0, [r4, #7]
 8016b1c:	a901      	add	r1, sp, #4
 8016b1e:	4602      	mov	r2, r0
 8016b20:	f104 0008 	add.w	r0, r4, #8
 8016b24:	f01a f9df 	bl	8030ee6 <__aeabi_memcpy>
 8016b28:	79e1      	ldrb	r1, [r4, #7]
 8016b2a:	71a5      	strb	r5, [r4, #6]
 8016b2c:	4620      	mov	r0, r4
 8016b2e:	1c89      	adds	r1, r1, #2
 8016b30:	f000 bea3 	b.w	801787a <?Subroutine7>

08016b34 <aci_hal_set_tx_power_level_process>:
 8016b34:	b510      	push	{r4, lr}
 8016b36:	4604      	mov	r4, r0
 8016b38:	7961      	ldrb	r1, [r4, #5]
 8016b3a:	7920      	ldrb	r0, [r4, #4]
 8016b3c:	f009 fc2a 	bl	8020394 <aci_hal_set_tx_power_level>
 8016b40:	e7ac      	b.n	8016a9c <?Subroutine9>

08016b42 <aci_hal_le_tx_test_packet_number_process>:
 8016b42:	b51c      	push	{r2, r3, r4, lr}
 8016b44:	4604      	mov	r4, r0
 8016b46:	2100      	movs	r1, #0
 8016b48:	9100      	str	r1, [sp, #0]
 8016b4a:	4668      	mov	r0, sp
 8016b4c:	f009 fc30 	bl	80203b0 <aci_hal_le_tx_test_packet_number>
 8016b50:	9900      	ldr	r1, [sp, #0]
 8016b52:	220e      	movs	r2, #14
 8016b54:	f8c4 1007 	str.w	r1, [r4, #7]
 8016b58:	71a0      	strb	r0, [r4, #6]
 8016b5a:	7860      	ldrb	r0, [r4, #1]
 8016b5c:	78a1      	ldrb	r1, [r4, #2]
 8016b5e:	7120      	strb	r0, [r4, #4]
 8016b60:	2004      	movs	r0, #4
 8016b62:	7161      	strb	r1, [r4, #5]
 8016b64:	7020      	strb	r0, [r4, #0]
 8016b66:	2001      	movs	r0, #1
 8016b68:	2108      	movs	r1, #8
 8016b6a:	70e0      	strb	r0, [r4, #3]
 8016b6c:	7062      	strb	r2, [r4, #1]
 8016b6e:	70a1      	strb	r1, [r4, #2]
 8016b70:	200b      	movs	r0, #11
 8016b72:	bd16      	pop	{r1, r2, r4, pc}

08016b74 <aci_hal_tone_start_process>:
 8016b74:	b510      	push	{r4, lr}
 8016b76:	4604      	mov	r4, r0
 8016b78:	7961      	ldrb	r1, [r4, #5]
 8016b7a:	7920      	ldrb	r0, [r4, #4]
 8016b7c:	f009 fc2f 	bl	80203de <aci_hal_tone_start>
 8016b80:	e78c      	b.n	8016a9c <?Subroutine9>

08016b82 <aci_hal_tone_stop_process>:
 8016b82:	b510      	push	{r4, lr}
 8016b84:	4604      	mov	r4, r0
 8016b86:	f009 fc33 	bl	80203f0 <aci_hal_tone_stop>
 8016b8a:	e787      	b.n	8016a9c <?Subroutine9>

08016b8c <aci_hal_set_radio_activity_mask_process>:
 8016b8c:	b510      	push	{r4, lr}
 8016b8e:	4604      	mov	r4, r0
 8016b90:	88a0      	ldrh	r0, [r4, #4]
 8016b92:	f009 fc62 	bl	802045a <aci_hal_set_radio_activity_mask>
 8016b96:	e781      	b.n	8016a9c <?Subroutine9>

08016b98 <aci_hal_get_anchor_period_process>:
 8016b98:	b51c      	push	{r2, r3, r4, lr}
 8016b9a:	2100      	movs	r1, #0
 8016b9c:	4604      	mov	r4, r0
 8016b9e:	9101      	str	r1, [sp, #4]
 8016ba0:	9100      	str	r1, [sp, #0]
 8016ba2:	4669      	mov	r1, sp
 8016ba4:	a801      	add	r0, sp, #4
 8016ba6:	f009 fc5d 	bl	8020464 <aci_hal_get_anchor_period>
 8016baa:	9901      	ldr	r1, [sp, #4]
 8016bac:	220e      	movs	r2, #14
 8016bae:	f8c4 1007 	str.w	r1, [r4, #7]
 8016bb2:	9900      	ldr	r1, [sp, #0]
 8016bb4:	f8c4 100b 	str.w	r1, [r4, #11]
 8016bb8:	71a0      	strb	r0, [r4, #6]
 8016bba:	7860      	ldrb	r0, [r4, #1]
 8016bbc:	78a1      	ldrb	r1, [r4, #2]
 8016bbe:	7120      	strb	r0, [r4, #4]
 8016bc0:	2004      	movs	r0, #4
 8016bc2:	7161      	strb	r1, [r4, #5]
 8016bc4:	7020      	strb	r0, [r4, #0]
 8016bc6:	2001      	movs	r0, #1
 8016bc8:	210c      	movs	r1, #12
 8016bca:	70e0      	strb	r0, [r4, #3]
 8016bcc:	7062      	strb	r2, [r4, #1]
 8016bce:	70a1      	strb	r1, [r4, #2]
 8016bd0:	200f      	movs	r0, #15
 8016bd2:	bd16      	pop	{r1, r2, r4, pc}

08016bd4 <aci_hal_get_link_status_v2_process>:
 8016bd4:	b538      	push	{r3, r4, r5, lr}
 8016bd6:	b088      	sub	sp, #32
 8016bd8:	4604      	mov	r4, r0
 8016bda:	a903      	add	r1, sp, #12
 8016bdc:	4668      	mov	r0, sp
 8016bde:	f009 fc0c 	bl	80203fa <aci_hal_get_link_status_v2>
 8016be2:	4605      	mov	r5, r0
 8016be4:	220a      	movs	r2, #10
 8016be6:	4669      	mov	r1, sp
 8016be8:	1de0      	adds	r0, r4, #7
 8016bea:	f01a f97c 	bl	8030ee6 <__aeabi_memcpy>
 8016bee:	2214      	movs	r2, #20
 8016bf0:	a903      	add	r1, sp, #12
 8016bf2:	f104 0011 	add.w	r0, r4, #17
 8016bf6:	f01a f976 	bl	8030ee6 <__aeabi_memcpy>
 8016bfa:	7860      	ldrb	r0, [r4, #1]
 8016bfc:	78a1      	ldrb	r1, [r4, #2]
 8016bfe:	71a5      	strb	r5, [r4, #6]
 8016c00:	7120      	strb	r0, [r4, #4]
 8016c02:	7161      	strb	r1, [r4, #5]
 8016c04:	2004      	movs	r0, #4
 8016c06:	7020      	strb	r0, [r4, #0]
 8016c08:	220e      	movs	r2, #14
 8016c0a:	2122      	movs	r1, #34	; 0x22
 8016c0c:	2001      	movs	r0, #1
 8016c0e:	7062      	strb	r2, [r4, #1]
 8016c10:	70a1      	strb	r1, [r4, #2]
 8016c12:	70e0      	strb	r0, [r4, #3]
 8016c14:	2025      	movs	r0, #37	; 0x25
 8016c16:	b009      	add	sp, #36	; 0x24
 8016c18:	bd30      	pop	{r4, r5, pc}

08016c1a <aci_hal_set_slave_latency_process>:
 8016c1a:	b510      	push	{r4, lr}
 8016c1c:	4604      	mov	r4, r0
 8016c1e:	7920      	ldrb	r0, [r4, #4]
 8016c20:	f009 fc2e 	bl	8020480 <aci_hal_set_slave_latency>
 8016c24:	e73a      	b.n	8016a9c <?Subroutine9>

08016c26 <aci_hal_read_rssi_process>:
 8016c26:	b51c      	push	{r2, r3, r4, lr}
 8016c28:	4604      	mov	r4, r0
 8016c2a:	2100      	movs	r1, #0
 8016c2c:	f88d 1000 	strb.w	r1, [sp]
 8016c30:	4668      	mov	r0, sp
 8016c32:	f009 fc27 	bl	8020484 <aci_hal_read_rssi>
 8016c36:	f89d 1000 	ldrb.w	r1, [sp]
 8016c3a:	71a0      	strb	r0, [r4, #6]
 8016c3c:	7860      	ldrb	r0, [r4, #1]
 8016c3e:	71e1      	strb	r1, [r4, #7]
 8016c40:	78a1      	ldrb	r1, [r4, #2]
 8016c42:	7120      	strb	r0, [r4, #4]
 8016c44:	2004      	movs	r0, #4
 8016c46:	7161      	strb	r1, [r4, #5]
 8016c48:	7020      	strb	r0, [r4, #0]
 8016c4a:	2001      	movs	r0, #1
 8016c4c:	220e      	movs	r2, #14
 8016c4e:	2105      	movs	r1, #5
 8016c50:	70e0      	strb	r0, [r4, #3]
 8016c52:	7062      	strb	r2, [r4, #1]
 8016c54:	70a1      	strb	r1, [r4, #2]
 8016c56:	2008      	movs	r0, #8
 8016c58:	bd16      	pop	{r1, r2, r4, pc}

08016c5a <aci_gap_set_non_discoverable_process>:
 8016c5a:	b510      	push	{r4, lr}
 8016c5c:	4604      	mov	r4, r0
 8016c5e:	f002 f8a2 	bl	8018da6 <aci_gap_set_non_discoverable>
 8016c62:	e71b      	b.n	8016a9c <?Subroutine9>

08016c64 <aci_gap_set_limited_discoverable_process>:
 8016c64:	b578      	push	{r3, r4, r5, r6, lr}
 8016c66:	b087      	sub	sp, #28
 8016c68:	4604      	mov	r4, r0
 8016c6a:	7ae1      	ldrb	r1, [r4, #11]
 8016c6c:	f104 020c 	add.w	r2, r4, #12
 8016c70:	440a      	add	r2, r1
 8016c72:	f812 3b01 	ldrb.w	r3, [r2], #1
 8016c76:	185d      	adds	r5, r3, r1
 8016c78:	1960      	adds	r0, r4, r5
 8016c7a:	300d      	adds	r0, #13
 8016c7c:	8846      	ldrh	r6, [r0, #2]
 8016c7e:	9606      	str	r6, [sp, #24]
 8016c80:	8800      	ldrh	r0, [r0, #0]
 8016c82:	9303      	str	r3, [sp, #12]
 8016c84:	f104 030c 	add.w	r3, r4, #12
 8016c88:	9005      	str	r0, [sp, #20]
 8016c8a:	9204      	str	r2, [sp, #16]
 8016c8c:	9302      	str	r3, [sp, #8]
 8016c8e:	9101      	str	r1, [sp, #4]
 8016c90:	7aa0      	ldrb	r0, [r4, #10]
 8016c92:	9000      	str	r0, [sp, #0]
 8016c94:	7a63      	ldrb	r3, [r4, #9]
 8016c96:	f8b4 2007 	ldrh.w	r2, [r4, #7]
 8016c9a:	f8b4 1005 	ldrh.w	r1, [r4, #5]
 8016c9e:	7920      	ldrb	r0, [r4, #4]
 8016ca0:	f001 ff6b 	bl	8018b7a <aci_gap_set_limited_discoverable>
 8016ca4:	4601      	mov	r1, r0
 8016ca6:	4620      	mov	r0, r4
 8016ca8:	b008      	add	sp, #32
 8016caa:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8016cae:	f000 be6f 	b.w	8017990 <hci_status_event>

08016cb2 <aci_gap_set_discoverable_process>:
 8016cb2:	b578      	push	{r3, r4, r5, r6, lr}
 8016cb4:	b087      	sub	sp, #28
 8016cb6:	4604      	mov	r4, r0
 8016cb8:	7ae1      	ldrb	r1, [r4, #11]
 8016cba:	f104 020c 	add.w	r2, r4, #12
 8016cbe:	440a      	add	r2, r1
 8016cc0:	f812 3b01 	ldrb.w	r3, [r2], #1
 8016cc4:	185d      	adds	r5, r3, r1
 8016cc6:	1960      	adds	r0, r4, r5
 8016cc8:	300d      	adds	r0, #13
 8016cca:	8846      	ldrh	r6, [r0, #2]
 8016ccc:	9606      	str	r6, [sp, #24]
 8016cce:	8800      	ldrh	r0, [r0, #0]
 8016cd0:	9303      	str	r3, [sp, #12]
 8016cd2:	f104 030c 	add.w	r3, r4, #12
 8016cd6:	9005      	str	r0, [sp, #20]
 8016cd8:	9204      	str	r2, [sp, #16]
 8016cda:	9302      	str	r3, [sp, #8]
 8016cdc:	9101      	str	r1, [sp, #4]
 8016cde:	7aa0      	ldrb	r0, [r4, #10]
 8016ce0:	9000      	str	r0, [sp, #0]
 8016ce2:	7a63      	ldrb	r3, [r4, #9]
 8016ce4:	f8b4 2007 	ldrh.w	r2, [r4, #7]
 8016ce8:	f8b4 1005 	ldrh.w	r1, [r4, #5]
 8016cec:	7920      	ldrb	r0, [r4, #4]
 8016cee:	f001 ff78 	bl	8018be2 <aci_gap_set_discoverable>
 8016cf2:	71a0      	strb	r0, [r4, #6]
 8016cf4:	7860      	ldrb	r0, [r4, #1]
 8016cf6:	78a1      	ldrb	r1, [r4, #2]
 8016cf8:	220e      	movs	r2, #14
 8016cfa:	7120      	strb	r0, [r4, #4]
 8016cfc:	7161      	strb	r1, [r4, #5]
 8016cfe:	2004      	movs	r0, #4
 8016d00:	7020      	strb	r0, [r4, #0]
 8016d02:	70a0      	strb	r0, [r4, #2]
 8016d04:	2001      	movs	r0, #1
 8016d06:	7062      	strb	r2, [r4, #1]
 8016d08:	70e0      	strb	r0, [r4, #3]
 8016d0a:	2007      	movs	r0, #7
 8016d0c:	b008      	add	sp, #32
 8016d0e:	bd70      	pop	{r4, r5, r6, pc}

08016d10 <aci_gap_set_direct_connectable_process>:
 8016d10:	b51c      	push	{r2, r3, r4, lr}
 8016d12:	4604      	mov	r4, r0
 8016d14:	f8b4 000f 	ldrh.w	r0, [r4, #15]
 8016d18:	1de3      	adds	r3, r4, #7
 8016d1a:	9001      	str	r0, [sp, #4]
 8016d1c:	f8b4 100d 	ldrh.w	r1, [r4, #13]
 8016d20:	9100      	str	r1, [sp, #0]
 8016d22:	79a2      	ldrb	r2, [r4, #6]
 8016d24:	7961      	ldrb	r1, [r4, #5]
 8016d26:	7920      	ldrb	r0, [r4, #4]
 8016d28:	f001 fecd 	bl	8018ac6 <aci_gap_set_direct_connectable>
 8016d2c:	e27a      	b.n	8017224 <?Subroutine3>

08016d2e <aci_gap_set_io_capability_process>:
 8016d2e:	b510      	push	{r4, lr}
 8016d30:	4604      	mov	r4, r0
 8016d32:	7920      	ldrb	r0, [r4, #4]
 8016d34:	f00b f9dd 	bl	80220f2 <aci_gap_set_io_capability>
 8016d38:	e6b0      	b.n	8016a9c <?Subroutine9>

08016d3a <aci_gap_set_authentication_requirement_process>:
 8016d3a:	b518      	push	{r3, r4, lr}
 8016d3c:	b085      	sub	sp, #20
 8016d3e:	4604      	mov	r4, r0
 8016d40:	f8d4 000b 	ldr.w	r0, [r4, #11]
 8016d44:	7be1      	ldrb	r1, [r4, #15]
 8016d46:	9104      	str	r1, [sp, #16]
 8016d48:	9003      	str	r0, [sp, #12]
 8016d4a:	7aa0      	ldrb	r0, [r4, #10]
 8016d4c:	9002      	str	r0, [sp, #8]
 8016d4e:	7a61      	ldrb	r1, [r4, #9]
 8016d50:	9101      	str	r1, [sp, #4]
 8016d52:	7a20      	ldrb	r0, [r4, #8]
 8016d54:	9000      	str	r0, [sp, #0]
 8016d56:	79e3      	ldrb	r3, [r4, #7]
 8016d58:	79a2      	ldrb	r2, [r4, #6]
 8016d5a:	7961      	ldrb	r1, [r4, #5]
 8016d5c:	7920      	ldrb	r0, [r4, #4]
 8016d5e:	f00b f9e3 	bl	8022128 <aci_gap_set_authentication_requirement>
 8016d62:	f000 bde7 	b.w	8017934 <?Subroutine8>

08016d66 <aci_gap_set_authorization_requirement_process>:
 8016d66:	b510      	push	{r4, lr}
 8016d68:	4604      	mov	r4, r0
 8016d6a:	79a1      	ldrb	r1, [r4, #6]
 8016d6c:	88a0      	ldrh	r0, [r4, #4]
 8016d6e:	f00b fa1b 	bl	80221a8 <aci_gap_set_authorization_requirement>
 8016d72:	e693      	b.n	8016a9c <?Subroutine9>

08016d74 <aci_gap_pass_key_resp_process>:
 8016d74:	b510      	push	{r4, lr}
 8016d76:	4604      	mov	r4, r0
 8016d78:	f8d4 1006 	ldr.w	r1, [r4, #6]
 8016d7c:	88a0      	ldrh	r0, [r4, #4]
 8016d7e:	f00b fa98 	bl	80222b2 <aci_gap_pass_key_resp>
 8016d82:	e68b      	b.n	8016a9c <?Subroutine9>

08016d84 <aci_gap_authorization_resp_process>:
 8016d84:	b510      	push	{r4, lr}
 8016d86:	4604      	mov	r4, r0
 8016d88:	79a1      	ldrb	r1, [r4, #6]
 8016d8a:	88a0      	ldrh	r0, [r4, #4]
 8016d8c:	f00b fa5c 	bl	8022248 <aci_gap_authorization_resp>
 8016d90:	e684      	b.n	8016a9c <?Subroutine9>

08016d92 <aci_gap_init_process>:
 8016d92:	b510      	push	{r4, lr}
 8016d94:	b084      	sub	sp, #16
 8016d96:	2100      	movs	r1, #0
 8016d98:	4604      	mov	r4, r0
 8016d9a:	f8ad 100c 	strh.w	r1, [sp, #12]
 8016d9e:	9102      	str	r1, [sp, #8]
 8016da0:	aa02      	add	r2, sp, #8
 8016da2:	f10d 000a 	add.w	r0, sp, #10
 8016da6:	9201      	str	r2, [sp, #4]
 8016da8:	9000      	str	r0, [sp, #0]
 8016daa:	79a2      	ldrb	r2, [r4, #6]
 8016dac:	7961      	ldrb	r1, [r4, #5]
 8016dae:	7920      	ldrb	r0, [r4, #4]
 8016db0:	ab03      	add	r3, sp, #12
 8016db2:	f001 fe00 	bl	80189b6 <aci_gap_init>
 8016db6:	f8bd 100c 	ldrh.w	r1, [sp, #12]
 8016dba:	f8a4 1007 	strh.w	r1, [r4, #7]
 8016dbe:	f8bd 200a 	ldrh.w	r2, [sp, #10]
 8016dc2:	f8a4 2009 	strh.w	r2, [r4, #9]
 8016dc6:	f8bd 1008 	ldrh.w	r1, [sp, #8]
 8016dca:	71a0      	strb	r0, [r4, #6]
 8016dcc:	7860      	ldrb	r0, [r4, #1]
 8016dce:	f8a4 100b 	strh.w	r1, [r4, #11]
 8016dd2:	78a1      	ldrb	r1, [r4, #2]
 8016dd4:	7120      	strb	r0, [r4, #4]
 8016dd6:	2004      	movs	r0, #4
 8016dd8:	7161      	strb	r1, [r4, #5]
 8016dda:	7020      	strb	r0, [r4, #0]
 8016ddc:	220e      	movs	r2, #14
 8016dde:	210a      	movs	r1, #10
 8016de0:	2001      	movs	r0, #1
 8016de2:	7062      	strb	r2, [r4, #1]
 8016de4:	70a1      	strb	r1, [r4, #2]
 8016de6:	70e0      	strb	r0, [r4, #3]
 8016de8:	200d      	movs	r0, #13
 8016dea:	b004      	add	sp, #16
 8016dec:	bd10      	pop	{r4, pc}

08016dee <aci_gap_set_non_connectable_process>:
 8016dee:	b510      	push	{r4, lr}
 8016df0:	4604      	mov	r4, r0
 8016df2:	7961      	ldrb	r1, [r4, #5]
 8016df4:	7920      	ldrb	r0, [r4, #4]
 8016df6:	f001 fea5 	bl	8018b44 <aci_gap_set_non_connectable>
 8016dfa:	e64f      	b.n	8016a9c <?Subroutine9>

08016dfc <aci_gap_set_undirected_connectable_process>:
 8016dfc:	b510      	push	{r4, lr}
 8016dfe:	4604      	mov	r4, r0
 8016e00:	7a63      	ldrb	r3, [r4, #9]
 8016e02:	7a22      	ldrb	r2, [r4, #8]
 8016e04:	88e1      	ldrh	r1, [r4, #6]
 8016e06:	88a0      	ldrh	r0, [r4, #4]
 8016e08:	f001 fe80 	bl	8018b0c <aci_gap_set_undirected_connectable>
 8016e0c:	e646      	b.n	8016a9c <?Subroutine9>

08016e0e <aci_gap_slave_security_req_process>:
 8016e0e:	b510      	push	{r4, lr}
 8016e10:	4604      	mov	r4, r0
 8016e12:	88a0      	ldrh	r0, [r4, #4]
 8016e14:	f00b fdca 	bl	80229ac <aci_gap_slave_security_req>
 8016e18:	e4b0      	b.n	801677c <?Subroutine0>

08016e1a <aci_gap_update_adv_data_process>:
 8016e1a:	b510      	push	{r4, lr}
 8016e1c:	4604      	mov	r4, r0
 8016e1e:	7920      	ldrb	r0, [r4, #4]
 8016e20:	1d61      	adds	r1, r4, #5
 8016e22:	f001 ff26 	bl	8018c72 <aci_gap_update_adv_data>
 8016e26:	e639      	b.n	8016a9c <?Subroutine9>

08016e28 <aci_gap_delete_ad_type_process>:
 8016e28:	b510      	push	{r4, lr}
 8016e2a:	4604      	mov	r4, r0
 8016e2c:	7920      	ldrb	r0, [r4, #4]
 8016e2e:	f001 ff89 	bl	8018d44 <aci_gap_delete_ad_type>
 8016e32:	e633      	b.n	8016a9c <?Subroutine9>

08016e34 <aci_gap_get_security_level_process>:
 8016e34:	b51c      	push	{r2, r3, r4, lr}
 8016e36:	4604      	mov	r4, r0
 8016e38:	2100      	movs	r1, #0
 8016e3a:	f8ad 1000 	strh.w	r1, [sp]
 8016e3e:	88a0      	ldrh	r0, [r4, #4]
 8016e40:	466a      	mov	r2, sp
 8016e42:	f10d 0101 	add.w	r1, sp, #1
 8016e46:	f00b f8e2 	bl	802200e <aci_gap_get_security_level>
 8016e4a:	f89d 1001 	ldrb.w	r1, [sp, #1]
 8016e4e:	71e1      	strb	r1, [r4, #7]
 8016e50:	f89d 2000 	ldrb.w	r2, [sp]
 8016e54:	71a0      	strb	r0, [r4, #6]
 8016e56:	7860      	ldrb	r0, [r4, #1]
 8016e58:	78a1      	ldrb	r1, [r4, #2]
 8016e5a:	7222      	strb	r2, [r4, #8]
 8016e5c:	7120      	strb	r0, [r4, #4]
 8016e5e:	7161      	strb	r1, [r4, #5]
 8016e60:	2004      	movs	r0, #4

08016e62 <?Subroutine5>:
 8016e62:	7020      	strb	r0, [r4, #0]
 8016e64:	2001      	movs	r0, #1
 8016e66:	220e      	movs	r2, #14
 8016e68:	2106      	movs	r1, #6
 8016e6a:	70e0      	strb	r0, [r4, #3]
 8016e6c:	7062      	strb	r2, [r4, #1]
 8016e6e:	70a1      	strb	r1, [r4, #2]
 8016e70:	2009      	movs	r0, #9
 8016e72:	bd16      	pop	{r1, r2, r4, pc}

08016e74 <aci_gap_set_event_mask_process>:
 8016e74:	b510      	push	{r4, lr}
 8016e76:	4604      	mov	r4, r0
 8016e78:	88a0      	ldrh	r0, [r4, #4]
 8016e7a:	f008 fb9d 	bl	801f5b8 <aci_gap_set_event_mask>
 8016e7e:	e60d      	b.n	8016a9c <?Subroutine9>

08016e80 <aci_gap_configure_whitelist_process>:
 8016e80:	b510      	push	{r4, lr}
 8016e82:	4604      	mov	r4, r0
 8016e84:	f002 f956 	bl	8019134 <aci_gap_configure_whitelist>
 8016e88:	e608      	b.n	8016a9c <?Subroutine9>

08016e8a <aci_gap_clear_security_db_process>:
 8016e8a:	b510      	push	{r4, lr}
 8016e8c:	4604      	mov	r4, r0
 8016e8e:	f00a f94f 	bl	8021130 <aci_gap_clear_security_db>
 8016e92:	e603      	b.n	8016a9c <?Subroutine9>

08016e94 <aci_gap_allow_rebond_process>:
 8016e94:	b510      	push	{r4, lr}
 8016e96:	4604      	mov	r4, r0
 8016e98:	88a0      	ldrh	r0, [r4, #4]
 8016e9a:	f00b f9a5 	bl	80221e8 <aci_gap_allow_rebond>
 8016e9e:	e5fd      	b.n	8016a9c <?Subroutine9>

08016ea0 <aci_gap_start_limited_discovery_proc_process>:
 8016ea0:	b510      	push	{r4, lr}
 8016ea2:	4604      	mov	r4, r0
 8016ea4:	7a63      	ldrb	r3, [r4, #9]
 8016ea6:	7a22      	ldrb	r2, [r4, #8]
 8016ea8:	88e1      	ldrh	r1, [r4, #6]
 8016eaa:	88a0      	ldrh	r0, [r4, #4]
 8016eac:	f002 fa49 	bl	8019342 <aci_gap_start_limited_discovery_proc>
 8016eb0:	e464      	b.n	801677c <?Subroutine0>

08016eb2 <aci_gap_start_general_discovery_proc_process>:
 8016eb2:	b510      	push	{r4, lr}
 8016eb4:	4604      	mov	r4, r0
 8016eb6:	7a63      	ldrb	r3, [r4, #9]
 8016eb8:	7a22      	ldrb	r2, [r4, #8]
 8016eba:	88e1      	ldrh	r1, [r4, #6]
 8016ebc:	88a0      	ldrh	r0, [r4, #4]
 8016ebe:	f002 fa43 	bl	8019348 <aci_gap_start_general_discovery_proc>
 8016ec2:	e45b      	b.n	801677c <?Subroutine0>

08016ec4 <aci_gap_start_auto_connection_establish_proc_process>:
 8016ec4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8016ec6:	b0c6      	sub	sp, #280	; 0x118
 8016ec8:	4604      	mov	r4, r0
 8016eca:	78e0      	ldrb	r0, [r4, #3]
 8016ecc:	2811      	cmp	r0, #17
 8016ece:	dd09      	ble.n	8016ee4 <??aci_gap_start_auto_connection_establish_proc__0>
 8016ed0:	3812      	subs	r0, #18
 8016ed2:	f8df 2b64 	ldr.w	r2, [pc, #2916]	; 8017a38 <??DataTable5>
 8016ed6:	2100      	movs	r1, #0
 8016ed8:	fbe0 2102 	umlal	r2, r1, r0, r2
 8016edc:	7d63      	ldrb	r3, [r4, #21]
 8016ede:	0888      	lsrs	r0, r1, #2
 8016ee0:	4298      	cmp	r0, r3
 8016ee2:	d201      	bcs.n	8016ee8 <??aci_gap_start_auto_connection_establish_proc__1>

08016ee4 <??aci_gap_start_auto_connection_establish_proc__0>:
 8016ee4:	2112      	movs	r1, #18
 8016ee6:	e02b      	b.n	8016f40 <??aci_gap_start_auto_connection_establish_proc__2>

08016ee8 <??aci_gap_start_auto_connection_establish_proc__1>:
 8016ee8:	2500      	movs	r5, #0
 8016eea:	ae07      	add	r6, sp, #28
 8016eec:	f104 0716 	add.w	r7, r4, #22
 8016ef0:	e009      	b.n	8016f06 <??aci_gap_start_auto_connection_establish_proc__3>

08016ef2 <??aci_gap_start_auto_connection_establish_proc__4>:
 8016ef2:	783b      	ldrb	r3, [r7, #0]
 8016ef4:	2206      	movs	r2, #6
 8016ef6:	1c79      	adds	r1, r7, #1
 8016ef8:	7033      	strb	r3, [r6, #0]
 8016efa:	1c70      	adds	r0, r6, #1
 8016efc:	f019 fff3 	bl	8030ee6 <__aeabi_memcpy>
 8016f00:	1c6d      	adds	r5, r5, #1
 8016f02:	1dff      	adds	r7, r7, #7
 8016f04:	1df6      	adds	r6, r6, #7

08016f06 <??aci_gap_start_auto_connection_establish_proc__3>:
 8016f06:	7d60      	ldrb	r0, [r4, #21]
 8016f08:	4285      	cmp	r5, r0
 8016f0a:	dbf2      	blt.n	8016ef2 <??aci_gap_start_auto_connection_establish_proc__4>
 8016f0c:	aa07      	add	r2, sp, #28
 8016f0e:	9206      	str	r2, [sp, #24]
 8016f10:	9005      	str	r0, [sp, #20]
 8016f12:	f8b4 0013 	ldrh.w	r0, [r4, #19]
 8016f16:	9004      	str	r0, [sp, #16]
 8016f18:	f8b4 1011 	ldrh.w	r1, [r4, #17]
 8016f1c:	9103      	str	r1, [sp, #12]
 8016f1e:	f8b4 000f 	ldrh.w	r0, [r4, #15]
 8016f22:	9002      	str	r0, [sp, #8]
 8016f24:	f8b4 100d 	ldrh.w	r1, [r4, #13]
 8016f28:	9101      	str	r1, [sp, #4]
 8016f2a:	f8b4 000b 	ldrh.w	r0, [r4, #11]
 8016f2e:	9000      	str	r0, [sp, #0]
 8016f30:	f8b4 3009 	ldrh.w	r3, [r4, #9]
 8016f34:	7a22      	ldrb	r2, [r4, #8]
 8016f36:	88e1      	ldrh	r1, [r4, #6]
 8016f38:	88a0      	ldrh	r0, [r4, #4]
 8016f3a:	f002 fb07 	bl	801954c <aci_gap_start_auto_connection_establish_proc>
 8016f3e:	4601      	mov	r1, r0

08016f40 <??aci_gap_start_auto_connection_establish_proc__2>:
 8016f40:	4620      	mov	r0, r4
 8016f42:	f000 fd25 	bl	8017990 <hci_status_event>
 8016f46:	b047      	add	sp, #284	; 0x11c
 8016f48:	bdf0      	pop	{r4, r5, r6, r7, pc}

08016f4a <aci_gap_start_general_connection_establish_proc_process>:
 8016f4a:	b51c      	push	{r2, r3, r4, lr}
 8016f4c:	4604      	mov	r4, r0
 8016f4e:	7ae0      	ldrb	r0, [r4, #11]
 8016f50:	9001      	str	r0, [sp, #4]
 8016f52:	7aa1      	ldrb	r1, [r4, #10]
 8016f54:	9100      	str	r1, [sp, #0]
 8016f56:	7a63      	ldrb	r3, [r4, #9]
 8016f58:	f8b4 2007 	ldrh.w	r2, [r4, #7]
 8016f5c:	f8b4 1005 	ldrh.w	r1, [r4, #5]
 8016f60:	7920      	ldrb	r0, [r4, #4]
 8016f62:	f002 fa2e 	bl	80193c2 <aci_gap_start_general_connection_establish_proc>

08016f66 <?Subroutine1>:
 8016f66:	4601      	mov	r1, r0
 8016f68:	4620      	mov	r0, r4
 8016f6a:	e8bd 401c 	ldmia.w	sp!, {r2, r3, r4, lr}
 8016f6e:	f000 bd0f 	b.w	8017990 <hci_status_event>

08016f72 <aci_gap_start_selective_connection_establish_proc_process>:
 8016f72:	b5f0      	push	{r4, r5, r6, r7, lr}
 8016f74:	b0c3      	sub	sp, #268	; 0x10c
 8016f76:	4604      	mov	r4, r0
 8016f78:	78e0      	ldrb	r0, [r4, #3]
 8016f7a:	2809      	cmp	r0, #9
 8016f7c:	db09      	blt.n	8016f92 <??aci_gap_start_selective_connection_establish__0>
 8016f7e:	3809      	subs	r0, #9
 8016f80:	f8df 2ab4 	ldr.w	r2, [pc, #2740]	; 8017a38 <??DataTable5>
 8016f84:	2100      	movs	r1, #0
 8016f86:	fbe0 2102 	umlal	r2, r1, r0, r2
 8016f8a:	7b23      	ldrb	r3, [r4, #12]
 8016f8c:	0888      	lsrs	r0, r1, #2
 8016f8e:	4298      	cmp	r0, r3
 8016f90:	d201      	bcs.n	8016f96 <??aci_gap_start_selective_connection_establish__1>

08016f92 <??aci_gap_start_selective_connection_establish__0>:
 8016f92:	2112      	movs	r1, #18
 8016f94:	e021      	b.n	8016fda <??aci_gap_start_selective_connection_establish__2>

08016f96 <??aci_gap_start_selective_connection_establish__1>:
 8016f96:	2500      	movs	r5, #0
 8016f98:	ae04      	add	r6, sp, #16
 8016f9a:	f104 070d 	add.w	r7, r4, #13
 8016f9e:	e009      	b.n	8016fb4 <??aci_gap_start_selective_connection_establish__3>

08016fa0 <??aci_gap_start_selective_connection_establish__4>:
 8016fa0:	783b      	ldrb	r3, [r7, #0]
 8016fa2:	2206      	movs	r2, #6
 8016fa4:	1c79      	adds	r1, r7, #1
 8016fa6:	7033      	strb	r3, [r6, #0]
 8016fa8:	1c70      	adds	r0, r6, #1
 8016faa:	f019 ff9c 	bl	8030ee6 <__aeabi_memcpy>
 8016fae:	1c6d      	adds	r5, r5, #1
 8016fb0:	1dff      	adds	r7, r7, #7
 8016fb2:	1df6      	adds	r6, r6, #7

08016fb4 <??aci_gap_start_selective_connection_establish__3>:
 8016fb4:	7b20      	ldrb	r0, [r4, #12]
 8016fb6:	4285      	cmp	r5, r0
 8016fb8:	dbf2      	blt.n	8016fa0 <??aci_gap_start_selective_connection_establish__4>
 8016fba:	aa04      	add	r2, sp, #16
 8016fbc:	9203      	str	r2, [sp, #12]
 8016fbe:	9002      	str	r0, [sp, #8]
 8016fc0:	7ae0      	ldrb	r0, [r4, #11]
 8016fc2:	9001      	str	r0, [sp, #4]
 8016fc4:	7aa1      	ldrb	r1, [r4, #10]
 8016fc6:	9100      	str	r1, [sp, #0]
 8016fc8:	7a63      	ldrb	r3, [r4, #9]
 8016fca:	f8b4 2007 	ldrh.w	r2, [r4, #7]
 8016fce:	f8b4 1005 	ldrh.w	r1, [r4, #5]
 8016fd2:	7920      	ldrb	r0, [r4, #4]
 8016fd4:	f002 fa24 	bl	8019420 <aci_gap_start_selective_connection_establish_proc>
 8016fd8:	4601      	mov	r1, r0

08016fda <??aci_gap_start_selective_connection_establish__2>:
 8016fda:	4620      	mov	r0, r4
 8016fdc:	f000 fcd8 	bl	8017990 <hci_status_event>
 8016fe0:	b043      	add	sp, #268	; 0x10c
 8016fe2:	bdf0      	pop	{r4, r5, r6, r7, pc}

08016fe4 <aci_gap_create_connection_process>:
 8016fe4:	b518      	push	{r3, r4, lr}
 8016fe6:	b087      	sub	sp, #28
 8016fe8:	4604      	mov	r4, r0
 8016fea:	8b60      	ldrh	r0, [r4, #26]
 8016fec:	f104 0309 	add.w	r3, r4, #9
 8016ff0:	9006      	str	r0, [sp, #24]
 8016ff2:	8b21      	ldrh	r1, [r4, #24]
 8016ff4:	9105      	str	r1, [sp, #20]
 8016ff6:	8ae0      	ldrh	r0, [r4, #22]
 8016ff8:	9004      	str	r0, [sp, #16]
 8016ffa:	8aa1      	ldrh	r1, [r4, #20]
 8016ffc:	9103      	str	r1, [sp, #12]
 8016ffe:	8a60      	ldrh	r0, [r4, #18]
 8017000:	9002      	str	r0, [sp, #8]
 8017002:	8a21      	ldrh	r1, [r4, #16]
 8017004:	9101      	str	r1, [sp, #4]
 8017006:	7be0      	ldrb	r0, [r4, #15]
 8017008:	9000      	str	r0, [sp, #0]
 801700a:	7a22      	ldrb	r2, [r4, #8]
 801700c:	88e1      	ldrh	r1, [r4, #6]
 801700e:	88a0      	ldrh	r0, [r4, #4]
 8017010:	f002 fa54 	bl	80194bc <aci_gap_create_connection>
 8017014:	4601      	mov	r1, r0
 8017016:	4620      	mov	r0, r4
 8017018:	b008      	add	sp, #32
 801701a:	f7ff bbb1 	b.w	8016780 <??Subroutine0_0>

0801701e <aci_gap_terminate_gap_proc_process>:
 801701e:	b510      	push	{r4, lr}
 8017020:	4604      	mov	r4, r0
 8017022:	7920      	ldrb	r0, [r4, #4]
 8017024:	f002 fad0 	bl	80195c8 <aci_gap_terminate_gap_proc>
 8017028:	e538      	b.n	8016a9c <?Subroutine9>

0801702a <aci_gap_send_pairing_req_process>:
 801702a:	b510      	push	{r4, lr}
 801702c:	4604      	mov	r4, r0
 801702e:	79a1      	ldrb	r1, [r4, #6]
 8017030:	88a0      	ldrh	r0, [r4, #4]
 8017032:	f00b fcb9 	bl	80229a8 <aci_gap_send_pairing_req>
 8017036:	f7ff bba1 	b.w	801677c <?Subroutine0>

0801703a <aci_gap_resolve_private_addr_process>:
 801703a:	b53e      	push	{r1, r2, r3, r4, r5, lr}
 801703c:	4604      	mov	r4, r0
 801703e:	4669      	mov	r1, sp
 8017040:	1d20      	adds	r0, r4, #4
 8017042:	f002 f892 	bl	801916a <aci_gap_resolve_private_addr>
 8017046:	4605      	mov	r5, r0
 8017048:	2206      	movs	r2, #6
 801704a:	4669      	mov	r1, sp
 801704c:	1de0      	adds	r0, r4, #7
 801704e:	f019 ff4a 	bl	8030ee6 <__aeabi_memcpy>
 8017052:	7860      	ldrb	r0, [r4, #1]
 8017054:	78a1      	ldrb	r1, [r4, #2]
 8017056:	71a5      	strb	r5, [r4, #6]
 8017058:	7120      	strb	r0, [r4, #4]
 801705a:	7161      	strb	r1, [r4, #5]
 801705c:	2004      	movs	r0, #4
 801705e:	7020      	strb	r0, [r4, #0]
 8017060:	220e      	movs	r2, #14
 8017062:	210a      	movs	r1, #10
 8017064:	2001      	movs	r0, #1
 8017066:	7062      	strb	r2, [r4, #1]
 8017068:	70a1      	strb	r1, [r4, #2]
 801706a:	70e0      	strb	r0, [r4, #3]
 801706c:	200d      	movs	r0, #13
 801706e:	b003      	add	sp, #12
 8017070:	bd30      	pop	{r4, r5, pc}

08017072 <aci_gap_set_broadcast_mode_process>:
 8017072:	e92d 41f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, lr}
 8017076:	b0c3      	sub	sp, #268	; 0x10c
 8017078:	4604      	mov	r4, r0
 801707a:	7aa1      	ldrb	r1, [r4, #10]
 801707c:	f104 000b 	add.w	r0, r4, #11
 8017080:	1845      	adds	r5, r0, r1
 8017082:	78e0      	ldrb	r0, [r4, #3]
 8017084:	2807      	cmp	r0, #7
 8017086:	dd09      	ble.n	801709c <??aci_gap_set_broadcast_mode_process_0>
 8017088:	3808      	subs	r0, #8
 801708a:	f8df 29ac 	ldr.w	r2, [pc, #2476]	; 8017a38 <??DataTable5>
 801708e:	2100      	movs	r1, #0
 8017090:	fbe0 2102 	umlal	r2, r1, r0, r2
 8017094:	782b      	ldrb	r3, [r5, #0]
 8017096:	0888      	lsrs	r0, r1, #2
 8017098:	4298      	cmp	r0, r3
 801709a:	d201      	bcs.n	80170a0 <??aci_gap_set_broadcast_mode_process_1>

0801709c <??aci_gap_set_broadcast_mode_process_0>:
 801709c:	2012      	movs	r0, #18
 801709e:	e020      	b.n	80170e2 <??aci_gap_set_broadcast_mode_process_2>

080170a0 <??aci_gap_set_broadcast_mode_process_1>:
 80170a0:	f04f 0800 	mov.w	r8, #0
 80170a4:	af04      	add	r7, sp, #16
 80170a6:	1c6e      	adds	r6, r5, #1
 80170a8:	e00a      	b.n	80170c0 <??aci_gap_set_broadcast_mode_process_3>

080170aa <??aci_gap_set_broadcast_mode_process_4>:
 80170aa:	7833      	ldrb	r3, [r6, #0]
 80170ac:	2206      	movs	r2, #6
 80170ae:	1c71      	adds	r1, r6, #1
 80170b0:	703b      	strb	r3, [r7, #0]
 80170b2:	1c78      	adds	r0, r7, #1
 80170b4:	f019 ff17 	bl	8030ee6 <__aeabi_memcpy>
 80170b8:	f108 0801 	add.w	r8, r8, #1
 80170bc:	1df6      	adds	r6, r6, #7
 80170be:	1dff      	adds	r7, r7, #7

080170c0 <??aci_gap_set_broadcast_mode_process_3>:
 80170c0:	7828      	ldrb	r0, [r5, #0]
 80170c2:	4580      	cmp	r8, r0
 80170c4:	dbf1      	blt.n	80170aa <??aci_gap_set_broadcast_mode_process_4>
 80170c6:	9002      	str	r0, [sp, #8]
 80170c8:	aa04      	add	r2, sp, #16
 80170ca:	f104 000b 	add.w	r0, r4, #11
 80170ce:	9203      	str	r2, [sp, #12]
 80170d0:	9001      	str	r0, [sp, #4]
 80170d2:	7aa1      	ldrb	r1, [r4, #10]
 80170d4:	9100      	str	r1, [sp, #0]
 80170d6:	7a63      	ldrb	r3, [r4, #9]
 80170d8:	7a22      	ldrb	r2, [r4, #8]
 80170da:	88e1      	ldrh	r1, [r4, #6]
 80170dc:	88a0      	ldrh	r0, [r4, #4]
 80170de:	f001 fcc5 	bl	8018a6c <aci_gap_set_broadcast_mode>

080170e2 <??aci_gap_set_broadcast_mode_process_2>:
 80170e2:	71a0      	strb	r0, [r4, #6]
 80170e4:	7860      	ldrb	r0, [r4, #1]
 80170e6:	78a1      	ldrb	r1, [r4, #2]
 80170e8:	220e      	movs	r2, #14
 80170ea:	7120      	strb	r0, [r4, #4]
 80170ec:	7161      	strb	r1, [r4, #5]
 80170ee:	2004      	movs	r0, #4
 80170f0:	7020      	strb	r0, [r4, #0]
 80170f2:	70a0      	strb	r0, [r4, #2]
 80170f4:	2001      	movs	r0, #1
 80170f6:	7062      	strb	r2, [r4, #1]
 80170f8:	70e0      	strb	r0, [r4, #3]
 80170fa:	2007      	movs	r0, #7
 80170fc:	b044      	add	sp, #272	; 0x110
 80170fe:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

08017102 <aci_gap_start_observation_proc_process>:
 8017102:	b51c      	push	{r2, r3, r4, lr}
 8017104:	4604      	mov	r4, r0
 8017106:	7ae0      	ldrb	r0, [r4, #11]
 8017108:	9001      	str	r0, [sp, #4]
 801710a:	7aa1      	ldrb	r1, [r4, #10]
 801710c:	9100      	str	r1, [sp, #0]
 801710e:	7a63      	ldrb	r3, [r4, #9]
 8017110:	7a22      	ldrb	r2, [r4, #8]
 8017112:	88e1      	ldrh	r1, [r4, #6]
 8017114:	88a0      	ldrh	r0, [r4, #4]
 8017116:	f002 f8b9 	bl	801928c <aci_gap_start_observation_proc>
 801711a:	e724      	b.n	8016f66 <?Subroutine1>

0801711c <aci_gap_get_bonded_devices_process>:
 801711c:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8017120:	b0bf      	sub	sp, #252	; 0xfc
 8017122:	4680      	mov	r8, r0
 8017124:	2200      	movs	r2, #0
 8017126:	f88d 2000 	strb.w	r2, [sp]
 801712a:	a901      	add	r1, sp, #4
 801712c:	4668      	mov	r0, sp
 801712e:	f00a f805 	bl	802113c <aci_gap_get_bonded_devices>
 8017132:	4681      	mov	r9, r0
 8017134:	f89d 0000 	ldrb.w	r0, [sp]
 8017138:	2602      	movs	r6, #2
 801713a:	2700      	movs	r7, #0
 801713c:	f888 0007 	strb.w	r0, [r8, #7]
 8017140:	f108 0408 	add.w	r4, r8, #8
 8017144:	ad01      	add	r5, sp, #4
 8017146:	e00a      	b.n	801715e <??aci_gap_get_bonded_devices_process_0>

08017148 <??aci_gap_get_bonded_devices_process_1>:
 8017148:	7828      	ldrb	r0, [r5, #0]
 801714a:	2206      	movs	r2, #6
 801714c:	1c69      	adds	r1, r5, #1
 801714e:	7020      	strb	r0, [r4, #0]
 8017150:	1c60      	adds	r0, r4, #1
 8017152:	f019 fec8 	bl	8030ee6 <__aeabi_memcpy>
 8017156:	1df6      	adds	r6, r6, #7
 8017158:	1c7f      	adds	r7, r7, #1
 801715a:	1ded      	adds	r5, r5, #7
 801715c:	1de4      	adds	r4, r4, #7

0801715e <??aci_gap_get_bonded_devices_process_0>:
 801715e:	f89d 0000 	ldrb.w	r0, [sp]
 8017162:	4287      	cmp	r7, r0
 8017164:	dbf0      	blt.n	8017148 <??aci_gap_get_bonded_devices_process_1>
 8017166:	f888 9006 	strb.w	r9, [r8, #6]
 801716a:	4631      	mov	r1, r6
 801716c:	4640      	mov	r0, r8
 801716e:	f000 fc1f 	bl	80179b0 <hci_complete_event>
 8017172:	b03f      	add	sp, #252	; 0xfc
 8017174:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}

08017178 <aci_gap_is_device_bonded_process>:
 8017178:	b510      	push	{r4, lr}
 801717a:	4604      	mov	r4, r0
 801717c:	7920      	ldrb	r0, [r4, #4]
 801717e:	1d61      	adds	r1, r4, #5
 8017180:	f00a f80b 	bl	802119a <aci_gap_is_device_bonded>
 8017184:	e48a      	b.n	8016a9c <?Subroutine9>

08017186 <aci_gap_numeric_comparison_value_confirm_yesno_process>:
 8017186:	b510      	push	{r4, lr}
 8017188:	4604      	mov	r4, r0
 801718a:	79a1      	ldrb	r1, [r4, #6]
 801718c:	88a0      	ldrh	r0, [r4, #4]
 801718e:	f00d f866 	bl	802425e <aci_gap_numeric_comparison_value_confirm_yesno>
 8017192:	e483      	b.n	8016a9c <?Subroutine9>

08017194 <aci_gap_passkey_input_process>:
 8017194:	b510      	push	{r4, lr}
 8017196:	4604      	mov	r4, r0
 8017198:	79a1      	ldrb	r1, [r4, #6]
 801719a:	88a0      	ldrh	r0, [r4, #4]
 801719c:	f00d f83e 	bl	802421c <aci_gap_passkey_input>
 80171a0:	e47c      	b.n	8016a9c <?Subroutine9>

080171a2 <aci_gap_get_oob_data_process>:
 80171a2:	b538      	push	{r3, r4, r5, lr}
 80171a4:	4604      	mov	r4, r0
 80171a6:	b088      	sub	sp, #32
 80171a8:	ad04      	add	r5, sp, #16
 80171aa:	9500      	str	r5, [sp, #0]
 80171ac:	2100      	movs	r1, #0
 80171ae:	f8ad 1004 	strh.w	r1, [sp, #4]
 80171b2:	7920      	ldrb	r0, [r4, #4]
 80171b4:	ab01      	add	r3, sp, #4
 80171b6:	aa02      	add	r2, sp, #8
 80171b8:	f10d 0105 	add.w	r1, sp, #5
 80171bc:	f00c ffbd 	bl	802413a <aci_gap_get_oob_data>
 80171c0:	4605      	mov	r5, r0
 80171c2:	f89d 0005 	ldrb.w	r0, [sp, #5]
 80171c6:	2206      	movs	r2, #6
 80171c8:	a902      	add	r1, sp, #8
 80171ca:	71e0      	strb	r0, [r4, #7]
 80171cc:	f104 0008 	add.w	r0, r4, #8
 80171d0:	f019 fe89 	bl	8030ee6 <__aeabi_memcpy>
 80171d4:	7920      	ldrb	r0, [r4, #4]
 80171d6:	2210      	movs	r2, #16
 80171d8:	73a0      	strb	r0, [r4, #14]
 80171da:	f89d 1004 	ldrb.w	r1, [sp, #4]
 80171de:	f104 0010 	add.w	r0, r4, #16
 80171e2:	73e1      	strb	r1, [r4, #15]
 80171e4:	a904      	add	r1, sp, #16
 80171e6:	f019 fe7e 	bl	8030ee6 <__aeabi_memcpy>
 80171ea:	7860      	ldrb	r0, [r4, #1]
 80171ec:	78a1      	ldrb	r1, [r4, #2]
 80171ee:	71a5      	strb	r5, [r4, #6]
 80171f0:	7120      	strb	r0, [r4, #4]
 80171f2:	7161      	strb	r1, [r4, #5]
 80171f4:	2004      	movs	r0, #4
 80171f6:	7020      	strb	r0, [r4, #0]
 80171f8:	220e      	movs	r2, #14
 80171fa:	211d      	movs	r1, #29
 80171fc:	2001      	movs	r0, #1
 80171fe:	7062      	strb	r2, [r4, #1]
 8017200:	70a1      	strb	r1, [r4, #2]
 8017202:	70e0      	strb	r0, [r4, #3]
 8017204:	2020      	movs	r0, #32
 8017206:	b009      	add	sp, #36	; 0x24
 8017208:	bd30      	pop	{r4, r5, pc}

0801720a <aci_gap_set_oob_data_process>:
 801720a:	b51c      	push	{r2, r3, r4, lr}
 801720c:	4604      	mov	r4, r0
 801720e:	f104 000e 	add.w	r0, r4, #14
 8017212:	9001      	str	r0, [sp, #4]
 8017214:	7b61      	ldrb	r1, [r4, #13]
 8017216:	1da2      	adds	r2, r4, #6
 8017218:	9100      	str	r1, [sp, #0]
 801721a:	7b23      	ldrb	r3, [r4, #12]
 801721c:	7961      	ldrb	r1, [r4, #5]
 801721e:	7920      	ldrb	r0, [r4, #4]
 8017220:	f00c ff35 	bl	802408e <aci_gap_set_oob_data>

08017224 <?Subroutine3>:
 8017224:	71a0      	strb	r0, [r4, #6]
 8017226:	7860      	ldrb	r0, [r4, #1]
 8017228:	78a1      	ldrb	r1, [r4, #2]
 801722a:	220e      	movs	r2, #14
 801722c:	7120      	strb	r0, [r4, #4]
 801722e:	7161      	strb	r1, [r4, #5]
 8017230:	2004      	movs	r0, #4
 8017232:	7020      	strb	r0, [r4, #0]
 8017234:	70a0      	strb	r0, [r4, #2]
 8017236:	2001      	movs	r0, #1
 8017238:	70e0      	strb	r0, [r4, #3]
 801723a:	7062      	strb	r2, [r4, #1]
 801723c:	2007      	movs	r0, #7
 801723e:	bd16      	pop	{r1, r2, r4, pc}

08017240 <aci_gap_remove_bonded_device_process>:
 8017240:	b510      	push	{r4, lr}
 8017242:	4604      	mov	r4, r0
 8017244:	7920      	ldrb	r0, [r4, #4]
 8017246:	1d61      	adds	r1, r4, #5
 8017248:	f009 ffb4 	bl	80211b4 <aci_gap_remove_bonded_device>
 801724c:	e426      	b.n	8016a9c <?Subroutine9>

0801724e <aci_gap_add_devices_to_list_process>:
 801724e:	e92d 41f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, lr}
 8017252:	b0bf      	sub	sp, #252	; 0xfc
 8017254:	4604      	mov	r4, r0
 8017256:	7921      	ldrb	r1, [r4, #4]
 8017258:	1d60      	adds	r0, r4, #5
 801725a:	ebc1 02c1 	rsb	r2, r1, r1, lsl #3
 801725e:	1885      	adds	r5, r0, r2
 8017260:	78e0      	ldrb	r0, [r4, #3]
 8017262:	b140      	cbz	r0, 8017276 <??aci_gap_add_devices_to_list_process_0>
 8017264:	1e40      	subs	r0, r0, #1
 8017266:	f8df 37d0 	ldr.w	r3, [pc, #2000]	; 8017a38 <??DataTable5>
 801726a:	2200      	movs	r2, #0
 801726c:	fbe0 3203 	umlal	r3, r2, r0, r3
 8017270:	0890      	lsrs	r0, r2, #2
 8017272:	4288      	cmp	r0, r1
 8017274:	d201      	bcs.n	801727a <??aci_gap_add_devices_to_list_process_1>

08017276 <??aci_gap_add_devices_to_list_process_0>:
 8017276:	2012      	movs	r0, #18
 8017278:	e016      	b.n	80172a8 <??aci_gap_add_devices_to_list_process_2>

0801727a <??aci_gap_add_devices_to_list_process_1>:
 801727a:	f04f 0800 	mov.w	r8, #0
 801727e:	466f      	mov	r7, sp
 8017280:	1d66      	adds	r6, r4, #5
 8017282:	e00a      	b.n	801729a <??aci_gap_add_devices_to_list_process_3>

08017284 <??aci_gap_add_devices_to_list_process_4>:
 8017284:	7833      	ldrb	r3, [r6, #0]
 8017286:	2206      	movs	r2, #6
 8017288:	1c71      	adds	r1, r6, #1
 801728a:	703b      	strb	r3, [r7, #0]
 801728c:	1c78      	adds	r0, r7, #1
 801728e:	f019 fe2a 	bl	8030ee6 <__aeabi_memcpy>
 8017292:	f108 0801 	add.w	r8, r8, #1
 8017296:	1df6      	adds	r6, r6, #7
 8017298:	1dff      	adds	r7, r7, #7

0801729a <??aci_gap_add_devices_to_list_process_3>:
 801729a:	7920      	ldrb	r0, [r4, #4]
 801729c:	4580      	cmp	r8, r0
 801729e:	dbf1      	blt.n	8017284 <??aci_gap_add_devices_to_list_process_4>
 80172a0:	782a      	ldrb	r2, [r5, #0]
 80172a2:	4669      	mov	r1, sp
 80172a4:	f001 fede 	bl	8019064 <aci_gap_add_devices_to_list>

080172a8 <??aci_gap_add_devices_to_list_process_2>:
 80172a8:	71a0      	strb	r0, [r4, #6]
 80172aa:	7860      	ldrb	r0, [r4, #1]
 80172ac:	78a1      	ldrb	r1, [r4, #2]
 80172ae:	220e      	movs	r2, #14
 80172b0:	7120      	strb	r0, [r4, #4]
 80172b2:	7161      	strb	r1, [r4, #5]
 80172b4:	2004      	movs	r0, #4
 80172b6:	7020      	strb	r0, [r4, #0]
 80172b8:	70a0      	strb	r0, [r4, #2]
 80172ba:	2001      	movs	r0, #1
 80172bc:	7062      	strb	r2, [r4, #1]
 80172be:	70e0      	strb	r0, [r4, #3]
 80172c0:	2007      	movs	r0, #7
 80172c2:	b040      	add	sp, #256	; 0x100
 80172c4:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

080172c8 <aci_gatt_init_process>:
 80172c8:	b510      	push	{r4, lr}
 80172ca:	4604      	mov	r4, r0
 80172cc:	f004 f8c4 	bl	801b458 <aci_gatt_init>
 80172d0:	f7ff bbe4 	b.w	8016a9c <?Subroutine9>

080172d4 <aci_gatt_add_service_process>:
 80172d4:	b538      	push	{r3, r4, r5, lr}
 80172d6:	b086      	sub	sp, #24
 80172d8:	4604      	mov	r4, r0
 80172da:	7920      	ldrb	r0, [r4, #4]
 80172dc:	2801      	cmp	r0, #1
 80172de:	bf08      	it	eq
 80172e0:	2003      	moveq	r0, #3
 80172e2:	d003      	beq.n	80172ec <??aci_gatt_add_service_process_0>
 80172e4:	2802      	cmp	r0, #2
 80172e6:	bf0c      	ite	eq
 80172e8:	2011      	moveq	r0, #17
 80172ea:	2001      	movne	r0, #1

080172ec <??aci_gatt_add_service_process_0>:
 80172ec:	1d21      	adds	r1, r4, #4
 80172ee:	180d      	adds	r5, r1, r0
 80172f0:	2000      	movs	r0, #0
 80172f2:	f8ad 0004 	strh.w	r0, [sp, #4]
 80172f6:	7920      	ldrb	r0, [r4, #4]
 80172f8:	2801      	cmp	r0, #1
 80172fa:	bf08      	it	eq
 80172fc:	2202      	moveq	r2, #2
 80172fe:	d003      	beq.n	8017308 <??aci_gatt_add_service_process_1>
 8017300:	2802      	cmp	r0, #2
 8017302:	bf0c      	ite	eq
 8017304:	2210      	moveq	r2, #16
 8017306:	2200      	movne	r2, #0

08017308 <??aci_gatt_add_service_process_1>:
 8017308:	1d61      	adds	r1, r4, #5
 801730a:	a802      	add	r0, sp, #8
 801730c:	f019 fdeb 	bl	8030ee6 <__aeabi_memcpy>
 8017310:	aa01      	add	r2, sp, #4
 8017312:	9200      	str	r2, [sp, #0]
 8017314:	786b      	ldrb	r3, [r5, #1]
 8017316:	782a      	ldrb	r2, [r5, #0]
 8017318:	7920      	ldrb	r0, [r4, #4]
 801731a:	a902      	add	r1, sp, #8
 801731c:	f004 fa3f 	bl	801b79e <aci_gatt_add_service>
 8017320:	f8bd 1004 	ldrh.w	r1, [sp, #4]
 8017324:	71a0      	strb	r0, [r4, #6]
 8017326:	7860      	ldrb	r0, [r4, #1]
 8017328:	f8a4 1007 	strh.w	r1, [r4, #7]
 801732c:	78a1      	ldrb	r1, [r4, #2]
 801732e:	7120      	strb	r0, [r4, #4]
 8017330:	2004      	movs	r0, #4
 8017332:	7161      	strb	r1, [r4, #5]
 8017334:	7020      	strb	r0, [r4, #0]
 8017336:	220e      	movs	r2, #14
 8017338:	2106      	movs	r1, #6
 801733a:	2001      	movs	r0, #1
 801733c:	7062      	strb	r2, [r4, #1]
 801733e:	70a1      	strb	r1, [r4, #2]
 8017340:	70e0      	strb	r0, [r4, #3]
 8017342:	2009      	movs	r0, #9
 8017344:	b007      	add	sp, #28
 8017346:	bd30      	pop	{r4, r5, pc}

08017348 <aci_gatt_include_service_process>:
 8017348:	b518      	push	{r3, r4, lr}
 801734a:	4604      	mov	r4, r0
 801734c:	b087      	sub	sp, #28
 801734e:	2000      	movs	r0, #0
 8017350:	f8ad 0008 	strh.w	r0, [sp, #8]
 8017354:	7aa0      	ldrb	r0, [r4, #10]
 8017356:	2801      	cmp	r0, #1
 8017358:	bf08      	it	eq
 801735a:	2202      	moveq	r2, #2
 801735c:	d003      	beq.n	8017366 <??aci_gatt_include_service_process_0>
 801735e:	2802      	cmp	r0, #2
 8017360:	bf0c      	ite	eq
 8017362:	2210      	moveq	r2, #16
 8017364:	2200      	movne	r2, #0

08017366 <??aci_gatt_include_service_process_0>:
 8017366:	f104 010b 	add.w	r1, r4, #11
 801736a:	a803      	add	r0, sp, #12
 801736c:	f019 fdbb 	bl	8030ee6 <__aeabi_memcpy>
 8017370:	aa02      	add	r2, sp, #8
 8017372:	a903      	add	r1, sp, #12
 8017374:	9201      	str	r2, [sp, #4]
 8017376:	9100      	str	r1, [sp, #0]
 8017378:	7aa3      	ldrb	r3, [r4, #10]
 801737a:	8922      	ldrh	r2, [r4, #8]
 801737c:	88e1      	ldrh	r1, [r4, #6]
 801737e:	88a0      	ldrh	r0, [r4, #4]
 8017380:	f004 fa22 	bl	801b7c8 <aci_gatt_include_service>
 8017384:	f8bd 1008 	ldrh.w	r1, [sp, #8]
 8017388:	71a0      	strb	r0, [r4, #6]
 801738a:	7860      	ldrb	r0, [r4, #1]
 801738c:	f8a4 1007 	strh.w	r1, [r4, #7]
 8017390:	78a1      	ldrb	r1, [r4, #2]
 8017392:	7120      	strb	r0, [r4, #4]
 8017394:	2004      	movs	r0, #4
 8017396:	7161      	strb	r1, [r4, #5]
 8017398:	7020      	strb	r0, [r4, #0]
 801739a:	220e      	movs	r2, #14
 801739c:	2106      	movs	r1, #6
 801739e:	2001      	movs	r0, #1
 80173a0:	7062      	strb	r2, [r4, #1]
 80173a2:	70a1      	strb	r1, [r4, #2]
 80173a4:	70e0      	strb	r0, [r4, #3]
 80173a6:	2009      	movs	r0, #9
 80173a8:	b008      	add	sp, #32
 80173aa:	bd10      	pop	{r4, pc}

080173ac <aci_gatt_add_char_process>:
 80173ac:	b530      	push	{r4, r5, lr}
 80173ae:	b08b      	sub	sp, #44	; 0x2c
 80173b0:	4604      	mov	r4, r0
 80173b2:	79a0      	ldrb	r0, [r4, #6]
 80173b4:	2801      	cmp	r0, #1
 80173b6:	bf08      	it	eq
 80173b8:	2005      	moveq	r0, #5
 80173ba:	d003      	beq.n	80173c4 <??aci_gatt_add_char_process_0>
 80173bc:	2802      	cmp	r0, #2
 80173be:	bf0c      	ite	eq
 80173c0:	2013      	moveq	r0, #19
 80173c2:	2003      	movne	r0, #3

080173c4 <??aci_gatt_add_char_process_0>:
 80173c4:	1d21      	adds	r1, r4, #4
 80173c6:	180d      	adds	r5, r1, r0
 80173c8:	2000      	movs	r0, #0
 80173ca:	f8ad 0018 	strh.w	r0, [sp, #24]
 80173ce:	79a0      	ldrb	r0, [r4, #6]
 80173d0:	2801      	cmp	r0, #1
 80173d2:	bf08      	it	eq
 80173d4:	2202      	moveq	r2, #2
 80173d6:	d003      	beq.n	80173e0 <??aci_gatt_add_char_process_1>
 80173d8:	2802      	cmp	r0, #2
 80173da:	bf0c      	ite	eq
 80173dc:	2210      	moveq	r2, #16
 80173de:	2200      	movne	r2, #0

080173e0 <??aci_gatt_add_char_process_1>:
 80173e0:	1de1      	adds	r1, r4, #7
 80173e2:	a807      	add	r0, sp, #28
 80173e4:	f019 fd7f 	bl	8030ee6 <__aeabi_memcpy>
 80173e8:	aa06      	add	r2, sp, #24
 80173ea:	9205      	str	r2, [sp, #20]
 80173ec:	79a8      	ldrb	r0, [r5, #6]
 80173ee:	aa07      	add	r2, sp, #28
 80173f0:	9004      	str	r0, [sp, #16]
 80173f2:	7969      	ldrb	r1, [r5, #5]
 80173f4:	9103      	str	r1, [sp, #12]
 80173f6:	7928      	ldrb	r0, [r5, #4]
 80173f8:	9002      	str	r0, [sp, #8]
 80173fa:	78e9      	ldrb	r1, [r5, #3]
 80173fc:	9101      	str	r1, [sp, #4]
 80173fe:	78a8      	ldrb	r0, [r5, #2]
 8017400:	9000      	str	r0, [sp, #0]
 8017402:	882b      	ldrh	r3, [r5, #0]
 8017404:	79a1      	ldrb	r1, [r4, #6]
 8017406:	88a0      	ldrh	r0, [r4, #4]
 8017408:	f004 fc6f 	bl	801bcea <aci_gatt_add_char>
 801740c:	f8bd 1018 	ldrh.w	r1, [sp, #24]
 8017410:	71a0      	strb	r0, [r4, #6]
 8017412:	7860      	ldrb	r0, [r4, #1]
 8017414:	f8a4 1007 	strh.w	r1, [r4, #7]
 8017418:	78a1      	ldrb	r1, [r4, #2]
 801741a:	7120      	strb	r0, [r4, #4]
 801741c:	2004      	movs	r0, #4
 801741e:	7161      	strb	r1, [r4, #5]
 8017420:	7020      	strb	r0, [r4, #0]
 8017422:	220e      	movs	r2, #14
 8017424:	2106      	movs	r1, #6
 8017426:	2001      	movs	r0, #1
 8017428:	7062      	strb	r2, [r4, #1]
 801742a:	70a1      	strb	r1, [r4, #2]
 801742c:	70e0      	strb	r0, [r4, #3]
 801742e:	2009      	movs	r0, #9
 8017430:	b00b      	add	sp, #44	; 0x2c
 8017432:	bd30      	pop	{r4, r5, pc}

08017434 <aci_gatt_add_char_desc_process>:
 8017434:	b570      	push	{r4, r5, r6, lr}
 8017436:	b08e      	sub	sp, #56	; 0x38
 8017438:	4604      	mov	r4, r0
 801743a:	7a20      	ldrb	r0, [r4, #8]
 801743c:	2801      	cmp	r0, #1
 801743e:	bf08      	it	eq
 8017440:	2107      	moveq	r1, #7
 8017442:	d003      	beq.n	801744c <??aci_gatt_add_char_desc_process_0>
 8017444:	2802      	cmp	r0, #2
 8017446:	bf0c      	ite	eq
 8017448:	2115      	moveq	r1, #21
 801744a:	2105      	movne	r1, #5

0801744c <??aci_gatt_add_char_desc_process_0>:
 801744c:	1d22      	adds	r2, r4, #4
 801744e:	1855      	adds	r5, r2, r1
 8017450:	2801      	cmp	r0, #1
 8017452:	bf08      	it	eq
 8017454:	2107      	moveq	r1, #7
 8017456:	d003      	beq.n	8017460 <??aci_gatt_add_char_desc_process_1>
 8017458:	2802      	cmp	r0, #2
 801745a:	bf0c      	ite	eq
 801745c:	2115      	moveq	r1, #21
 801745e:	2105      	movne	r1, #5

08017460 <??aci_gatt_add_char_desc_process_1>:
 8017460:	7868      	ldrb	r0, [r5, #1]
 8017462:	1da2      	adds	r2, r4, #6
 8017464:	1841      	adds	r1, r0, r1
 8017466:	1856      	adds	r6, r2, r1
 8017468:	2100      	movs	r1, #0
 801746a:	f8ad 1024 	strh.w	r1, [sp, #36]	; 0x24
 801746e:	7a20      	ldrb	r0, [r4, #8]
 8017470:	2801      	cmp	r0, #1
 8017472:	bf08      	it	eq
 8017474:	2202      	moveq	r2, #2
 8017476:	d003      	beq.n	8017480 <??aci_gatt_add_char_desc_process_2>
 8017478:	2802      	cmp	r0, #2
 801747a:	bf0c      	ite	eq
 801747c:	2210      	moveq	r2, #16
 801747e:	2200      	movne	r2, #0

08017480 <??aci_gatt_add_char_desc_process_2>:
 8017480:	f104 0109 	add.w	r1, r4, #9
 8017484:	a80a      	add	r0, sp, #40	; 0x28
 8017486:	f019 fd2e 	bl	8030ee6 <__aeabi_memcpy>
 801748a:	aa09      	add	r2, sp, #36	; 0x24
 801748c:	9208      	str	r2, [sp, #32]
 801748e:	7930      	ldrb	r0, [r6, #4]
 8017490:	ab0a      	add	r3, sp, #40	; 0x28
 8017492:	9007      	str	r0, [sp, #28]
 8017494:	78f1      	ldrb	r1, [r6, #3]
 8017496:	9106      	str	r1, [sp, #24]
 8017498:	78b0      	ldrb	r0, [r6, #2]
 801749a:	9005      	str	r0, [sp, #20]
 801749c:	7871      	ldrb	r1, [r6, #1]
 801749e:	1ca8      	adds	r0, r5, #2
 80174a0:	9104      	str	r1, [sp, #16]
 80174a2:	7832      	ldrb	r2, [r6, #0]
 80174a4:	9002      	str	r0, [sp, #8]
 80174a6:	9203      	str	r2, [sp, #12]
 80174a8:	7869      	ldrb	r1, [r5, #1]
 80174aa:	9101      	str	r1, [sp, #4]
 80174ac:	782a      	ldrb	r2, [r5, #0]
 80174ae:	9200      	str	r2, [sp, #0]
 80174b0:	7a22      	ldrb	r2, [r4, #8]
 80174b2:	88e1      	ldrh	r1, [r4, #6]
 80174b4:	88a0      	ldrh	r0, [r4, #4]
 80174b6:	f004 fdab 	bl	801c010 <aci_gatt_add_char_desc>
 80174ba:	f8bd 1024 	ldrh.w	r1, [sp, #36]	; 0x24
 80174be:	71a0      	strb	r0, [r4, #6]
 80174c0:	7860      	ldrb	r0, [r4, #1]
 80174c2:	f8a4 1007 	strh.w	r1, [r4, #7]
 80174c6:	78a1      	ldrb	r1, [r4, #2]
 80174c8:	7120      	strb	r0, [r4, #4]
 80174ca:	2004      	movs	r0, #4
 80174cc:	7161      	strb	r1, [r4, #5]
 80174ce:	7020      	strb	r0, [r4, #0]
 80174d0:	220e      	movs	r2, #14
 80174d2:	2106      	movs	r1, #6
 80174d4:	2001      	movs	r0, #1
 80174d6:	7062      	strb	r2, [r4, #1]
 80174d8:	70a1      	strb	r1, [r4, #2]
 80174da:	70e0      	strb	r0, [r4, #3]
 80174dc:	2009      	movs	r0, #9
 80174de:	b00e      	add	sp, #56	; 0x38
 80174e0:	bd70      	pop	{r4, r5, r6, pc}

080174e2 <aci_gatt_update_char_value_process>:
 80174e2:	b51c      	push	{r2, r3, r4, lr}
 80174e4:	4604      	mov	r4, r0
 80174e6:	f104 000a 	add.w	r0, r4, #10
 80174ea:	9000      	str	r0, [sp, #0]
 80174ec:	7a63      	ldrb	r3, [r4, #9]
 80174ee:	7a22      	ldrb	r2, [r4, #8]
 80174f0:	88e1      	ldrh	r1, [r4, #6]
 80174f2:	88a0      	ldrh	r0, [r4, #4]
 80174f4:	f004 fe3d 	bl	801c172 <aci_gatt_update_char_value>
 80174f8:	e694      	b.n	8017224 <?Subroutine3>

080174fa <aci_gatt_del_char_process>:
 80174fa:	b510      	push	{r4, lr}
 80174fc:	4604      	mov	r4, r0
 80174fe:	88e1      	ldrh	r1, [r4, #6]
 8017500:	88a0      	ldrh	r0, [r4, #4]
 8017502:	f005 f8a6 	bl	801c652 <aci_gatt_del_char>
 8017506:	f7ff bac9 	b.w	8016a9c <?Subroutine9>

0801750a <aci_gatt_del_service_process>:
 801750a:	b510      	push	{r4, lr}
 801750c:	4604      	mov	r4, r0
 801750e:	88a0      	ldrh	r0, [r4, #4]
 8017510:	f005 f8ef 	bl	801c6f2 <aci_gatt_del_service>
 8017514:	f7ff bac2 	b.w	8016a9c <?Subroutine9>

08017518 <aci_gatt_del_include_service_process>:
 8017518:	b510      	push	{r4, lr}
 801751a:	4604      	mov	r4, r0
 801751c:	88e1      	ldrh	r1, [r4, #6]
 801751e:	88a0      	ldrh	r0, [r4, #4]
 8017520:	f005 f938 	bl	801c794 <aci_gatt_del_include_service>
 8017524:	f7ff baba 	b.w	8016a9c <?Subroutine9>

08017528 <aci_gatt_set_event_mask_process>:
 8017528:	b510      	push	{r4, lr}
 801752a:	4604      	mov	r4, r0
 801752c:	6860      	ldr	r0, [r4, #4]
 801752e:	f008 f847 	bl	801f5c0 <aci_gatt_set_event_mask>
 8017532:	f7ff bab3 	b.w	8016a9c <?Subroutine9>

08017536 <aci_gatt_exchange_config_process>:
 8017536:	b510      	push	{r4, lr}
 8017538:	4604      	mov	r4, r0
 801753a:	88a0      	ldrh	r0, [r4, #4]
 801753c:	f002 fd7e 	bl	801a03c <aci_gatt_exchange_config>
 8017540:	f7ff b91c 	b.w	801677c <?Subroutine0>

08017544 <aci_att_find_info_req_process>:
 8017544:	b510      	push	{r4, lr}
 8017546:	4604      	mov	r4, r0
 8017548:	8922      	ldrh	r2, [r4, #8]
 801754a:	88e1      	ldrh	r1, [r4, #6]
 801754c:	88a0      	ldrh	r0, [r4, #4]
 801754e:	f003 fe5d 	bl	801b20c <aci_att_find_info_req>
 8017552:	f7ff b913 	b.w	801677c <?Subroutine0>

08017556 <aci_att_find_by_type_value_req_process>:
 8017556:	b51c      	push	{r2, r3, r4, lr}
 8017558:	4604      	mov	r4, r0
 801755a:	f104 000d 	add.w	r0, r4, #13
 801755e:	9001      	str	r0, [sp, #4]
 8017560:	7b21      	ldrb	r1, [r4, #12]
 8017562:	9100      	str	r1, [sp, #0]
 8017564:	8963      	ldrh	r3, [r4, #10]
 8017566:	8922      	ldrh	r2, [r4, #8]
 8017568:	88e1      	ldrh	r1, [r4, #6]
 801756a:	88a0      	ldrh	r0, [r4, #4]
 801756c:	f003 fe73 	bl	801b256 <aci_att_find_by_type_value_req>
 8017570:	e4f9      	b.n	8016f66 <?Subroutine1>

08017572 <aci_att_read_by_type_req_process>:
 8017572:	b518      	push	{r3, r4, lr}
 8017574:	b085      	sub	sp, #20
 8017576:	4604      	mov	r4, r0
 8017578:	7aa0      	ldrb	r0, [r4, #10]
 801757a:	2801      	cmp	r0, #1
 801757c:	bf08      	it	eq
 801757e:	2202      	moveq	r2, #2
 8017580:	d003      	beq.n	801758a <??aci_att_read_by_type_req_process_0>
 8017582:	2802      	cmp	r0, #2
 8017584:	bf0c      	ite	eq
 8017586:	2210      	moveq	r2, #16
 8017588:	2200      	movne	r2, #0

0801758a <??aci_att_read_by_type_req_process_0>:
 801758a:	f104 010b 	add.w	r1, r4, #11
 801758e:	a801      	add	r0, sp, #4
 8017590:	f019 fca9 	bl	8030ee6 <__aeabi_memcpy>
 8017594:	aa01      	add	r2, sp, #4
 8017596:	9200      	str	r2, [sp, #0]
 8017598:	7aa3      	ldrb	r3, [r4, #10]
 801759a:	8922      	ldrh	r2, [r4, #8]
 801759c:	88e1      	ldrh	r1, [r4, #6]
 801759e:	88a0      	ldrh	r0, [r4, #4]
 80175a0:	f003 fe6e 	bl	801b280 <aci_att_read_by_type_req>
 80175a4:	e018      	b.n	80175d8 <?Subroutine10>

080175a6 <aci_att_read_by_group_type_req_process>:
 80175a6:	b518      	push	{r3, r4, lr}
 80175a8:	b085      	sub	sp, #20
 80175aa:	4604      	mov	r4, r0
 80175ac:	7aa0      	ldrb	r0, [r4, #10]
 80175ae:	2801      	cmp	r0, #1
 80175b0:	bf08      	it	eq
 80175b2:	2202      	moveq	r2, #2
 80175b4:	d003      	beq.n	80175be <??aci_att_read_by_group_type_req_process_0>
 80175b6:	2802      	cmp	r0, #2
 80175b8:	bf0c      	ite	eq
 80175ba:	2210      	moveq	r2, #16
 80175bc:	2200      	movne	r2, #0

080175be <??aci_att_read_by_group_type_req_process_0>:
 80175be:	f104 010b 	add.w	r1, r4, #11
 80175c2:	a801      	add	r0, sp, #4
 80175c4:	f019 fc8f 	bl	8030ee6 <__aeabi_memcpy>
 80175c8:	aa01      	add	r2, sp, #4
 80175ca:	9200      	str	r2, [sp, #0]
 80175cc:	7aa3      	ldrb	r3, [r4, #10]
 80175ce:	8922      	ldrh	r2, [r4, #8]
 80175d0:	88e1      	ldrh	r1, [r4, #6]
 80175d2:	88a0      	ldrh	r0, [r4, #4]
 80175d4:	f003 fe48 	bl	801b268 <aci_att_read_by_group_type_req>

080175d8 <?Subroutine10>:
 80175d8:	4601      	mov	r1, r0
 80175da:	4620      	mov	r0, r4
 80175dc:	f000 f9d8 	bl	8017990 <hci_status_event>
 80175e0:	b006      	add	sp, #24
 80175e2:	bd10      	pop	{r4, pc}

080175e4 <aci_att_prepare_write_req_process>:
 80175e4:	b51c      	push	{r2, r3, r4, lr}
 80175e6:	4604      	mov	r4, r0
 80175e8:	f104 000b 	add.w	r0, r4, #11
 80175ec:	9000      	str	r0, [sp, #0]
 80175ee:	7aa3      	ldrb	r3, [r4, #10]
 80175f0:	8922      	ldrh	r2, [r4, #8]
 80175f2:	88e1      	ldrh	r1, [r4, #6]
 80175f4:	88a0      	ldrh	r0, [r4, #4]
 80175f6:	f003 fe4c 	bl	801b292 <aci_att_prepare_write_req>
 80175fa:	e4b4      	b.n	8016f66 <?Subroutine1>

080175fc <aci_att_execute_write_req_process>:
 80175fc:	b510      	push	{r4, lr}
 80175fe:	4604      	mov	r4, r0
 8017600:	79a1      	ldrb	r1, [r4, #6]
 8017602:	88a0      	ldrh	r0, [r4, #4]
 8017604:	f003 fe4e 	bl	801b2a4 <aci_att_execute_write_req>
 8017608:	f7ff b8b8 	b.w	801677c <?Subroutine0>

0801760c <aci_gatt_disc_all_primary_services_process>:
 801760c:	b510      	push	{r4, lr}
 801760e:	4604      	mov	r4, r0
 8017610:	88a0      	ldrh	r0, [r4, #4]
 8017612:	f002 fd59 	bl	801a0c8 <aci_gatt_disc_all_primary_services>
 8017616:	f7ff b8b1 	b.w	801677c <?Subroutine0>

0801761a <aci_gatt_disc_primary_service_by_uuid_process>:
 801761a:	b510      	push	{r4, lr}
 801761c:	b084      	sub	sp, #16
 801761e:	4604      	mov	r4, r0
 8017620:	79a0      	ldrb	r0, [r4, #6]
 8017622:	2801      	cmp	r0, #1
 8017624:	bf08      	it	eq
 8017626:	2202      	moveq	r2, #2
 8017628:	d003      	beq.n	8017632 <??aci_gatt_disc_primary_service_by_uuid_process_0>
 801762a:	2802      	cmp	r0, #2
 801762c:	bf0c      	ite	eq
 801762e:	2210      	moveq	r2, #16
 8017630:	2200      	movne	r2, #0

08017632 <??aci_gatt_disc_primary_service_by_uuid_process_0>:
 8017632:	1de1      	adds	r1, r4, #7
 8017634:	4668      	mov	r0, sp
 8017636:	f019 fc56 	bl	8030ee6 <__aeabi_memcpy>
 801763a:	79a1      	ldrb	r1, [r4, #6]
 801763c:	88a0      	ldrh	r0, [r4, #4]
 801763e:	466a      	mov	r2, sp
 8017640:	f002 fd70 	bl	801a124 <aci_gatt_disc_primary_service_by_uuid>
 8017644:	4601      	mov	r1, r0
 8017646:	4620      	mov	r0, r4
 8017648:	f000 f9a2 	bl	8017990 <hci_status_event>
 801764c:	b004      	add	sp, #16
 801764e:	bd10      	pop	{r4, pc}

08017650 <aci_gatt_find_included_services_process>:
 8017650:	b510      	push	{r4, lr}
 8017652:	4604      	mov	r4, r0
 8017654:	8922      	ldrh	r2, [r4, #8]
 8017656:	88e1      	ldrh	r1, [r4, #6]
 8017658:	88a0      	ldrh	r0, [r4, #4]
 801765a:	f002 fd9c 	bl	801a196 <aci_gatt_find_included_services>
 801765e:	f7ff b88d 	b.w	801677c <?Subroutine0>

08017662 <aci_gatt_disc_all_char_of_service_process>:
 8017662:	b510      	push	{r4, lr}
 8017664:	4604      	mov	r4, r0
 8017666:	8922      	ldrh	r2, [r4, #8]
 8017668:	88e1      	ldrh	r1, [r4, #6]
 801766a:	88a0      	ldrh	r0, [r4, #4]
 801766c:	f002 fdc2 	bl	801a1f4 <aci_gatt_disc_all_char_of_service>
 8017670:	f7ff b884 	b.w	801677c <?Subroutine0>

08017674 <aci_gatt_disc_char_by_uuid_process>:
 8017674:	b518      	push	{r3, r4, lr}
 8017676:	b085      	sub	sp, #20
 8017678:	4604      	mov	r4, r0
 801767a:	7aa0      	ldrb	r0, [r4, #10]
 801767c:	2801      	cmp	r0, #1
 801767e:	bf08      	it	eq
 8017680:	2202      	moveq	r2, #2
 8017682:	d003      	beq.n	801768c <??aci_gatt_disc_char_by_uuid_process_0>
 8017684:	2802      	cmp	r0, #2
 8017686:	bf0c      	ite	eq
 8017688:	2210      	moveq	r2, #16
 801768a:	2200      	movne	r2, #0

0801768c <??aci_gatt_disc_char_by_uuid_process_0>:
 801768c:	f104 010b 	add.w	r1, r4, #11
 8017690:	a801      	add	r0, sp, #4
 8017692:	f019 fc28 	bl	8030ee6 <__aeabi_memcpy>
 8017696:	aa01      	add	r2, sp, #4
 8017698:	9200      	str	r2, [sp, #0]
 801769a:	7aa3      	ldrb	r3, [r4, #10]
 801769c:	8922      	ldrh	r2, [r4, #8]
 801769e:	88e1      	ldrh	r1, [r4, #6]
 80176a0:	88a0      	ldrh	r0, [r4, #4]
 80176a2:	f002 fdd8 	bl	801a256 <aci_gatt_disc_char_by_uuid>
 80176a6:	e797      	b.n	80175d8 <?Subroutine10>

080176a8 <aci_gatt_disc_all_char_desc_process>:
 80176a8:	b510      	push	{r4, lr}
 80176aa:	4604      	mov	r4, r0
 80176ac:	8922      	ldrh	r2, [r4, #8]
 80176ae:	88e1      	ldrh	r1, [r4, #6]
 80176b0:	88a0      	ldrh	r0, [r4, #4]
 80176b2:	f002 fe1c 	bl	801a2ee <aci_gatt_disc_all_char_desc>
 80176b6:	f7ff b861 	b.w	801677c <?Subroutine0>

080176ba <aci_gatt_read_char_value_process>:
 80176ba:	b510      	push	{r4, lr}
 80176bc:	4604      	mov	r4, r0
 80176be:	88e1      	ldrh	r1, [r4, #6]
 80176c0:	88a0      	ldrh	r0, [r4, #4]
 80176c2:	f002 fe67 	bl	801a394 <aci_gatt_read_char_value>
 80176c6:	f7ff b859 	b.w	801677c <?Subroutine0>

080176ca <aci_gatt_read_using_char_uuid_process>:
 80176ca:	b518      	push	{r3, r4, lr}
 80176cc:	b085      	sub	sp, #20
 80176ce:	4604      	mov	r4, r0
 80176d0:	7aa0      	ldrb	r0, [r4, #10]
 80176d2:	2801      	cmp	r0, #1
 80176d4:	bf08      	it	eq
 80176d6:	2202      	moveq	r2, #2
 80176d8:	d003      	beq.n	80176e2 <??aci_gatt_read_using_char_uuid_process_0>
 80176da:	2802      	cmp	r0, #2
 80176dc:	bf0c      	ite	eq
 80176de:	2210      	moveq	r2, #16
 80176e0:	2200      	movne	r2, #0

080176e2 <??aci_gatt_read_using_char_uuid_process_0>:
 80176e2:	f104 010b 	add.w	r1, r4, #11
 80176e6:	a801      	add	r0, sp, #4
 80176e8:	f019 fbfd 	bl	8030ee6 <__aeabi_memcpy>
 80176ec:	aa01      	add	r2, sp, #4
 80176ee:	9200      	str	r2, [sp, #0]
 80176f0:	7aa3      	ldrb	r3, [r4, #10]
 80176f2:	8922      	ldrh	r2, [r4, #8]
 80176f4:	88e1      	ldrh	r1, [r4, #6]
 80176f6:	88a0      	ldrh	r0, [r4, #4]
 80176f8:	f002 fe21 	bl	801a33e <aci_gatt_read_using_char_uuid>
 80176fc:	e76c      	b.n	80175d8 <?Subroutine10>

080176fe <aci_gatt_read_long_char_value_process>:
 80176fe:	b510      	push	{r4, lr}
 8017700:	4604      	mov	r4, r0
 8017702:	8922      	ldrh	r2, [r4, #8]
 8017704:	88e1      	ldrh	r1, [r4, #6]
 8017706:	88a0      	ldrh	r0, [r4, #4]
 8017708:	f002 fe68 	bl	801a3dc <aci_gatt_read_long_char_value>
 801770c:	f7ff b836 	b.w	801677c <?Subroutine0>

08017710 <aci_gatt_read_multiple_char_value_process>:
 8017710:	b510      	push	{r4, lr}
 8017712:	b0c0      	sub	sp, #256	; 0x100
 8017714:	4604      	mov	r4, r0
 8017716:	78e0      	ldrb	r0, [r4, #3]
 8017718:	2803      	cmp	r0, #3
 801771a:	db04      	blt.n	8017726 <??aci_gatt_read_multiple_char_value_process_0>
 801771c:	79a1      	ldrb	r1, [r4, #6]
 801771e:	1ec0      	subs	r0, r0, #3
 8017720:	0840      	lsrs	r0, r0, #1
 8017722:	4288      	cmp	r0, r1
 8017724:	d201      	bcs.n	801772a <??aci_gatt_read_multiple_char_value_process_1>

08017726 <??aci_gatt_read_multiple_char_value_process_0>:
 8017726:	2012      	movs	r0, #18
 8017728:	e00f      	b.n	801774a <??aci_gatt_read_multiple_char_value_process_2>

0801772a <??aci_gatt_read_multiple_char_value_process_1>:
 801772a:	2000      	movs	r0, #0
 801772c:	466a      	mov	r2, sp
 801772e:	1de3      	adds	r3, r4, #7
 8017730:	e004      	b.n	801773c <??aci_gatt_read_multiple_char_value_process_3>

08017732 <??aci_gatt_read_multiple_char_value_process_4>:
 8017732:	f833 1b02 	ldrh.w	r1, [r3], #2
 8017736:	1c40      	adds	r0, r0, #1
 8017738:	f822 1b02 	strh.w	r1, [r2], #2

0801773c <??aci_gatt_read_multiple_char_value_process_3>:
 801773c:	79a1      	ldrb	r1, [r4, #6]
 801773e:	4288      	cmp	r0, r1
 8017740:	dbf7      	blt.n	8017732 <??aci_gatt_read_multiple_char_value_process_4>
 8017742:	88a0      	ldrh	r0, [r4, #4]
 8017744:	466a      	mov	r2, sp
 8017746:	f002 feed 	bl	801a524 <aci_gatt_read_multiple_char_value>

0801774a <??aci_gatt_read_multiple_char_value_process_2>:
 801774a:	4601      	mov	r1, r0
 801774c:	4620      	mov	r0, r4
 801774e:	f000 f91f 	bl	8017990 <hci_status_event>
 8017752:	b040      	add	sp, #256	; 0x100
 8017754:	bd10      	pop	{r4, pc}

08017756 <aci_gatt_write_char_value_process>:
 8017756:	b510      	push	{r4, lr}
 8017758:	4604      	mov	r4, r0
 801775a:	7a22      	ldrb	r2, [r4, #8]
 801775c:	88e1      	ldrh	r1, [r4, #6]
 801775e:	88a0      	ldrh	r0, [r4, #4]
 8017760:	f104 0309 	add.w	r3, r4, #9
 8017764:	f002 fe63 	bl	801a42e <aci_gatt_write_char_value>
 8017768:	f7ff b808 	b.w	801677c <?Subroutine0>

0801776c <aci_gatt_write_long_char_value_process>:
 801776c:	b51c      	push	{r2, r3, r4, lr}
 801776e:	4604      	mov	r4, r0
 8017770:	f104 000b 	add.w	r0, r4, #11
 8017774:	9000      	str	r0, [sp, #0]
 8017776:	7aa3      	ldrb	r3, [r4, #10]
 8017778:	8922      	ldrh	r2, [r4, #8]
 801777a:	88e1      	ldrh	r1, [r4, #6]
 801777c:	88a0      	ldrh	r0, [r4, #4]
 801777e:	f002 fecd 	bl	801a51c <aci_gatt_write_long_char_value>
 8017782:	f7ff bbf0 	b.w	8016f66 <?Subroutine1>

08017786 <aci_gatt_write_char_reliable_process>:
 8017786:	b51c      	push	{r2, r3, r4, lr}
 8017788:	4604      	mov	r4, r0
 801778a:	f104 000b 	add.w	r0, r4, #11
 801778e:	9000      	str	r0, [sp, #0]
 8017790:	7aa3      	ldrb	r3, [r4, #10]
 8017792:	8922      	ldrh	r2, [r4, #8]
 8017794:	88e1      	ldrh	r1, [r4, #6]
 8017796:	88a0      	ldrh	r0, [r4, #4]
 8017798:	f002 ff5d 	bl	801a656 <aci_gatt_write_char_reliable>
 801779c:	f7ff bbe3 	b.w	8016f66 <?Subroutine1>

080177a0 <aci_gatt_write_without_resp_process>:
 80177a0:	b510      	push	{r4, lr}
 80177a2:	4604      	mov	r4, r0
 80177a4:	7a22      	ldrb	r2, [r4, #8]
 80177a6:	88e1      	ldrh	r1, [r4, #6]
 80177a8:	88a0      	ldrh	r0, [r4, #4]
 80177aa:	f104 0309 	add.w	r3, r4, #9
 80177ae:	f002 fee2 	bl	801a576 <aci_gatt_write_without_resp>
 80177b2:	f7ff b973 	b.w	8016a9c <?Subroutine9>

080177b6 <aci_gatt_signed_write_without_resp_process>:
 80177b6:	b510      	push	{r4, lr}
 80177b8:	4604      	mov	r4, r0
 80177ba:	7a22      	ldrb	r2, [r4, #8]
 80177bc:	88e1      	ldrh	r1, [r4, #6]
 80177be:	88a0      	ldrh	r0, [r4, #4]
 80177c0:	f104 0309 	add.w	r3, r4, #9
 80177c4:	f002 ff0a 	bl	801a5dc <aci_gatt_signed_write_without_resp>
 80177c8:	f7ff b968 	b.w	8016a9c <?Subroutine9>

080177cc <aci_gatt_confirm_indication_process>:
 80177cc:	b510      	push	{r4, lr}
 80177ce:	4604      	mov	r4, r0
 80177d0:	88a0      	ldrh	r0, [r4, #4]
 80177d2:	f002 fc57 	bl	801a084 <aci_gatt_confirm_indication>
 80177d6:	f7ff b961 	b.w	8016a9c <?Subroutine9>

080177da <aci_gatt_write_resp_process>:
 80177da:	b51c      	push	{r2, r3, r4, lr}
 80177dc:	4604      	mov	r4, r0
 80177de:	f104 000b 	add.w	r0, r4, #11
 80177e2:	9001      	str	r0, [sp, #4]
 80177e4:	7aa1      	ldrb	r1, [r4, #10]
 80177e6:	9100      	str	r1, [sp, #0]
 80177e8:	7a63      	ldrb	r3, [r4, #9]
 80177ea:	7a22      	ldrb	r2, [r4, #8]
 80177ec:	88e1      	ldrh	r1, [r4, #6]
 80177ee:	88a0      	ldrh	r0, [r4, #4]
 80177f0:	f005 f864 	bl	801c8bc <aci_gatt_write_resp>
 80177f4:	e516      	b.n	8017224 <?Subroutine3>

080177f6 <aci_gatt_allow_read_process>:
 80177f6:	b510      	push	{r4, lr}
 80177f8:	4604      	mov	r4, r0
 80177fa:	88a0      	ldrh	r0, [r4, #4]
 80177fc:	f005 f979 	bl	801caf2 <aci_gatt_allow_read>
 8017800:	f7ff b94c 	b.w	8016a9c <?Subroutine9>

08017804 <aci_gatt_set_security_permission_process>:
 8017804:	b510      	push	{r4, lr}
 8017806:	4604      	mov	r4, r0
 8017808:	7a22      	ldrb	r2, [r4, #8]
 801780a:	88e1      	ldrh	r1, [r4, #6]
 801780c:	88a0      	ldrh	r0, [r4, #4]
 801780e:	f005 f976 	bl	801cafe <aci_gatt_set_security_permission>
 8017812:	f7ff b943 	b.w	8016a9c <?Subroutine9>

08017816 <aci_gatt_set_desc_value_process>:
 8017816:	b51c      	push	{r2, r3, r4, lr}
 8017818:	4604      	mov	r4, r0
 801781a:	f104 000d 	add.w	r0, r4, #13
 801781e:	9001      	str	r0, [sp, #4]
 8017820:	7b21      	ldrb	r1, [r4, #12]
 8017822:	9100      	str	r1, [sp, #0]
 8017824:	8963      	ldrh	r3, [r4, #10]
 8017826:	8922      	ldrh	r2, [r4, #8]
 8017828:	88e1      	ldrh	r1, [r4, #6]
 801782a:	88a0      	ldrh	r0, [r4, #4]
 801782c:	f004 fc21 	bl	801c072 <aci_gatt_set_desc_value>
 8017830:	e4f8      	b.n	8017224 <?Subroutine3>

08017832 <aci_gatt_read_handle_value_process>:
 8017832:	b530      	push	{r4, r5, lr}
 8017834:	b0c1      	sub	sp, #260	; 0x104
 8017836:	4604      	mov	r4, r0
 8017838:	2200      	movs	r2, #0
 801783a:	9202      	str	r2, [sp, #8]
 801783c:	a903      	add	r1, sp, #12
 801783e:	a802      	add	r0, sp, #8
 8017840:	9101      	str	r1, [sp, #4]
 8017842:	9000      	str	r0, [sp, #0]
 8017844:	8922      	ldrh	r2, [r4, #8]
 8017846:	88e1      	ldrh	r1, [r4, #6]
 8017848:	88a0      	ldrh	r0, [r4, #4]
 801784a:	f10d 030a 	add.w	r3, sp, #10
 801784e:	f004 ffde 	bl	801c80e <aci_gatt_read_handle_value>
 8017852:	4605      	mov	r5, r0
 8017854:	f8bd 000a 	ldrh.w	r0, [sp, #10]
 8017858:	f8a4 0007 	strh.w	r0, [r4, #7]
 801785c:	f8bd 1008 	ldrh.w	r1, [sp, #8]
 8017860:	f8a4 1009 	strh.w	r1, [r4, #9]
 8017864:	f104 000b 	add.w	r0, r4, #11
 8017868:	460a      	mov	r2, r1
 801786a:	a903      	add	r1, sp, #12
 801786c:	f019 fb3b 	bl	8030ee6 <__aeabi_memcpy>
 8017870:	f8b4 1009 	ldrh.w	r1, [r4, #9]
 8017874:	71a5      	strb	r5, [r4, #6]
 8017876:	4620      	mov	r0, r4
 8017878:	1d49      	adds	r1, r1, #5

0801787a <?Subroutine7>:
 801787a:	f000 f899 	bl	80179b0 <hci_complete_event>
 801787e:	b041      	add	sp, #260	; 0x104
 8017880:	bd30      	pop	{r4, r5, pc}

08017882 <aci_gatt_update_char_value_ext_process>:
 8017882:	b510      	push	{r4, lr}
 8017884:	4604      	mov	r4, r0
 8017886:	b084      	sub	sp, #16
 8017888:	f104 0010 	add.w	r0, r4, #16
 801788c:	9003      	str	r0, [sp, #12]
 801788e:	7be1      	ldrb	r1, [r4, #15]
 8017890:	9102      	str	r1, [sp, #8]
 8017892:	f8b4 000d 	ldrh.w	r0, [r4, #13]
 8017896:	9001      	str	r0, [sp, #4]
 8017898:	f8b4 100b 	ldrh.w	r1, [r4, #11]
 801789c:	9100      	str	r1, [sp, #0]
 801789e:	7aa3      	ldrb	r3, [r4, #10]
 80178a0:	8922      	ldrh	r2, [r4, #8]
 80178a2:	88e1      	ldrh	r1, [r4, #6]
 80178a4:	88a0      	ldrh	r0, [r4, #4]
 80178a6:	f004 fec0 	bl	801c62a <aci_gatt_update_char_value_ext>
 80178aa:	71a0      	strb	r0, [r4, #6]
 80178ac:	7860      	ldrb	r0, [r4, #1]
 80178ae:	78a1      	ldrb	r1, [r4, #2]
 80178b0:	220e      	movs	r2, #14
 80178b2:	7120      	strb	r0, [r4, #4]
 80178b4:	7161      	strb	r1, [r4, #5]
 80178b6:	2004      	movs	r0, #4
 80178b8:	7020      	strb	r0, [r4, #0]
 80178ba:	70a0      	strb	r0, [r4, #2]
 80178bc:	2001      	movs	r0, #1
 80178be:	7062      	strb	r2, [r4, #1]
 80178c0:	70e0      	strb	r0, [r4, #3]
 80178c2:	2007      	movs	r0, #7
 80178c4:	b004      	add	sp, #16
 80178c6:	bd10      	pop	{r4, pc}

080178c8 <aci_gatt_deny_read_process>:
 80178c8:	b510      	push	{r4, lr}
 80178ca:	4604      	mov	r4, r0
 80178cc:	79a1      	ldrb	r1, [r4, #6]
 80178ce:	88a0      	ldrh	r0, [r4, #4]
 80178d0:	f005 f912 	bl	801caf8 <aci_gatt_deny_read>
 80178d4:	f7ff b8e2 	b.w	8016a9c <?Subroutine9>

080178d8 <aci_gatt_set_access_permission_process>:
 80178d8:	b510      	push	{r4, lr}
 80178da:	4604      	mov	r4, r0
 80178dc:	7a22      	ldrb	r2, [r4, #8]
 80178de:	88e1      	ldrh	r1, [r4, #6]
 80178e0:	88a0      	ldrh	r0, [r4, #4]
 80178e2:	f005 f9a7 	bl	801cc34 <aci_gatt_set_access_permission>
 80178e6:	f7ff b8d9 	b.w	8016a9c <?Subroutine9>

080178ea <aci_gatt_store_db_process>:
 80178ea:	b510      	push	{r4, lr}
 80178ec:	4604      	mov	r4, r0
 80178ee:	f007 fb67 	bl	801efc0 <aci_gatt_store_db>
 80178f2:	f7ff b8d3 	b.w	8016a9c <?Subroutine9>

080178f6 <aci_l2cap_connection_parameter_update_req_process>:
 80178f6:	b51c      	push	{r2, r3, r4, lr}
 80178f8:	4604      	mov	r4, r0
 80178fa:	89a0      	ldrh	r0, [r4, #12]
 80178fc:	9000      	str	r0, [sp, #0]
 80178fe:	8963      	ldrh	r3, [r4, #10]
 8017900:	8922      	ldrh	r2, [r4, #8]
 8017902:	88e1      	ldrh	r1, [r4, #6]
 8017904:	88a0      	ldrh	r0, [r4, #4]
 8017906:	f008 f8a3 	bl	801fa50 <aci_l2cap_connection_parameter_update_req>
 801790a:	f7ff bb2c 	b.w	8016f66 <?Subroutine1>

0801790e <aci_l2cap_connection_parameter_update_resp_process>:
 801790e:	b518      	push	{r3, r4, lr}
 8017910:	b085      	sub	sp, #20
 8017912:	4604      	mov	r4, r0
 8017914:	7ce0      	ldrb	r0, [r4, #19]
 8017916:	9004      	str	r0, [sp, #16]
 8017918:	7ca1      	ldrb	r1, [r4, #18]
 801791a:	9103      	str	r1, [sp, #12]
 801791c:	8a20      	ldrh	r0, [r4, #16]
 801791e:	9002      	str	r0, [sp, #8]
 8017920:	89e1      	ldrh	r1, [r4, #14]
 8017922:	9101      	str	r1, [sp, #4]
 8017924:	89a0      	ldrh	r0, [r4, #12]
 8017926:	9000      	str	r0, [sp, #0]
 8017928:	8963      	ldrh	r3, [r4, #10]
 801792a:	8922      	ldrh	r2, [r4, #8]
 801792c:	88e1      	ldrh	r1, [r4, #6]
 801792e:	88a0      	ldrh	r0, [r4, #4]
 8017930:	f008 f95e 	bl	801fbf0 <aci_l2cap_connection_parameter_update_resp>

08017934 <?Subroutine8>:
 8017934:	71a0      	strb	r0, [r4, #6]
 8017936:	7860      	ldrb	r0, [r4, #1]
 8017938:	78a1      	ldrb	r1, [r4, #2]
 801793a:	220e      	movs	r2, #14
 801793c:	7120      	strb	r0, [r4, #4]
 801793e:	7161      	strb	r1, [r4, #5]
 8017940:	2004      	movs	r0, #4
 8017942:	7020      	strb	r0, [r4, #0]
 8017944:	70a0      	strb	r0, [r4, #2]
 8017946:	2001      	movs	r0, #1
 8017948:	7062      	strb	r2, [r4, #1]
 801794a:	70e0      	strb	r0, [r4, #3]
 801794c:	2007      	movs	r0, #7
 801794e:	b006      	add	sp, #24
 8017950:	bd10      	pop	{r4, pc}

08017952 <aci_gap_terminate>:
 8017952:	f008 bac4 	b.w	801fede <hci_disconnect>

08017956 <aci_gap_start_connection_update>:
 8017956:	b530      	push	{r4, r5, lr}
 8017958:	b083      	sub	sp, #12
 801795a:	f8bd 4020 	ldrh.w	r4, [sp, #32]
 801795e:	f8bd 501c 	ldrh.w	r5, [sp, #28]
 8017962:	9402      	str	r4, [sp, #8]
 8017964:	f8bd 4018 	ldrh.w	r4, [sp, #24]
 8017968:	9501      	str	r5, [sp, #4]
 801796a:	9400      	str	r4, [sp, #0]
 801796c:	f008 fb94 	bl	8020098 <hci_le_connection_update>
 8017970:	b003      	add	sp, #12
 8017972:	bd30      	pop	{r4, r5, pc}

08017974 <aci_gap_add_devices_to_resolving_list>:
 8017974:	f001 bb76 	b.w	8019064 <aci_gap_add_devices_to_list>

08017978 <aci_gatt_write_long_char_desc>:
 8017978:	b51c      	push	{r2, r3, r4, lr}
 801797a:	9c04      	ldr	r4, [sp, #16]
 801797c:	9400      	str	r4, [sp, #0]
 801797e:	f002 fdcd 	bl	801a51c <aci_gatt_write_long_char_value>
 8017982:	bd16      	pop	{r1, r2, r4, pc}

08017984 <aci_gatt_read_long_char_desc>:
 8017984:	f002 bd2a 	b.w	801a3dc <aci_gatt_read_long_char_value>

08017988 <aci_gatt_write_char_desc>:
 8017988:	f002 bd51 	b.w	801a42e <aci_gatt_write_char_value>

0801798c <aci_gatt_read_char_desc>:
 801798c:	f002 bd02 	b.w	801a394 <aci_gatt_read_char_value>

08017990 <hci_status_event>:
 8017990:	7842      	ldrb	r2, [r0, #1]
 8017992:	7883      	ldrb	r3, [r0, #2]
 8017994:	f04f 0c0f 	mov.w	ip, #15
 8017998:	7142      	strb	r2, [r0, #5]
 801799a:	7183      	strb	r3, [r0, #6]
 801799c:	2204      	movs	r2, #4
 801799e:	7002      	strb	r2, [r0, #0]
 80179a0:	70c1      	strb	r1, [r0, #3]
 80179a2:	2101      	movs	r1, #1
 80179a4:	f880 c001 	strb.w	ip, [r0, #1]
 80179a8:	7082      	strb	r2, [r0, #2]
 80179aa:	7101      	strb	r1, [r0, #4]
 80179ac:	2007      	movs	r0, #7
 80179ae:	4770      	bx	lr

080179b0 <hci_complete_event>:
 80179b0:	7842      	ldrb	r2, [r0, #1]
 80179b2:	7883      	ldrb	r3, [r0, #2]
 80179b4:	f04f 0c0e 	mov.w	ip, #14
 80179b8:	7102      	strb	r2, [r0, #4]
 80179ba:	7143      	strb	r3, [r0, #5]
 80179bc:	2204      	movs	r2, #4
 80179be:	7002      	strb	r2, [r0, #0]
 80179c0:	1ccb      	adds	r3, r1, #3
 80179c2:	2201      	movs	r2, #1
 80179c4:	f880 c001 	strb.w	ip, [r0, #1]
 80179c8:	7083      	strb	r3, [r0, #2]
 80179ca:	70c2      	strb	r2, [r0, #3]
 80179cc:	1d89      	adds	r1, r1, #6
 80179ce:	b288      	uxth	r0, r1
 80179d0:	4770      	bx	lr

080179d2 <BleStack_Request>:
 80179d2:	b430      	push	{r4, r5}
 80179d4:	7801      	ldrb	r1, [r0, #0]
 80179d6:	2902      	cmp	r1, #2
 80179d8:	d10a      	bne.n	80179f0 <??BleStack_Request_0>
 80179da:	2104      	movs	r1, #4
 80179dc:	2210      	movs	r2, #16
 80179de:	7041      	strb	r1, [r0, #1]
 80179e0:	7082      	strb	r2, [r0, #2]
 80179e2:	2101      	movs	r1, #1
 80179e4:	22ff      	movs	r2, #255	; 0xff
 80179e6:	70c1      	strb	r1, [r0, #3]
 80179e8:	7102      	strb	r2, [r0, #4]
 80179ea:	2004      	movs	r0, #4
 80179ec:	bc30      	pop	{r4, r5}
 80179ee:	4770      	bx	lr

080179f0 <??BleStack_Request_0>:
 80179f0:	2901      	cmp	r1, #1
 80179f2:	d11e      	bne.n	8017a32 <??BleStack_Request_1>
 80179f4:	7882      	ldrb	r2, [r0, #2]
 80179f6:	7841      	ldrb	r1, [r0, #1]
 80179f8:	4b10      	ldr	r3, [pc, #64]	; (8017a3c <??DataTable5_1>)
 80179fa:	461c      	mov	r4, r3
 80179fc:	ea41 2102 	orr.w	r1, r1, r2, lsl #8
 8017a00:	2200      	movs	r2, #0

08017a02 <??BleStack_Request_2>:
 8017a02:	8825      	ldrh	r5, [r4, #0]
 8017a04:	42a9      	cmp	r1, r5
 8017a06:	bf1e      	ittt	ne
 8017a08:	1c52      	addne	r2, r2, #1
 8017a0a:	8925      	ldrhne	r5, [r4, #8]
 8017a0c:	42a9      	cmpne	r1, r5
 8017a0e:	bf1e      	ittt	ne
 8017a10:	1c52      	addne	r2, r2, #1
 8017a12:	8a25      	ldrhne	r5, [r4, #16]
 8017a14:	42a9      	cmpne	r1, r5
 8017a16:	d004      	beq.n	8017a22 <??BleStack_Request_3>
 8017a18:	1c52      	adds	r2, r2, #1
 8017a1a:	3418      	adds	r4, #24
 8017a1c:	2a87      	cmp	r2, #135	; 0x87
 8017a1e:	d3f0      	bcc.n	8017a02 <??BleStack_Request_2>
 8017a20:	e004      	b.n	8017a2c <??BleStack_Request_4>

08017a22 <??BleStack_Request_3>:
 8017a22:	eb03 01c2 	add.w	r1, r3, r2, lsl #3
 8017a26:	684a      	ldr	r2, [r1, #4]
 8017a28:	bc30      	pop	{r4, r5}

08017a2a <__iar_annotation$$tailcall>:
 8017a2a:	4710      	bx	r2

08017a2c <??BleStack_Request_4>:
 8017a2c:	2101      	movs	r1, #1
 8017a2e:	bc30      	pop	{r4, r5}
 8017a30:	e7ae      	b.n	8017990 <hci_status_event>

08017a32 <??BleStack_Request_1>:
 8017a32:	2000      	movs	r0, #0
 8017a34:	bc30      	pop	{r4, r5}
 8017a36:	4770      	bx	lr

08017a38 <??DataTable5>:
 8017a38:	2492 9249                                   .$I.

08017a3c <??DataTable5_1>:
 8017a3c:	1dfc 0803                                   ....

08017a40 <hci_event>:
 8017a40:	2204      	movs	r2, #4
 8017a42:	7002      	strb	r2, [r0, #0]
 8017a44:	1c49      	adds	r1, r1, #1
 8017a46:	2300      	movs	r3, #0
 8017a48:	2200      	movs	r2, #0
 8017a4a:	b289      	uxth	r1, r1
 8017a4c:	f00f bca8 	b.w	80273a0 <BLECB_Indication>

08017a50 <hci_disconnection_complete_event>:
 8017a50:	b500      	push	{lr}
 8017a52:	b0c1      	sub	sp, #260	; 0x104
 8017a54:	f8ad 1004 	strh.w	r1, [sp, #4]
 8017a58:	f88d 2006 	strb.w	r2, [sp, #6]
 8017a5c:	2105      	movs	r1, #5
 8017a5e:	f88d 0003 	strb.w	r0, [sp, #3]
 8017a62:	f88d 1001 	strb.w	r1, [sp, #1]
 8017a66:	2204      	movs	r2, #4
 8017a68:	f88d 2002 	strb.w	r2, [sp, #2]
 8017a6c:	2107      	movs	r1, #7
 8017a6e:	4668      	mov	r0, sp
 8017a70:	f7ff ffe6 	bl	8017a40 <hci_event>
 8017a74:	b041      	add	sp, #260	; 0x104
 8017a76:	bd00      	pop	{pc}

08017a78 <hci_encryption_change_event>:
 8017a78:	b500      	push	{lr}
 8017a7a:	b0c1      	sub	sp, #260	; 0x104
 8017a7c:	f8ad 1004 	strh.w	r1, [sp, #4]
 8017a80:	f88d 2006 	strb.w	r2, [sp, #6]
 8017a84:	2108      	movs	r1, #8
 8017a86:	f88d 0003 	strb.w	r0, [sp, #3]
 8017a8a:	f88d 1001 	strb.w	r1, [sp, #1]
 8017a8e:	2204      	movs	r2, #4
 8017a90:	f88d 2002 	strb.w	r2, [sp, #2]
 8017a94:	2107      	movs	r1, #7
 8017a96:	4668      	mov	r0, sp
 8017a98:	f7ff ffd2 	bl	8017a40 <hci_event>
 8017a9c:	b041      	add	sp, #260	; 0x104
 8017a9e:	bd00      	pop	{pc}

08017aa0 <hci_read_remote_version_information_complete_event>:
 8017aa0:	b518      	push	{r3, r4, lr}
 8017aa2:	b0c1      	sub	sp, #260	; 0x104
 8017aa4:	9c44      	ldr	r4, [sp, #272]	; 0x110
 8017aa6:	f8ad 1004 	strh.w	r1, [sp, #4]
 8017aaa:	f88d 2006 	strb.w	r2, [sp, #6]
 8017aae:	210c      	movs	r1, #12
 8017ab0:	f88d 0003 	strb.w	r0, [sp, #3]
 8017ab4:	f88d 1001 	strb.w	r1, [sp, #1]
 8017ab8:	2208      	movs	r2, #8
 8017aba:	f8ad 3007 	strh.w	r3, [sp, #7]
 8017abe:	f8ad 4009 	strh.w	r4, [sp, #9]
 8017ac2:	f88d 2002 	strb.w	r2, [sp, #2]
 8017ac6:	210b      	movs	r1, #11
 8017ac8:	4668      	mov	r0, sp
 8017aca:	f7ff ffb9 	bl	8017a40 <hci_event>
 8017ace:	b042      	add	sp, #264	; 0x108
 8017ad0:	bd10      	pop	{r4, pc}

08017ad2 <hci_hardware_error_event>:
 8017ad2:	b500      	push	{lr}
 8017ad4:	b0c1      	sub	sp, #260	; 0x104
 8017ad6:	2110      	movs	r1, #16
 8017ad8:	f88d 0003 	strb.w	r0, [sp, #3]
 8017adc:	f88d 1001 	strb.w	r1, [sp, #1]
 8017ae0:	2201      	movs	r2, #1
 8017ae2:	f88d 2002 	strb.w	r2, [sp, #2]
 8017ae6:	2104      	movs	r1, #4
 8017ae8:	4668      	mov	r0, sp
 8017aea:	f7ff ffa9 	bl	8017a40 <hci_event>
 8017aee:	b041      	add	sp, #260	; 0x104
 8017af0:	bd00      	pop	{pc}

08017af2 <hci_encryption_key_refresh_complete_event>:
 8017af2:	b500      	push	{lr}
 8017af4:	b0c1      	sub	sp, #260	; 0x104
 8017af6:	f88d 0003 	strb.w	r0, [sp, #3]
 8017afa:	2003      	movs	r0, #3
 8017afc:	f8ad 1004 	strh.w	r1, [sp, #4]
 8017b00:	2230      	movs	r2, #48	; 0x30
 8017b02:	f88d 0002 	strb.w	r0, [sp, #2]
 8017b06:	f88d 2001 	strb.w	r2, [sp, #1]
 8017b0a:	2106      	movs	r1, #6
 8017b0c:	4668      	mov	r0, sp
 8017b0e:	f7ff ff97 	bl	8017a40 <hci_event>
 8017b12:	b041      	add	sp, #260	; 0x104
 8017b14:	bd00      	pop	{pc}

08017b16 <hci_le_connection_complete_event>:
 8017b16:	b5f0      	push	{r4, r5, r6, r7, lr}
 8017b18:	b0c1      	sub	sp, #260	; 0x104
 8017b1a:	f8ad 1005 	strh.w	r1, [sp, #5]
 8017b1e:	9946      	ldr	r1, [sp, #280]	; 0x118
 8017b20:	f88d 0004 	strb.w	r0, [sp, #4]
 8017b24:	f88d 2007 	strb.w	r2, [sp, #7]
 8017b28:	9c47      	ldr	r4, [sp, #284]	; 0x11c
 8017b2a:	9d48      	ldr	r5, [sp, #288]	; 0x120
 8017b2c:	9e49      	ldr	r6, [sp, #292]	; 0x124
 8017b2e:	9f4a      	ldr	r7, [sp, #296]	; 0x128
 8017b30:	f88d 3008 	strb.w	r3, [sp, #8]
 8017b34:	2206      	movs	r2, #6
 8017b36:	f10d 0009 	add.w	r0, sp, #9
 8017b3a:	f019 f9d4 	bl	8030ee6 <__aeabi_memcpy>
 8017b3e:	213e      	movs	r1, #62	; 0x3e
 8017b40:	4668      	mov	r0, sp
 8017b42:	7041      	strb	r1, [r0, #1]
 8017b44:	2101      	movs	r1, #1
 8017b46:	2213      	movs	r2, #19
 8017b48:	f88d 1003 	strb.w	r1, [sp, #3]
 8017b4c:	f8ad 400f 	strh.w	r4, [sp, #15]
 8017b50:	f8ad 5011 	strh.w	r5, [sp, #17]
 8017b54:	f8a0 6013 	strh.w	r6, [r0, #19]
 8017b58:	f88d 7015 	strb.w	r7, [sp, #21]
 8017b5c:	f88d 2002 	strb.w	r2, [sp, #2]
 8017b60:	2116      	movs	r1, #22
 8017b62:	f7ff ff6d 	bl	8017a40 <hci_event>
 8017b66:	b041      	add	sp, #260	; 0x104
 8017b68:	bdf0      	pop	{r4, r5, r6, r7, pc}

08017b6a <hci_le_advertising_report_event>:
 8017b6a:	b5f0      	push	{r4, r5, r6, r7, lr}
 8017b6c:	b0c1      	sub	sp, #260	; 0x104
 8017b6e:	4604      	mov	r4, r0
 8017b70:	2700      	movs	r7, #0
 8017b72:	460e      	mov	r6, r1
 8017b74:	f88d 4004 	strb.w	r4, [sp, #4]
 8017b78:	0020      	movs	r0, r4
 8017b7a:	d021      	beq.n	8017bc0 <??hci_le_advertising_report_event_0>

08017b7c <??hci_le_advertising_report_event_1>:
 8017b7c:	7831      	ldrb	r1, [r6, #0]
 8017b7e:	a801      	add	r0, sp, #4
 8017b80:	19c5      	adds	r5, r0, r7
 8017b82:	7069      	strb	r1, [r5, #1]
 8017b84:	7870      	ldrb	r0, [r6, #1]
 8017b86:	2206      	movs	r2, #6
 8017b88:	1cb1      	adds	r1, r6, #2
 8017b8a:	70a8      	strb	r0, [r5, #2]
 8017b8c:	1ce8      	adds	r0, r5, #3
 8017b8e:	f019 f9aa 	bl	8030ee6 <__aeabi_memcpy>
 8017b92:	7a31      	ldrb	r1, [r6, #8]
 8017b94:	f105 000a 	add.w	r0, r5, #10
 8017b98:	7269      	strb	r1, [r5, #9]
 8017b9a:	f8d6 1009 	ldr.w	r1, [r6, #9]
 8017b9e:	7a32      	ldrb	r2, [r6, #8]
 8017ba0:	f019 f9a1 	bl	8030ee6 <__aeabi_memcpy>
 8017ba4:	7a30      	ldrb	r0, [r6, #8]
 8017ba6:	f105 020a 	add.w	r2, r5, #10
 8017baa:	f106 010d 	add.w	r1, r6, #13
 8017bae:	19c7      	adds	r7, r0, r7
 8017bb0:	4410      	add	r0, r2
 8017bb2:	780a      	ldrb	r2, [r1, #0]
 8017bb4:	3709      	adds	r7, #9
 8017bb6:	1c7f      	adds	r7, r7, #1
 8017bb8:	360e      	adds	r6, #14
 8017bba:	7002      	strb	r2, [r0, #0]
 8017bbc:	1e64      	subs	r4, r4, #1
 8017bbe:	d1dd      	bne.n	8017b7c <??hci_le_advertising_report_event_1>

08017bc0 <??hci_le_advertising_report_event_0>:
 8017bc0:	203e      	movs	r0, #62	; 0x3e
 8017bc2:	f88d 0001 	strb.w	r0, [sp, #1]
 8017bc6:	1cbf      	adds	r7, r7, #2
 8017bc8:	f88d 7002 	strb.w	r7, [sp, #2]
 8017bcc:	2002      	movs	r0, #2
 8017bce:	f88d 0003 	strb.w	r0, [sp, #3]
 8017bd2:	b2ff      	uxtb	r7, r7
 8017bd4:	1cf9      	adds	r1, r7, #3
 8017bd6:	4668      	mov	r0, sp
 8017bd8:	f7ff ff32 	bl	8017a40 <hci_event>
 8017bdc:	b041      	add	sp, #260	; 0x104
 8017bde:	bdf0      	pop	{r4, r5, r6, r7, pc}

08017be0 <hci_le_connection_update_complete_event>:
 8017be0:	b518      	push	{r3, r4, lr}
 8017be2:	b0c1      	sub	sp, #260	; 0x104
 8017be4:	f8ad 2007 	strh.w	r2, [sp, #7]
 8017be8:	9c44      	ldr	r4, [sp, #272]	; 0x110
 8017bea:	223e      	movs	r2, #62	; 0x3e
 8017bec:	f8ad 3009 	strh.w	r3, [sp, #9]
 8017bf0:	f88d 2001 	strb.w	r2, [sp, #1]
 8017bf4:	f88d 0004 	strb.w	r0, [sp, #4]
 8017bf8:	f8ad 1005 	strh.w	r1, [sp, #5]
 8017bfc:	230a      	movs	r3, #10
 8017bfe:	2203      	movs	r2, #3
 8017c00:	f8ad 400b 	strh.w	r4, [sp, #11]
 8017c04:	f88d 3002 	strb.w	r3, [sp, #2]
 8017c08:	f88d 2003 	strb.w	r2, [sp, #3]
 8017c0c:	210d      	movs	r1, #13
 8017c0e:	4668      	mov	r0, sp
 8017c10:	f7ff ff16 	bl	8017a40 <hci_event>
 8017c14:	b042      	add	sp, #264	; 0x108
 8017c16:	bd10      	pop	{r4, pc}

08017c18 <hci_le_read_remote_features_complete_event>:
 8017c18:	b500      	push	{lr}
 8017c1a:	b0c1      	sub	sp, #260	; 0x104
 8017c1c:	f88d 0004 	strb.w	r0, [sp, #4]
 8017c20:	f8ad 1005 	strh.w	r1, [sp, #5]
 8017c24:	6810      	ldr	r0, [r2, #0]
 8017c26:	f10d 0107 	add.w	r1, sp, #7
 8017c2a:	6008      	str	r0, [r1, #0]
 8017c2c:	6850      	ldr	r0, [r2, #4]
 8017c2e:	2204      	movs	r2, #4
 8017c30:	f88d 2003 	strb.w	r2, [sp, #3]
 8017c34:	6048      	str	r0, [r1, #4]
 8017c36:	203e      	movs	r0, #62	; 0x3e
 8017c38:	210c      	movs	r1, #12
 8017c3a:	f88d 0001 	strb.w	r0, [sp, #1]
 8017c3e:	f88d 1002 	strb.w	r1, [sp, #2]
 8017c42:	210f      	movs	r1, #15
 8017c44:	4668      	mov	r0, sp
 8017c46:	f7ff fefb 	bl	8017a40 <hci_event>
 8017c4a:	b041      	add	sp, #260	; 0x104
 8017c4c:	bd00      	pop	{pc}

08017c4e <hci_le_long_term_key_request_event>:
 8017c4e:	b500      	push	{lr}
 8017c50:	b0c1      	sub	sp, #260	; 0x104
 8017c52:	f8ad 0004 	strh.w	r0, [sp, #4]
 8017c56:	680b      	ldr	r3, [r1, #0]
 8017c58:	f10d 0006 	add.w	r0, sp, #6
 8017c5c:	6003      	str	r3, [r0, #0]
 8017c5e:	684b      	ldr	r3, [r1, #4]
 8017c60:	f8ad 200e 	strh.w	r2, [sp, #14]
 8017c64:	220d      	movs	r2, #13
 8017c66:	6043      	str	r3, [r0, #4]
 8017c68:	203e      	movs	r0, #62	; 0x3e
 8017c6a:	f88d 0001 	strb.w	r0, [sp, #1]
 8017c6e:	2305      	movs	r3, #5
 8017c70:	f88d 2002 	strb.w	r2, [sp, #2]
 8017c74:	f88d 3003 	strb.w	r3, [sp, #3]
 8017c78:	2110      	movs	r1, #16
 8017c7a:	4668      	mov	r0, sp
 8017c7c:	f7ff fee0 	bl	8017a40 <hci_event>
 8017c80:	b041      	add	sp, #260	; 0x104
 8017c82:	bd00      	pop	{pc}

08017c84 <hci_le_data_length_change_event>:
 8017c84:	b518      	push	{r3, r4, lr}
 8017c86:	b0c1      	sub	sp, #260	; 0x104
 8017c88:	f8ad 2008 	strh.w	r2, [sp, #8]
 8017c8c:	9c44      	ldr	r4, [sp, #272]	; 0x110
 8017c8e:	223e      	movs	r2, #62	; 0x3e
 8017c90:	f8ad 300a 	strh.w	r3, [sp, #10]
 8017c94:	f88d 2001 	strb.w	r2, [sp, #1]
 8017c98:	f8ad 0004 	strh.w	r0, [sp, #4]
 8017c9c:	f8ad 1006 	strh.w	r1, [sp, #6]
 8017ca0:	230b      	movs	r3, #11
 8017ca2:	2207      	movs	r2, #7
 8017ca4:	f8ad 400c 	strh.w	r4, [sp, #12]
 8017ca8:	f88d 3002 	strb.w	r3, [sp, #2]
 8017cac:	f88d 2003 	strb.w	r2, [sp, #3]
 8017cb0:	210e      	movs	r1, #14
 8017cb2:	4668      	mov	r0, sp
 8017cb4:	f7ff fec4 	bl	8017a40 <hci_event>
 8017cb8:	b042      	add	sp, #264	; 0x108
 8017cba:	bd10      	pop	{r4, pc}

08017cbc <hci_le_read_local_p256_public_key_complete_event>:
 8017cbc:	b500      	push	{lr}
 8017cbe:	b0c1      	sub	sp, #260	; 0x104
 8017cc0:	f88d 0004 	strb.w	r0, [sp, #4]
 8017cc4:	2240      	movs	r2, #64	; 0x40
 8017cc6:	f10d 0005 	add.w	r0, sp, #5
 8017cca:	f019 f90c 	bl	8030ee6 <__aeabi_memcpy>
 8017cce:	213e      	movs	r1, #62	; 0x3e
 8017cd0:	f88d 1001 	strb.w	r1, [sp, #1]
 8017cd4:	2108      	movs	r1, #8
 8017cd6:	2242      	movs	r2, #66	; 0x42
 8017cd8:	f88d 1003 	strb.w	r1, [sp, #3]
 8017cdc:	f88d 2002 	strb.w	r2, [sp, #2]
 8017ce0:	2145      	movs	r1, #69	; 0x45
 8017ce2:	4668      	mov	r0, sp
 8017ce4:	f7ff feac 	bl	8017a40 <hci_event>
 8017ce8:	b041      	add	sp, #260	; 0x104
 8017cea:	bd00      	pop	{pc}

08017cec <hci_le_enhanced_connection_complete_event>:
 8017cec:	b5f0      	push	{r4, r5, r6, r7, lr}
 8017cee:	b0c1      	sub	sp, #260	; 0x104
 8017cf0:	f8ad 1005 	strh.w	r1, [sp, #5]
 8017cf4:	9946      	ldr	r1, [sp, #280]	; 0x118
 8017cf6:	f88d 0004 	strb.w	r0, [sp, #4]
 8017cfa:	f88d 2007 	strb.w	r2, [sp, #7]
 8017cfe:	9c49      	ldr	r4, [sp, #292]	; 0x124
 8017d00:	9d4a      	ldr	r5, [sp, #296]	; 0x128
 8017d02:	9e4b      	ldr	r6, [sp, #300]	; 0x12c
 8017d04:	9f4c      	ldr	r7, [sp, #304]	; 0x130
 8017d06:	f88d 3008 	strb.w	r3, [sp, #8]
 8017d0a:	2206      	movs	r2, #6
 8017d0c:	f10d 0009 	add.w	r0, sp, #9
 8017d10:	f019 f8e9 	bl	8030ee6 <__aeabi_memcpy>
 8017d14:	9947      	ldr	r1, [sp, #284]	; 0x11c
 8017d16:	2206      	movs	r2, #6
 8017d18:	f10d 000f 	add.w	r0, sp, #15
 8017d1c:	f019 f8e3 	bl	8030ee6 <__aeabi_memcpy>
 8017d20:	9948      	ldr	r1, [sp, #288]	; 0x120
 8017d22:	2206      	movs	r2, #6
 8017d24:	f10d 0015 	add.w	r0, sp, #21
 8017d28:	f019 f8dd 	bl	8030ee6 <__aeabi_memcpy>
 8017d2c:	213e      	movs	r1, #62	; 0x3e
 8017d2e:	f88d 1001 	strb.w	r1, [sp, #1]
 8017d32:	210a      	movs	r1, #10
 8017d34:	221f      	movs	r2, #31
 8017d36:	f88d 1003 	strb.w	r1, [sp, #3]
 8017d3a:	f8ad 401b 	strh.w	r4, [sp, #27]
 8017d3e:	f8ad 501d 	strh.w	r5, [sp, #29]
 8017d42:	f8ad 601f 	strh.w	r6, [sp, #31]
 8017d46:	f88d 7021 	strb.w	r7, [sp, #33]	; 0x21
 8017d4a:	f88d 2002 	strb.w	r2, [sp, #2]
 8017d4e:	2122      	movs	r1, #34	; 0x22
 8017d50:	4668      	mov	r0, sp
 8017d52:	f7ff fe75 	bl	8017a40 <hci_event>
 8017d56:	b041      	add	sp, #260	; 0x104
 8017d58:	bdf0      	pop	{r4, r5, r6, r7, pc}

08017d5a <hci_le_directed_advertising_report_event>:
 8017d5a:	e92d 41f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, lr}
 8017d5e:	b0c1      	sub	sp, #260	; 0x104
 8017d60:	4605      	mov	r5, r0
 8017d62:	2600      	movs	r6, #0
 8017d64:	460f      	mov	r7, r1
 8017d66:	f88d 5004 	strb.w	r5, [sp, #4]
 8017d6a:	46b0      	mov	r8, r6
 8017d6c:	0028      	movs	r0, r5
 8017d6e:	d01c      	beq.n	8017daa <??hci_le_directed_advertising_report_event_0>
 8017d70:	012e      	lsls	r6, r5, #4
 8017d72:	f10d 0405 	add.w	r4, sp, #5

08017d76 <??hci_le_directed_advertising_report_event_1>:
 8017d76:	7838      	ldrb	r0, [r7, #0]
 8017d78:	2206      	movs	r2, #6
 8017d7a:	1cb9      	adds	r1, r7, #2
 8017d7c:	7020      	strb	r0, [r4, #0]
 8017d7e:	787b      	ldrb	r3, [r7, #1]
 8017d80:	1ca0      	adds	r0, r4, #2
 8017d82:	f108 0801 	add.w	r8, r8, #1
 8017d86:	7063      	strb	r3, [r4, #1]
 8017d88:	f019 f8ad 	bl	8030ee6 <__aeabi_memcpy>
 8017d8c:	7a39      	ldrb	r1, [r7, #8]
 8017d8e:	2206      	movs	r2, #6
 8017d90:	f104 0009 	add.w	r0, r4, #9
 8017d94:	7221      	strb	r1, [r4, #8]
 8017d96:	f107 0109 	add.w	r1, r7, #9
 8017d9a:	f019 f8a4 	bl	8030ee6 <__aeabi_memcpy>
 8017d9e:	7bf8      	ldrb	r0, [r7, #15]
 8017da0:	3710      	adds	r7, #16
 8017da2:	73e0      	strb	r0, [r4, #15]
 8017da4:	3410      	adds	r4, #16
 8017da6:	45a8      	cmp	r8, r5
 8017da8:	dbe5      	blt.n	8017d76 <??hci_le_directed_advertising_report_event_1>

08017daa <??hci_le_directed_advertising_report_event_0>:
 8017daa:	203e      	movs	r0, #62	; 0x3e
 8017dac:	f88d 0001 	strb.w	r0, [sp, #1]
 8017db0:	1cb6      	adds	r6, r6, #2
 8017db2:	f88d 6002 	strb.w	r6, [sp, #2]
 8017db6:	200b      	movs	r0, #11
 8017db8:	f88d 0003 	strb.w	r0, [sp, #3]
 8017dbc:	b2f6      	uxtb	r6, r6
 8017dbe:	1cf1      	adds	r1, r6, #3
 8017dc0:	4668      	mov	r0, sp
 8017dc2:	f7ff fe3d 	bl	8017a40 <hci_event>
 8017dc6:	b042      	add	sp, #264	; 0x108
 8017dc8:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

08017dcc <hci_le_phy_update_complete_event>:
 8017dcc:	b500      	push	{lr}
 8017dce:	b0c1      	sub	sp, #260	; 0x104
 8017dd0:	f8ad 1005 	strh.w	r1, [sp, #5]
 8017dd4:	f88d 2007 	strb.w	r2, [sp, #7]
 8017dd8:	f88d 3008 	strb.w	r3, [sp, #8]
 8017ddc:	213e      	movs	r1, #62	; 0x3e
 8017dde:	f88d 0004 	strb.w	r0, [sp, #4]
 8017de2:	f88d 1001 	strb.w	r1, [sp, #1]
 8017de6:	2206      	movs	r2, #6
 8017de8:	230c      	movs	r3, #12
 8017dea:	f88d 2002 	strb.w	r2, [sp, #2]
 8017dee:	f88d 3003 	strb.w	r3, [sp, #3]
 8017df2:	2109      	movs	r1, #9
 8017df4:	4668      	mov	r0, sp
 8017df6:	f7ff fe23 	bl	8017a40 <hci_event>
 8017dfa:	b041      	add	sp, #260	; 0x104
 8017dfc:	bd00      	pop	{pc}

08017dfe <hci_le_channel_selection_algorithm_event>:
 8017dfe:	b500      	push	{lr}
 8017e00:	b0c1      	sub	sp, #260	; 0x104
 8017e02:	f88d 1006 	strb.w	r1, [sp, #6]
 8017e06:	213e      	movs	r1, #62	; 0x3e
 8017e08:	f8ad 0004 	strh.w	r0, [sp, #4]
 8017e0c:	f88d 1001 	strb.w	r1, [sp, #1]
 8017e10:	2204      	movs	r2, #4
 8017e12:	2314      	movs	r3, #20
 8017e14:	f88d 2002 	strb.w	r2, [sp, #2]
 8017e18:	f88d 3003 	strb.w	r3, [sp, #3]
 8017e1c:	2107      	movs	r1, #7
 8017e1e:	4668      	mov	r0, sp
 8017e20:	f7ff fe0e 	bl	8017a40 <hci_event>
 8017e24:	b041      	add	sp, #260	; 0x104
 8017e26:	bd00      	pop	{pc}

08017e28 <aci_hal_end_of_radio_activity_event>:
 8017e28:	b518      	push	{r3, r4, lr}
 8017e2a:	b0c1      	sub	sp, #260	; 0x104
 8017e2c:	f88d 1006 	strb.w	r1, [sp, #6]
 8017e30:	9c44      	ldr	r4, [sp, #272]	; 0x110
 8017e32:	f88d 0005 	strb.w	r0, [sp, #5]
 8017e36:	f10d 0107 	add.w	r1, sp, #7
 8017e3a:	200a      	movs	r0, #10
 8017e3c:	600a      	str	r2, [r1, #0]
 8017e3e:	22ff      	movs	r2, #255	; 0xff
 8017e40:	f88d 2001 	strb.w	r2, [sp, #1]
 8017e44:	2104      	movs	r1, #4
 8017e46:	f88d 0002 	strb.w	r0, [sp, #2]
 8017e4a:	f88d 1003 	strb.w	r1, [sp, #3]
 8017e4e:	2200      	movs	r2, #0
 8017e50:	f88d 300b 	strb.w	r3, [sp, #11]
 8017e54:	f88d 400c 	strb.w	r4, [sp, #12]
 8017e58:	f88d 2004 	strb.w	r2, [sp, #4]
 8017e5c:	210d      	movs	r1, #13
 8017e5e:	4668      	mov	r0, sp
 8017e60:	f7ff fdee 	bl	8017a40 <hci_event>
 8017e64:	b042      	add	sp, #264	; 0x108
 8017e66:	bd10      	pop	{r4, pc}

08017e68 <aci_hal_fw_error_event>:
 8017e68:	b518      	push	{r3, r4, lr}
 8017e6a:	b0c1      	sub	sp, #260	; 0x104
 8017e6c:	460c      	mov	r4, r1
 8017e6e:	4611      	mov	r1, r2
 8017e70:	f88d 0005 	strb.w	r0, [sp, #5]
 8017e74:	f88d 4006 	strb.w	r4, [sp, #6]
 8017e78:	4622      	mov	r2, r4
 8017e7a:	f10d 0007 	add.w	r0, sp, #7
 8017e7e:	f019 f832 	bl	8030ee6 <__aeabi_memcpy>
 8017e82:	21ff      	movs	r1, #255	; 0xff
 8017e84:	f88d 1001 	strb.w	r1, [sp, #1]
 8017e88:	1d24      	adds	r4, r4, #4
 8017e8a:	f88d 4002 	strb.w	r4, [sp, #2]
 8017e8e:	2006      	movs	r0, #6
 8017e90:	2100      	movs	r1, #0
 8017e92:	f88d 0003 	strb.w	r0, [sp, #3]
 8017e96:	f88d 1004 	strb.w	r1, [sp, #4]
 8017e9a:	b2e4      	uxtb	r4, r4
 8017e9c:	1ce1      	adds	r1, r4, #3
 8017e9e:	4668      	mov	r0, sp
 8017ea0:	f7ff fdce 	bl	8017a40 <hci_event>
 8017ea4:	b042      	add	sp, #264	; 0x108
 8017ea6:	bd10      	pop	{r4, pc}

08017ea8 <aci_gap_limited_discoverable_event>:
 8017ea8:	b500      	push	{lr}
 8017eaa:	b0c1      	sub	sp, #260	; 0x104
 8017eac:	20ff      	movs	r0, #255	; 0xff
 8017eae:	f88d 0001 	strb.w	r0, [sp, #1]
 8017eb2:	4668      	mov	r0, sp
 8017eb4:	2102      	movs	r1, #2
 8017eb6:	7081      	strb	r1, [r0, #2]
 8017eb8:	2104      	movs	r1, #4
 8017eba:	2200      	movs	r2, #0
 8017ebc:	7101      	strb	r1, [r0, #4]
 8017ebe:	f88d 2003 	strb.w	r2, [sp, #3]
 8017ec2:	2105      	movs	r1, #5
 8017ec4:	f7ff fdbc 	bl	8017a40 <hci_event>
 8017ec8:	b041      	add	sp, #260	; 0x104
 8017eca:	bd00      	pop	{pc}

08017ecc <aci_gap_pairing_complete_event>:
 8017ecc:	b500      	push	{lr}
 8017ece:	b0c1      	sub	sp, #260	; 0x104
 8017ed0:	f88d 2008 	strb.w	r2, [sp, #8]
 8017ed4:	f8ad 0005 	strh.w	r0, [sp, #5]
 8017ed8:	2206      	movs	r2, #6
 8017eda:	20ff      	movs	r0, #255	; 0xff
 8017edc:	f88d 2002 	strb.w	r2, [sp, #2]
 8017ee0:	f88d 1007 	strb.w	r1, [sp, #7]
 8017ee4:	f88d 0001 	strb.w	r0, [sp, #1]
 8017ee8:	2301      	movs	r3, #1
 8017eea:	2204      	movs	r2, #4
 8017eec:	f88d 3003 	strb.w	r3, [sp, #3]
 8017ef0:	f88d 2004 	strb.w	r2, [sp, #4]
 8017ef4:	2109      	movs	r1, #9
 8017ef6:	4668      	mov	r0, sp
 8017ef8:	f7ff fda2 	bl	8017a40 <hci_event>
 8017efc:	b041      	add	sp, #260	; 0x104
 8017efe:	bd00      	pop	{pc}

08017f00 <aci_gap_pass_key_req_event>:
 8017f00:	b500      	push	{lr}
 8017f02:	b0c1      	sub	sp, #260	; 0x104
 8017f04:	21ff      	movs	r1, #255	; 0xff
 8017f06:	f8ad 0005 	strh.w	r0, [sp, #5]
 8017f0a:	f88d 1001 	strb.w	r1, [sp, #1]
 8017f0e:	4668      	mov	r0, sp
 8017f10:	2104      	movs	r1, #4
 8017f12:	7081      	strb	r1, [r0, #2]
 8017f14:	2202      	movs	r2, #2
 8017f16:	7101      	strb	r1, [r0, #4]
 8017f18:	f88d 2003 	strb.w	r2, [sp, #3]
 8017f1c:	2107      	movs	r1, #7
 8017f1e:	f7ff fd8f 	bl	8017a40 <hci_event>
 8017f22:	b041      	add	sp, #260	; 0x104
 8017f24:	bd00      	pop	{pc}

08017f26 <aci_gap_authorization_req_event>:
 8017f26:	b500      	push	{lr}
 8017f28:	b0c1      	sub	sp, #260	; 0x104
 8017f2a:	21ff      	movs	r1, #255	; 0xff
 8017f2c:	f8ad 0005 	strh.w	r0, [sp, #5]
 8017f30:	f88d 1001 	strb.w	r1, [sp, #1]
 8017f34:	4668      	mov	r0, sp
 8017f36:	2103      	movs	r1, #3
 8017f38:	2204      	movs	r2, #4
 8017f3a:	70c1      	strb	r1, [r0, #3]
 8017f3c:	f88d 2002 	strb.w	r2, [sp, #2]
 8017f40:	7102      	strb	r2, [r0, #4]
 8017f42:	2107      	movs	r1, #7
 8017f44:	f7ff fd7c 	bl	8017a40 <hci_event>
 8017f48:	b041      	add	sp, #260	; 0x104
 8017f4a:	bd00      	pop	{pc}

08017f4c <aci_gap_slave_security_initiated_event>:
 8017f4c:	b500      	push	{lr}
 8017f4e:	b0c1      	sub	sp, #260	; 0x104
 8017f50:	20ff      	movs	r0, #255	; 0xff
 8017f52:	f88d 0001 	strb.w	r0, [sp, #1]
 8017f56:	4668      	mov	r0, sp
 8017f58:	2102      	movs	r1, #2
 8017f5a:	7081      	strb	r1, [r0, #2]
 8017f5c:	2204      	movs	r2, #4
 8017f5e:	f88d 2003 	strb.w	r2, [sp, #3]
 8017f62:	7102      	strb	r2, [r0, #4]
 8017f64:	2105      	movs	r1, #5
 8017f66:	f7ff fd6b 	bl	8017a40 <hci_event>
 8017f6a:	b041      	add	sp, #260	; 0x104
 8017f6c:	bd00      	pop	{pc}

08017f6e <aci_gap_bond_lost_event>:
 8017f6e:	b500      	push	{lr}
 8017f70:	b0c1      	sub	sp, #260	; 0x104
 8017f72:	20ff      	movs	r0, #255	; 0xff
 8017f74:	f88d 0001 	strb.w	r0, [sp, #1]
 8017f78:	4668      	mov	r0, sp
 8017f7a:	2102      	movs	r1, #2
 8017f7c:	7081      	strb	r1, [r0, #2]
 8017f7e:	2104      	movs	r1, #4
 8017f80:	2205      	movs	r2, #5
 8017f82:	7101      	strb	r1, [r0, #4]
 8017f84:	f88d 2003 	strb.w	r2, [sp, #3]
 8017f88:	2105      	movs	r1, #5
 8017f8a:	f7ff fd59 	bl	8017a40 <hci_event>
 8017f8e:	b041      	add	sp, #260	; 0x104
 8017f90:	bd00      	pop	{pc}

08017f92 <aci_gap_proc_complete_event>:
 8017f92:	b530      	push	{r4, r5, lr}
 8017f94:	b0c1      	sub	sp, #260	; 0x104
 8017f96:	4615      	mov	r5, r2
 8017f98:	f88d 0005 	strb.w	r0, [sp, #5]
 8017f9c:	f88d 1006 	strb.w	r1, [sp, #6]
 8017fa0:	f88d 5007 	strb.w	r5, [sp, #7]
 8017fa4:	4619      	mov	r1, r3
 8017fa6:	a802      	add	r0, sp, #8
 8017fa8:	f018 ff9d 	bl	8030ee6 <__aeabi_memcpy>
 8017fac:	21ff      	movs	r1, #255	; 0xff
 8017fae:	f88d 1001 	strb.w	r1, [sp, #1]
 8017fb2:	1d6d      	adds	r5, r5, #5
 8017fb4:	f88d 5002 	strb.w	r5, [sp, #2]
 8017fb8:	2007      	movs	r0, #7
 8017fba:	2104      	movs	r1, #4
 8017fbc:	f88d 0003 	strb.w	r0, [sp, #3]
 8017fc0:	f88d 1004 	strb.w	r1, [sp, #4]
 8017fc4:	b2ed      	uxtb	r5, r5
 8017fc6:	1ce9      	adds	r1, r5, #3
 8017fc8:	4668      	mov	r0, sp
 8017fca:	f7ff fd39 	bl	8017a40 <hci_event>
 8017fce:	b042      	add	sp, #264	; 0x108
 8017fd0:	bd20      	pop	{r5, pc}

08017fd2 <aci_gap_addr_not_resolved_event>:
 8017fd2:	21ff      	movs	r1, #255	; 0xff
 8017fd4:	b500      	push	{lr}
 8017fd6:	b0c1      	sub	sp, #260	; 0x104
 8017fd8:	f88d 1001 	strb.w	r1, [sp, #1]
 8017fdc:	2108      	movs	r1, #8
 8017fde:	f8ad 0005 	strh.w	r0, [sp, #5]
 8017fe2:	2204      	movs	r2, #4
 8017fe4:	f88d 1003 	strb.w	r1, [sp, #3]
 8017fe8:	f88d 2002 	strb.w	r2, [sp, #2]
 8017fec:	f88d 2004 	strb.w	r2, [sp, #4]
 8017ff0:	2107      	movs	r1, #7
 8017ff2:	4668      	mov	r0, sp
 8017ff4:	f7ff fd24 	bl	8017a40 <hci_event>
 8017ff8:	b041      	add	sp, #260	; 0x104
 8017ffa:	bd00      	pop	{pc}

08017ffc <aci_gap_numeric_comparison_value_event>:
 8017ffc:	b500      	push	{lr}
 8017ffe:	b0c1      	sub	sp, #260	; 0x104
 8018000:	f8ad 0005 	strh.w	r0, [sp, #5]
 8018004:	f10d 0007 	add.w	r0, sp, #7
 8018008:	6001      	str	r1, [r0, #0]
 801800a:	21ff      	movs	r1, #255	; 0xff
 801800c:	f88d 1001 	strb.w	r1, [sp, #1]
 8018010:	2208      	movs	r2, #8
 8018012:	f88d 2002 	strb.w	r2, [sp, #2]
 8018016:	2109      	movs	r1, #9
 8018018:	f88d 1003 	strb.w	r1, [sp, #3]
 801801c:	2204      	movs	r2, #4
 801801e:	f88d 2004 	strb.w	r2, [sp, #4]
 8018022:	210b      	movs	r1, #11
 8018024:	4668      	mov	r0, sp
 8018026:	f7ff fd0b 	bl	8017a40 <hci_event>
 801802a:	b041      	add	sp, #260	; 0x104
 801802c:	bd00      	pop	{pc}

0801802e <aci_gap_keypress_notification_event>:
 801802e:	b500      	push	{lr}
 8018030:	b0c1      	sub	sp, #260	; 0x104
 8018032:	f8ad 0005 	strh.w	r0, [sp, #5]
 8018036:	f88d 1007 	strb.w	r1, [sp, #7]
 801803a:	2305      	movs	r3, #5
 801803c:	20ff      	movs	r0, #255	; 0xff
 801803e:	f88d 3002 	strb.w	r3, [sp, #2]
 8018042:	210a      	movs	r1, #10
 8018044:	f88d 0001 	strb.w	r0, [sp, #1]
 8018048:	f88d 1003 	strb.w	r1, [sp, #3]
 801804c:	2304      	movs	r3, #4
 801804e:	f88d 3004 	strb.w	r3, [sp, #4]
 8018052:	2108      	movs	r1, #8
 8018054:	4668      	mov	r0, sp
 8018056:	f7ff fcf3 	bl	8017a40 <hci_event>
 801805a:	b041      	add	sp, #260	; 0x104
 801805c:	bd00      	pop	{pc}

0801805e <aci_l2cap_connection_update_resp_event>:
 801805e:	b500      	push	{lr}
 8018060:	b0c1      	sub	sp, #260	; 0x104
 8018062:	f8ad 0005 	strh.w	r0, [sp, #5]
 8018066:	f8ad 1007 	strh.w	r1, [sp, #7]
 801806a:	22ff      	movs	r2, #255	; 0xff
 801806c:	f88d 2001 	strb.w	r2, [sp, #1]
 8018070:	2006      	movs	r0, #6
 8018072:	2100      	movs	r1, #0
 8018074:	f88d 0002 	strb.w	r0, [sp, #2]
 8018078:	f88d 1003 	strb.w	r1, [sp, #3]
 801807c:	2208      	movs	r2, #8
 801807e:	f88d 2004 	strb.w	r2, [sp, #4]
 8018082:	2109      	movs	r1, #9
 8018084:	4668      	mov	r0, sp
 8018086:	f7ff fcdb 	bl	8017a40 <hci_event>
 801808a:	b041      	add	sp, #260	; 0x104
 801808c:	bd00      	pop	{pc}

0801808e <aci_l2cap_proc_timeout_event>:
 801808e:	b518      	push	{r3, r4, lr}
 8018090:	b0c1      	sub	sp, #260	; 0x104
 8018092:	460c      	mov	r4, r1
 8018094:	4611      	mov	r1, r2
 8018096:	f8ad 0005 	strh.w	r0, [sp, #5]
 801809a:	f88d 4007 	strb.w	r4, [sp, #7]
 801809e:	4622      	mov	r2, r4
 80180a0:	a802      	add	r0, sp, #8
 80180a2:	f018 ff20 	bl	8030ee6 <__aeabi_memcpy>
 80180a6:	21ff      	movs	r1, #255	; 0xff
 80180a8:	f88d 1001 	strb.w	r1, [sp, #1]
 80180ac:	1d64      	adds	r4, r4, #5
 80180ae:	f88d 4002 	strb.w	r4, [sp, #2]
 80180b2:	2001      	movs	r0, #1
 80180b4:	2108      	movs	r1, #8
 80180b6:	f88d 0003 	strb.w	r0, [sp, #3]
 80180ba:	f88d 1004 	strb.w	r1, [sp, #4]
 80180be:	b2e4      	uxtb	r4, r4
 80180c0:	1ce1      	adds	r1, r4, #3
 80180c2:	4668      	mov	r0, sp
 80180c4:	f7ff fcbc 	bl	8017a40 <hci_event>
 80180c8:	b042      	add	sp, #264	; 0x108
 80180ca:	bd10      	pop	{r4, pc}

080180cc <aci_l2cap_connection_update_req_event>:
 80180cc:	b578      	push	{r3, r4, r5, r6, lr}
 80180ce:	b0c1      	sub	sp, #260	; 0x104
 80180d0:	f8ad 2008 	strh.w	r2, [sp, #8]
 80180d4:	9e46      	ldr	r6, [sp, #280]	; 0x118
 80180d6:	9d47      	ldr	r5, [sp, #284]	; 0x11c
 80180d8:	9c48      	ldr	r4, [sp, #288]	; 0x120
 80180da:	f8ad 0005 	strh.w	r0, [sp, #5]
 80180de:	f88d 1007 	strb.w	r1, [sp, #7]
 80180e2:	22ff      	movs	r2, #255	; 0xff
 80180e4:	f88d 2001 	strb.w	r2, [sp, #1]
 80180e8:	200f      	movs	r0, #15
 80180ea:	2102      	movs	r1, #2
 80180ec:	f88d 0002 	strb.w	r0, [sp, #2]
 80180f0:	f88d 1003 	strb.w	r1, [sp, #3]
 80180f4:	2208      	movs	r2, #8
 80180f6:	f8ad 300a 	strh.w	r3, [sp, #10]
 80180fa:	f8ad 600c 	strh.w	r6, [sp, #12]
 80180fe:	f8ad 500e 	strh.w	r5, [sp, #14]
 8018102:	f8ad 4010 	strh.w	r4, [sp, #16]
 8018106:	f88d 2004 	strb.w	r2, [sp, #4]
 801810a:	2112      	movs	r1, #18
 801810c:	4668      	mov	r0, sp
 801810e:	f7ff fc97 	bl	8017a40 <hci_event>
 8018112:	b042      	add	sp, #264	; 0x108
 8018114:	bd70      	pop	{r4, r5, r6, pc}

08018116 <aci_l2cap_command_reject_event>:
 8018116:	b518      	push	{r3, r4, lr}
 8018118:	b0c1      	sub	sp, #260	; 0x104
 801811a:	f88d 1007 	strb.w	r1, [sp, #7]
 801811e:	9944      	ldr	r1, [sp, #272]	; 0x110
 8018120:	461c      	mov	r4, r3
 8018122:	f8ad 0005 	strh.w	r0, [sp, #5]
 8018126:	f8ad 2008 	strh.w	r2, [sp, #8]
 801812a:	f88d 400a 	strb.w	r4, [sp, #10]
 801812e:	4622      	mov	r2, r4
 8018130:	f10d 000b 	add.w	r0, sp, #11
 8018134:	f018 fed7 	bl	8030ee6 <__aeabi_memcpy>
 8018138:	21ff      	movs	r1, #255	; 0xff
 801813a:	f88d 1001 	strb.w	r1, [sp, #1]
 801813e:	3408      	adds	r4, #8
 8018140:	f88d 4002 	strb.w	r4, [sp, #2]
 8018144:	200a      	movs	r0, #10
 8018146:	2108      	movs	r1, #8
 8018148:	f88d 0003 	strb.w	r0, [sp, #3]
 801814c:	f88d 1004 	strb.w	r1, [sp, #4]
 8018150:	b2e4      	uxtb	r4, r4
 8018152:	1ce1      	adds	r1, r4, #3
 8018154:	4668      	mov	r0, sp
 8018156:	f7ff fc73 	bl	8017a40 <hci_event>
 801815a:	b042      	add	sp, #264	; 0x108
 801815c:	bd10      	pop	{r4, pc}

0801815e <aci_gatt_attribute_modified_event>:
 801815e:	b518      	push	{r3, r4, lr}
 8018160:	b0c1      	sub	sp, #260	; 0x104
 8018162:	f8ad 1007 	strh.w	r1, [sp, #7]
 8018166:	9944      	ldr	r1, [sp, #272]	; 0x110
 8018168:	461c      	mov	r4, r3
 801816a:	f8ad 0005 	strh.w	r0, [sp, #5]
 801816e:	f8ad 2009 	strh.w	r2, [sp, #9]
 8018172:	f8ad 400b 	strh.w	r4, [sp, #11]
 8018176:	4622      	mov	r2, r4
 8018178:	f10d 000d 	add.w	r0, sp, #13
 801817c:	f018 feb3 	bl	8030ee6 <__aeabi_memcpy>
 8018180:	21ff      	movs	r1, #255	; 0xff
 8018182:	f88d 1001 	strb.w	r1, [sp, #1]
 8018186:	340a      	adds	r4, #10
 8018188:	f88d 4002 	strb.w	r4, [sp, #2]
 801818c:	2101      	movs	r1, #1
 801818e:	200c      	movs	r0, #12
 8018190:	f88d 1003 	strb.w	r1, [sp, #3]
 8018194:	f88d 0004 	strb.w	r0, [sp, #4]
 8018198:	b2e4      	uxtb	r4, r4
 801819a:	1ce1      	adds	r1, r4, #3
 801819c:	4668      	mov	r0, sp
 801819e:	f7ff fc4f 	bl	8017a40 <hci_event>
 80181a2:	b042      	add	sp, #264	; 0x108
 80181a4:	bd10      	pop	{r4, pc}

080181a6 <aci_gatt_proc_timeout_event>:
 80181a6:	b500      	push	{lr}
 80181a8:	b0c1      	sub	sp, #260	; 0x104
 80181aa:	21ff      	movs	r1, #255	; 0xff
 80181ac:	f8ad 0005 	strh.w	r0, [sp, #5]
 80181b0:	f88d 1001 	strb.w	r1, [sp, #1]
 80181b4:	4668      	mov	r0, sp
 80181b6:	2104      	movs	r1, #4
 80181b8:	7081      	strb	r1, [r0, #2]
 80181ba:	210c      	movs	r1, #12
 80181bc:	2202      	movs	r2, #2
 80181be:	7101      	strb	r1, [r0, #4]
 80181c0:	f88d 2003 	strb.w	r2, [sp, #3]
 80181c4:	2107      	movs	r1, #7
 80181c6:	f7ff fc3b 	bl	8017a40 <hci_event>
 80181ca:	b041      	add	sp, #260	; 0x104
 80181cc:	bd00      	pop	{pc}

080181ce <aci_att_exchange_mtu_resp_event>:
 80181ce:	b500      	push	{lr}
 80181d0:	b0c1      	sub	sp, #260	; 0x104
 80181d2:	f8ad 0005 	strh.w	r0, [sp, #5]
 80181d6:	f8ad 1007 	strh.w	r1, [sp, #7]
 80181da:	22ff      	movs	r2, #255	; 0xff
 80181dc:	f88d 2001 	strb.w	r2, [sp, #1]
 80181e0:	2006      	movs	r0, #6
 80181e2:	2103      	movs	r1, #3
 80181e4:	f88d 0002 	strb.w	r0, [sp, #2]
 80181e8:	f88d 1003 	strb.w	r1, [sp, #3]
 80181ec:	220c      	movs	r2, #12
 80181ee:	f88d 2004 	strb.w	r2, [sp, #4]
 80181f2:	2109      	movs	r1, #9
 80181f4:	4668      	mov	r0, sp
 80181f6:	f7ff fc23 	bl	8017a40 <hci_event>
 80181fa:	b041      	add	sp, #260	; 0x104
 80181fc:	bd00      	pop	{pc}

080181fe <aci_att_find_info_resp_event>:
 80181fe:	b518      	push	{r3, r4, lr}
 8018200:	b0c1      	sub	sp, #260	; 0x104
 8018202:	4614      	mov	r4, r2
 8018204:	2afa      	cmp	r2, #250	; 0xfa
 8018206:	bfa8      	it	ge
 8018208:	24f9      	movge	r4, #249	; 0xf9
 801820a:	f8ad 0005 	strh.w	r0, [sp, #5]
 801820e:	f88d 1007 	strb.w	r1, [sp, #7]
 8018212:	f88d 4008 	strb.w	r4, [sp, #8]
 8018216:	4622      	mov	r2, r4
 8018218:	4619      	mov	r1, r3
 801821a:	f10d 0009 	add.w	r0, sp, #9
 801821e:	f018 fe62 	bl	8030ee6 <__aeabi_memcpy>
 8018222:	21ff      	movs	r1, #255	; 0xff
 8018224:	f88d 1001 	strb.w	r1, [sp, #1]
 8018228:	1da4      	adds	r4, r4, #6
 801822a:	4668      	mov	r0, sp
 801822c:	7084      	strb	r4, [r0, #2]
 801822e:	2104      	movs	r1, #4
 8018230:	70c1      	strb	r1, [r0, #3]
 8018232:	220c      	movs	r2, #12
 8018234:	b2e4      	uxtb	r4, r4
 8018236:	7102      	strb	r2, [r0, #4]
 8018238:	1ce1      	adds	r1, r4, #3
 801823a:	f7ff fc01 	bl	8017a40 <hci_event>
 801823e:	b042      	add	sp, #264	; 0x108
 8018240:	bd10      	pop	{r4, pc}

08018242 <aci_att_find_by_type_value_resp_event>:
 8018242:	b560      	push	{r5, r6, lr}
 8018244:	b0c1      	sub	sp, #260	; 0x104
 8018246:	460b      	mov	r3, r1
 8018248:	2100      	movs	r1, #0
 801824a:	f8ad 0005 	strh.w	r0, [sp, #5]
 801824e:	f88d 3007 	strb.w	r3, [sp, #7]
 8018252:	0018      	movs	r0, r3
 8018254:	d00b      	beq.n	801826e <??aci_att_find_by_type_value_resp_event_0>
 8018256:	0099      	lsls	r1, r3, #2
 8018258:	a802      	add	r0, sp, #8

0801825a <??aci_att_find_by_type_value_resp_event_1>:
 801825a:	f832 5b02 	ldrh.w	r5, [r2], #2
 801825e:	1e5b      	subs	r3, r3, #1
 8018260:	f820 5b02 	strh.w	r5, [r0], #2
 8018264:	f832 6b02 	ldrh.w	r6, [r2], #2
 8018268:	f820 6b02 	strh.w	r6, [r0], #2
 801826c:	d1f5      	bne.n	801825a <??aci_att_find_by_type_value_resp_event_1>

0801826e <??aci_att_find_by_type_value_resp_event_0>:
 801826e:	20ff      	movs	r0, #255	; 0xff
 8018270:	f88d 0001 	strb.w	r0, [sp, #1]
 8018274:	1d49      	adds	r1, r1, #5
 8018276:	f88d 1002 	strb.w	r1, [sp, #2]
 801827a:	2005      	movs	r0, #5
 801827c:	f88d 0003 	strb.w	r0, [sp, #3]
 8018280:	220c      	movs	r2, #12
 8018282:	b2c9      	uxtb	r1, r1
 8018284:	f88d 2004 	strb.w	r2, [sp, #4]
 8018288:	1cc9      	adds	r1, r1, #3
 801828a:	4668      	mov	r0, sp
 801828c:	f7ff fbd8 	bl	8017a40 <hci_event>
 8018290:	b041      	add	sp, #260	; 0x104
 8018292:	bd60      	pop	{r5, r6, pc}

08018294 <aci_att_read_by_type_resp_event>:
 8018294:	b518      	push	{r3, r4, lr}
 8018296:	b0c1      	sub	sp, #260	; 0x104
 8018298:	4614      	mov	r4, r2
 801829a:	2afa      	cmp	r2, #250	; 0xfa
 801829c:	bfa8      	it	ge
 801829e:	24f9      	movge	r4, #249	; 0xf9
 80182a0:	f8ad 0005 	strh.w	r0, [sp, #5]
 80182a4:	f88d 1007 	strb.w	r1, [sp, #7]
 80182a8:	f88d 4008 	strb.w	r4, [sp, #8]
 80182ac:	4622      	mov	r2, r4
 80182ae:	4619      	mov	r1, r3
 80182b0:	f10d 0009 	add.w	r0, sp, #9
 80182b4:	f018 fe17 	bl	8030ee6 <__aeabi_memcpy>
 80182b8:	21ff      	movs	r1, #255	; 0xff
 80182ba:	f88d 1001 	strb.w	r1, [sp, #1]
 80182be:	1da4      	adds	r4, r4, #6
 80182c0:	f88d 4002 	strb.w	r4, [sp, #2]
 80182c4:	2106      	movs	r1, #6
 80182c6:	200c      	movs	r0, #12
 80182c8:	f88d 1003 	strb.w	r1, [sp, #3]
 80182cc:	f88d 0004 	strb.w	r0, [sp, #4]
 80182d0:	b2e4      	uxtb	r4, r4
 80182d2:	1ce1      	adds	r1, r4, #3
 80182d4:	4668      	mov	r0, sp
 80182d6:	f7ff fbb3 	bl	8017a40 <hci_event>
 80182da:	b042      	add	sp, #264	; 0x108
 80182dc:	bd10      	pop	{r4, pc}

080182de <aci_att_read_resp_event>:
 80182de:	b518      	push	{r3, r4, lr}
 80182e0:	460c      	mov	r4, r1
 80182e2:	b0c1      	sub	sp, #260	; 0x104
 80182e4:	4611      	mov	r1, r2
 80182e6:	2cfb      	cmp	r4, #251	; 0xfb
 80182e8:	bfa8      	it	ge
 80182ea:	24fa      	movge	r4, #250	; 0xfa
 80182ec:	f8ad 0005 	strh.w	r0, [sp, #5]
 80182f0:	f88d 4007 	strb.w	r4, [sp, #7]
 80182f4:	4622      	mov	r2, r4
 80182f6:	a802      	add	r0, sp, #8
 80182f8:	f018 fdf5 	bl	8030ee6 <__aeabi_memcpy>
 80182fc:	21ff      	movs	r1, #255	; 0xff
 80182fe:	f88d 1001 	strb.w	r1, [sp, #1]
 8018302:	1d64      	adds	r4, r4, #5
 8018304:	f88d 4002 	strb.w	r4, [sp, #2]
 8018308:	2007      	movs	r0, #7
 801830a:	210c      	movs	r1, #12
 801830c:	f88d 0003 	strb.w	r0, [sp, #3]
 8018310:	f88d 1004 	strb.w	r1, [sp, #4]
 8018314:	b2e4      	uxtb	r4, r4
 8018316:	1ce1      	adds	r1, r4, #3
 8018318:	4668      	mov	r0, sp
 801831a:	f7ff fb91 	bl	8017a40 <hci_event>
 801831e:	b042      	add	sp, #264	; 0x108
 8018320:	bd10      	pop	{r4, pc}

08018322 <aci_att_read_blob_resp_event>:
 8018322:	b518      	push	{r3, r4, lr}
 8018324:	460c      	mov	r4, r1
 8018326:	b0c1      	sub	sp, #260	; 0x104
 8018328:	4611      	mov	r1, r2
 801832a:	2cfb      	cmp	r4, #251	; 0xfb
 801832c:	bfa8      	it	ge
 801832e:	24fa      	movge	r4, #250	; 0xfa
 8018330:	f8ad 0005 	strh.w	r0, [sp, #5]
 8018334:	f88d 4007 	strb.w	r4, [sp, #7]
 8018338:	4622      	mov	r2, r4
 801833a:	a802      	add	r0, sp, #8
 801833c:	f018 fdd3 	bl	8030ee6 <__aeabi_memcpy>
 8018340:	21ff      	movs	r1, #255	; 0xff
 8018342:	f88d 1001 	strb.w	r1, [sp, #1]
 8018346:	1d64      	adds	r4, r4, #5
 8018348:	f88d 4002 	strb.w	r4, [sp, #2]
 801834c:	2008      	movs	r0, #8
 801834e:	210c      	movs	r1, #12
 8018350:	f88d 0003 	strb.w	r0, [sp, #3]
 8018354:	f88d 1004 	strb.w	r1, [sp, #4]
 8018358:	b2e4      	uxtb	r4, r4
 801835a:	1ce1      	adds	r1, r4, #3
 801835c:	4668      	mov	r0, sp
 801835e:	f7ff fb6f 	bl	8017a40 <hci_event>
 8018362:	b042      	add	sp, #264	; 0x108
 8018364:	bd10      	pop	{r4, pc}

08018366 <aci_att_read_multiple_resp_event>:
 8018366:	b518      	push	{r3, r4, lr}
 8018368:	460c      	mov	r4, r1
 801836a:	b0c1      	sub	sp, #260	; 0x104
 801836c:	4611      	mov	r1, r2
 801836e:	2cfb      	cmp	r4, #251	; 0xfb
 8018370:	bfa8      	it	ge
 8018372:	24fa      	movge	r4, #250	; 0xfa
 8018374:	f8ad 0005 	strh.w	r0, [sp, #5]
 8018378:	f88d 4007 	strb.w	r4, [sp, #7]
 801837c:	4622      	mov	r2, r4
 801837e:	a802      	add	r0, sp, #8
 8018380:	f018 fdb1 	bl	8030ee6 <__aeabi_memcpy>
 8018384:	21ff      	movs	r1, #255	; 0xff
 8018386:	f88d 1001 	strb.w	r1, [sp, #1]
 801838a:	1d64      	adds	r4, r4, #5
 801838c:	f88d 4002 	strb.w	r4, [sp, #2]
 8018390:	2009      	movs	r0, #9
 8018392:	210c      	movs	r1, #12
 8018394:	f88d 0003 	strb.w	r0, [sp, #3]
 8018398:	f88d 1004 	strb.w	r1, [sp, #4]
 801839c:	b2e4      	uxtb	r4, r4
 801839e:	1ce1      	adds	r1, r4, #3
 80183a0:	4668      	mov	r0, sp
 80183a2:	f7ff fb4d 	bl	8017a40 <hci_event>
 80183a6:	b042      	add	sp, #264	; 0x108
 80183a8:	bd10      	pop	{r4, pc}

080183aa <aci_att_read_by_group_type_resp_event>:
 80183aa:	b518      	push	{r3, r4, lr}
 80183ac:	b0c1      	sub	sp, #260	; 0x104
 80183ae:	4614      	mov	r4, r2
 80183b0:	2af7      	cmp	r2, #247	; 0xf7
 80183b2:	bfa8      	it	ge
 80183b4:	24f6      	movge	r4, #246	; 0xf6
 80183b6:	f8ad 0005 	strh.w	r0, [sp, #5]
 80183ba:	f88d 1007 	strb.w	r1, [sp, #7]
 80183be:	f88d 4008 	strb.w	r4, [sp, #8]
 80183c2:	4622      	mov	r2, r4
 80183c4:	4619      	mov	r1, r3
 80183c6:	f10d 0009 	add.w	r0, sp, #9
 80183ca:	f018 fd8c 	bl	8030ee6 <__aeabi_memcpy>
 80183ce:	21ff      	movs	r1, #255	; 0xff
 80183d0:	f88d 1001 	strb.w	r1, [sp, #1]
 80183d4:	1da4      	adds	r4, r4, #6
 80183d6:	f88d 4002 	strb.w	r4, [sp, #2]
 80183da:	210a      	movs	r1, #10
 80183dc:	200c      	movs	r0, #12
 80183de:	f88d 1003 	strb.w	r1, [sp, #3]
 80183e2:	f88d 0004 	strb.w	r0, [sp, #4]
 80183e6:	b2e4      	uxtb	r4, r4
 80183e8:	1ce1      	adds	r1, r4, #3
 80183ea:	4668      	mov	r0, sp
 80183ec:	f7ff fb28 	bl	8017a40 <hci_event>
 80183f0:	b042      	add	sp, #264	; 0x108
 80183f2:	bd10      	pop	{r4, pc}

080183f4 <aci_att_prepare_write_resp_event>:
 80183f4:	b518      	push	{r3, r4, lr}
 80183f6:	b0c1      	sub	sp, #260	; 0x104
 80183f8:	f8ad 1007 	strh.w	r1, [sp, #7]
 80183fc:	9944      	ldr	r1, [sp, #272]	; 0x110
 80183fe:	461c      	mov	r4, r3
 8018400:	f8ad 0005 	strh.w	r0, [sp, #5]
 8018404:	f8ad 2009 	strh.w	r2, [sp, #9]
 8018408:	f88d 400b 	strb.w	r4, [sp, #11]
 801840c:	4622      	mov	r2, r4
 801840e:	a803      	add	r0, sp, #12
 8018410:	f018 fd69 	bl	8030ee6 <__aeabi_memcpy>
 8018414:	3409      	adds	r4, #9
 8018416:	21ff      	movs	r1, #255	; 0xff
 8018418:	f88d 4002 	strb.w	r4, [sp, #2]
 801841c:	200c      	movs	r0, #12
 801841e:	f88d 1001 	strb.w	r1, [sp, #1]
 8018422:	f88d 0003 	strb.w	r0, [sp, #3]
 8018426:	f88d 0004 	strb.w	r0, [sp, #4]
 801842a:	b2e4      	uxtb	r4, r4
 801842c:	1ce1      	adds	r1, r4, #3
 801842e:	4668      	mov	r0, sp
 8018430:	f7ff fb06 	bl	8017a40 <hci_event>
 8018434:	b042      	add	sp, #264	; 0x108
 8018436:	bd10      	pop	{r4, pc}

08018438 <aci_att_exec_write_resp_event>:
 8018438:	21ff      	movs	r1, #255	; 0xff
 801843a:	b500      	push	{lr}
 801843c:	2204      	movs	r2, #4
 801843e:	b0c1      	sub	sp, #260	; 0x104
 8018440:	f88d 1001 	strb.w	r1, [sp, #1]
 8018444:	f88d 2002 	strb.w	r2, [sp, #2]
 8018448:	210d      	movs	r1, #13
 801844a:	f8ad 0005 	strh.w	r0, [sp, #5]
 801844e:	f88d 1003 	strb.w	r1, [sp, #3]
 8018452:	220c      	movs	r2, #12
 8018454:	f88d 2004 	strb.w	r2, [sp, #4]
 8018458:	2107      	movs	r1, #7
 801845a:	4668      	mov	r0, sp
 801845c:	f7ff faf0 	bl	8017a40 <hci_event>
 8018460:	b041      	add	sp, #260	; 0x104
 8018462:	bd00      	pop	{pc}

08018464 <aci_gatt_indication_event>:
 8018464:	b518      	push	{r3, r4, lr}
 8018466:	b0c1      	sub	sp, #260	; 0x104
 8018468:	4614      	mov	r4, r2
 801846a:	2af9      	cmp	r2, #249	; 0xf9
 801846c:	bfa8      	it	ge
 801846e:	24f8      	movge	r4, #248	; 0xf8
 8018470:	f8ad 0005 	strh.w	r0, [sp, #5]
 8018474:	f8ad 1007 	strh.w	r1, [sp, #7]
 8018478:	f88d 4009 	strb.w	r4, [sp, #9]
 801847c:	4622      	mov	r2, r4
 801847e:	4619      	mov	r1, r3
 8018480:	f10d 000a 	add.w	r0, sp, #10
 8018484:	f018 fd2f 	bl	8030ee6 <__aeabi_memcpy>
 8018488:	21ff      	movs	r1, #255	; 0xff
 801848a:	f88d 1001 	strb.w	r1, [sp, #1]
 801848e:	1de4      	adds	r4, r4, #7
 8018490:	f88d 4002 	strb.w	r4, [sp, #2]
 8018494:	200e      	movs	r0, #14
 8018496:	210c      	movs	r1, #12
 8018498:	f88d 0003 	strb.w	r0, [sp, #3]
 801849c:	f88d 1004 	strb.w	r1, [sp, #4]
 80184a0:	b2e4      	uxtb	r4, r4
 80184a2:	1ce1      	adds	r1, r4, #3
 80184a4:	4668      	mov	r0, sp
 80184a6:	f7ff facb 	bl	8017a40 <hci_event>
 80184aa:	b042      	add	sp, #264	; 0x108
 80184ac:	bd10      	pop	{r4, pc}

080184ae <aci_gatt_notification_event>:
 80184ae:	b518      	push	{r3, r4, lr}
 80184b0:	b0c1      	sub	sp, #260	; 0x104
 80184b2:	4614      	mov	r4, r2
 80184b4:	2af9      	cmp	r2, #249	; 0xf9
 80184b6:	bfa8      	it	ge
 80184b8:	24f8      	movge	r4, #248	; 0xf8
 80184ba:	f8ad 0005 	strh.w	r0, [sp, #5]
 80184be:	f8ad 1007 	strh.w	r1, [sp, #7]
 80184c2:	f88d 4009 	strb.w	r4, [sp, #9]
 80184c6:	4622      	mov	r2, r4
 80184c8:	4619      	mov	r1, r3
 80184ca:	f10d 000a 	add.w	r0, sp, #10
 80184ce:	f018 fd0a 	bl	8030ee6 <__aeabi_memcpy>
 80184d2:	21ff      	movs	r1, #255	; 0xff
 80184d4:	f88d 1001 	strb.w	r1, [sp, #1]
 80184d8:	1de4      	adds	r4, r4, #7
 80184da:	f88d 4002 	strb.w	r4, [sp, #2]
 80184de:	200f      	movs	r0, #15
 80184e0:	210c      	movs	r1, #12
 80184e2:	f88d 0003 	strb.w	r0, [sp, #3]
 80184e6:	f88d 1004 	strb.w	r1, [sp, #4]
 80184ea:	b2e4      	uxtb	r4, r4
 80184ec:	1ce1      	adds	r1, r4, #3
 80184ee:	4668      	mov	r0, sp
 80184f0:	f7ff faa6 	bl	8017a40 <hci_event>
 80184f4:	b042      	add	sp, #264	; 0x108
 80184f6:	bd10      	pop	{r4, pc}

080184f8 <aci_gatt_proc_complete_event>:
 80184f8:	b500      	push	{lr}
 80184fa:	b0c1      	sub	sp, #260	; 0x104
 80184fc:	f8ad 0005 	strh.w	r0, [sp, #5]
 8018500:	f88d 1007 	strb.w	r1, [sp, #7]
 8018504:	22ff      	movs	r2, #255	; 0xff
 8018506:	f88d 2001 	strb.w	r2, [sp, #1]
 801850a:	2005      	movs	r0, #5
 801850c:	2110      	movs	r1, #16
 801850e:	f88d 0002 	strb.w	r0, [sp, #2]
 8018512:	f88d 1003 	strb.w	r1, [sp, #3]
 8018516:	220c      	movs	r2, #12
 8018518:	f88d 2004 	strb.w	r2, [sp, #4]
 801851c:	2108      	movs	r1, #8
 801851e:	4668      	mov	r0, sp
 8018520:	f7ff fa8e 	bl	8017a40 <hci_event>
 8018524:	b041      	add	sp, #260	; 0x104
 8018526:	bd00      	pop	{pc}

08018528 <aci_gatt_error_resp_event>:
 8018528:	b500      	push	{lr}
 801852a:	b0c1      	sub	sp, #260	; 0x104
 801852c:	f8ad 2008 	strh.w	r2, [sp, #8]
 8018530:	f8ad 0005 	strh.w	r0, [sp, #5]
 8018534:	f88d 1007 	strb.w	r1, [sp, #7]
 8018538:	22ff      	movs	r2, #255	; 0xff
 801853a:	f88d 2001 	strb.w	r2, [sp, #1]
 801853e:	2008      	movs	r0, #8
 8018540:	2111      	movs	r1, #17
 8018542:	f88d 0002 	strb.w	r0, [sp, #2]
 8018546:	f88d 1003 	strb.w	r1, [sp, #3]
 801854a:	220c      	movs	r2, #12
 801854c:	f88d 300a 	strb.w	r3, [sp, #10]
 8018550:	f88d 2004 	strb.w	r2, [sp, #4]
 8018554:	210b      	movs	r1, #11
 8018556:	4668      	mov	r0, sp
 8018558:	f7ff fa72 	bl	8017a40 <hci_event>
 801855c:	b041      	add	sp, #260	; 0x104
 801855e:	bd00      	pop	{pc}

08018560 <aci_gatt_disc_read_char_by_uuid_resp_event>:
 8018560:	b518      	push	{r3, r4, lr}
 8018562:	b0c1      	sub	sp, #260	; 0x104
 8018564:	4614      	mov	r4, r2
 8018566:	2af9      	cmp	r2, #249	; 0xf9
 8018568:	bfa8      	it	ge
 801856a:	24f8      	movge	r4, #248	; 0xf8
 801856c:	f8ad 0005 	strh.w	r0, [sp, #5]
 8018570:	f8ad 1007 	strh.w	r1, [sp, #7]
 8018574:	f88d 4009 	strb.w	r4, [sp, #9]
 8018578:	4622      	mov	r2, r4
 801857a:	4619      	mov	r1, r3
 801857c:	f10d 000a 	add.w	r0, sp, #10
 8018580:	f018 fcb1 	bl	8030ee6 <__aeabi_memcpy>
 8018584:	21ff      	movs	r1, #255	; 0xff
 8018586:	f88d 1001 	strb.w	r1, [sp, #1]
 801858a:	1de4      	adds	r4, r4, #7
 801858c:	f88d 4002 	strb.w	r4, [sp, #2]
 8018590:	2012      	movs	r0, #18
 8018592:	210c      	movs	r1, #12
 8018594:	f88d 0003 	strb.w	r0, [sp, #3]
 8018598:	f88d 1004 	strb.w	r1, [sp, #4]
 801859c:	b2e4      	uxtb	r4, r4
 801859e:	1ce1      	adds	r1, r4, #3
 80185a0:	4668      	mov	r0, sp
 80185a2:	f7ff fa4d 	bl	8017a40 <hci_event>
 80185a6:	b042      	add	sp, #264	; 0x108
 80185a8:	bd10      	pop	{r4, pc}

080185aa <aci_gatt_write_permit_req_event>:
 80185aa:	b518      	push	{r3, r4, lr}
 80185ac:	b0c1      	sub	sp, #260	; 0x104
 80185ae:	4614      	mov	r4, r2
 80185b0:	f8ad 0005 	strh.w	r0, [sp, #5]
 80185b4:	f8ad 1007 	strh.w	r1, [sp, #7]
 80185b8:	f88d 4009 	strb.w	r4, [sp, #9]
 80185bc:	4619      	mov	r1, r3
 80185be:	f10d 000a 	add.w	r0, sp, #10
 80185c2:	f018 fc90 	bl	8030ee6 <__aeabi_memcpy>
 80185c6:	21ff      	movs	r1, #255	; 0xff
 80185c8:	f88d 1001 	strb.w	r1, [sp, #1]
 80185cc:	1de4      	adds	r4, r4, #7
 80185ce:	f88d 4002 	strb.w	r4, [sp, #2]
 80185d2:	2013      	movs	r0, #19
 80185d4:	210c      	movs	r1, #12
 80185d6:	f88d 0003 	strb.w	r0, [sp, #3]
 80185da:	f88d 1004 	strb.w	r1, [sp, #4]
 80185de:	b2e4      	uxtb	r4, r4
 80185e0:	1ce1      	adds	r1, r4, #3
 80185e2:	4668      	mov	r0, sp
 80185e4:	f7ff fa2c 	bl	8017a40 <hci_event>
 80185e8:	b042      	add	sp, #264	; 0x108
 80185ea:	bd10      	pop	{r4, pc}

080185ec <aci_gatt_read_permit_req_event>:
 80185ec:	b500      	push	{lr}
 80185ee:	b0c1      	sub	sp, #260	; 0x104
 80185f0:	f8ad 1007 	strh.w	r1, [sp, #7]
 80185f4:	f8ad 2009 	strh.w	r2, [sp, #9]
 80185f8:	21ff      	movs	r1, #255	; 0xff
 80185fa:	f88d 1001 	strb.w	r1, [sp, #1]
 80185fe:	2208      	movs	r2, #8
 8018600:	f88d 2002 	strb.w	r2, [sp, #2]
 8018604:	2114      	movs	r1, #20
 8018606:	f8ad 0005 	strh.w	r0, [sp, #5]
 801860a:	f88d 1003 	strb.w	r1, [sp, #3]
 801860e:	220c      	movs	r2, #12
 8018610:	f88d 2004 	strb.w	r2, [sp, #4]
 8018614:	210b      	movs	r1, #11
 8018616:	4668      	mov	r0, sp
 8018618:	f7ff fa12 	bl	8017a40 <hci_event>
 801861c:	b041      	add	sp, #260	; 0x104
 801861e:	bd00      	pop	{pc}

08018620 <aci_gatt_read_multi_permit_req_event>:
 8018620:	b530      	push	{r4, r5, lr}
 8018622:	b0c1      	sub	sp, #260	; 0x104
 8018624:	2300      	movs	r3, #0
 8018626:	f8ad 0005 	strh.w	r0, [sp, #5]
 801862a:	f88d 1007 	strb.w	r1, [sp, #7]
 801862e:	0008      	movs	r0, r1
 8018630:	d007      	beq.n	8018642 <??aci_gatt_read_multi_permit_req_event_0>
 8018632:	004b      	lsls	r3, r1, #1
 8018634:	a802      	add	r0, sp, #8

08018636 <??aci_gatt_read_multi_permit_req_event_1>:
 8018636:	f832 5b02 	ldrh.w	r5, [r2], #2
 801863a:	1e49      	subs	r1, r1, #1
 801863c:	f820 5b02 	strh.w	r5, [r0], #2
 8018640:	d1f9      	bne.n	8018636 <??aci_gatt_read_multi_permit_req_event_1>

08018642 <??aci_gatt_read_multi_permit_req_event_0>:
 8018642:	20ff      	movs	r0, #255	; 0xff
 8018644:	f88d 0001 	strb.w	r0, [sp, #1]
 8018648:	1d5b      	adds	r3, r3, #5
 801864a:	f88d 3002 	strb.w	r3, [sp, #2]
 801864e:	2015      	movs	r0, #21
 8018650:	f88d 0003 	strb.w	r0, [sp, #3]
 8018654:	220c      	movs	r2, #12
 8018656:	b2db      	uxtb	r3, r3
 8018658:	f88d 2004 	strb.w	r2, [sp, #4]
 801865c:	1cd9      	adds	r1, r3, #3
 801865e:	4668      	mov	r0, sp
 8018660:	f7ff f9ee 	bl	8017a40 <hci_event>
 8018664:	b042      	add	sp, #264	; 0x108
 8018666:	bd20      	pop	{r5, pc}

08018668 <aci_gatt_tx_pool_available_event>:
 8018668:	b500      	push	{lr}
 801866a:	b0c1      	sub	sp, #260	; 0x104
 801866c:	f8ad 0005 	strh.w	r0, [sp, #5]
 8018670:	f8ad 1007 	strh.w	r1, [sp, #7]
 8018674:	22ff      	movs	r2, #255	; 0xff
 8018676:	f88d 2001 	strb.w	r2, [sp, #1]
 801867a:	2006      	movs	r0, #6
 801867c:	2116      	movs	r1, #22
 801867e:	f88d 0002 	strb.w	r0, [sp, #2]
 8018682:	f88d 1003 	strb.w	r1, [sp, #3]
 8018686:	220c      	movs	r2, #12
 8018688:	f88d 2004 	strb.w	r2, [sp, #4]
 801868c:	2109      	movs	r1, #9
 801868e:	4668      	mov	r0, sp
 8018690:	f7ff f9d6 	bl	8017a40 <hci_event>
 8018694:	b041      	add	sp, #260	; 0x104
 8018696:	bd00      	pop	{pc}

08018698 <aci_gatt_server_confirmation_event>:
 8018698:	b500      	push	{lr}
 801869a:	b0c1      	sub	sp, #260	; 0x104
 801869c:	2204      	movs	r2, #4
 801869e:	2117      	movs	r1, #23
 80186a0:	f8ad 0005 	strh.w	r0, [sp, #5]
 80186a4:	f88d 2002 	strb.w	r2, [sp, #2]
 80186a8:	f88d 1003 	strb.w	r1, [sp, #3]
 80186ac:	20ff      	movs	r0, #255	; 0xff
 80186ae:	220c      	movs	r2, #12
 80186b0:	2104      	movs	r1, #4
 80186b2:	f88d 0001 	strb.w	r0, [sp, #1]
 80186b6:	f88d 2004 	strb.w	r2, [sp, #4]
 80186ba:	f88d 1000 	strb.w	r1, [sp]
 80186be:	2300      	movs	r3, #0
 80186c0:	2200      	movs	r2, #0
 80186c2:	2108      	movs	r1, #8
 80186c4:	4668      	mov	r0, sp
 80186c6:	f00e fe6b 	bl	80273a0 <BLECB_Indication>
 80186ca:	b041      	add	sp, #260	; 0x104
 80186cc:	bd00      	pop	{pc}

080186ce <aci_gatt_prepare_write_permit_req_event>:
 80186ce:	b518      	push	{r3, r4, lr}
 80186d0:	b0c1      	sub	sp, #260	; 0x104
 80186d2:	f8ad 1007 	strh.w	r1, [sp, #7]
 80186d6:	9944      	ldr	r1, [sp, #272]	; 0x110
 80186d8:	461c      	mov	r4, r3
 80186da:	f8ad 0005 	strh.w	r0, [sp, #5]
 80186de:	f8ad 2009 	strh.w	r2, [sp, #9]
 80186e2:	f88d 400b 	strb.w	r4, [sp, #11]
 80186e6:	4622      	mov	r2, r4
 80186e8:	a803      	add	r0, sp, #12
 80186ea:	f018 fbfc 	bl	8030ee6 <__aeabi_memcpy>
 80186ee:	21ff      	movs	r1, #255	; 0xff
 80186f0:	f88d 1001 	strb.w	r1, [sp, #1]
 80186f4:	3409      	adds	r4, #9
 80186f6:	f88d 4002 	strb.w	r4, [sp, #2]
 80186fa:	2018      	movs	r0, #24
 80186fc:	210c      	movs	r1, #12
 80186fe:	f88d 0003 	strb.w	r0, [sp, #3]
 8018702:	f88d 1004 	strb.w	r1, [sp, #4]
 8018706:	b2e4      	uxtb	r4, r4
 8018708:	1ce1      	adds	r1, r4, #3
 801870a:	4668      	mov	r0, sp
 801870c:	f7ff f998 	bl	8017a40 <hci_event>
 8018710:	b042      	add	sp, #264	; 0x108
 8018712:	bd10      	pop	{r4, pc}

08018714 <aci_gatt_read_ext_event>:
 8018714:	b518      	push	{r3, r4, lr}
 8018716:	b0c1      	sub	sp, #260	; 0x104
 8018718:	4614      	mov	r4, r2
 801871a:	f8ad 0005 	strh.w	r0, [sp, #5]
 801871e:	f8ad 1007 	strh.w	r1, [sp, #7]
 8018722:	f8ad 4009 	strh.w	r4, [sp, #9]
 8018726:	4619      	mov	r1, r3
 8018728:	f10d 000b 	add.w	r0, sp, #11
 801872c:	f018 fbdb 	bl	8030ee6 <__aeabi_memcpy>
 8018730:	21ff      	movs	r1, #255	; 0xff
 8018732:	f88d 1001 	strb.w	r1, [sp, #1]
 8018736:	3408      	adds	r4, #8
 8018738:	f88d 4002 	strb.w	r4, [sp, #2]
 801873c:	211d      	movs	r1, #29
 801873e:	200c      	movs	r0, #12
 8018740:	f88d 1003 	strb.w	r1, [sp, #3]
 8018744:	f88d 0004 	strb.w	r0, [sp, #4]
 8018748:	b2e4      	uxtb	r4, r4
 801874a:	1ce1      	adds	r1, r4, #3
 801874c:	4668      	mov	r0, sp
 801874e:	f7ff f977 	bl	8017a40 <hci_event>
 8018752:	b042      	add	sp, #264	; 0x108
 8018754:	bd10      	pop	{r4, pc}

08018756 <aci_gatt_indication_ext_event>:
 8018756:	b518      	push	{r3, r4, lr}
 8018758:	b0c1      	sub	sp, #260	; 0x104
 801875a:	f8ad 1007 	strh.w	r1, [sp, #7]
 801875e:	9944      	ldr	r1, [sp, #272]	; 0x110
 8018760:	461c      	mov	r4, r3
 8018762:	f8ad 0005 	strh.w	r0, [sp, #5]
 8018766:	f8ad 2009 	strh.w	r2, [sp, #9]
 801876a:	f8ad 400b 	strh.w	r4, [sp, #11]
 801876e:	4622      	mov	r2, r4
 8018770:	f10d 000d 	add.w	r0, sp, #13
 8018774:	f018 fbb7 	bl	8030ee6 <__aeabi_memcpy>
 8018778:	21ff      	movs	r1, #255	; 0xff
 801877a:	f88d 1001 	strb.w	r1, [sp, #1]
 801877e:	340a      	adds	r4, #10
 8018780:	f88d 4002 	strb.w	r4, [sp, #2]
 8018784:	211e      	movs	r1, #30
 8018786:	200c      	movs	r0, #12
 8018788:	f88d 1003 	strb.w	r1, [sp, #3]
 801878c:	f88d 0004 	strb.w	r0, [sp, #4]
 8018790:	b2e4      	uxtb	r4, r4
 8018792:	1ce1      	adds	r1, r4, #3
 8018794:	4668      	mov	r0, sp
 8018796:	f7ff f953 	bl	8017a40 <hci_event>
 801879a:	b042      	add	sp, #264	; 0x108
 801879c:	bd10      	pop	{r4, pc}

0801879e <aci_gatt_notification_ext_event>:
 801879e:	b518      	push	{r3, r4, lr}
 80187a0:	b0c1      	sub	sp, #260	; 0x104
 80187a2:	f8ad 1007 	strh.w	r1, [sp, #7]
 80187a6:	9944      	ldr	r1, [sp, #272]	; 0x110
 80187a8:	461c      	mov	r4, r3
 80187aa:	f8ad 0005 	strh.w	r0, [sp, #5]
 80187ae:	f8ad 2009 	strh.w	r2, [sp, #9]
 80187b2:	f8ad 400b 	strh.w	r4, [sp, #11]
 80187b6:	4622      	mov	r2, r4
 80187b8:	f10d 000d 	add.w	r0, sp, #13
 80187bc:	f018 fb93 	bl	8030ee6 <__aeabi_memcpy>
 80187c0:	21ff      	movs	r1, #255	; 0xff
 80187c2:	f88d 1001 	strb.w	r1, [sp, #1]
 80187c6:	340a      	adds	r4, #10
 80187c8:	f88d 4002 	strb.w	r4, [sp, #2]
 80187cc:	211f      	movs	r1, #31
 80187ce:	200c      	movs	r0, #12
 80187d0:	f88d 1003 	strb.w	r1, [sp, #3]
 80187d4:	f88d 0004 	strb.w	r0, [sp, #4]
 80187d8:	b2e4      	uxtb	r4, r4
 80187da:	1ce1      	adds	r1, r4, #3
 80187dc:	4668      	mov	r0, sp
 80187de:	f7ff f92f 	bl	8017a40 <hci_event>
 80187e2:	b042      	add	sp, #264	; 0x108
 80187e4:	bd10      	pop	{r4, pc}
	...

080187e8 <BleStack_Init>:
 80187e8:	4601      	mov	r1, r0
 80187ea:	b580      	push	{r7, lr}
 80187ec:	2228      	movs	r2, #40	; 0x28
 80187ee:	4829      	ldr	r0, [pc, #164]	; (8018894 <??DataTable0>)
 80187f0:	f018 fb79 	bl	8030ee6 <__aeabi_memcpy>
 80187f4:	f007 fa58 	bl	801fca8 <LECTRL_Init>
 80187f8:	e8bd 4001 	ldmia.w	sp!, {r0, lr}

080187fc <hci_reset>:
 80187fc:	b51c      	push	{r2, r3, r4, lr}
 80187fe:	f00f f871 	bl	80278e4 <BLEPLAT_Init>
 8018802:	4c24      	ldr	r4, [pc, #144]	; (8018894 <??DataTable0>)
 8018804:	f44f 7106 	mov.w	r1, #536	; 0x218
 8018808:	f104 0028 	add.w	r0, r4, #40	; 0x28
 801880c:	f018 fb68 	bl	8030ee0 <__aeabi_memclr>
 8018810:	f008 fe50 	bl	80214b4 <SLP_Init>
 8018814:	f000 f86c 	bl	80188f0 <CfgData_Init>
 8018818:	f007 fa52 	bl	801fcc0 <LECTRL_Reset>
 801881c:	0001      	movs	r1, r0
 801881e:	d137      	bne.n	8018890 <??hci_reset_0>
 8018820:	6820      	ldr	r0, [r4, #0]
 8018822:	6861      	ldr	r1, [r4, #4]
 8018824:	9000      	str	r0, [sp, #0]
 8018826:	f018 fb5b 	bl	8030ee0 <__aeabi_memclr>
 801882a:	6860      	ldr	r0, [r4, #4]
 801882c:	f5b0 7f06 	cmp.w	r0, #536	; 0x218
 8018830:	d30b      	bcc.n	801884a <??hci_reset_1>
 8018832:	4668      	mov	r0, sp
 8018834:	f00c f980 	bl	8024b38 <ACL_MemAlloc>
 8018838:	4668      	mov	r0, sp
 801883a:	f000 ff1f 	bl	801967c <GATT_MemAlloc>
 801883e:	4668      	mov	r0, sp
 8018840:	f009 f8fc 	bl	8021a3c <SMP_MemAlloc>
 8018844:	4668      	mov	r0, sp
 8018846:	f006 ff27 	bl	801f698 <L2C_MemAlloc>

0801884a <??hci_reset_1>:
 801884a:	9a00      	ldr	r2, [sp, #0]
 801884c:	6820      	ldr	r0, [r4, #0]
 801884e:	6861      	ldr	r1, [r4, #4]
 8018850:	1a12      	subs	r2, r2, r0
 8018852:	4291      	cmp	r1, r2
 8018854:	db0d      	blt.n	8018872 <??hci_reset_2>
 8018856:	68a0      	ldr	r0, [r4, #8]
 8018858:	68e1      	ldr	r1, [r4, #12]
 801885a:	9000      	str	r0, [sp, #0]
 801885c:	f018 fb40 	bl	8030ee0 <__aeabi_memclr>
 8018860:	4668      	mov	r0, sp
 8018862:	f000 ff1e 	bl	80196a2 <GATT_Db_MemAlloc>
 8018866:	9a00      	ldr	r2, [sp, #0]
 8018868:	68a0      	ldr	r0, [r4, #8]
 801886a:	68e1      	ldr	r1, [r4, #12]
 801886c:	1a12      	subs	r2, r2, r0
 801886e:	4291      	cmp	r1, r2
 8018870:	da01      	bge.n	8018876 <??hci_reset_3>

08018872 <??hci_reset_2>:
 8018872:	2007      	movs	r0, #7
 8018874:	bd16      	pop	{r1, r2, r4, pc}

08018876 <??hci_reset_3>:
 8018876:	f00c f975 	bl	8024b64 <ACL_Init>
 801887a:	f006 ff18 	bl	801f6ae <L2C_Init>
 801887e:	f009 f8f5 	bl	8021a6c <SMP_Init>
 8018882:	f000 ff26 	bl	80196d2 <GATT_Init>
 8018886:	f000 f895 	bl	80189b4 <GAP_Init>
 801888a:	f006 fbb7 	bl	801effc <EVT_Init>
 801888e:	2000      	movs	r0, #0

08018890 <??hci_reset_0>:
 8018890:	bd16      	pop	{r1, r2, r4, pc}
	...

08018894 <??DataTable0>:
 8018894:	36e8 2000                                   .6. 

08018898 <BleStack_Process>:
 8018898:	b580      	push	{r7, lr}
 801889a:	f001 f813 	bl	80198c4 <GATT_Process>
 801889e:	f009 fa76 	bl	8021d8e <SMP_Process>
 80188a2:	f007 fa53 	bl	801fd4c <LECTRL_Process>
 80188a6:	e8bd 4001 	ldmia.w	sp!, {r0, lr}
 80188aa:	f008 be14 	b.w	80214d6 <SLP_SleepCheck>

080188ae <aci_hal_get_fw_build_number>:
 80188ae:	2102      	movs	r1, #2
 80188b0:	8001      	strh	r1, [r0, #0]
 80188b2:	2000      	movs	r0, #0
 80188b4:	4770      	bx	lr

080188b6 <BLEPLATCB_TimerExpiry>:
 80188b6:	1e41      	subs	r1, r0, #1
 80188b8:	2902      	cmp	r1, #2
 80188ba:	d90f      	bls.n	80188dc <??BLEPLATCB_TimerExpiry_0>
 80188bc:	1f09      	subs	r1, r1, #4
 80188be:	d015      	beq.n	80188ec <??BLEPLATCB_TimerExpiry_1>
 80188c0:	1e49      	subs	r1, r1, #1
 80188c2:	d009      	beq.n	80188d8 <??BLEPLATCB_TimerExpiry_2>
 80188c4:	1e89      	subs	r1, r1, #2
 80188c6:	2908      	cmp	r1, #8
 80188c8:	d90a      	bls.n	80188e0 <??BLEPLATCB_TimerExpiry_3>
 80188ca:	3909      	subs	r1, #9
 80188cc:	2920      	cmp	r1, #32
 80188ce:	d90b      	bls.n	80188e8 <??BLEPLATCB_TimerExpiry_4>
 80188d0:	3921      	subs	r1, #33	; 0x21
 80188d2:	2907      	cmp	r1, #7
 80188d4:	d906      	bls.n	80188e4 <??BLEPLATCB_TimerExpiry_5>
 80188d6:	4770      	bx	lr

080188d8 <??BLEPLATCB_TimerExpiry_2>:
 80188d8:	f000 bea7 	b.w	801962a <GAP_Scan_Disc_Proc_Timeout_Cb>

080188dc <??BLEPLATCB_TimerExpiry_0>:
 80188dc:	f009 bacb 	b.w	8021e76 <SMP_Rep_Attempts_Timeout_Cb>

080188e0 <??BLEPLATCB_TimerExpiry_3>:
 80188e0:	f009 baae 	b.w	8021e40 <SMP_Timeout_Cb>

080188e4 <??BLEPLATCB_TimerExpiry_5>:
 80188e4:	f007 b833 	b.w	801f94e <L2C_Timeout_Cb>

080188e8 <??BLEPLATCB_TimerExpiry_4>:
 80188e8:	f001 ba0f 	b.w	8019d0a <GATT_Timeout_Cb>

080188ec <??BLEPLATCB_TimerExpiry_1>:
 80188ec:	f000 b9a5 	b.w	8018c3a <GAP_Adv_Lim_Disc_Timeout_Cb>

080188f0 <CfgData_Init>:
 80188f0:	b510      	push	{r4, lr}
 80188f2:	4c2e      	ldr	r4, [pc, #184]	; (80189ac <??DataTable2>)
 80188f4:	20e1      	movs	r0, #225	; 0xe1
 80188f6:	70e0      	strb	r0, [r4, #3]
 80188f8:	2180      	movs	r1, #128	; 0x80
 80188fa:	7121      	strb	r1, [r4, #4]
 80188fc:	2002      	movs	r0, #2
 80188fe:	7160      	strb	r0, [r4, #5]
 8018900:	492b      	ldr	r1, [pc, #172]	; (80189b0 <??DataTable2_1>)
 8018902:	f891 0024 	ldrb.w	r0, [r1, #36]	; 0x24
 8018906:	06c3      	lsls	r3, r0, #27
 8018908:	d511      	bpl.n	801892e <??CfgData_Init_0>
 801890a:	22dd      	movs	r2, #221	; 0xdd
 801890c:	2110      	movs	r1, #16
 801890e:	f104 0008 	add.w	r0, r4, #8
 8018912:	f00c fb47 	bl	8024fa4 <__aeabi_memset>
 8018916:	22aa      	movs	r2, #170	; 0xaa
 8018918:	2110      	movs	r1, #16
 801891a:	f104 0018 	add.w	r0, r4, #24
 801891e:	f00c fb41 	bl	8024fa4 <__aeabi_memset>
 8018922:	f104 002e 	add.w	r0, r4, #46	; 0x2e
 8018926:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801892a:	f008 bb35 	b.w	8020f98 <RndAddr_Generate_Static_Address>

0801892e <??CfgData_Init_0>:
 801892e:	bd10      	pop	{r4, pc}

08018930 <CfgData_Write>:
 8018930:	4613      	mov	r3, r2
 8018932:	b580      	push	{r7, lr}
 8018934:	0002      	movs	r2, r0
 8018936:	d00a      	beq.n	801894e <??CfgData_Write_0>
 8018938:	2808      	cmp	r0, #8
 801893a:	bf18      	it	ne
 801893c:	2818      	cmpne	r0, #24
 801893e:	d104      	bne.n	801894a <??CfgData_Write_1>
 8018940:	460a      	mov	r2, r1
 8018942:	2a10      	cmp	r2, #16
 8018944:	d006      	beq.n	8018954 <??CfgData_Write_2>

08018946 <??CfgData_Write_3>:
 8018946:	2012      	movs	r0, #18
 8018948:	bd02      	pop	{r1, pc}

0801894a <??CfgData_Write_1>:
 801894a:	282e      	cmp	r0, #46	; 0x2e
 801894c:	d109      	bne.n	8018962 <??CfgData_Write_4>

0801894e <??CfgData_Write_0>:
 801894e:	460a      	mov	r2, r1
 8018950:	2a06      	cmp	r2, #6
 8018952:	d1f8      	bne.n	8018946 <??CfgData_Write_3>

08018954 <??CfgData_Write_2>:
 8018954:	4619      	mov	r1, r3
 8018956:	4b15      	ldr	r3, [pc, #84]	; (80189ac <??DataTable2>)
 8018958:	4418      	add	r0, r3
 801895a:	f018 fac4 	bl	8030ee6 <__aeabi_memcpy>

0801895e <??CfgData_Write_5>:
 801895e:	2000      	movs	r0, #0
 8018960:	bd02      	pop	{r1, pc}

08018962 <??CfgData_Write_4>:
 8018962:	28b0      	cmp	r0, #176	; 0xb0
 8018964:	d104      	bne.n	8018970 <??CfgData_Write_6>
 8018966:	7818      	ldrb	r0, [r3, #0]
 8018968:	4910      	ldr	r1, [pc, #64]	; (80189ac <??DataTable2>)
 801896a:	f881 016d 	strb.w	r0, [r1, #365]	; 0x16d
 801896e:	e7f6      	b.n	801895e <??CfgData_Write_5>

08018970 <??CfgData_Write_6>:
 8018970:	28d0      	cmp	r0, #208	; 0xd0
 8018972:	d1e8      	bne.n	8018946 <??CfgData_Write_3>
 8018974:	7818      	ldrb	r0, [r3, #0]
 8018976:	e8bd 4002 	ldmia.w	sp!, {r1, lr}
 801897a:	f00b bc8d 	b.w	8024298 <SMP_sc_force_debug_key_usage>

0801897e <CfgData_Read>:
 801897e:	4613      	mov	r3, r2
 8018980:	b580      	push	{r7, lr}
 8018982:	0002      	movs	r2, r0
 8018984:	d00e      	beq.n	80189a4 <??CfgData_Read_0>
 8018986:	2808      	cmp	r0, #8
 8018988:	bf18      	it	ne
 801898a:	2818      	cmpne	r0, #24
 801898c:	d108      	bne.n	80189a0 <??CfgData_Read_1>
 801898e:	2210      	movs	r2, #16

08018990 <??CfgData_Read_2>:
 8018990:	700a      	strb	r2, [r1, #0]
 8018992:	4906      	ldr	r1, [pc, #24]	; (80189ac <??DataTable2>)
 8018994:	4401      	add	r1, r0
 8018996:	4618      	mov	r0, r3
 8018998:	f018 faa5 	bl	8030ee6 <__aeabi_memcpy>
 801899c:	2000      	movs	r0, #0
 801899e:	bd02      	pop	{r1, pc}

080189a0 <??CfgData_Read_1>:
 80189a0:	282e      	cmp	r0, #46	; 0x2e
 80189a2:	d101      	bne.n	80189a8 <??CfgData_Read_3>

080189a4 <??CfgData_Read_0>:
 80189a4:	2206      	movs	r2, #6
 80189a6:	e7f3      	b.n	8018990 <??CfgData_Read_2>

080189a8 <??CfgData_Read_3>:
 80189a8:	2012      	movs	r0, #18
 80189aa:	bd02      	pop	{r1, pc}

080189ac <??DataTable2>:
 80189ac:	3710 2000                                   .7. 

080189b0 <??DataTable2_1>:
 80189b0:	36e8 2000                                   .6. 

080189b4 <GAP_Init>:
 80189b4:	4770      	bx	lr

080189b6 <aci_gap_init>:
 80189b6:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80189b8:	4605      	mov	r5, r0
 80189ba:	4c25      	ldr	r4, [pc, #148]	; (8018a50 <??DataTable2>)
 80189bc:	f894 0170 	ldrb.w	r0, [r4, #368]	; 0x170
 80189c0:	4616      	mov	r6, r2
 80189c2:	461f      	mov	r7, r3
 80189c4:	b108      	cbz	r0, 80189ca <??aci_gap_init_0>
 80189c6:	200c      	movs	r0, #12
 80189c8:	bdf2      	pop	{r1, r4, r5, r6, r7, pc}

080189ca <??aci_gap_init_0>:
 80189ca:	f015 050f 	ands.w	r5, r5, #15
 80189ce:	d101      	bne.n	80189d4 <??aci_gap_init_1>
 80189d0:	2092      	movs	r0, #146	; 0x92
 80189d2:	bdf2      	pop	{r1, r4, r5, r6, r7, pc}

080189d4 <??aci_gap_init_1>:
 80189d4:	4608      	mov	r0, r1
 80189d6:	f000 fb33 	bl	8019040 <GAP_Enable_Privacy>
 80189da:	b958      	cbnz	r0, 80189f4 <??aci_gap_init_2>
 80189dc:	f015 0f05 	tst.w	r5, #5
 80189e0:	d00a      	beq.n	80189f8 <??aci_gap_init_3>
 80189e2:	9807      	ldr	r0, [sp, #28]
 80189e4:	9b06      	ldr	r3, [sp, #24]
 80189e6:	463a      	mov	r2, r7
 80189e8:	9000      	str	r0, [sp, #0]
 80189ea:	4631      	mov	r1, r6
 80189ec:	4628      	mov	r0, r5
 80189ee:	f005 fe33 	bl	801e658 <GATT_Gap_Add_Service>
 80189f2:	b108      	cbz	r0, 80189f8 <??aci_gap_init_3>

080189f4 <??aci_gap_init_2>:
 80189f4:	2097      	movs	r0, #151	; 0x97
 80189f6:	bdf2      	pop	{r1, r4, r5, r6, r7, pc}

080189f8 <??aci_gap_init_3>:
 80189f8:	f884 5170 	strb.w	r5, [r4, #368]	; 0x170
 80189fc:	2000      	movs	r0, #0
 80189fe:	bdf2      	pop	{r1, r4, r5, r6, r7, pc}

08018a00 <GAP_Connection_Complete_Handler>:
 8018a00:	b538      	push	{r3, r4, r5, lr}
 8018a02:	4615      	mov	r5, r2
 8018a04:	460c      	mov	r4, r1
 8018a06:	461a      	mov	r2, r3
 8018a08:	b968      	cbnz	r0, 8018a26 <??GAP_Connection_Complete_Handler_0>
 8018a0a:	9805      	ldr	r0, [sp, #20]
 8018a0c:	9b04      	ldr	r3, [sp, #16]
 8018a0e:	4629      	mov	r1, r5
 8018a10:	9000      	str	r0, [sp, #0]
 8018a12:	4620      	mov	r0, r4
 8018a14:	f009 f84a 	bl	8021aac <SMP_Connection_Complete_Handler>
 8018a18:	4620      	mov	r0, r4
 8018a1a:	f001 fa05 	bl	8019e28 <GATT_Connection_Complete_Handler>
 8018a1e:	4629      	mov	r1, r5
 8018a20:	4620      	mov	r0, r4
 8018a22:	f006 ff47 	bl	801f8b4 <L2C_Connection_Complete_Handler>

08018a26 <??GAP_Connection_Complete_Handler_0>:
 8018a26:	480a      	ldr	r0, [pc, #40]	; (8018a50 <??DataTable2>)
 8018a28:	f890 1170 	ldrb.w	r1, [r0, #368]	; 0x170
 8018a2c:	b13d      	cbz	r5, 8018a3e <??GAP_Connection_Complete_Handler_1>
 8018a2e:	07c9      	lsls	r1, r1, #31
 8018a30:	d50d      	bpl.n	8018a4e <??GAP_Connection_Complete_Handler_2>
 8018a32:	f500 70b8 	add.w	r0, r0, #368	; 0x170
 8018a36:	e8bd 4032 	ldmia.w	sp!, {r1, r4, r5, lr}
 8018a3a:	f000 b90f 	b.w	8018c5c <GAP_Adv_Connection_Complete_Handler>

08018a3e <??GAP_Connection_Complete_Handler_1>:
 8018a3e:	0749      	lsls	r1, r1, #29
 8018a40:	d505      	bpl.n	8018a4e <??GAP_Connection_Complete_Handler_2>
 8018a42:	f500 70b8 	add.w	r0, r0, #368	; 0x170
 8018a46:	e8bd 4032 	ldmia.w	sp!, {r1, r4, r5, lr}
 8018a4a:	f000 be0b 	b.w	8019664 <GAP_Proc_Connection_Complete_Handler>

08018a4e <??GAP_Connection_Complete_Handler_2>:
 8018a4e:	bd31      	pop	{r0, r4, r5, pc}

08018a50 <??DataTable2>:
 8018a50:	3710 2000                                   .7. 

08018a54 <GAP_Disconnection_Complete_Handler>:
 8018a54:	b510      	push	{r4, lr}
 8018a56:	4604      	mov	r4, r0
 8018a58:	f001 fa01 	bl	8019e5e <GATT_Disconnection_Complete_Handler>
 8018a5c:	4620      	mov	r0, r4
 8018a5e:	f009 f877 	bl	8021b50 <SMP_Disconnection_Complete_Handler>
 8018a62:	4620      	mov	r0, r4
 8018a64:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8018a68:	f006 bf3c 	b.w	801f8e4 <L2C_Disconnection_Complete_Handler>

08018a6c <aci_gap_set_broadcast_mode>:
 8018a6c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8018a6e:	4617      	mov	r7, r2
 8018a70:	b08c      	sub	sp, #48	; 0x30
 8018a72:	4604      	mov	r4, r0
 8018a74:	460d      	mov	r5, r1
 8018a76:	461e      	mov	r6, r3
 8018a78:	2f02      	cmp	r7, #2
 8018a7a:	bf1c      	itt	ne
 8018a7c:	2f03      	cmpne	r7, #3
 8018a7e:	2092      	movne	r0, #146	; 0x92
 8018a80:	d11f      	bne.n	8018ac2 <??aci_gap_set_broadcast_mode_0>
 8018a82:	9814      	ldr	r0, [sp, #80]	; 0x50
 8018a84:	0001      	movs	r1, r0
 8018a86:	d005      	beq.n	8018a94 <??aci_gap_set_broadcast_mode_1>
 8018a88:	9915      	ldr	r1, [sp, #84]	; 0x54
 8018a8a:	2203      	movs	r2, #3
 8018a8c:	f000 faea 	bl	8019064 <aci_gap_add_devices_to_list>
 8018a90:	0001      	movs	r1, r0
 8018a92:	d116      	bne.n	8018ac2 <??aci_gap_set_broadcast_mode_0>

08018a94 <??aci_gap_set_broadcast_mode_1>:
 8018a94:	9813      	ldr	r0, [sp, #76]	; 0x4c
 8018a96:	f89d 1048 	ldrb.w	r1, [sp, #72]	; 0x48
 8018a9a:	2200      	movs	r2, #0
 8018a9c:	9209      	str	r2, [sp, #36]	; 0x24
 8018a9e:	9208      	str	r2, [sp, #32]
 8018aa0:	9207      	str	r2, [sp, #28]
 8018aa2:	9206      	str	r2, [sp, #24]
 8018aa4:	9205      	str	r2, [sp, #20]
 8018aa6:	9204      	str	r2, [sp, #16]
 8018aa8:	9203      	str	r2, [sp, #12]
 8018aaa:	9202      	str	r2, [sp, #8]
 8018aac:	2201      	movs	r2, #1
 8018aae:	900b      	str	r0, [sp, #44]	; 0x2c
 8018ab0:	910a      	str	r1, [sp, #40]	; 0x28
 8018ab2:	9201      	str	r2, [sp, #4]
 8018ab4:	9600      	str	r6, [sp, #0]
 8018ab6:	462b      	mov	r3, r5
 8018ab8:	4622      	mov	r2, r4
 8018aba:	4639      	mov	r1, r7
 8018abc:	2040      	movs	r0, #64	; 0x40
 8018abe:	f000 f98c 	bl	8018dda <GAP_Adv_Start>

08018ac2 <??aci_gap_set_broadcast_mode_0>:
 8018ac2:	b00d      	add	sp, #52	; 0x34
 8018ac4:	bdf0      	pop	{r4, r5, r6, r7, pc}

08018ac6 <aci_gap_set_direct_connectable>:
 8018ac6:	b57c      	push	{r2, r3, r4, r5, r6, lr}
 8018ac8:	b08c      	sub	sp, #48	; 0x30
 8018aca:	4614      	mov	r4, r2
 8018acc:	461d      	mov	r5, r3
 8018ace:	2901      	cmp	r1, #1
 8018ad0:	bf18      	it	ne
 8018ad2:	2904      	cmpne	r1, #4
 8018ad4:	d103      	bne.n	8018ade <??aci_gap_set_direct_connectable_0>
 8018ad6:	2c01      	cmp	r4, #1
 8018ad8:	d004      	beq.n	8018ae4 <??aci_gap_set_direct_connectable_1>
 8018ada:	0022      	movs	r2, r4
 8018adc:	d002      	beq.n	8018ae4 <??aci_gap_set_direct_connectable_1>

08018ade <??aci_gap_set_direct_connectable_0>:
 8018ade:	2092      	movs	r0, #146	; 0x92
 8018ae0:	b00e      	add	sp, #56	; 0x38
 8018ae2:	bd70      	pop	{r4, r5, r6, pc}

08018ae4 <??aci_gap_set_direct_connectable_1>:
 8018ae4:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 8018ae6:	9a12      	ldr	r2, [sp, #72]	; 0x48
 8018ae8:	2600      	movs	r6, #0
 8018aea:	9000      	str	r0, [sp, #0]
 8018aec:	960b      	str	r6, [sp, #44]	; 0x2c
 8018aee:	960a      	str	r6, [sp, #40]	; 0x28
 8018af0:	9509      	str	r5, [sp, #36]	; 0x24
 8018af2:	9408      	str	r4, [sp, #32]
 8018af4:	9607      	str	r6, [sp, #28]
 8018af6:	9606      	str	r6, [sp, #24]
 8018af8:	9605      	str	r6, [sp, #20]
 8018afa:	9604      	str	r6, [sp, #16]
 8018afc:	9603      	str	r6, [sp, #12]
 8018afe:	9602      	str	r6, [sp, #8]
 8018b00:	9601      	str	r6, [sp, #4]
 8018b02:	2010      	movs	r0, #16
 8018b04:	f000 f969 	bl	8018dda <GAP_Adv_Start>
 8018b08:	b00e      	add	sp, #56	; 0x38
 8018b0a:	bd70      	pop	{r4, r5, r6, pc}

08018b0c <aci_gap_set_undirected_connectable>:
 8018b0c:	b510      	push	{r4, lr}
 8018b0e:	b08c      	sub	sp, #48	; 0x30
 8018b10:	001c      	movs	r4, r3
 8018b12:	bf1c      	itt	ne
 8018b14:	2b03      	cmpne	r3, #3
 8018b16:	2092      	movne	r0, #146	; 0x92
 8018b18:	d112      	bne.n	8018b40 <??aci_gap_set_undirected_connectable_0>
 8018b1a:	9301      	str	r3, [sp, #4]
 8018b1c:	9200      	str	r2, [sp, #0]
 8018b1e:	2400      	movs	r4, #0
 8018b20:	460b      	mov	r3, r1
 8018b22:	4602      	mov	r2, r0
 8018b24:	940b      	str	r4, [sp, #44]	; 0x2c
 8018b26:	940a      	str	r4, [sp, #40]	; 0x28
 8018b28:	9409      	str	r4, [sp, #36]	; 0x24
 8018b2a:	9408      	str	r4, [sp, #32]
 8018b2c:	9407      	str	r4, [sp, #28]
 8018b2e:	9406      	str	r4, [sp, #24]
 8018b30:	9405      	str	r4, [sp, #20]
 8018b32:	9404      	str	r4, [sp, #16]
 8018b34:	9403      	str	r4, [sp, #12]
 8018b36:	9402      	str	r4, [sp, #8]
 8018b38:	2100      	movs	r1, #0
 8018b3a:	2020      	movs	r0, #32
 8018b3c:	f000 f94d 	bl	8018dda <GAP_Adv_Start>

08018b40 <??aci_gap_set_undirected_connectable_0>:
 8018b40:	b00c      	add	sp, #48	; 0x30
 8018b42:	bd10      	pop	{r4, pc}

08018b44 <aci_gap_set_non_connectable>:
 8018b44:	b580      	push	{r7, lr}
 8018b46:	b08c      	sub	sp, #48	; 0x30
 8018b48:	2802      	cmp	r0, #2
 8018b4a:	bf1c      	itt	ne
 8018b4c:	2803      	cmpne	r0, #3
 8018b4e:	2092      	movne	r0, #146	; 0x92
 8018b50:	d111      	bne.n	8018b76 <??aci_gap_set_non_connectable_0>
 8018b52:	9100      	str	r1, [sp, #0]
 8018b54:	2200      	movs	r2, #0
 8018b56:	2300      	movs	r3, #0
 8018b58:	4601      	mov	r1, r0
 8018b5a:	920b      	str	r2, [sp, #44]	; 0x2c
 8018b5c:	930a      	str	r3, [sp, #40]	; 0x28
 8018b5e:	9209      	str	r2, [sp, #36]	; 0x24
 8018b60:	9208      	str	r2, [sp, #32]
 8018b62:	9207      	str	r2, [sp, #28]
 8018b64:	9306      	str	r3, [sp, #24]
 8018b66:	9205      	str	r2, [sp, #20]
 8018b68:	9204      	str	r2, [sp, #16]
 8018b6a:	9203      	str	r2, [sp, #12]
 8018b6c:	9202      	str	r2, [sp, #8]
 8018b6e:	9201      	str	r2, [sp, #4]
 8018b70:	2008      	movs	r0, #8
 8018b72:	f000 f932 	bl	8018dda <GAP_Adv_Start>

08018b76 <??aci_gap_set_non_connectable_0>:
 8018b76:	b00d      	add	sp, #52	; 0x34
 8018b78:	bd00      	pop	{pc}

08018b7a <aci_gap_set_limited_discoverable>:
 8018b7a:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8018b7e:	b08c      	sub	sp, #48	; 0x30
 8018b80:	9c19      	ldr	r4, [sp, #100]	; 0x64
 8018b82:	9d1a      	ldr	r5, [sp, #104]	; 0x68
 8018b84:	460e      	mov	r6, r1
 8018b86:	4691      	mov	r9, r2
 8018b88:	4680      	mov	r8, r0
 8018b8a:	461f      	mov	r7, r3
 8018b8c:	462a      	mov	r2, r5
 8018b8e:	4621      	mov	r1, r4
 8018b90:	f000 fa27 	bl	8018fe2 <GAP_Adv_DiscParamsCheck>
 8018b94:	4682      	mov	sl, r0
 8018b96:	bb00      	cbnz	r0, 8018bda <??aci_gap_set_limited_discoverable_0>
 8018b98:	2100      	movs	r1, #0
 8018b9a:	900b      	str	r0, [sp, #44]	; 0x2c
 8018b9c:	910a      	str	r1, [sp, #40]	; 0x28
 8018b9e:	9108      	str	r1, [sp, #32]
 8018ba0:	9818      	ldr	r0, [sp, #96]	; 0x60
 8018ba2:	f89d 105c 	ldrb.w	r1, [sp, #92]	; 0x5c
 8018ba6:	9005      	str	r0, [sp, #20]
 8018ba8:	9816      	ldr	r0, [sp, #88]	; 0x58
 8018baa:	9104      	str	r1, [sp, #16]
 8018bac:	f89d 1054 	ldrb.w	r1, [sp, #84]	; 0x54
 8018bb0:	4632      	mov	r2, r6
 8018bb2:	2600      	movs	r6, #0
 8018bb4:	9609      	str	r6, [sp, #36]	; 0x24
 8018bb6:	9507      	str	r5, [sp, #28]
 8018bb8:	9406      	str	r4, [sp, #24]
 8018bba:	9003      	str	r0, [sp, #12]
 8018bbc:	9102      	str	r1, [sp, #8]
 8018bbe:	9601      	str	r6, [sp, #4]
 8018bc0:	464b      	mov	r3, r9
 8018bc2:	9700      	str	r7, [sp, #0]
 8018bc4:	4641      	mov	r1, r8
 8018bc6:	2002      	movs	r0, #2
 8018bc8:	f000 f907 	bl	8018dda <GAP_Adv_Start>
 8018bcc:	4682      	mov	sl, r0
 8018bce:	b920      	cbnz	r0, 8018bda <??aci_gap_set_limited_discoverable_0>
 8018bd0:	f8df 1460 	ldr.w	r1, [pc, #1120]	; 8019034 <??DataTable7>
 8018bd4:	2005      	movs	r0, #5
 8018bd6:	f00e feb5 	bl	8027944 <BLEPLAT_TimerStart>

08018bda <??aci_gap_set_limited_discoverable_0>:
 8018bda:	4650      	mov	r0, sl
 8018bdc:	b00c      	add	sp, #48	; 0x30
 8018bde:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}

08018be2 <aci_gap_set_discoverable>:
 8018be2:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8018be6:	b08c      	sub	sp, #48	; 0x30
 8018be8:	9c19      	ldr	r4, [sp, #100]	; 0x64
 8018bea:	9d1a      	ldr	r5, [sp, #104]	; 0x68
 8018bec:	4689      	mov	r9, r1
 8018bee:	4690      	mov	r8, r2
 8018bf0:	4606      	mov	r6, r0
 8018bf2:	461f      	mov	r7, r3
 8018bf4:	462a      	mov	r2, r5
 8018bf6:	4621      	mov	r1, r4
 8018bf8:	f000 f9f3 	bl	8018fe2 <GAP_Adv_DiscParamsCheck>
 8018bfc:	0001      	movs	r1, r0
 8018bfe:	d119      	bne.n	8018c34 <??aci_gap_set_discoverable_0>
 8018c00:	2000      	movs	r0, #0
 8018c02:	900b      	str	r0, [sp, #44]	; 0x2c
 8018c04:	900a      	str	r0, [sp, #40]	; 0x28
 8018c06:	9008      	str	r0, [sp, #32]
 8018c08:	9818      	ldr	r0, [sp, #96]	; 0x60
 8018c0a:	f89d 105c 	ldrb.w	r1, [sp, #92]	; 0x5c
 8018c0e:	9005      	str	r0, [sp, #20]
 8018c10:	9816      	ldr	r0, [sp, #88]	; 0x58
 8018c12:	9104      	str	r1, [sp, #16]
 8018c14:	f89d 1054 	ldrb.w	r1, [sp, #84]	; 0x54
 8018c18:	2200      	movs	r2, #0
 8018c1a:	9209      	str	r2, [sp, #36]	; 0x24
 8018c1c:	9507      	str	r5, [sp, #28]
 8018c1e:	9406      	str	r4, [sp, #24]
 8018c20:	9003      	str	r0, [sp, #12]
 8018c22:	9102      	str	r1, [sp, #8]
 8018c24:	9201      	str	r2, [sp, #4]
 8018c26:	9700      	str	r7, [sp, #0]
 8018c28:	4643      	mov	r3, r8
 8018c2a:	464a      	mov	r2, r9
 8018c2c:	4631      	mov	r1, r6
 8018c2e:	2004      	movs	r0, #4
 8018c30:	f000 f8d3 	bl	8018dda <GAP_Adv_Start>

08018c34 <??aci_gap_set_discoverable_0>:
 8018c34:	b00d      	add	sp, #52	; 0x34
 8018c36:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}

08018c3a <GAP_Adv_Lim_Disc_Timeout_Cb>:
 8018c3a:	b510      	push	{r4, lr}
 8018c3c:	f8df 43f8 	ldr.w	r4, [pc, #1016]	; 8019038 <??DataTable7_1>
 8018c40:	f894 0171 	ldrb.w	r0, [r4, #369]	; 0x171
 8018c44:	0781      	lsls	r1, r0, #30
 8018c46:	d508      	bpl.n	8018c5a <??GAP_Adv_Lim_Disc_Timeout_Cb_0>
 8018c48:	2000      	movs	r0, #0
 8018c4a:	f007 f9ad 	bl	801ffa8 <hci_le_set_advertising_enable>
 8018c4e:	2001      	movs	r0, #1
 8018c50:	f006 fa40 	bl	801f0d4 <EVT_aci_gap_limited_discoverable>
 8018c54:	2000      	movs	r0, #0
 8018c56:	f884 0171 	strb.w	r0, [r4, #369]	; 0x171

08018c5a <??GAP_Adv_Lim_Disc_Timeout_Cb_0>:
 8018c5a:	bd10      	pop	{r4, pc}

08018c5c <GAP_Adv_Connection_Complete_Handler>:
 8018c5c:	b510      	push	{r4, lr}
 8018c5e:	4604      	mov	r4, r0
 8018c60:	7860      	ldrb	r0, [r4, #1]
 8018c62:	0781      	lsls	r1, r0, #30
 8018c64:	bf44      	itt	mi
 8018c66:	2005      	movmi	r0, #5
 8018c68:	f00e fe6e 	blmi	8027948 <BLEPLAT_TimerStop>
 8018c6c:	2100      	movs	r1, #0
 8018c6e:	7061      	strb	r1, [r4, #1]
 8018c70:	bd10      	pop	{r4, pc}

08018c72 <aci_gap_update_adv_data>:
 8018c72:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8018c76:	4681      	mov	r9, r0
 8018c78:	2700      	movs	r7, #0
 8018c7a:	464a      	mov	r2, r9
 8018c7c:	b088      	sub	sp, #32
 8018c7e:	2a20      	cmp	r2, #32
 8018c80:	d253      	bcs.n	8018d2a <??aci_gap_update_adv_data_0>
 8018c82:	f8df 83b4 	ldr.w	r8, [pc, #948]	; 8019038 <??DataTable7_1>
 8018c86:	468a      	mov	sl, r1
 8018c88:	f898 4173 	ldrb.w	r4, [r8, #371]	; 0x173
 8018c8c:	4668      	mov	r0, sp
 8018c8e:	f018 f92a 	bl	8030ee6 <__aeabi_memcpy>
 8018c92:	464d      	mov	r5, r9
 8018c94:	e010      	b.n	8018cb8 <??aci_gap_update_adv_data_1>

08018c96 <??aci_gap_update_adv_data_2>:
 8018c96:	f10b 0201 	add.w	r2, fp, #1
 8018c9a:	4631      	mov	r1, r6
 8018c9c:	eb0d 0005 	add.w	r0, sp, r5
 8018ca0:	445d      	add	r5, fp
 8018ca2:	1c6d      	adds	r5, r5, #1
 8018ca4:	f018 f91f 	bl	8030ee6 <__aeabi_memcpy>
 8018ca8:	b2ed      	uxtb	r5, r5

08018caa <??aci_gap_update_adv_data_3>:
 8018caa:	7830      	ldrb	r0, [r6, #0]
 8018cac:	1a24      	subs	r4, r4, r0
 8018cae:	1e64      	subs	r4, r4, #1
 8018cb0:	19c7      	adds	r7, r0, r7
 8018cb2:	1c7f      	adds	r7, r7, #1
 8018cb4:	b2e4      	uxtb	r4, r4
 8018cb6:	b2ff      	uxtb	r7, r7

08018cb8 <??aci_gap_update_adv_data_1>:
 8018cb8:	2c00      	cmp	r4, #0
 8018cba:	464a      	mov	r2, r9
 8018cbc:	d023      	beq.n	8018d06 <??aci_gap_update_adv_data_4>
 8018cbe:	eb08 0007 	add.w	r0, r8, r7
 8018cc2:	f500 76ba 	add.w	r6, r0, #372	; 0x174
 8018cc6:	2100      	movs	r1, #0
 8018cc8:	7873      	ldrb	r3, [r6, #1]
 8018cca:	e012      	b.n	8018cf2 <??aci_gap_update_adv_data_5>

08018ccc <??aci_gap_update_adv_data_6>:
 8018ccc:	f81a 0001 	ldrb.w	r0, [sl, r1]
 8018cd0:	4282      	cmp	r2, r0
 8018cd2:	db2a      	blt.n	8018d2a <??aci_gap_update_adv_data_0>
 8018cd4:	4290      	cmp	r0, r2
 8018cd6:	d100      	bne.n	8018cda <??aci_gap_update_adv_data_7>
 8018cd8:	bb38      	cbnz	r0, 8018d2a <??aci_gap_update_adv_data_0>

08018cda <??aci_gap_update_adv_data_7>:
 8018cda:	eb0a 0c01 	add.w	ip, sl, r1
 8018cde:	f89c e001 	ldrb.w	lr, [ip, #1]
 8018ce2:	1a12      	subs	r2, r2, r0
 8018ce4:	1e52      	subs	r2, r2, #1
 8018ce6:	b2d2      	uxtb	r2, r2
 8018ce8:	459e      	cmp	lr, r3
 8018cea:	d0de      	beq.n	8018caa <??aci_gap_update_adv_data_3>
 8018cec:	1841      	adds	r1, r0, r1
 8018cee:	1c49      	adds	r1, r1, #1
 8018cf0:	b2c9      	uxtb	r1, r1

08018cf2 <??aci_gap_update_adv_data_5>:
 8018cf2:	4549      	cmp	r1, r9
 8018cf4:	dbea      	blt.n	8018ccc <??aci_gap_update_adv_data_6>
 8018cf6:	f896 b000 	ldrb.w	fp, [r6]
 8018cfa:	eb0b 0005 	add.w	r0, fp, r5
 8018cfe:	1c40      	adds	r0, r0, #1
 8018d00:	2820      	cmp	r0, #32
 8018d02:	d3c8      	bcc.n	8018c96 <??aci_gap_update_adv_data_2>
 8018d04:	e015      	b.n	8018d32 <??aci_gap_update_adv_data_8>

08018d06 <??aci_gap_update_adv_data_4>:
 8018d06:	2100      	movs	r1, #0
 8018d08:	e005      	b.n	8018d16 <??aci_gap_update_adv_data_9>

08018d0a <??aci_gap_update_adv_data_10>:
 8018d0a:	1a12      	subs	r2, r2, r0
 8018d0c:	1840      	adds	r0, r0, r1
 8018d0e:	1e52      	subs	r2, r2, #1
 8018d10:	1c40      	adds	r0, r0, #1
 8018d12:	b2d2      	uxtb	r2, r2
 8018d14:	b2c1      	uxtb	r1, r0

08018d16 <??aci_gap_update_adv_data_9>:
 8018d16:	4549      	cmp	r1, r9
 8018d18:	da09      	bge.n	8018d2e <??aci_gap_update_adv_data_11>
 8018d1a:	f81a 0001 	ldrb.w	r0, [sl, r1]
 8018d1e:	4282      	cmp	r2, r0
 8018d20:	db03      	blt.n	8018d2a <??aci_gap_update_adv_data_0>
 8018d22:	4290      	cmp	r0, r2
 8018d24:	d1f1      	bne.n	8018d0a <??aci_gap_update_adv_data_10>
 8018d26:	2800      	cmp	r0, #0
 8018d28:	d0ef      	beq.n	8018d0a <??aci_gap_update_adv_data_10>

08018d2a <??aci_gap_update_adv_data_0>:
 8018d2a:	2092      	movs	r0, #146	; 0x92
 8018d2c:	e007      	b.n	8018d3e <?Subroutine0>

08018d2e <??aci_gap_update_adv_data_11>:
 8018d2e:	2d20      	cmp	r5, #32
 8018d30:	d301      	bcc.n	8018d36 <??aci_gap_update_adv_data_12>

08018d32 <??aci_gap_update_adv_data_8>:
 8018d32:	2091      	movs	r0, #145	; 0x91
 8018d34:	e003      	b.n	8018d3e <?Subroutine0>

08018d36 <??aci_gap_update_adv_data_12>:
 8018d36:	4669      	mov	r1, sp
 8018d38:	4628      	mov	r0, r5
 8018d3a:	f000 f969 	bl	8019010 <GAP_Adv_SetData>

08018d3e <?Subroutine0>:
 8018d3e:	b009      	add	sp, #36	; 0x24
 8018d40:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08018d44 <aci_gap_delete_ad_type>:
 8018d44:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8018d48:	4680      	mov	r8, r0
 8018d4a:	48bb      	ldr	r0, [pc, #748]	; (8019038 <??DataTable7_1>)
 8018d4c:	f890 4173 	ldrb.w	r4, [r0, #371]	; 0x173
 8018d50:	b088      	sub	sp, #32
 8018d52:	f500 75ba 	add.w	r5, r0, #372	; 0x174
 8018d56:	4622      	mov	r2, r4
 8018d58:	4629      	mov	r1, r5
 8018d5a:	4668      	mov	r0, sp
 8018d5c:	2600      	movs	r6, #0
 8018d5e:	2700      	movs	r7, #0
 8018d60:	f018 f8c1 	bl	8030ee6 <__aeabi_memcpy>
 8018d64:	e000      	b.n	8018d68 <??aci_gap_delete_ad_type_0>

08018d66 <??aci_gap_delete_ad_type_1>:
 8018d66:	19c7      	adds	r7, r0, r7

08018d68 <??aci_gap_delete_ad_type_0>:
 8018d68:	b1cc      	cbz	r4, 8018d9e <??aci_gap_delete_ad_type_2>
 8018d6a:	19a9      	adds	r1, r5, r6
 8018d6c:	7808      	ldrb	r0, [r1, #0]
 8018d6e:	1c40      	adds	r0, r0, #1
 8018d70:	b2c0      	uxtb	r0, r0
 8018d72:	4284      	cmp	r4, r0
 8018d74:	db13      	blt.n	8018d9e <??aci_gap_delete_ad_type_2>
 8018d76:	7849      	ldrb	r1, [r1, #1]
 8018d78:	1a24      	subs	r4, r4, r0
 8018d7a:	1986      	adds	r6, r0, r6
 8018d7c:	b2e4      	uxtb	r4, r4
 8018d7e:	b2f6      	uxtb	r6, r6
 8018d80:	4541      	cmp	r1, r8
 8018d82:	d1f0      	bne.n	8018d66 <??aci_gap_delete_ad_type_1>
 8018d84:	b2fb      	uxtb	r3, r7
 8018d86:	4622      	mov	r2, r4
 8018d88:	19a9      	adds	r1, r5, r6
 8018d8a:	eb0d 0003 	add.w	r0, sp, r3
 8018d8e:	f018 f8aa 	bl	8030ee6 <__aeabi_memcpy>
 8018d92:	19e7      	adds	r7, r4, r7
 8018d94:	4669      	mov	r1, sp
 8018d96:	b2f8      	uxtb	r0, r7
 8018d98:	f000 f93a 	bl	8019010 <GAP_Adv_SetData>
 8018d9c:	e000      	b.n	8018da0 <?Subroutine2>

08018d9e <??aci_gap_delete_ad_type_2>:
 8018d9e:	201f      	movs	r0, #31

08018da0 <?Subroutine2>:
 8018da0:	b008      	add	sp, #32
 8018da2:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

08018da6 <aci_gap_set_non_discoverable>:
 8018da6:	b510      	push	{r4, lr}
 8018da8:	4ca3      	ldr	r4, [pc, #652]	; (8019038 <??DataTable7_1>)
 8018daa:	f894 0171 	ldrb.w	r0, [r4, #369]	; 0x171
 8018dae:	b908      	cbnz	r0, 8018db4 <??aci_gap_set_non_discoverable_0>
 8018db0:	200c      	movs	r0, #12
 8018db2:	bd10      	pop	{r4, pc}

08018db4 <??aci_gap_set_non_discoverable_0>:
 8018db4:	2000      	movs	r0, #0
 8018db6:	f007 f8f7 	bl	801ffa8 <hci_le_set_advertising_enable>
 8018dba:	0001      	movs	r1, r0
 8018dbc:	d10c      	bne.n	8018dd8 <??aci_gap_set_non_discoverable_1>
 8018dbe:	2001      	movs	r0, #1
 8018dc0:	f7ff ffc0 	bl	8018d44 <aci_gap_delete_ad_type>
 8018dc4:	f894 0171 	ldrb.w	r0, [r4, #369]	; 0x171
 8018dc8:	0781      	lsls	r1, r0, #30
 8018dca:	bf44      	itt	mi
 8018dcc:	2005      	movmi	r0, #5
 8018dce:	f00e fdbb 	blmi	8027948 <BLEPLAT_TimerStop>
 8018dd2:	2000      	movs	r0, #0
 8018dd4:	f884 0171 	strb.w	r0, [r4, #369]	; 0x171

08018dd8 <??aci_gap_set_non_discoverable_1>:
 8018dd8:	bd10      	pop	{r4, pc}

08018dda <GAP_Adv_Start>:
 8018dda:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8018dde:	b08d      	sub	sp, #52	; 0x34
 8018de0:	4604      	mov	r4, r0
 8018de2:	460d      	mov	r5, r1
 8018de4:	4692      	mov	sl, r2
 8018de6:	4699      	mov	r9, r3
 8018de8:	211f      	movs	r1, #31
 8018dea:	a805      	add	r0, sp, #20
 8018dec:	f018 f878 	bl	8030ee0 <__aeabi_memclr>
 8018df0:	f8df 8244 	ldr.w	r8, [pc, #580]	; 8019038 <??DataTable7_1>
 8018df4:	f508 71b8 	add.w	r1, r8, #368	; 0x170
 8018df8:	7848      	ldrb	r0, [r1, #1]
 8018dfa:	2600      	movs	r6, #0
 8018dfc:	2700      	movs	r7, #0
 8018dfe:	bb58      	cbnz	r0, 8018e58 <??GAP_Adv_Start_0>
 8018e00:	f88d 5010 	strb.w	r5, [sp, #16]
 8018e04:	9816      	ldr	r0, [sp, #88]	; 0x58
 8018e06:	2d02      	cmp	r5, #2
 8018e08:	bf18      	it	ne
 8018e0a:	2d03      	cmpne	r5, #3
 8018e0c:	d002      	beq.n	8018e14 <??GAP_Adv_Start_1>
 8018e0e:	2803      	cmp	r0, #3
 8018e10:	f000 80b5 	beq.w	8018f7e <??GAP_Adv_Start_2>

08018e14 <??GAP_Adv_Start_1>:
 8018e14:	ea59 010a 	orrs.w	r1, r9, sl
 8018e18:	d113      	bne.n	8018e42 <??GAP_Adv_Start_3>
 8018e1a:	2d00      	cmp	r5, #0
 8018e1c:	bf18      	it	ne
 8018e1e:	2d04      	cmpne	r5, #4
 8018e20:	d104      	bne.n	8018e2c <??GAP_Adv_Start_4>
 8018e22:	f04f 0a30 	mov.w	sl, #48	; 0x30
 8018e26:	f04f 0960 	mov.w	r9, #96	; 0x60
 8018e2a:	e00a      	b.n	8018e42 <??GAP_Adv_Start_3>

08018e2c <??GAP_Adv_Start_4>:
 8018e2c:	2d02      	cmp	r5, #2
 8018e2e:	bf18      	it	ne
 8018e30:	2d03      	cmpne	r5, #3
 8018e32:	bf07      	ittee	eq
 8018e34:	f04f 0aa0 	moveq.w	sl, #160	; 0xa0
 8018e38:	f04f 09f0 	moveq.w	r9, #240	; 0xf0
 8018e3c:	f04f 0a06 	movne.w	sl, #6
 8018e40:	46d1      	movne	r9, sl

08018e42 <??GAP_Adv_Start_3>:
 8018e42:	f88d 4011 	strb.w	r4, [sp, #17]
 8018e46:	4d7d      	ldr	r5, [pc, #500]	; (801903c <??DataTable7_2>)
 8018e48:	7829      	ldrb	r1, [r5, #0]
 8018e4a:	2c40      	cmp	r4, #64	; 0x40
 8018e4c:	d102      	bne.n	8018e54 <??GAP_Adv_Start_5>
 8018e4e:	0789      	lsls	r1, r1, #30
 8018e50:	d410      	bmi.n	8018e74 <??GAP_Adv_Start_6>
 8018e52:	e001      	b.n	8018e58 <??GAP_Adv_Start_0>

08018e54 <??GAP_Adv_Start_5>:
 8018e54:	07ca      	lsls	r2, r1, #31
 8018e56:	d401      	bmi.n	8018e5c <??GAP_Adv_Start_7>

08018e58 <??GAP_Adv_Start_0>:
 8018e58:	200c      	movs	r0, #12
 8018e5a:	e0bf      	b.n	8018fdc <??GAP_Adv_Start_10>

08018e5c <??GAP_Adv_Start_7>:
 8018e5c:	2c04      	cmp	r4, #4
 8018e5e:	bf08      	it	eq
 8018e60:	2706      	moveq	r7, #6
 8018e62:	d002      	beq.n	8018e6a <??GAP_Adv_Start_8>
 8018e64:	2c02      	cmp	r4, #2
 8018e66:	d102      	bne.n	8018e6e <??GAP_Adv_Start_9>
 8018e68:	2705      	movs	r7, #5

08018e6a <??GAP_Adv_Start_8>:
 8018e6a:	2601      	movs	r6, #1
 8018e6c:	e002      	b.n	8018e74 <??GAP_Adv_Start_6>

08018e6e <??GAP_Adv_Start_9>:
 8018e6e:	2c20      	cmp	r4, #32
 8018e70:	bf08      	it	eq
 8018e72:	2704      	moveq	r7, #4

08018e74 <??GAP_Adv_Start_6>:
 8018e74:	2200      	movs	r2, #0
 8018e76:	f10d 0112 	add.w	r1, sp, #18
 8018e7a:	f000 f988 	bl	801918e <GAP_Set_Own_Address>
 8018e7e:	0001      	movs	r1, r0
 8018e80:	f040 80ac 	bne.w	8018fdc <??GAP_Adv_Start_10>
 8018e84:	f8dd b074 	ldr.w	fp, [sp, #116]	; 0x74
 8018e88:	f8bd 1070 	ldrh.w	r1, [sp, #112]	; 0x70
 8018e8c:	2400      	movs	r4, #0
 8018e8e:	f8ad b002 	strh.w	fp, [sp, #2]
 8018e92:	f8ad 1000 	strh.w	r1, [sp]
 8018e96:	b13f      	cbz	r7, 8018ea8 <??GAP_Adv_Start_11>
 8018e98:	2102      	movs	r1, #2
 8018e9a:	a805      	add	r0, sp, #20
 8018e9c:	2201      	movs	r2, #1
 8018e9e:	f88d 1014 	strb.w	r1, [sp, #20]
 8018ea2:	7042      	strb	r2, [r0, #1]
 8018ea4:	7087      	strb	r7, [r0, #2]
 8018ea6:	2403      	movs	r4, #3

08018ea8 <??GAP_Adv_Start_11>:
 8018ea8:	9f18      	ldr	r7, [sp, #96]	; 0x60
 8018eaa:	b187      	cbz	r7, 8018ece <??GAP_Adv_Start_12>
 8018eac:	f898 0037 	ldrb.w	r0, [r8, #55]	; 0x37
 8018eb0:	b968      	cbnz	r0, 8018ece <??GAP_Adv_Start_12>
 8018eb2:	19e1      	adds	r1, r4, r7
 8018eb4:	1c49      	adds	r1, r1, #1
 8018eb6:	291f      	cmp	r1, #31
 8018eb8:	d861      	bhi.n	8018f7e <??GAP_Adv_Start_2>
 8018eba:	aa05      	add	r2, sp, #20
 8018ebc:	5517      	strb	r7, [r2, r4]
 8018ebe:	9919      	ldr	r1, [sp, #100]	; 0x64
 8018ec0:	1c64      	adds	r4, r4, #1
 8018ec2:	a805      	add	r0, sp, #20
 8018ec4:	463a      	mov	r2, r7
 8018ec6:	4420      	add	r0, r4
 8018ec8:	f018 f80d 	bl	8030ee6 <__aeabi_memcpy>
 8018ecc:	193c      	adds	r4, r7, r4

08018ece <??GAP_Adv_Start_12>:
 8018ece:	9f1a      	ldr	r7, [sp, #104]	; 0x68
 8018ed0:	b18f      	cbz	r7, 8018ef6 <??GAP_Adv_Start_13>
 8018ed2:	b2e0      	uxtb	r0, r4
 8018ed4:	19c1      	adds	r1, r0, r7
 8018ed6:	1c49      	adds	r1, r1, #1
 8018ed8:	291f      	cmp	r1, #31
 8018eda:	d850      	bhi.n	8018f7e <??GAP_Adv_Start_2>
 8018edc:	aa05      	add	r2, sp, #20
 8018ede:	1c64      	adds	r4, r4, #1
 8018ee0:	5417      	strb	r7, [r2, r0]
 8018ee2:	991b      	ldr	r1, [sp, #108]	; 0x6c
 8018ee4:	ab05      	add	r3, sp, #20
 8018ee6:	fa5f fc84 	uxtb.w	ip, r4
 8018eea:	463a      	mov	r2, r7
 8018eec:	eb03 000c 	add.w	r0, r3, ip
 8018ef0:	f017 fff9 	bl	8030ee6 <__aeabi_memcpy>
 8018ef4:	193c      	adds	r4, r7, r4

08018ef6 <??GAP_Adv_Start_13>:
 8018ef6:	f8bd 0070 	ldrh.w	r0, [sp, #112]	; 0x70
 8018efa:	2800      	cmp	r0, #0
 8018efc:	bf18      	it	ne
 8018efe:	f1bb 0f00 	cmpne.w	fp, #0
 8018f02:	d021      	beq.n	8018f48 <??GAP_Adv_Start_14>
 8018f04:	b2e0      	uxtb	r0, r4
 8018f06:	1d40      	adds	r0, r0, #5
 8018f08:	281f      	cmp	r0, #31
 8018f0a:	d838      	bhi.n	8018f7e <??GAP_Adv_Start_2>
 8018f0c:	a805      	add	r0, sp, #20
 8018f0e:	2105      	movs	r1, #5
 8018f10:	b2e2      	uxtb	r2, r4
 8018f12:	1c64      	adds	r4, r4, #1
 8018f14:	5481      	strb	r1, [r0, r2]
 8018f16:	2312      	movs	r3, #18
 8018f18:	fa5f fc84 	uxtb.w	ip, r4
 8018f1c:	f800 300c 	strb.w	r3, [r0, ip]
 8018f20:	1c64      	adds	r4, r4, #1
 8018f22:	f89d 3000 	ldrb.w	r3, [sp]
 8018f26:	b2e0      	uxtb	r0, r4
 8018f28:	aa05      	add	r2, sp, #20
 8018f2a:	4402      	add	r2, r0
 8018f2c:	7013      	strb	r3, [r2, #0]
 8018f2e:	f89d 3001 	ldrb.w	r3, [sp, #1]
 8018f32:	f10d 0102 	add.w	r1, sp, #2
 8018f36:	1d24      	adds	r4, r4, #4
 8018f38:	7053      	strb	r3, [r2, #1]
 8018f3a:	f10d 0216 	add.w	r2, sp, #22
 8018f3e:	4410      	add	r0, r2
 8018f40:	780a      	ldrb	r2, [r1, #0]
 8018f42:	7002      	strb	r2, [r0, #0]
 8018f44:	784a      	ldrb	r2, [r1, #1]
 8018f46:	7042      	strb	r2, [r0, #1]

08018f48 <??GAP_Adv_Start_14>:
 8018f48:	b19e      	cbz	r6, 8018f72 <??GAP_Adv_Start_15>
 8018f4a:	b2e0      	uxtb	r0, r4
 8018f4c:	1cc0      	adds	r0, r0, #3
 8018f4e:	281f      	cmp	r0, #31
 8018f50:	d815      	bhi.n	8018f7e <??GAP_Adv_Start_2>
 8018f52:	a805      	add	r0, sp, #20
 8018f54:	2102      	movs	r1, #2
 8018f56:	b2e2      	uxtb	r2, r4
 8018f58:	1c64      	adds	r4, r4, #1
 8018f5a:	5481      	strb	r1, [r0, r2]
 8018f5c:	230a      	movs	r3, #10
 8018f5e:	fa5f fc84 	uxtb.w	ip, r4
 8018f62:	1c64      	adds	r4, r4, #1
 8018f64:	f800 300c 	strb.w	r3, [r0, ip]
 8018f68:	b2e1      	uxtb	r1, r4
 8018f6a:	4408      	add	r0, r1
 8018f6c:	f007 f9a3 	bl	80202b6 <hci_le_read_advertising_physical_channel_tx_power>
 8018f70:	1c64      	adds	r4, r4, #1

08018f72 <??GAP_Adv_Start_15>:
 8018f72:	9e20      	ldr	r6, [sp, #128]	; 0x80
 8018f74:	b166      	cbz	r6, 8018f90 <??GAP_Adv_Start_16>
 8018f76:	b2e0      	uxtb	r0, r4
 8018f78:	1981      	adds	r1, r0, r6
 8018f7a:	291f      	cmp	r1, #31
 8018f7c:	d901      	bls.n	8018f82 <??GAP_Adv_Start_17>

08018f7e <??GAP_Adv_Start_2>:
 8018f7e:	2092      	movs	r0, #146	; 0x92
 8018f80:	e02c      	b.n	8018fdc <??GAP_Adv_Start_10>

08018f82 <??GAP_Adv_Start_17>:
 8018f82:	9921      	ldr	r1, [sp, #132]	; 0x84
 8018f84:	ab05      	add	r3, sp, #20
 8018f86:	4632      	mov	r2, r6
 8018f88:	4418      	add	r0, r3
 8018f8a:	f017 ffac 	bl	8030ee6 <__aeabi_memcpy>
 8018f8e:	1934      	adds	r4, r6, r4

08018f90 <??GAP_Adv_Start_16>:
 8018f90:	a905      	add	r1, sp, #20
 8018f92:	b2e0      	uxtb	r0, r4
 8018f94:	f000 f83c 	bl	8019010 <GAP_Adv_SetData>
 8018f98:	0001      	movs	r1, r0
 8018f9a:	d11f      	bne.n	8018fdc <??GAP_Adv_Start_10>
 8018f9c:	981f      	ldr	r0, [sp, #124]	; 0x7c
 8018f9e:	991e      	ldr	r1, [sp, #120]	; 0x78
 8018fa0:	b918      	cbnz	r0, 8018faa <??GAP_Adv_Start_18>
 8018fa2:	f898 1194 	ldrb.w	r1, [r8, #404]	; 0x194
 8018fa6:	f208 1095 	addw	r0, r8, #405	; 0x195

08018faa <??GAP_Adv_Start_18>:
 8018faa:	f89d 205c 	ldrb.w	r2, [sp, #92]	; 0x5c
 8018fae:	2307      	movs	r3, #7
 8018fb0:	9302      	str	r3, [sp, #8]
 8018fb2:	9203      	str	r2, [sp, #12]
 8018fb4:	f89d 3012 	ldrb.w	r3, [sp, #18]
 8018fb8:	f89d 2010 	ldrb.w	r2, [sp, #16]
 8018fbc:	9001      	str	r0, [sp, #4]
 8018fbe:	9100      	str	r1, [sp, #0]
 8018fc0:	4649      	mov	r1, r9
 8018fc2:	4650      	mov	r0, sl
 8018fc4:	f006 ffc1 	bl	801ff4a <hci_le_set_advertising_parameters>
 8018fc8:	0001      	movs	r1, r0
 8018fca:	d107      	bne.n	8018fdc <??GAP_Adv_Start_10>
 8018fcc:	2001      	movs	r0, #1
 8018fce:	f006 ffeb 	bl	801ffa8 <hci_le_set_advertising_enable>
 8018fd2:	0001      	movs	r1, r0
 8018fd4:	bf04      	itt	eq
 8018fd6:	f89d 1011 	ldrbeq.w	r1, [sp, #17]
 8018fda:	7069      	strbeq	r1, [r5, #1]

08018fdc <??GAP_Adv_Start_10>:
 8018fdc:	b00d      	add	sp, #52	; 0x34
 8018fde:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08018fe2 <GAP_Adv_DiscParamsCheck>:
 8018fe2:	ea52 0301 	orrs.w	r3, r2, r1
 8018fe6:	d00b      	beq.n	8019000 <??GAP_Adv_DiscParamsCheck_0>
 8018fe8:	428a      	cmp	r2, r1
 8018fea:	bf28      	it	cs
 8018fec:	2906      	cmpcs	r1, #6
 8018fee:	d30b      	bcc.n	8019008 <??GAP_Adv_DiscParamsCheck_1>
 8018ff0:	f64f 73ff 	movw	r3, #65535	; 0xffff
 8018ff4:	429a      	cmp	r2, r3
 8018ff6:	d003      	beq.n	8019000 <??GAP_Adv_DiscParamsCheck_0>
 8018ff8:	f640 4181 	movw	r1, #3201	; 0xc81
 8018ffc:	428a      	cmp	r2, r1
 8018ffe:	d203      	bcs.n	8019008 <??GAP_Adv_DiscParamsCheck_1>

08019000 <??GAP_Adv_DiscParamsCheck_0>:
 8019000:	2801      	cmp	r0, #1
 8019002:	bf18      	it	ne
 8019004:	2804      	cmpne	r0, #4
 8019006:	d101      	bne.n	801900c <??GAP_Adv_DiscParamsCheck_2>

08019008 <??GAP_Adv_DiscParamsCheck_1>:
 8019008:	2092      	movs	r0, #146	; 0x92
 801900a:	4770      	bx	lr

0801900c <??GAP_Adv_DiscParamsCheck_2>:
 801900c:	2000      	movs	r0, #0
 801900e:	4770      	bx	lr

08019010 <GAP_Adv_SetData>:
 8019010:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8019012:	4604      	mov	r4, r0
 8019014:	460d      	mov	r5, r1
 8019016:	f006 ffbd 	bl	801ff94 <hci_le_set_advertising_data>
 801901a:	0006      	movs	r6, r0
 801901c:	d108      	bne.n	8019030 <??GAP_Adv_SetData_0>
 801901e:	4f06      	ldr	r7, [pc, #24]	; (8019038 <??DataTable7_1>)
 8019020:	4622      	mov	r2, r4
 8019022:	4629      	mov	r1, r5
 8019024:	f507 70ba 	add.w	r0, r7, #372	; 0x174
 8019028:	f017 ff5d 	bl	8030ee6 <__aeabi_memcpy>
 801902c:	f887 4173 	strb.w	r4, [r7, #371]	; 0x173

08019030 <??GAP_Adv_SetData_0>:
 8019030:	4630      	mov	r0, r6
 8019032:	bdf2      	pop	{r1, r4, r5, r6, r7, pc}

08019034 <??DataTable7>:
 8019034:	bf20 0002                                    ...

08019038 <??DataTable7_1>:
 8019038:	3710 2000                                   .7. 

0801903c <??DataTable7_2>:
 801903c:	3880 2000                                   .8. 

08019040 <GAP_Enable_Privacy>:
 8019040:	4981      	ldr	r1, [pc, #516]	; (8019248 <??DataTable2>)
 8019042:	f881 0037 	strb.w	r0, [r1, #55]	; 0x37
 8019046:	2800      	cmp	r0, #0
 8019048:	d100      	bne.n	801904c <??GAP_Enable_Privacy_0>
 801904a:	4770      	bx	lr

0801904c <??GAP_Enable_Privacy_0>:
 801904c:	b580      	push	{r7, lr}
 801904e:	f201 109b 	addw	r0, r1, #411	; 0x19b
 8019052:	f008 fad1 	bl	80215f8 <SMA_Generate_IRK>
 8019056:	f007 f984 	bl	8020362 <LECTRL_Enhanced_Conn_Complete_Event_Unmask>
 801905a:	2001      	movs	r0, #1
 801905c:	e8bd 4002 	ldmia.w	sp!, {r1, lr}
 8019060:	f007 b8d0 	b.w	8020204 <hci_le_set_address_resolution_enable>

08019064 <aci_gap_add_devices_to_list>:
 8019064:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8019068:	4683      	mov	fp, r0
 801906a:	4690      	mov	r8, r2
 801906c:	b09b      	sub	sp, #108	; 0x6c
 801906e:	460f      	mov	r7, r1
 8019070:	2400      	movs	r4, #0
 8019072:	f008 0001 	and.w	r0, r8, #1
 8019076:	f88d 0000 	strb.w	r0, [sp]
 801907a:	ea5f 7188 	movs.w	r1, r8, lsl #30
 801907e:	d440      	bmi.n	8019102 <??aci_gap_add_devices_to_list_0>
 8019080:	b118      	cbz	r0, 801908a <??aci_gap_add_devices_to_list_1>
 8019082:	f007 f8d8 	bl	8020236 <hci_le_clear_resolving_list>
 8019086:	0001      	movs	r1, r0
 8019088:	d13a      	bne.n	8019100 <??aci_gap_add_devices_to_list_2>

0801908a <??aci_gap_add_devices_to_list_1>:
 801908a:	ea5f 000b 	movs.w	r0, fp
 801908e:	d038      	beq.n	8019102 <??aci_gap_add_devices_to_list_0>
 8019090:	496e      	ldr	r1, [pc, #440]	; (801924c <??DataTable2_1>)
 8019092:	4a6f      	ldr	r2, [pc, #444]	; (8019250 <??DataTable2_2>)
 8019094:	463e      	mov	r6, r7
 8019096:	46da      	mov	sl, fp
 8019098:	9102      	str	r1, [sp, #8]
 801909a:	9201      	str	r2, [sp, #4]

0801909c <??aci_gap_add_devices_to_list_3>:
 801909c:	7835      	ldrb	r5, [r6, #0]
 801909e:	f106 0901 	add.w	r9, r6, #1
 80190a2:	2d01      	cmp	r5, #1
 80190a4:	d001      	beq.n	80190aa <??aci_gap_add_devices_to_list_4>
 80190a6:	0028      	movs	r0, r5
 80190a8:	d120      	bne.n	80190ec <??aci_gap_add_devices_to_list_5>

080190aa <??aci_gap_add_devices_to_list_4>:
 80190aa:	aa07      	add	r2, sp, #28
 80190ac:	4629      	mov	r1, r5
 80190ae:	4648      	mov	r0, r9
 80190b0:	f007 fff5 	bl	802109e <SDB_Read_Sec_Record>
 80190b4:	b9e0      	cbnz	r0, 80190f0 <??aci_gap_add_devices_to_list_6>
 80190b6:	2210      	movs	r2, #16
 80190b8:	f10d 013a 	add.w	r1, sp, #58	; 0x3a
 80190bc:	a803      	add	r0, sp, #12
 80190be:	f017 ff12 	bl	8030ee6 <__aeabi_memcpy>

080190c2 <??aci_gap_add_devices_to_list_7>:
 80190c2:	9b01      	ldr	r3, [sp, #4]
 80190c4:	aa03      	add	r2, sp, #12
 80190c6:	4649      	mov	r1, r9
 80190c8:	4628      	mov	r0, r5
 80190ca:	f007 f8be 	bl	802024a <hci_le_add_device_to_resolving_list>
 80190ce:	0001      	movs	r1, r0
 80190d0:	d116      	bne.n	8019100 <??aci_gap_add_devices_to_list_2>
 80190d2:	485d      	ldr	r0, [pc, #372]	; (8019248 <??DataTable2>)
 80190d4:	f880 5194 	strb.w	r5, [r0, #404]	; 0x194
 80190d8:	9802      	ldr	r0, [sp, #8]
 80190da:	2206      	movs	r2, #6
 80190dc:	4649      	mov	r1, r9
 80190de:	f017 ff02 	bl	8030ee6 <__aeabi_memcpy>
 80190e2:	1df6      	adds	r6, r6, #7
 80190e4:	f1ba 0a01 	subs.w	sl, sl, #1
 80190e8:	d1d8      	bne.n	801909c <??aci_gap_add_devices_to_list_3>
 80190ea:	e00a      	b.n	8019102 <??aci_gap_add_devices_to_list_0>

080190ec <??aci_gap_add_devices_to_list_5>:
 80190ec:	2492      	movs	r4, #146	; 0x92
 80190ee:	e008      	b.n	8019102 <??aci_gap_add_devices_to_list_0>

080190f0 <??aci_gap_add_devices_to_list_6>:
 80190f0:	2100      	movs	r1, #0
 80190f2:	a803      	add	r0, sp, #12
 80190f4:	2200      	movs	r2, #0
 80190f6:	2300      	movs	r3, #0
 80190f8:	468c      	mov	ip, r1
 80190fa:	e880 100e 	stmia.w	r0, {r1, r2, r3, ip}
 80190fe:	e7e0      	b.n	80190c2 <??aci_gap_add_devices_to_list_7>

08019100 <??aci_gap_add_devices_to_list_2>:
 8019100:	4604      	mov	r4, r0

08019102 <??aci_gap_add_devices_to_list_0>:
 8019102:	f018 0f06 	tst.w	r8, #6
 8019106:	d011      	beq.n	801912c <??aci_gap_add_devices_to_list_8>
 8019108:	f89d 0000 	ldrb.w	r0, [sp]
 801910c:	b108      	cbz	r0, 8019112 <??aci_gap_add_devices_to_list_9>
 801910e:	f007 f8ad 	bl	802026c <hci_le_clear_filter_accept_list>

08019112 <??aci_gap_add_devices_to_list_9>:
 8019112:	ea5f 000b 	movs.w	r0, fp
 8019116:	d009      	beq.n	801912c <??aci_gap_add_devices_to_list_8>

08019118 <??aci_gap_add_devices_to_list_10>:
 8019118:	7838      	ldrb	r0, [r7, #0]
 801911a:	1c79      	adds	r1, r7, #1
 801911c:	f007 f8ab 	bl	8020276 <hci_le_add_device_to_filter_accept_list>
 8019120:	4604      	mov	r4, r0
 8019122:	b918      	cbnz	r0, 801912c <??aci_gap_add_devices_to_list_8>
 8019124:	1dff      	adds	r7, r7, #7
 8019126:	f1bb 0b01 	subs.w	fp, fp, #1
 801912a:	d1f5      	bne.n	8019118 <??aci_gap_add_devices_to_list_10>

0801912c <??aci_gap_add_devices_to_list_8>:
 801912c:	4620      	mov	r0, r4
 801912e:	b01b      	add	sp, #108	; 0x6c
 8019130:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08019134 <aci_gap_configure_whitelist>:
 8019134:	b510      	push	{r4, lr}
 8019136:	b094      	sub	sp, #80	; 0x50
 8019138:	f007 f898 	bl	802026c <hci_le_clear_filter_accept_list>
 801913c:	2400      	movs	r4, #0

0801913e <??aci_gap_configure_whitelist_0>:
 801913e:	4669      	mov	r1, sp
 8019140:	4620      	mov	r0, r4
 8019142:	f007 ff9d 	bl	8021080 <SDB_Get_Sec_Record>
 8019146:	b968      	cbnz	r0, 8019164 <??aci_gap_configure_whitelist_1>
 8019148:	f89d 0001 	ldrb.w	r0, [sp, #1]
 801914c:	f10d 013e 	add.w	r1, sp, #62	; 0x3e
 8019150:	2401      	movs	r4, #1
 8019152:	f000 0001 	and.w	r0, r0, #1
 8019156:	f007 f88e 	bl	8020276 <hci_le_add_device_to_filter_accept_list>
 801915a:	2800      	cmp	r0, #0
 801915c:	d0ef      	beq.n	801913e <??aci_gap_configure_whitelist_0>
 801915e:	2097      	movs	r0, #151	; 0x97
 8019160:	b014      	add	sp, #80	; 0x50
 8019162:	bd10      	pop	{r4, pc}

08019164 <??aci_gap_configure_whitelist_1>:
 8019164:	2000      	movs	r0, #0
 8019166:	b014      	add	sp, #80	; 0x50
 8019168:	bd10      	pop	{r4, pc}

0801916a <aci_gap_resolve_private_addr>:
 801916a:	b510      	push	{r4, lr}
 801916c:	b094      	sub	sp, #80	; 0x50
 801916e:	460c      	mov	r4, r1
 8019170:	466a      	mov	r2, sp
 8019172:	2101      	movs	r1, #1
 8019174:	f007 ff93 	bl	802109e <SDB_Read_Sec_Record>
 8019178:	b930      	cbnz	r0, 8019188 <??aci_gap_resolve_private_addr_0>
 801917a:	2206      	movs	r2, #6
 801917c:	f10d 013e 	add.w	r1, sp, #62	; 0x3e
 8019180:	4620      	mov	r0, r4
 8019182:	f017 feb0 	bl	8030ee6 <__aeabi_memcpy>
 8019186:	e7ed      	b.n	8019164 <??aci_gap_configure_whitelist_1>

08019188 <??aci_gap_resolve_private_addr_0>:
 8019188:	2070      	movs	r0, #112	; 0x70
 801918a:	b014      	add	sp, #80	; 0x50
 801918c:	bd10      	pop	{r4, pc}

0801918e <GAP_Set_Own_Address>:
 801918e:	e92d 4ffe 	stmdb	sp!, {r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8019192:	4605      	mov	r5, r0
 8019194:	4689      	mov	r9, r1
 8019196:	0014      	movs	r4, r2
 8019198:	bf14      	ite	ne
 801919a:	46a2      	movne	sl, r4
 801919c:	46ea      	moveq	sl, sp
 801919e:	f8df b0a8 	ldr.w	fp, [pc, #168]	; 8019248 <??DataTable2>
 80191a2:	f10b 0636 	add.w	r6, fp, #54	; 0x36
 80191a6:	7870      	ldrb	r0, [r6, #1]
 80191a8:	b190      	cbz	r0, 80191d0 <??GAP_Set_Own_Address_0>
 80191aa:	2d02      	cmp	r5, #2
 80191ac:	bf18      	it	ne
 80191ae:	2d03      	cmpne	r5, #3
 80191b0:	d11e      	bne.n	80191f0 <??GAP_Set_Own_Address_1>
 80191b2:	f008 fc76 	bl	8021aa2 <SMP_Get_Identity_Address_Type>
 80191b6:	4680      	mov	r8, r0
 80191b8:	2d03      	cmp	r5, #3
 80191ba:	d102      	bne.n	80191c2 <??GAP_Set_Own_Address_2>
 80191bc:	2703      	movs	r7, #3
 80191be:	2001      	movs	r0, #1
 80191c0:	e01c      	b.n	80191fc <??GAP_Set_Own_Address_3>

080191c2 <??GAP_Set_Own_Address_2>:
 80191c2:	2800      	cmp	r0, #0
 80191c4:	bf19      	ittee	ne
 80191c6:	2701      	movne	r7, #1
 80191c8:	2003      	movne	r0, #3
 80191ca:	2700      	moveq	r7, #0
 80191cc:	2002      	moveq	r0, #2
 80191ce:	e015      	b.n	80191fc <??GAP_Set_Own_Address_3>

080191d0 <??GAP_Set_Own_Address_0>:
 80191d0:	2d01      	cmp	r5, #1
 80191d2:	bf18      	it	ne
 80191d4:	2d00      	cmpne	r5, #0
 80191d6:	d10b      	bne.n	80191f0 <??GAP_Set_Own_Address_1>
 80191d8:	f20b 1171 	addw	r1, fp, #369	; 0x171
 80191dc:	7808      	ldrb	r0, [r1, #0]
 80191de:	46a8      	mov	r8, r5
 80191e0:	462f      	mov	r7, r5
 80191e2:	2800      	cmp	r0, #0
 80191e4:	bf07      	ittee	eq
 80191e6:	7848      	ldrbeq	r0, [r1, #1]
 80191e8:	2800      	cmpeq	r0, #0
 80191ea:	7831      	ldrbne	r1, [r6, #0]
 80191ec:	4541      	cmpne	r1, r8
 80191ee:	d001      	beq.n	80191f4 <??GAP_Set_Own_Address_4>

080191f0 <??GAP_Set_Own_Address_1>:
 80191f0:	2092      	movs	r0, #146	; 0x92
 80191f2:	e026      	b.n	8019242 <??GAP_Set_Own_Address_8>

080191f4 <??GAP_Set_Own_Address_4>:
 80191f4:	1e68      	subs	r0, r5, #1
 80191f6:	4180      	sbcs	r0, r0
 80191f8:	43c0      	mvns	r0, r0
 80191fa:	0fc0      	lsrs	r0, r0, #31

080191fc <??GAP_Set_Own_Address_3>:
 80191fc:	f889 0000 	strb.w	r0, [r9]
 8019200:	0038      	movs	r0, r7
 8019202:	d01b      	beq.n	801923c <??GAP_Set_Own_Address_5>
 8019204:	2c00      	cmp	r4, #0
 8019206:	bf0c      	ite	eq
 8019208:	2401      	moveq	r4, #1
 801920a:	2400      	movne	r4, #0
 801920c:	2f03      	cmp	r7, #3
 801920e:	d103      	bne.n	8019218 <??GAP_Set_Own_Address_6>
 8019210:	4650      	mov	r0, sl
 8019212:	f007 fed1 	bl	8020fb8 <RndAddr_Generate_Non_Resolvable_Address>
 8019216:	e009      	b.n	801922c <??GAP_Set_Own_Address_7>

08019218 <??GAP_Set_Own_Address_6>:
 8019218:	2206      	movs	r2, #6
 801921a:	f10b 012e 	add.w	r1, fp, #46	; 0x2e
 801921e:	4650      	mov	r0, sl
 8019220:	f017 fe61 	bl	8030ee6 <__aeabi_memcpy>
 8019224:	f89b 0193 	ldrb.w	r0, [fp, #403]	; 0x193
 8019228:	2801      	cmp	r0, #1
 801922a:	d007      	beq.n	801923c <??GAP_Set_Own_Address_5>

0801922c <??GAP_Set_Own_Address_7>:
 801922c:	b134      	cbz	r4, 801923c <??GAP_Set_Own_Address_5>
 801922e:	4650      	mov	r0, sl
 8019230:	f007 f886 	bl	8020340 <hci_le_set_random_address>
 8019234:	0001      	movs	r1, r0
 8019236:	d104      	bne.n	8019242 <??GAP_Set_Own_Address_8>
 8019238:	f88b 7193 	strb.w	r7, [fp, #403]	; 0x193

0801923c <??GAP_Set_Own_Address_5>:
 801923c:	f886 8000 	strb.w	r8, [r6]
 8019240:	2000      	movs	r0, #0

08019242 <??GAP_Set_Own_Address_8>:
 8019242:	b003      	add	sp, #12
 8019244:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08019248 <??DataTable2>:
 8019248:	3710 2000                                   .7. 

0801924c <??DataTable2_1>:
 801924c:	38a5 2000                                   .8. 

08019250 <??DataTable2_2>:
 8019250:	38ab 2000                                   .8. 

08019254 <GAP_Start_Scan>:
 8019254:	b57c      	push	{r2, r3, r4, r5, r6, lr}
 8019256:	4604      	mov	r4, r0
 8019258:	460d      	mov	r5, r1
 801925a:	4616      	mov	r6, r2
 801925c:	2200      	movs	r2, #0
 801925e:	a901      	add	r1, sp, #4
 8019260:	4618      	mov	r0, r3
 8019262:	f7ff ff94 	bl	801918e <GAP_Set_Own_Address>
 8019266:	0001      	movs	r1, r0
 8019268:	d10f      	bne.n	801928a <??GAP_Start_Scan_0>
 801926a:	f89d 0018 	ldrb.w	r0, [sp, #24]
 801926e:	f89d 3004 	ldrb.w	r3, [sp, #4]
 8019272:	4632      	mov	r2, r6
 8019274:	9000      	str	r0, [sp, #0]
 8019276:	4629      	mov	r1, r5
 8019278:	4620      	mov	r0, r4
 801927a:	f006 fe9a 	bl	801ffb2 <hci_le_set_scan_parameters>
 801927e:	0001      	movs	r1, r0
 8019280:	d103      	bne.n	801928a <??GAP_Start_Scan_0>
 8019282:	9907      	ldr	r1, [sp, #28]
 8019284:	2001      	movs	r0, #1
 8019286:	f006 fea5 	bl	801ffd4 <hci_le_set_scan_enable>

0801928a <??GAP_Start_Scan_0>:
 801928a:	bd76      	pop	{r1, r2, r4, r5, r6, pc}

0801928c <aci_gap_start_observation_proc>:
 801928c:	e92d 41fc 	stmdb	sp!, {r2, r3, r4, r5, r6, r7, r8, lr}
 8019290:	4606      	mov	r6, r0
 8019292:	f8df 03c8 	ldr.w	r0, [pc, #968]	; 801965c <??DataTable9>
 8019296:	460f      	mov	r7, r1
 8019298:	f500 75b8 	add.w	r5, r0, #368	; 0x170
 801929c:	7829      	ldrb	r1, [r5, #0]
 801929e:	4690      	mov	r8, r2
 80192a0:	070a      	lsls	r2, r1, #28
 80192a2:	d503      	bpl.n	80192ac <??aci_gap_start_observation_proc_0>
 80192a4:	78a9      	ldrb	r1, [r5, #2]
 80192a6:	f011 0fb3 	tst.w	r1, #179	; 0xb3
 80192aa:	d002      	beq.n	80192b2 <??aci_gap_start_observation_proc_1>

080192ac <??aci_gap_start_observation_proc_0>:
 80192ac:	200c      	movs	r0, #12
 80192ae:	e8bd 81f6 	ldmia.w	sp!, {r1, r2, r4, r5, r6, r7, r8, pc}

080192b2 <??aci_gap_start_observation_proc_1>:
 80192b2:	f890 0037 	ldrb.w	r0, [r0, #55]	; 0x37
 80192b6:	9c09      	ldr	r4, [sp, #36]	; 0x24
 80192b8:	b920      	cbnz	r0, 80192c4 <??aci_gap_start_observation_proc_2>
 80192ba:	0020      	movs	r0, r4
 80192bc:	bf1c      	itt	ne
 80192be:	2c01      	cmpne	r4, #1
 80192c0:	2092      	movne	r0, #146	; 0x92
 80192c2:	d11a      	bne.n	80192fa <??aci_gap_start_observation_proc_3>

080192c4 <??aci_gap_start_observation_proc_2>:
 80192c4:	2200      	movs	r2, #0
 80192c6:	a901      	add	r1, sp, #4
 80192c8:	4618      	mov	r0, r3
 80192ca:	f7ff ff60 	bl	801918e <GAP_Set_Own_Address>
 80192ce:	0001      	movs	r1, r0
 80192d0:	d113      	bne.n	80192fa <??aci_gap_start_observation_proc_3>
 80192d2:	f89d 3004 	ldrb.w	r3, [sp, #4]
 80192d6:	9400      	str	r4, [sp, #0]
 80192d8:	463a      	mov	r2, r7
 80192da:	4631      	mov	r1, r6
 80192dc:	4640      	mov	r0, r8
 80192de:	f006 fe68 	bl	801ffb2 <hci_le_set_scan_parameters>
 80192e2:	0001      	movs	r1, r0
 80192e4:	d109      	bne.n	80192fa <??aci_gap_start_observation_proc_3>
 80192e6:	9908      	ldr	r1, [sp, #32]
 80192e8:	2001      	movs	r0, #1
 80192ea:	f006 fe73 	bl	801ffd4 <hci_le_set_scan_enable>
 80192ee:	0001      	movs	r1, r0
 80192f0:	d103      	bne.n	80192fa <??aci_gap_start_observation_proc_3>
 80192f2:	78a9      	ldrb	r1, [r5, #2]
 80192f4:	f041 0180 	orr.w	r1, r1, #128	; 0x80
 80192f8:	70a9      	strb	r1, [r5, #2]

080192fa <??aci_gap_start_observation_proc_3>:
 80192fa:	e8bd 81f6 	ldmia.w	sp!, {r1, r2, r4, r5, r6, r7, r8, pc}

080192fe <GAP_Start_Scan_For_Discovery>:
 80192fe:	b57c      	push	{r2, r3, r4, r5, r6, lr}
 8019300:	f8df 435c 	ldr.w	r4, [pc, #860]	; 8019660 <??DataTable9_1>
 8019304:	7825      	ldrb	r5, [r4, #0]
 8019306:	076e      	lsls	r6, r5, #29
 8019308:	d503      	bpl.n	8019312 <??GAP_Start_Scan_For_Discovery_0>
 801930a:	78a5      	ldrb	r5, [r4, #2]
 801930c:	f015 0fb3 	tst.w	r5, #179	; 0xb3
 8019310:	d001      	beq.n	8019316 <??GAP_Start_Scan_For_Discovery_1>

08019312 <??GAP_Start_Scan_For_Discovery_0>:
 8019312:	200c      	movs	r0, #12
 8019314:	bd76      	pop	{r1, r2, r4, r5, r6, pc}

08019316 <??GAP_Start_Scan_For_Discovery_1>:
 8019316:	9301      	str	r3, [sp, #4]
 8019318:	2300      	movs	r3, #0
 801931a:	9300      	str	r3, [sp, #0]
 801931c:	4613      	mov	r3, r2
 801931e:	460a      	mov	r2, r1
 8019320:	4601      	mov	r1, r0
 8019322:	2001      	movs	r0, #1
 8019324:	f7ff ff96 	bl	8019254 <GAP_Start_Scan>
 8019328:	0005      	movs	r5, r0
 801932a:	d108      	bne.n	801933e <??GAP_Start_Scan_For_Discovery_2>
 801932c:	9806      	ldr	r0, [sp, #24]
 801932e:	78a1      	ldrb	r1, [r4, #2]
 8019330:	4308      	orrs	r0, r1
 8019332:	70a0      	strb	r0, [r4, #2]
 8019334:	f44f 5120 	mov.w	r1, #10240	; 0x2800
 8019338:	2006      	movs	r0, #6
 801933a:	f00e fb03 	bl	8027944 <BLEPLAT_TimerStart>

0801933e <??GAP_Start_Scan_For_Discovery_2>:
 801933e:	4628      	mov	r0, r5
 8019340:	bd76      	pop	{r1, r2, r4, r5, r6, pc}

08019342 <aci_gap_start_limited_discovery_proc>:
 8019342:	b51c      	push	{r2, r3, r4, lr}
 8019344:	2401      	movs	r4, #1
 8019346:	e001      	b.n	801934c <?Subroutine0>

08019348 <aci_gap_start_general_discovery_proc>:
 8019348:	b51c      	push	{r2, r3, r4, lr}
 801934a:	2402      	movs	r4, #2

0801934c <?Subroutine0>:
 801934c:	9400      	str	r4, [sp, #0]
 801934e:	f7ff ffd6 	bl	80192fe <GAP_Start_Scan_For_Discovery>
 8019352:	bd16      	pop	{r1, r2, r4, pc}

08019354 <GAP_Start_Scan_For_Connection>:
 8019354:	e92d 43fe 	stmdb	sp!, {r1, r2, r3, r4, r5, r6, r7, r8, r9, lr}
 8019358:	4605      	mov	r5, r0
 801935a:	48c0      	ldr	r0, [pc, #768]	; (801965c <??DataTable9>)
 801935c:	460e      	mov	r6, r1
 801935e:	f500 77b8 	add.w	r7, r0, #368	; 0x170
 8019362:	7839      	ldrb	r1, [r7, #0]
 8019364:	4691      	mov	r9, r2
 8019366:	4698      	mov	r8, r3
 8019368:	074a      	lsls	r2, r1, #29
 801936a:	d503      	bpl.n	8019374 <??GAP_Start_Scan_For_Connection_0>
 801936c:	78b9      	ldrb	r1, [r7, #2]
 801936e:	f011 0fbb 	tst.w	r1, #187	; 0xbb
 8019372:	d001      	beq.n	8019378 <??GAP_Start_Scan_For_Connection_1>

08019374 <??GAP_Start_Scan_For_Connection_0>:
 8019374:	200c      	movs	r0, #12
 8019376:	e021      	b.n	80193bc <??GAP_Start_Scan_For_Connection_3>

08019378 <??GAP_Start_Scan_For_Connection_1>:
 8019378:	f890 0037 	ldrb.w	r0, [r0, #55]	; 0x37
 801937c:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 801937e:	b920      	cbnz	r0, 801938a <??GAP_Start_Scan_For_Connection_2>
 8019380:	0020      	movs	r0, r4
 8019382:	bf1c      	itt	ne
 8019384:	2c01      	cmpne	r4, #1
 8019386:	2092      	movne	r0, #146	; 0x92
 8019388:	d118      	bne.n	80193bc <??GAP_Start_Scan_For_Connection_3>

0801938a <??GAP_Start_Scan_For_Connection_2>:
 801938a:	980c      	ldr	r0, [sp, #48]	; 0x30
 801938c:	0001      	movs	r1, r0
 801938e:	d005      	beq.n	801939c <??GAP_Start_Scan_For_Connection_4>
 8019390:	990d      	ldr	r1, [sp, #52]	; 0x34
 8019392:	2203      	movs	r2, #3
 8019394:	f7ff fe66 	bl	8019064 <aci_gap_add_devices_to_list>
 8019398:	0001      	movs	r1, r0
 801939a:	d10f      	bne.n	80193bc <??GAP_Start_Scan_For_Connection_3>

0801939c <??GAP_Start_Scan_For_Connection_4>:
 801939c:	f89d 002c 	ldrb.w	r0, [sp, #44]	; 0x2c
 80193a0:	9400      	str	r4, [sp, #0]
 80193a2:	4643      	mov	r3, r8
 80193a4:	9001      	str	r0, [sp, #4]
 80193a6:	464a      	mov	r2, r9
 80193a8:	4631      	mov	r1, r6
 80193aa:	4628      	mov	r0, r5
 80193ac:	f7ff ff52 	bl	8019254 <GAP_Start_Scan>
 80193b0:	0001      	movs	r1, r0
 80193b2:	d103      	bne.n	80193bc <??GAP_Start_Scan_For_Connection_3>
 80193b4:	990e      	ldr	r1, [sp, #56]	; 0x38
 80193b6:	78ba      	ldrb	r2, [r7, #2]
 80193b8:	4311      	orrs	r1, r2
 80193ba:	70b9      	strb	r1, [r7, #2]

080193bc <??GAP_Start_Scan_For_Connection_3>:
 80193bc:	b003      	add	sp, #12
 80193be:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}

080193c2 <aci_gap_start_general_connection_establish_proc>:
 80193c2:	b5fe      	push	{r1, r2, r3, r4, r5, r6, r7, lr}
 80193c4:	4604      	mov	r4, r0
 80193c6:	4ea5      	ldr	r6, [pc, #660]	; (801965c <??DataTable9>)
 80193c8:	f896 0037 	ldrb.w	r0, [r6, #55]	; 0x37
 80193cc:	9d08      	ldr	r5, [sp, #32]
 80193ce:	b118      	cbz	r0, 80193d8 <??aci_gap_start_general_connection_establish_pr_0>
 80193d0:	002f      	movs	r7, r5
 80193d2:	bf18      	it	ne
 80193d4:	2d02      	cmpne	r5, #2
 80193d6:	d10e      	bne.n	80193f6 <??aci_gap_start_general_connection_establish_pr_1>

080193d8 <??aci_gap_start_general_connection_establish_pr_0>:
 80193d8:	f506 76b8 	add.w	r6, r6, #368	; 0x170
 80193dc:	7837      	ldrb	r7, [r6, #0]
 80193de:	ea5f 7c47 	movs.w	ip, r7, lsl #29
 80193e2:	d51a      	bpl.n	801941a <??aci_gap_start_general_connection_establish_pr_2>
 80193e4:	78b7      	ldrb	r7, [r6, #2]
 80193e6:	f017 0fbb 	tst.w	r7, #187	; 0xbb
 80193ea:	d116      	bne.n	801941a <??aci_gap_start_general_connection_establish_pr_2>
 80193ec:	b930      	cbnz	r0, 80193fc <??aci_gap_start_general_connection_establish_pr_3>
 80193ee:	0028      	movs	r0, r5
 80193f0:	bf18      	it	ne
 80193f2:	2d01      	cmpne	r5, #1
 80193f4:	d002      	beq.n	80193fc <??aci_gap_start_general_connection_establish_pr_3>

080193f6 <??aci_gap_start_general_connection_establish_pr_1>:
 80193f6:	2092      	movs	r0, #146	; 0x92
 80193f8:	b003      	add	sp, #12
 80193fa:	bdf0      	pop	{r4, r5, r6, r7, pc}

080193fc <??aci_gap_start_general_connection_establish_pr_3>:
 80193fc:	f89d 0024 	ldrb.w	r0, [sp, #36]	; 0x24
 8019400:	9500      	str	r5, [sp, #0]
 8019402:	9001      	str	r0, [sp, #4]
 8019404:	4620      	mov	r0, r4
 8019406:	f7ff ff25 	bl	8019254 <GAP_Start_Scan>
 801940a:	0001      	movs	r1, r0
 801940c:	d106      	bne.n	801941c <??aci_gap_start_general_connection_establish_pr_4>
 801940e:	78b1      	ldrb	r1, [r6, #2]
 8019410:	b003      	add	sp, #12
 8019412:	f041 0110 	orr.w	r1, r1, #16
 8019416:	70b1      	strb	r1, [r6, #2]
 8019418:	bdf0      	pop	{r4, r5, r6, r7, pc}

0801941a <??aci_gap_start_general_connection_establish_pr_2>:
 801941a:	200c      	movs	r0, #12

0801941c <??aci_gap_start_general_connection_establish_pr_4>:
 801941c:	b003      	add	sp, #12
 801941e:	bdf0      	pop	{r4, r5, r6, r7, pc}

08019420 <aci_gap_start_selective_connection_establish_proc>:
 8019420:	b5f0      	push	{r4, r5, r6, r7, lr}
 8019422:	4e8e      	ldr	r6, [pc, #568]	; (801965c <??DataTable9>)
 8019424:	f896 4037 	ldrb.w	r4, [r6, #55]	; 0x37
 8019428:	b085      	sub	sp, #20
 801942a:	9d0a      	ldr	r5, [sp, #40]	; 0x28
 801942c:	2c00      	cmp	r4, #0
 801942e:	bf1c      	itt	ne
 8019430:	2d01      	cmpne	r5, #1
 8019432:	2d03      	cmpne	r5, #3
 8019434:	d102      	bne.n	801943c <??aci_gap_start_selective_connection_establish__0>
 8019436:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 8019438:	0026      	movs	r6, r4
 801943a:	d102      	bne.n	8019442 <??aci_gap_start_selective_connection_establish__1>

0801943c <??aci_gap_start_selective_connection_establish__0>:
 801943c:	2092      	movs	r0, #146	; 0x92
 801943e:	b005      	add	sp, #20
 8019440:	bdf0      	pop	{r4, r5, r6, r7, pc}

08019442 <??aci_gap_start_selective_connection_establish__1>:
 8019442:	9402      	str	r4, [sp, #8]
 8019444:	9f0d      	ldr	r7, [sp, #52]	; 0x34
 8019446:	f89d 402c 	ldrb.w	r4, [sp, #44]	; 0x2c
 801944a:	2620      	movs	r6, #32
 801944c:	9604      	str	r6, [sp, #16]
 801944e:	9703      	str	r7, [sp, #12]
 8019450:	9401      	str	r4, [sp, #4]
 8019452:	9500      	str	r5, [sp, #0]
 8019454:	f7ff ff7e 	bl	8019354 <GAP_Start_Scan_For_Connection>
 8019458:	b005      	add	sp, #20
 801945a:	bdf0      	pop	{r4, r5, r6, r7, pc}

0801945c <GAP_Create_Connection>:
 801945c:	b5f0      	push	{r4, r5, r6, r7, lr}
 801945e:	b089      	sub	sp, #36	; 0x24
 8019460:	4604      	mov	r4, r0
 8019462:	980f      	ldr	r0, [sp, #60]	; 0x3c
 8019464:	460d      	mov	r5, r1
 8019466:	4616      	mov	r6, r2
 8019468:	461f      	mov	r7, r3
 801946a:	2803      	cmp	r0, #3
 801946c:	bf08      	it	eq
 801946e:	2092      	moveq	r0, #146	; 0x92
 8019470:	d022      	beq.n	80194b8 <??GAP_Create_Connection_0>
 8019472:	2200      	movs	r2, #0
 8019474:	a908      	add	r1, sp, #32
 8019476:	f7ff fe8a 	bl	801918e <GAP_Set_Own_Address>
 801947a:	0001      	movs	r1, r0
 801947c:	d11c      	bne.n	80194b8 <??GAP_Create_Connection_0>
 801947e:	f8bd 0054 	ldrh.w	r0, [sp, #84]	; 0x54
 8019482:	f8bd 1050 	ldrh.w	r1, [sp, #80]	; 0x50
 8019486:	9007      	str	r0, [sp, #28]
 8019488:	f8bd 004c 	ldrh.w	r0, [sp, #76]	; 0x4c
 801948c:	9106      	str	r1, [sp, #24]
 801948e:	f8bd 1048 	ldrh.w	r1, [sp, #72]	; 0x48
 8019492:	9005      	str	r0, [sp, #20]
 8019494:	f8bd 0044 	ldrh.w	r0, [sp, #68]	; 0x44
 8019498:	9104      	str	r1, [sp, #16]
 801949a:	f8bd 1040 	ldrh.w	r1, [sp, #64]	; 0x40
 801949e:	9003      	str	r0, [sp, #12]
 80194a0:	f89d 0020 	ldrb.w	r0, [sp, #32]
 80194a4:	9102      	str	r1, [sp, #8]
 80194a6:	990e      	ldr	r1, [sp, #56]	; 0x38
 80194a8:	9001      	str	r0, [sp, #4]
 80194aa:	463b      	mov	r3, r7
 80194ac:	9100      	str	r1, [sp, #0]
 80194ae:	4632      	mov	r2, r6
 80194b0:	4629      	mov	r1, r5
 80194b2:	4620      	mov	r0, r4
 80194b4:	f006 fd93 	bl	801ffde <hci_le_create_connection>

080194b8 <??GAP_Create_Connection_0>:
 80194b8:	b009      	add	sp, #36	; 0x24
 80194ba:	bdf0      	pop	{r4, r5, r6, r7, pc}

080194bc <aci_gap_create_connection>:
 80194bc:	e92d 41f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, lr}
 80194c0:	4604      	mov	r4, r0
 80194c2:	4e67      	ldr	r6, [pc, #412]	; (8019660 <??DataTable9_1>)
 80194c4:	7830      	ldrb	r0, [r6, #0]
 80194c6:	460d      	mov	r5, r1
 80194c8:	b089      	sub	sp, #36	; 0x24
 80194ca:	4690      	mov	r8, r2
 80194cc:	461f      	mov	r7, r3
 80194ce:	0741      	lsls	r1, r0, #29
 80194d0:	d503      	bpl.n	80194da <??aci_gap_create_connection_0>
 80194d2:	78b0      	ldrb	r0, [r6, #2]
 80194d4:	f010 0f48 	tst.w	r0, #72	; 0x48
 80194d8:	d001      	beq.n	80194de <??aci_gap_create_connection_1>

080194da <??aci_gap_create_connection_0>:
 80194da:	200c      	movs	r0, #12
 80194dc:	e033      	b.n	8019546 <??aci_gap_create_connection_3>

080194de <??aci_gap_create_connection_1>:
 80194de:	f010 0f30 	tst.w	r0, #48	; 0x30
 80194e2:	d003      	beq.n	80194ec <??aci_gap_create_connection_2>
 80194e4:	2100      	movs	r1, #0
 80194e6:	2000      	movs	r0, #0
 80194e8:	f006 fd74 	bl	801ffd4 <hci_le_set_scan_enable>

080194ec <??aci_gap_create_connection_2>:
 80194ec:	9810      	ldr	r0, [sp, #64]	; 0x40
 80194ee:	2803      	cmp	r0, #3
 80194f0:	bf08      	it	eq
 80194f2:	2092      	moveq	r0, #146	; 0x92
 80194f4:	d027      	beq.n	8019546 <??aci_gap_create_connection_3>
 80194f6:	2200      	movs	r2, #0
 80194f8:	a908      	add	r1, sp, #32
 80194fa:	f7ff fe48 	bl	801918e <GAP_Set_Own_Address>
 80194fe:	0001      	movs	r1, r0
 8019500:	d121      	bne.n	8019546 <??aci_gap_create_connection_3>
 8019502:	f8bd 2058 	ldrh.w	r2, [sp, #88]	; 0x58
 8019506:	4620      	mov	r0, r4
 8019508:	f8bd 4054 	ldrh.w	r4, [sp, #84]	; 0x54
 801950c:	9207      	str	r2, [sp, #28]
 801950e:	f8bd 2050 	ldrh.w	r2, [sp, #80]	; 0x50
 8019512:	9406      	str	r4, [sp, #24]
 8019514:	f8bd 404c 	ldrh.w	r4, [sp, #76]	; 0x4c
 8019518:	9205      	str	r2, [sp, #20]
 801951a:	f8bd 2048 	ldrh.w	r2, [sp, #72]	; 0x48
 801951e:	9404      	str	r4, [sp, #16]
 8019520:	f8bd 4044 	ldrh.w	r4, [sp, #68]	; 0x44
 8019524:	9203      	str	r2, [sp, #12]
 8019526:	f89d 2020 	ldrb.w	r2, [sp, #32]
 801952a:	9402      	str	r4, [sp, #8]
 801952c:	4643      	mov	r3, r8
 801952e:	9201      	str	r2, [sp, #4]
 8019530:	4629      	mov	r1, r5
 8019532:	9700      	str	r7, [sp, #0]
 8019534:	2200      	movs	r2, #0
 8019536:	f006 fd52 	bl	801ffde <hci_le_create_connection>
 801953a:	0001      	movs	r1, r0
 801953c:	d103      	bne.n	8019546 <??aci_gap_create_connection_3>
 801953e:	78b1      	ldrb	r1, [r6, #2]
 8019540:	f041 0140 	orr.w	r1, r1, #64	; 0x40
 8019544:	70b1      	strb	r1, [r6, #2]

08019546 <??aci_gap_create_connection_3>:
 8019546:	b00a      	add	sp, #40	; 0x28
 8019548:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0801954c <aci_gap_start_auto_connection_establish_proc>:
 801954c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8019550:	b088      	sub	sp, #32
 8019552:	4604      	mov	r4, r0
 8019554:	4d42      	ldr	r5, [pc, #264]	; (8019660 <??DataTable9_1>)
 8019556:	7828      	ldrb	r0, [r5, #0]
 8019558:	4688      	mov	r8, r1
 801955a:	4616      	mov	r6, r2
 801955c:	461f      	mov	r7, r3
 801955e:	0741      	lsls	r1, r0, #29
 8019560:	d503      	bpl.n	801956a <??aci_gap_start_auto_connection_establish_proc_0>
 8019562:	78a8      	ldrb	r0, [r5, #2]
 8019564:	f010 0f78 	tst.w	r0, #120	; 0x78
 8019568:	d001      	beq.n	801956e <??aci_gap_start_auto_connection_establish_proc_1>

0801956a <??aci_gap_start_auto_connection_establish_proc_0>:
 801956a:	200c      	movs	r0, #12
 801956c:	e029      	b.n	80195c2 <??aci_gap_start_auto_connection_establish_proc_2>

0801956e <??aci_gap_start_auto_connection_establish_proc_1>:
 801956e:	9813      	ldr	r0, [sp, #76]	; 0x4c
 8019570:	0001      	movs	r1, r0
 8019572:	bf08      	it	eq
 8019574:	2092      	moveq	r0, #146	; 0x92
 8019576:	d024      	beq.n	80195c2 <??aci_gap_start_auto_connection_establish_proc_2>
 8019578:	9914      	ldr	r1, [sp, #80]	; 0x50
 801957a:	2203      	movs	r2, #3
 801957c:	f7ff fd72 	bl	8019064 <aci_gap_add_devices_to_list>
 8019580:	0001      	movs	r1, r0
 8019582:	d11e      	bne.n	80195c2 <??aci_gap_start_auto_connection_establish_proc_2>
 8019584:	f8bd 0048 	ldrh.w	r0, [sp, #72]	; 0x48
 8019588:	f8bd 1044 	ldrh.w	r1, [sp, #68]	; 0x44
 801958c:	2200      	movs	r2, #0
 801958e:	9007      	str	r0, [sp, #28]
 8019590:	f8bd 0040 	ldrh.w	r0, [sp, #64]	; 0x40
 8019594:	9106      	str	r1, [sp, #24]
 8019596:	f8bd 103c 	ldrh.w	r1, [sp, #60]	; 0x3c
 801959a:	9005      	str	r0, [sp, #20]
 801959c:	f8bd 0038 	ldrh.w	r0, [sp, #56]	; 0x38
 80195a0:	9104      	str	r1, [sp, #16]
 80195a2:	9200      	str	r2, [sp, #0]
 80195a4:	9003      	str	r0, [sp, #12]
 80195a6:	9702      	str	r7, [sp, #8]
 80195a8:	9601      	str	r6, [sp, #4]
 80195aa:	2300      	movs	r3, #0
 80195ac:	2201      	movs	r2, #1
 80195ae:	4641      	mov	r1, r8
 80195b0:	4620      	mov	r0, r4
 80195b2:	f7ff ff53 	bl	801945c <GAP_Create_Connection>
 80195b6:	0001      	movs	r1, r0
 80195b8:	d103      	bne.n	80195c2 <??aci_gap_start_auto_connection_establish_proc_2>
 80195ba:	78a9      	ldrb	r1, [r5, #2]
 80195bc:	f041 0108 	orr.w	r1, r1, #8
 80195c0:	70a9      	strb	r1, [r5, #2]

080195c2 <??aci_gap_start_auto_connection_establish_proc_2>:
 80195c2:	b008      	add	sp, #32
 80195c4:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

080195c8 <aci_gap_terminate_gap_proc>:
 80195c8:	b570      	push	{r4, r5, r6, lr}
 80195ca:	4605      	mov	r5, r0
 80195cc:	4c23      	ldr	r4, [pc, #140]	; (801965c <??DataTable9>)
 80195ce:	f894 0172 	ldrb.w	r0, [r4, #370]	; 0x172
 80195d2:	4228      	tst	r0, r5
 80195d4:	d101      	bne.n	80195da <??aci_gap_terminate_gap_proc_0>
 80195d6:	200c      	movs	r0, #12
 80195d8:	bd70      	pop	{r4, r5, r6, pc}

080195da <??aci_gap_terminate_gap_proc_0>:
 80195da:	2d08      	cmp	r5, #8
 80195dc:	bf18      	it	ne
 80195de:	2d40      	cmpne	r5, #64	; 0x40
 80195e0:	d102      	bne.n	80195e8 <??aci_gap_terminate_gap_proc_1>
 80195e2:	f006 fd2d 	bl	8020040 <hci_le_create_connection_cancel>
 80195e6:	e00a      	b.n	80195fe <??aci_gap_terminate_gap_proc_2>

080195e8 <??aci_gap_terminate_gap_proc_1>:
 80195e8:	2d01      	cmp	r5, #1
 80195ea:	bf18      	it	ne
 80195ec:	2d02      	cmpne	r5, #2
 80195ee:	d115      	bne.n	801961c <??aci_gap_terminate_gap_proc_3>
 80195f0:	2006      	movs	r0, #6
 80195f2:	f00e f9a9 	bl	8027948 <BLEPLAT_TimerStop>

080195f6 <??aci_gap_terminate_gap_proc_4>:
 80195f6:	2100      	movs	r1, #0
 80195f8:	2000      	movs	r0, #0
 80195fa:	f006 fceb 	bl	801ffd4 <hci_le_set_scan_enable>

080195fe <??aci_gap_terminate_gap_proc_2>:
 80195fe:	4606      	mov	r6, r0
 8019600:	0030      	movs	r0, r6
 8019602:	d109      	bne.n	8019618 <??aci_gap_terminate_gap_proc_5>
 8019604:	f894 0172 	ldrb.w	r0, [r4, #370]	; 0x172
 8019608:	2200      	movs	r2, #0
 801960a:	4629      	mov	r1, r5
 801960c:	43a8      	bics	r0, r5
 801960e:	f884 0172 	strb.w	r0, [r4, #370]	; 0x172
 8019612:	2001      	movs	r0, #1
 8019614:	f005 fd66 	bl	801f0e4 <EVT_aci_gap_proc_complete>

08019618 <??aci_gap_terminate_gap_proc_5>:
 8019618:	4630      	mov	r0, r6
 801961a:	bd70      	pop	{r4, r5, r6, pc}

0801961c <??aci_gap_terminate_gap_proc_3>:
 801961c:	2d10      	cmp	r5, #16
 801961e:	bf1c      	itt	ne
 8019620:	2d20      	cmpne	r5, #32
 8019622:	2d80      	cmpne	r5, #128	; 0x80
 8019624:	d0e7      	beq.n	80195f6 <??aci_gap_terminate_gap_proc_4>
 8019626:	2092      	movs	r0, #146	; 0x92
 8019628:	bd70      	pop	{r4, r5, r6, pc}

0801962a <GAP_Scan_Disc_Proc_Timeout_Cb>:
 801962a:	b538      	push	{r3, r4, r5, lr}
 801962c:	4c0b      	ldr	r4, [pc, #44]	; (801965c <??DataTable9>)
 801962e:	f894 5172 	ldrb.w	r5, [r4, #370]	; 0x172
 8019632:	f015 0503 	ands.w	r5, r5, #3
 8019636:	d00f      	beq.n	8019658 <??GAP_Scan_Disc_Proc_Timeout_Cb_0>
 8019638:	2100      	movs	r1, #0
 801963a:	2000      	movs	r0, #0
 801963c:	f006 fcca 	bl	801ffd4 <hci_le_set_scan_enable>
 8019640:	f894 1172 	ldrb.w	r1, [r4, #370]	; 0x172
 8019644:	4602      	mov	r2, r0
 8019646:	2001      	movs	r0, #1
 8019648:	43a9      	bics	r1, r5
 801964a:	f884 1172 	strb.w	r1, [r4, #370]	; 0x172
 801964e:	4629      	mov	r1, r5
 8019650:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8019654:	f005 bd46 	b.w	801f0e4 <EVT_aci_gap_proc_complete>

08019658 <??GAP_Scan_Disc_Proc_Timeout_Cb_0>:
 8019658:	bd31      	pop	{r0, r4, r5, pc}
	...

0801965c <??DataTable9>:
 801965c:	3710 2000                                   .7. 

08019660 <??DataTable9_1>:
 8019660:	3880 2000                                   .8. 

08019664 <GAP_Proc_Connection_Complete_Handler>:
 8019664:	7882      	ldrb	r2, [r0, #2]
 8019666:	f012 0178 	ands.w	r1, r2, #120	; 0x78
 801966a:	d005      	beq.n	8019678 <??GAP_Proc_Connection_Complete_Handler_0>
 801966c:	438a      	bics	r2, r1
 801966e:	7082      	strb	r2, [r0, #2]
 8019670:	2200      	movs	r2, #0
 8019672:	2000      	movs	r0, #0
 8019674:	f005 bd36 	b.w	801f0e4 <EVT_aci_gap_proc_complete>

08019678 <??GAP_Proc_Connection_Complete_Handler_0>:
 8019678:	4770      	bx	lr
	...

0801967c <GATT_MemAlloc>:
 801967c:	b538      	push	{r3, r4, r5, lr}
 801967e:	f8df 38d8 	ldr.w	r3, [pc, #2264]	; 8019f58 <??DataTable13>
 8019682:	7d99      	ldrb	r1, [r3, #22]
 8019684:	4604      	mov	r4, r0
 8019686:	2224      	movs	r2, #36	; 0x24
 8019688:	f8df 58d0 	ldr.w	r5, [pc, #2256]	; 8019f5c <??DataTable13_1>
 801968c:	f00b fa16 	bl	8024abc <Mem_Assign>
 8019690:	6028      	str	r0, [r5, #0]
 8019692:	f44f 7280 	mov.w	r2, #256	; 0x100
 8019696:	2101      	movs	r1, #1
 8019698:	4620      	mov	r0, r4
 801969a:	f00b fa0f 	bl	8024abc <Mem_Assign>
 801969e:	60a8      	str	r0, [r5, #8]
 80196a0:	bd31      	pop	{r0, r4, r5, pc}

080196a2 <GATT_Db_MemAlloc>:
 80196a2:	b570      	push	{r4, r5, r6, lr}
 80196a4:	f8df 68b0 	ldr.w	r6, [pc, #2224]	; 8019f58 <??DataTable13>
 80196a8:	8ab2      	ldrh	r2, [r6, #20]
 80196aa:	4604      	mov	r4, r0
 80196ac:	2101      	movs	r1, #1
 80196ae:	f8df 58b0 	ldr.w	r5, [pc, #2224]	; 8019f60 <??DataTable13_2>
 80196b2:	f00b fa03 	bl	8024abc <Mem_Assign>
 80196b6:	60a8      	str	r0, [r5, #8]
 80196b8:	8a31      	ldrh	r1, [r6, #16]
 80196ba:	2228      	movs	r2, #40	; 0x28
 80196bc:	4620      	mov	r0, r4
 80196be:	f00b f9fd 	bl	8024abc <Mem_Assign>
 80196c2:	6028      	str	r0, [r5, #0]
 80196c4:	8a71      	ldrh	r1, [r6, #18]
 80196c6:	2230      	movs	r2, #48	; 0x30
 80196c8:	4620      	mov	r0, r4
 80196ca:	f00b f9f7 	bl	8024abc <Mem_Assign>
 80196ce:	6068      	str	r0, [r5, #4]
 80196d0:	bd70      	pop	{r4, r5, r6, pc}

080196d2 <GATT_Init>:
 80196d2:	b418      	push	{r3, r4}
 80196d4:	f8df 1880 	ldr.w	r1, [pc, #2176]	; 8019f58 <??DataTable13>
 80196d8:	7d88      	ldrb	r0, [r1, #22]
 80196da:	b148      	cbz	r0, 80196f0 <??GATT_Init_0>
 80196dc:	f8df 2884 	ldr.w	r2, [pc, #2180]	; 8019f64 <??DataTable13_3>
 80196e0:	f8d2 320c 	ldr.w	r3, [r2, #524]	; 0x20c
 80196e4:	2417      	movs	r4, #23
 80196e6:	1c9a      	adds	r2, r3, #2

080196e8 <??GATT_Init_1>:
 80196e8:	f822 4b24 	strh.w	r4, [r2], #36
 80196ec:	1e40      	subs	r0, r0, #1
 80196ee:	d1fb      	bne.n	80196e8 <??GATT_Init_1>

080196f0 <??GATT_Init_0>:
 80196f0:	8b48      	ldrh	r0, [r1, #26]
 80196f2:	f240 2201 	movw	r2, #513	; 0x201
 80196f6:	4290      	cmp	r0, r2
 80196f8:	bf28      	it	cs
 80196fa:	f44f 7000 	movcs.w	r0, #512	; 0x200
 80196fe:	d202      	bcs.n	8019706 <??GATT_Init_2>
 8019700:	2817      	cmp	r0, #23
 8019702:	bf38      	it	cc
 8019704:	2017      	movcc	r0, #23

08019706 <??GATT_Init_2>:
 8019706:	f8df 185c 	ldr.w	r1, [pc, #2140]	; 8019f64 <??DataTable13_3>
 801970a:	f8a1 0206 	strh.w	r0, [r1, #518]	; 0x206
 801970e:	f501 70d6 	add.w	r0, r1, #428	; 0x1ac
 8019712:	bc12      	pop	{r1, r4}
 8019714:	f001 be5d 	b.w	801b3d2 <GATT_Server_Init>

08019718 <GATT_L2cap_Data_Handler>:
 8019718:	b57c      	push	{r2, r3, r4, r5, r6, lr}
 801971a:	4605      	mov	r5, r0
 801971c:	88a8      	ldrh	r0, [r5, #4]
 801971e:	460e      	mov	r6, r1
 8019720:	f000 fbce 	bl	8019ec0 <GATT_Find_Root_Client>
 8019724:	4604      	mov	r4, r0
 8019726:	2e00      	cmp	r6, #0
 8019728:	d072      	beq.n	8019810 <??GATT_L2cap_Data_Handler_0>
 801972a:	88e8      	ldrh	r0, [r5, #6]
 801972c:	2c00      	cmp	r4, #0
 801972e:	bf18      	it	ne
 8019730:	2800      	cmpne	r0, #0
 8019732:	d104      	bne.n	801973e <??GATT_L2cap_Data_Handler_1>
 8019734:	2101      	movs	r1, #1
 8019736:	4628      	mov	r0, r5
 8019738:	f00b fad3 	bl	8024ce2 <ACL_PM_Release>
 801973c:	e0c0      	b.n	80198c0 <??GATT_L2cap_Data_Handler_2>

0801973e <??GATT_L2cap_Data_Handler_1>:
 801973e:	6861      	ldr	r1, [r4, #4]
 8019740:	074a      	lsls	r2, r1, #29
 8019742:	d501      	bpl.n	8019748 <??GATT_L2cap_Data_Handler_3>
 8019744:	2095      	movs	r0, #149	; 0x95
 8019746:	bd76      	pop	{r1, r2, r4, r5, r6, pc}

08019748 <??GATT_L2cap_Data_Handler_3>:
 8019748:	68aa      	ldr	r2, [r5, #8]
 801974a:	7b16      	ldrb	r6, [r2, #12]
 801974c:	0672      	lsls	r2, r6, #25
 801974e:	d50a      	bpl.n	8019766 <??GATT_L2cap_Data_Handler_4>
 8019750:	8861      	ldrh	r1, [r4, #2]
 8019752:	4281      	cmp	r1, r0
 8019754:	db25      	blt.n	80197a2 <??GATT_L2cap_Data_Handler_5>
 8019756:	2ed2      	cmp	r6, #210	; 0xd2
 8019758:	bf18      	it	ne
 801975a:	2e52      	cmpne	r6, #82	; 0x52
 801975c:	d121      	bne.n	80197a2 <??GATT_L2cap_Data_Handler_5>
 801975e:	4629      	mov	r1, r5
 8019760:	f8df 0804 	ldr.w	r0, [pc, #2052]	; 8019f68 <??DataTable13_4>
 8019764:	e051      	b.n	801980a <??GATT_L2cap_Data_Handler_6>

08019766 <??GATT_L2cap_Data_Handler_4>:
 8019766:	2e1e      	cmp	r6, #30
 8019768:	d115      	bne.n	8019796 <??GATT_L2cap_Data_Handler_7>
 801976a:	2101      	movs	r1, #1
 801976c:	4628      	mov	r0, r5
 801976e:	f00b fab8 	bl	8024ce2 <ACL_PM_Release>
 8019772:	6860      	ldr	r0, [r4, #4]
 8019774:	0701      	lsls	r1, r0, #28
 8019776:	f140 80a3 	bpl.w	80198c0 <??GATT_L2cap_Data_Handler_2>
 801977a:	f020 0008 	bic.w	r0, r0, #8
 801977e:	6060      	str	r0, [r4, #4]
 8019780:	2101      	movs	r1, #1
 8019782:	4620      	mov	r0, r4
 8019784:	f000 fad6 	bl	8019d34 <GATT_Timer>
 8019788:	f00e f8de 	bl	8027948 <BLEPLAT_TimerStop>
 801978c:	8821      	ldrh	r1, [r4, #0]
 801978e:	2000      	movs	r0, #0
 8019790:	f005 fd0f 	bl	801f1b2 <EVT_aci_gatt_server_confirmation>
 8019794:	e094      	b.n	80198c0 <??GATT_L2cap_Data_Handler_2>

08019796 <??GATT_L2cap_Data_Handler_7>:
 8019796:	2e1d      	cmp	r6, #29
 8019798:	bf18      	it	ne
 801979a:	2e1b      	cmpne	r6, #27
 801979c:	d106      	bne.n	80197ac <??GATT_L2cap_Data_Handler_8>
 801979e:	2802      	cmp	r0, #2
 80197a0:	dc30      	bgt.n	8019804 <??GATT_L2cap_Data_Handler_9>

080197a2 <??GATT_L2cap_Data_Handler_5>:
 80197a2:	2101      	movs	r1, #1
 80197a4:	4628      	mov	r0, r5
 80197a6:	f00b fa9c 	bl	8024ce2 <ACL_PM_Release>
 80197aa:	e089      	b.n	80198c0 <??GATT_L2cap_Data_Handler_2>

080197ac <??GATT_L2cap_Data_Handler_8>:
 80197ac:	07f0      	lsls	r0, r6, #31
 80197ae:	d50c      	bpl.n	80197ca <??GATT_L2cap_Data_Handler_10>
 80197b0:	2e15      	cmp	r6, #21
 80197b2:	d00a      	beq.n	80197ca <??GATT_L2cap_Data_Handler_10>
 80197b4:	2e1a      	cmp	r6, #26
 80197b6:	d208      	bcs.n	80197ca <??GATT_L2cap_Data_Handler_10>
 80197b8:	0548      	lsls	r0, r1, #21
 80197ba:	d501      	bpl.n	80197c0 <??GATT_L2cap_Data_Handler_11>
 80197bc:	2091      	movs	r0, #145	; 0x91
 80197be:	bd76      	pop	{r1, r2, r4, r5, r6, pc}

080197c0 <??GATT_L2cap_Data_Handler_11>:
 80197c0:	f441 6180 	orr.w	r1, r1, #1024	; 0x400
 80197c4:	6225      	str	r5, [r4, #32]
 80197c6:	6061      	str	r1, [r4, #4]
 80197c8:	e06d      	b.n	80198a6 <??GATT_L2cap_Data_Handler_12>

080197ca <??GATT_L2cap_Data_Handler_10>:
 80197ca:	06c8      	lsls	r0, r1, #27
 80197cc:	d50f      	bpl.n	80197ee <??GATT_L2cap_Data_Handler_13>
 80197ce:	2101      	movs	r1, #1
 80197d0:	4628      	mov	r0, r5
 80197d2:	f00b fa86 	bl	8024ce2 <ACL_PM_Release>
 80197d6:	8820      	ldrh	r0, [r4, #0]
 80197d8:	f446 7680 	orr.w	r6, r6, #256	; 0x100
 80197dc:	466a      	mov	r2, sp
 80197de:	ea40 4006 	orr.w	r0, r0, r6, lsl #16
 80197e2:	2104      	movs	r1, #4
 80197e4:	9000      	str	r0, [sp, #0]
 80197e6:	2002      	movs	r0, #2
 80197e8:	f005 fc11 	bl	801f00e <EVT_aci_hal_fw_error>
 80197ec:	e068      	b.n	80198c0 <??GATT_L2cap_Data_Handler_2>

080197ee <??GATT_L2cap_Data_Handler_13>:
 80197ee:	f041 0110 	orr.w	r1, r1, #16
 80197f2:	6061      	str	r1, [r4, #4]
 80197f4:	2100      	movs	r1, #0
 80197f6:	4620      	mov	r0, r4
 80197f8:	f000 fa9c 	bl	8019d34 <GATT_Timer>
 80197fc:	f247 5130 	movw	r1, #30000	; 0x7530
 8019800:	f00e f8a0 	bl	8027944 <BLEPLAT_TimerStart>

08019804 <??GATT_L2cap_Data_Handler_9>:
 8019804:	4629      	mov	r1, r5
 8019806:	f8df 0764 	ldr.w	r0, [pc, #1892]	; 8019f6c <??DataTable13_5>

0801980a <??GATT_L2cap_Data_Handler_6>:
 801980a:	f00b f9b3 	bl	8024b74 <ACL_List_Insert_Tail>
 801980e:	e04a      	b.n	80198a6 <??GATT_L2cap_Data_Handler_12>

08019810 <??GATT_L2cap_Data_Handler_0>:
 8019810:	68a8      	ldr	r0, [r5, #8]
 8019812:	7b00      	ldrb	r0, [r0, #12]
 8019814:	281d      	cmp	r0, #29
 8019816:	d10c      	bne.n	8019832 <??GATT_L2cap_Data_Handler_14>
 8019818:	b13c      	cbz	r4, 801982a <??GATT_L2cap_Data_Handler_15>
 801981a:	2101      	movs	r1, #1
 801981c:	4620      	mov	r0, r4
 801981e:	f000 fa89 	bl	8019d34 <GATT_Timer>
 8019822:	f247 5130 	movw	r1, #30000	; 0x7530
 8019826:	f00e f88d 	bl	8027944 <BLEPLAT_TimerStart>

0801982a <??GATT_L2cap_Data_Handler_15>:
 801982a:	462a      	mov	r2, r5
 801982c:	2102      	movs	r1, #2
 801982e:	2001      	movs	r0, #1
 8019830:	e004      	b.n	801983c <??GATT_L2cap_Data_Handler_16>

08019832 <??GATT_L2cap_Data_Handler_14>:
 8019832:	281b      	cmp	r0, #27
 8019834:	d107      	bne.n	8019846 <??GATT_L2cap_Data_Handler_17>
 8019836:	462a      	mov	r2, r5
 8019838:	2101      	movs	r1, #1
 801983a:	2001      	movs	r0, #1

0801983c <??GATT_L2cap_Data_Handler_16>:
 801983c:	f003 fa50 	bl	801cce0 <GATT_Send_Notif_Or_Ind>
 8019840:	2800      	cmp	r0, #0
 8019842:	d13d      	bne.n	80198c0 <??GATT_L2cap_Data_Handler_2>
 8019844:	e025      	b.n	8019892 <??GATT_L2cap_Data_Handler_18>

08019846 <??GATT_L2cap_Data_Handler_17>:
 8019846:	b324      	cbz	r4, 8019892 <??GATT_L2cap_Data_Handler_18>
 8019848:	07c1      	lsls	r1, r0, #31
 801984a:	d505      	bpl.n	8019858 <??GATT_L2cap_Data_Handler_19>
 801984c:	6860      	ldr	r0, [r4, #4]
 801984e:	2100      	movs	r1, #0
 8019850:	f020 0010 	bic.w	r0, r0, #16
 8019854:	6060      	str	r0, [r4, #4]
 8019856:	e002      	b.n	801985e <??GATT_L2cap_Data_Handler_20>

08019858 <??GATT_L2cap_Data_Handler_19>:
 8019858:	281e      	cmp	r0, #30
 801985a:	d106      	bne.n	801986a <??GATT_L2cap_Data_Handler_21>
 801985c:	2103      	movs	r1, #3

0801985e <??GATT_L2cap_Data_Handler_20>:
 801985e:	4620      	mov	r0, r4
 8019860:	f000 fa68 	bl	8019d34 <GATT_Timer>
 8019864:	f00e f870 	bl	8027948 <BLEPLAT_TimerStop>
 8019868:	e013      	b.n	8019892 <??GATT_L2cap_Data_Handler_18>

0801986a <??GATT_L2cap_Data_Handler_21>:
 801986a:	6860      	ldr	r0, [r4, #4]
 801986c:	f020 0040 	bic.w	r0, r0, #64	; 0x40
 8019870:	0501      	lsls	r1, r0, #20
 8019872:	d50d      	bpl.n	8019890 <??GATT_L2cap_Data_Handler_22>
 8019874:	f440 7080 	orr.w	r0, r0, #256	; 0x100
 8019878:	6060      	str	r0, [r4, #4]
 801987a:	2102      	movs	r1, #2
 801987c:	4620      	mov	r0, r4
 801987e:	f000 fa59 	bl	8019d34 <GATT_Timer>
 8019882:	f247 5130 	movw	r1, #30000	; 0x7530
 8019886:	f00e f85d 	bl	8027944 <BLEPLAT_TimerStart>
 801988a:	6860      	ldr	r0, [r4, #4]
 801988c:	f420 6000 	bic.w	r0, r0, #2048	; 0x800

08019890 <??GATT_L2cap_Data_Handler_22>:
 8019890:	6060      	str	r0, [r4, #4]

08019892 <??GATT_L2cap_Data_Handler_18>:
 8019892:	2100      	movs	r1, #0
 8019894:	4628      	mov	r0, r5
 8019896:	f00b fa24 	bl	8024ce2 <ACL_PM_Release>
 801989a:	f8df 06c8 	ldr.w	r0, [pc, #1736]	; 8019f64 <??DataTable13_3>
 801989e:	f890 11ac 	ldrb.w	r1, [r0, #428]	; 0x1ac
 80198a2:	0608      	lsls	r0, r1, #24
 80198a4:	d50c      	bpl.n	80198c0 <??GATT_L2cap_Data_Handler_2>

080198a6 <??GATT_L2cap_Data_Handler_12>:
 80198a6:	f3ef 8010 	mrs	r0, PRIMASK
 80198aa:	b672      	cpsid	i
 80198ac:	f8df 16b4 	ldr.w	r1, [pc, #1716]	; 8019f64 <??DataTable13_3>
 80198b0:	f891 2039 	ldrb.w	r2, [r1, #57]	; 0x39
 80198b4:	f002 02fd 	and.w	r2, r2, #253	; 0xfd
 80198b8:	f881 2039 	strb.w	r2, [r1, #57]	; 0x39
 80198bc:	f380 8810 	msr	PRIMASK, r0

080198c0 <??GATT_L2cap_Data_Handler_2>:
 80198c0:	2000      	movs	r0, #0
 80198c2:	bd76      	pop	{r1, r2, r4, r5, r6, pc}

080198c4 <GATT_Process>:
 80198c4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80198c8:	b083      	sub	sp, #12
 80198ca:	2000      	movs	r0, #0
 80198cc:	f8df 5694 	ldr.w	r5, [pc, #1684]	; 8019f64 <??DataTable13_3>
 80198d0:	9000      	str	r0, [sp, #0]
 80198d2:	f8d5 720c 	ldr.w	r7, [r5, #524]	; 0x20c
 80198d6:	f3ef 8010 	mrs	r0, PRIMASK
 80198da:	b672      	cpsid	i
 80198dc:	f895 1039 	ldrb.w	r1, [r5, #57]	; 0x39
 80198e0:	f041 0102 	orr.w	r1, r1, #2
 80198e4:	f885 1039 	strb.w	r1, [r5, #57]	; 0x39
 80198e8:	f380 8810 	msr	PRIMASK, r0
 80198ec:	f505 76d6 	add.w	r6, r5, #428	; 0x1ac
 80198f0:	7830      	ldrb	r0, [r6, #0]
 80198f2:	07c1      	lsls	r1, r0, #31
 80198f4:	f140 81f8 	bpl.w	8019ce8 <??GATT_Process_1>
 80198f8:	f04f 0800 	mov.w	r8, #0
 80198fc:	e021      	b.n	8019942 <??GATT_Process_2>

080198fe <??GATT_Process_3>:
 80198fe:	0740      	lsls	r0, r0, #29
 8019900:	d51b      	bpl.n	801993a <??GATT_Process_4>
 8019902:	1938      	adds	r0, r7, r4
 8019904:	f003 f949 	bl	801cb9a <GATT_Check_For_Service_Change>
 8019908:	1d38      	adds	r0, r7, #4
 801990a:	5901      	ldr	r1, [r0, r4]
 801990c:	1d3a      	adds	r2, r7, #4
 801990e:	f021 0104 	bic.w	r1, r1, #4
 8019912:	5111      	str	r1, [r2, r4]
 8019914:	e011      	b.n	801993a <??GATT_Process_4>

08019916 <??GATT_Process_5>:
 8019916:	0283      	lsls	r3, r0, #10
 8019918:	d5f1      	bpl.n	80198fe <??GATT_Process_3>
 801991a:	2001      	movs	r0, #1
 801991c:	f005 fc57 	bl	801f1ce <EVT_aci_gatt_proc_timeout>

08019920 <??GATT_Process_6>:
 8019920:	eb07 0904 	add.w	r9, r7, r4
 8019924:	2101      	movs	r1, #1
 8019926:	4648      	mov	r0, r9
 8019928:	f005 fa3a 	bl	801eda0 <GATT_Store_Server_Database>
 801992c:	5b3c      	ldrh	r4, [r7, r4]
 801992e:	4648      	mov	r0, r9
 8019930:	f000 fa2a 	bl	8019d88 <GATT_Reset_Client>
 8019934:	4620      	mov	r0, r4
 8019936:	f008 fbb3 	bl	80220a0 <SMP_Forget_Device>

0801993a <??GATT_Process_4>:
 801993a:	f108 0801 	add.w	r8, r8, #1
 801993e:	fa5f f888 	uxtb.w	r8, r8

08019942 <??GATT_Process_2>:
 8019942:	f8df 0614 	ldr.w	r0, [pc, #1556]	; 8019f58 <??DataTable13>
 8019946:	7d80      	ldrb	r0, [r0, #22]
 8019948:	4580      	cmp	r8, r0
 801994a:	d20a      	bcs.n	8019962 <??GATT_Process_7>
 801994c:	eb08 01c8 	add.w	r1, r8, r8, lsl #3
 8019950:	008c      	lsls	r4, r1, #2
 8019952:	5b39      	ldrh	r1, [r7, r4]
 8019954:	2900      	cmp	r1, #0
 8019956:	d0f0      	beq.n	801993a <??GATT_Process_4>
 8019958:	1d38      	adds	r0, r7, #4
 801995a:	5900      	ldr	r0, [r0, r4]
 801995c:	0242      	lsls	r2, r0, #9
 801995e:	d5da      	bpl.n	8019916 <??GATT_Process_5>
 8019960:	e7de      	b.n	8019920 <??GATT_Process_6>

08019962 <??GATT_Process_7>:
 8019962:	f04f 0900 	mov.w	r9, #0
 8019966:	f8df 7608 	ldr.w	r7, [pc, #1544]	; 8019f70 <??DataTable13_6>
 801996a:	f247 5830 	movw	r8, #30000	; 0x7530
 801996e:	e001      	b.n	8019974 <??GATT_Process_8>

08019970 <??GATT_Process_9>:
 8019970:	f109 0901 	add.w	r9, r9, #1

08019974 <??GATT_Process_8>:
 8019974:	f8df 15e0 	ldr.w	r1, [pc, #1504]	; 8019f58 <??DataTable13>
 8019978:	7d8a      	ldrb	r2, [r1, #22]
 801997a:	fa5f f089 	uxtb.w	r0, r9
 801997e:	4290      	cmp	r0, r2
 8019980:	f080 80a0 	bcs.w	8019ac4 <??GATT_Process_10>
 8019984:	f8d5 120c 	ldr.w	r1, [r5, #524]	; 0x20c
 8019988:	fa5f f389 	uxtb.w	r3, r9
 801998c:	eb03 02c3 	add.w	r2, r3, r3, lsl #3
 8019990:	eb01 0a82 	add.w	sl, r1, r2, lsl #2
 8019994:	f8ba 0000 	ldrh.w	r0, [sl]
 8019998:	2800      	cmp	r0, #0
 801999a:	d0e9      	beq.n	8019970 <??GATT_Process_9>
 801999c:	f8da 0020 	ldr.w	r0, [sl, #32]
 80199a0:	2800      	cmp	r0, #0
 80199a2:	d04a      	beq.n	8019a3a <??GATT_Process_11>
 80199a4:	f8da 2004 	ldr.w	r2, [sl, #4]
 80199a8:	6881      	ldr	r1, [r0, #8]
 80199aa:	f402 63a0 	and.w	r3, r2, #1280	; 0x500
 80199ae:	f5b3 6fa0 	cmp.w	r3, #1280	; 0x500
 80199b2:	7b0c      	ldrb	r4, [r1, #12]
 80199b4:	d12b      	bne.n	8019a0e <??GATT_Process_12>
 80199b6:	f89a 301a 	ldrb.w	r3, [sl, #26]
 80199ba:	429c      	cmp	r4, r3
 80199bc:	d00a      	beq.n	80199d4 <??GATT_Process_13>
 80199be:	2c01      	cmp	r4, #1
 80199c0:	d125      	bne.n	8019a0e <??GATT_Process_12>
 80199c2:	f8b0 c006 	ldrh.w	ip, [r0, #6]
 80199c6:	f1bc 0f01 	cmp.w	ip, #1
 80199ca:	dd20      	ble.n	8019a0e <??GATT_Process_12>
 80199cc:	7b49      	ldrb	r1, [r1, #13]
 80199ce:	1c49      	adds	r1, r1, #1
 80199d0:	4299      	cmp	r1, r3
 80199d2:	d11c      	bne.n	8019a0e <??GATT_Process_12>

080199d4 <??GATT_Process_13>:
 80199d4:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 80199d8:	f8ca 2004 	str.w	r2, [sl, #4]
 80199dc:	2102      	movs	r1, #2
 80199de:	4650      	mov	r0, sl
 80199e0:	f000 f9a8 	bl	8019d34 <GATT_Timer>
 80199e4:	f00d ffb0 	bl	8027948 <BLEPLAT_TimerStop>
 80199e8:	f8da 0004 	ldr.w	r0, [sl, #4]
 80199ec:	f8da 101c 	ldr.w	r1, [sl, #28]
 80199f0:	f420 7080 	bic.w	r0, r0, #256	; 0x100
 80199f4:	f8ca 0004 	str.w	r0, [sl, #4]
 80199f8:	4650      	mov	r0, sl
 80199fa:	4788      	blx	r1
 80199fc:	2895      	cmp	r0, #149	; 0x95
 80199fe:	d11c      	bne.n	8019a3a <??GATT_Process_11>
 8019a00:	f8da 0004 	ldr.w	r0, [sl, #4]
 8019a04:	f440 6080 	orr.w	r0, r0, #1024	; 0x400
 8019a08:	f8ca 0004 	str.w	r0, [sl, #4]
 8019a0c:	e015      	b.n	8019a3a <??GATT_Process_11>

08019a0e <??GATT_Process_12>:
 8019a0e:	2101      	movs	r1, #1
 8019a10:	f00b f967 	bl	8024ce2 <ACL_PM_Release>
 8019a14:	2000      	movs	r0, #0
 8019a16:	f8ca 0020 	str.w	r0, [sl, #32]
 8019a1a:	f8ba 0000 	ldrh.w	r0, [sl]
 8019a1e:	f8da 1004 	ldr.w	r1, [sl, #4]
 8019a22:	aa01      	add	r2, sp, #4
 8019a24:	ea40 4004 	orr.w	r0, r0, r4, lsl #16
 8019a28:	f421 6180 	bic.w	r1, r1, #1024	; 0x400
 8019a2c:	f8ca 1004 	str.w	r1, [sl, #4]
 8019a30:	9001      	str	r0, [sp, #4]
 8019a32:	2104      	movs	r1, #4
 8019a34:	2002      	movs	r0, #2
 8019a36:	f005 faea 	bl	801f00e <EVT_aci_hal_fw_error>

08019a3a <??GATT_Process_11>:
 8019a3a:	f505 70ea 	add.w	r0, r5, #468	; 0x1d4
 8019a3e:	6ab4      	ldr	r4, [r6, #40]	; 0x28
 8019a40:	9001      	str	r0, [sp, #4]
 8019a42:	e016      	b.n	8019a72 <??GATT_Process_14>

08019a44 <??GATT_Process_15>:
 8019a44:	291b      	cmp	r1, #27
 8019a46:	d113      	bne.n	8019a70 <??GATT_Process_16>
 8019a48:	80a0      	strh	r0, [r4, #4]
 8019a4a:	4620      	mov	r0, r4
 8019a4c:	f005 fd89 	bl	801f562 <EVT_GATT_Notification>
 8019a50:	e006      	b.n	8019a60 <??GATT_Process_17>

08019a52 <??GATT_Process_18>:
 8019a52:	4338      	orrs	r0, r7
 8019a54:	9002      	str	r0, [sp, #8]
 8019a56:	aa02      	add	r2, sp, #8
 8019a58:	2104      	movs	r1, #4
 8019a5a:	2002      	movs	r0, #2
 8019a5c:	f005 fad7 	bl	801f00e <EVT_aci_hal_fw_error>

08019a60 <??GATT_Process_17>:
 8019a60:	9801      	ldr	r0, [sp, #4]
 8019a62:	4621      	mov	r1, r4
 8019a64:	f00b f8a2 	bl	8024bac <ACL_List_Remove>
 8019a68:	2101      	movs	r1, #1
 8019a6a:	4620      	mov	r0, r4
 8019a6c:	f00b f939 	bl	8024ce2 <ACL_PM_Release>

08019a70 <??GATT_Process_16>:
 8019a70:	465c      	mov	r4, fp

08019a72 <??GATT_Process_14>:
 8019a72:	2c00      	cmp	r4, #0
 8019a74:	f43f af7c 	beq.w	8019970 <??GATT_Process_9>
 8019a78:	f8ba 0000 	ldrh.w	r0, [sl]
 8019a7c:	88a1      	ldrh	r1, [r4, #4]
 8019a7e:	f8d4 b000 	ldr.w	fp, [r4]
 8019a82:	4281      	cmp	r1, r0
 8019a84:	d1f4      	bne.n	8019a70 <??GATT_Process_16>
 8019a86:	68a2      	ldr	r2, [r4, #8]
 8019a88:	7b11      	ldrb	r1, [r2, #12]
 8019a8a:	291d      	cmp	r1, #29
 8019a8c:	d1da      	bne.n	8019a44 <??GATT_Process_15>
 8019a8e:	f8da 1004 	ldr.w	r1, [sl, #4]
 8019a92:	04ca      	lsls	r2, r1, #19
 8019a94:	d4dd      	bmi.n	8019a52 <??GATT_Process_18>
 8019a96:	80a0      	strh	r0, [r4, #4]
 8019a98:	4620      	mov	r0, r4
 8019a9a:	f005 fd3c 	bl	801f516 <EVT_GATT_Indication>
 8019a9e:	f8ba 1000 	ldrh.w	r1, [sl]
 8019aa2:	2800      	cmp	r0, #0
 8019aa4:	80a1      	strh	r1, [r4, #4]
 8019aa6:	d1e3      	bne.n	8019a70 <??GATT_Process_16>
 8019aa8:	f8da 0004 	ldr.w	r0, [sl, #4]
 8019aac:	2103      	movs	r1, #3
 8019aae:	f440 5080 	orr.w	r0, r0, #4096	; 0x1000
 8019ab2:	f8ca 0004 	str.w	r0, [sl, #4]
 8019ab6:	4650      	mov	r0, sl
 8019ab8:	f000 f93c 	bl	8019d34 <GATT_Timer>
 8019abc:	4641      	mov	r1, r8
 8019abe:	f00d ff41 	bl	8027944 <BLEPLAT_TimerStart>
 8019ac2:	e7cd      	b.n	8019a60 <??GATT_Process_17>

08019ac4 <??GATT_Process_10>:
 8019ac4:	6ab4      	ldr	r4, [r6, #40]	; 0x28
 8019ac6:	2c00      	cmp	r4, #0
 8019ac8:	f000 80bb 	beq.w	8019c42 <??GATT_Process_19>
 8019acc:	f505 70ea 	add.w	r0, r5, #468	; 0x1d4
 8019ad0:	9001      	str	r0, [sp, #4]

08019ad2 <??GATT_Process_20>:
 8019ad2:	68a0      	ldr	r0, [r4, #8]
 8019ad4:	f8d4 9000 	ldr.w	r9, [r4]
 8019ad8:	f890 a00c 	ldrb.w	sl, [r0, #12]
 8019adc:	88a0      	ldrh	r0, [r4, #4]
 8019ade:	f000 f9ef 	bl	8019ec0 <GATT_Find_Root_Client>
 8019ae2:	0007      	movs	r7, r0
 8019ae4:	f000 80a1 	beq.w	8019c2a <??GATT_Process_21>
 8019ae8:	8839      	ldrh	r1, [r7, #0]
 8019aea:	2220      	movs	r2, #32
 8019aec:	2000      	movs	r0, #0
 8019aee:	f00b f8e0 	bl	8024cb2 <ACL_PM_New>
 8019af2:	ea5f 0800 	movs.w	r8, r0
 8019af6:	f000 80a4 	beq.w	8019c42 <??GATT_Process_19>
 8019afa:	8878      	ldrh	r0, [r7, #2]
 8019afc:	88e1      	ldrh	r1, [r4, #6]
 8019afe:	4288      	cmp	r0, r1
 8019b00:	d208      	bcs.n	8019b14 <??GATT_Process_22>
 8019b02:	4643      	mov	r3, r8
 8019b04:	2200      	movs	r2, #0
 8019b06:	4651      	mov	r1, sl
 8019b08:	2004      	movs	r0, #4

08019b0a <??GATT_Process_23>:
 8019b0a:	f004 fd20 	bl	801e54e <ATT_Build_Error_Rsp>
 8019b0e:	f04f 0b00 	mov.w	fp, #0
 8019b12:	e024      	b.n	8019b5e <??GATT_Process_24>

08019b14 <??GATT_Process_22>:
 8019b14:	f1aa 0002 	sub.w	r0, sl, #2
 8019b18:	f04f 0b0c 	mov.w	fp, #12
 8019b1c:	281b      	cmp	r0, #27
 8019b1e:	f200 8075 	bhi.w	8019c0c <??GATT_Process_25>
 8019b22:	e8df f000 	tbb	[pc, r0]

08019b26 <??GATT_Process_0>:
 8019b26:	736d 7366 7360 7357 734e 7345 733c 7336     msfs`sWsNsEs<s6s
 8019b36:	732d 7373 7324 730e 7373 1473               -sss$s.ssss.

08019b42 <??GATT_Process_26>:
 8019b42:	4642      	mov	r2, r8
 8019b44:	4621      	mov	r1, r4
 8019b46:	4638      	mov	r0, r7
 8019b48:	f004 f9a7 	bl	801de9a <ATT_Build_Exec_Write_Rsp>

08019b4c <??GATT_Process_27>:
 8019b4c:	4683      	mov	fp, r0

08019b4e <??GATT_Process_28>:
 8019b4e:	f1bb 0f95 	cmp.w	fp, #149	; 0x95
 8019b52:	bf1c      	itt	ne
 8019b54:	f1bb 0f69 	cmpne.w	fp, #105	; 0x69
 8019b58:	f1bb 0f0c 	cmpne.w	fp, #12
 8019b5c:	d05b      	beq.n	8019c16 <??GATT_Process_29>

08019b5e <??GATT_Process_24>:
 8019b5e:	6878      	ldr	r0, [r7, #4]
 8019b60:	f020 7080 	bic.w	r0, r0, #16777216	; 0x1000000
 8019b64:	6078      	str	r0, [r7, #4]
 8019b66:	4640      	mov	r0, r8
 8019b68:	f000 f99b 	bl	8019ea2 <GATT_Send_Packet>
 8019b6c:	e05a      	b.n	8019c24 <??GATT_Process_30>

08019b6e <??GATT_Process_31>:
 8019b6e:	6878      	ldr	r0, [r7, #4]
 8019b70:	0381      	lsls	r1, r0, #14
 8019b72:	d450      	bmi.n	8019c16 <??GATT_Process_29>
 8019b74:	4642      	mov	r2, r8
 8019b76:	4621      	mov	r1, r4
 8019b78:	4638      	mov	r0, r7
 8019b7a:	f004 f8d2 	bl	801dd22 <ATT_Build_Prepare_Write_Rsp>
 8019b7e:	e7e5      	b.n	8019b4c <??GATT_Process_27>

08019b80 <??GATT_Process_32>:
 8019b80:	6878      	ldr	r0, [r7, #4]
 8019b82:	0381      	lsls	r1, r0, #14
 8019b84:	d447      	bmi.n	8019c16 <??GATT_Process_29>
 8019b86:	4642      	mov	r2, r8
 8019b88:	4621      	mov	r1, r4
 8019b8a:	4638      	mov	r0, r7
 8019b8c:	f004 f848 	bl	801dc20 <ATT_Build_Write_Rsp>
 8019b90:	e7dc      	b.n	8019b4c <??GATT_Process_27>

08019b92 <??GATT_Process_33>:
 8019b92:	4642      	mov	r2, r8
 8019b94:	4621      	mov	r1, r4
 8019b96:	4638      	mov	r0, r7
 8019b98:	f003 ff4e 	bl	801da38 <ATT_Build_Read_By_Grp_Type_Rsp>
 8019b9c:	e7d6      	b.n	8019b4c <??GATT_Process_27>

08019b9e <??GATT_Process_34>:
 8019b9e:	6878      	ldr	r0, [r7, #4]
 8019ba0:	0301      	lsls	r1, r0, #12
 8019ba2:	d438      	bmi.n	8019c16 <??GATT_Process_29>
 8019ba4:	4642      	mov	r2, r8
 8019ba6:	4621      	mov	r1, r4
 8019ba8:	4638      	mov	r0, r7
 8019baa:	f003 fe08 	bl	801d7be <ATT_Build_Read_Multi_Rsp>
 8019bae:	e7cd      	b.n	8019b4c <??GATT_Process_27>

08019bb0 <??GATT_Process_35>:
 8019bb0:	6878      	ldr	r0, [r7, #4]
 8019bb2:	0301      	lsls	r1, r0, #12
 8019bb4:	d42f      	bmi.n	8019c16 <??GATT_Process_29>
 8019bb6:	4642      	mov	r2, r8
 8019bb8:	4621      	mov	r1, r4
 8019bba:	4638      	mov	r0, r7
 8019bbc:	f003 fd59 	bl	801d672 <ATT_Build_Read_Blob_Rsp>
 8019bc0:	e7c4      	b.n	8019b4c <??GATT_Process_27>

08019bc2 <??GATT_Process_36>:
 8019bc2:	6878      	ldr	r0, [r7, #4]
 8019bc4:	0301      	lsls	r1, r0, #12
 8019bc6:	d426      	bmi.n	8019c16 <??GATT_Process_29>
 8019bc8:	4642      	mov	r2, r8
 8019bca:	4621      	mov	r1, r4
 8019bcc:	4638      	mov	r0, r7
 8019bce:	f003 fcc1 	bl	801d554 <ATT_Build_Read_Rsp>
 8019bd2:	e7bb      	b.n	8019b4c <??GATT_Process_27>

08019bd4 <??GATT_Process_37>:
 8019bd4:	6878      	ldr	r0, [r7, #4]
 8019bd6:	0301      	lsls	r1, r0, #12
 8019bd8:	d41d      	bmi.n	8019c16 <??GATT_Process_29>
 8019bda:	4642      	mov	r2, r8
 8019bdc:	4621      	mov	r1, r4
 8019bde:	4638      	mov	r0, r7
 8019be0:	f003 faa6 	bl	801d130 <ATT_Build_Read_By_Type_Rsp>
 8019be4:	e7b2      	b.n	8019b4c <??GATT_Process_27>

08019be6 <??GATT_Process_38>:
 8019be6:	4642      	mov	r2, r8
 8019be8:	4621      	mov	r1, r4
 8019bea:	4638      	mov	r0, r7
 8019bec:	f003 f959 	bl	801cea2 <ATT_Build_Find_By_Type_Val_Rsp>
 8019bf0:	e7ac      	b.n	8019b4c <??GATT_Process_27>

08019bf2 <??GATT_Process_39>:
 8019bf2:	4643      	mov	r3, r8
 8019bf4:	4622      	mov	r2, r4
 8019bf6:	4639      	mov	r1, r7
 8019bf8:	4630      	mov	r0, r6
 8019bfa:	f004 fb87 	bl	801e30c <ATT_Build_Find_Info_Rsp>
 8019bfe:	e7a5      	b.n	8019b4c <??GATT_Process_27>

08019c00 <??GATT_Process_40>:
 8019c00:	4642      	mov	r2, r8
 8019c02:	4621      	mov	r1, r4
 8019c04:	4638      	mov	r0, r7
 8019c06:	f004 fcb7 	bl	801e578 <ATT_Build_Exchg_Mtu_Rsp>
 8019c0a:	e79f      	b.n	8019b4c <??GATT_Process_27>

08019c0c <??GATT_Process_25>:
 8019c0c:	4643      	mov	r3, r8
 8019c0e:	2200      	movs	r2, #0
 8019c10:	4651      	mov	r1, sl
 8019c12:	2006      	movs	r0, #6
 8019c14:	e779      	b.n	8019b0a <??GATT_Process_23>

08019c16 <??GATT_Process_29>:
 8019c16:	2100      	movs	r1, #0
 8019c18:	4640      	mov	r0, r8
 8019c1a:	f00b f862 	bl	8024ce2 <ACL_PM_Release>
 8019c1e:	f1bb 0f95 	cmp.w	fp, #149	; 0x95
 8019c22:	d00e      	beq.n	8019c42 <??GATT_Process_19>

08019c24 <??GATT_Process_30>:
 8019c24:	f1bb 0f00 	cmp.w	fp, #0
 8019c28:	d107      	bne.n	8019c3a <??GATT_Process_41>

08019c2a <??GATT_Process_21>:
 8019c2a:	9801      	ldr	r0, [sp, #4]
 8019c2c:	4621      	mov	r1, r4
 8019c2e:	f00a ffbd 	bl	8024bac <ACL_List_Remove>
 8019c32:	2101      	movs	r1, #1
 8019c34:	4620      	mov	r0, r4
 8019c36:	f00b f854 	bl	8024ce2 <ACL_PM_Release>

08019c3a <??GATT_Process_41>:
 8019c3a:	ea5f 0409 	movs.w	r4, r9
 8019c3e:	f47f af48 	bne.w	8019ad2 <??GATT_Process_20>

08019c42 <??GATT_Process_19>:
 8019c42:	69f7      	ldr	r7, [r6, #28]
 8019c44:	b31f      	cbz	r7, 8019c8e <??GATT_Process_42>
 8019c46:	f505 79e4 	add.w	r9, r5, #456	; 0x1c8

08019c4a <??GATT_Process_43>:
 8019c4a:	88b8      	ldrh	r0, [r7, #4]
 8019c4c:	f8d7 8000 	ldr.w	r8, [r7]
 8019c50:	f000 f936 	bl	8019ec0 <GATT_Find_Root_Client>
 8019c54:	0004      	movs	r4, r0
 8019c56:	d00f      	beq.n	8019c78 <??GATT_Process_44>
 8019c58:	68b8      	ldr	r0, [r7, #8]
 8019c5a:	7b01      	ldrb	r1, [r0, #12]
 8019c5c:	2952      	cmp	r1, #82	; 0x52
 8019c5e:	bf18      	it	ne
 8019c60:	29d2      	cmpne	r1, #210	; 0xd2
 8019c62:	d106      	bne.n	8019c72 <??GATT_Process_45>
 8019c64:	6860      	ldr	r0, [r4, #4]
 8019c66:	0341      	lsls	r1, r0, #13
 8019c68:	d403      	bmi.n	8019c72 <??GATT_Process_45>
 8019c6a:	4639      	mov	r1, r7
 8019c6c:	4620      	mov	r0, r4
 8019c6e:	f004 fa48 	bl	801e102 <GATT_Handle_Write_Cmd>

08019c72 <??GATT_Process_45>:
 8019c72:	6860      	ldr	r0, [r4, #4]
 8019c74:	0341      	lsls	r1, r0, #13
 8019c76:	d407      	bmi.n	8019c88 <??GATT_Process_46>

08019c78 <??GATT_Process_44>:
 8019c78:	4639      	mov	r1, r7
 8019c7a:	4648      	mov	r0, r9
 8019c7c:	f00a ff96 	bl	8024bac <ACL_List_Remove>
 8019c80:	2101      	movs	r1, #1
 8019c82:	4638      	mov	r0, r7
 8019c84:	f00b f82d 	bl	8024ce2 <ACL_PM_Release>

08019c88 <??GATT_Process_46>:
 8019c88:	ea5f 0708 	movs.w	r7, r8
 8019c8c:	d1dd      	bne.n	8019c4a <??GATT_Process_43>

08019c8e <??GATT_Process_42>:
 8019c8e:	6c30      	ldr	r0, [r6, #64]	; 0x40
 8019c90:	b178      	cbz	r0, 8019cb2 <??GATT_Process_47>
 8019c92:	f505 74f6 	add.w	r4, r5, #492	; 0x1ec
 8019c96:	4669      	mov	r1, sp
 8019c98:	4620      	mov	r0, r4
 8019c9a:	f00a ffa0 	bl	8024bde <ACL_List_Remove_Head>
 8019c9e:	9900      	ldr	r1, [sp, #0]
 8019ca0:	2004      	movs	r0, #4
 8019ca2:	f005 fd05 	bl	801f6b0 <L2C_Send_Data>
 8019ca6:	2800      	cmp	r0, #0
 8019ca8:	d0f1      	beq.n	8019c8e <??GATT_Process_42>
 8019caa:	9900      	ldr	r1, [sp, #0]
 8019cac:	4620      	mov	r0, r4
 8019cae:	f00a ff6e 	bl	8024b8e <ACL_List_Insert_Head>

08019cb2 <??GATT_Process_47>:
 8019cb2:	7830      	ldrb	r0, [r6, #0]
 8019cb4:	0601      	lsls	r1, r0, #24
 8019cb6:	d517      	bpl.n	8019ce8 <??GATT_Process_1>
 8019cb8:	6ab0      	ldr	r0, [r6, #40]	; 0x28
 8019cba:	b9a8      	cbnz	r0, 8019ce8 <??GATT_Process_1>
 8019cbc:	f00b f830 	bl	8024d20 <ACL_PM_Get_Available_Buffer>
 8019cc0:	f8b5 1206 	ldrh.w	r1, [r5, #518]	; 0x206
 8019cc4:	3123      	adds	r1, #35	; 0x23
 8019cc6:	0949      	lsrs	r1, r1, #5
 8019cc8:	1c49      	adds	r1, r1, #1
 8019cca:	b2c9      	uxtb	r1, r1
 8019ccc:	fb90 f0f1 	sdiv	r0, r0, r1
 8019cd0:	b2c0      	uxtb	r0, r0
 8019cd2:	b148      	cbz	r0, 8019ce8 <??GATT_Process_1>
 8019cd4:	4602      	mov	r2, r0
 8019cd6:	2100      	movs	r1, #0
 8019cd8:	2000      	movs	r0, #0
 8019cda:	f005 fa66 	bl	801f1aa <EVT_aci_gatt_tx_pool_available>
 8019cde:	b918      	cbnz	r0, 8019ce8 <??GATT_Process_1>
 8019ce0:	7830      	ldrb	r0, [r6, #0]
 8019ce2:	f000 007f 	and.w	r0, r0, #127	; 0x7f
 8019ce6:	7030      	strb	r0, [r6, #0]

08019ce8 <??GATT_Process_1>:
 8019ce8:	b003      	add	sp, #12
 8019cea:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08019cee <GATT_Handle_Notif>:
 8019cee:	b580      	push	{r7, lr}
 8019cf0:	688a      	ldr	r2, [r1, #8]
 8019cf2:	7b13      	ldrb	r3, [r2, #12]
 8019cf4:	2b1b      	cmp	r3, #27
 8019cf6:	d106      	bne.n	8019d06 <??GATT_Handle_Notif_0>
 8019cf8:	8800      	ldrh	r0, [r0, #0]
 8019cfa:	8088      	strh	r0, [r1, #4]
 8019cfc:	4608      	mov	r0, r1
 8019cfe:	f005 fc30 	bl	801f562 <EVT_GATT_Notification>
 8019d02:	2000      	movs	r0, #0
 8019d04:	bd02      	pop	{r1, pc}

08019d06 <??GATT_Handle_Notif_0>:
 8019d06:	2091      	movs	r0, #145	; 0x91
 8019d08:	bd02      	pop	{r1, pc}

08019d0a <GATT_Timeout_Cb>:
 8019d0a:	4993      	ldr	r1, [pc, #588]	; (8019f58 <??DataTable13>)
 8019d0c:	3811      	subs	r0, #17
 8019d0e:	7d8a      	ldrb	r2, [r1, #22]
 8019d10:	0580      	lsls	r0, r0, #22
 8019d12:	0e00      	lsrs	r0, r0, #24
 8019d14:	4290      	cmp	r0, r2
 8019d16:	da0c      	bge.n	8019d32 <??GATT_Timeout_Cb_0>
 8019d18:	4992      	ldr	r1, [pc, #584]	; (8019f64 <??DataTable13_3>)
 8019d1a:	f8d1 220c 	ldr.w	r2, [r1, #524]	; 0x20c
 8019d1e:	eb00 03c0 	add.w	r3, r0, r0, lsl #3
 8019d22:	eb02 0183 	add.w	r1, r2, r3, lsl #2
 8019d26:	8808      	ldrh	r0, [r1, #0]
 8019d28:	b118      	cbz	r0, 8019d32 <??GATT_Timeout_Cb_0>
 8019d2a:	6848      	ldr	r0, [r1, #4]
 8019d2c:	f440 1000 	orr.w	r0, r0, #2097152	; 0x200000
 8019d30:	6048      	str	r0, [r1, #4]

08019d32 <??GATT_Timeout_Cb_0>:
 8019d32:	4770      	bx	lr

08019d34 <GATT_Timer>:
 8019d34:	b430      	push	{r4, r5}
 8019d36:	4b8b      	ldr	r3, [pc, #556]	; (8019f64 <??DataTable13_3>)
 8019d38:	f8d3 220c 	ldr.w	r2, [r3, #524]	; 0x20c
 8019d3c:	4c8d      	ldr	r4, [pc, #564]	; (8019f74 <??DataTable13_7>)
 8019d3e:	1a80      	subs	r0, r0, r2
 8019d40:	fb80 5404 	smull	r5, r4, r0, r4
 8019d44:	10e0      	asrs	r0, r4, #3
 8019d46:	eb00 70d0 	add.w	r0, r0, r0, lsr #31
 8019d4a:	bc30      	pop	{r4, r5}
 8019d4c:	eb01 0180 	add.w	r1, r1, r0, lsl #2
 8019d50:	3111      	adds	r1, #17
 8019d52:	b2c8      	uxtb	r0, r1
 8019d54:	4770      	bx	lr

08019d56 <GATT_Flush_Acl_List>:
 8019d56:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8019d5a:	460e      	mov	r6, r1
 8019d5c:	4605      	mov	r5, r0
 8019d5e:	4690      	mov	r8, r2
 8019d60:	6834      	ldr	r4, [r6, #0]
 8019d62:	e00d      	b.n	8019d80 <??GATT_Flush_Acl_List_0>

08019d64 <??GATT_Flush_Acl_List_1>:
 8019d64:	88a0      	ldrh	r0, [r4, #4]
 8019d66:	8829      	ldrh	r1, [r5, #0]
 8019d68:	6827      	ldr	r7, [r4, #0]
 8019d6a:	4288      	cmp	r0, r1
 8019d6c:	d107      	bne.n	8019d7e <??GATT_Flush_Acl_List_2>
 8019d6e:	4621      	mov	r1, r4
 8019d70:	4630      	mov	r0, r6
 8019d72:	f00a ff1b 	bl	8024bac <ACL_List_Remove>
 8019d76:	4641      	mov	r1, r8
 8019d78:	4620      	mov	r0, r4
 8019d7a:	f00a ffb2 	bl	8024ce2 <ACL_PM_Release>

08019d7e <??GATT_Flush_Acl_List_2>:
 8019d7e:	463c      	mov	r4, r7

08019d80 <??GATT_Flush_Acl_List_0>:
 8019d80:	2c00      	cmp	r4, #0
 8019d82:	d1ef      	bne.n	8019d64 <??GATT_Flush_Acl_List_1>
 8019d84:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

08019d88 <GATT_Reset_Client>:
 8019d88:	b538      	push	{r3, r4, r5, lr}
 8019d8a:	4d76      	ldr	r5, [pc, #472]	; (8019f64 <??DataTable13_3>)
 8019d8c:	4604      	mov	r4, r0
 8019d8e:	2300      	movs	r3, #0
 8019d90:	2201      	movs	r2, #1
 8019d92:	f505 71e4 	add.w	r1, r5, #456	; 0x1c8
 8019d96:	f7ff ffde 	bl	8019d56 <GATT_Flush_Acl_List>
 8019d9a:	2301      	movs	r3, #1
 8019d9c:	2201      	movs	r2, #1
 8019d9e:	f505 71f0 	add.w	r1, r5, #480	; 0x1e0
 8019da2:	4620      	mov	r0, r4
 8019da4:	f7ff ffd7 	bl	8019d56 <GATT_Flush_Acl_List>
 8019da8:	2302      	movs	r3, #2
 8019daa:	2201      	movs	r2, #1
 8019dac:	f505 71ea 	add.w	r1, r5, #468	; 0x1d4
 8019db0:	4620      	mov	r0, r4
 8019db2:	f7ff ffd0 	bl	8019d56 <GATT_Flush_Acl_List>
 8019db6:	2303      	movs	r3, #3
 8019db8:	2200      	movs	r2, #0
 8019dba:	f505 71f6 	add.w	r1, r5, #492	; 0x1ec
 8019dbe:	4620      	mov	r0, r4
 8019dc0:	f7ff ffc9 	bl	8019d56 <GATT_Flush_Acl_List>
 8019dc4:	2100      	movs	r1, #0
 8019dc6:	4620      	mov	r0, r4
 8019dc8:	f7ff ffb4 	bl	8019d34 <GATT_Timer>
 8019dcc:	f00d fdbc 	bl	8027948 <BLEPLAT_TimerStop>
 8019dd0:	2101      	movs	r1, #1
 8019dd2:	4620      	mov	r0, r4
 8019dd4:	f7ff ffae 	bl	8019d34 <GATT_Timer>
 8019dd8:	f00d fdb6 	bl	8027948 <BLEPLAT_TimerStop>
 8019ddc:	2102      	movs	r1, #2
 8019dde:	4620      	mov	r0, r4
 8019de0:	f7ff ffa8 	bl	8019d34 <GATT_Timer>
 8019de4:	f00d fdb0 	bl	8027948 <BLEPLAT_TimerStop>
 8019de8:	2103      	movs	r1, #3
 8019dea:	4620      	mov	r0, r4
 8019dec:	f7ff ffa2 	bl	8019d34 <GATT_Timer>
 8019df0:	f00d fdaa 	bl	8027948 <BLEPLAT_TimerStop>
 8019df4:	f8d5 0210 	ldr.w	r0, [r5, #528]	; 0x210
 8019df8:	42a0      	cmp	r0, r4
 8019dfa:	bf04      	itt	eq
 8019dfc:	2100      	moveq	r1, #0
 8019dfe:	f8c5 1210 	streq.w	r1, [r5, #528]	; 0x210
 8019e02:	6860      	ldr	r0, [r4, #4]
 8019e04:	0481      	lsls	r1, r0, #18
 8019e06:	d503      	bpl.n	8019e10 <??GATT_Reset_Client_0>
 8019e08:	2191      	movs	r1, #145	; 0x91
 8019e0a:	4620      	mov	r0, r4
 8019e0c:	f000 f90b 	bl	801a026 <GATT_Send_Complete_Event>

08019e10 <??GATT_Reset_Client_0>:
 8019e10:	6a20      	ldr	r0, [r4, #32]
 8019e12:	b110      	cbz	r0, 8019e1a <??GATT_Reset_Client_1>
 8019e14:	2101      	movs	r1, #1
 8019e16:	f00a ff64 	bl	8024ce2 <ACL_PM_Release>

08019e1a <??GATT_Reset_Client_1>:
 8019e1a:	2124      	movs	r1, #36	; 0x24
 8019e1c:	4620      	mov	r0, r4
 8019e1e:	f017 f85f 	bl	8030ee0 <__aeabi_memclr>
 8019e22:	2017      	movs	r0, #23
 8019e24:	8060      	strh	r0, [r4, #2]
 8019e26:	bd31      	pop	{r0, r4, r5, pc}

08019e28 <GATT_Connection_Complete_Handler>:
 8019e28:	4953      	ldr	r1, [pc, #332]	; (8019f78 <??DataTable13_8>)
 8019e2a:	780a      	ldrb	r2, [r1, #0]
 8019e2c:	07d3      	lsls	r3, r2, #31
 8019e2e:	d515      	bpl.n	8019e5c <??GATT_Connection_Complete_Handler_0>
 8019e30:	f042 0202 	orr.w	r2, r2, #2
 8019e34:	700a      	strb	r2, [r1, #0]
 8019e36:	6e0a      	ldr	r2, [r1, #96]	; 0x60
 8019e38:	4947      	ldr	r1, [pc, #284]	; (8019f58 <??DataTable13>)
 8019e3a:	2300      	movs	r3, #0
 8019e3c:	f891 c016 	ldrb.w	ip, [r1, #22]
 8019e40:	e001      	b.n	8019e46 <??GATT_Connection_Complete_Handler_1>

08019e42 <??GATT_Connection_Complete_Handler_2>:
 8019e42:	1c5b      	adds	r3, r3, #1
 8019e44:	3224      	adds	r2, #36	; 0x24

08019e46 <??GATT_Connection_Complete_Handler_1>:
 8019e46:	4563      	cmp	r3, ip
 8019e48:	d208      	bcs.n	8019e5c <??GATT_Connection_Complete_Handler_0>
 8019e4a:	8811      	ldrh	r1, [r2, #0]
 8019e4c:	2900      	cmp	r1, #0
 8019e4e:	d1f8      	bne.n	8019e42 <??GATT_Connection_Complete_Handler_2>
 8019e50:	8010      	strh	r0, [r2, #0]
 8019e52:	b11a      	cbz	r2, 8019e5c <??GATT_Connection_Complete_Handler_0>
 8019e54:	6850      	ldr	r0, [r2, #4]
 8019e56:	f040 0004 	orr.w	r0, r0, #4
 8019e5a:	6050      	str	r0, [r2, #4]

08019e5c <??GATT_Connection_Complete_Handler_0>:
 8019e5c:	4770      	bx	lr

08019e5e <GATT_Disconnection_Complete_Handler>:
 8019e5e:	4946      	ldr	r1, [pc, #280]	; (8019f78 <??DataTable13_8>)
 8019e60:	780a      	ldrb	r2, [r1, #0]
 8019e62:	07d3      	lsls	r3, r2, #31
 8019e64:	d400      	bmi.n	8019e68 <??GATT_Disconnection_Complete_Handler_0>
 8019e66:	4770      	bx	lr

08019e68 <??GATT_Disconnection_Complete_Handler_0>:
 8019e68:	b470      	push	{r4, r5, r6}
 8019e6a:	6e09      	ldr	r1, [r1, #96]	; 0x60
 8019e6c:	0002      	movs	r2, r0
 8019e6e:	d016      	beq.n	8019e9e <??GATT_Disconnection_Complete_Handler_1>
 8019e70:	4c39      	ldr	r4, [pc, #228]	; (8019f58 <??DataTable13>)
 8019e72:	2200      	movs	r2, #0
 8019e74:	460b      	mov	r3, r1
 8019e76:	7da4      	ldrb	r4, [r4, #22]
 8019e78:	f3c0 060b 	ubfx	r6, r0, #0, #12
 8019e7c:	e000      	b.n	8019e80 <??GATT_Disconnection_Complete_Handler_2>

08019e7e <??GATT_Disconnection_Complete_Handler_3>:
 8019e7e:	1c52      	adds	r2, r2, #1

08019e80 <??GATT_Disconnection_Complete_Handler_2>:
 8019e80:	42a2      	cmp	r2, r4
 8019e82:	d20c      	bcs.n	8019e9e <??GATT_Disconnection_Complete_Handler_1>
 8019e84:	f833 5b24 	ldrh.w	r5, [r3], #36
 8019e88:	42b5      	cmp	r5, r6
 8019e8a:	d1f8      	bne.n	8019e7e <??GATT_Disconnection_Complete_Handler_3>
 8019e8c:	eb02 00c2 	add.w	r0, r2, r2, lsl #3
 8019e90:	eb11 0080 	adds.w	r0, r1, r0, lsl #2
 8019e94:	d003      	beq.n	8019e9e <??GATT_Disconnection_Complete_Handler_1>
 8019e96:	6841      	ldr	r1, [r0, #4]
 8019e98:	f441 0180 	orr.w	r1, r1, #4194304	; 0x400000
 8019e9c:	6041      	str	r1, [r0, #4]

08019e9e <??GATT_Disconnection_Complete_Handler_1>:
 8019e9e:	bc70      	pop	{r4, r5, r6}
 8019ea0:	4770      	bx	lr

08019ea2 <GATT_Send_Packet>:
 8019ea2:	b538      	push	{r3, r4, r5, lr}
 8019ea4:	4604      	mov	r4, r0
 8019ea6:	4621      	mov	r1, r4
 8019ea8:	2004      	movs	r0, #4
 8019eaa:	2500      	movs	r5, #0
 8019eac:	f005 fc00 	bl	801f6b0 <L2C_Send_Data>
 8019eb0:	b120      	cbz	r0, 8019ebc <??GATT_Send_Packet_0>
 8019eb2:	4621      	mov	r1, r4
 8019eb4:	4831      	ldr	r0, [pc, #196]	; (8019f7c <??DataTable13_9>)
 8019eb6:	2593      	movs	r5, #147	; 0x93
 8019eb8:	f00a fe5c 	bl	8024b74 <ACL_List_Insert_Tail>

08019ebc <??GATT_Send_Packet_0>:
 8019ebc:	4628      	mov	r0, r5
 8019ebe:	bd32      	pop	{r1, r4, r5, pc}

08019ec0 <GATT_Find_Root_Client>:
 8019ec0:	b470      	push	{r4, r5, r6}
 8019ec2:	4928      	ldr	r1, [pc, #160]	; (8019f64 <??DataTable13_3>)
 8019ec4:	f8d1 120c 	ldr.w	r1, [r1, #524]	; 0x20c
 8019ec8:	0002      	movs	r2, r0
 8019eca:	d00e      	beq.n	8019eea <??GATT_Find_Root_Client_0>
 8019ecc:	4c22      	ldr	r4, [pc, #136]	; (8019f58 <??DataTable13>)
 8019ece:	2200      	movs	r2, #0
 8019ed0:	460b      	mov	r3, r1
 8019ed2:	7da4      	ldrb	r4, [r4, #22]
 8019ed4:	f3c0 060b 	ubfx	r6, r0, #0, #12
 8019ed8:	e000      	b.n	8019edc <??GATT_Find_Root_Client_1>

08019eda <??GATT_Find_Root_Client_2>:
 8019eda:	1c52      	adds	r2, r2, #1

08019edc <??GATT_Find_Root_Client_1>:
 8019edc:	42a2      	cmp	r2, r4
 8019ede:	d204      	bcs.n	8019eea <??GATT_Find_Root_Client_0>
 8019ee0:	f833 5b24 	ldrh.w	r5, [r3], #36
 8019ee4:	42b5      	cmp	r5, r6
 8019ee6:	d1f8      	bne.n	8019eda <??GATT_Find_Root_Client_2>
 8019ee8:	e018      	b.n	8019f1c <?Subroutine0>

08019eea <??GATT_Find_Root_Client_0>:
 8019eea:	e014      	b.n	8019f16 <??GATT_Find_Client_0>

08019eec <GATT_Find_Client>:
 8019eec:	b470      	push	{r4, r5, r6}
 8019eee:	491d      	ldr	r1, [pc, #116]	; (8019f64 <??DataTable13_3>)
 8019ef0:	f8d1 120c 	ldr.w	r1, [r1, #524]	; 0x20c
 8019ef4:	0002      	movs	r2, r0
 8019ef6:	d00e      	beq.n	8019f16 <??GATT_Find_Client_0>
 8019ef8:	4c17      	ldr	r4, [pc, #92]	; (8019f58 <??DataTable13>)
 8019efa:	2200      	movs	r2, #0
 8019efc:	460b      	mov	r3, r1
 8019efe:	7da4      	ldrb	r4, [r4, #22]
 8019f00:	f3c0 060b 	ubfx	r6, r0, #0, #12
 8019f04:	e000      	b.n	8019f08 <??GATT_Find_Client_1>

08019f06 <??GATT_Find_Client_2>:
 8019f06:	1c52      	adds	r2, r2, #1

08019f08 <??GATT_Find_Client_1>:
 8019f08:	42a2      	cmp	r2, r4
 8019f0a:	d204      	bcs.n	8019f16 <??GATT_Find_Client_0>
 8019f0c:	f833 5b24 	ldrh.w	r5, [r3], #36
 8019f10:	42b5      	cmp	r5, r6
 8019f12:	d1f8      	bne.n	8019f06 <??GATT_Find_Client_2>
 8019f14:	e002      	b.n	8019f1c <?Subroutine0>

08019f16 <??GATT_Find_Client_0>:
 8019f16:	2000      	movs	r0, #0
 8019f18:	bc70      	pop	{r4, r5, r6}
 8019f1a:	4770      	bx	lr

08019f1c <?Subroutine0>:
 8019f1c:	eb02 00c2 	add.w	r0, r2, r2, lsl #3
 8019f20:	eb01 0080 	add.w	r0, r1, r0, lsl #2
 8019f24:	bc70      	pop	{r4, r5, r6}
 8019f26:	4770      	bx	lr

08019f28 <GATT_Get_Client>:
 8019f28:	b470      	push	{r4, r5, r6}
 8019f2a:	8880      	ldrh	r0, [r0, #4]
 8019f2c:	490d      	ldr	r1, [pc, #52]	; (8019f64 <??DataTable13_3>)
 8019f2e:	f8d1 120c 	ldr.w	r1, [r1, #524]	; 0x20c
 8019f32:	0002      	movs	r2, r0
 8019f34:	d00e      	beq.n	8019f54 <??GATT_Get_Client_0>
 8019f36:	4c08      	ldr	r4, [pc, #32]	; (8019f58 <??DataTable13>)
 8019f38:	2200      	movs	r2, #0
 8019f3a:	460b      	mov	r3, r1
 8019f3c:	7da4      	ldrb	r4, [r4, #22]
 8019f3e:	f3c0 060b 	ubfx	r6, r0, #0, #12
 8019f42:	e000      	b.n	8019f46 <??GATT_Get_Client_1>

08019f44 <??GATT_Get_Client_2>:
 8019f44:	1c52      	adds	r2, r2, #1

08019f46 <??GATT_Get_Client_1>:
 8019f46:	42a2      	cmp	r2, r4
 8019f48:	d204      	bcs.n	8019f54 <??GATT_Get_Client_0>
 8019f4a:	f833 5b24 	ldrh.w	r5, [r3], #36
 8019f4e:	42b5      	cmp	r5, r6
 8019f50:	d1f8      	bne.n	8019f44 <??GATT_Get_Client_2>
 8019f52:	e7e3      	b.n	8019f1c <?Subroutine0>

08019f54 <??GATT_Get_Client_0>:
 8019f54:	e7df      	b.n	8019f16 <??GATT_Find_Client_0>
	...

08019f58 <??DataTable13>:
 8019f58:	36e8 2000                                   .6. 

08019f5c <??DataTable13_1>:
 8019f5c:	391c 2000                                   .9. 

08019f60 <??DataTable13_2>:
 8019f60:	3908 2000                                   .9. 

08019f64 <??DataTable13_3>:
 8019f64:	3710 2000                                   .7. 

08019f68 <??DataTable13_4>:
 8019f68:	38d8 2000                                   .8. 

08019f6c <??DataTable13_5>:
 8019f6c:	38e4 2000                                   .8. 

08019f70 <??DataTable13_6>:
 8019f70:	0000 021d                                   ....

08019f74 <??DataTable13_7>:
 8019f74:	8e39 38e3                                   9..8

08019f78 <??DataTable13_8>:
 8019f78:	38bc 2000                                   .8. 

08019f7c <??DataTable13_9>:
 8019f7c:	38fc 2000                                   .8. 

08019f80 <GATT_Evt_Handle>:
 8019f80:	8800      	ldrh	r0, [r0, #0]
 8019f82:	4770      	bx	lr

08019f84 <GATT_New_Request>:
 8019f84:	b570      	push	{r4, r5, r6, lr}
 8019f86:	4615      	mov	r5, r2
 8019f88:	461e      	mov	r6, r3
 8019f8a:	f7ff ffaf 	bl	8019eec <GATT_Find_Client>
 8019f8e:	0004      	movs	r4, r0
 8019f90:	d003      	beq.n	8019f9a <??GATT_New_Request_0>
 8019f92:	6860      	ldr	r0, [r4, #4]
 8019f94:	f410 5f05 	tst.w	r0, #8512	; 0x2140
 8019f98:	d001      	beq.n	8019f9e <??GATT_New_Request_1>

08019f9a <??GATT_New_Request_0>:
 8019f9a:	200c      	movs	r0, #12
 8019f9c:	bd70      	pop	{r4, r5, r6, pc}

08019f9e <??GATT_New_Request_1>:
 8019f9e:	8821      	ldrh	r1, [r4, #0]
 8019fa0:	2220      	movs	r2, #32
 8019fa2:	2000      	movs	r0, #0
 8019fa4:	f00a fe85 	bl	8024cb2 <ACL_PM_New>
 8019fa8:	b908      	cbnz	r0, 8019fae <??GATT_New_Request_2>
 8019faa:	2064      	movs	r0, #100	; 0x64
 8019fac:	bd70      	pop	{r4, r5, r6, pc}

08019fae <??GATT_New_Request_2>:
 8019fae:	602c      	str	r4, [r5, #0]
 8019fb0:	6030      	str	r0, [r6, #0]
 8019fb2:	2000      	movs	r0, #0
 8019fb4:	bd70      	pop	{r4, r5, r6, pc}

08019fb6 <GATT_Send_Resp_Event>:
 8019fb6:	4601      	mov	r1, r0
 8019fb8:	6888      	ldr	r0, [r1, #8]
 8019fba:	7b02      	ldrb	r2, [r0, #12]
 8019fbc:	2a01      	cmp	r2, #1
 8019fbe:	d014      	beq.n	8019fea <??GATT_Send_Resp_Event_0>
 8019fc0:	2a05      	cmp	r2, #5
 8019fc2:	d015      	beq.n	8019ff0 <??GATT_Send_Resp_Event_1>
 8019fc4:	2a07      	cmp	r2, #7
 8019fc6:	d016      	beq.n	8019ff6 <??GATT_Send_Resp_Event_2>
 8019fc8:	2a09      	cmp	r2, #9
 8019fca:	d017      	beq.n	8019ffc <??GATT_Send_Resp_Event_3>
 8019fcc:	2a0b      	cmp	r2, #11
 8019fce:	d021      	beq.n	801a014 <??GATT_Send_Resp_Event_4>
 8019fd0:	2a0d      	cmp	r2, #13
 8019fd2:	d022      	beq.n	801a01a <??GATT_Send_Resp_Event_5>
 8019fd4:	2a0f      	cmp	r2, #15
 8019fd6:	d023      	beq.n	801a020 <??GATT_Send_Resp_Event_6>
 8019fd8:	2a11      	cmp	r2, #17
 8019fda:	d012      	beq.n	801a002 <??GATT_Send_Resp_Event_7>
 8019fdc:	2a17      	cmp	r2, #23
 8019fde:	d013      	beq.n	801a008 <??GATT_Send_Resp_Event_8>
 8019fe0:	2a19      	cmp	r2, #25
 8019fe2:	d014      	beq.n	801a00e <??GATT_Send_Resp_Event_9>
 8019fe4:	2a21      	cmp	r2, #33	; 0x21
 8019fe6:	d01b      	beq.n	801a020 <??GATT_Send_Resp_Event_6>
 8019fe8:	4770      	bx	lr

08019fea <??GATT_Send_Resp_Event_0>:
 8019fea:	2001      	movs	r0, #1
 8019fec:	f005 b8f9 	b.w	801f1e2 <EVT_aci_gatt_error_resp>

08019ff0 <??GATT_Send_Resp_Event_1>:
 8019ff0:	2001      	movs	r0, #1
 8019ff2:	f005 b988 	b.w	801f306 <EVT_aci_att_find_info_resp>

08019ff6 <??GATT_Send_Resp_Event_2>:
 8019ff6:	2001      	movs	r0, #1
 8019ff8:	f005 b9a1 	b.w	801f33e <EVT_aci_att_find_by_type_value_resp>

08019ffc <??GATT_Send_Resp_Event_3>:
 8019ffc:	2001      	movs	r0, #1
 8019ffe:	f005 b968 	b.w	801f2d2 <EVT_aci_att_read_by_type_resp>

0801a002 <??GATT_Send_Resp_Event_7>:
 801a002:	2001      	movs	r0, #1
 801a004:	f005 b9b3 	b.w	801f36e <EVT_aci_att_read_by_group_type_resp>

0801a008 <??GATT_Send_Resp_Event_8>:
 801a008:	2001      	movs	r0, #1
 801a00a:	f005 b9ca 	b.w	801f3a2 <EVT_aci_att_prepare_write_resp>

0801a00e <??GATT_Send_Resp_Event_9>:
 801a00e:	2001      	movs	r0, #1
 801a010:	f005 b9f2 	b.w	801f3f8 <EVT_aci_att_exec_write_resp>

0801a014 <??GATT_Send_Resp_Event_4>:
 801a014:	4608      	mov	r0, r1
 801a016:	f005 ba26 	b.w	801f466 <EVT_GATT_Read_Resp>

0801a01a <??GATT_Send_Resp_Event_5>:
 801a01a:	4608      	mov	r0, r1
 801a01c:	f005 ba40 	b.w	801f4a0 <EVT_GATT_Read_Blob_Resp>

0801a020 <??GATT_Send_Resp_Event_6>:
 801a020:	4608      	mov	r0, r1
 801a022:	f005 ba5d 	b.w	801f4e0 <EVT_GATT_Read_Multiple_Resp>

0801a026 <GATT_Send_Complete_Event>:
 801a026:	b510      	push	{r4, lr}
 801a028:	460c      	mov	r4, r1
 801a02a:	f7ff ffa9 	bl	8019f80 <GATT_Evt_Handle>
 801a02e:	4622      	mov	r2, r4
 801a030:	4601      	mov	r1, r0
 801a032:	2001      	movs	r0, #1
 801a034:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801a038:	f005 b8be 	b.w	801f1b8 <EVT_aci_gatt_proc_complete>

0801a03c <aci_gatt_exchange_config>:
 801a03c:	b51c      	push	{r2, r3, r4, lr}
 801a03e:	ab01      	add	r3, sp, #4
 801a040:	466a      	mov	r2, sp
 801a042:	2101      	movs	r1, #1
 801a044:	f7ff ff9e 	bl	8019f84 <GATT_New_Request>
 801a048:	0004      	movs	r4, r0
 801a04a:	d119      	bne.n	801a080 <??aci_gatt_exchange_config_0>
 801a04c:	9901      	ldr	r1, [sp, #4]
 801a04e:	9800      	ldr	r0, [sp, #0]
 801a050:	f001 f8c5 	bl	801b1de <ATT_Build_Exchg_Mtu_Req>
 801a054:	0004      	movs	r4, r0
 801a056:	d10f      	bne.n	801a078 <??aci_gatt_exchange_config_1>
 801a058:	9800      	ldr	r0, [sp, #0]
 801a05a:	6841      	ldr	r1, [r0, #4]
 801a05c:	f441 5121 	orr.w	r1, r1, #10304	; 0x2840
 801a060:	6041      	str	r1, [r0, #4]
 801a062:	9800      	ldr	r0, [sp, #0]
 801a064:	f8df 1cb0 	ldr.w	r1, [pc, #3248]	; 801ad18 <??DataTable7>
 801a068:	61c1      	str	r1, [r0, #28]
 801a06a:	9800      	ldr	r0, [sp, #0]
 801a06c:	2103      	movs	r1, #3
 801a06e:	7681      	strb	r1, [r0, #26]
 801a070:	9801      	ldr	r0, [sp, #4]
 801a072:	f7ff ff16 	bl	8019ea2 <GATT_Send_Packet>
 801a076:	e003      	b.n	801a080 <??aci_gatt_exchange_config_0>

0801a078 <??aci_gatt_exchange_config_1>:
 801a078:	9801      	ldr	r0, [sp, #4]
 801a07a:	2100      	movs	r1, #0
 801a07c:	f00a fe31 	bl	8024ce2 <ACL_PM_Release>

0801a080 <??aci_gatt_exchange_config_0>:
 801a080:	4620      	mov	r0, r4
 801a082:	bd16      	pop	{r1, r2, r4, pc}

0801a084 <aci_gatt_confirm_indication>:
 801a084:	b5e0      	push	{r5, r6, r7, lr}
 801a086:	ab01      	add	r3, sp, #4
 801a088:	466a      	mov	r2, sp
 801a08a:	2100      	movs	r1, #0
 801a08c:	f7ff ff7a 	bl	8019f84 <GATT_New_Request>
 801a090:	0001      	movs	r1, r0
 801a092:	d117      	bne.n	801a0c4 <??aci_gatt_confirm_indication_0>
 801a094:	9800      	ldr	r0, [sp, #0]
 801a096:	6841      	ldr	r1, [r0, #4]
 801a098:	04c8      	lsls	r0, r1, #19
 801a09a:	d406      	bmi.n	801a0aa <??aci_gatt_confirm_indication_1>
 801a09c:	9801      	ldr	r0, [sp, #4]
 801a09e:	2100      	movs	r1, #0
 801a0a0:	f00a fe1f 	bl	8024ce2 <ACL_PM_Release>
 801a0a4:	200c      	movs	r0, #12
 801a0a6:	b003      	add	sp, #12
 801a0a8:	bd00      	pop	{pc}

0801a0aa <??aci_gatt_confirm_indication_1>:
 801a0aa:	9901      	ldr	r1, [sp, #4]
 801a0ac:	9800      	ldr	r0, [sp, #0]
 801a0ae:	f001 f891 	bl	801b1d4 <ATT_Build_Confirmation>
 801a0b2:	9801      	ldr	r0, [sp, #4]
 801a0b4:	f7ff fef5 	bl	8019ea2 <GATT_Send_Packet>
 801a0b8:	9800      	ldr	r0, [sp, #0]
 801a0ba:	6841      	ldr	r1, [r0, #4]
 801a0bc:	f421 5180 	bic.w	r1, r1, #4096	; 0x1000
 801a0c0:	6041      	str	r1, [r0, #4]
 801a0c2:	2000      	movs	r0, #0

0801a0c4 <??aci_gatt_confirm_indication_0>:
 801a0c4:	b003      	add	sp, #12
 801a0c6:	bd00      	pop	{pc}

0801a0c8 <aci_gatt_disc_all_primary_services>:
 801a0c8:	b518      	push	{r3, r4, lr}
 801a0ca:	b085      	sub	sp, #20
 801a0cc:	ab03      	add	r3, sp, #12
 801a0ce:	aa02      	add	r2, sp, #8
 801a0d0:	2100      	movs	r1, #0
 801a0d2:	f7ff ff57 	bl	8019f84 <GATT_New_Request>
 801a0d6:	0004      	movs	r4, r0
 801a0d8:	d121      	bne.n	801a11e <??aci_gatt_disc_all_primary_services_0>
 801a0da:	f44f 5020 	mov.w	r0, #10240	; 0x2800
 801a0de:	2101      	movs	r1, #1
 801a0e0:	f8ad 0010 	strh.w	r0, [sp, #16]
 801a0e4:	9101      	str	r1, [sp, #4]
 801a0e6:	aa04      	add	r2, sp, #16
 801a0e8:	9903      	ldr	r1, [sp, #12]
 801a0ea:	9802      	ldr	r0, [sp, #8]
 801a0ec:	9200      	str	r2, [sp, #0]
 801a0ee:	f64f 73ff 	movw	r3, #65535	; 0xffff
 801a0f2:	2201      	movs	r2, #1
 801a0f4:	f000 ff68 	bl	801afc8 <ATT_Build_Read_By_Grp_Typ_Req>
 801a0f8:	0004      	movs	r4, r0
 801a0fa:	d10c      	bne.n	801a116 <??aci_gatt_disc_all_primary_services_1>
 801a0fc:	9802      	ldr	r0, [sp, #8]
 801a0fe:	6841      	ldr	r1, [r0, #4]
 801a100:	f441 5100 	orr.w	r1, r1, #8192	; 0x2000
 801a104:	6041      	str	r1, [r0, #4]
 801a106:	9802      	ldr	r0, [sp, #8]
 801a108:	f60f 1141 	addw	r1, pc, #2369	; 0x941
 801a10c:	61c1      	str	r1, [r0, #28]
 801a10e:	9803      	ldr	r0, [sp, #12]
 801a110:	f7ff fec7 	bl	8019ea2 <GATT_Send_Packet>
 801a114:	e003      	b.n	801a11e <??aci_gatt_disc_all_primary_services_0>

0801a116 <??aci_gatt_disc_all_primary_services_1>:
 801a116:	9803      	ldr	r0, [sp, #12]
 801a118:	2100      	movs	r1, #0
 801a11a:	f00a fde2 	bl	8024ce2 <ACL_PM_Release>

0801a11e <??aci_gatt_disc_all_primary_services_0>:
 801a11e:	4620      	mov	r0, r4
 801a120:	b006      	add	sp, #24
 801a122:	bd10      	pop	{r4, pc}

0801a124 <aci_gatt_disc_primary_service_by_uuid>:
 801a124:	b5f0      	push	{r4, r5, r6, r7, lr}
 801a126:	b085      	sub	sp, #20
 801a128:	460c      	mov	r4, r1
 801a12a:	4615      	mov	r5, r2
 801a12c:	ab04      	add	r3, sp, #16
 801a12e:	aa03      	add	r2, sp, #12
 801a130:	2100      	movs	r1, #0
 801a132:	f7ff ff27 	bl	8019f84 <GATT_New_Request>
 801a136:	0006      	movs	r6, r0
 801a138:	d12a      	bne.n	801a190 <??aci_gatt_disc_primary_service_by_uuid_0>
 801a13a:	2c01      	cmp	r4, #1
 801a13c:	bf0c      	ite	eq
 801a13e:	2702      	moveq	r7, #2
 801a140:	2710      	movne	r7, #16
 801a142:	f44f 5020 	mov.w	r0, #10240	; 0x2800
 801a146:	9000      	str	r0, [sp, #0]
 801a148:	9904      	ldr	r1, [sp, #16]
 801a14a:	9803      	ldr	r0, [sp, #12]
 801a14c:	9702      	str	r7, [sp, #8]
 801a14e:	9501      	str	r5, [sp, #4]
 801a150:	f64f 73ff 	movw	r3, #65535	; 0xffff
 801a154:	2201      	movs	r2, #1
 801a156:	f000 fe4b 	bl	801adf0 <ATT_Build_Find_By_Typ_Val_Req>
 801a15a:	0006      	movs	r6, r0
 801a15c:	d114      	bne.n	801a188 <??aci_gatt_disc_primary_service_by_uuid_1>
 801a15e:	9803      	ldr	r0, [sp, #12]
 801a160:	463a      	mov	r2, r7
 801a162:	4629      	mov	r1, r5
 801a164:	3008      	adds	r0, #8
 801a166:	f016 febe 	bl	8030ee6 <__aeabi_memcpy>
 801a16a:	9803      	ldr	r0, [sp, #12]
 801a16c:	76c4      	strb	r4, [r0, #27]
 801a16e:	9903      	ldr	r1, [sp, #12]
 801a170:	6848      	ldr	r0, [r1, #4]
 801a172:	f440 5000 	orr.w	r0, r0, #8192	; 0x2000
 801a176:	6048      	str	r0, [r1, #4]
 801a178:	9903      	ldr	r1, [sp, #12]
 801a17a:	f60f 00d5 	addw	r0, pc, #2261	; 0x8d5
 801a17e:	61c8      	str	r0, [r1, #28]
 801a180:	9804      	ldr	r0, [sp, #16]
 801a182:	f7ff fe8e 	bl	8019ea2 <GATT_Send_Packet>
 801a186:	e003      	b.n	801a190 <??aci_gatt_disc_primary_service_by_uuid_0>

0801a188 <??aci_gatt_disc_primary_service_by_uuid_1>:
 801a188:	9804      	ldr	r0, [sp, #16]
 801a18a:	2100      	movs	r1, #0
 801a18c:	f00a fda9 	bl	8024ce2 <ACL_PM_Release>

0801a190 <??aci_gatt_disc_primary_service_by_uuid_0>:
 801a190:	4630      	mov	r0, r6
 801a192:	b005      	add	sp, #20
 801a194:	bdf0      	pop	{r4, r5, r6, r7, pc}

0801a196 <aci_gatt_find_included_services>:
 801a196:	b578      	push	{r3, r4, r5, r6, lr}
 801a198:	b085      	sub	sp, #20
 801a19a:	460c      	mov	r4, r1
 801a19c:	4615      	mov	r5, r2
 801a19e:	ab03      	add	r3, sp, #12
 801a1a0:	aa02      	add	r2, sp, #8
 801a1a2:	2100      	movs	r1, #0
 801a1a4:	f7ff feee 	bl	8019f84 <GATT_New_Request>
 801a1a8:	0006      	movs	r6, r0
 801a1aa:	d122      	bne.n	801a1f2 <??aci_gatt_find_included_services_0>
 801a1ac:	f642 0002 	movw	r0, #10242	; 0x2802
 801a1b0:	2101      	movs	r1, #1
 801a1b2:	f8ad 0010 	strh.w	r0, [sp, #16]
 801a1b6:	9101      	str	r1, [sp, #4]
 801a1b8:	aa04      	add	r2, sp, #16
 801a1ba:	9903      	ldr	r1, [sp, #12]
 801a1bc:	9802      	ldr	r0, [sp, #8]
 801a1be:	9200      	str	r2, [sp, #0]
 801a1c0:	462b      	mov	r3, r5
 801a1c2:	4622      	mov	r2, r4
 801a1c4:	f000 fe55 	bl	801ae72 <ATT_Build_Read_By_Typ_Req>
 801a1c8:	0006      	movs	r6, r0
 801a1ca:	d10e      	bne.n	801a1ea <??aci_gatt_find_included_services_1>
 801a1cc:	9802      	ldr	r0, [sp, #8]
 801a1ce:	8305      	strh	r5, [r0, #24]
 801a1d0:	9902      	ldr	r1, [sp, #8]
 801a1d2:	6848      	ldr	r0, [r1, #4]
 801a1d4:	f440 5000 	orr.w	r0, r0, #8192	; 0x2000
 801a1d8:	6048      	str	r0, [r1, #4]
 801a1da:	9902      	ldr	r1, [sp, #8]
 801a1dc:	f60f 0075 	addw	r0, pc, #2165	; 0x875
 801a1e0:	61c8      	str	r0, [r1, #28]
 801a1e2:	9803      	ldr	r0, [sp, #12]
 801a1e4:	f7ff fe5d 	bl	8019ea2 <GATT_Send_Packet>
 801a1e8:	e003      	b.n	801a1f2 <??aci_gatt_find_included_services_0>

0801a1ea <??aci_gatt_find_included_services_1>:
 801a1ea:	9803      	ldr	r0, [sp, #12]
 801a1ec:	2100      	movs	r1, #0
 801a1ee:	f00a fd78 	bl	8024ce2 <ACL_PM_Release>

0801a1f2 <??aci_gatt_find_included_services_0>:
 801a1f2:	e02d      	b.n	801a250 <??aci_gatt_disc_all_char_of_service_0>

0801a1f4 <aci_gatt_disc_all_char_of_service>:
 801a1f4:	b578      	push	{r3, r4, r5, r6, lr}
 801a1f6:	b085      	sub	sp, #20
 801a1f8:	460c      	mov	r4, r1
 801a1fa:	4615      	mov	r5, r2
 801a1fc:	ab03      	add	r3, sp, #12
 801a1fe:	aa02      	add	r2, sp, #8
 801a200:	2100      	movs	r1, #0
 801a202:	f7ff febf 	bl	8019f84 <GATT_New_Request>
 801a206:	0006      	movs	r6, r0
 801a208:	d122      	bne.n	801a250 <??aci_gatt_disc_all_char_of_service_0>
 801a20a:	f642 0003 	movw	r0, #10243	; 0x2803
 801a20e:	2101      	movs	r1, #1
 801a210:	f8ad 0010 	strh.w	r0, [sp, #16]
 801a214:	9101      	str	r1, [sp, #4]
 801a216:	aa04      	add	r2, sp, #16
 801a218:	9903      	ldr	r1, [sp, #12]
 801a21a:	9802      	ldr	r0, [sp, #8]
 801a21c:	9200      	str	r2, [sp, #0]
 801a21e:	462b      	mov	r3, r5
 801a220:	4622      	mov	r2, r4
 801a222:	f000 fe26 	bl	801ae72 <ATT_Build_Read_By_Typ_Req>
 801a226:	0006      	movs	r6, r0
 801a228:	d10e      	bne.n	801a248 <??aci_gatt_disc_all_char_of_service_1>
 801a22a:	9802      	ldr	r0, [sp, #8]
 801a22c:	8305      	strh	r5, [r0, #24]
 801a22e:	9902      	ldr	r1, [sp, #8]
 801a230:	6848      	ldr	r0, [r1, #4]
 801a232:	f440 5000 	orr.w	r0, r0, #8192	; 0x2000
 801a236:	6048      	str	r0, [r1, #4]
 801a238:	9902      	ldr	r1, [sp, #8]
 801a23a:	f60f 001d 	addw	r0, pc, #2077	; 0x81d
 801a23e:	61c8      	str	r0, [r1, #28]
 801a240:	9803      	ldr	r0, [sp, #12]
 801a242:	f7ff fe2e 	bl	8019ea2 <GATT_Send_Packet>
 801a246:	e003      	b.n	801a250 <??aci_gatt_disc_all_char_of_service_0>

0801a248 <??aci_gatt_disc_all_char_of_service_1>:
 801a248:	9803      	ldr	r0, [sp, #12]
 801a24a:	2100      	movs	r1, #0
 801a24c:	f00a fd49 	bl	8024ce2 <ACL_PM_Release>

0801a250 <??aci_gatt_disc_all_char_of_service_0>:
 801a250:	4630      	mov	r0, r6
 801a252:	b006      	add	sp, #24
 801a254:	bd70      	pop	{r4, r5, r6, pc}

0801a256 <aci_gatt_disc_char_by_uuid>:
 801a256:	b5f0      	push	{r4, r5, r6, r7, lr}
 801a258:	b085      	sub	sp, #20
 801a25a:	460d      	mov	r5, r1
 801a25c:	4616      	mov	r6, r2
 801a25e:	461c      	mov	r4, r3
 801a260:	ab03      	add	r3, sp, #12
 801a262:	aa02      	add	r2, sp, #8
 801a264:	2100      	movs	r1, #0
 801a266:	f7ff fe8d 	bl	8019f84 <GATT_New_Request>
 801a26a:	0007      	movs	r7, r0
 801a26c:	d13c      	bne.n	801a2e8 <??aci_gatt_disc_char_by_uuid_0>
 801a26e:	f642 0003 	movw	r0, #10243	; 0x2803
 801a272:	2101      	movs	r1, #1
 801a274:	f8ad 0010 	strh.w	r0, [sp, #16]
 801a278:	9101      	str	r1, [sp, #4]
 801a27a:	aa04      	add	r2, sp, #16
 801a27c:	9903      	ldr	r1, [sp, #12]
 801a27e:	9802      	ldr	r0, [sp, #8]
 801a280:	9200      	str	r2, [sp, #0]
 801a282:	4633      	mov	r3, r6
 801a284:	462a      	mov	r2, r5
 801a286:	f000 fdf4 	bl	801ae72 <ATT_Build_Read_By_Typ_Req>
 801a28a:	0007      	movs	r7, r0
 801a28c:	d128      	bne.n	801a2e0 <??aci_gatt_disc_char_by_uuid_1>
 801a28e:	9802      	ldr	r0, [sp, #8]
 801a290:	2c01      	cmp	r4, #1
 801a292:	8306      	strh	r6, [r0, #24]
 801a294:	9d0a      	ldr	r5, [sp, #40]	; 0x28
 801a296:	d10e      	bne.n	801a2b6 <??aci_gatt_disc_char_by_uuid_2>
 801a298:	9802      	ldr	r0, [sp, #8]
 801a29a:	2210      	movs	r2, #16
 801a29c:	f8df 1b04 	ldr.w	r1, [pc, #2820]	; 801ada4 <??DataTable8>
 801a2a0:	3008      	adds	r0, #8
 801a2a2:	f016 fe20 	bl	8030ee6 <__aeabi_memcpy>
 801a2a6:	9802      	ldr	r0, [sp, #8]
 801a2a8:	f100 0114 	add.w	r1, r0, #20
 801a2ac:	7828      	ldrb	r0, [r5, #0]
 801a2ae:	7008      	strb	r0, [r1, #0]
 801a2b0:	7868      	ldrb	r0, [r5, #1]
 801a2b2:	7048      	strb	r0, [r1, #1]
 801a2b4:	e005      	b.n	801a2c2 <??aci_gatt_disc_char_by_uuid_3>

0801a2b6 <??aci_gatt_disc_char_by_uuid_2>:
 801a2b6:	9802      	ldr	r0, [sp, #8]
 801a2b8:	2210      	movs	r2, #16
 801a2ba:	4629      	mov	r1, r5
 801a2bc:	3008      	adds	r0, #8
 801a2be:	f016 fe12 	bl	8030ee6 <__aeabi_memcpy>

0801a2c2 <??aci_gatt_disc_char_by_uuid_3>:
 801a2c2:	9802      	ldr	r0, [sp, #8]
 801a2c4:	76c4      	strb	r4, [r0, #27]
 801a2c6:	9902      	ldr	r1, [sp, #8]
 801a2c8:	6848      	ldr	r0, [r1, #4]
 801a2ca:	f440 5000 	orr.w	r0, r0, #8192	; 0x2000
 801a2ce:	6048      	str	r0, [r1, #4]
 801a2d0:	9902      	ldr	r1, [sp, #8]
 801a2d2:	f20f 7089 	addw	r0, pc, #1929	; 0x789
 801a2d6:	61c8      	str	r0, [r1, #28]
 801a2d8:	9803      	ldr	r0, [sp, #12]
 801a2da:	f7ff fde2 	bl	8019ea2 <GATT_Send_Packet>
 801a2de:	e003      	b.n	801a2e8 <??aci_gatt_disc_char_by_uuid_0>

0801a2e0 <??aci_gatt_disc_char_by_uuid_1>:
 801a2e0:	9803      	ldr	r0, [sp, #12]
 801a2e2:	2100      	movs	r1, #0
 801a2e4:	f00a fcfd 	bl	8024ce2 <ACL_PM_Release>

0801a2e8 <??aci_gatt_disc_char_by_uuid_0>:
 801a2e8:	4638      	mov	r0, r7
 801a2ea:	b005      	add	sp, #20
 801a2ec:	bdf0      	pop	{r4, r5, r6, r7, pc}

0801a2ee <aci_gatt_disc_all_char_desc>:
 801a2ee:	b57c      	push	{r2, r3, r4, r5, r6, lr}
 801a2f0:	460d      	mov	r5, r1
 801a2f2:	4616      	mov	r6, r2
 801a2f4:	ab01      	add	r3, sp, #4
 801a2f6:	466a      	mov	r2, sp
 801a2f8:	2100      	movs	r1, #0
 801a2fa:	f7ff fe43 	bl	8019f84 <GATT_New_Request>
 801a2fe:	0004      	movs	r4, r0
 801a300:	d11b      	bne.n	801a33a <??aci_gatt_disc_all_char_desc_0>
 801a302:	9901      	ldr	r1, [sp, #4]
 801a304:	9800      	ldr	r0, [sp, #0]
 801a306:	1c6d      	adds	r5, r5, #1
 801a308:	4633      	mov	r3, r6
 801a30a:	b2aa      	uxth	r2, r5
 801a30c:	f000 fd50 	bl	801adb0 <ATT_Build_Find_Info_Req>
 801a310:	0004      	movs	r4, r0
 801a312:	d10e      	bne.n	801a332 <??aci_gatt_disc_all_char_desc_1>
 801a314:	9800      	ldr	r0, [sp, #0]
 801a316:	8306      	strh	r6, [r0, #24]
 801a318:	9900      	ldr	r1, [sp, #0]
 801a31a:	6848      	ldr	r0, [r1, #4]
 801a31c:	f440 5000 	orr.w	r0, r0, #8192	; 0x2000
 801a320:	6048      	str	r0, [r1, #4]
 801a322:	9900      	ldr	r1, [sp, #0]
 801a324:	f20f 7039 	addw	r0, pc, #1849	; 0x739
 801a328:	61c8      	str	r0, [r1, #28]
 801a32a:	9801      	ldr	r0, [sp, #4]
 801a32c:	f7ff fdb9 	bl	8019ea2 <GATT_Send_Packet>
 801a330:	e003      	b.n	801a33a <??aci_gatt_disc_all_char_desc_0>

0801a332 <??aci_gatt_disc_all_char_desc_1>:
 801a332:	9801      	ldr	r0, [sp, #4]
 801a334:	2100      	movs	r1, #0
 801a336:	f00a fcd4 	bl	8024ce2 <ACL_PM_Release>

0801a33a <??aci_gatt_disc_all_char_desc_0>:
 801a33a:	4620      	mov	r0, r4
 801a33c:	bd76      	pop	{r1, r2, r4, r5, r6, pc}

0801a33e <aci_gatt_read_using_char_uuid>:
 801a33e:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 801a340:	b084      	sub	sp, #16
 801a342:	460d      	mov	r5, r1
 801a344:	4616      	mov	r6, r2
 801a346:	461f      	mov	r7, r3
 801a348:	ab03      	add	r3, sp, #12
 801a34a:	aa02      	add	r2, sp, #8
 801a34c:	2100      	movs	r1, #0
 801a34e:	f7ff fe19 	bl	8019f84 <GATT_New_Request>
 801a352:	0004      	movs	r4, r0
 801a354:	d11b      	bne.n	801a38e <??aci_gatt_read_using_char_uuid_0>
 801a356:	980a      	ldr	r0, [sp, #40]	; 0x28
 801a358:	9903      	ldr	r1, [sp, #12]
 801a35a:	9701      	str	r7, [sp, #4]
 801a35c:	9000      	str	r0, [sp, #0]
 801a35e:	9802      	ldr	r0, [sp, #8]
 801a360:	4633      	mov	r3, r6
 801a362:	462a      	mov	r2, r5
 801a364:	f000 fd85 	bl	801ae72 <ATT_Build_Read_By_Typ_Req>
 801a368:	0004      	movs	r4, r0
 801a36a:	d10c      	bne.n	801a386 <??aci_gatt_read_using_char_uuid_1>
 801a36c:	9802      	ldr	r0, [sp, #8]
 801a36e:	6841      	ldr	r1, [r0, #4]
 801a370:	f441 5100 	orr.w	r1, r1, #8192	; 0x2000
 801a374:	6041      	str	r1, [r0, #4]
 801a376:	9802      	ldr	r0, [sp, #8]
 801a378:	f20f 71e1 	addw	r1, pc, #2017	; 0x7e1
 801a37c:	61c1      	str	r1, [r0, #28]
 801a37e:	9803      	ldr	r0, [sp, #12]
 801a380:	f7ff fd8f 	bl	8019ea2 <GATT_Send_Packet>
 801a384:	e003      	b.n	801a38e <??aci_gatt_read_using_char_uuid_0>

0801a386 <??aci_gatt_read_using_char_uuid_1>:
 801a386:	9803      	ldr	r0, [sp, #12]
 801a388:	2100      	movs	r1, #0
 801a38a:	f00a fcaa 	bl	8024ce2 <ACL_PM_Release>

0801a38e <??aci_gatt_read_using_char_uuid_0>:
 801a38e:	4620      	mov	r0, r4
 801a390:	b005      	add	sp, #20
 801a392:	bdf0      	pop	{r4, r5, r6, r7, pc}

0801a394 <aci_gatt_read_char_value>:
 801a394:	b53e      	push	{r1, r2, r3, r4, r5, lr}
 801a396:	460d      	mov	r5, r1
 801a398:	ab01      	add	r3, sp, #4
 801a39a:	466a      	mov	r2, sp
 801a39c:	2100      	movs	r1, #0
 801a39e:	f7ff fdf1 	bl	8019f84 <GATT_New_Request>
 801a3a2:	0004      	movs	r4, r0
 801a3a4:	d117      	bne.n	801a3d6 <??aci_gatt_read_char_value_0>
 801a3a6:	9901      	ldr	r1, [sp, #4]
 801a3a8:	9800      	ldr	r0, [sp, #0]
 801a3aa:	462a      	mov	r2, r5
 801a3ac:	f000 fd9a 	bl	801aee4 <ATT_Build_Read_Req>
 801a3b0:	0004      	movs	r4, r0
 801a3b2:	d10c      	bne.n	801a3ce <??aci_gatt_read_char_value_1>
 801a3b4:	9800      	ldr	r0, [sp, #0]
 801a3b6:	6841      	ldr	r1, [r0, #4]
 801a3b8:	f441 5100 	orr.w	r1, r1, #8192	; 0x2000
 801a3bc:	6041      	str	r1, [r0, #4]
 801a3be:	9800      	ldr	r0, [sp, #0]
 801a3c0:	f20f 7191 	addw	r1, pc, #1937	; 0x791
 801a3c4:	61c1      	str	r1, [r0, #28]
 801a3c6:	9801      	ldr	r0, [sp, #4]
 801a3c8:	f7ff fd6b 	bl	8019ea2 <GATT_Send_Packet>
 801a3cc:	e003      	b.n	801a3d6 <??aci_gatt_read_char_value_0>

0801a3ce <??aci_gatt_read_char_value_1>:
 801a3ce:	9801      	ldr	r0, [sp, #4]
 801a3d0:	2100      	movs	r1, #0
 801a3d2:	f00a fc86 	bl	8024ce2 <ACL_PM_Release>

0801a3d6 <??aci_gatt_read_char_value_0>:
 801a3d6:	4620      	mov	r0, r4
 801a3d8:	b003      	add	sp, #12
 801a3da:	bd30      	pop	{r4, r5, pc}

0801a3dc <aci_gatt_read_long_char_value>:
 801a3dc:	b57c      	push	{r2, r3, r4, r5, r6, lr}
 801a3de:	460d      	mov	r5, r1
 801a3e0:	4616      	mov	r6, r2
 801a3e2:	ab01      	add	r3, sp, #4
 801a3e4:	466a      	mov	r2, sp
 801a3e6:	2100      	movs	r1, #0
 801a3e8:	f7ff fdcc 	bl	8019f84 <GATT_New_Request>
 801a3ec:	0004      	movs	r4, r0
 801a3ee:	d11c      	bne.n	801a42a <??aci_gatt_read_long_char_value_0>
 801a3f0:	9901      	ldr	r1, [sp, #4]
 801a3f2:	9800      	ldr	r0, [sp, #0]
 801a3f4:	4633      	mov	r3, r6
 801a3f6:	462a      	mov	r2, r5
 801a3f8:	f000 fd90 	bl	801af1c <ATT_Build_Read_Blob_Req>
 801a3fc:	0004      	movs	r4, r0
 801a3fe:	d110      	bne.n	801a422 <??aci_gatt_read_long_char_value_1>
 801a400:	9800      	ldr	r0, [sp, #0]
 801a402:	8105      	strh	r5, [r0, #8]
 801a404:	9900      	ldr	r1, [sp, #0]
 801a406:	814e      	strh	r6, [r1, #10]
 801a408:	9800      	ldr	r0, [sp, #0]
 801a40a:	6841      	ldr	r1, [r0, #4]
 801a40c:	f441 5100 	orr.w	r1, r1, #8192	; 0x2000
 801a410:	6041      	str	r1, [r0, #4]
 801a412:	9800      	ldr	r0, [sp, #0]
 801a414:	f20f 7141 	addw	r1, pc, #1857	; 0x741
 801a418:	61c1      	str	r1, [r0, #28]
 801a41a:	9801      	ldr	r0, [sp, #4]
 801a41c:	f7ff fd41 	bl	8019ea2 <GATT_Send_Packet>
 801a420:	e003      	b.n	801a42a <??aci_gatt_read_long_char_value_0>

0801a422 <??aci_gatt_read_long_char_value_1>:
 801a422:	9801      	ldr	r0, [sp, #4]
 801a424:	2100      	movs	r1, #0
 801a426:	f00a fc5c 	bl	8024ce2 <ACL_PM_Release>

0801a42a <??aci_gatt_read_long_char_value_0>:
 801a42a:	4620      	mov	r0, r4
 801a42c:	bd76      	pop	{r1, r2, r4, r5, r6, pc}

0801a42e <aci_gatt_write_char_value>:
 801a42e:	b5f0      	push	{r4, r5, r6, r7, lr}
 801a430:	b083      	sub	sp, #12
 801a432:	460d      	mov	r5, r1
 801a434:	4616      	mov	r6, r2
 801a436:	461f      	mov	r7, r3
 801a438:	ab02      	add	r3, sp, #8
 801a43a:	aa01      	add	r2, sp, #4
 801a43c:	2100      	movs	r1, #0
 801a43e:	f7ff fda1 	bl	8019f84 <GATT_New_Request>
 801a442:	0004      	movs	r4, r0
 801a444:	d119      	bne.n	801a47a <??aci_gatt_write_char_value_0>
 801a446:	9902      	ldr	r1, [sp, #8]
 801a448:	9801      	ldr	r0, [sp, #4]
 801a44a:	9600      	str	r6, [sp, #0]
 801a44c:	463b      	mov	r3, r7
 801a44e:	462a      	mov	r2, r5
 801a450:	f000 fdf9 	bl	801b046 <ATT_Build_Write_Req>
 801a454:	0004      	movs	r4, r0
 801a456:	d10c      	bne.n	801a472 <??aci_gatt_write_char_value_1>
 801a458:	9801      	ldr	r0, [sp, #4]
 801a45a:	6841      	ldr	r1, [r0, #4]
 801a45c:	f441 5100 	orr.w	r1, r1, #8192	; 0x2000
 801a460:	6041      	str	r1, [r0, #4]
 801a462:	9801      	ldr	r0, [sp, #4]
 801a464:	f20f 61fd 	addw	r1, pc, #1789	; 0x6fd
 801a468:	61c1      	str	r1, [r0, #28]
 801a46a:	9802      	ldr	r0, [sp, #8]
 801a46c:	f7ff fd19 	bl	8019ea2 <GATT_Send_Packet>
 801a470:	e003      	b.n	801a47a <??aci_gatt_write_char_value_0>

0801a472 <??aci_gatt_write_char_value_1>:
 801a472:	9802      	ldr	r0, [sp, #8]
 801a474:	2100      	movs	r1, #0
 801a476:	f00a fc34 	bl	8024ce2 <ACL_PM_Release>

0801a47a <??aci_gatt_write_char_value_0>:
 801a47a:	4620      	mov	r0, r4
 801a47c:	b003      	add	sp, #12
 801a47e:	bdf0      	pop	{r4, r5, r6, r7, pc}

0801a480 <GATT_Long_Write_Proc>:
 801a480:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 801a484:	468a      	mov	sl, r1
 801a486:	f8df 7920 	ldr.w	r7, [pc, #2336]	; 801ada8 <??DataTable8_1>
 801a48a:	6839      	ldr	r1, [r7, #0]
 801a48c:	b084      	sub	sp, #16
 801a48e:	4690      	mov	r8, r2
 801a490:	461c      	mov	r4, r3
 801a492:	b109      	cbz	r1, 801a498 <??GATT_Long_Write_Proc_0>
 801a494:	200c      	movs	r0, #12
 801a496:	e03e      	b.n	801a516 <?Subroutine2>

0801a498 <??GATT_Long_Write_Proc_0>:
 801a498:	ab03      	add	r3, sp, #12
 801a49a:	aa02      	add	r2, sp, #8
 801a49c:	f7ff fd72 	bl	8019f84 <GATT_New_Request>
 801a4a0:	4681      	mov	r9, r0
 801a4a2:	bbb8      	cbnz	r0, 801a514 <??GATT_Long_Write_Proc_1>
 801a4a4:	9802      	ldr	r0, [sp, #8]
 801a4a6:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 801a4a8:	8841      	ldrh	r1, [r0, #2]
 801a4aa:	1f48      	subs	r0, r1, #5
 801a4ac:	b280      	uxth	r0, r0
 801a4ae:	42a0      	cmp	r0, r4
 801a4b0:	bf88      	it	hi
 801a4b2:	4620      	movhi	r0, r4
 801a4b4:	9001      	str	r0, [sp, #4]
 801a4b6:	9500      	str	r5, [sp, #0]
 801a4b8:	9903      	ldr	r1, [sp, #12]
 801a4ba:	9802      	ldr	r0, [sp, #8]
 801a4bc:	4643      	mov	r3, r8
 801a4be:	4652      	mov	r2, sl
 801a4c0:	f000 fe37 	bl	801b132 <ATT_Build_Prp_Write_Req>
 801a4c4:	4681      	mov	r9, r0
 801a4c6:	bb08      	cbnz	r0, 801a50c <??GATT_Long_Write_Proc_2>
 801a4c8:	9802      	ldr	r0, [sp, #8]
 801a4ca:	9e0d      	ldr	r6, [sp, #52]	; 0x34
 801a4cc:	4622      	mov	r2, r4
 801a4ce:	6038      	str	r0, [r7, #0]
 801a4d0:	6878      	ldr	r0, [r7, #4]
 801a4d2:	4629      	mov	r1, r5
 801a4d4:	f016 fd07 	bl	8030ee6 <__aeabi_memcpy>
 801a4d8:	9802      	ldr	r0, [sp, #8]
 801a4da:	f8a0 a008 	strh.w	sl, [r0, #8]
 801a4de:	9902      	ldr	r1, [sp, #8]
 801a4e0:	f8a1 800a 	strh.w	r8, [r1, #10]
 801a4e4:	9802      	ldr	r0, [sp, #8]
 801a4e6:	2100      	movs	r1, #0
 801a4e8:	8184      	strh	r4, [r0, #12]
 801a4ea:	9802      	ldr	r0, [sp, #8]
 801a4ec:	81c1      	strh	r1, [r0, #14]
 801a4ee:	9902      	ldr	r1, [sp, #8]
 801a4f0:	820e      	strh	r6, [r1, #16]
 801a4f2:	9802      	ldr	r0, [sp, #8]
 801a4f4:	6841      	ldr	r1, [r0, #4]
 801a4f6:	f441 5100 	orr.w	r1, r1, #8192	; 0x2000
 801a4fa:	6041      	str	r1, [r0, #4]
 801a4fc:	9802      	ldr	r0, [sp, #8]
 801a4fe:	f20f 6169 	addw	r1, pc, #1641	; 0x669
 801a502:	61c1      	str	r1, [r0, #28]
 801a504:	9803      	ldr	r0, [sp, #12]
 801a506:	f7ff fccc 	bl	8019ea2 <GATT_Send_Packet>
 801a50a:	e003      	b.n	801a514 <??GATT_Long_Write_Proc_1>

0801a50c <??GATT_Long_Write_Proc_2>:
 801a50c:	9803      	ldr	r0, [sp, #12]
 801a50e:	2100      	movs	r1, #0
 801a510:	f00a fbe7 	bl	8024ce2 <ACL_PM_Release>

0801a514 <??GATT_Long_Write_Proc_1>:
 801a514:	4648      	mov	r0, r9

0801a516 <?Subroutine2>:
 801a516:	b004      	add	sp, #16
 801a518:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}

0801a51c <aci_gatt_write_long_char_value>:
 801a51c:	b53e      	push	{r1, r2, r3, r4, r5, lr}
 801a51e:	9d06      	ldr	r5, [sp, #24]
 801a520:	2400      	movs	r4, #0
 801a522:	e09b      	b.n	801a65c <?Subroutine1>

0801a524 <aci_gatt_read_multiple_char_value>:
 801a524:	b578      	push	{r3, r4, r5, r6, lr}
 801a526:	b083      	sub	sp, #12
 801a528:	460d      	mov	r5, r1
 801a52a:	4616      	mov	r6, r2
 801a52c:	ab02      	add	r3, sp, #8
 801a52e:	aa01      	add	r2, sp, #4
 801a530:	2100      	movs	r1, #0
 801a532:	f7ff fd27 	bl	8019f84 <GATT_New_Request>
 801a536:	0004      	movs	r4, r0
 801a538:	d11a      	bne.n	801a570 <??aci_gatt_read_multiple_char_value_0>
 801a53a:	2000      	movs	r0, #0
 801a53c:	9000      	str	r0, [sp, #0]
 801a53e:	9902      	ldr	r1, [sp, #8]
 801a540:	9801      	ldr	r0, [sp, #4]
 801a542:	462b      	mov	r3, r5
 801a544:	4632      	mov	r2, r6
 801a546:	f000 fd0f 	bl	801af68 <ATT_Build_Read_Mult_Req>
 801a54a:	0004      	movs	r4, r0
 801a54c:	d10c      	bne.n	801a568 <??aci_gatt_read_multiple_char_value_1>
 801a54e:	9801      	ldr	r0, [sp, #4]
 801a550:	6841      	ldr	r1, [r0, #4]
 801a552:	f441 5100 	orr.w	r1, r1, #8192	; 0x2000
 801a556:	6041      	str	r1, [r0, #4]
 801a558:	9801      	ldr	r0, [sp, #4]
 801a55a:	f20f 6105 	addw	r1, pc, #1541	; 0x605
 801a55e:	61c1      	str	r1, [r0, #28]
 801a560:	9802      	ldr	r0, [sp, #8]
 801a562:	f7ff fc9e 	bl	8019ea2 <GATT_Send_Packet>
 801a566:	e003      	b.n	801a570 <??aci_gatt_read_multiple_char_value_0>

0801a568 <??aci_gatt_read_multiple_char_value_1>:
 801a568:	9802      	ldr	r0, [sp, #8]
 801a56a:	2100      	movs	r1, #0
 801a56c:	f00a fbb9 	bl	8024ce2 <ACL_PM_Release>

0801a570 <??aci_gatt_read_multiple_char_value_0>:
 801a570:	4620      	mov	r0, r4
 801a572:	b004      	add	sp, #16
 801a574:	bd70      	pop	{r4, r5, r6, pc}

0801a576 <aci_gatt_write_without_resp>:
 801a576:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 801a57a:	460e      	mov	r6, r1
 801a57c:	4617      	mov	r7, r2
 801a57e:	4698      	mov	r8, r3
 801a580:	f7ff fcb4 	bl	8019eec <GATT_Find_Client>
 801a584:	0005      	movs	r5, r0
 801a586:	bf08      	it	eq
 801a588:	200c      	moveq	r0, #12
 801a58a:	d025      	beq.n	801a5d8 <??aci_gatt_write_without_resp_0>
 801a58c:	f8df 981c 	ldr.w	r9, [pc, #2076]	; 801adac <??DataTable8_2>
 801a590:	f899 01ac 	ldrb.w	r0, [r9, #428]	; 0x1ac
 801a594:	0601      	lsls	r1, r0, #24
 801a596:	d40c      	bmi.n	801a5b2 <??aci_gatt_write_without_resp_1>
 801a598:	8829      	ldrh	r1, [r5, #0]
 801a59a:	1dfa      	adds	r2, r7, #7
 801a59c:	2000      	movs	r0, #0
 801a59e:	f00a fb88 	bl	8024cb2 <ACL_PM_New>
 801a5a2:	0004      	movs	r4, r0
 801a5a4:	d106      	bne.n	801a5b4 <??aci_gatt_write_without_resp_2>
 801a5a6:	f899 01ac 	ldrb.w	r0, [r9, #428]	; 0x1ac
 801a5aa:	f040 0080 	orr.w	r0, r0, #128	; 0x80
 801a5ae:	f889 01ac 	strb.w	r0, [r9, #428]	; 0x1ac

0801a5b2 <??aci_gatt_write_without_resp_1>:
 801a5b2:	e04d      	b.n	801a650 <?Subroutine3>

0801a5b4 <??aci_gatt_write_without_resp_2>:
 801a5b4:	9700      	str	r7, [sp, #0]
 801a5b6:	4643      	mov	r3, r8
 801a5b8:	4632      	mov	r2, r6
 801a5ba:	4621      	mov	r1, r4
 801a5bc:	4628      	mov	r0, r5
 801a5be:	f000 fd74 	bl	801b0aa <ATT_Build_Write_Cmd>
 801a5c2:	0005      	movs	r5, r0
 801a5c4:	d103      	bne.n	801a5ce <??aci_gatt_write_without_resp_3>
 801a5c6:	4620      	mov	r0, r4
 801a5c8:	f7ff fc6b 	bl	8019ea2 <GATT_Send_Packet>
 801a5cc:	e003      	b.n	801a5d6 <??aci_gatt_write_without_resp_4>

0801a5ce <??aci_gatt_write_without_resp_3>:
 801a5ce:	2100      	movs	r1, #0
 801a5d0:	4620      	mov	r0, r4
 801a5d2:	f00a fb86 	bl	8024ce2 <ACL_PM_Release>

0801a5d6 <??aci_gatt_write_without_resp_4>:
 801a5d6:	4628      	mov	r0, r5

0801a5d8 <??aci_gatt_write_without_resp_0>:
 801a5d8:	e8bd 83f2 	ldmia.w	sp!, {r1, r4, r5, r6, r7, r8, r9, pc}

0801a5dc <aci_gatt_signed_write_without_resp>:
 801a5dc:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 801a5e0:	460e      	mov	r6, r1
 801a5e2:	4617      	mov	r7, r2
 801a5e4:	4698      	mov	r8, r3
 801a5e6:	f7ff fc6b 	bl	8019ec0 <GATT_Find_Root_Client>
 801a5ea:	0004      	movs	r4, r0
 801a5ec:	d004      	beq.n	801a5f8 <??aci_gatt_signed_write_without_resp_0>
 801a5ee:	8820      	ldrh	r0, [r4, #0]
 801a5f0:	f007 fcd9 	bl	8021fa6 <SMP_Get_Link_Status>
 801a5f4:	07c0      	lsls	r0, r0, #31
 801a5f6:	d502      	bpl.n	801a5fe <??aci_gatt_signed_write_without_resp_1>

0801a5f8 <??aci_gatt_signed_write_without_resp_0>:
 801a5f8:	200c      	movs	r0, #12
 801a5fa:	e8bd 83f2 	ldmia.w	sp!, {r1, r4, r5, r6, r7, r8, r9, pc}

0801a5fe <??aci_gatt_signed_write_without_resp_1>:
 801a5fe:	f8df 97ac 	ldr.w	r9, [pc, #1964]	; 801adac <??DataTable8_2>
 801a602:	f899 01ac 	ldrb.w	r0, [r9, #428]	; 0x1ac
 801a606:	0601      	lsls	r1, r0, #24
 801a608:	d40d      	bmi.n	801a626 <??aci_gatt_signed_write_without_resp_2>
 801a60a:	8821      	ldrh	r1, [r4, #0]
 801a60c:	f107 0213 	add.w	r2, r7, #19
 801a610:	2000      	movs	r0, #0
 801a612:	f00a fb4e 	bl	8024cb2 <ACL_PM_New>
 801a616:	0005      	movs	r5, r0
 801a618:	d106      	bne.n	801a628 <??aci_gatt_signed_write_without_resp_3>
 801a61a:	f899 01ac 	ldrb.w	r0, [r9, #428]	; 0x1ac
 801a61e:	f040 0080 	orr.w	r0, r0, #128	; 0x80
 801a622:	f889 01ac 	strb.w	r0, [r9, #428]	; 0x1ac

0801a626 <??aci_gatt_signed_write_without_resp_2>:
 801a626:	e013      	b.n	801a650 <?Subroutine3>

0801a628 <??aci_gatt_signed_write_without_resp_3>:
 801a628:	9700      	str	r7, [sp, #0]
 801a62a:	4643      	mov	r3, r8
 801a62c:	4632      	mov	r2, r6
 801a62e:	4629      	mov	r1, r5
 801a630:	4620      	mov	r0, r4
 801a632:	f000 fd59 	bl	801b0e8 <ATT_Build_Signd_Write_Cmd>
 801a636:	0004      	movs	r4, r0
 801a638:	d103      	bne.n	801a642 <??aci_gatt_signed_write_without_resp_4>
 801a63a:	4628      	mov	r0, r5
 801a63c:	f7ff fc31 	bl	8019ea2 <GATT_Send_Packet>
 801a640:	e003      	b.n	801a64a <??aci_gatt_signed_write_without_resp_5>

0801a642 <??aci_gatt_signed_write_without_resp_4>:
 801a642:	2100      	movs	r1, #0
 801a644:	4628      	mov	r0, r5
 801a646:	f00a fb4c 	bl	8024ce2 <ACL_PM_Release>

0801a64a <??aci_gatt_signed_write_without_resp_5>:
 801a64a:	4620      	mov	r0, r4
 801a64c:	e8bd 83f2 	ldmia.w	sp!, {r1, r4, r5, r6, r7, r8, r9, pc}

0801a650 <?Subroutine3>:
 801a650:	2064      	movs	r0, #100	; 0x64
 801a652:	e8bd 83f2 	ldmia.w	sp!, {r1, r4, r5, r6, r7, r8, r9, pc}

0801a656 <aci_gatt_write_char_reliable>:
 801a656:	b53e      	push	{r1, r2, r3, r4, r5, lr}
 801a658:	9d06      	ldr	r5, [sp, #24]
 801a65a:	2401      	movs	r4, #1

0801a65c <?Subroutine1>:
 801a65c:	9401      	str	r4, [sp, #4]
 801a65e:	9500      	str	r5, [sp, #0]
 801a660:	f7ff ff0e 	bl	801a480 <GATT_Long_Write_Proc>
 801a664:	b003      	add	sp, #12
 801a666:	bd30      	pop	{r4, r5, pc}

0801a668 <GATT_Super_Handler>:
 801a668:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801a66c:	b088      	sub	sp, #32
 801a66e:	4604      	mov	r4, r0
 801a670:	f8d4 9020 	ldr.w	r9, [r4, #32]
 801a674:	f04f 0800 	mov.w	r8, #0
 801a678:	f1b9 0f00 	cmp.w	r9, #0
 801a67c:	bf08      	it	eq
 801a67e:	2091      	moveq	r0, #145	; 0x91
 801a680:	d01e      	beq.n	801a6c0 <??GATT_Super_Handler_0>
 801a682:	f8b9 0006 	ldrh.w	r0, [r9, #6]
 801a686:	0006      	movs	r6, r0
 801a688:	d014      	beq.n	801a6b4 <??GATT_Super_Handler_1>
 801a68a:	f8d9 3008 	ldr.w	r3, [r9, #8]
 801a68e:	7b1a      	ldrb	r2, [r3, #12]
 801a690:	2a01      	cmp	r2, #1
 801a692:	d11f      	bne.n	801a6d4 <??GATT_Super_Handler_2>
 801a694:	2805      	cmp	r0, #5
 801a696:	d014      	beq.n	801a6c2 <??GATT_Super_Handler_3>

0801a698 <??GATT_Super_Handler_4>:
 801a698:	f04f 0891 	mov.w	r8, #145	; 0x91

0801a69c <??GATT_Super_Handler_5>:
 801a69c:	6860      	ldr	r0, [r4, #4]
 801a69e:	f420 5000 	bic.w	r0, r0, #8192	; 0x2000
 801a6a2:	6060      	str	r0, [r4, #4]
 801a6a4:	4620      	mov	r0, r4
 801a6a6:	f7ff fc6b 	bl	8019f80 <GATT_Evt_Handle>
 801a6aa:	4601      	mov	r1, r0
 801a6ac:	4642      	mov	r2, r8
 801a6ae:	2001      	movs	r0, #1
 801a6b0:	f004 fd82 	bl	801f1b8 <EVT_aci_gatt_proc_complete>

0801a6b4 <??GATT_Super_Handler_1>:
 801a6b4:	6a20      	ldr	r0, [r4, #32]
 801a6b6:	2101      	movs	r1, #1
 801a6b8:	f00a fb13 	bl	8024ce2 <ACL_PM_Release>
 801a6bc:	2000      	movs	r0, #0
 801a6be:	6220      	str	r0, [r4, #32]

0801a6c0 <??GATT_Super_Handler_0>:
 801a6c0:	e13e      	b.n	801a940 <?Subroutine4>

0801a6c2 <??GATT_Super_Handler_3>:
 801a6c2:	7c18      	ldrb	r0, [r3, #16]
 801a6c4:	280a      	cmp	r0, #10
 801a6c6:	bf18      	it	ne
 801a6c8:	f04f 0891 	movne.w	r8, #145	; 0x91

0801a6cc <??GATT_Super_Handler_6>:
 801a6cc:	4648      	mov	r0, r9
 801a6ce:	f7ff fc72 	bl	8019fb6 <GATT_Send_Resp_Event>
 801a6d2:	e7e3      	b.n	801a69c <??GATT_Super_Handler_5>

0801a6d4 <??GATT_Super_Handler_2>:
 801a6d4:	7b5d      	ldrb	r5, [r3, #13]
 801a6d6:	1eb2      	subs	r2, r6, #2
 801a6d8:	b292      	uxth	r2, r2
 801a6da:	2d00      	cmp	r5, #0
 801a6dc:	d0dc      	beq.n	801a698 <??GATT_Super_Handler_4>
 801a6de:	460f      	mov	r7, r1
 801a6e0:	07f8      	lsls	r0, r7, #31
 801a6e2:	d50b      	bpl.n	801a6fc <??GATT_Super_Handler_7>
 801a6e4:	2e02      	cmp	r6, #2
 801a6e6:	d309      	bcc.n	801a6fc <??GATT_Super_Handler_7>
 801a6e8:	fb92 f0f5 	sdiv	r0, r2, r5
 801a6ec:	fb05 2010 	mls	r0, r5, r0, r2
 801a6f0:	b920      	cbnz	r0, 801a6fc <??GATT_Super_Handler_7>
 801a6f2:	2d06      	cmp	r5, #6
 801a6f4:	bf14      	ite	ne
 801a6f6:	2d14      	cmpne	r5, #20
 801a6f8:	2001      	moveq	r0, #1
 801a6fa:	d038      	beq.n	801a76e <??GATT_Super_Handler_8>

0801a6fc <??GATT_Super_Handler_7>:
 801a6fc:	07b8      	lsls	r0, r7, #30
 801a6fe:	d507      	bpl.n	801a710 <??GATT_Super_Handler_9>
 801a700:	2e05      	cmp	r6, #5
 801a702:	d305      	bcc.n	801a710 <??GATT_Super_Handler_9>
 801a704:	1e70      	subs	r0, r6, #1
 801a706:	f010 0f03 	tst.w	r0, #3
 801a70a:	bf08      	it	eq
 801a70c:	2002      	moveq	r0, #2
 801a70e:	d02e      	beq.n	801a76e <??GATT_Super_Handler_8>

0801a710 <??GATT_Super_Handler_9>:
 801a710:	0778      	lsls	r0, r7, #29
 801a712:	d50b      	bpl.n	801a72c <??GATT_Super_Handler_10>
 801a714:	2e02      	cmp	r6, #2
 801a716:	d309      	bcc.n	801a72c <??GATT_Super_Handler_10>
 801a718:	fb92 f0f5 	sdiv	r0, r2, r5
 801a71c:	fb05 2010 	mls	r0, r5, r0, r2
 801a720:	b920      	cbnz	r0, 801a72c <??GATT_Super_Handler_10>
 801a722:	2d08      	cmp	r5, #8
 801a724:	bf14      	ite	ne
 801a726:	2d06      	cmpne	r5, #6
 801a728:	2004      	moveq	r0, #4
 801a72a:	d020      	beq.n	801a76e <??GATT_Super_Handler_8>

0801a72c <??GATT_Super_Handler_10>:
 801a72c:	f017 0f18 	tst.w	r7, #24
 801a730:	d00b      	beq.n	801a74a <??GATT_Super_Handler_11>
 801a732:	2e02      	cmp	r6, #2
 801a734:	d309      	bcc.n	801a74a <??GATT_Super_Handler_11>
 801a736:	fb92 f0f5 	sdiv	r0, r2, r5
 801a73a:	fb05 2010 	mls	r0, r5, r0, r2
 801a73e:	b920      	cbnz	r0, 801a74a <??GATT_Super_Handler_11>
 801a740:	2d07      	cmp	r5, #7
 801a742:	bf14      	ite	ne
 801a744:	2d15      	cmpne	r5, #21
 801a746:	2008      	moveq	r0, #8
 801a748:	d011      	beq.n	801a76e <??GATT_Super_Handler_8>

0801a74a <??GATT_Super_Handler_11>:
 801a74a:	06b8      	lsls	r0, r7, #26
 801a74c:	d5a4      	bpl.n	801a698 <??GATT_Super_Handler_4>
 801a74e:	2d01      	cmp	r5, #1
 801a750:	bf08      	it	eq
 801a752:	2504      	moveq	r5, #4
 801a754:	d002      	beq.n	801a75c <??GATT_Super_Handler_12>
 801a756:	2d02      	cmp	r5, #2
 801a758:	d19e      	bne.n	801a698 <??GATT_Super_Handler_4>
 801a75a:	2512      	movs	r5, #18

0801a75c <??GATT_Super_Handler_12>:
 801a75c:	2e02      	cmp	r6, #2
 801a75e:	d99b      	bls.n	801a698 <??GATT_Super_Handler_4>
 801a760:	fb92 f0f5 	sdiv	r0, r2, r5
 801a764:	fb05 2010 	mls	r0, r5, r0, r2
 801a768:	2800      	cmp	r0, #0
 801a76a:	d195      	bne.n	801a698 <??GATT_Super_Handler_4>
 801a76c:	2010      	movs	r0, #16

0801a76e <??GATT_Super_Handler_8>:
 801a76e:	0781      	lsls	r1, r0, #30
 801a770:	d507      	bpl.n	801a782 <??GATT_Super_Handler_13>
 801a772:	1e76      	subs	r6, r6, #1
 801a774:	03b6      	lsls	r6, r6, #14
 801a776:	0c36      	lsrs	r6, r6, #16
 801a778:	00b1      	lsls	r1, r6, #2
 801a77a:	ab03      	add	r3, sp, #12
 801a77c:	2202      	movs	r2, #2
 801a77e:	1cc9      	adds	r1, r1, #3
 801a780:	e00c      	b.n	801a79c <??GATT_Super_Handler_14>

0801a782 <??GATT_Super_Handler_13>:
 801a782:	06c0      	lsls	r0, r0, #27
 801a784:	bf46      	itte	mi
 801a786:	1c52      	addmi	r2, r2, #1
 801a788:	fbb2 f6f5 	udivmi	r6, r2, r5
 801a78c:	fb92 f6f5 	sdivpl	r6, r2, r5
 801a790:	b2b6      	uxth	r6, r6
 801a792:	1e71      	subs	r1, r6, #1
 801a794:	4369      	muls	r1, r5
 801a796:	ab03      	add	r3, sp, #12
 801a798:	2202      	movs	r2, #2
 801a79a:	1d89      	adds	r1, r1, #6

0801a79c <??GATT_Super_Handler_14>:
 801a79c:	b289      	uxth	r1, r1
 801a79e:	4648      	mov	r0, r9
 801a7a0:	f00a fb21 	bl	8024de6 <ACL_PM_Get_Data>
 801a7a4:	06f8      	lsls	r0, r7, #27
 801a7a6:	d53b      	bpl.n	801a820 <??GATT_Super_Handler_15>
 801a7a8:	f8bd 100c 	ldrh.w	r1, [sp, #12]
 801a7ac:	8b20      	ldrh	r0, [r4, #24]
 801a7ae:	4281      	cmp	r1, r0
 801a7b0:	d202      	bcs.n	801a7b8 <??GATT_Super_Handler_16>
 801a7b2:	7921      	ldrb	r1, [r4, #4]
 801a7b4:	0648      	lsls	r0, r1, #25
 801a7b6:	d452      	bmi.n	801a85e <??GATT_Super_Handler_17>

0801a7b8 <??GATT_Super_Handler_16>:
 801a7b8:	46c2      	mov	sl, r8
 801a7ba:	2e00      	cmp	r6, #0
 801a7bc:	dd30      	ble.n	801a820 <??GATT_Super_Handler_15>
 801a7be:	9600      	str	r6, [sp, #0]
 801a7c0:	2600      	movs	r6, #0

0801a7c2 <??GATT_Super_Handler_18>:
 801a7c2:	f10a 0b0b 	add.w	fp, sl, #11
 801a7c6:	2d07      	cmp	r5, #7
 801a7c8:	d113      	bne.n	801a7f2 <??GATT_Super_Handler_19>
 801a7ca:	2210      	movs	r2, #16
 801a7cc:	f8df 15d4 	ldr.w	r1, [pc, #1492]	; 801ada4 <??DataTable8>
 801a7d0:	a804      	add	r0, sp, #16
 801a7d2:	f016 fb88 	bl	8030ee6 <__aeabi_memcpy>
 801a7d6:	ab07      	add	r3, sp, #28
 801a7d8:	2202      	movs	r2, #2
 801a7da:	fa1f f18b 	uxth.w	r1, fp
 801a7de:	4648      	mov	r0, r9
 801a7e0:	f00a fb01 	bl	8024de6 <ACL_PM_Get_Data>
 801a7e4:	2210      	movs	r2, #16
 801a7e6:	f104 0108 	add.w	r1, r4, #8
 801a7ea:	a804      	add	r0, sp, #16
 801a7ec:	f016 fba8 	bl	8030f40 <memcmp>
 801a7f0:	e007      	b.n	801a802 <??GATT_Super_Handler_20>

0801a7f2 <??GATT_Super_Handler_19>:
 801a7f2:	2310      	movs	r3, #16
 801a7f4:	fa1f f28b 	uxth.w	r2, fp
 801a7f8:	f104 0108 	add.w	r1, r4, #8
 801a7fc:	4648      	mov	r0, r9
 801a7fe:	f00a faef 	bl	8024de0 <ACL_PM_Cmp_Data>

0801a802 <??GATT_Super_Handler_20>:
 801a802:	b940      	cbnz	r0, 801a816 <??GATT_Super_Handler_21>
 801a804:	fb05 f106 	mul.w	r1, r5, r6
 801a808:	464b      	mov	r3, r9
 801a80a:	b2ea      	uxtb	r2, r5
 801a80c:	1c89      	adds	r1, r1, #2
 801a80e:	b2c9      	uxtb	r1, r1
 801a810:	2001      	movs	r0, #1
 801a812:	f004 fd00 	bl	801f216 <EVT_aci_gatt_disc_read_char_by_uuid_resp>

0801a816 <??GATT_Super_Handler_21>:
 801a816:	9800      	ldr	r0, [sp, #0]
 801a818:	1c76      	adds	r6, r6, #1
 801a81a:	44aa      	add	sl, r5
 801a81c:	4286      	cmp	r6, r0
 801a81e:	dbd0      	blt.n	801a7c2 <??GATT_Super_Handler_18>

0801a820 <??GATT_Super_Handler_15>:
 801a820:	f017 0f3c 	tst.w	r7, #60	; 0x3c
 801a824:	f8bd 000c 	ldrh.w	r0, [sp, #12]
 801a828:	d010      	beq.n	801a84c <??GATT_Super_Handler_22>
 801a82a:	8b21      	ldrh	r1, [r4, #24]
 801a82c:	4288      	cmp	r0, r1
 801a82e:	d211      	bcs.n	801a854 <??GATT_Super_Handler_23>

0801a830 <??GATT_Super_Handler_24>:
 801a830:	7920      	ldrb	r0, [r4, #4]
 801a832:	0641      	lsls	r1, r0, #25
 801a834:	d501      	bpl.n	801a83a <??GATT_Super_Handler_25>
 801a836:	06f8      	lsls	r0, r7, #27
 801a838:	d511      	bpl.n	801a85e <??GATT_Super_Handler_17>

0801a83a <??GATT_Super_Handler_25>:
 801a83a:	8821      	ldrh	r1, [r4, #0]
 801a83c:	2220      	movs	r2, #32
 801a83e:	2000      	movs	r0, #0
 801a840:	f00a fa37 	bl	8024cb2 <ACL_PM_New>
 801a844:	0005      	movs	r5, r0
 801a846:	d10f      	bne.n	801a868 <??GATT_Super_Handler_26>

0801a848 <??GATT_Super_Handler_27>:
 801a848:	2095      	movs	r0, #149	; 0x95
 801a84a:	e079      	b.n	801a940 <?Subroutine4>

0801a84c <??GATT_Super_Handler_22>:
 801a84c:	f64f 71ff 	movw	r1, #65535	; 0xffff
 801a850:	4288      	cmp	r0, r1
 801a852:	d1ed      	bne.n	801a830 <??GATT_Super_Handler_24>

0801a854 <??GATT_Super_Handler_23>:
 801a854:	f017 0fd0 	tst.w	r7, #208	; 0xd0
 801a858:	f47f af20 	bne.w	801a69c <??GATT_Super_Handler_5>
 801a85c:	e736      	b.n	801a6cc <??GATT_Super_Handler_6>

0801a85e <??GATT_Super_Handler_17>:
 801a85e:	6860      	ldr	r0, [r4, #4]
 801a860:	f440 6080 	orr.w	r0, r0, #1024	; 0x400
 801a864:	6060      	str	r0, [r4, #4]
 801a866:	e725      	b.n	801a6b4 <??GATT_Super_Handler_1>

0801a868 <??GATT_Super_Handler_26>:
 801a868:	07f8      	lsls	r0, r7, #31
 801a86a:	d512      	bpl.n	801a892 <??GATT_Super_Handler_28>
 801a86c:	aa02      	add	r2, sp, #8
 801a86e:	9200      	str	r2, [sp, #0]
 801a870:	f8bd 200c 	ldrh.w	r2, [sp, #12]
 801a874:	f44f 5120 	mov.w	r1, #10240	; 0x2800
 801a878:	2001      	movs	r0, #1
 801a87a:	f8ad 1008 	strh.w	r1, [sp, #8]
 801a87e:	9001      	str	r0, [sp, #4]
 801a880:	1c52      	adds	r2, r2, #1
 801a882:	f64f 73ff 	movw	r3, #65535	; 0xffff
 801a886:	b292      	uxth	r2, r2
 801a888:	4629      	mov	r1, r5
 801a88a:	4620      	mov	r0, r4
 801a88c:	f000 fb9c 	bl	801afc8 <ATT_Build_Read_By_Grp_Typ_Req>
 801a890:	e041      	b.n	801a916 <??GATT_Super_Handler_29>

0801a892 <??GATT_Super_Handler_28>:
 801a892:	07b8      	lsls	r0, r7, #30
 801a894:	d516      	bpl.n	801a8c4 <??GATT_Super_Handler_30>
 801a896:	7ee1      	ldrb	r1, [r4, #27]
 801a898:	2901      	cmp	r1, #1
 801a89a:	bf0c      	ite	eq
 801a89c:	2002      	moveq	r0, #2
 801a89e:	2010      	movne	r0, #16
 801a8a0:	f8bd 200c 	ldrh.w	r2, [sp, #12]
 801a8a4:	9002      	str	r0, [sp, #8]
 801a8a6:	f104 0008 	add.w	r0, r4, #8
 801a8aa:	f44f 5120 	mov.w	r1, #10240	; 0x2800
 801a8ae:	9001      	str	r0, [sp, #4]
 801a8b0:	9100      	str	r1, [sp, #0]
 801a8b2:	1c52      	adds	r2, r2, #1
 801a8b4:	f64f 73ff 	movw	r3, #65535	; 0xffff
 801a8b8:	b292      	uxth	r2, r2
 801a8ba:	4629      	mov	r1, r5
 801a8bc:	4620      	mov	r0, r4
 801a8be:	f000 fa97 	bl	801adf0 <ATT_Build_Find_By_Typ_Val_Req>
 801a8c2:	e028      	b.n	801a916 <??GATT_Super_Handler_29>

0801a8c4 <??GATT_Super_Handler_30>:
 801a8c4:	0778      	lsls	r0, r7, #29
 801a8c6:	d506      	bpl.n	801a8d6 <??GATT_Super_Handler_31>
 801a8c8:	f642 0102 	movw	r1, #10242	; 0x2802
 801a8cc:	2001      	movs	r0, #1
 801a8ce:	f8ad 1008 	strh.w	r1, [sp, #8]
 801a8d2:	9001      	str	r0, [sp, #4]
 801a8d4:	e008      	b.n	801a8e8 <??GATT_Super_Handler_32>

0801a8d6 <??GATT_Super_Handler_31>:
 801a8d6:	f017 0f18 	tst.w	r7, #24
 801a8da:	d011      	beq.n	801a900 <??GATT_Super_Handler_33>
 801a8dc:	f642 0003 	movw	r0, #10243	; 0x2803
 801a8e0:	2101      	movs	r1, #1
 801a8e2:	f8ad 0008 	strh.w	r0, [sp, #8]
 801a8e6:	9101      	str	r1, [sp, #4]

0801a8e8 <??GATT_Super_Handler_32>:
 801a8e8:	aa02      	add	r2, sp, #8
 801a8ea:	9200      	str	r2, [sp, #0]
 801a8ec:	f8bd 200c 	ldrh.w	r2, [sp, #12]
 801a8f0:	8b23      	ldrh	r3, [r4, #24]
 801a8f2:	4629      	mov	r1, r5
 801a8f4:	1c52      	adds	r2, r2, #1
 801a8f6:	b292      	uxth	r2, r2
 801a8f8:	4620      	mov	r0, r4
 801a8fa:	f000 faba 	bl	801ae72 <ATT_Build_Read_By_Typ_Req>
 801a8fe:	e00a      	b.n	801a916 <??GATT_Super_Handler_29>

0801a900 <??GATT_Super_Handler_33>:
 801a900:	06b8      	lsls	r0, r7, #26
 801a902:	d512      	bpl.n	801a92a <??GATT_Super_Handler_34>
 801a904:	f8bd 200c 	ldrh.w	r2, [sp, #12]
 801a908:	8b23      	ldrh	r3, [r4, #24]
 801a90a:	4629      	mov	r1, r5
 801a90c:	1c52      	adds	r2, r2, #1
 801a90e:	b292      	uxth	r2, r2
 801a910:	4620      	mov	r0, r4
 801a912:	f000 fa4d 	bl	801adb0 <ATT_Build_Find_Info_Req>

0801a916 <??GATT_Super_Handler_29>:
 801a916:	2864      	cmp	r0, #100	; 0x64
 801a918:	d104      	bne.n	801a924 <??GATT_Super_Handler_35>
 801a91a:	2100      	movs	r1, #0
 801a91c:	4628      	mov	r0, r5
 801a91e:	f00a f9e0 	bl	8024ce2 <ACL_PM_Release>
 801a922:	e791      	b.n	801a848 <??GATT_Super_Handler_27>

0801a924 <??GATT_Super_Handler_35>:
 801a924:	2800      	cmp	r0, #0
 801a926:	f47f aeb7 	bne.w	801a698 <??GATT_Super_Handler_4>

0801a92a <??GATT_Super_Handler_34>:
 801a92a:	4628      	mov	r0, r5
 801a92c:	f7ff fab9 	bl	8019ea2 <GATT_Send_Packet>
 801a930:	f017 0fd0 	tst.w	r7, #208	; 0xd0
 801a934:	f47f aebe 	bne.w	801a6b4 <??GATT_Super_Handler_1>
 801a938:	4648      	mov	r0, r9
 801a93a:	f7ff fb3c 	bl	8019fb6 <GATT_Send_Resp_Event>
 801a93e:	e6b9      	b.n	801a6b4 <??GATT_Super_Handler_1>

0801a940 <?Subroutine4>:
 801a940:	b009      	add	sp, #36	; 0x24
 801a942:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801a946 <GATT_Super_Handler_Task7>:
 801a946:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 801a94a:	4607      	mov	r7, r0
 801a94c:	6a3d      	ldr	r5, [r7, #32]
 801a94e:	2600      	movs	r6, #0
 801a950:	b915      	cbnz	r5, 801a958 <??GATT_Super_Handler_Task7_0>
 801a952:	2091      	movs	r0, #145	; 0x91
 801a954:	e8bd 83f2 	ldmia.w	sp!, {r1, r4, r5, r6, r7, r8, r9, pc}

0801a958 <??GATT_Super_Handler_Task7_0>:
 801a958:	68a8      	ldr	r0, [r5, #8]
 801a95a:	7b02      	ldrb	r2, [r0, #12]
 801a95c:	2a01      	cmp	r2, #1
 801a95e:	d107      	bne.n	801a970 <??GATT_Super_Handler_Task7_1>
 801a960:	88e9      	ldrh	r1, [r5, #6]
 801a962:	2905      	cmp	r1, #5
 801a964:	d15c      	bne.n	801aa20 <??GATT_Super_Handler_Task7_2>
 801a966:	7c00      	ldrb	r0, [r0, #16]
 801a968:	280a      	cmp	r0, #10
 801a96a:	d00a      	beq.n	801a982 <??GATT_Super_Handler_Task7_3>
 801a96c:	2691      	movs	r6, #145	; 0x91
 801a96e:	e008      	b.n	801a982 <??GATT_Super_Handler_Task7_3>

0801a970 <??GATT_Super_Handler_Task7_1>:
 801a970:	f011 0f05 	tst.w	r1, #5
 801a974:	d105      	bne.n	801a982 <??GATT_Super_Handler_Task7_3>
 801a976:	078a      	lsls	r2, r1, #30
 801a978:	d52b      	bpl.n	801a9d2 <??GATT_Super_Handler_Task7_4>
 801a97a:	88e8      	ldrh	r0, [r5, #6]
 801a97c:	8879      	ldrh	r1, [r7, #2]
 801a97e:	4288      	cmp	r0, r1
 801a980:	d203      	bcs.n	801a98a <??GATT_Super_Handler_Task7_5>

0801a982 <??GATT_Super_Handler_Task7_3>:
 801a982:	4628      	mov	r0, r5
 801a984:	f7ff fb17 	bl	8019fb6 <GATT_Send_Resp_Event>
 801a988:	e04b      	b.n	801aa22 <??GATT_Super_Handler_Task7_6>

0801a98a <??GATT_Super_Handler_Task7_5>:
 801a98a:	6878      	ldr	r0, [r7, #4]
 801a98c:	0641      	lsls	r1, r0, #25
 801a98e:	d505      	bpl.n	801a99c <??GATT_Super_Handler_Task7_7>
 801a990:	f440 6080 	orr.w	r0, r0, #1024	; 0x400
 801a994:	6078      	str	r0, [r7, #4]
 801a996:	2000      	movs	r0, #0
 801a998:	e8bd 83f2 	ldmia.w	sp!, {r1, r4, r5, r6, r7, r8, r9, pc}

0801a99c <??GATT_Super_Handler_Task7_7>:
 801a99c:	8839      	ldrh	r1, [r7, #0]
 801a99e:	2220      	movs	r2, #32
 801a9a0:	2000      	movs	r0, #0
 801a9a2:	f00a f986 	bl	8024cb2 <ACL_PM_New>
 801a9a6:	0004      	movs	r4, r0
 801a9a8:	bf08      	it	eq
 801a9aa:	2095      	moveq	r0, #149	; 0x95
 801a9ac:	d04b      	beq.n	801aa46 <??GATT_Super_Handler_Task7_8>
 801a9ae:	4628      	mov	r0, r5
 801a9b0:	f7ff fb01 	bl	8019fb6 <GATT_Send_Resp_Event>
 801a9b4:	8979      	ldrh	r1, [r7, #10]
 801a9b6:	8878      	ldrh	r0, [r7, #2]
 801a9b8:	893a      	ldrh	r2, [r7, #8]
 801a9ba:	1841      	adds	r1, r0, r1
 801a9bc:	1e4d      	subs	r5, r1, #1
 801a9be:	b2ab      	uxth	r3, r5
 801a9c0:	4621      	mov	r1, r4
 801a9c2:	4638      	mov	r0, r7
 801a9c4:	f000 faaa 	bl	801af1c <ATT_Build_Read_Blob_Req>
 801a9c8:	4620      	mov	r0, r4
 801a9ca:	f7ff fa6a 	bl	8019ea2 <GATT_Send_Packet>
 801a9ce:	817d      	strh	r5, [r7, #10]
 801a9d0:	e033      	b.n	801aa3a <??GATT_Super_Handler_Task7_9>

0801a9d2 <??GATT_Super_Handler_Task7_4>:
 801a9d2:	06c9      	lsls	r1, r1, #27
 801a9d4:	d525      	bpl.n	801aa22 <??GATT_Super_Handler_Task7_6>
 801a9d6:	88e9      	ldrh	r1, [r5, #6]
 801a9d8:	2903      	cmp	r1, #3
 801a9da:	d321      	bcc.n	801aa20 <??GATT_Super_Handler_Task7_2>
 801a9dc:	f890 800d 	ldrb.w	r8, [r0, #13]
 801a9e0:	1e88      	subs	r0, r1, #2
 801a9e2:	b280      	uxth	r0, r0
 801a9e4:	4540      	cmp	r0, r8
 801a9e6:	da03      	bge.n	801a9f0 <??GATT_Super_Handler_Task7_10>
 801a9e8:	2401      	movs	r4, #1
 801a9ea:	f04f 0902 	mov.w	r9, #2
 801a9ee:	e00c      	b.n	801aa0a <??GATT_Super_Handler_Task7_11>

0801a9f0 <??GATT_Super_Handler_Task7_10>:
 801a9f0:	f1b8 0f00 	cmp.w	r8, #0
 801a9f4:	d014      	beq.n	801aa20 <??GATT_Super_Handler_Task7_2>
 801a9f6:	fb90 f4f8 	sdiv	r4, r0, r8
 801a9fa:	fb08 0014 	mls	r0, r8, r4, r0
 801a9fe:	b978      	cbnz	r0, 801aa20 <??GATT_Super_Handler_Task7_2>
 801aa00:	b2a4      	uxth	r4, r4
 801aa02:	f04f 0902 	mov.w	r9, #2
 801aa06:	2c00      	cmp	r4, #0
 801aa08:	dd0b      	ble.n	801aa22 <??GATT_Super_Handler_Task7_6>

0801aa0a <??GATT_Super_Handler_Task7_11>:
 801aa0a:	462b      	mov	r3, r5
 801aa0c:	4642      	mov	r2, r8
 801aa0e:	fa5f f189 	uxtb.w	r1, r9
 801aa12:	2001      	movs	r0, #1
 801aa14:	f004 fbff 	bl	801f216 <EVT_aci_gatt_disc_read_char_by_uuid_resp>
 801aa18:	44c1      	add	r9, r8
 801aa1a:	1e64      	subs	r4, r4, #1
 801aa1c:	d1f5      	bne.n	801aa0a <??GATT_Super_Handler_Task7_11>
 801aa1e:	e000      	b.n	801aa22 <??GATT_Super_Handler_Task7_6>

0801aa20 <??GATT_Super_Handler_Task7_2>:
 801aa20:	2691      	movs	r6, #145	; 0x91

0801aa22 <??GATT_Super_Handler_Task7_6>:
 801aa22:	6878      	ldr	r0, [r7, #4]
 801aa24:	f420 5000 	bic.w	r0, r0, #8192	; 0x2000
 801aa28:	6078      	str	r0, [r7, #4]
 801aa2a:	4638      	mov	r0, r7
 801aa2c:	f7ff faa8 	bl	8019f80 <GATT_Evt_Handle>
 801aa30:	4601      	mov	r1, r0
 801aa32:	4632      	mov	r2, r6
 801aa34:	2001      	movs	r0, #1
 801aa36:	f004 fbbf 	bl	801f1b8 <EVT_aci_gatt_proc_complete>

0801aa3a <??GATT_Super_Handler_Task7_9>:
 801aa3a:	6a38      	ldr	r0, [r7, #32]
 801aa3c:	2101      	movs	r1, #1
 801aa3e:	f00a f950 	bl	8024ce2 <ACL_PM_Release>
 801aa42:	2000      	movs	r0, #0
 801aa44:	6238      	str	r0, [r7, #32]

0801aa46 <??GATT_Super_Handler_Task7_8>:
 801aa46:	e8bd 83f2 	ldmia.w	sp!, {r1, r4, r5, r6, r7, r8, r9, pc}
	...

0801aa4c <GATT_All_Primary_Cb>:
 801aa4c:	2101      	movs	r1, #1
 801aa4e:	e60b      	b.n	801a668 <GATT_Super_Handler>

0801aa50 <GATT_Disc_Prim_serv_By_Uuid_Cb>:
 801aa50:	2102      	movs	r1, #2
 801aa52:	e609      	b.n	801a668 <GATT_Super_Handler>

0801aa54 <GATT_Find_Incl_Serv_Cb>:
 801aa54:	2104      	movs	r1, #4
 801aa56:	e607      	b.n	801a668 <GATT_Super_Handler>

0801aa58 <GATT_Disc_All_Charac_Cb>:
 801aa58:	2108      	movs	r1, #8
 801aa5a:	e605      	b.n	801a668 <GATT_Super_Handler>

0801aa5c <GATT_Disc_All_Charac_By_Uuid_Cb>:
 801aa5c:	2110      	movs	r1, #16
 801aa5e:	e603      	b.n	801a668 <GATT_Super_Handler>

0801aa60 <GATT_Disc_Charac_Desc_Cb>:
 801aa60:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 801aa62:	4606      	mov	r6, r0
 801aa64:	6a34      	ldr	r4, [r6, #32]
 801aa66:	2700      	movs	r7, #0
 801aa68:	b90c      	cbnz	r4, 801aa6e <??GATT_Disc_Charac_Desc_Cb_0>
 801aa6a:	2091      	movs	r0, #145	; 0x91
 801aa6c:	bdf2      	pop	{r1, r4, r5, r6, r7, pc}

0801aa6e <??GATT_Disc_Charac_Desc_Cb_0>:
 801aa6e:	88e0      	ldrh	r0, [r4, #6]
 801aa70:	0001      	movs	r1, r0
 801aa72:	d067      	beq.n	801ab44 <??GATT_Disc_Charac_Desc_Cb_1>
 801aa74:	68a2      	ldr	r2, [r4, #8]
 801aa76:	7b13      	ldrb	r3, [r2, #12]
 801aa78:	2b01      	cmp	r3, #1
 801aa7a:	d106      	bne.n	801aa8a <??GATT_Disc_Charac_Desc_Cb_2>
 801aa7c:	2805      	cmp	r0, #5
 801aa7e:	d158      	bne.n	801ab32 <??GATT_Disc_Charac_Desc_Cb_3>
 801aa80:	7c10      	ldrb	r0, [r2, #16]
 801aa82:	280a      	cmp	r0, #10
 801aa84:	d02a      	beq.n	801aadc <??GATT_Disc_Charac_Desc_Cb_4>
 801aa86:	2791      	movs	r7, #145	; 0x91
 801aa88:	e028      	b.n	801aadc <??GATT_Disc_Charac_Desc_Cb_4>

0801aa8a <??GATT_Disc_Charac_Desc_Cb_2>:
 801aa8a:	7b50      	ldrb	r0, [r2, #13]
 801aa8c:	f1a1 0c02 	sub.w	ip, r1, #2
 801aa90:	fa1f fc8c 	uxth.w	ip, ip
 801aa94:	2800      	cmp	r0, #0
 801aa96:	d04c      	beq.n	801ab32 <??GATT_Disc_Charac_Desc_Cb_3>
 801aa98:	2801      	cmp	r0, #1
 801aa9a:	bf08      	it	eq
 801aa9c:	2504      	moveq	r5, #4
 801aa9e:	d002      	beq.n	801aaa6 <??GATT_Disc_Charac_Desc_Cb_5>
 801aaa0:	2802      	cmp	r0, #2
 801aaa2:	d146      	bne.n	801ab32 <??GATT_Disc_Charac_Desc_Cb_3>
 801aaa4:	2512      	movs	r5, #18

0801aaa6 <??GATT_Disc_Charac_Desc_Cb_5>:
 801aaa6:	2902      	cmp	r1, #2
 801aaa8:	d943      	bls.n	801ab32 <??GATT_Disc_Charac_Desc_Cb_3>
 801aaaa:	fb9c f0f5 	sdiv	r0, ip, r5
 801aaae:	fb05 c010 	mls	r0, r5, r0, ip
 801aab2:	2800      	cmp	r0, #0
 801aab4:	d13d      	bne.n	801ab32 <??GATT_Disc_Charac_Desc_Cb_3>
 801aab6:	f10c 0c01 	add.w	ip, ip, #1
 801aaba:	fbbc f0f5 	udiv	r0, ip, r5
 801aabe:	466b      	mov	r3, sp
 801aac0:	2202      	movs	r2, #2
 801aac2:	b280      	uxth	r0, r0
 801aac4:	1e40      	subs	r0, r0, #1
 801aac6:	4345      	muls	r5, r0
 801aac8:	4620      	mov	r0, r4
 801aaca:	1dad      	adds	r5, r5, #6
 801aacc:	b2a9      	uxth	r1, r5
 801aace:	f00a f98a 	bl	8024de6 <ACL_PM_Get_Data>
 801aad2:	f8bd 0000 	ldrh.w	r0, [sp]
 801aad6:	8b31      	ldrh	r1, [r6, #24]
 801aad8:	4288      	cmp	r0, r1
 801aada:	d303      	bcc.n	801aae4 <??GATT_Disc_Charac_Desc_Cb_6>

0801aadc <??GATT_Disc_Charac_Desc_Cb_4>:
 801aadc:	4620      	mov	r0, r4
 801aade:	f7ff fa6a 	bl	8019fb6 <GATT_Send_Resp_Event>
 801aae2:	e027      	b.n	801ab34 <??GATT_Disc_Charac_Desc_Cb_7>

0801aae4 <??GATT_Disc_Charac_Desc_Cb_6>:
 801aae4:	6870      	ldr	r0, [r6, #4]
 801aae6:	0641      	lsls	r1, r0, #25
 801aae8:	d503      	bpl.n	801aaf2 <??GATT_Disc_Charac_Desc_Cb_8>
 801aaea:	f440 6080 	orr.w	r0, r0, #1024	; 0x400
 801aaee:	6070      	str	r0, [r6, #4]
 801aaf0:	e028      	b.n	801ab44 <??GATT_Disc_Charac_Desc_Cb_1>

0801aaf2 <??GATT_Disc_Charac_Desc_Cb_8>:
 801aaf2:	8831      	ldrh	r1, [r6, #0]
 801aaf4:	2220      	movs	r2, #32
 801aaf6:	2000      	movs	r0, #0
 801aaf8:	f00a f8db 	bl	8024cb2 <ACL_PM_New>
 801aafc:	0005      	movs	r5, r0
 801aafe:	d00e      	beq.n	801ab1e <??GATT_Disc_Charac_Desc_Cb_9>
 801ab00:	f8bd 2000 	ldrh.w	r2, [sp]
 801ab04:	8b33      	ldrh	r3, [r6, #24]
 801ab06:	4629      	mov	r1, r5
 801ab08:	1c52      	adds	r2, r2, #1
 801ab0a:	b292      	uxth	r2, r2
 801ab0c:	4630      	mov	r0, r6
 801ab0e:	f000 f94f 	bl	801adb0 <ATT_Build_Find_Info_Req>
 801ab12:	2864      	cmp	r0, #100	; 0x64
 801ab14:	d105      	bne.n	801ab22 <??GATT_Disc_Charac_Desc_Cb_10>
 801ab16:	2100      	movs	r1, #0
 801ab18:	4628      	mov	r0, r5
 801ab1a:	f00a f8e2 	bl	8024ce2 <ACL_PM_Release>

0801ab1e <??GATT_Disc_Charac_Desc_Cb_9>:
 801ab1e:	2095      	movs	r0, #149	; 0x95
 801ab20:	bdf2      	pop	{r1, r4, r5, r6, r7, pc}

0801ab22 <??GATT_Disc_Charac_Desc_Cb_10>:
 801ab22:	b930      	cbnz	r0, 801ab32 <??GATT_Disc_Charac_Desc_Cb_3>
 801ab24:	4628      	mov	r0, r5
 801ab26:	f7ff f9bc 	bl	8019ea2 <GATT_Send_Packet>
 801ab2a:	4620      	mov	r0, r4
 801ab2c:	f7ff fa43 	bl	8019fb6 <GATT_Send_Resp_Event>
 801ab30:	e008      	b.n	801ab44 <??GATT_Disc_Charac_Desc_Cb_1>

0801ab32 <??GATT_Disc_Charac_Desc_Cb_3>:
 801ab32:	2791      	movs	r7, #145	; 0x91

0801ab34 <??GATT_Disc_Charac_Desc_Cb_7>:
 801ab34:	6870      	ldr	r0, [r6, #4]
 801ab36:	4639      	mov	r1, r7
 801ab38:	f420 5000 	bic.w	r0, r0, #8192	; 0x2000
 801ab3c:	6070      	str	r0, [r6, #4]
 801ab3e:	4630      	mov	r0, r6
 801ab40:	f7ff fa71 	bl	801a026 <GATT_Send_Complete_Event>

0801ab44 <??GATT_Disc_Charac_Desc_Cb_1>:
 801ab44:	6a30      	ldr	r0, [r6, #32]
 801ab46:	2101      	movs	r1, #1
 801ab48:	f00a f8cb 	bl	8024ce2 <ACL_PM_Release>
 801ab4c:	2000      	movs	r0, #0
 801ab4e:	6230      	str	r0, [r6, #32]
 801ab50:	bdf2      	pop	{r1, r4, r5, r6, r7, pc}
	...

0801ab54 <GATT_Read_Cb>:
 801ab54:	2141      	movs	r1, #65	; 0x41
 801ab56:	e6f6      	b.n	801a946 <GATT_Super_Handler_Task7>

0801ab58 <GATT_Read_Long_Cb>:
 801ab58:	2142      	movs	r1, #66	; 0x42
 801ab5a:	e6f4      	b.n	801a946 <GATT_Super_Handler_Task7>

0801ab5c <GATT_Read_Charac_By_Uuid_Cb>:
 801ab5c:	2150      	movs	r1, #80	; 0x50
 801ab5e:	e6f2      	b.n	801a946 <GATT_Super_Handler_Task7>

0801ab60 <GATT_Read_Multi_Attr_Cb>:
 801ab60:	2144      	movs	r1, #68	; 0x44
 801ab62:	e6f0      	b.n	801a946 <GATT_Super_Handler_Task7>

0801ab64 <GATT_Write_Cb>:
 801ab64:	2160      	movs	r1, #96	; 0x60
 801ab66:	e6ee      	b.n	801a946 <GATT_Super_Handler_Task7>

0801ab68 <GATT_Long_Write_Proc_Cb>:
 801ab68:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801ab6c:	b084      	sub	sp, #16
 801ab6e:	4606      	mov	r6, r0
 801ab70:	6a37      	ldr	r7, [r6, #32]
 801ab72:	2500      	movs	r5, #0
 801ab74:	f8df b230 	ldr.w	fp, [pc, #560]	; 801ada8 <??DataTable8_1>
 801ab78:	88f8      	ldrh	r0, [r7, #6]
 801ab7a:	f8db 8004 	ldr.w	r8, [fp, #4]
 801ab7e:	9001      	str	r0, [sp, #4]
 801ab80:	8930      	ldrh	r0, [r6, #8]
 801ab82:	f8ad 000c 	strh.w	r0, [sp, #12]
 801ab86:	8a30      	ldrh	r0, [r6, #16]
 801ab88:	f8b6 900a 	ldrh.w	r9, [r6, #10]
 801ab8c:	f8b6 a00c 	ldrh.w	sl, [r6, #12]
 801ab90:	89f4      	ldrh	r4, [r6, #14]
 801ab92:	f8ad 0000 	strh.w	r0, [sp]
 801ab96:	68b8      	ldr	r0, [r7, #8]
 801ab98:	7b01      	ldrb	r1, [r0, #12]
 801ab9a:	2901      	cmp	r1, #1
 801ab9c:	d11d      	bne.n	801abda <??GATT_Long_Write_Proc_Cb_0>
 801ab9e:	7b40      	ldrb	r0, [r0, #13]
 801aba0:	2818      	cmp	r0, #24
 801aba2:	bf14      	ite	ne
 801aba4:	2c00      	cmpne	r4, #0
 801aba6:	2591      	moveq	r5, #145	; 0x91
 801aba8:	f000 8099 	beq.w	801acde <??GATT_Long_Write_Proc_Cb_1>
 801abac:	8831      	ldrh	r1, [r6, #0]
 801abae:	2220      	movs	r2, #32
 801abb0:	2000      	movs	r0, #0
 801abb2:	f00a f87e 	bl	8024cb2 <ACL_PM_New>
 801abb6:	0004      	movs	r4, r0
 801abb8:	d07d      	beq.n	801acb6 <??GATT_Long_Write_Proc_Cb_2>
 801abba:	6870      	ldr	r0, [r6, #4]
 801abbc:	2200      	movs	r2, #0
 801abbe:	4621      	mov	r1, r4
 801abc0:	f440 4080 	orr.w	r0, r0, #16384	; 0x4000
 801abc4:	6070      	str	r0, [r6, #4]
 801abc6:	4630      	mov	r0, r6
 801abc8:	f000 faf3 	bl	801b1b2 <ATT_Build_Exec_Write_Req>
 801abcc:	4620      	mov	r0, r4
 801abce:	f7ff f968 	bl	8019ea2 <GATT_Send_Packet>
 801abd2:	4638      	mov	r0, r7
 801abd4:	f7ff f9ef 	bl	8019fb6 <GATT_Send_Resp_Event>
 801abd8:	e093      	b.n	801ad02 <??GATT_Long_Write_Proc_Cb_3>

0801abda <??GATT_Long_Write_Proc_Cb_0>:
 801abda:	6870      	ldr	r0, [r6, #4]
 801abdc:	2917      	cmp	r1, #23
 801abde:	d178      	bne.n	801acd2 <??GATT_Long_Write_Proc_Cb_4>
 801abe0:	0641      	lsls	r1, r0, #25
 801abe2:	d504      	bpl.n	801abee <??GATT_Long_Write_Proc_Cb_5>
 801abe4:	f440 6080 	orr.w	r0, r0, #1024	; 0x400
 801abe8:	6070      	str	r0, [r6, #4]
 801abea:	2000      	movs	r0, #0
 801abec:	e090      	b.n	801ad10 <?Subroutine5>

0801abee <??GATT_Long_Write_Proc_Cb_5>:
 801abee:	9801      	ldr	r0, [sp, #4]
 801abf0:	2804      	cmp	r0, #4
 801abf2:	bfd8      	it	le
 801abf4:	2597      	movle	r5, #151	; 0x97
 801abf6:	dd75      	ble.n	801ace4 <??GATT_Long_Write_Proc_Cb_6>
 801abf8:	8831      	ldrh	r1, [r6, #0]
 801abfa:	2220      	movs	r2, #32
 801abfc:	2000      	movs	r0, #0
 801abfe:	f00a f858 	bl	8024cb2 <ACL_PM_New>
 801ac02:	0005      	movs	r5, r0
 801ac04:	d057      	beq.n	801acb6 <??GATT_Long_Write_Proc_Cb_2>
 801ac06:	2000      	movs	r0, #0
 801ac08:	9002      	str	r0, [sp, #8]
 801ac0a:	68b9      	ldr	r1, [r7, #8]
 801ac0c:	ab02      	add	r3, sp, #8
 801ac0e:	f101 020d 	add.w	r2, r1, #13
 801ac12:	f892 c000 	ldrb.w	ip, [r2]
 801ac16:	f883 c000 	strb.w	ip, [r3]
 801ac1a:	f892 c001 	ldrb.w	ip, [r2, #1]
 801ac1e:	f10d 020a 	add.w	r2, sp, #10
 801ac22:	f883 c001 	strb.w	ip, [r3, #1]
 801ac26:	f811 3f0f 	ldrb.w	r3, [r1, #15]!
 801ac2a:	7013      	strb	r3, [r2, #0]
 801ac2c:	784b      	ldrb	r3, [r1, #1]
 801ac2e:	f8bd 1000 	ldrh.w	r1, [sp]
 801ac32:	7053      	strb	r3, [r2, #1]
 801ac34:	9b01      	ldr	r3, [sp, #4]
 801ac36:	f1a3 0b05 	sub.w	fp, r3, #5
 801ac3a:	b139      	cbz	r1, 801ac4c <??GATT_Long_Write_Proc_Cb_7>
 801ac3c:	fa1f f38b 	uxth.w	r3, fp
 801ac40:	2209      	movs	r2, #9
 801ac42:	eb08 0104 	add.w	r1, r8, r4
 801ac46:	4638      	mov	r0, r7
 801ac48:	f00a f8ca 	bl	8024de0 <ACL_PM_Cmp_Data>

0801ac4c <??GATT_Long_Write_Proc_Cb_7>:
 801ac4c:	f8bd 100a 	ldrh.w	r1, [sp, #10]
 801ac50:	eb04 0209 	add.w	r2, r4, r9
 801ac54:	4291      	cmp	r1, r2
 801ac56:	bf02      	ittt	eq
 801ac58:	f8bd 3008 	ldrheq.w	r3, [sp, #8]
 801ac5c:	f8bd 100c 	ldrheq.w	r1, [sp, #12]
 801ac60:	428b      	cmpeq	r3, r1
 801ac62:	d100      	bne.n	801ac66 <??GATT_Long_Write_Proc_Cb_8>
 801ac64:	b128      	cbz	r0, 801ac72 <??GATT_Long_Write_Proc_Cb_9>

0801ac66 <??GATT_Long_Write_Proc_Cb_8>:
 801ac66:	6870      	ldr	r0, [r6, #4]
 801ac68:	2200      	movs	r2, #0
 801ac6a:	f440 4080 	orr.w	r0, r0, #16384	; 0x4000
 801ac6e:	6070      	str	r0, [r6, #4]
 801ac70:	e024      	b.n	801acbc <??GATT_Long_Write_Proc_Cb_10>

0801ac72 <??GATT_Long_Write_Proc_Cb_9>:
 801ac72:	445c      	add	r4, fp
 801ac74:	b2a4      	uxth	r4, r4
 801ac76:	81f4      	strh	r4, [r6, #14]
 801ac78:	4554      	cmp	r4, sl
 801ac7a:	da1e      	bge.n	801acba <??GATT_Long_Write_Proc_Cb_11>
 801ac7c:	8870      	ldrh	r0, [r6, #2]
 801ac7e:	ebaa 0a04 	sub.w	sl, sl, r4
 801ac82:	fa1f fa8a 	uxth.w	sl, sl
 801ac86:	1f40      	subs	r0, r0, #5
 801ac88:	b280      	uxth	r0, r0
 801ac8a:	4550      	cmp	r0, sl
 801ac8c:	bf88      	it	hi
 801ac8e:	4650      	movhi	r0, sl
 801ac90:	eb08 0104 	add.w	r1, r8, r4
 801ac94:	f8bd 200c 	ldrh.w	r2, [sp, #12]
 801ac98:	9001      	str	r0, [sp, #4]
 801ac9a:	9100      	str	r1, [sp, #0]
 801ac9c:	44a1      	add	r9, r4
 801ac9e:	fa1f f389 	uxth.w	r3, r9
 801aca2:	4629      	mov	r1, r5
 801aca4:	4630      	mov	r0, r6
 801aca6:	f000 fa44 	bl	801b132 <ATT_Build_Prp_Write_Req>
 801acaa:	2864      	cmp	r0, #100	; 0x64
 801acac:	d10a      	bne.n	801acc4 <??GATT_Long_Write_Proc_Cb_12>
 801acae:	2100      	movs	r1, #0
 801acb0:	4628      	mov	r0, r5
 801acb2:	f00a f816 	bl	8024ce2 <ACL_PM_Release>

0801acb6 <??GATT_Long_Write_Proc_Cb_2>:
 801acb6:	2095      	movs	r0, #149	; 0x95
 801acb8:	e02a      	b.n	801ad10 <?Subroutine5>

0801acba <??GATT_Long_Write_Proc_Cb_11>:
 801acba:	2201      	movs	r2, #1

0801acbc <??GATT_Long_Write_Proc_Cb_10>:
 801acbc:	4629      	mov	r1, r5
 801acbe:	4630      	mov	r0, r6
 801acc0:	f000 fa77 	bl	801b1b2 <ATT_Build_Exec_Write_Req>

0801acc4 <??GATT_Long_Write_Proc_Cb_12>:
 801acc4:	4638      	mov	r0, r7
 801acc6:	f7ff f976 	bl	8019fb6 <GATT_Send_Resp_Event>
 801acca:	4628      	mov	r0, r5
 801accc:	f7ff f8e9 	bl	8019ea2 <GATT_Send_Packet>
 801acd0:	e017      	b.n	801ad02 <??GATT_Long_Write_Proc_Cb_3>

0801acd2 <??GATT_Long_Write_Proc_Cb_4>:
 801acd2:	0441      	lsls	r1, r0, #17
 801acd4:	d503      	bpl.n	801acde <??GATT_Long_Write_Proc_Cb_1>
 801acd6:	f420 4080 	bic.w	r0, r0, #16384	; 0x4000
 801acda:	2591      	movs	r5, #145	; 0x91
 801acdc:	6070      	str	r0, [r6, #4]

0801acde <??GATT_Long_Write_Proc_Cb_1>:
 801acde:	4638      	mov	r0, r7
 801ace0:	f7ff f969 	bl	8019fb6 <GATT_Send_Resp_Event>

0801ace4 <??GATT_Long_Write_Proc_Cb_6>:
 801ace4:	2000      	movs	r0, #0
 801ace6:	f8cb 0000 	str.w	r0, [fp]
 801acea:	6871      	ldr	r1, [r6, #4]
 801acec:	4630      	mov	r0, r6
 801acee:	f421 3190 	bic.w	r1, r1, #73728	; 0x12000
 801acf2:	6071      	str	r1, [r6, #4]
 801acf4:	f7ff f944 	bl	8019f80 <GATT_Evt_Handle>
 801acf8:	4601      	mov	r1, r0
 801acfa:	462a      	mov	r2, r5
 801acfc:	2001      	movs	r0, #1
 801acfe:	f004 fa5b 	bl	801f1b8 <EVT_aci_gatt_proc_complete>

0801ad02 <??GATT_Long_Write_Proc_Cb_3>:
 801ad02:	6a30      	ldr	r0, [r6, #32]
 801ad04:	2101      	movs	r1, #1
 801ad06:	f009 ffec 	bl	8024ce2 <ACL_PM_Release>
 801ad0a:	2000      	movs	r0, #0
 801ad0c:	6230      	str	r0, [r6, #32]
 801ad0e:	bf00      	nop

0801ad10 <?Subroutine5>:
 801ad10:	b005      	add	sp, #20
 801ad12:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
	...

0801ad18 <??DataTable7>:
 801ad18:	ad1d 0801                                   ....

0801ad1c <GATT_Exchange_Configuration_Cb>:
 801ad1c:	b538      	push	{r3, r4, r5, lr}
 801ad1e:	4604      	mov	r4, r0
 801ad20:	6a20      	ldr	r0, [r4, #32]
 801ad22:	2500      	movs	r5, #0
 801ad24:	6882      	ldr	r2, [r0, #8]
 801ad26:	88c1      	ldrh	r1, [r0, #6]
 801ad28:	7b13      	ldrb	r3, [r2, #12]
 801ad2a:	2b01      	cmp	r3, #1
 801ad2c:	d020      	beq.n	801ad70 <??GATT_Exchange_Configuration_Cb_0>
 801ad2e:	2903      	cmp	r1, #3
 801ad30:	bf18      	it	ne
 801ad32:	2591      	movne	r5, #145	; 0x91
 801ad34:	d121      	bne.n	801ad7a <??GATT_Exchange_Configuration_Cb_1>
 801ad36:	f102 000d 	add.w	r0, r2, #13
 801ad3a:	7802      	ldrb	r2, [r0, #0]
 801ad3c:	f88d 2000 	strb.w	r2, [sp]
 801ad40:	7842      	ldrb	r2, [r0, #1]
 801ad42:	f88d 2001 	strb.w	r2, [sp, #1]
 801ad46:	6860      	ldr	r0, [r4, #4]
 801ad48:	0581      	lsls	r1, r0, #22
 801ad4a:	d40b      	bmi.n	801ad64 <??GATT_Exchange_Configuration_Cb_2>
 801ad4c:	4a17      	ldr	r2, [pc, #92]	; (801adac <??DataTable8_2>)
 801ad4e:	f8bd 1000 	ldrh.w	r1, [sp]
 801ad52:	f8b2 2206 	ldrh.w	r2, [r2, #518]	; 0x206
 801ad56:	428a      	cmp	r2, r1
 801ad58:	bf88      	it	hi
 801ad5a:	460a      	movhi	r2, r1
 801ad5c:	f440 7000 	orr.w	r0, r0, #512	; 0x200
 801ad60:	8062      	strh	r2, [r4, #2]
 801ad62:	6060      	str	r0, [r4, #4]

0801ad64 <??GATT_Exchange_Configuration_Cb_2>:
 801ad64:	8862      	ldrh	r2, [r4, #2]
 801ad66:	8821      	ldrh	r1, [r4, #0]
 801ad68:	2001      	movs	r0, #1
 801ad6a:	f004 faa8 	bl	801f2be <EVT_aci_att_exchange_mtu_resp>
 801ad6e:	e004      	b.n	801ad7a <??GATT_Exchange_Configuration_Cb_1>

0801ad70 <??GATT_Exchange_Configuration_Cb_0>:
 801ad70:	2591      	movs	r5, #145	; 0x91
 801ad72:	2905      	cmp	r1, #5
 801ad74:	bf08      	it	eq
 801ad76:	f7ff f91e 	bleq	8019fb6 <GATT_Send_Resp_Event>

0801ad7a <??GATT_Exchange_Configuration_Cb_1>:
 801ad7a:	6a20      	ldr	r0, [r4, #32]
 801ad7c:	2101      	movs	r1, #1
 801ad7e:	f009 ffb0 	bl	8024ce2 <ACL_PM_Release>
 801ad82:	6861      	ldr	r1, [r4, #4]
 801ad84:	2000      	movs	r0, #0
 801ad86:	6220      	str	r0, [r4, #32]
 801ad88:	f421 5100 	bic.w	r1, r1, #8192	; 0x2000
 801ad8c:	6061      	str	r1, [r4, #4]
 801ad8e:	4620      	mov	r0, r4
 801ad90:	f7ff f8f6 	bl	8019f80 <GATT_Evt_Handle>
 801ad94:	4601      	mov	r1, r0
 801ad96:	462a      	mov	r2, r5
 801ad98:	2001      	movs	r0, #1
 801ad9a:	f004 fa0d 	bl	801f1b8 <EVT_aci_gatt_proc_complete>
 801ad9e:	2000      	movs	r0, #0
 801ada0:	bd32      	pop	{r1, r4, r5, pc}
	...

0801ada4 <??DataTable8>:
 801ada4:	dc08 0801                                   ....

0801ada8 <??DataTable8_1>:
 801ada8:	3920 2000                                    9. 

0801adac <??DataTable8_2>:
 801adac:	3710 2000                                   .7. 

0801adb0 <ATT_Build_Find_Info_Req>:
 801adb0:	b41c      	push	{r2, r3, r4}
 801adb2:	b122      	cbz	r2, 801adbe <??ATT_Build_Find_Info_Req_0>
 801adb4:	461a      	mov	r2, r3
 801adb6:	f8bd 3000 	ldrh.w	r3, [sp]
 801adba:	429a      	cmp	r2, r3
 801adbc:	d200      	bcs.n	801adc0 <??ATT_Build_Find_Info_Req_1>

0801adbe <??ATT_Build_Find_Info_Req_0>:
 801adbe:	e0c9      	b.n	801af54 <?Subroutine1>

0801adc0 <??ATT_Build_Find_Info_Req_1>:
 801adc0:	688b      	ldr	r3, [r1, #8]
 801adc2:	2204      	movs	r2, #4
 801adc4:	731a      	strb	r2, [r3, #12]
 801adc6:	688b      	ldr	r3, [r1, #8]
 801adc8:	aa01      	add	r2, sp, #4
 801adca:	f103 040d 	add.w	r4, r3, #13
 801adce:	f89d 3000 	ldrb.w	r3, [sp]
 801add2:	7023      	strb	r3, [r4, #0]
 801add4:	f89d 3001 	ldrb.w	r3, [sp, #1]
 801add8:	7063      	strb	r3, [r4, #1]
 801adda:	688b      	ldr	r3, [r1, #8]
 801addc:	f103 040f 	add.w	r4, r3, #15
 801ade0:	7813      	ldrb	r3, [r2, #0]
 801ade2:	7023      	strb	r3, [r4, #0]
 801ade4:	7853      	ldrb	r3, [r2, #1]
 801ade6:	2205      	movs	r2, #5
 801ade8:	7063      	strb	r3, [r4, #1]
 801adea:	80ca      	strh	r2, [r1, #6]
 801adec:	6841      	ldr	r1, [r0, #4]
 801adee:	e0b4      	b.n	801af5a <?Subroutine0>

0801adf0 <ATT_Build_Find_By_Typ_Val_Req>:
 801adf0:	b578      	push	{r3, r4, r5, r6, lr}
 801adf2:	4606      	mov	r6, r0
 801adf4:	b40e      	push	{r1, r2, r3}
 801adf6:	460d      	mov	r5, r1
 801adf8:	0010      	movs	r0, r2
 801adfa:	d006      	beq.n	801ae0a <??ATT_Build_Find_By_Typ_Val_Req_0>
 801adfc:	4293      	cmp	r3, r2
 801adfe:	bf21      	itttt	cs
 801ae00:	9c0a      	ldrcs	r4, [sp, #40]	; 0x28
 801ae02:	8870      	ldrhcs	r0, [r6, #2]
 801ae04:	1fc0      	subcs	r0, r0, #7
 801ae06:	42a0      	cmpcs	r0, r4
 801ae08:	d200      	bcs.n	801ae0c <??ATT_Build_Find_By_Typ_Val_Req_1>

0801ae0a <??ATT_Build_Find_By_Typ_Val_Req_0>:
 801ae0a:	e1c9      	b.n	801b1a0 <?Subroutine5>

0801ae0c <??ATT_Build_Find_By_Typ_Val_Req_1>:
 801ae0c:	68a8      	ldr	r0, [r5, #8]
 801ae0e:	f104 020b 	add.w	r2, r4, #11
 801ae12:	b292      	uxth	r2, r2
 801ae14:	2100      	movs	r1, #0
 801ae16:	f009 ff9e 	bl	8024d56 <ACL_PM_Resize>
 801ae1a:	b100      	cbz	r0, 801ae1e <??ATT_Build_Find_By_Typ_Val_Req_2>
 801ae1c:	e1c3      	b.n	801b1a6 <?Subroutine4>

0801ae1e <??ATT_Build_Find_By_Typ_Val_Req_2>:
 801ae1e:	68a9      	ldr	r1, [r5, #8]
 801ae20:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801ae22:	2006      	movs	r0, #6
 801ae24:	7308      	strb	r0, [r1, #12]
 801ae26:	68a9      	ldr	r1, [r5, #8]
 801ae28:	a801      	add	r0, sp, #4
 801ae2a:	f101 020d 	add.w	r2, r1, #13
 801ae2e:	7801      	ldrb	r1, [r0, #0]
 801ae30:	7011      	strb	r1, [r2, #0]
 801ae32:	7841      	ldrb	r1, [r0, #1]
 801ae34:	a802      	add	r0, sp, #8
 801ae36:	7051      	strb	r1, [r2, #1]
 801ae38:	68a9      	ldr	r1, [r5, #8]
 801ae3a:	f101 020f 	add.w	r2, r1, #15
 801ae3e:	7801      	ldrb	r1, [r0, #0]
 801ae40:	7011      	strb	r1, [r2, #0]
 801ae42:	7841      	ldrb	r1, [r0, #1]
 801ae44:	a808      	add	r0, sp, #32
 801ae46:	7051      	strb	r1, [r2, #1]
 801ae48:	68a9      	ldr	r1, [r5, #8]
 801ae4a:	f101 0211 	add.w	r2, r1, #17
 801ae4e:	7801      	ldrb	r1, [r0, #0]
 801ae50:	7011      	strb	r1, [r2, #0]
 801ae52:	7841      	ldrb	r1, [r0, #1]
 801ae54:	4628      	mov	r0, r5
 801ae56:	7051      	strb	r1, [r2, #1]
 801ae58:	4622      	mov	r2, r4
 801ae5a:	210b      	movs	r1, #11
 801ae5c:	f009 ffcd 	bl	8024dfa <ACL_PM_Set_Data>
 801ae60:	1de4      	adds	r4, r4, #7
 801ae62:	80ec      	strh	r4, [r5, #6]
 801ae64:	6870      	ldr	r0, [r6, #4]
 801ae66:	2107      	movs	r1, #7
 801ae68:	76b1      	strb	r1, [r6, #26]
 801ae6a:	f440 6004 	orr.w	r0, r0, #2112	; 0x840
 801ae6e:	6070      	str	r0, [r6, #4]
 801ae70:	e19c      	b.n	801b1ac <?Subroutine3>

0801ae72 <ATT_Build_Read_By_Typ_Req>:
 801ae72:	b538      	push	{r3, r4, r5, lr}
 801ae74:	4604      	mov	r4, r0
 801ae76:	b40c      	push	{r2, r3}
 801ae78:	460d      	mov	r5, r1
 801ae7a:	0010      	movs	r0, r2
 801ae7c:	d031      	beq.n	801aee2 <??ATT_Build_Read_By_Typ_Req_0>
 801ae7e:	4293      	cmp	r3, r2
 801ae80:	d32f      	bcc.n	801aee2 <??ATT_Build_Read_By_Typ_Req_0>
 801ae82:	68aa      	ldr	r2, [r5, #8]
 801ae84:	9807      	ldr	r0, [sp, #28]
 801ae86:	2108      	movs	r1, #8
 801ae88:	7311      	strb	r1, [r2, #12]
 801ae8a:	68aa      	ldr	r2, [r5, #8]
 801ae8c:	a901      	add	r1, sp, #4
 801ae8e:	2801      	cmp	r0, #1
 801ae90:	f102 030d 	add.w	r3, r2, #13
 801ae94:	f89d 2000 	ldrb.w	r2, [sp]
 801ae98:	701a      	strb	r2, [r3, #0]
 801ae9a:	f89d 2001 	ldrb.w	r2, [sp, #1]
 801ae9e:	705a      	strb	r2, [r3, #1]
 801aea0:	68aa      	ldr	r2, [r5, #8]
 801aea2:	f102 030f 	add.w	r3, r2, #15
 801aea6:	780a      	ldrb	r2, [r1, #0]
 801aea8:	701a      	strb	r2, [r3, #0]
 801aeaa:	784a      	ldrb	r2, [r1, #1]
 801aeac:	705a      	strb	r2, [r3, #1]
 801aeae:	9b06      	ldr	r3, [sp, #24]
 801aeb0:	d10e      	bne.n	801aed0 <??ATT_Build_Read_By_Typ_Req_1>
 801aeb2:	68a8      	ldr	r0, [r5, #8]
 801aeb4:	f100 0111 	add.w	r1, r0, #17
 801aeb8:	7818      	ldrb	r0, [r3, #0]
 801aeba:	7008      	strb	r0, [r1, #0]
 801aebc:	7858      	ldrb	r0, [r3, #1]
 801aebe:	7048      	strb	r0, [r1, #1]
 801aec0:	2007      	movs	r0, #7

0801aec2 <??ATT_Build_Read_By_Typ_Req_2>:
 801aec2:	6861      	ldr	r1, [r4, #4]
 801aec4:	f441 6104 	orr.w	r1, r1, #2112	; 0x840
 801aec8:	6061      	str	r1, [r4, #4]
 801aeca:	80e8      	strh	r0, [r5, #6]
 801aecc:	2009      	movs	r0, #9
 801aece:	e0b6      	b.n	801b03e <?Subroutine6>

0801aed0 <??ATT_Build_Read_By_Typ_Req_1>:
 801aed0:	2802      	cmp	r0, #2
 801aed2:	d106      	bne.n	801aee2 <??ATT_Build_Read_By_Typ_Req_0>
 801aed4:	2210      	movs	r2, #16
 801aed6:	2109      	movs	r1, #9
 801aed8:	4628      	mov	r0, r5
 801aeda:	f009 ff8e 	bl	8024dfa <ACL_PM_Set_Data>
 801aede:	2015      	movs	r0, #21
 801aee0:	e7ef      	b.n	801aec2 <??ATT_Build_Read_By_Typ_Req_2>

0801aee2 <??ATT_Build_Read_By_Typ_Req_0>:
 801aee2:	e0a9      	b.n	801b038 <??ATT_Build_Read_By_Grp_Typ_Req_0>

0801aee4 <ATT_Build_Read_Req>:
 801aee4:	b414      	push	{r2, r4}
 801aee6:	b912      	cbnz	r2, 801aeee <??ATT_Build_Read_Req_0>
 801aee8:	2092      	movs	r0, #146	; 0x92
 801aeea:	bc12      	pop	{r1, r4}
 801aeec:	4770      	bx	lr

0801aeee <??ATT_Build_Read_Req_0>:
 801aeee:	688b      	ldr	r3, [r1, #8]
 801aef0:	220a      	movs	r2, #10
 801aef2:	731a      	strb	r2, [r3, #12]
 801aef4:	688b      	ldr	r3, [r1, #8]
 801aef6:	2203      	movs	r2, #3
 801aef8:	f103 040d 	add.w	r4, r3, #13
 801aefc:	f89d 3000 	ldrb.w	r3, [sp]
 801af00:	7023      	strb	r3, [r4, #0]
 801af02:	f89d 3001 	ldrb.w	r3, [sp, #1]
 801af06:	7063      	strb	r3, [r4, #1]
 801af08:	80ca      	strh	r2, [r1, #6]
 801af0a:	6841      	ldr	r1, [r0, #4]
 801af0c:	220b      	movs	r2, #11
 801af0e:	7682      	strb	r2, [r0, #26]
 801af10:	f441 6104 	orr.w	r1, r1, #2112	; 0x840
 801af14:	6041      	str	r1, [r0, #4]
 801af16:	2000      	movs	r0, #0
 801af18:	bc12      	pop	{r1, r4}
 801af1a:	4770      	bx	lr

0801af1c <ATT_Build_Read_Blob_Req>:
 801af1c:	b41c      	push	{r2, r3, r4}
 801af1e:	b902      	cbnz	r2, 801af22 <??ATT_Build_Read_Blob_Req_0>
 801af20:	e018      	b.n	801af54 <?Subroutine1>

0801af22 <??ATT_Build_Read_Blob_Req_0>:
 801af22:	688b      	ldr	r3, [r1, #8]
 801af24:	220c      	movs	r2, #12
 801af26:	731a      	strb	r2, [r3, #12]
 801af28:	688b      	ldr	r3, [r1, #8]
 801af2a:	aa01      	add	r2, sp, #4
 801af2c:	f103 040d 	add.w	r4, r3, #13
 801af30:	f89d 3000 	ldrb.w	r3, [sp]
 801af34:	7023      	strb	r3, [r4, #0]
 801af36:	f89d 3001 	ldrb.w	r3, [sp, #1]
 801af3a:	7063      	strb	r3, [r4, #1]
 801af3c:	688b      	ldr	r3, [r1, #8]
 801af3e:	f103 040f 	add.w	r4, r3, #15
 801af42:	7813      	ldrb	r3, [r2, #0]
 801af44:	7023      	strb	r3, [r4, #0]
 801af46:	7853      	ldrb	r3, [r2, #1]
 801af48:	2205      	movs	r2, #5
 801af4a:	7063      	strb	r3, [r4, #1]
 801af4c:	80ca      	strh	r2, [r1, #6]
 801af4e:	6841      	ldr	r1, [r0, #4]
 801af50:	220d      	movs	r2, #13
 801af52:	e002      	b.n	801af5a <?Subroutine0>

0801af54 <?Subroutine1>:
 801af54:	2092      	movs	r0, #146	; 0x92
 801af56:	bc16      	pop	{r1, r2, r4}
 801af58:	4770      	bx	lr

0801af5a <?Subroutine0>:
 801af5a:	7682      	strb	r2, [r0, #26]
 801af5c:	f441 6104 	orr.w	r1, r1, #2112	; 0x840
 801af60:	6041      	str	r1, [r0, #4]
 801af62:	2000      	movs	r0, #0
 801af64:	bc16      	pop	{r1, r2, r4}
 801af66:	4770      	bx	lr

0801af68 <ATT_Build_Read_Mult_Req>:
 801af68:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 801af6c:	4604      	mov	r4, r0
 801af6e:	8860      	ldrh	r0, [r4, #2]
 801af70:	005e      	lsls	r6, r3, #1
 801af72:	b2b6      	uxth	r6, r6
 801af74:	1e40      	subs	r0, r0, #1
 801af76:	460d      	mov	r5, r1
 801af78:	4690      	mov	r8, r2
 801af7a:	42b0      	cmp	r0, r6
 801af7c:	bf2c      	ite	cs
 801af7e:	2e04      	cmpcs	r6, #4
 801af80:	2092      	movcc	r0, #146	; 0x92
 801af82:	d31f      	bcc.n	801afc4 <??ATT_Build_Read_Mult_Req_0>
 801af84:	68a8      	ldr	r0, [r5, #8]
 801af86:	1d72      	adds	r2, r6, #5
 801af88:	b292      	uxth	r2, r2
 801af8a:	2100      	movs	r1, #0
 801af8c:	f009 fee3 	bl	8024d56 <ACL_PM_Resize>
 801af90:	b110      	cbz	r0, 801af98 <??ATT_Build_Read_Mult_Req_1>
 801af92:	2064      	movs	r0, #100	; 0x64
 801af94:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0801af98 <??ATT_Build_Read_Mult_Req_1>:
 801af98:	9806      	ldr	r0, [sp, #24]
 801af9a:	2800      	cmp	r0, #0
 801af9c:	bf14      	ite	ne
 801af9e:	2720      	movne	r7, #32
 801afa0:	270e      	moveq	r7, #14
 801afa2:	68a8      	ldr	r0, [r5, #8]
 801afa4:	4643      	mov	r3, r8
 801afa6:	4632      	mov	r2, r6
 801afa8:	7307      	strb	r7, [r0, #12]
 801afaa:	2105      	movs	r1, #5
 801afac:	4628      	mov	r0, r5
 801afae:	f009 ff24 	bl	8024dfa <ACL_PM_Set_Data>
 801afb2:	1c76      	adds	r6, r6, #1
 801afb4:	80ee      	strh	r6, [r5, #6]
 801afb6:	6860      	ldr	r0, [r4, #4]
 801afb8:	1c7f      	adds	r7, r7, #1
 801afba:	f440 6004 	orr.w	r0, r0, #2112	; 0x840
 801afbe:	6060      	str	r0, [r4, #4]
 801afc0:	76a7      	strb	r7, [r4, #26]
 801afc2:	2000      	movs	r0, #0

0801afc4 <??ATT_Build_Read_Mult_Req_0>:
 801afc4:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0801afc8 <ATT_Build_Read_By_Grp_Typ_Req>:
 801afc8:	b538      	push	{r3, r4, r5, lr}
 801afca:	4604      	mov	r4, r0
 801afcc:	b40c      	push	{r2, r3}
 801afce:	460d      	mov	r5, r1
 801afd0:	0010      	movs	r0, r2
 801afd2:	d031      	beq.n	801b038 <??ATT_Build_Read_By_Grp_Typ_Req_0>
 801afd4:	4293      	cmp	r3, r2
 801afd6:	d32f      	bcc.n	801b038 <??ATT_Build_Read_By_Grp_Typ_Req_0>
 801afd8:	68aa      	ldr	r2, [r5, #8]
 801afda:	9807      	ldr	r0, [sp, #28]
 801afdc:	2110      	movs	r1, #16
 801afde:	7311      	strb	r1, [r2, #12]
 801afe0:	68aa      	ldr	r2, [r5, #8]
 801afe2:	a901      	add	r1, sp, #4
 801afe4:	2801      	cmp	r0, #1
 801afe6:	f102 030d 	add.w	r3, r2, #13
 801afea:	f89d 2000 	ldrb.w	r2, [sp]
 801afee:	701a      	strb	r2, [r3, #0]
 801aff0:	f89d 2001 	ldrb.w	r2, [sp, #1]
 801aff4:	705a      	strb	r2, [r3, #1]
 801aff6:	68aa      	ldr	r2, [r5, #8]
 801aff8:	f102 030f 	add.w	r3, r2, #15
 801affc:	780a      	ldrb	r2, [r1, #0]
 801affe:	701a      	strb	r2, [r3, #0]
 801b000:	784a      	ldrb	r2, [r1, #1]
 801b002:	705a      	strb	r2, [r3, #1]
 801b004:	9b06      	ldr	r3, [sp, #24]
 801b006:	d10e      	bne.n	801b026 <??ATT_Build_Read_By_Grp_Typ_Req_1>
 801b008:	68a8      	ldr	r0, [r5, #8]
 801b00a:	f100 0111 	add.w	r1, r0, #17
 801b00e:	7818      	ldrb	r0, [r3, #0]
 801b010:	7008      	strb	r0, [r1, #0]
 801b012:	7858      	ldrb	r0, [r3, #1]
 801b014:	7048      	strb	r0, [r1, #1]
 801b016:	2007      	movs	r0, #7

0801b018 <??ATT_Build_Read_By_Grp_Typ_Req_2>:
 801b018:	6861      	ldr	r1, [r4, #4]
 801b01a:	f441 6104 	orr.w	r1, r1, #2112	; 0x840
 801b01e:	6061      	str	r1, [r4, #4]
 801b020:	80e8      	strh	r0, [r5, #6]
 801b022:	2011      	movs	r0, #17
 801b024:	e00b      	b.n	801b03e <?Subroutine6>

0801b026 <??ATT_Build_Read_By_Grp_Typ_Req_1>:
 801b026:	2802      	cmp	r0, #2
 801b028:	d106      	bne.n	801b038 <??ATT_Build_Read_By_Grp_Typ_Req_0>
 801b02a:	2210      	movs	r2, #16
 801b02c:	2109      	movs	r1, #9
 801b02e:	4628      	mov	r0, r5
 801b030:	f009 fee3 	bl	8024dfa <ACL_PM_Set_Data>
 801b034:	2015      	movs	r0, #21
 801b036:	e7ef      	b.n	801b018 <??ATT_Build_Read_By_Grp_Typ_Req_2>

0801b038 <??ATT_Build_Read_By_Grp_Typ_Req_0>:
 801b038:	2092      	movs	r0, #146	; 0x92
 801b03a:	b003      	add	sp, #12
 801b03c:	bd30      	pop	{r4, r5, pc}

0801b03e <?Subroutine6>:
 801b03e:	76a0      	strb	r0, [r4, #26]
 801b040:	2000      	movs	r0, #0
 801b042:	b003      	add	sp, #12
 801b044:	bd30      	pop	{r4, r5, pc}

0801b046 <ATT_Build_Write_Req>:
 801b046:	b5f4      	push	{r2, r4, r5, r6, r7, lr}
 801b048:	4605      	mov	r5, r0
 801b04a:	460e      	mov	r6, r1
 801b04c:	461f      	mov	r7, r3
 801b04e:	0010      	movs	r0, r2
 801b050:	d004      	beq.n	801b05c <??ATT_Build_Write_Req_0>
 801b052:	8868      	ldrh	r0, [r5, #2]
 801b054:	9c06      	ldr	r4, [sp, #24]
 801b056:	1ec0      	subs	r0, r0, #3
 801b058:	42a0      	cmp	r0, r4
 801b05a:	d201      	bcs.n	801b060 <??ATT_Build_Write_Req_1>

0801b05c <??ATT_Build_Write_Req_0>:
 801b05c:	2092      	movs	r0, #146	; 0x92
 801b05e:	bdf2      	pop	{r1, r4, r5, r6, r7, pc}

0801b060 <??ATT_Build_Write_Req_1>:
 801b060:	68b0      	ldr	r0, [r6, #8]
 801b062:	1de2      	adds	r2, r4, #7
 801b064:	b292      	uxth	r2, r2
 801b066:	2100      	movs	r1, #0
 801b068:	f009 fe75 	bl	8024d56 <ACL_PM_Resize>
 801b06c:	b108      	cbz	r0, 801b072 <??ATT_Build_Write_Req_2>
 801b06e:	2064      	movs	r0, #100	; 0x64
 801b070:	bdf2      	pop	{r1, r4, r5, r6, r7, pc}

0801b072 <??ATT_Build_Write_Req_2>:
 801b072:	68b1      	ldr	r1, [r6, #8]
 801b074:	2012      	movs	r0, #18
 801b076:	463b      	mov	r3, r7
 801b078:	7308      	strb	r0, [r1, #12]
 801b07a:	68b1      	ldr	r1, [r6, #8]
 801b07c:	4630      	mov	r0, r6
 801b07e:	f101 020d 	add.w	r2, r1, #13
 801b082:	f89d 1000 	ldrb.w	r1, [sp]
 801b086:	7011      	strb	r1, [r2, #0]
 801b088:	f89d 1001 	ldrb.w	r1, [sp, #1]
 801b08c:	7051      	strb	r1, [r2, #1]
 801b08e:	4622      	mov	r2, r4
 801b090:	2107      	movs	r1, #7
 801b092:	f009 feb2 	bl	8024dfa <ACL_PM_Set_Data>
 801b096:	1ce4      	adds	r4, r4, #3
 801b098:	80f4      	strh	r4, [r6, #6]
 801b09a:	6868      	ldr	r0, [r5, #4]
 801b09c:	2113      	movs	r1, #19
 801b09e:	76a9      	strb	r1, [r5, #26]
 801b0a0:	f440 6004 	orr.w	r0, r0, #2112	; 0x840
 801b0a4:	6068      	str	r0, [r5, #4]
 801b0a6:	2000      	movs	r0, #0
 801b0a8:	bdf2      	pop	{r1, r4, r5, r6, r7, pc}

0801b0aa <ATT_Build_Write_Cmd>:
 801b0aa:	b576      	push	{r1, r2, r4, r5, r6, lr}
 801b0ac:	460d      	mov	r5, r1
 801b0ae:	0011      	movs	r1, r2
 801b0b0:	d004      	beq.n	801b0bc <??ATT_Build_Write_Cmd_0>
 801b0b2:	8840      	ldrh	r0, [r0, #2]
 801b0b4:	9c06      	ldr	r4, [sp, #24]
 801b0b6:	1ec0      	subs	r0, r0, #3
 801b0b8:	42a0      	cmp	r0, r4
 801b0ba:	d201      	bcs.n	801b0c0 <??ATT_Build_Write_Cmd_1>

0801b0bc <??ATT_Build_Write_Cmd_0>:
 801b0bc:	2092      	movs	r0, #146	; 0x92
 801b0be:	bd76      	pop	{r1, r2, r4, r5, r6, pc}

0801b0c0 <??ATT_Build_Write_Cmd_1>:
 801b0c0:	68a9      	ldr	r1, [r5, #8]
 801b0c2:	2052      	movs	r0, #82	; 0x52
 801b0c4:	7308      	strb	r0, [r1, #12]
 801b0c6:	a801      	add	r0, sp, #4
 801b0c8:	68aa      	ldr	r2, [r5, #8]
 801b0ca:	7801      	ldrb	r1, [r0, #0]
 801b0cc:	f102 060d 	add.w	r6, r2, #13
 801b0d0:	4622      	mov	r2, r4
 801b0d2:	7031      	strb	r1, [r6, #0]
 801b0d4:	7841      	ldrb	r1, [r0, #1]
 801b0d6:	4628      	mov	r0, r5
 801b0d8:	1ce4      	adds	r4, r4, #3
 801b0da:	7071      	strb	r1, [r6, #1]
 801b0dc:	2107      	movs	r1, #7
 801b0de:	f009 fe8c 	bl	8024dfa <ACL_PM_Set_Data>
 801b0e2:	80ec      	strh	r4, [r5, #6]
 801b0e4:	2000      	movs	r0, #0
 801b0e6:	bd76      	pop	{r1, r2, r4, r5, r6, pc}

0801b0e8 <ATT_Build_Signd_Write_Cmd>:
 801b0e8:	b5f4      	push	{r2, r4, r5, r6, r7, lr}
 801b0ea:	4605      	mov	r5, r0
 801b0ec:	460e      	mov	r6, r1
 801b0ee:	0010      	movs	r0, r2
 801b0f0:	d004      	beq.n	801b0fc <??ATT_Build_Signd_Write_Cmd_0>
 801b0f2:	8868      	ldrh	r0, [r5, #2]
 801b0f4:	9c06      	ldr	r4, [sp, #24]
 801b0f6:	380f      	subs	r0, #15
 801b0f8:	42a0      	cmp	r0, r4
 801b0fa:	d201      	bcs.n	801b100 <??ATT_Build_Signd_Write_Cmd_1>

0801b0fc <??ATT_Build_Signd_Write_Cmd_0>:
 801b0fc:	2092      	movs	r0, #146	; 0x92
 801b0fe:	bdf2      	pop	{r1, r4, r5, r6, r7, pc}

0801b100 <??ATT_Build_Signd_Write_Cmd_1>:
 801b100:	68b1      	ldr	r1, [r6, #8]
 801b102:	20d2      	movs	r0, #210	; 0xd2
 801b104:	7308      	strb	r0, [r1, #12]
 801b106:	68b2      	ldr	r2, [r6, #8]
 801b108:	f89d 1000 	ldrb.w	r1, [sp]
 801b10c:	4630      	mov	r0, r6
 801b10e:	f102 070d 	add.w	r7, r2, #13
 801b112:	7039      	strb	r1, [r7, #0]
 801b114:	f89d 1001 	ldrb.w	r1, [sp, #1]
 801b118:	4622      	mov	r2, r4
 801b11a:	1ce4      	adds	r4, r4, #3
 801b11c:	7079      	strb	r1, [r7, #1]
 801b11e:	2107      	movs	r1, #7
 801b120:	f009 fe6b 	bl	8024dfa <ACL_PM_Set_Data>
 801b124:	80f4      	strh	r4, [r6, #6]
 801b126:	8828      	ldrh	r0, [r5, #0]
 801b128:	4631      	mov	r1, r6
 801b12a:	f007 f94b 	bl	80223c4 <SMP_Sign_Packet>
 801b12e:	2000      	movs	r0, #0
 801b130:	bdf2      	pop	{r1, r4, r5, r6, r7, pc}

0801b132 <ATT_Build_Prp_Write_Req>:
 801b132:	b578      	push	{r3, r4, r5, r6, lr}
 801b134:	4605      	mov	r5, r0
 801b136:	b40e      	push	{r1, r2, r3}
 801b138:	460e      	mov	r6, r1
 801b13a:	0010      	movs	r0, r2
 801b13c:	d004      	beq.n	801b148 <??ATT_Build_Prp_Write_Req_0>
 801b13e:	8868      	ldrh	r0, [r5, #2]
 801b140:	9c09      	ldr	r4, [sp, #36]	; 0x24
 801b142:	1f40      	subs	r0, r0, #5
 801b144:	42a0      	cmp	r0, r4
 801b146:	d200      	bcs.n	801b14a <??ATT_Build_Prp_Write_Req_1>

0801b148 <??ATT_Build_Prp_Write_Req_0>:
 801b148:	e02a      	b.n	801b1a0 <?Subroutine5>

0801b14a <??ATT_Build_Prp_Write_Req_1>:
 801b14a:	68b0      	ldr	r0, [r6, #8]
 801b14c:	f104 0209 	add.w	r2, r4, #9
 801b150:	b292      	uxth	r2, r2
 801b152:	2100      	movs	r1, #0
 801b154:	f009 fdff 	bl	8024d56 <ACL_PM_Resize>
 801b158:	b100      	cbz	r0, 801b15c <??ATT_Build_Prp_Write_Req_2>
 801b15a:	e024      	b.n	801b1a6 <?Subroutine4>

0801b15c <??ATT_Build_Prp_Write_Req_2>:
 801b15c:	68b1      	ldr	r1, [r6, #8]
 801b15e:	9b08      	ldr	r3, [sp, #32]
 801b160:	2016      	movs	r0, #22
 801b162:	7308      	strb	r0, [r1, #12]
 801b164:	68b1      	ldr	r1, [r6, #8]
 801b166:	a801      	add	r0, sp, #4
 801b168:	f101 020d 	add.w	r2, r1, #13
 801b16c:	7801      	ldrb	r1, [r0, #0]
 801b16e:	7011      	strb	r1, [r2, #0]
 801b170:	7841      	ldrb	r1, [r0, #1]
 801b172:	a802      	add	r0, sp, #8
 801b174:	7051      	strb	r1, [r2, #1]
 801b176:	68b1      	ldr	r1, [r6, #8]
 801b178:	f101 020f 	add.w	r2, r1, #15
 801b17c:	7801      	ldrb	r1, [r0, #0]
 801b17e:	7011      	strb	r1, [r2, #0]
 801b180:	7841      	ldrb	r1, [r0, #1]
 801b182:	4630      	mov	r0, r6
 801b184:	7051      	strb	r1, [r2, #1]
 801b186:	4622      	mov	r2, r4
 801b188:	2109      	movs	r1, #9
 801b18a:	f009 fe36 	bl	8024dfa <ACL_PM_Set_Data>
 801b18e:	1d64      	adds	r4, r4, #5
 801b190:	80f4      	strh	r4, [r6, #6]
 801b192:	6868      	ldr	r0, [r5, #4]
 801b194:	2117      	movs	r1, #23
 801b196:	76a9      	strb	r1, [r5, #26]
 801b198:	f440 6004 	orr.w	r0, r0, #2112	; 0x840
 801b19c:	6068      	str	r0, [r5, #4]
 801b19e:	e005      	b.n	801b1ac <?Subroutine3>

0801b1a0 <?Subroutine5>:
 801b1a0:	2092      	movs	r0, #146	; 0x92
 801b1a2:	b004      	add	sp, #16
 801b1a4:	bd70      	pop	{r4, r5, r6, pc}

0801b1a6 <?Subroutine4>:
 801b1a6:	2064      	movs	r0, #100	; 0x64
 801b1a8:	b004      	add	sp, #16
 801b1aa:	bd70      	pop	{r4, r5, r6, pc}

0801b1ac <?Subroutine3>:
 801b1ac:	2000      	movs	r0, #0
 801b1ae:	b004      	add	sp, #16
 801b1b0:	bd70      	pop	{r4, r5, r6, pc}

0801b1b2 <ATT_Build_Exec_Write_Req>:
 801b1b2:	f8d1 c008 	ldr.w	ip, [r1, #8]
 801b1b6:	2318      	movs	r3, #24
 801b1b8:	f88c 300c 	strb.w	r3, [ip, #12]
 801b1bc:	688b      	ldr	r3, [r1, #8]
 801b1be:	735a      	strb	r2, [r3, #13]
 801b1c0:	2202      	movs	r2, #2
 801b1c2:	80ca      	strh	r2, [r1, #6]
 801b1c4:	6841      	ldr	r1, [r0, #4]
 801b1c6:	2219      	movs	r2, #25
 801b1c8:	7682      	strb	r2, [r0, #26]
 801b1ca:	f441 6104 	orr.w	r1, r1, #2112	; 0x840
 801b1ce:	6041      	str	r1, [r0, #4]
 801b1d0:	2000      	movs	r0, #0
 801b1d2:	4770      	bx	lr

0801b1d4 <ATT_Build_Confirmation>:
 801b1d4:	688a      	ldr	r2, [r1, #8]
 801b1d6:	201e      	movs	r0, #30
 801b1d8:	7310      	strb	r0, [r2, #12]
 801b1da:	2001      	movs	r0, #1
 801b1dc:	e010      	b.n	801b200 <?Subroutine2>

0801b1de <ATT_Build_Exchg_Mtu_Req>:
 801b1de:	6840      	ldr	r0, [r0, #4]
 801b1e0:	0582      	lsls	r2, r0, #22
 801b1e2:	d501      	bpl.n	801b1e8 <??ATT_Build_Exchg_Mtu_Req_0>
 801b1e4:	200c      	movs	r0, #12
 801b1e6:	4770      	bx	lr

0801b1e8 <??ATT_Build_Exchg_Mtu_Req_0>:
 801b1e8:	688a      	ldr	r2, [r1, #8]
 801b1ea:	2002      	movs	r0, #2
 801b1ec:	7310      	strb	r0, [r2, #12]
 801b1ee:	688a      	ldr	r2, [r1, #8]
 801b1f0:	4805      	ldr	r0, [pc, #20]	; (801b208 <??DataTable1>)
 801b1f2:	f102 030d 	add.w	r3, r2, #13
 801b1f6:	7802      	ldrb	r2, [r0, #0]
 801b1f8:	701a      	strb	r2, [r3, #0]
 801b1fa:	7842      	ldrb	r2, [r0, #1]
 801b1fc:	2003      	movs	r0, #3
 801b1fe:	705a      	strb	r2, [r3, #1]

0801b200 <?Subroutine2>:
 801b200:	80c8      	strh	r0, [r1, #6]
 801b202:	2000      	movs	r0, #0
 801b204:	4770      	bx	lr
	...

0801b208 <??DataTable1>:
 801b208:	3916 2000                                   .9. 

0801b20c <aci_att_find_info_req>:
 801b20c:	b57c      	push	{r2, r3, r4, r5, r6, lr}
 801b20e:	460d      	mov	r5, r1
 801b210:	4616      	mov	r6, r2
 801b212:	ab01      	add	r3, sp, #4
 801b214:	466a      	mov	r2, sp
 801b216:	2101      	movs	r1, #1
 801b218:	f7fe feb4 	bl	8019f84 <GATT_New_Request>
 801b21c:	0004      	movs	r4, r0
 801b21e:	d118      	bne.n	801b252 <??aci_att_find_info_req_0>
 801b220:	9901      	ldr	r1, [sp, #4]
 801b222:	9800      	ldr	r0, [sp, #0]
 801b224:	4633      	mov	r3, r6
 801b226:	462a      	mov	r2, r5
 801b228:	f7ff fdc2 	bl	801adb0 <ATT_Build_Find_Info_Req>
 801b22c:	0004      	movs	r4, r0
 801b22e:	d10c      	bne.n	801b24a <??aci_att_find_info_req_1>
 801b230:	9800      	ldr	r0, [sp, #0]
 801b232:	6841      	ldr	r1, [r0, #4]
 801b234:	f441 5100 	orr.w	r1, r1, #8192	; 0x2000
 801b238:	6041      	str	r1, [r0, #4]
 801b23a:	9800      	ldr	r0, [sp, #0]
 801b23c:	f20f 1149 	addw	r1, pc, #329	; 0x149
 801b240:	61c1      	str	r1, [r0, #28]
 801b242:	9801      	ldr	r0, [sp, #4]
 801b244:	f7fe fe2d 	bl	8019ea2 <GATT_Send_Packet>
 801b248:	e003      	b.n	801b252 <??aci_att_find_info_req_0>

0801b24a <??aci_att_find_info_req_1>:
 801b24a:	9801      	ldr	r0, [sp, #4]
 801b24c:	2100      	movs	r1, #0
 801b24e:	f009 fd48 	bl	8024ce2 <ACL_PM_Release>

0801b252 <??aci_att_find_info_req_0>:
 801b252:	4620      	mov	r0, r4
 801b254:	bd76      	pop	{r1, r2, r4, r5, r6, pc}

0801b256 <aci_att_find_by_type_value_req>:
 801b256:	b530      	push	{r4, r5, lr}
 801b258:	b083      	sub	sp, #12
 801b25a:	9c06      	ldr	r4, [sp, #24]
 801b25c:	9d07      	ldr	r5, [sp, #28]
 801b25e:	9300      	str	r3, [sp, #0]
 801b260:	9401      	str	r4, [sp, #4]
 801b262:	9502      	str	r5, [sp, #8]
 801b264:	2302      	movs	r3, #2
 801b266:	e007      	b.n	801b278 <?Subroutine0>

0801b268 <aci_att_read_by_group_type_req>:
 801b268:	b530      	push	{r4, r5, lr}
 801b26a:	b083      	sub	sp, #12
 801b26c:	9d06      	ldr	r5, [sp, #24]
 801b26e:	2400      	movs	r4, #0
 801b270:	9300      	str	r3, [sp, #0]
 801b272:	9402      	str	r4, [sp, #8]
 801b274:	9501      	str	r5, [sp, #4]
 801b276:	2304      	movs	r3, #4

0801b278 <?Subroutine0>:
 801b278:	f000 f81f 	bl	801b2ba <GATT_Att_Req>
 801b27c:	b003      	add	sp, #12
 801b27e:	bd30      	pop	{r4, r5, pc}

0801b280 <aci_att_read_by_type_req>:
 801b280:	b530      	push	{r4, r5, lr}
 801b282:	b083      	sub	sp, #12
 801b284:	9d06      	ldr	r5, [sp, #24]
 801b286:	2400      	movs	r4, #0
 801b288:	9300      	str	r3, [sp, #0]
 801b28a:	9402      	str	r4, [sp, #8]
 801b28c:	9501      	str	r5, [sp, #4]
 801b28e:	2308      	movs	r3, #8
 801b290:	e7f2      	b.n	801b278 <?Subroutine0>

0801b292 <aci_att_prepare_write_req>:
 801b292:	b530      	push	{r4, r5, lr}
 801b294:	b083      	sub	sp, #12
 801b296:	9d06      	ldr	r5, [sp, #24]
 801b298:	2400      	movs	r4, #0
 801b29a:	9300      	str	r3, [sp, #0]
 801b29c:	9402      	str	r4, [sp, #8]
 801b29e:	9501      	str	r5, [sp, #4]
 801b2a0:	2310      	movs	r3, #16
 801b2a2:	e7e9      	b.n	801b278 <?Subroutine0>

0801b2a4 <aci_att_execute_write_req>:
 801b2a4:	b500      	push	{lr}
 801b2a6:	b083      	sub	sp, #12
 801b2a8:	2200      	movs	r2, #0
 801b2aa:	9202      	str	r2, [sp, #8]
 801b2ac:	9201      	str	r2, [sp, #4]
 801b2ae:	9200      	str	r2, [sp, #0]
 801b2b0:	2320      	movs	r3, #32
 801b2b2:	f000 f802 	bl	801b2ba <GATT_Att_Req>
 801b2b6:	b003      	add	sp, #12
 801b2b8:	bd00      	pop	{pc}

0801b2ba <GATT_Att_Req>:
 801b2ba:	b5f0      	push	{r4, r5, r6, r7, lr}
 801b2bc:	b085      	sub	sp, #20
 801b2be:	460c      	mov	r4, r1
 801b2c0:	4615      	mov	r5, r2
 801b2c2:	461e      	mov	r6, r3
 801b2c4:	ab04      	add	r3, sp, #16
 801b2c6:	aa03      	add	r2, sp, #12
 801b2c8:	2101      	movs	r1, #1
 801b2ca:	f7fe fe5b 	bl	8019f84 <GATT_New_Request>
 801b2ce:	0007      	movs	r7, r0
 801b2d0:	d156      	bne.n	801b380 <??GATT_Att_Req_0>
 801b2d2:	07f0      	lsls	r0, r6, #31
 801b2d4:	d506      	bpl.n	801b2e4 <??GATT_Att_Req_1>
 801b2d6:	9904      	ldr	r1, [sp, #16]
 801b2d8:	9803      	ldr	r0, [sp, #12]
 801b2da:	462b      	mov	r3, r5
 801b2dc:	4622      	mov	r2, r4
 801b2de:	f7ff fd67 	bl	801adb0 <ATT_Build_Find_Info_Req>
 801b2e2:	e039      	b.n	801b358 <??GATT_Att_Req_2>

0801b2e4 <??GATT_Att_Req_1>:
 801b2e4:	980a      	ldr	r0, [sp, #40]	; 0x28
 801b2e6:	990b      	ldr	r1, [sp, #44]	; 0x2c
 801b2e8:	07b2      	lsls	r2, r6, #30
 801b2ea:	d50c      	bpl.n	801b306 <??GATT_Att_Req_3>
 801b2ec:	b289      	uxth	r1, r1
 801b2ee:	9102      	str	r1, [sp, #8]
 801b2f0:	990c      	ldr	r1, [sp, #48]	; 0x30
 801b2f2:	b280      	uxth	r0, r0
 801b2f4:	9000      	str	r0, [sp, #0]
 801b2f6:	9101      	str	r1, [sp, #4]
 801b2f8:	9904      	ldr	r1, [sp, #16]
 801b2fa:	9803      	ldr	r0, [sp, #12]
 801b2fc:	462b      	mov	r3, r5
 801b2fe:	4622      	mov	r2, r4
 801b300:	f7ff fd76 	bl	801adf0 <ATT_Build_Find_By_Typ_Val_Req>
 801b304:	e028      	b.n	801b358 <??GATT_Att_Req_2>

0801b306 <??GATT_Att_Req_3>:
 801b306:	f016 0f0c 	tst.w	r6, #12
 801b30a:	d00e      	beq.n	801b32a <??GATT_Att_Req_4>
 801b30c:	b2c0      	uxtb	r0, r0
 801b30e:	0772      	lsls	r2, r6, #29
 801b310:	9001      	str	r0, [sp, #4]
 801b312:	9100      	str	r1, [sp, #0]
 801b314:	462b      	mov	r3, r5
 801b316:	4622      	mov	r2, r4
 801b318:	9904      	ldr	r1, [sp, #16]
 801b31a:	9803      	ldr	r0, [sp, #12]
 801b31c:	d502      	bpl.n	801b324 <??GATT_Att_Req_5>
 801b31e:	f7ff fe53 	bl	801afc8 <ATT_Build_Read_By_Grp_Typ_Req>
 801b322:	e019      	b.n	801b358 <??GATT_Att_Req_2>

0801b324 <??GATT_Att_Req_5>:
 801b324:	f7ff fda5 	bl	801ae72 <ATT_Build_Read_By_Typ_Req>
 801b328:	e016      	b.n	801b358 <??GATT_Att_Req_2>

0801b32a <??GATT_Att_Req_4>:
 801b32a:	06f2      	lsls	r2, r6, #27
 801b32c:	d509      	bpl.n	801b342 <??GATT_Att_Req_6>
 801b32e:	b280      	uxth	r0, r0
 801b330:	9001      	str	r0, [sp, #4]
 801b332:	9100      	str	r1, [sp, #0]
 801b334:	9904      	ldr	r1, [sp, #16]
 801b336:	9803      	ldr	r0, [sp, #12]
 801b338:	462b      	mov	r3, r5
 801b33a:	4622      	mov	r2, r4
 801b33c:	f7ff fef9 	bl	801b132 <ATT_Build_Prp_Write_Req>
 801b340:	e00a      	b.n	801b358 <??GATT_Att_Req_2>

0801b342 <??GATT_Att_Req_6>:
 801b342:	06b0      	lsls	r0, r6, #26
 801b344:	d50b      	bpl.n	801b35e <??GATT_Att_Req_7>
 801b346:	b2e4      	uxtb	r4, r4
 801b348:	2c01      	cmp	r4, #1
 801b34a:	bf0c      	ite	eq
 801b34c:	2201      	moveq	r2, #1
 801b34e:	2200      	movne	r2, #0
 801b350:	9904      	ldr	r1, [sp, #16]
 801b352:	9803      	ldr	r0, [sp, #12]
 801b354:	f7ff ff2d 	bl	801b1b2 <ATT_Build_Exec_Write_Req>

0801b358 <??GATT_Att_Req_2>:
 801b358:	4607      	mov	r7, r0
 801b35a:	0038      	movs	r0, r7
 801b35c:	d10c      	bne.n	801b378 <??GATT_Att_Req_8>

0801b35e <??GATT_Att_Req_7>:
 801b35e:	9803      	ldr	r0, [sp, #12]
 801b360:	6841      	ldr	r1, [r0, #4]
 801b362:	f441 5100 	orr.w	r1, r1, #8192	; 0x2000
 801b366:	6041      	str	r1, [r0, #4]
 801b368:	9803      	ldr	r0, [sp, #12]
 801b36a:	f20f 011d 	addw	r1, pc, #29
 801b36e:	61c1      	str	r1, [r0, #28]
 801b370:	9804      	ldr	r0, [sp, #16]
 801b372:	f7fe fd96 	bl	8019ea2 <GATT_Send_Packet>
 801b376:	e003      	b.n	801b380 <??GATT_Att_Req_0>

0801b378 <??GATT_Att_Req_8>:
 801b378:	9804      	ldr	r0, [sp, #16]
 801b37a:	2100      	movs	r1, #0
 801b37c:	f009 fcb1 	bl	8024ce2 <ACL_PM_Release>

0801b380 <??GATT_Att_Req_0>:
 801b380:	4638      	mov	r0, r7
 801b382:	b005      	add	sp, #20
 801b384:	bdf0      	pop	{r4, r5, r6, r7, pc}
	...

0801b388 <GATT_Att_Req_Cb>:
 801b388:	b510      	push	{r4, lr}
 801b38a:	4604      	mov	r4, r0
 801b38c:	6a20      	ldr	r0, [r4, #32]
 801b38e:	f7fe fe12 	bl	8019fb6 <GATT_Send_Resp_Event>
 801b392:	6860      	ldr	r0, [r4, #4]
 801b394:	2101      	movs	r1, #1
 801b396:	f420 5000 	bic.w	r0, r0, #8192	; 0x2000
 801b39a:	6060      	str	r0, [r4, #4]
 801b39c:	6a20      	ldr	r0, [r4, #32]
 801b39e:	f009 fca0 	bl	8024ce2 <ACL_PM_Release>
 801b3a2:	2000      	movs	r0, #0
 801b3a4:	6220      	str	r0, [r4, #32]
 801b3a6:	bd10      	pop	{r4, pc}

0801b3a8 <GATT_Server_Db_Check>:
 801b3a8:	b510      	push	{r4, lr}
 801b3aa:	f8df 4c5c 	ldr.w	r4, [pc, #3164]	; 801c008 <??DataTable7>
 801b3ae:	f894 01ac 	ldrb.w	r0, [r4, #428]	; 0x1ac
 801b3b2:	07c1      	lsls	r1, r0, #31
 801b3b4:	d401      	bmi.n	801b3ba <??GATT_Server_Db_Check_0>
 801b3b6:	2097      	movs	r0, #151	; 0x97
 801b3b8:	bd10      	pop	{r4, pc}

0801b3ba <??GATT_Server_Db_Check_0>:
 801b3ba:	2000      	movs	r0, #0
 801b3bc:	f009 fcb0 	bl	8024d20 <ACL_PM_Get_Available_Buffer>
 801b3c0:	f894 11ac 	ldrb.w	r1, [r4, #428]	; 0x1ac
 801b3c4:	078a      	lsls	r2, r1, #30
 801b3c6:	d502      	bpl.n	801b3ce <??GATT_Server_Db_Check_1>
 801b3c8:	b908      	cbnz	r0, 801b3ce <??GATT_Server_Db_Check_1>
 801b3ca:	2064      	movs	r0, #100	; 0x64
 801b3cc:	bd10      	pop	{r4, pc}

0801b3ce <??GATT_Server_Db_Check_1>:
 801b3ce:	2000      	movs	r0, #0
 801b3d0:	bd10      	pop	{r4, pc}

0801b3d2 <GATT_Server_Init>:
 801b3d2:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 801b3d4:	4606      	mov	r6, r0
 801b3d6:	f106 000c 	add.w	r0, r6, #12
 801b3da:	6130      	str	r0, [r6, #16]
 801b3dc:	f106 010c 	add.w	r1, r6, #12
 801b3e0:	1d30      	adds	r0, r6, #4
 801b3e2:	60f1      	str	r1, [r6, #12]
 801b3e4:	60b0      	str	r0, [r6, #8]
 801b3e6:	1d31      	adds	r1, r6, #4
 801b3e8:	f106 0014 	add.w	r0, r6, #20
 801b3ec:	6071      	str	r1, [r6, #4]
 801b3ee:	61b0      	str	r0, [r6, #24]
 801b3f0:	f106 0214 	add.w	r2, r6, #20
 801b3f4:	6172      	str	r2, [r6, #20]
 801b3f6:	21ff      	movs	r1, #255	; 0xff
 801b3f8:	f106 001c 	add.w	r0, r6, #28
 801b3fc:	f009 fbb4 	bl	8024b68 <ACL_List_Init>
 801b400:	21ff      	movs	r1, #255	; 0xff
 801b402:	f106 0028 	add.w	r0, r6, #40	; 0x28
 801b406:	f009 fbaf 	bl	8024b68 <ACL_List_Init>
 801b40a:	f8df 4c00 	ldr.w	r4, [pc, #3072]	; 801c00c <??DataTable7_1>
 801b40e:	7de1      	ldrb	r1, [r4, #23]
 801b410:	f106 0034 	add.w	r0, r6, #52	; 0x34
 801b414:	f009 fba8 	bl	8024b68 <ACL_List_Init>
 801b418:	21ff      	movs	r1, #255	; 0xff
 801b41a:	f106 0040 	add.w	r0, r6, #64	; 0x40
 801b41e:	f009 fba3 	bl	8024b68 <ACL_List_Init>
 801b422:	2000      	movs	r0, #0
 801b424:	f8a6 0058 	strh.w	r0, [r6, #88]	; 0x58
 801b428:	8a25      	ldrh	r5, [r4, #16]
 801b42a:	8a64      	ldrh	r4, [r4, #18]
 801b42c:	b145      	cbz	r5, 801b440 <??GATT_Server_Init_0>
 801b42e:	2700      	movs	r7, #0

0801b430 <??GATT_Server_Init_1>:
 801b430:	6cf0      	ldr	r0, [r6, #76]	; 0x4c
 801b432:	19c1      	adds	r1, r0, r7
 801b434:	1d30      	adds	r0, r6, #4
 801b436:	f009 fd45 	bl	8024ec4 <CList_Insert>
 801b43a:	3728      	adds	r7, #40	; 0x28
 801b43c:	1e6d      	subs	r5, r5, #1
 801b43e:	d1f7      	bne.n	801b430 <??GATT_Server_Init_1>

0801b440 <??GATT_Server_Init_0>:
 801b440:	b14c      	cbz	r4, 801b456 <??GATT_Server_Init_2>
 801b442:	2500      	movs	r5, #0

0801b444 <??GATT_Server_Init_3>:
 801b444:	6d30      	ldr	r0, [r6, #80]	; 0x50
 801b446:	1941      	adds	r1, r0, r5
 801b448:	f106 0014 	add.w	r0, r6, #20
 801b44c:	f009 fd3a 	bl	8024ec4 <CList_Insert>
 801b450:	3530      	adds	r5, #48	; 0x30
 801b452:	1e64      	subs	r4, r4, #1
 801b454:	d1f6      	bne.n	801b444 <??GATT_Server_Init_3>

0801b456 <??GATT_Server_Init_2>:
 801b456:	bdf1      	pop	{r0, r4, r5, r6, r7, pc}

0801b458 <aci_gatt_init>:
 801b458:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801b45c:	f8df aba8 	ldr.w	sl, [pc, #2984]	; 801c008 <??DataTable7>
 801b460:	f50a 76d6 	add.w	r6, sl, #428	; 0x1ac
 801b464:	7830      	ldrb	r0, [r6, #0]
 801b466:	b096      	sub	sp, #88	; 0x58
 801b468:	07c1      	lsls	r1, r0, #31
 801b46a:	bf48      	it	mi
 801b46c:	2062      	movmi	r0, #98	; 0x62
 801b46e:	f100 80ec 	bmi.w	801b64a <??aci_gatt_init_0>
 801b472:	2101      	movs	r1, #1
 801b474:	7031      	strb	r1, [r6, #0]
 801b476:	f8df 8b94 	ldr.w	r8, [pc, #2964]	; 801c00c <??DataTable7_1>
 801b47a:	f898 0020 	ldrb.w	r0, [r8, #32]
 801b47e:	2201      	movs	r2, #1
 801b480:	f641 0301 	movw	r3, #6145	; 0x1801
 801b484:	f88d 2044 	strb.w	r2, [sp, #68]	; 0x44
 801b488:	f8ad 3046 	strh.w	r3, [sp, #70]	; 0x46
 801b48c:	0781      	lsls	r1, r0, #30
 801b48e:	bf4c      	ite	mi
 801b490:	4691      	movmi	r9, r2
 801b492:	f04f 0904 	movpl.w	r9, #4
 801b496:	a80d      	add	r0, sp, #52	; 0x34
 801b498:	f10d 0146 	add.w	r1, sp, #70	; 0x46
 801b49c:	2210      	movs	r2, #16
 801b49e:	f015 fd22 	bl	8030ee6 <__aeabi_memcpy>
 801b4a2:	f7ff ff81 	bl	801b3a8 <GATT_Server_Db_Check>
 801b4a6:	2800      	cmp	r0, #0
 801b4a8:	f040 80cc 	bne.w	801b644 <??aci_gatt_init_1>
 801b4ac:	6970      	ldr	r0, [r6, #20]
 801b4ae:	f50a 74e0 	add.w	r4, sl, #448	; 0x1c0
 801b4b2:	4284      	cmp	r4, r0
 801b4b4:	f000 80c6 	beq.w	801b644 <??aci_gatt_init_1>
 801b4b8:	f10d 0102 	add.w	r1, sp, #2
 801b4bc:	f50a 70d8 	add.w	r0, sl, #432	; 0x1b0
 801b4c0:	f009 fd35 	bl	8024f2e <CList_Get_Size>
 801b4c4:	f8bd 0002 	ldrh.w	r0, [sp, #2]
 801b4c8:	f1a9 0101 	sub.w	r1, r9, #1
 801b4cc:	4288      	cmp	r0, r1
 801b4ce:	f0c0 80b9 	bcc.w	801b644 <??aci_gatt_init_1>
 801b4d2:	f50a 7bdc 	add.w	fp, sl, #440	; 0x1b8
 801b4d6:	4669      	mov	r1, sp
 801b4d8:	4658      	mov	r0, fp
 801b4da:	f009 fd28 	bl	8024f2e <CList_Get_Size>
 801b4de:	f8bd 0000 	ldrh.w	r0, [sp]
 801b4e2:	b1a0      	cbz	r0, 801b50e <??aci_gatt_init_2>
 801b4e4:	6935      	ldr	r5, [r6, #16]
 801b4e6:	f10d 0102 	add.w	r1, sp, #2
 801b4ea:	f105 0018 	add.w	r0, r5, #24
 801b4ee:	f009 fd1e 	bl	8024f2e <CList_Get_Size>
 801b4f2:	4669      	mov	r1, sp
 801b4f4:	f105 0020 	add.w	r0, r5, #32
 801b4f8:	f009 fd19 	bl	8024f2e <CList_Get_Size>
 801b4fc:	8d2d      	ldrh	r5, [r5, #40]	; 0x28
 801b4fe:	f8bd 1002 	ldrh.w	r1, [sp, #2]
 801b502:	f8bd 0000 	ldrh.w	r0, [sp]
 801b506:	194d      	adds	r5, r1, r5
 801b508:	1945      	adds	r5, r0, r5
 801b50a:	1c6d      	adds	r5, r5, #1
 801b50c:	e000      	b.n	801b510 <??aci_gatt_init_3>

0801b50e <??aci_gatt_init_2>:
 801b50e:	2501      	movs	r5, #1

0801b510 <??aci_gatt_init_3>:
 801b510:	b2a8      	uxth	r0, r5
 801b512:	f5c0 3080 	rsb	r0, r0, #65536	; 0x10000
 801b516:	4548      	cmp	r0, r9
 801b518:	f0c0 8094 	bcc.w	801b644 <??aci_gatt_init_1>
 801b51c:	6870      	ldr	r0, [r6, #4]
 801b51e:	6977      	ldr	r7, [r6, #20]
 801b520:	f44f 5120 	mov.w	r1, #10240	; 0x2800
 801b524:	9002      	str	r0, [sp, #8]
 801b526:	8579      	strh	r1, [r7, #42]	; 0x2a
 801b528:	2202      	movs	r2, #2
 801b52a:	a90d      	add	r1, sp, #52	; 0x34
 801b52c:	f107 0008 	add.w	r0, r7, #8
 801b530:	f015 fcd9 	bl	8030ee6 <__aeabi_memcpy>
 801b534:	2001      	movs	r0, #1
 801b536:	f887 002c 	strb.w	r0, [r7, #44]	; 0x2c
 801b53a:	853d      	strh	r5, [r7, #40]	; 0x28
 801b53c:	4639      	mov	r1, r7
 801b53e:	4620      	mov	r0, r4
 801b540:	f009 fce4 	bl	8024f0c <CList_Remove_Node>
 801b544:	4639      	mov	r1, r7
 801b546:	4658      	mov	r0, fp
 801b548:	f009 fcbc 	bl	8024ec4 <CList_Insert>
 801b54c:	f107 0018 	add.w	r0, r7, #24
 801b550:	61f8      	str	r0, [r7, #28]
 801b552:	61b8      	str	r0, [r7, #24]
 801b554:	f107 0020 	add.w	r0, r7, #32
 801b558:	6278      	str	r0, [r7, #36]	; 0x24
 801b55a:	6238      	str	r0, [r7, #32]
 801b55c:	f1a9 0401 	sub.w	r4, r9, #1
 801b560:	b2a0      	uxth	r0, r4
 801b562:	b190      	cbz	r0, 801b58a <??aci_gatt_init_4>
 801b564:	f50a 71d8 	add.w	r1, sl, #432	; 0x1b0
 801b568:	b2a4      	uxth	r4, r4
 801b56a:	9101      	str	r1, [sp, #4]
 801b56c:	f8dd a008 	ldr.w	sl, [sp, #8]

0801b570 <??aci_gatt_init_5>:
 801b570:	9801      	ldr	r0, [sp, #4]
 801b572:	4651      	mov	r1, sl
 801b574:	f009 fcca 	bl	8024f0c <CList_Remove_Node>
 801b578:	4651      	mov	r1, sl
 801b57a:	f107 0018 	add.w	r0, r7, #24
 801b57e:	f009 fca1 	bl	8024ec4 <CList_Insert>
 801b582:	f8d6 a004 	ldr.w	sl, [r6, #4]
 801b586:	1e64      	subs	r4, r4, #1
 801b588:	d1f2      	bne.n	801b570 <??aci_gatt_init_5>

0801b58a <??aci_gatt_init_4>:
 801b58a:	44a9      	add	r9, r5
 801b58c:	f1a9 0301 	sub.w	r3, r9, #1
 801b590:	b29b      	uxth	r3, r3
 801b592:	b2aa      	uxth	r2, r5
 801b594:	2100      	movs	r1, #0
 801b596:	2000      	movs	r0, #0
 801b598:	f001 fad9 	bl	801cb4e <GATT_Update_For_Service_Change>
 801b59c:	2101      	movs	r1, #1
 801b59e:	f88d 101a 	strb.w	r1, [sp, #26]
 801b5a2:	2200      	movs	r2, #0
 801b5a4:	f898 0020 	ldrb.w	r0, [r8, #32]
 801b5a8:	f88d 202f 	strb.w	r2, [sp, #47]	; 0x2f
 801b5ac:	2100      	movs	r1, #0
 801b5ae:	f88d 1030 	strb.w	r1, [sp, #48]	; 0x30
 801b5b2:	2207      	movs	r2, #7
 801b5b4:	f88d 1032 	strb.w	r1, [sp, #50]	; 0x32
 801b5b8:	f8ad 5018 	strh.w	r5, [sp, #24]
 801b5bc:	f88d 2031 	strb.w	r2, [sp, #49]	; 0x31
 801b5c0:	0781      	lsls	r1, r0, #30
 801b5c2:	d43d      	bmi.n	801b640 <??aci_gatt_init_6>
 801b5c4:	f642 2005 	movw	r0, #10757	; 0x2a05
 801b5c8:	2104      	movs	r1, #4
 801b5ca:	f8ad 001c 	strh.w	r0, [sp, #28]
 801b5ce:	f8ad 102c 	strh.w	r1, [sp, #44]	; 0x2c
 801b5d2:	2220      	movs	r2, #32
 801b5d4:	f88d 202e 	strb.w	r2, [sp, #46]	; 0x2e
 801b5d8:	a906      	add	r1, sp, #24
 801b5da:	a803      	add	r0, sp, #12
 801b5dc:	f000 f9cc 	bl	801b978 <GATT_Add_Char_Core>
 801b5e0:	bb80      	cbnz	r0, 801b644 <??aci_gatt_init_1>
 801b5e2:	bf00      	nop
 801b5e4:	a11a      	add	r1, pc, #104	; (adr r1, 801b650 <?_0>)
 801b5e6:	680a      	ldr	r2, [r1, #0]
 801b5e8:	a805      	add	r0, sp, #20
 801b5ea:	6002      	str	r2, [r0, #0]
 801b5ec:	7830      	ldrb	r0, [r6, #0]
 801b5ee:	f8bd 200c 	ldrh.w	r2, [sp, #12]
 801b5f2:	07c1      	lsls	r1, r0, #31
 801b5f4:	d526      	bpl.n	801b644 <??aci_gatt_init_1>
 801b5f6:	68f0      	ldr	r0, [r6, #12]
 801b5f8:	4629      	mov	r1, r5
 801b5fa:	e000      	b.n	801b5fe <??aci_gatt_init_7>

0801b5fc <??aci_gatt_init_8>:
 801b5fc:	6800      	ldr	r0, [r0, #0]

0801b5fe <??aci_gatt_init_7>:
 801b5fe:	4558      	cmp	r0, fp
 801b600:	d020      	beq.n	801b644 <??aci_gatt_init_1>
 801b602:	8d03      	ldrh	r3, [r0, #40]	; 0x28
 801b604:	b28c      	uxth	r4, r1
 801b606:	42a3      	cmp	r3, r4
 801b608:	d1f8      	bne.n	801b5fc <??aci_gatt_init_8>
 801b60a:	6a03      	ldr	r3, [r0, #32]
 801b60c:	f100 0420 	add.w	r4, r0, #32
 801b610:	e000      	b.n	801b614 <??aci_gatt_init_9>

0801b612 <??aci_gatt_init_10>:
 801b612:	681b      	ldr	r3, [r3, #0]

0801b614 <??aci_gatt_init_9>:
 801b614:	42a3      	cmp	r3, r4
 801b616:	d015      	beq.n	801b644 <??aci_gatt_init_1>
 801b618:	8b9d      	ldrh	r5, [r3, #28]
 801b61a:	4295      	cmp	r5, r2
 801b61c:	d1f9      	bne.n	801b612 <??aci_gatt_init_10>
 801b61e:	2300      	movs	r3, #0
 801b620:	f8ad 3010 	strh.w	r3, [sp, #16]
 801b624:	a805      	add	r0, sp, #20
 801b626:	ab04      	add	r3, sp, #16
 801b628:	2404      	movs	r4, #4
 801b62a:	9002      	str	r0, [sp, #8]
 801b62c:	9301      	str	r3, [sp, #4]
 801b62e:	f8ad 4012 	strh.w	r4, [sp, #18]
 801b632:	9400      	str	r4, [sp, #0]
 801b634:	2303      	movs	r3, #3
 801b636:	b289      	uxth	r1, r1
 801b638:	2000      	movs	r0, #0
 801b63a:	f000 fdd9 	bl	801c1f0 <GATT_Update_Char_Value_Core>
 801b63e:	b908      	cbnz	r0, 801b644 <??aci_gatt_init_1>

0801b640 <??aci_gatt_init_6>:
 801b640:	2000      	movs	r0, #0
 801b642:	e002      	b.n	801b64a <??aci_gatt_init_0>

0801b644 <??aci_gatt_init_1>:
 801b644:	2000      	movs	r0, #0
 801b646:	7030      	strb	r0, [r6, #0]
 801b648:	2097      	movs	r0, #151	; 0x97

0801b64a <??aci_gatt_init_0>:
 801b64a:	b017      	add	sp, #92	; 0x5c
 801b64c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801b650 <?_0>:
 801b650:	0001 ffff                                   ....

0801b654 <GATT_Add_Service_Core>:
 801b654:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801b658:	b085      	sub	sp, #20
 801b65a:	f811 4b02 	ldrb.w	r4, [r1], #2
 801b65e:	4681      	mov	r9, r0
 801b660:	4617      	mov	r7, r2
 801b662:	461d      	mov	r5, r3
 801b664:	a801      	add	r0, sp, #4
 801b666:	2210      	movs	r2, #16
 801b668:	f015 fc3d 	bl	8030ee6 <__aeabi_memcpy>
 801b66c:	f7ff fe9c 	bl	801b3a8 <GATT_Server_Db_Check>
 801b670:	0001      	movs	r1, r0
 801b672:	f040 8085 	bne.w	801b780 <??GATT_Add_Service_Core_0>
 801b676:	0038      	movs	r0, r7
 801b678:	f000 808d 	beq.w	801b796 <??GATT_Add_Service_Core_1>
 801b67c:	f8df 8b60 	ldr.w	r8, [pc, #2912]	; 801c1e0 <??DataTable9>
 801b680:	f8d8 0010 	ldr.w	r0, [r8, #16]
 801b684:	f8df ab5c 	ldr.w	sl, [pc, #2908]	; 801c1e4 <??DataTable9_1>
 801b688:	4582      	cmp	sl, r0
 801b68a:	d009      	beq.n	801b6a0 <??GATT_Add_Service_Core_2>
 801b68c:	f10d 0102 	add.w	r1, sp, #2
 801b690:	4640      	mov	r0, r8
 801b692:	f009 fc4c 	bl	8024f2e <CList_Get_Size>
 801b696:	f8bd 0002 	ldrh.w	r0, [sp, #2]
 801b69a:	1e79      	subs	r1, r7, #1
 801b69c:	4288      	cmp	r0, r1
 801b69e:	d201      	bcs.n	801b6a4 <??GATT_Add_Service_Core_3>

0801b6a0 <??GATT_Add_Service_Core_2>:
 801b6a0:	2098      	movs	r0, #152	; 0x98
 801b6a2:	e079      	b.n	801b798 <?Subroutine1>

0801b6a4 <??GATT_Add_Service_Core_3>:
 801b6a4:	4669      	mov	r1, sp
 801b6a6:	f8df 0b94 	ldr.w	r0, [pc, #2964]	; 801c23c <??GATT_Update_Char_Value_Core_0>
 801b6aa:	f009 fc40 	bl	8024f2e <CList_Get_Size>
 801b6ae:	f8bd 0000 	ldrh.w	r0, [sp]
 801b6b2:	b1a8      	cbz	r0, 801b6e0 <??GATT_Add_Service_Core_4>
 801b6b4:	f8d8 600c 	ldr.w	r6, [r8, #12]
 801b6b8:	f10d 0102 	add.w	r1, sp, #2
 801b6bc:	f106 0018 	add.w	r0, r6, #24
 801b6c0:	f009 fc35 	bl	8024f2e <CList_Get_Size>
 801b6c4:	4669      	mov	r1, sp
 801b6c6:	f106 0020 	add.w	r0, r6, #32
 801b6ca:	f009 fc30 	bl	8024f2e <CList_Get_Size>
 801b6ce:	8d36      	ldrh	r6, [r6, #40]	; 0x28
 801b6d0:	f8bd 1002 	ldrh.w	r1, [sp, #2]
 801b6d4:	f8bd 0000 	ldrh.w	r0, [sp]
 801b6d8:	198e      	adds	r6, r1, r6
 801b6da:	1986      	adds	r6, r0, r6
 801b6dc:	1c76      	adds	r6, r6, #1
 801b6de:	e000      	b.n	801b6e2 <??GATT_Add_Service_Core_5>

0801b6e0 <??GATT_Add_Service_Core_4>:
 801b6e0:	2601      	movs	r6, #1

0801b6e2 <??GATT_Add_Service_Core_5>:
 801b6e2:	b2b0      	uxth	r0, r6
 801b6e4:	f5c0 3080 	rsb	r0, r0, #65536	; 0x10000
 801b6e8:	42b8      	cmp	r0, r7
 801b6ea:	bf38      	it	cc
 801b6ec:	2061      	movcc	r0, #97	; 0x61
 801b6ee:	d347      	bcc.n	801b780 <??GATT_Add_Service_Core_0>
 801b6f0:	4628      	mov	r0, r5
 801b6f2:	f8d8 5010 	ldr.w	r5, [r8, #16]
 801b6f6:	f8d8 b000 	ldr.w	fp, [r8]
 801b6fa:	2801      	cmp	r0, #1
 801b6fc:	bf08      	it	eq
 801b6fe:	f44f 5020 	moveq.w	r0, #10240	; 0x2800
 801b702:	d003      	beq.n	801b70c <??GATT_Add_Service_Core_6>
 801b704:	2802      	cmp	r0, #2
 801b706:	d146      	bne.n	801b796 <??GATT_Add_Service_Core_1>
 801b708:	f642 0001 	movw	r0, #10241	; 0x2801

0801b70c <??GATT_Add_Service_Core_6>:
 801b70c:	8568      	strh	r0, [r5, #42]	; 0x2a
 801b70e:	2c01      	cmp	r4, #1
 801b710:	d137      	bne.n	801b782 <??GATT_Add_Service_Core_7>
 801b712:	2202      	movs	r2, #2
 801b714:	a901      	add	r1, sp, #4
 801b716:	f105 0008 	add.w	r0, r5, #8
 801b71a:	f015 fbe4 	bl	8030ee6 <__aeabi_memcpy>

0801b71e <??GATT_Add_Service_Core_8>:
 801b71e:	f885 402c 	strb.w	r4, [r5, #44]	; 0x2c
 801b722:	f8a9 6000 	strh.w	r6, [r9]
 801b726:	852e      	strh	r6, [r5, #40]	; 0x28
 801b728:	4629      	mov	r1, r5
 801b72a:	4650      	mov	r0, sl
 801b72c:	f009 fbee 	bl	8024f0c <CList_Remove_Node>
 801b730:	4629      	mov	r1, r5
 801b732:	f8df 0b08 	ldr.w	r0, [pc, #2824]	; 801c23c <??GATT_Update_Char_Value_Core_0>
 801b736:	f009 fbc5 	bl	8024ec4 <CList_Insert>
 801b73a:	f105 0018 	add.w	r0, r5, #24
 801b73e:	61e8      	str	r0, [r5, #28]
 801b740:	61a8      	str	r0, [r5, #24]
 801b742:	f105 0020 	add.w	r0, r5, #32
 801b746:	6268      	str	r0, [r5, #36]	; 0x24
 801b748:	6228      	str	r0, [r5, #32]
 801b74a:	1e7c      	subs	r4, r7, #1
 801b74c:	b2a0      	uxth	r0, r4
 801b74e:	b168      	cbz	r0, 801b76c <??GATT_Add_Service_Core_9>
 801b750:	b2a4      	uxth	r4, r4

0801b752 <??GATT_Add_Service_Core_10>:
 801b752:	4659      	mov	r1, fp
 801b754:	4640      	mov	r0, r8
 801b756:	f009 fbd9 	bl	8024f0c <CList_Remove_Node>
 801b75a:	4659      	mov	r1, fp
 801b75c:	f105 0018 	add.w	r0, r5, #24
 801b760:	f009 fbb0 	bl	8024ec4 <CList_Insert>
 801b764:	f8d8 b000 	ldr.w	fp, [r8]
 801b768:	1e64      	subs	r4, r4, #1
 801b76a:	d1f2      	bne.n	801b752 <??GATT_Add_Service_Core_10>

0801b76c <??GATT_Add_Service_Core_9>:
 801b76c:	f8b9 2000 	ldrh.w	r2, [r9]
 801b770:	2100      	movs	r1, #0
 801b772:	2000      	movs	r0, #0
 801b774:	18bf      	adds	r7, r7, r2
 801b776:	1e7b      	subs	r3, r7, #1
 801b778:	b29b      	uxth	r3, r3
 801b77a:	f001 f9e8 	bl	801cb4e <GATT_Update_For_Service_Change>
 801b77e:	2000      	movs	r0, #0

0801b780 <??GATT_Add_Service_Core_0>:
 801b780:	e00a      	b.n	801b798 <?Subroutine1>

0801b782 <??GATT_Add_Service_Core_7>:
 801b782:	2c02      	cmp	r4, #2
 801b784:	d107      	bne.n	801b796 <??GATT_Add_Service_Core_1>
 801b786:	a801      	add	r0, sp, #4
 801b788:	e890 500c 	ldmia.w	r0, {r2, r3, ip, lr}
 801b78c:	f105 0108 	add.w	r1, r5, #8
 801b790:	e881 500c 	stmia.w	r1, {r2, r3, ip, lr}
 801b794:	e7c3      	b.n	801b71e <??GATT_Add_Service_Core_8>

0801b796 <??GATT_Add_Service_Core_1>:
 801b796:	2092      	movs	r0, #146	; 0x92

0801b798 <?Subroutine1>:
 801b798:	b005      	add	sp, #20
 801b79a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801b79e <aci_gatt_add_service>:
 801b79e:	b530      	push	{r4, r5, lr}
 801b7a0:	4614      	mov	r4, r2
 801b7a2:	461d      	mov	r5, r3
 801b7a4:	b085      	sub	sp, #20
 801b7a6:	4603      	mov	r3, r0
 801b7a8:	460a      	mov	r2, r1
 801b7aa:	4669      	mov	r1, sp
 801b7ac:	f10d 0002 	add.w	r0, sp, #2
 801b7b0:	f001 fb4c 	bl	801ce4c <GATT_Set_UUID>
 801b7b4:	0001      	movs	r1, r0
 801b7b6:	d105      	bne.n	801b7c4 <??aci_gatt_add_service_0>
 801b7b8:	9808      	ldr	r0, [sp, #32]
 801b7ba:	4623      	mov	r3, r4
 801b7bc:	462a      	mov	r2, r5
 801b7be:	4669      	mov	r1, sp
 801b7c0:	f7ff ff48 	bl	801b654 <GATT_Add_Service_Core>

0801b7c4 <??aci_gatt_add_service_0>:
 801b7c4:	b005      	add	sp, #20
 801b7c6:	bd30      	pop	{r4, r5, pc}

0801b7c8 <aci_gatt_include_service>:
 801b7c8:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 801b7cc:	b08c      	sub	sp, #48	; 0x30
 801b7ce:	4614      	mov	r4, r2
 801b7d0:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801b7d2:	4606      	mov	r6, r0
 801b7d4:	460d      	mov	r5, r1
 801b7d6:	f10d 010e 	add.w	r1, sp, #14
 801b7da:	a804      	add	r0, sp, #16
 801b7dc:	f001 fb36 	bl	801ce4c <GATT_Set_UUID>
 801b7e0:	0001      	movs	r1, r0
 801b7e2:	f040 80c6 	bne.w	801b972 <??aci_gatt_include_service_0>
 801b7e6:	f8ad 400c 	strh.w	r4, [sp, #12]
 801b7ea:	a908      	add	r1, sp, #32
 801b7ec:	f8ad 6008 	strh.w	r6, [sp, #8]
 801b7f0:	f8ad 500a 	strh.w	r5, [sp, #10]
 801b7f4:	f8bd 000a 	ldrh.w	r0, [sp, #10]
 801b7f8:	f8bd 5008 	ldrh.w	r5, [sp, #8]
 801b7fc:	f8ad 0004 	strh.w	r0, [sp, #4]
 801b800:	f8bd 000c 	ldrh.w	r0, [sp, #12]
 801b804:	f8ad 0006 	strh.w	r0, [sp, #6]
 801b808:	a804      	add	r0, sp, #16
 801b80a:	e890 005c 	ldmia.w	r0, {r2, r3, r4, r6}
 801b80e:	e881 005c 	stmia.w	r1, {r2, r3, r4, r6}
 801b812:	f89d 400e 	ldrb.w	r4, [sp, #14]
 801b816:	f7ff fdc7 	bl	801b3a8 <GATT_Server_Db_Check>
 801b81a:	0001      	movs	r1, r0
 801b81c:	f040 80a9 	bne.w	801b972 <??aci_gatt_include_service_0>
 801b820:	f8bd 0006 	ldrh.w	r0, [sp, #6]
 801b824:	f8bd 1004 	ldrh.w	r1, [sp, #4]
 801b828:	4288      	cmp	r0, r1
 801b82a:	f0c0 80a1 	bcc.w	801b970 <??aci_gatt_include_service_1>
 801b82e:	2900      	cmp	r1, #0
 801b830:	f000 809e 	beq.w	801b970 <??aci_gatt_include_service_1>
 801b834:	f8df 67d0 	ldr.w	r6, [pc, #2000]	; 801c008 <??DataTable7>
 801b838:	f506 77dc 	add.w	r7, r6, #440	; 0x1b8
 801b83c:	f8d7 8000 	ldr.w	r8, [r7]
 801b840:	e001      	b.n	801b846 <??aci_gatt_include_service_2>

0801b842 <??aci_gatt_include_service_3>:
 801b842:	f8d8 8000 	ldr.w	r8, [r8]

0801b846 <??aci_gatt_include_service_2>:
 801b846:	45b8      	cmp	r8, r7
 801b848:	d00e      	beq.n	801b868 <??aci_gatt_include_service_4>
 801b84a:	f8b8 0028 	ldrh.w	r0, [r8, #40]	; 0x28
 801b84e:	42a8      	cmp	r0, r5
 801b850:	d1f7      	bne.n	801b842 <??aci_gatt_include_service_3>
 801b852:	f10d 0102 	add.w	r1, sp, #2
 801b856:	f108 0018 	add.w	r0, r8, #24
 801b85a:	f009 fb68 	bl	8024f2e <CList_Get_Size>
 801b85e:	f8bd 0002 	ldrh.w	r0, [sp, #2]
 801b862:	b918      	cbnz	r0, 801b86c <??aci_gatt_include_service_5>

0801b864 <??aci_gatt_include_service_6>:
 801b864:	2098      	movs	r0, #152	; 0x98
 801b866:	e084      	b.n	801b972 <??aci_gatt_include_service_0>

0801b868 <??aci_gatt_include_service_4>:
 801b868:	2060      	movs	r0, #96	; 0x60
 801b86a:	e082      	b.n	801b972 <??aci_gatt_include_service_0>

0801b86c <??aci_gatt_include_service_5>:
 801b86c:	f8d8 5018 	ldr.w	r5, [r8, #24]
 801b870:	4669      	mov	r1, sp
 801b872:	f108 0020 	add.w	r0, r8, #32
 801b876:	f009 fb5a 	bl	8024f2e <CList_Get_Size>
 801b87a:	f8bd 0000 	ldrh.w	r0, [sp]
 801b87e:	b1b0      	cbz	r0, 801b8ae <??aci_gatt_include_service_7>
 801b880:	f8d8 2024 	ldr.w	r2, [r8, #36]	; 0x24
 801b884:	f8b8 3028 	ldrh.w	r3, [r8, #40]	; 0x28
 801b888:	f8bd 1002 	ldrh.w	r1, [sp, #2]
 801b88c:	18cb      	adds	r3, r1, r3
 801b88e:	8b91      	ldrh	r1, [r2, #28]
 801b890:	18c3      	adds	r3, r0, r3
 801b892:	428b      	cmp	r3, r1
 801b894:	bf08      	it	eq
 801b896:	2061      	moveq	r0, #97	; 0x61
 801b898:	d06b      	beq.n	801b972 <??aci_gatt_include_service_0>
 801b89a:	8910      	ldrh	r0, [r2, #8]
 801b89c:	f642 0102 	movw	r1, #10242	; 0x2802
 801b8a0:	4288      	cmp	r0, r1
 801b8a2:	bf06      	itte	eq
 801b8a4:	f892 0023 	ldrbeq.w	r0, [r2, #35]	; 0x23
 801b8a8:	2801      	cmpeq	r0, #1
 801b8aa:	2062      	movne	r0, #98	; 0x62
 801b8ac:	d161      	bne.n	801b972 <??aci_gatt_include_service_0>

0801b8ae <??aci_gatt_include_service_7>:
 801b8ae:	2c01      	cmp	r4, #1
 801b8b0:	bf08      	it	eq
 801b8b2:	2006      	moveq	r0, #6
 801b8b4:	d002      	beq.n	801b8bc <??aci_gatt_include_service_8>
 801b8b6:	2c02      	cmp	r4, #2
 801b8b8:	d15a      	bne.n	801b970 <??aci_gatt_include_service_1>
 801b8ba:	2004      	movs	r0, #4

0801b8bc <??aci_gatt_include_service_8>:
 801b8bc:	83e8      	strh	r0, [r5, #30]
 801b8be:	f8df 174c 	ldr.w	r1, [pc, #1868]	; 801c00c <??DataTable7_1>
 801b8c2:	8a8a      	ldrh	r2, [r1, #20]
 801b8c4:	f8b6 0204 	ldrh.w	r0, [r6, #516]	; 0x204
 801b8c8:	8be9      	ldrh	r1, [r5, #30]
 801b8ca:	1a12      	subs	r2, r2, r0
 801b8cc:	428a      	cmp	r2, r1
 801b8ce:	dbc9      	blt.n	801b864 <??aci_gatt_include_service_6>
 801b8d0:	f8b8 1028 	ldrh.w	r1, [r8, #40]	; 0x28
 801b8d4:	f8bd 0000 	ldrh.w	r0, [sp]
 801b8d8:	f8dd 9054 	ldr.w	r9, [sp, #84]	; 0x54
 801b8dc:	2201      	movs	r2, #1
 801b8de:	1841      	adds	r1, r0, r1
 801b8e0:	1c49      	adds	r1, r1, #1
 801b8e2:	f8a9 1000 	strh.w	r1, [r9]
 801b8e6:	83a9      	strh	r1, [r5, #28]
 801b8e8:	f642 0102 	movw	r1, #10242	; 0x2802
 801b8ec:	8129      	strh	r1, [r5, #8]
 801b8ee:	f105 0022 	add.w	r0, r5, #34	; 0x22
 801b8f2:	7042      	strb	r2, [r0, #1]
 801b8f4:	6cb9      	ldr	r1, [r7, #72]	; 0x48
 801b8f6:	f8b6 2204 	ldrh.w	r2, [r6, #516]	; 0x204
 801b8fa:	ab01      	add	r3, sp, #4
 801b8fc:	4411      	add	r1, r2
 801b8fe:	61a9      	str	r1, [r5, #24]
 801b900:	781a      	ldrb	r2, [r3, #0]
 801b902:	700a      	strb	r2, [r1, #0]
 801b904:	785a      	ldrb	r2, [r3, #1]
 801b906:	704a      	strb	r2, [r1, #1]
 801b908:	69aa      	ldr	r2, [r5, #24]
 801b90a:	f10d 0106 	add.w	r1, sp, #6
 801b90e:	1c93      	adds	r3, r2, #2
 801b910:	780a      	ldrb	r2, [r1, #0]
 801b912:	701a      	strb	r2, [r3, #0]
 801b914:	784a      	ldrb	r2, [r1, #1]
 801b916:	705a      	strb	r2, [r3, #1]
 801b918:	f8b6 1204 	ldrh.w	r1, [r6, #516]	; 0x204
 801b91c:	1d09      	adds	r1, r1, #4
 801b91e:	f8a6 1204 	strh.w	r1, [r6, #516]	; 0x204
 801b922:	2c01      	cmp	r4, #1
 801b924:	d10b      	bne.n	801b93e <??aci_gatt_include_service_9>
 801b926:	69aa      	ldr	r2, [r5, #24]
 801b928:	a908      	add	r1, sp, #32
 801b92a:	1d13      	adds	r3, r2, #4
 801b92c:	780a      	ldrb	r2, [r1, #0]
 801b92e:	701a      	strb	r2, [r3, #0]
 801b930:	784a      	ldrb	r2, [r1, #1]
 801b932:	705a      	strb	r2, [r3, #1]
 801b934:	f8b6 1204 	ldrh.w	r1, [r6, #516]	; 0x204
 801b938:	1c89      	adds	r1, r1, #2
 801b93a:	f8a6 1204 	strh.w	r1, [r6, #516]	; 0x204

0801b93e <??aci_gatt_include_service_9>:
 801b93e:	2100      	movs	r1, #0
 801b940:	2201      	movs	r2, #1
 801b942:	70c1      	strb	r1, [r0, #3]
 801b944:	7082      	strb	r2, [r0, #2]
 801b946:	7001      	strb	r1, [r0, #0]
 801b948:	7101      	strb	r1, [r0, #4]
 801b94a:	4629      	mov	r1, r5
 801b94c:	f108 0018 	add.w	r0, r8, #24
 801b950:	f009 fadc 	bl	8024f0c <CList_Remove_Node>
 801b954:	4629      	mov	r1, r5
 801b956:	f108 0020 	add.w	r0, r8, #32
 801b95a:	f009 fab3 	bl	8024ec4 <CList_Insert>
 801b95e:	f8b9 2000 	ldrh.w	r2, [r9]
 801b962:	2100      	movs	r1, #0
 801b964:	2000      	movs	r0, #0
 801b966:	4613      	mov	r3, r2
 801b968:	f001 f8f1 	bl	801cb4e <GATT_Update_For_Service_Change>
 801b96c:	2000      	movs	r0, #0
 801b96e:	e000      	b.n	801b972 <??aci_gatt_include_service_0>

0801b970 <??aci_gatt_include_service_1>:
 801b970:	2092      	movs	r0, #146	; 0x92

0801b972 <??aci_gatt_include_service_0>:
 801b972:	b00d      	add	sp, #52	; 0x34
 801b974:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}

0801b978 <GATT_Add_Char_Core>:
 801b978:	e92d 4ff1 	stmdb	sp!, {r0, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801b97c:	b096      	sub	sp, #88	; 0x58
 801b97e:	460f      	mov	r7, r1
 801b980:	78be      	ldrb	r6, [r7, #2]
 801b982:	f8b7 a000 	ldrh.w	sl, [r7]
 801b986:	a812      	add	r0, sp, #72	; 0x48
 801b988:	9605      	str	r6, [sp, #20]
 801b98a:	1d39      	adds	r1, r7, #4
 801b98c:	2210      	movs	r2, #16
 801b98e:	f015 faaa 	bl	8030ee6 <__aeabi_memcpy>
 801b992:	8abc      	ldrh	r4, [r7, #20]
 801b994:	9404      	str	r4, [sp, #16]
 801b996:	7df9      	ldrb	r1, [r7, #23]
 801b998:	7dbe      	ldrb	r6, [r7, #22]
 801b99a:	2400      	movs	r4, #0
 801b99c:	f88d 1006 	strb.w	r1, [sp, #6]
 801b9a0:	7e3a      	ldrb	r2, [r7, #24]
 801b9a2:	f88d 200b 	strb.w	r2, [sp, #11]
 801b9a6:	7e79      	ldrb	r1, [r7, #25]
 801b9a8:	f88d 1007 	strb.w	r1, [sp, #7]
 801b9ac:	7eba      	ldrb	r2, [r7, #26]
 801b9ae:	f8ad 4008 	strh.w	r4, [sp, #8]
 801b9b2:	2700      	movs	r7, #0
 801b9b4:	f88d 200a 	strb.w	r2, [sp, #10]
 801b9b8:	f7ff fcf6 	bl	801b3a8 <GATT_Server_Db_Check>
 801b9bc:	0001      	movs	r1, r0
 801b9be:	f040 8193 	bne.w	801bce8 <??GATT_Add_Char_Core_0>
 801b9c2:	9804      	ldr	r0, [sp, #16]
 801b9c4:	f240 2101 	movw	r1, #513	; 0x201
 801b9c8:	4288      	cmp	r0, r1
 801b9ca:	d273      	bcs.n	801bab4 <??GATT_Add_Char_Core_1>
 801b9cc:	f8df 8638 	ldr.w	r8, [pc, #1592]	; 801c008 <??DataTable7>
 801b9d0:	f8d8 91b8 	ldr.w	r9, [r8, #440]	; 0x1b8
 801b9d4:	f508 70dc 	add.w	r0, r8, #440	; 0x1b8
 801b9d8:	e001      	b.n	801b9de <??GATT_Add_Char_Core_2>

0801b9da <??GATT_Add_Char_Core_3>:
 801b9da:	f8d9 9000 	ldr.w	r9, [r9]

0801b9de <??GATT_Add_Char_Core_2>:
 801b9de:	4581      	cmp	r9, r0
 801b9e0:	d034      	beq.n	801ba4c <??GATT_Add_Char_Core_4>
 801b9e2:	f8b9 1028 	ldrh.w	r1, [r9, #40]	; 0x28
 801b9e6:	4551      	cmp	r1, sl
 801b9e8:	d1f7      	bne.n	801b9da <??GATT_Add_Char_Core_3>
 801b9ea:	f016 0030 	ands.w	r0, r6, #48	; 0x30
 801b9ee:	d004      	beq.n	801b9fa <??GATT_Add_Char_Core_5>
 801b9f0:	f8df 0618 	ldr.w	r0, [pc, #1560]	; 801c00c <??DataTable7_1>
 801b9f4:	7d87      	ldrb	r7, [r0, #22]
 801b9f6:	2401      	movs	r4, #1
 801b9f8:	007f      	lsls	r7, r7, #1

0801b9fa <??GATT_Add_Char_Core_5>:
 801b9fa:	07f0      	lsls	r0, r6, #31
 801b9fc:	bf44      	itt	mi
 801b9fe:	1c64      	addmi	r4, r4, #1
 801ba00:	1cbf      	addmi	r7, r7, #2
 801ba02:	0630      	lsls	r0, r6, #24
 801ba04:	bf44      	itt	mi
 801ba06:	1c64      	addmi	r4, r4, #1
 801ba08:	1cbf      	addmi	r7, r7, #2
 801ba0a:	f10d 0102 	add.w	r1, sp, #2
 801ba0e:	f109 0018 	add.w	r0, r9, #24
 801ba12:	f009 fa8c 	bl	8024f2e <CList_Get_Size>
 801ba16:	f8bd 0002 	ldrh.w	r0, [sp, #2]
 801ba1a:	1ca5      	adds	r5, r4, #2
 801ba1c:	42a8      	cmp	r0, r5
 801ba1e:	d35d      	bcc.n	801badc <??GATT_Add_Char_Core_6>
 801ba20:	4669      	mov	r1, sp
 801ba22:	f109 0020 	add.w	r0, r9, #32
 801ba26:	f009 fa82 	bl	8024f2e <CList_Get_Size>
 801ba2a:	f8bd 0000 	ldrh.w	r0, [sp]
 801ba2e:	b178      	cbz	r0, 801ba50 <??GATT_Add_Char_Core_7>
 801ba30:	f8b9 2028 	ldrh.w	r2, [r9, #40]	; 0x28
 801ba34:	f8bd 1002 	ldrh.w	r1, [sp, #2]
 801ba38:	188a      	adds	r2, r1, r2
 801ba3a:	f8d9 1024 	ldr.w	r1, [r9, #36]	; 0x24
 801ba3e:	1882      	adds	r2, r0, r2
 801ba40:	8b88      	ldrh	r0, [r1, #28]
 801ba42:	1a12      	subs	r2, r2, r0
 801ba44:	42aa      	cmp	r2, r5
 801ba46:	d203      	bcs.n	801ba50 <??GATT_Add_Char_Core_7>
 801ba48:	2061      	movs	r0, #97	; 0x61
 801ba4a:	e5fe      	b.n	801b64a <??aci_gatt_init_0>

0801ba4c <??GATT_Add_Char_Core_4>:
 801ba4c:	2060      	movs	r0, #96	; 0x60
 801ba4e:	e5fc      	b.n	801b64a <??aci_gatt_init_0>

0801ba50 <??GATT_Add_Char_Core_7>:
 801ba50:	f8d9 5018 	ldr.w	r5, [r9, #24]
 801ba54:	9905      	ldr	r1, [sp, #20]
 801ba56:	6828      	ldr	r0, [r5, #0]
 801ba58:	9003      	str	r0, [sp, #12]
 801ba5a:	2901      	cmp	r1, #1
 801ba5c:	d102      	bne.n	801ba64 <??GATT_Add_Char_Core_8>
 801ba5e:	2005      	movs	r0, #5
 801ba60:	83e8      	strh	r0, [r5, #30]
 801ba62:	e004      	b.n	801ba6e <??GATT_Add_Char_Core_9>

0801ba64 <??GATT_Add_Char_Core_8>:
 801ba64:	9805      	ldr	r0, [sp, #20]
 801ba66:	2802      	cmp	r0, #2
 801ba68:	d124      	bne.n	801bab4 <??GATT_Add_Char_Core_1>
 801ba6a:	2113      	movs	r1, #19
 801ba6c:	83e9      	strh	r1, [r5, #30]

0801ba6e <??GATT_Add_Char_Core_9>:
 801ba6e:	9803      	ldr	r0, [sp, #12]
 801ba70:	f89d 1006 	ldrb.w	r1, [sp, #6]
 801ba74:	f100 0b22 	add.w	fp, r0, #34	; 0x22
 801ba78:	f011 0f24 	tst.w	r1, #36	; 0x24
 801ba7c:	d008      	beq.n	801ba90 <??GATT_Add_Char_Core_10>
 801ba7e:	f89d 0007 	ldrb.w	r0, [sp, #7]
 801ba82:	1fc0      	subs	r0, r0, #7
 801ba84:	280a      	cmp	r0, #10
 801ba86:	d215      	bcs.n	801bab4 <??GATT_Add_Char_Core_1>
 801ba88:	f89d 0007 	ldrb.w	r0, [sp, #7]
 801ba8c:	f88b 0005 	strb.w	r0, [fp, #5]

0801ba90 <??GATT_Add_Char_Core_10>:
 801ba90:	9805      	ldr	r0, [sp, #20]
 801ba92:	b2c0      	uxtb	r0, r0
 801ba94:	2801      	cmp	r0, #1
 801ba96:	d10f      	bne.n	801bab8 <??GATT_Add_Char_Core_11>
 801ba98:	f8bd 0048 	ldrh.w	r0, [sp, #72]	; 0x48
 801ba9c:	f642 1102 	movw	r1, #10498	; 0x2902
 801baa0:	4288      	cmp	r0, r1
 801baa2:	bf1c      	itt	ne
 801baa4:	f642 3129 	movwne	r1, #11049	; 0x2b29
 801baa8:	4288      	cmpne	r0, r1
 801baaa:	d105      	bne.n	801bab8 <??GATT_Add_Char_Core_11>
 801baac:	f8df 255c 	ldr.w	r2, [pc, #1372]	; 801c00c <??DataTable7_1>
 801bab0:	7d90      	ldrb	r0, [r2, #22]
 801bab2:	e002      	b.n	801baba <??GATT_Add_Char_Core_12>

0801bab4 <??GATT_Add_Char_Core_1>:
 801bab4:	2092      	movs	r0, #146	; 0x92
 801bab6:	e5c8      	b.n	801b64a <??aci_gatt_init_0>

0801bab8 <??GATT_Add_Char_Core_11>:
 801bab8:	2001      	movs	r0, #1

0801baba <??GATT_Add_Char_Core_12>:
 801baba:	9007      	str	r0, [sp, #28]
 801babc:	9907      	ldr	r1, [sp, #28]
 801babe:	9804      	ldr	r0, [sp, #16]
 801bac0:	4341      	muls	r1, r0
 801bac2:	f8b8 0204 	ldrh.w	r0, [r8, #516]	; 0x204
 801bac6:	9106      	str	r1, [sp, #24]
 801bac8:	f8df 1540 	ldr.w	r1, [pc, #1344]	; 801c00c <??DataTable7_1>
 801bacc:	8a8a      	ldrh	r2, [r1, #20]
 801bace:	8be9      	ldrh	r1, [r5, #30]
 801bad0:	1a12      	subs	r2, r2, r0
 801bad2:	9806      	ldr	r0, [sp, #24]
 801bad4:	1841      	adds	r1, r0, r1
 801bad6:	187f      	adds	r7, r7, r1
 801bad8:	42ba      	cmp	r2, r7
 801bada:	da01      	bge.n	801bae0 <??GATT_Add_Char_Core_13>

0801badc <??GATT_Add_Char_Core_6>:
 801badc:	2098      	movs	r0, #152	; 0x98
 801bade:	e5b4      	b.n	801b64a <??aci_gatt_init_0>

0801bae0 <??GATT_Add_Char_Core_13>:
 801bae0:	4669      	mov	r1, sp
 801bae2:	f109 0020 	add.w	r0, r9, #32
 801bae6:	f009 fa22 	bl	8024f2e <CList_Get_Size>
 801baea:	f8bd 0000 	ldrh.w	r0, [sp]
 801baee:	2800      	cmp	r0, #0
 801baf0:	bf1a      	itte	ne
 801baf2:	f8d9 0024 	ldrne.w	r0, [r9, #36]	; 0x24
 801baf6:	8b80      	ldrhne	r0, [r0, #28]
 801baf8:	f8b9 0028 	ldrheq.w	r0, [r9, #40]	; 0x28
 801bafc:	9916      	ldr	r1, [sp, #88]	; 0x58
 801bafe:	1c40      	adds	r0, r0, #1
 801bb00:	f105 0722 	add.w	r7, r5, #34	; 0x22
 801bb04:	8008      	strh	r0, [r1, #0]
 801bb06:	83a8      	strh	r0, [r5, #28]
 801bb08:	9816      	ldr	r0, [sp, #88]	; 0x58
 801bb0a:	8801      	ldrh	r1, [r0, #0]
 801bb0c:	9803      	ldr	r0, [sp, #12]
 801bb0e:	1c49      	adds	r1, r1, #1
 801bb10:	8381      	strh	r1, [r0, #28]
 801bb12:	f642 0103 	movw	r1, #10243	; 0x2803
 801bb16:	8129      	strh	r1, [r5, #8]
 801bb18:	2001      	movs	r0, #1
 801bb1a:	7078      	strb	r0, [r7, #1]
 801bb1c:	2100      	movs	r1, #0
 801bb1e:	7039      	strb	r1, [r7, #0]
 801bb20:	7139      	strb	r1, [r7, #4]
 801bb22:	f508 70dc 	add.w	r0, r8, #440	; 0x1b8
 801bb26:	6c81      	ldr	r1, [r0, #72]	; 0x48
 801bb28:	f8b8 0204 	ldrh.w	r0, [r8, #516]	; 0x204
 801bb2c:	4408      	add	r0, r1
 801bb2e:	61a8      	str	r0, [r5, #24]
 801bb30:	7006      	strb	r6, [r0, #0]
 801bb32:	9803      	ldr	r0, [sp, #12]
 801bb34:	69aa      	ldr	r2, [r5, #24]
 801bb36:	f100 011c 	add.w	r1, r0, #28
 801bb3a:	1c50      	adds	r0, r2, #1
 801bb3c:	780a      	ldrb	r2, [r1, #0]
 801bb3e:	7002      	strb	r2, [r0, #0]
 801bb40:	784a      	ldrb	r2, [r1, #1]
 801bb42:	7042      	strb	r2, [r0, #1]
 801bb44:	9905      	ldr	r1, [sp, #20]
 801bb46:	2901      	cmp	r1, #1
 801bb48:	d110      	bne.n	801bb6c <??GATT_Add_Char_Core_14>
 801bb4a:	69a9      	ldr	r1, [r5, #24]
 801bb4c:	a812      	add	r0, sp, #72	; 0x48
 801bb4e:	1cca      	adds	r2, r1, #3
 801bb50:	7801      	ldrb	r1, [r0, #0]
 801bb52:	7011      	strb	r1, [r2, #0]
 801bb54:	7841      	ldrb	r1, [r0, #1]
 801bb56:	7051      	strb	r1, [r2, #1]
 801bb58:	9803      	ldr	r0, [sp, #12]
 801bb5a:	2202      	movs	r2, #2
 801bb5c:	a912      	add	r1, sp, #72	; 0x48
 801bb5e:	3008      	adds	r0, #8
 801bb60:	f015 f9c1 	bl	8030ee6 <__aeabi_memcpy>
 801bb64:	f8b8 0204 	ldrh.w	r0, [r8, #516]	; 0x204
 801bb68:	1d40      	adds	r0, r0, #5
 801bb6a:	e010      	b.n	801bb8e <??GATT_Add_Char_Core_15>

0801bb6c <??GATT_Add_Char_Core_14>:
 801bb6c:	69a8      	ldr	r0, [r5, #24]
 801bb6e:	2210      	movs	r2, #16
 801bb70:	a912      	add	r1, sp, #72	; 0x48
 801bb72:	1cc0      	adds	r0, r0, #3
 801bb74:	f015 f9b7 	bl	8030ee6 <__aeabi_memcpy>
 801bb78:	9903      	ldr	r1, [sp, #12]
 801bb7a:	a812      	add	r0, sp, #72	; 0x48
 801bb7c:	f101 0208 	add.w	r2, r1, #8
 801bb80:	e890 500a 	ldmia.w	r0, {r1, r3, ip, lr}
 801bb84:	e882 500a 	stmia.w	r2, {r1, r3, ip, lr}
 801bb88:	f8b8 0204 	ldrh.w	r0, [r8, #516]	; 0x204
 801bb8c:	3013      	adds	r0, #19

0801bb8e <??GATT_Add_Char_Core_15>:
 801bb8e:	f8a8 0204 	strh.w	r0, [r8, #516]	; 0x204
 801bb92:	9805      	ldr	r0, [sp, #20]
 801bb94:	f88b 0001 	strb.w	r0, [fp, #1]
 801bb98:	9904      	ldr	r1, [sp, #16]
 801bb9a:	9803      	ldr	r0, [sp, #12]
 801bb9c:	83c1      	strh	r1, [r0, #30]
 801bb9e:	f89d 100a 	ldrb.w	r1, [sp, #10]
 801bba2:	f88b 1000 	strb.w	r1, [fp]
 801bba6:	9804      	ldr	r0, [sp, #16]
 801bba8:	8428      	strh	r0, [r5, #32]
 801bbaa:	9904      	ldr	r1, [sp, #16]
 801bbac:	9803      	ldr	r0, [sp, #12]
 801bbae:	8401      	strh	r1, [r0, #32]
 801bbb0:	f508 71dc 	add.w	r1, r8, #440	; 0x1b8
 801bbb4:	6c88      	ldr	r0, [r1, #72]	; 0x48
 801bbb6:	f8b8 1204 	ldrh.w	r1, [r8, #516]	; 0x204
 801bbba:	9a03      	ldr	r2, [sp, #12]
 801bbbc:	4408      	add	r0, r1
 801bbbe:	6190      	str	r0, [r2, #24]
 801bbc0:	9907      	ldr	r1, [sp, #28]
 801bbc2:	9a04      	ldr	r2, [sp, #16]
 801bbc4:	4351      	muls	r1, r2
 801bbc6:	f015 f98b 	bl	8030ee0 <__aeabi_memclr>
 801bbca:	f8b8 1204 	ldrh.w	r1, [r8, #516]	; 0x204
 801bbce:	9806      	ldr	r0, [sp, #24]
 801bbd0:	1841      	adds	r1, r0, r1
 801bbd2:	f8a8 1204 	strh.w	r1, [r8, #516]	; 0x204
 801bbd6:	2101      	movs	r1, #1
 801bbd8:	2000      	movs	r0, #0
 801bbda:	70b9      	strb	r1, [r7, #2]
 801bbdc:	70f8      	strb	r0, [r7, #3]
 801bbde:	07b2      	lsls	r2, r6, #30
 801bbe0:	bf48      	it	mi
 801bbe2:	2001      	movmi	r0, #1
 801bbe4:	0731      	lsls	r1, r6, #28
 801bbe6:	bf48      	it	mi
 801bbe8:	f040 0002 	orrmi.w	r0, r0, #2
 801bbec:	f88b 0002 	strb.w	r0, [fp, #2]
 801bbf0:	0771      	lsls	r1, r6, #29
 801bbf2:	d505      	bpl.n	801bc00 <??GATT_Add_Char_Core_16>
 801bbf4:	f89b 0002 	ldrb.w	r0, [fp, #2]
 801bbf8:	f040 0004 	orr.w	r0, r0, #4
 801bbfc:	f88b 0002 	strb.w	r0, [fp, #2]

0801bc00 <??GATT_Add_Char_Core_16>:
 801bc00:	0670      	lsls	r0, r6, #25
 801bc02:	d505      	bpl.n	801bc10 <??GATT_Add_Char_Core_17>
 801bc04:	f89b 1002 	ldrb.w	r1, [fp, #2]
 801bc08:	f041 0108 	orr.w	r1, r1, #8
 801bc0c:	f88b 1002 	strb.w	r1, [fp, #2]

0801bc10 <??GATT_Add_Char_Core_17>:
 801bc10:	f89d 0006 	ldrb.w	r0, [sp, #6]
 801bc14:	f88b 0003 	strb.w	r0, [fp, #3]
 801bc18:	f89d 100b 	ldrb.w	r1, [sp, #11]
 801bc1c:	f109 0018 	add.w	r0, r9, #24
 801bc20:	f88b 1004 	strb.w	r1, [fp, #4]
 801bc24:	4629      	mov	r1, r5
 801bc26:	f009 f971 	bl	8024f0c <CList_Remove_Node>
 801bc2a:	4629      	mov	r1, r5
 801bc2c:	f109 0020 	add.w	r0, r9, #32
 801bc30:	f009 f948 	bl	8024ec4 <CList_Insert>
 801bc34:	9903      	ldr	r1, [sp, #12]
 801bc36:	f109 0018 	add.w	r0, r9, #24
 801bc3a:	f009 f967 	bl	8024f0c <CList_Remove_Node>
 801bc3e:	9903      	ldr	r1, [sp, #12]
 801bc40:	f109 0020 	add.w	r0, r9, #32
 801bc44:	f009 f93e 	bl	8024ec4 <CList_Insert>
 801bc48:	2c00      	cmp	r4, #0
 801bc4a:	d043      	beq.n	801bcd4 <??GATT_Add_Char_Core_18>
 801bc4c:	f8ad a020 	strh.w	sl, [sp, #32]
 801bc50:	8ba8      	ldrh	r0, [r5, #28]
 801bc52:	2102      	movs	r1, #2
 801bc54:	f8ad 1034 	strh.w	r1, [sp, #52]	; 0x34
 801bc58:	f8ad 0022 	strh.w	r0, [sp, #34]	; 0x22
 801bc5c:	f8ad 1036 	strh.w	r1, [sp, #54]	; 0x36
 801bc60:	2101      	movs	r1, #1
 801bc62:	f10d 0041 	add.w	r0, sp, #65	; 0x41
 801bc66:	f88d 1038 	strb.w	r1, [sp, #56]	; 0x38
 801bc6a:	7041      	strb	r1, [r0, #1]
 801bc6c:	f89d 1006 	ldrb.w	r1, [sp, #6]
 801bc70:	aa02      	add	r2, sp, #8
 801bc72:	920f      	str	r2, [sp, #60]	; 0x3c
 801bc74:	f001 0138 	and.w	r1, r1, #56	; 0x38
 801bc78:	220f      	movs	r2, #15
 801bc7a:	f88d 1040 	strb.w	r1, [sp, #64]	; 0x40
 801bc7e:	f88d 2041 	strb.w	r2, [sp, #65]	; 0x41
 801bc82:	2107      	movs	r1, #7
 801bc84:	7081      	strb	r1, [r0, #2]
 801bc86:	2200      	movs	r2, #0
 801bc88:	70c2      	strb	r2, [r0, #3]
 801bc8a:	07f1      	lsls	r1, r6, #31
 801bc8c:	d507      	bpl.n	801bc9e <??GATT_Add_Char_Core_19>
 801bc8e:	f642 1003 	movw	r0, #10499	; 0x2903
 801bc92:	f8ad 0024 	strh.w	r0, [sp, #36]	; 0x24
 801bc96:	a908      	add	r1, sp, #32
 801bc98:	a801      	add	r0, sp, #4
 801bc9a:	f000 f84b 	bl	801bd34 <GATT_Add_Char_Desc_Core>

0801bc9e <??GATT_Add_Char_Core_19>:
 801bc9e:	f016 0030 	ands.w	r0, r6, #48	; 0x30
 801bca2:	d007      	beq.n	801bcb4 <??GATT_Add_Char_Core_20>
 801bca4:	f642 1102 	movw	r1, #10498	; 0x2902
 801bca8:	f8ad 1024 	strh.w	r1, [sp, #36]	; 0x24
 801bcac:	a908      	add	r1, sp, #32
 801bcae:	a801      	add	r0, sp, #4
 801bcb0:	f000 f840 	bl	801bd34 <GATT_Add_Char_Desc_Core>

0801bcb4 <??GATT_Add_Char_Core_20>:
 801bcb4:	0630      	lsls	r0, r6, #24
 801bcb6:	d50d      	bpl.n	801bcd4 <??GATT_Add_Char_Core_18>
 801bcb8:	f44f 5124 	mov.w	r1, #10496	; 0x2900
 801bcbc:	f8ad 1024 	strh.w	r1, [sp, #36]	; 0x24
 801bcc0:	2100      	movs	r1, #0
 801bcc2:	2201      	movs	r2, #1
 801bcc4:	f88d 1040 	strb.w	r1, [sp, #64]	; 0x40
 801bcc8:	f88d 2041 	strb.w	r2, [sp, #65]	; 0x41
 801bccc:	a908      	add	r1, sp, #32
 801bcce:	a801      	add	r0, sp, #4
 801bcd0:	f000 f830 	bl	801bd34 <GATT_Add_Char_Desc_Core>

0801bcd4 <??GATT_Add_Char_Core_18>:
 801bcd4:	9816      	ldr	r0, [sp, #88]	; 0x58
 801bcd6:	2100      	movs	r1, #0
 801bcd8:	8802      	ldrh	r2, [r0, #0]
 801bcda:	2000      	movs	r0, #0
 801bcdc:	18a4      	adds	r4, r4, r2
 801bcde:	1c64      	adds	r4, r4, #1
 801bce0:	b2a3      	uxth	r3, r4
 801bce2:	f000 ff34 	bl	801cb4e <GATT_Update_For_Service_Change>
 801bce6:	2000      	movs	r0, #0

0801bce8 <??GATT_Add_Char_Core_0>:
 801bce8:	e4af      	b.n	801b64a <??aci_gatt_init_0>

0801bcea <aci_gatt_add_char>:
 801bcea:	b5f0      	push	{r4, r5, r6, r7, lr}
 801bcec:	461d      	mov	r5, r3
 801bcee:	b087      	sub	sp, #28
 801bcf0:	4604      	mov	r4, r0
 801bcf2:	460b      	mov	r3, r1
 801bcf4:	f10d 0102 	add.w	r1, sp, #2
 801bcf8:	a801      	add	r0, sp, #4
 801bcfa:	f001 f8a7 	bl	801ce4c <GATT_Set_UUID>
 801bcfe:	0001      	movs	r1, r0
 801bd00:	d116      	bne.n	801bd30 <??aci_gatt_add_char_0>
 801bd02:	9910      	ldr	r1, [sp, #64]	; 0x40
 801bd04:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 801bd06:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801bd08:	9e0d      	ldr	r6, [sp, #52]	; 0x34
 801bd0a:	9f0c      	ldr	r7, [sp, #48]	; 0x30
 801bd0c:	9811      	ldr	r0, [sp, #68]	; 0x44
 801bd0e:	f88d 101a 	strb.w	r1, [sp, #26]
 801bd12:	f8ad 4000 	strh.w	r4, [sp]
 801bd16:	f8ad 5014 	strh.w	r5, [sp, #20]
 801bd1a:	f88d 7016 	strb.w	r7, [sp, #22]
 801bd1e:	f88d 6017 	strb.w	r6, [sp, #23]
 801bd22:	f88d 3018 	strb.w	r3, [sp, #24]
 801bd26:	f88d 2019 	strb.w	r2, [sp, #25]
 801bd2a:	4669      	mov	r1, sp
 801bd2c:	f7ff fe24 	bl	801b978 <GATT_Add_Char_Core>

0801bd30 <??aci_gatt_add_char_0>:
 801bd30:	b007      	add	sp, #28
 801bd32:	bdf0      	pop	{r4, r5, r6, r7, pc}

0801bd34 <GATT_Add_Char_Desc_Core>:
 801bd34:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801bd38:	b092      	sub	sp, #72	; 0x48
 801bd3a:	4607      	mov	r7, r0
 801bd3c:	460c      	mov	r4, r1
 801bd3e:	8820      	ldrh	r0, [r4, #0]
 801bd40:	1d21      	adds	r1, r4, #4
 801bd42:	2210      	movs	r2, #16
 801bd44:	f8ad 0006 	strh.w	r0, [sp, #6]
 801bd48:	8865      	ldrh	r5, [r4, #2]
 801bd4a:	a80e      	add	r0, sp, #56	; 0x38
 801bd4c:	f015 f8cb 	bl	8030ee6 <__aeabi_memcpy>
 801bd50:	7e20      	ldrb	r0, [r4, #24]
 801bd52:	8aa6      	ldrh	r6, [r4, #20]
 801bd54:	f8b4 9016 	ldrh.w	r9, [r4, #22]
 801bd58:	f88d 0004 	strb.w	r0, [sp, #4]
 801bd5c:	69e1      	ldr	r1, [r4, #28]
 801bd5e:	9103      	str	r1, [sp, #12]
 801bd60:	f894 2020 	ldrb.w	r2, [r4, #32]
 801bd64:	f104 0121 	add.w	r1, r4, #33	; 0x21
 801bd68:	f88d 2008 	strb.w	r2, [sp, #8]
 801bd6c:	784a      	ldrb	r2, [r1, #1]
 801bd6e:	f891 8000 	ldrb.w	r8, [r1]
 801bd72:	f88d 2009 	strb.w	r2, [sp, #9]
 801bd76:	788b      	ldrb	r3, [r1, #2]
 801bd78:	f88d 3005 	strb.w	r3, [sp, #5]
 801bd7c:	78cc      	ldrb	r4, [r1, #3]
 801bd7e:	f7ff fb13 	bl	801b3a8 <GATT_Server_Db_Check>
 801bd82:	0001      	movs	r1, r0
 801bd84:	d164      	bne.n	801be50 <??GATT_Add_Char_Desc_Core_0>
 801bd86:	f240 2001 	movw	r0, #513	; 0x201
 801bd8a:	4286      	cmp	r6, r0
 801bd8c:	d25f      	bcs.n	801be4e <??GATT_Add_Char_Desc_Core_1>
 801bd8e:	45b1      	cmp	r9, r6
 801bd90:	db5d      	blt.n	801be4e <??GATT_Add_Char_Desc_Core_1>
 801bd92:	0020      	movs	r0, r4
 801bd94:	d101      	bne.n	801bd9a <??GATT_Add_Char_Desc_Core_2>
 801bd96:	454e      	cmp	r6, r9
 801bd98:	d159      	bne.n	801be4e <??GATT_Add_Char_Desc_Core_1>

0801bd9a <??GATT_Add_Char_Desc_Core_2>:
 801bd9a:	f8df a26c 	ldr.w	sl, [pc, #620]	; 801c008 <??DataTable7>
 801bd9e:	f50a 7bdc 	add.w	fp, sl, #440	; 0x1b8
 801bda2:	f8db 1000 	ldr.w	r1, [fp]
 801bda6:	f8bd 0006 	ldrh.w	r0, [sp, #6]
 801bdaa:	e000      	b.n	801bdae <??GATT_Add_Char_Desc_Core_3>

0801bdac <??GATT_Add_Char_Desc_Core_4>:
 801bdac:	6809      	ldr	r1, [r1, #0]

0801bdae <??GATT_Add_Char_Desc_Core_3>:
 801bdae:	4559      	cmp	r1, fp
 801bdb0:	d018      	beq.n	801bde4 <??GATT_Add_Char_Desc_Core_5>
 801bdb2:	8d0a      	ldrh	r2, [r1, #40]	; 0x28
 801bdb4:	4282      	cmp	r2, r0
 801bdb6:	d1f9      	bne.n	801bdac <??GATT_Add_Char_Desc_Core_4>
 801bdb8:	6a08      	ldr	r0, [r1, #32]
 801bdba:	f101 0220 	add.w	r2, r1, #32
 801bdbe:	e000      	b.n	801bdc2 <??GATT_Add_Char_Desc_Core_6>

0801bdc0 <??GATT_Add_Char_Desc_Core_7>:
 801bdc0:	6800      	ldr	r0, [r0, #0]

0801bdc2 <??GATT_Add_Char_Desc_Core_6>:
 801bdc2:	4290      	cmp	r0, r2
 801bdc4:	d00e      	beq.n	801bde4 <??GATT_Add_Char_Desc_Core_5>
 801bdc6:	8b83      	ldrh	r3, [r0, #28]
 801bdc8:	42ab      	cmp	r3, r5
 801bdca:	d1f9      	bne.n	801bdc0 <??GATT_Add_Char_Desc_Core_7>
 801bdcc:	460d      	mov	r5, r1
 801bdce:	9004      	str	r0, [sp, #16]
 801bdd0:	4669      	mov	r1, sp
 801bdd2:	f105 0018 	add.w	r0, r5, #24
 801bdd6:	f009 f8aa 	bl	8024f2e <CList_Get_Size>
 801bdda:	f8bd 0000 	ldrh.w	r0, [sp]
 801bdde:	b918      	cbnz	r0, 801bde8 <??GATT_Add_Char_Desc_Core_8>

0801bde0 <??GATT_Add_Char_Desc_Core_9>:
 801bde0:	2098      	movs	r0, #152	; 0x98
 801bde2:	e10d      	b.n	801c000 <?Subroutine2>

0801bde4 <??GATT_Add_Char_Desc_Core_5>:
 801bde4:	2060      	movs	r0, #96	; 0x60
 801bde6:	e10b      	b.n	801c000 <?Subroutine2>

0801bde8 <??GATT_Add_Char_Desc_Core_8>:
 801bde8:	f10d 0102 	add.w	r1, sp, #2
 801bdec:	f105 0020 	add.w	r0, r5, #32
 801bdf0:	f009 f89d 	bl	8024f2e <CList_Get_Size>
 801bdf4:	6a69      	ldr	r1, [r5, #36]	; 0x24
 801bdf6:	8d28      	ldrh	r0, [r5, #40]	; 0x28
 801bdf8:	f8bd 2000 	ldrh.w	r2, [sp]
 801bdfc:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 801be00:	1810      	adds	r0, r2, r0
 801be02:	8b8a      	ldrh	r2, [r1, #28]
 801be04:	1818      	adds	r0, r3, r0
 801be06:	1a80      	subs	r0, r0, r2
 801be08:	bf08      	it	eq
 801be0a:	2061      	moveq	r0, #97	; 0x61
 801be0c:	d020      	beq.n	801be50 <??GATT_Add_Char_Desc_Core_0>
 801be0e:	9804      	ldr	r0, [sp, #16]
 801be10:	f642 0303 	movw	r3, #10243	; 0x2803
 801be14:	8902      	ldrh	r2, [r0, #8]
 801be16:	429a      	cmp	r2, r3
 801be18:	bf04      	itt	eq
 801be1a:	f890 2023 	ldrbeq.w	r2, [r0, #35]	; 0x23
 801be1e:	2a01      	cmpeq	r2, #1
 801be20:	d115      	bne.n	801be4e <??GATT_Add_Char_Desc_Core_1>
 801be22:	6802      	ldr	r2, [r0, #0]
 801be24:	f89d 0004 	ldrb.w	r0, [sp, #4]
 801be28:	6812      	ldr	r2, [r2, #0]
 801be2a:	2801      	cmp	r0, #1
 801be2c:	d120      	bne.n	801be70 <??GATT_Add_Char_Desc_Core_10>
 801be2e:	f8bd 0038 	ldrh.w	r0, [sp, #56]	; 0x38
 801be32:	f44f 5324 	mov.w	r3, #10496	; 0x2900
 801be36:	1ac0      	subs	r0, r0, r3
 801be38:	d007      	beq.n	801be4a <??GATT_Add_Char_Desc_Core_11>
 801be3a:	1e80      	subs	r0, r0, #2
 801be3c:	2801      	cmp	r0, #1
 801be3e:	d904      	bls.n	801be4a <??GATT_Add_Char_Desc_Core_11>
 801be40:	1e80      	subs	r0, r0, #2
 801be42:	d006      	beq.n	801be52 <??GATT_Add_Char_Desc_Core_12>
 801be44:	1e40      	subs	r0, r0, #1
 801be46:	d007      	beq.n	801be58 <??GATT_Add_Char_Desc_Core_13>
 801be48:	e012      	b.n	801be70 <??GATT_Add_Char_Desc_Core_10>

0801be4a <??GATT_Add_Char_Desc_Core_11>:
 801be4a:	2e02      	cmp	r6, #2
 801be4c:	d010      	beq.n	801be70 <??GATT_Add_Char_Desc_Core_10>

0801be4e <??GATT_Add_Char_Desc_Core_1>:
 801be4e:	2092      	movs	r0, #146	; 0x92

0801be50 <??GATT_Add_Char_Desc_Core_0>:
 801be50:	e0d6      	b.n	801c000 <?Subroutine2>

0801be52 <??GATT_Add_Char_Desc_Core_12>:
 801be52:	2e07      	cmp	r6, #7
 801be54:	d1fb      	bne.n	801be4e <??GATT_Add_Char_Desc_Core_1>
 801be56:	e00b      	b.n	801be70 <??GATT_Add_Char_Desc_Core_10>

0801be58 <??GATT_Add_Char_Desc_Core_13>:
 801be58:	2e04      	cmp	r6, #4
 801be5a:	d3f8      	bcc.n	801be4e <??GATT_Add_Char_Desc_Core_1>
 801be5c:	07f0      	lsls	r0, r6, #31
 801be5e:	d4f6      	bmi.n	801be4e <??GATT_Add_Char_Desc_Core_1>
 801be60:	2c01      	cmp	r4, #1
 801be62:	d105      	bne.n	801be70 <??GATT_Add_Char_Desc_Core_10>
 801be64:	f1b9 0f04 	cmp.w	r9, #4
 801be68:	d3f1      	bcc.n	801be4e <??GATT_Add_Char_Desc_Core_1>
 801be6a:	ea5f 73c9 	movs.w	r3, r9, lsl #31
 801be6e:	d4ee      	bmi.n	801be4e <??GATT_Add_Char_Desc_Core_1>

0801be70 <??GATT_Add_Char_Desc_Core_10>:
 801be70:	f8ad 6006 	strh.w	r6, [sp, #6]
 801be74:	f8ad 900a 	strh.w	r9, [sp, #10]
 801be78:	ae0e      	add	r6, sp, #56	; 0x38
 801be7a:	e896 5201 	ldmia.w	r6, {r0, r9, ip, lr}
 801be7e:	ab05      	add	r3, sp, #20
 801be80:	e883 5201 	stmia.w	r3, {r0, r9, ip, lr}
 801be84:	f89d 0004 	ldrb.w	r0, [sp, #4]
 801be88:	2801      	cmp	r0, #1
 801be8a:	d10c      	bne.n	801bea6 <??GATT_Add_Char_Desc_Core_14>
 801be8c:	f8bd 0014 	ldrh.w	r0, [sp, #20]
 801be90:	f642 1302 	movw	r3, #10498	; 0x2902
 801be94:	4298      	cmp	r0, r3
 801be96:	bf1c      	itt	ne
 801be98:	f642 3329 	movwne	r3, #11049	; 0x2b29
 801be9c:	4298      	cmpne	r0, r3
 801be9e:	d102      	bne.n	801bea6 <??GATT_Add_Char_Desc_Core_14>
 801bea0:	4e5a      	ldr	r6, [pc, #360]	; (801c00c <??DataTable7_1>)
 801bea2:	7db0      	ldrb	r0, [r6, #22]
 801bea4:	e000      	b.n	801bea8 <??GATT_Add_Char_Desc_Core_15>

0801bea6 <??GATT_Add_Char_Desc_Core_14>:
 801bea6:	2001      	movs	r0, #1

0801bea8 <??GATT_Add_Char_Desc_Core_15>:
 801bea8:	9004      	str	r0, [sp, #16]
 801beaa:	9b04      	ldr	r3, [sp, #16]
 801beac:	f8bd 000a 	ldrh.w	r0, [sp, #10]
 801beb0:	4343      	muls	r3, r0
 801beb2:	f8ba 0204 	ldrh.w	r0, [sl, #516]	; 0x204
 801beb6:	9309      	str	r3, [sp, #36]	; 0x24
 801beb8:	4b54      	ldr	r3, [pc, #336]	; (801c00c <??DataTable7_1>)
 801beba:	8a9e      	ldrh	r6, [r3, #20]
 801bebc:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801bebe:	1a36      	subs	r6, r6, r0
 801bec0:	429e      	cmp	r6, r3
 801bec2:	da01      	bge.n	801bec8 <??GATT_Add_Char_Desc_Core_16>
 801bec4:	e78c      	b.n	801bde0 <??GATT_Add_Char_Desc_Core_9>

0801bec6 <??GATT_Add_Char_Desc_Core_17>:
 801bec6:	6812      	ldr	r2, [r2, #0]

0801bec8 <??GATT_Add_Char_Desc_Core_16>:
 801bec8:	f105 0020 	add.w	r0, r5, #32
 801becc:	4282      	cmp	r2, r0
 801bece:	d01e      	beq.n	801bf0e <??GATT_Add_Char_Desc_Core_18>
 801bed0:	f892 3023 	ldrb.w	r3, [r2, #35]	; 0x23
 801bed4:	2b01      	cmp	r3, #1
 801bed6:	d1f6      	bne.n	801bec6 <??GATT_Add_Char_Desc_Core_17>
 801bed8:	8910      	ldrh	r0, [r2, #8]
 801beda:	f8ad 0028 	strh.w	r0, [sp, #40]	; 0x28
 801bede:	f5b0 5f24 	cmp.w	r0, #10496	; 0x2900
 801bee2:	bf1c      	itt	ne
 801bee4:	f642 1301 	movwne	r3, #10497	; 0x2901
 801bee8:	4298      	cmpne	r0, r3
 801beea:	d00a      	beq.n	801bf02 <??GATT_Add_Char_Desc_Core_19>
 801beec:	f642 1302 	movw	r3, #10498	; 0x2902
 801bef0:	4298      	cmp	r0, r3
 801bef2:	bf1f      	itttt	ne
 801bef4:	f642 1303 	movwne	r3, #10499	; 0x2903
 801bef8:	4298      	cmpne	r0, r3
 801befa:	f642 1305 	movwne	r3, #10501	; 0x2905
 801befe:	4298      	cmpne	r0, r3
 801bf00:	d1e1      	bne.n	801bec6 <??GATT_Add_Char_Desc_Core_17>

0801bf02 <??GATT_Add_Char_Desc_Core_19>:
 801bf02:	f8bd 3014 	ldrh.w	r3, [sp, #20]
 801bf06:	4298      	cmp	r0, r3
 801bf08:	d1dd      	bne.n	801bec6 <??GATT_Add_Char_Desc_Core_17>
 801bf0a:	2062      	movs	r0, #98	; 0x62
 801bf0c:	e078      	b.n	801c000 <?Subroutine2>

0801bf0e <??GATT_Add_Char_Desc_Core_18>:
 801bf0e:	f89d 0008 	ldrb.w	r0, [sp, #8]
 801bf12:	69ae      	ldr	r6, [r5, #24]
 801bf14:	f010 0f24 	tst.w	r0, #36	; 0x24
 801bf18:	d009      	beq.n	801bf2e <??GATT_Add_Char_Desc_Core_20>
 801bf1a:	f89d 0005 	ldrb.w	r0, [sp, #5]
 801bf1e:	1fc0      	subs	r0, r0, #7
 801bf20:	280a      	cmp	r0, #10
 801bf22:	d294      	bcs.n	801be4e <??GATT_Add_Char_Desc_Core_1>
 801bf24:	f89d 0005 	ldrb.w	r0, [sp, #5]
 801bf28:	f106 0222 	add.w	r2, r6, #34	; 0x22
 801bf2c:	7150      	strb	r0, [r2, #5]

0801bf2e <??GATT_Add_Char_Desc_Core_20>:
 801bf2e:	0020      	movs	r0, r4
 801bf30:	d005      	beq.n	801bf3e <??GATT_Add_Char_Desc_Core_21>
 801bf32:	f8bd 000a 	ldrh.w	r0, [sp, #10]
 801bf36:	f8bd 2006 	ldrh.w	r2, [sp, #6]
 801bf3a:	4290      	cmp	r0, r2
 801bf3c:	d387      	bcc.n	801be4e <??GATT_Add_Char_Desc_Core_1>

0801bf3e <??GATT_Add_Char_Desc_Core_21>:
 801bf3e:	f8bd 0006 	ldrh.w	r0, [sp, #6]
 801bf42:	f106 0922 	add.w	r9, r6, #34	; 0x22
 801bf46:	83f0      	strh	r0, [r6, #30]
 801bf48:	f889 4000 	strb.w	r4, [r9]
 801bf4c:	f8bd 000a 	ldrh.w	r0, [sp, #10]
 801bf50:	8430      	strh	r0, [r6, #32]
 801bf52:	8b89      	ldrh	r1, [r1, #28]
 801bf54:	1c49      	adds	r1, r1, #1
 801bf56:	83b1      	strh	r1, [r6, #28]
 801bf58:	f89d 0004 	ldrb.w	r0, [sp, #4]
 801bf5c:	2801      	cmp	r0, #1
 801bf5e:	d106      	bne.n	801bf6e <??GATT_Add_Char_Desc_Core_22>
 801bf60:	f106 0008 	add.w	r0, r6, #8
 801bf64:	a905      	add	r1, sp, #20
 801bf66:	2210      	movs	r2, #16
 801bf68:	f014 ffbd 	bl	8030ee6 <__aeabi_memcpy>
 801bf6c:	e006      	b.n	801bf7c <??GATT_Add_Char_Desc_Core_23>

0801bf6e <??GATT_Add_Char_Desc_Core_22>:
 801bf6e:	a805      	add	r0, sp, #20
 801bf70:	e890 101c 	ldmia.w	r0, {r2, r3, r4, ip}
 801bf74:	f106 0108 	add.w	r1, r6, #8
 801bf78:	e881 101c 	stmia.w	r1, {r2, r3, r4, ip}

0801bf7c <??GATT_Add_Char_Desc_Core_23>:
 801bf7c:	f89d 0004 	ldrb.w	r0, [sp, #4]
 801bf80:	f889 0001 	strb.w	r0, [r9, #1]
 801bf84:	f8ba 1204 	ldrh.w	r1, [sl, #516]	; 0x204
 801bf88:	f8db 2048 	ldr.w	r2, [fp, #72]	; 0x48
 801bf8c:	f04f 0b00 	mov.w	fp, #0
 801bf90:	440a      	add	r2, r1
 801bf92:	61b2      	str	r2, [r6, #24]
 801bf94:	9809      	ldr	r0, [sp, #36]	; 0x24
 801bf96:	1841      	adds	r1, r0, r1
 801bf98:	9804      	ldr	r0, [sp, #16]
 801bf9a:	f8aa 1204 	strh.w	r1, [sl, #516]	; 0x204
 801bf9e:	2800      	cmp	r0, #0
 801bfa0:	dd0c      	ble.n	801bfbc <??GATT_Add_Char_Desc_Core_24>
 801bfa2:	4604      	mov	r4, r0
 801bfa4:	f8bd a00a 	ldrh.w	sl, [sp, #10]

0801bfa8 <??GATT_Add_Char_Desc_Core_25>:
 801bfa8:	69b0      	ldr	r0, [r6, #24]
 801bfaa:	f8bd 2006 	ldrh.w	r2, [sp, #6]
 801bfae:	9903      	ldr	r1, [sp, #12]
 801bfb0:	4458      	add	r0, fp
 801bfb2:	44d3      	add	fp, sl
 801bfb4:	f014 ff97 	bl	8030ee6 <__aeabi_memcpy>
 801bfb8:	1e64      	subs	r4, r4, #1
 801bfba:	d1f5      	bne.n	801bfa8 <??GATT_Add_Char_Desc_Core_25>

0801bfbc <??GATT_Add_Char_Desc_Core_24>:
 801bfbc:	f89d 0008 	ldrb.w	r0, [sp, #8]
 801bfc0:	f889 8002 	strb.w	r8, [r9, #2]
 801bfc4:	4631      	mov	r1, r6
 801bfc6:	f889 0003 	strb.w	r0, [r9, #3]
 801bfca:	f89d 0009 	ldrb.w	r0, [sp, #9]
 801bfce:	f889 0004 	strb.w	r0, [r9, #4]
 801bfd2:	f105 0018 	add.w	r0, r5, #24
 801bfd6:	f008 ff99 	bl	8024f0c <CList_Remove_Node>
 801bfda:	4631      	mov	r1, r6
 801bfdc:	f105 0020 	add.w	r0, r5, #32
 801bfe0:	f008 ff70 	bl	8024ec4 <CList_Insert>
 801bfe4:	8bb2      	ldrh	r2, [r6, #28]
 801bfe6:	f642 1102 	movw	r1, #10498	; 0x2902
 801bfea:	803a      	strh	r2, [r7, #0]
 801bfec:	f8bd 0038 	ldrh.w	r0, [sp, #56]	; 0x38
 801bff0:	4288      	cmp	r0, r1
 801bff2:	d004      	beq.n	801bffe <??GATT_Add_Char_Desc_Core_26>
 801bff4:	4613      	mov	r3, r2
 801bff6:	2100      	movs	r1, #0
 801bff8:	2000      	movs	r0, #0
 801bffa:	f000 fda8 	bl	801cb4e <GATT_Update_For_Service_Change>

0801bffe <??GATT_Add_Char_Desc_Core_26>:
 801bffe:	2000      	movs	r0, #0

0801c000 <?Subroutine2>:
 801c000:	b013      	add	sp, #76	; 0x4c
 801c002:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
	...

0801c008 <??DataTable7>:
 801c008:	3710 2000                                   .7. 

0801c00c <??DataTable7_1>:
 801c00c:	36e8 2000                                   .6. 

0801c010 <aci_gatt_add_char_desc>:
 801c010:	e92d 44fc 	stmdb	sp!, {r2, r3, r4, r5, r6, r7, sl, lr}
 801c014:	4604      	mov	r4, r0
 801c016:	4618      	mov	r0, r3
 801c018:	4613      	mov	r3, r2
 801c01a:	b08a      	sub	sp, #40	; 0x28
 801c01c:	468a      	mov	sl, r1
 801c01e:	4602      	mov	r2, r0
 801c020:	a906      	add	r1, sp, #24
 801c022:	a801      	add	r0, sp, #4
 801c024:	f000 ff12 	bl	801ce4c <GATT_Set_UUID>
 801c028:	0001      	movs	r1, r0
 801c02a:	d11f      	bne.n	801c06c <??aci_gatt_add_char_desc_0>
 801c02c:	9d14      	ldr	r5, [sp, #80]	; 0x50
 801c02e:	981a      	ldr	r0, [sp, #104]	; 0x68
 801c030:	9919      	ldr	r1, [sp, #100]	; 0x64
 801c032:	9a18      	ldr	r2, [sp, #96]	; 0x60
 801c034:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 801c036:	9e16      	ldr	r6, [sp, #88]	; 0x58
 801c038:	9f15      	ldr	r7, [sp, #84]	; 0x54
 801c03a:	f8dd c04c 	ldr.w	ip, [sp, #76]	; 0x4c
 801c03e:	f8dd e048 	ldr.w	lr, [sp, #72]	; 0x48
 801c042:	9507      	str	r5, [sp, #28]
 801c044:	f8ad 4000 	strh.w	r4, [sp]
 801c048:	f10d 0421 	add.w	r4, sp, #33	; 0x21
 801c04c:	70e1      	strb	r1, [r4, #3]
 801c04e:	f8ad a002 	strh.w	sl, [sp, #2]
 801c052:	f88d 7020 	strb.w	r7, [sp, #32]
 801c056:	f88d 6021 	strb.w	r6, [sp, #33]	; 0x21
 801c05a:	7063      	strb	r3, [r4, #1]
 801c05c:	70a2      	strb	r2, [r4, #2]
 801c05e:	f8ad c014 	strh.w	ip, [sp, #20]
 801c062:	f8ad e016 	strh.w	lr, [sp, #22]
 801c066:	4669      	mov	r1, sp
 801c068:	f7ff fe64 	bl	801bd34 <GATT_Add_Char_Desc_Core>

0801c06c <??aci_gatt_add_char_desc_0>:
 801c06c:	b00c      	add	sp, #48	; 0x30
 801c06e:	e8bd 84f0 	ldmia.w	sp!, {r4, r5, r6, r7, sl, pc}

0801c072 <aci_gatt_set_desc_value>:
 801c072:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 801c076:	469a      	mov	sl, r3
 801c078:	4c5b      	ldr	r4, [pc, #364]	; (801c1e8 <??DataTable9_2>)
 801c07a:	f504 73d6 	add.w	r3, r4, #428	; 0x1ac
 801c07e:	781d      	ldrb	r5, [r3, #0]
 801c080:	f8dd 8020 	ldr.w	r8, [sp, #32]
 801c084:	ea5f 7cc5 	movs.w	ip, r5, lsl #31
 801c088:	d570      	bpl.n	801c16c <??aci_gatt_set_desc_value_0>
 801c08a:	f240 2501 	movw	r5, #513	; 0x201
 801c08e:	45a8      	cmp	r8, r5
 801c090:	d269      	bcs.n	801c166 <??aci_gatt_set_desc_value_1>
 801c092:	68db      	ldr	r3, [r3, #12]
 801c094:	f504 74dc 	add.w	r4, r4, #440	; 0x1b8
 801c098:	e000      	b.n	801c09c <??aci_gatt_set_desc_value_2>

0801c09a <??aci_gatt_set_desc_value_3>:
 801c09a:	681b      	ldr	r3, [r3, #0]

0801c09c <??aci_gatt_set_desc_value_2>:
 801c09c:	42a3      	cmp	r3, r4
 801c09e:	d061      	beq.n	801c164 <??aci_gatt_set_desc_value_4>
 801c0a0:	8d1d      	ldrh	r5, [r3, #40]	; 0x28
 801c0a2:	4285      	cmp	r5, r0
 801c0a4:	d1f9      	bne.n	801c09a <??aci_gatt_set_desc_value_3>
 801c0a6:	6a1c      	ldr	r4, [r3, #32]
 801c0a8:	f103 0020 	add.w	r0, r3, #32
 801c0ac:	e000      	b.n	801c0b0 <??aci_gatt_set_desc_value_5>

0801c0ae <??aci_gatt_set_desc_value_6>:
 801c0ae:	6824      	ldr	r4, [r4, #0]

0801c0b0 <??aci_gatt_set_desc_value_5>:
 801c0b0:	4284      	cmp	r4, r0
 801c0b2:	d057      	beq.n	801c164 <??aci_gatt_set_desc_value_4>
 801c0b4:	8ba5      	ldrh	r5, [r4, #28]
 801c0b6:	428d      	cmp	r5, r1
 801c0b8:	d1f9      	bne.n	801c0ae <??aci_gatt_set_desc_value_6>
 801c0ba:	8921      	ldrh	r1, [r4, #8]
 801c0bc:	f642 0003 	movw	r0, #10243	; 0x2803
 801c0c0:	4281      	cmp	r1, r0
 801c0c2:	bf04      	itt	eq
 801c0c4:	f894 5023 	ldrbeq.w	r5, [r4, #35]	; 0x23
 801c0c8:	2d01      	cmpeq	r5, #1
 801c0ca:	d14c      	bne.n	801c166 <??aci_gatt_set_desc_value_1>
 801c0cc:	6821      	ldr	r1, [r4, #0]
 801c0ce:	680f      	ldr	r7, [r1, #0]
 801c0d0:	e000      	b.n	801c0d4 <??aci_gatt_set_desc_value_7>

0801c0d2 <??aci_gatt_set_desc_value_8>:
 801c0d2:	683f      	ldr	r7, [r7, #0]

0801c0d4 <??aci_gatt_set_desc_value_7>:
 801c0d4:	f103 0120 	add.w	r1, r3, #32
 801c0d8:	428f      	cmp	r7, r1
 801c0da:	d043      	beq.n	801c164 <??aci_gatt_set_desc_value_4>
 801c0dc:	8939      	ldrh	r1, [r7, #8]
 801c0de:	4281      	cmp	r1, r0
 801c0e0:	bf02      	ittt	eq
 801c0e2:	f107 0422 	addeq.w	r4, r7, #34	; 0x22
 801c0e6:	7865      	ldrbeq	r5, [r4, #1]
 801c0e8:	2d01      	cmpeq	r5, #1
 801c0ea:	d03b      	beq.n	801c164 <??aci_gatt_set_desc_value_4>
 801c0ec:	8bbc      	ldrh	r4, [r7, #28]
 801c0ee:	4294      	cmp	r4, r2
 801c0f0:	d1ef      	bne.n	801c0d2 <??aci_gatt_set_desc_value_8>
 801c0f2:	f107 0622 	add.w	r6, r7, #34	; 0x22
 801c0f6:	7830      	ldrb	r0, [r6, #0]
 801c0f8:	b920      	cbnz	r0, 801c104 <??aci_gatt_set_desc_value_9>
 801c0fa:	8bfa      	ldrh	r2, [r7, #30]
 801c0fc:	eb0a 0308 	add.w	r3, sl, r8
 801c100:	429a      	cmp	r2, r3
 801c102:	da06      	bge.n	801c112 <??aci_gatt_set_desc_value_10>

0801c104 <??aci_gatt_set_desc_value_9>:
 801c104:	2801      	cmp	r0, #1
 801c106:	d131      	bne.n	801c16c <??aci_gatt_set_desc_value_0>
 801c108:	8c38      	ldrh	r0, [r7, #32]
 801c10a:	eb0a 0208 	add.w	r2, sl, r8
 801c10e:	4290      	cmp	r0, r2
 801c110:	db2c      	blt.n	801c16c <??aci_gatt_set_desc_value_0>

0801c112 <??aci_gatt_set_desc_value_10>:
 801c112:	7873      	ldrb	r3, [r6, #1]
 801c114:	2b01      	cmp	r3, #1
 801c116:	d10a      	bne.n	801c12e <??aci_gatt_set_desc_value_11>
 801c118:	f642 1002 	movw	r0, #10498	; 0x2902
 801c11c:	4281      	cmp	r1, r0
 801c11e:	bf1c      	itt	ne
 801c120:	f642 3229 	movwne	r2, #11049	; 0x2b29
 801c124:	4291      	cmpne	r1, r2
 801c126:	d102      	bne.n	801c12e <??aci_gatt_set_desc_value_11>
 801c128:	4830      	ldr	r0, [pc, #192]	; (801c1ec <??DataTable9_3>)
 801c12a:	7d84      	ldrb	r4, [r0, #22]
 801c12c:	e000      	b.n	801c130 <??aci_gatt_set_desc_value_12>

0801c12e <??aci_gatt_set_desc_value_11>:
 801c12e:	2401      	movs	r4, #1

0801c130 <??aci_gatt_set_desc_value_12>:
 801c130:	f04f 0900 	mov.w	r9, #0
 801c134:	2c00      	cmp	r4, #0
 801c136:	dd09      	ble.n	801c14c <??aci_gatt_set_desc_value_13>
 801c138:	9d09      	ldr	r5, [sp, #36]	; 0x24

0801c13a <??aci_gatt_set_desc_value_14>:
 801c13a:	69b8      	ldr	r0, [r7, #24]
 801c13c:	4642      	mov	r2, r8
 801c13e:	4629      	mov	r1, r5
 801c140:	4448      	add	r0, r9
 801c142:	f014 fed0 	bl	8030ee6 <__aeabi_memcpy>
 801c146:	44c1      	add	r9, r8
 801c148:	1e64      	subs	r4, r4, #1
 801c14a:	d1f6      	bne.n	801c13a <??aci_gatt_set_desc_value_14>

0801c14c <??aci_gatt_set_desc_value_13>:
 801c14c:	7830      	ldrb	r0, [r6, #0]
 801c14e:	b130      	cbz	r0, 801c15e <??aci_gatt_set_desc_value_15>
 801c150:	f1ba 0f00 	cmp.w	sl, #0
 801c154:	bf1a      	itte	ne
 801c156:	8c38      	ldrhne	r0, [r7, #32]
 801c158:	83f8      	strhne	r0, [r7, #30]
 801c15a:	f8a7 801e 	strheq.w	r8, [r7, #30]

0801c15e <??aci_gatt_set_desc_value_15>:
 801c15e:	2000      	movs	r0, #0
 801c160:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}

0801c164 <??aci_gatt_set_desc_value_4>:
 801c164:	e313      	b.n	801c78e <?Subroutine5>

0801c166 <??aci_gatt_set_desc_value_1>:
 801c166:	2092      	movs	r0, #146	; 0x92
 801c168:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}

0801c16c <??aci_gatt_set_desc_value_0>:
 801c16c:	2097      	movs	r0, #151	; 0x97
 801c16e:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}

0801c172 <aci_gatt_update_char_value>:
 801c172:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 801c174:	4c1c      	ldr	r4, [pc, #112]	; (801c1e8 <??DataTable9_2>)
 801c176:	f504 75d6 	add.w	r5, r4, #428	; 0x1ac
 801c17a:	782e      	ldrb	r6, [r5, #0]
 801c17c:	b084      	sub	sp, #16
 801c17e:	07f7      	lsls	r7, r6, #31
 801c180:	bf58      	it	pl
 801c182:	2097      	movpl	r0, #151	; 0x97
 801c184:	d527      	bpl.n	801c1d6 <??aci_gatt_update_char_value_0>
 801c186:	68ed      	ldr	r5, [r5, #12]
 801c188:	f504 74dc 	add.w	r4, r4, #440	; 0x1b8
 801c18c:	e000      	b.n	801c190 <??aci_gatt_update_char_value_1>

0801c18e <??aci_gatt_update_char_value_2>:
 801c18e:	682d      	ldr	r5, [r5, #0]

0801c190 <??aci_gatt_update_char_value_1>:
 801c190:	42a5      	cmp	r5, r4
 801c192:	d022      	beq.n	801c1da <??aci_gatt_update_char_value_3>
 801c194:	8d2e      	ldrh	r6, [r5, #40]	; 0x28
 801c196:	4286      	cmp	r6, r0
 801c198:	d1f9      	bne.n	801c18e <??aci_gatt_update_char_value_2>
 801c19a:	6a2c      	ldr	r4, [r5, #32]
 801c19c:	f105 0620 	add.w	r6, r5, #32
 801c1a0:	e000      	b.n	801c1a4 <??aci_gatt_update_char_value_4>

0801c1a2 <??aci_gatt_update_char_value_5>:
 801c1a2:	6824      	ldr	r4, [r4, #0]

0801c1a4 <??aci_gatt_update_char_value_4>:
 801c1a4:	42b4      	cmp	r4, r6
 801c1a6:	d018      	beq.n	801c1da <??aci_gatt_update_char_value_3>
 801c1a8:	8ba7      	ldrh	r7, [r4, #28]
 801c1aa:	428f      	cmp	r7, r1
 801c1ac:	d1f9      	bne.n	801c1a2 <??aci_gatt_update_char_value_5>
 801c1ae:	0015      	movs	r5, r2
 801c1b0:	bf1a      	itte	ne
 801c1b2:	6824      	ldrne	r4, [r4, #0]
 801c1b4:	8c24      	ldrhne	r4, [r4, #32]
 801c1b6:	461c      	moveq	r4, r3
 801c1b8:	f8ad 200c 	strh.w	r2, [sp, #12]
 801c1bc:	9d0a      	ldr	r5, [sp, #40]	; 0x28
 801c1be:	460a      	mov	r2, r1
 801c1c0:	f8ad 300e 	strh.w	r3, [sp, #14]
 801c1c4:	ae03      	add	r6, sp, #12
 801c1c6:	4601      	mov	r1, r0
 801c1c8:	9502      	str	r5, [sp, #8]
 801c1ca:	9601      	str	r6, [sp, #4]
 801c1cc:	9400      	str	r4, [sp, #0]
 801c1ce:	2303      	movs	r3, #3
 801c1d0:	2000      	movs	r0, #0
 801c1d2:	f000 f80d 	bl	801c1f0 <GATT_Update_Char_Value_Core>

0801c1d6 <??aci_gatt_update_char_value_0>:
 801c1d6:	b005      	add	sp, #20
 801c1d8:	bdf0      	pop	{r4, r5, r6, r7, pc}

0801c1da <??aci_gatt_update_char_value_3>:
 801c1da:	2060      	movs	r0, #96	; 0x60
 801c1dc:	b005      	add	sp, #20
 801c1de:	bdf0      	pop	{r4, r5, r6, r7, pc}

0801c1e0 <??DataTable9>:
 801c1e0:	38c0 2000                                   .8. 

0801c1e4 <??DataTable9_1>:
 801c1e4:	38d0 2000                                   .8. 

0801c1e8 <??DataTable9_2>:
 801c1e8:	3710 2000                                   .7. 

0801c1ec <??DataTable9_3>:
 801c1ec:	36e8 2000                                   .6. 

0801c1f0 <GATT_Update_Char_Value_Core>:
 801c1f0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801c1f4:	b08d      	sub	sp, #52	; 0x34
 801c1f6:	4680      	mov	r8, r0
 801c1f8:	2703      	movs	r7, #3
 801c1fa:	9817      	ldr	r0, [sp, #92]	; 0x5c
 801c1fc:	f8ad 701a 	strh.w	r7, [sp, #26]
 801c200:	2400      	movs	r4, #0
 801c202:	af04      	add	r7, sp, #16
 801c204:	9402      	str	r4, [sp, #8]
 801c206:	e9c7 4400 	strd	r4, r4, [r7]
 801c20a:	f8b0 e002 	ldrh.w	lr, [r0, #2]
 801c20e:	2600      	movs	r6, #0
 801c210:	46a3      	mov	fp, r4
 801c212:	f8cd e02c 	str.w	lr, [sp, #44]	; 0x2c
 801c216:	8807      	ldrh	r7, [r0, #0]
 801c218:	f8df ebb4 	ldr.w	lr, [pc, #2996]	; 801cdd0 <??DataTable22>
 801c21c:	f8cd e004 	str.w	lr, [sp, #4]
 801c220:	970a      	str	r7, [sp, #40]	; 0x28
 801c222:	f89e 7000 	ldrb.w	r7, [lr]
 801c226:	ea5f 7cc7 	movs.w	ip, r7, lsl #31
 801c22a:	bf58      	it	pl
 801c22c:	2097      	movpl	r0, #151	; 0x97
 801c22e:	f140 81f9 	bpl.w	801c624 <??GATT_Update_Char_Value_Core_1>
 801c232:	f8de 000c 	ldr.w	r0, [lr, #12]
 801c236:	f8df c004 	ldr.w	ip, [pc, #4]	; 801c23c <??GATT_Update_Char_Value_Core_0>
 801c23a:	e002      	b.n	801c242 <??GATT_Update_Char_Value_Core_2>

0801c23c <??GATT_Update_Char_Value_Core_0>:
 801c23c:	38c8 2000                                   .8. 

0801c240 <??GATT_Update_Char_Value_Core_3>:
 801c240:	6800      	ldr	r0, [r0, #0]

0801c242 <??GATT_Update_Char_Value_Core_2>:
 801c242:	4560      	cmp	r0, ip
 801c244:	d038      	beq.n	801c2b8 <??GATT_Update_Char_Value_Core_4>
 801c246:	f8b0 e028 	ldrh.w	lr, [r0, #40]	; 0x28
 801c24a:	458e      	cmp	lr, r1
 801c24c:	d1f8      	bne.n	801c240 <??GATT_Update_Char_Value_Core_3>
 801c24e:	6a05      	ldr	r5, [r0, #32]
 801c250:	f100 0120 	add.w	r1, r0, #32
 801c254:	e000      	b.n	801c258 <??GATT_Update_Char_Value_Core_5>

0801c256 <??GATT_Update_Char_Value_Core_6>:
 801c256:	682d      	ldr	r5, [r5, #0]

0801c258 <??GATT_Update_Char_Value_Core_5>:
 801c258:	428d      	cmp	r5, r1
 801c25a:	d02d      	beq.n	801c2b8 <??GATT_Update_Char_Value_Core_4>
 801c25c:	f8b5 e01c 	ldrh.w	lr, [r5, #28]
 801c260:	4596      	cmp	lr, r2
 801c262:	d1f8      	bne.n	801c256 <??GATT_Update_Char_Value_Core_6>
 801c264:	4601      	mov	r1, r0
 801c266:	f8ad 8000 	strh.w	r8, [sp]
 801c26a:	f1b8 0f00 	cmp.w	r8, #0
 801c26e:	bf1a      	itte	ne
 801c270:	ea4f 0893 	movne.w	r8, r3, lsr #2
 801c274:	f008 0801 	andne.w	r8, r8, #1
 801c278:	46a0      	moveq	r8, r4
 801c27a:	f895 0023 	ldrb.w	r0, [r5, #35]	; 0x23
 801c27e:	f003 0903 	and.w	r9, r3, #3
 801c282:	2801      	cmp	r0, #1
 801c284:	bf02      	ittt	eq
 801c286:	f642 0303 	movweq	r3, #10243	; 0x2803
 801c28a:	8928      	ldrheq	r0, [r5, #8]
 801c28c:	4298      	cmpeq	r0, r3
 801c28e:	d153      	bne.n	801c338 <??GATT_Update_Char_Value_Core_7>
 801c290:	682a      	ldr	r2, [r5, #0]
 801c292:	f8dd c028 	ldr.w	ip, [sp, #40]	; 0x28
 801c296:	980b      	ldr	r0, [sp, #44]	; 0x2c
 801c298:	9203      	str	r2, [sp, #12]
 801c29a:	f8b2 e020 	ldrh.w	lr, [r2, #32]
 801c29e:	4484      	add	ip, r0
 801c2a0:	45e6      	cmp	lr, ip
 801c2a2:	db49      	blt.n	801c338 <??GATT_Update_Char_Value_Core_7>
 801c2a4:	f892 0022 	ldrb.w	r0, [r2, #34]	; 0x22
 801c2a8:	9a16      	ldr	r2, [sp, #88]	; 0x58
 801c2aa:	2801      	cmp	r0, #1
 801c2ac:	d106      	bne.n	801c2bc <??GATT_Update_Char_Value_Core_8>
 801c2ae:	4596      	cmp	lr, r2
 801c2b0:	d342      	bcc.n	801c338 <??GATT_Update_Char_Value_Core_7>
 801c2b2:	4562      	cmp	r2, ip
 801c2b4:	da05      	bge.n	801c2c2 <??GATT_Update_Char_Value_Core_9>
 801c2b6:	e03f      	b.n	801c338 <??GATT_Update_Char_Value_Core_7>

0801c2b8 <??GATT_Update_Char_Value_Core_4>:
 801c2b8:	2060      	movs	r0, #96	; 0x60
 801c2ba:	e1b3      	b.n	801c624 <??GATT_Update_Char_Value_Core_1>

0801c2bc <??GATT_Update_Char_Value_Core_8>:
 801c2bc:	b908      	cbnz	r0, 801c2c2 <??GATT_Update_Char_Value_Core_9>
 801c2be:	9803      	ldr	r0, [sp, #12]
 801c2c0:	8bc2      	ldrh	r2, [r0, #30]

0801c2c2 <??GATT_Update_Char_Value_Core_9>:
 801c2c2:	f8ad 2002 	strh.w	r2, [sp, #2]
 801c2c6:	69a8      	ldr	r0, [r5, #24]
 801c2c8:	7802      	ldrb	r2, [r0, #0]
 801c2ca:	f012 0f30 	tst.w	r2, #48	; 0x30
 801c2ce:	f000 8102 	beq.w	801c4d6 <??GATT_Update_Char_Value_Core_10>
 801c2d2:	07b8      	lsls	r0, r7, #30
 801c2d4:	f140 80ff 	bpl.w	801c4d6 <??GATT_Update_Char_Value_Core_10>
 801c2d8:	f1b9 0f00 	cmp.w	r9, #0
 801c2dc:	f000 80fb 	beq.w	801c4d6 <??GATT_Update_Char_Value_Core_10>
 801c2e0:	6828      	ldr	r0, [r5, #0]
 801c2e2:	6807      	ldr	r7, [r0, #0]
 801c2e4:	f642 1002 	movw	r0, #10498	; 0x2902
 801c2e8:	e000      	b.n	801c2ec <??GATT_Update_Char_Value_Core_11>

0801c2ea <??GATT_Update_Char_Value_Core_12>:
 801c2ea:	683f      	ldr	r7, [r7, #0]

0801c2ec <??GATT_Update_Char_Value_Core_11>:
 801c2ec:	f101 0220 	add.w	r2, r1, #32
 801c2f0:	4297      	cmp	r7, r2
 801c2f2:	d021      	beq.n	801c338 <??GATT_Update_Char_Value_Core_7>
 801c2f4:	f897 c023 	ldrb.w	ip, [r7, #35]	; 0x23
 801c2f8:	f1bc 0f01 	cmp.w	ip, #1
 801c2fc:	d1f5      	bne.n	801c2ea <??GATT_Update_Char_Value_Core_12>
 801c2fe:	893a      	ldrh	r2, [r7, #8]
 801c300:	429a      	cmp	r2, r3
 801c302:	d019      	beq.n	801c338 <??GATT_Update_Char_Value_Core_7>
 801c304:	4282      	cmp	r2, r0
 801c306:	d1f0      	bne.n	801c2ea <??GATT_Update_Char_Value_Core_12>
 801c308:	b1b7      	cbz	r7, 801c338 <??GATT_Update_Char_Value_Core_7>
 801c30a:	f8bd 0000 	ldrh.w	r0, [sp]
 801c30e:	f8df aac0 	ldr.w	sl, [pc, #2752]	; 801cdd0 <??DataTable22>
 801c312:	f7fd fdeb 	bl	8019eec <GATT_Find_Client>
 801c316:	4602      	mov	r2, r0
 801c318:	f009 0c02 	and.w	ip, r9, #2
 801c31c:	a804      	add	r0, sp, #16
 801c31e:	f88d c018 	strb.w	ip, [sp, #24]
 801c322:	f8cd a004 	str.w	sl, [sp, #4]
 801c326:	9007      	str	r0, [sp, #28]
 801c328:	f88d 9019 	strb.w	r9, [sp, #25]
 801c32c:	9509      	str	r5, [sp, #36]	; 0x24
 801c32e:	9708      	str	r7, [sp, #32]
 801c330:	920c      	str	r2, [sp, #48]	; 0x30
 801c332:	4617      	mov	r7, r2
 801c334:	2500      	movs	r5, #0
 801c336:	e003      	b.n	801c340 <??GATT_Update_Char_Value_Core_13>

0801c338 <??GATT_Update_Char_Value_Core_7>:
 801c338:	2092      	movs	r0, #146	; 0x92
 801c33a:	e173      	b.n	801c624 <??GATT_Update_Char_Value_Core_1>

0801c33c <??GATT_Update_Char_Value_Core_14>:
 801c33c:	1c6d      	adds	r5, r5, #1
 801c33e:	b2ed      	uxtb	r5, r5

0801c340 <??GATT_Update_Char_Value_Core_13>:
 801c340:	f8df 0af4 	ldr.w	r0, [pc, #2804]	; 801ce38 <??DataTable23>
 801c344:	7d81      	ldrb	r1, [r0, #22]
 801c346:	428d      	cmp	r5, r1
 801c348:	da5c      	bge.n	801c404 <??GATT_Update_Char_Value_Core_15>
 801c34a:	9801      	ldr	r0, [sp, #4]
 801c34c:	eb05 02c5 	add.w	r2, r5, r5, lsl #3
 801c350:	6e01      	ldr	r1, [r0, #96]	; 0x60
 801c352:	eb01 0982 	add.w	r9, r1, r2, lsl #2
 801c356:	f8b9 0000 	ldrh.w	r0, [r9]
 801c35a:	2800      	cmp	r0, #0
 801c35c:	d0ee      	beq.n	801c33c <??GATT_Update_Char_Value_Core_14>
 801c35e:	f8bd 0000 	ldrh.w	r0, [sp]
 801c362:	2800      	cmp	r0, #0
 801c364:	bf1c      	itt	ne
 801c366:	980c      	ldrne	r0, [sp, #48]	; 0x30
 801c368:	4581      	cmpne	r9, r0
 801c36a:	d1e7      	bne.n	801c33c <??GATT_Update_Char_Value_Core_14>
 801c36c:	4649      	mov	r1, r9
 801c36e:	2000      	movs	r0, #0
 801c370:	f000 fd3f 	bl	801cdf2 <GATT_Find_Attr_Index>
 801c374:	9908      	ldr	r1, [sp, #32]
 801c376:	698a      	ldr	r2, [r1, #24]
 801c378:	f812 a010 	ldrb.w	sl, [r2, r0, lsl #1]
 801c37c:	f01a 0003 	ands.w	r0, sl, #3
 801c380:	d03c      	beq.n	801c3fc <??GATT_Update_Char_Value_Core_16>
 801c382:	f8b9 0000 	ldrh.w	r0, [r9]
 801c386:	2202      	movs	r2, #2
 801c388:	f001 ff4f 	bl	801e22a <ATT_Check_Perms>
 801c38c:	b128      	cbz	r0, 801c39a <??GATT_Update_Char_Value_Core_17>
 801c38e:	f8bd 0000 	ldrh.w	r0, [sp]
 801c392:	2800      	cmp	r0, #0
 801c394:	d0d2      	beq.n	801c33c <??GATT_Update_Char_Value_Core_14>
 801c396:	2065      	movs	r0, #101	; 0x65
 801c398:	e144      	b.n	801c624 <??GATT_Update_Char_Value_Core_1>

0801c39a <??GATT_Update_Char_Value_Core_17>:
 801c39a:	9907      	ldr	r1, [sp, #28]
 801c39c:	5548      	strb	r0, [r1, r5]
 801c39e:	f89d 0019 	ldrb.w	r0, [sp, #25]
 801c3a2:	07c1      	lsls	r1, r0, #31
 801c3a4:	d512      	bpl.n	801c3cc <??GATT_Update_Char_Value_Core_18>
 801c3a6:	9809      	ldr	r0, [sp, #36]	; 0x24
 801c3a8:	6981      	ldr	r1, [r0, #24]
 801c3aa:	780a      	ldrb	r2, [r1, #0]
 801c3ac:	06d0      	lsls	r0, r2, #27
 801c3ae:	bf48      	it	mi
 801c3b0:	ea5f 71ca 	movsmi.w	r1, sl, lsl #31
 801c3b4:	d50a      	bpl.n	801c3cc <??GATT_Update_Char_Value_Core_18>
 801c3b6:	9907      	ldr	r1, [sp, #28]
 801c3b8:	2001      	movs	r0, #1
 801c3ba:	f04b 0b01 	orr.w	fp, fp, #1
 801c3be:	5548      	strb	r0, [r1, r5]
 801c3c0:	f8b9 0002 	ldrh.w	r0, [r9, #2]
 801c3c4:	4286      	cmp	r6, r0
 801c3c6:	bf3c      	itt	cc
 801c3c8:	4606      	movcc	r6, r0
 801c3ca:	464f      	movcc	r7, r9

0801c3cc <??GATT_Update_Char_Value_Core_18>:
 801c3cc:	f89d 0018 	ldrb.w	r0, [sp, #24]
 801c3d0:	b1a0      	cbz	r0, 801c3fc <??GATT_Update_Char_Value_Core_16>
 801c3d2:	9809      	ldr	r0, [sp, #36]	; 0x24
 801c3d4:	6981      	ldr	r1, [r0, #24]
 801c3d6:	780a      	ldrb	r2, [r1, #0]
 801c3d8:	0690      	lsls	r0, r2, #26
 801c3da:	bf48      	it	mi
 801c3dc:	ea5f 718a 	movsmi.w	r1, sl, lsl #30
 801c3e0:	d50c      	bpl.n	801c3fc <??GATT_Update_Char_Value_Core_16>
 801c3e2:	9807      	ldr	r0, [sp, #28]
 801c3e4:	f04b 0b02 	orr.w	fp, fp, #2
 801c3e8:	5d41      	ldrb	r1, [r0, r5]
 801c3ea:	f041 0102 	orr.w	r1, r1, #2
 801c3ee:	5541      	strb	r1, [r0, r5]
 801c3f0:	f8b9 0002 	ldrh.w	r0, [r9, #2]
 801c3f4:	4286      	cmp	r6, r0
 801c3f6:	bf3c      	itt	cc
 801c3f8:	4606      	movcc	r6, r0
 801c3fa:	464f      	movcc	r7, r9

0801c3fc <??GATT_Update_Char_Value_Core_16>:
 801c3fc:	f8bd 0000 	ldrh.w	r0, [sp]
 801c400:	2800      	cmp	r0, #0
 801c402:	d09b      	beq.n	801c33c <??GATT_Update_Char_Value_Core_14>

0801c404 <??GATT_Update_Char_Value_Core_15>:
 801c404:	f1bb 0f00 	cmp.w	fp, #0
 801c408:	d065      	beq.n	801c4d6 <??GATT_Update_Char_Value_Core_10>
 801c40a:	f8df 09c4 	ldr.w	r0, [pc, #2500]	; 801cdd0 <??DataTable22>
 801c40e:	9001      	str	r0, [sp, #4]
 801c410:	7800      	ldrb	r0, [r0, #0]
 801c412:	0602      	lsls	r2, r0, #24
 801c414:	f100 8105 	bmi.w	801c622 <??GATT_Update_Char_Value_Core_19>
 801c418:	f8df 1a1c 	ldr.w	r1, [pc, #2588]	; 801ce38 <??DataTable23>
 801c41c:	7d8a      	ldrb	r2, [r1, #22]
 801c41e:	2300      	movs	r3, #0
 801c420:	f00b 0002 	and.w	r0, fp, #2
 801c424:	b332      	cbz	r2, 801c474 <??GATT_Update_Char_Value_Core_20>
 801c426:	9901      	ldr	r1, [sp, #4]
 801c428:	f10d 0c10 	add.w	ip, sp, #16
 801c42c:	f8d1 e060 	ldr.w	lr, [r1, #96]	; 0x60

0801c430 <??GATT_Update_Char_Value_Core_21>:
 801c430:	f8be 1000 	ldrh.w	r1, [lr]
 801c434:	b191      	cbz	r1, 801c45c <??GATT_Update_Char_Value_Core_22>
 801c436:	b150      	cbz	r0, 801c44e <??GATT_Update_Char_Value_Core_23>
 801c438:	f8de 1004 	ldr.w	r1, [lr, #4]
 801c43c:	078d      	lsls	r5, r1, #30
 801c43e:	d417      	bmi.n	801c470 <??GATT_Update_Char_Value_Core_24>
 801c440:	f89c 9000 	ldrb.w	r9, [ip]
 801c444:	ea5f 7589 	movs.w	r5, r9, lsl #30
 801c448:	d501      	bpl.n	801c44e <??GATT_Update_Char_Value_Core_23>
 801c44a:	0709      	lsls	r1, r1, #28
 801c44c:	d40e      	bmi.n	801c46c <??GATT_Update_Char_Value_Core_25>

0801c44e <??GATT_Update_Char_Value_Core_23>:
 801c44e:	ea5f 75cb 	movs.w	r5, fp, lsl #31
 801c452:	d503      	bpl.n	801c45c <??GATT_Update_Char_Value_Core_22>
 801c454:	f89e 1004 	ldrb.w	r1, [lr, #4]
 801c458:	07cd      	lsls	r5, r1, #31
 801c45a:	d409      	bmi.n	801c470 <??GATT_Update_Char_Value_Core_24>

0801c45c <??GATT_Update_Char_Value_Core_22>:
 801c45c:	1c5b      	adds	r3, r3, #1
 801c45e:	f10e 0e24 	add.w	lr, lr, #36	; 0x24
 801c462:	f10c 0c01 	add.w	ip, ip, #1
 801c466:	4293      	cmp	r3, r2
 801c468:	dbe2      	blt.n	801c430 <??GATT_Update_Char_Value_Core_21>
 801c46a:	e003      	b.n	801c474 <??GATT_Update_Char_Value_Core_20>

0801c46c <??GATT_Update_Char_Value_Core_25>:
 801c46c:	200c      	movs	r0, #12
 801c46e:	e0d9      	b.n	801c624 <??GATT_Update_Char_Value_Core_1>

0801c470 <??GATT_Update_Char_Value_Core_24>:
 801c470:	2093      	movs	r0, #147	; 0x93
 801c472:	e0d7      	b.n	801c624 <??GATT_Update_Char_Value_Core_1>

0801c474 <??GATT_Update_Char_Value_Core_20>:
 801c474:	1ef1      	subs	r1, r6, #3
 801c476:	f8bd 6002 	ldrh.w	r6, [sp, #2]
 801c47a:	b289      	uxth	r1, r1
 801c47c:	428e      	cmp	r6, r1
 801c47e:	bf88      	it	hi
 801c480:	460e      	movhi	r6, r1
 801c482:	b188      	cbz	r0, 801c4a8 <??GATT_Update_Char_Value_Core_26>
 801c484:	8839      	ldrh	r1, [r7, #0]
 801c486:	2220      	movs	r2, #32
 801c488:	2000      	movs	r0, #0
 801c48a:	f008 fc12 	bl	8024cb2 <ACL_PM_New>
 801c48e:	9002      	str	r0, [sp, #8]
 801c490:	2800      	cmp	r0, #0
 801c492:	f000 80b7 	beq.w	801c604 <??GATT_Update_Char_Value_Core_27>
 801c496:	6880      	ldr	r0, [r0, #8]
 801c498:	1df2      	adds	r2, r6, #7
 801c49a:	b292      	uxth	r2, r2
 801c49c:	2100      	movs	r1, #0
 801c49e:	f008 fc5a 	bl	8024d56 <ACL_PM_Resize>
 801c4a2:	2800      	cmp	r0, #0
 801c4a4:	f040 80ae 	bne.w	801c604 <??GATT_Update_Char_Value_Core_27>

0801c4a8 <??GATT_Update_Char_Value_Core_26>:
 801c4a8:	ea5f 70cb 	movs.w	r0, fp, lsl #31
 801c4ac:	d510      	bpl.n	801c4d0 <??GATT_Update_Char_Value_Core_28>
 801c4ae:	8839      	ldrh	r1, [r7, #0]
 801c4b0:	2220      	movs	r2, #32
 801c4b2:	2000      	movs	r0, #0
 801c4b4:	f008 fbfd 	bl	8024cb2 <ACL_PM_New>
 801c4b8:	0004      	movs	r4, r0
 801c4ba:	f000 80a3 	beq.w	801c604 <??GATT_Update_Char_Value_Core_27>
 801c4be:	68a0      	ldr	r0, [r4, #8]
 801c4c0:	1df2      	adds	r2, r6, #7
 801c4c2:	b292      	uxth	r2, r2
 801c4c4:	2100      	movs	r1, #0
 801c4c6:	f008 fc46 	bl	8024d56 <ACL_PM_Resize>
 801c4ca:	2800      	cmp	r0, #0
 801c4cc:	f040 809a 	bne.w	801c604 <??GATT_Update_Char_Value_Core_27>

0801c4d0 <??GATT_Update_Char_Value_Core_28>:
 801c4d0:	1cf6      	adds	r6, r6, #3
 801c4d2:	f8ad 601a 	strh.w	r6, [sp, #26]

0801c4d6 <??GATT_Update_Char_Value_Core_10>:
 801c4d6:	9803      	ldr	r0, [sp, #12]
 801c4d8:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 801c4da:	9918      	ldr	r1, [sp, #96]	; 0x60
 801c4dc:	6983      	ldr	r3, [r0, #24]
 801c4de:	980a      	ldr	r0, [sp, #40]	; 0x28
 801c4e0:	4418      	add	r0, r3
 801c4e2:	f014 fd00 	bl	8030ee6 <__aeabi_memcpy>
 801c4e6:	9903      	ldr	r1, [sp, #12]
 801c4e8:	f891 0022 	ldrb.w	r0, [r1, #34]	; 0x22
 801c4ec:	2801      	cmp	r0, #1
 801c4ee:	bf04      	itt	eq
 801c4f0:	f8bd 0002 	ldrheq.w	r0, [sp, #2]
 801c4f4:	83c8      	strheq	r0, [r1, #30]
 801c4f6:	f1bb 0f00 	cmp.w	fp, #0
 801c4fa:	f000 8081 	beq.w	801c600 <??GATT_Update_Char_Value_Core_29>
 801c4fe:	f8df 7938 	ldr.w	r7, [pc, #2360]	; 801ce38 <??DataTable23>
 801c502:	7db9      	ldrb	r1, [r7, #22]
 801c504:	2200      	movs	r2, #0
 801c506:	b179      	cbz	r1, 801c528 <??GATT_Update_Char_Value_Core_30>
 801c508:	9801      	ldr	r0, [sp, #4]
 801c50a:	ab04      	add	r3, sp, #16
 801c50c:	6e06      	ldr	r6, [r0, #96]	; 0x60

0801c50e <??GATT_Update_Char_Value_Core_31>:
 801c50e:	8830      	ldrh	r0, [r6, #0]
 801c510:	b128      	cbz	r0, 801c51e <??GATT_Update_Char_Value_Core_32>
 801c512:	6870      	ldr	r0, [r6, #4]
 801c514:	f893 c000 	ldrb.w	ip, [r3]
 801c518:	ea4c 0000 	orr.w	r0, ip, r0
 801c51c:	6070      	str	r0, [r6, #4]

0801c51e <??GATT_Update_Char_Value_Core_32>:
 801c51e:	1c52      	adds	r2, r2, #1
 801c520:	3624      	adds	r6, #36	; 0x24
 801c522:	1c5b      	adds	r3, r3, #1
 801c524:	428a      	cmp	r2, r1
 801c526:	dbf2      	blt.n	801c50e <??GATT_Update_Char_Value_Core_31>

0801c528 <??GATT_Update_Char_Value_Core_30>:
 801c528:	ea5f 718b 	movs.w	r1, fp, lsl #30
 801c52c:	d52e      	bpl.n	801c58c <??GATT_Update_Char_Value_Core_33>
 801c52e:	9802      	ldr	r0, [sp, #8]
 801c530:	9903      	ldr	r1, [sp, #12]
 801c532:	f8bd 201a 	ldrh.w	r2, [sp, #26]
 801c536:	9000      	str	r0, [sp, #0]
 801c538:	698b      	ldr	r3, [r1, #24]
 801c53a:	311c      	adds	r1, #28
 801c53c:	2002      	movs	r0, #2
 801c53e:	f002 f86f 	bl	801e620 <ATT_Build_Notif_Or_Ind>
 801c542:	7db8      	ldrb	r0, [r7, #22]
 801c544:	2100      	movs	r1, #0
 801c546:	2600      	movs	r6, #0
 801c548:	b300      	cbz	r0, 801c58c <??GATT_Update_Char_Value_Core_33>
 801c54a:	9a01      	ldr	r2, [sp, #4]
 801c54c:	6e12      	ldr	r2, [r2, #96]	; 0x60

0801c54e <??GATT_Update_Char_Value_Core_34>:
 801c54e:	7913      	ldrb	r3, [r2, #4]
 801c550:	ea5f 7c83 	movs.w	ip, r3, lsl #30
 801c554:	d504      	bpl.n	801c560 <??GATT_Update_Char_Value_Core_35>
 801c556:	8853      	ldrh	r3, [r2, #2]
 801c558:	4299      	cmp	r1, r3
 801c55a:	bf3c      	itt	cc
 801c55c:	4619      	movcc	r1, r3
 801c55e:	4616      	movcc	r6, r2

0801c560 <??GATT_Update_Char_Value_Core_35>:
 801c560:	3224      	adds	r2, #36	; 0x24
 801c562:	1e40      	subs	r0, r0, #1
 801c564:	d1f3      	bne.n	801c54e <??GATT_Update_Char_Value_Core_34>
 801c566:	b18e      	cbz	r6, 801c58c <??GATT_Update_Char_Value_Core_33>
 801c568:	9802      	ldr	r0, [sp, #8]
 801c56a:	88c2      	ldrh	r2, [r0, #6]
 801c56c:	4291      	cmp	r1, r2
 801c56e:	bf88      	it	hi
 801c570:	4611      	movhi	r1, r2
 801c572:	80c1      	strh	r1, [r0, #6]
 801c574:	8831      	ldrh	r1, [r6, #0]
 801c576:	9802      	ldr	r0, [sp, #8]
 801c578:	8081      	strh	r1, [r0, #4]
 801c57a:	9802      	ldr	r0, [sp, #8]
 801c57c:	f7fd fc91 	bl	8019ea2 <GATT_Send_Packet>
 801c580:	6870      	ldr	r0, [r6, #4]
 801c582:	f020 0002 	bic.w	r0, r0, #2
 801c586:	f040 0008 	orr.w	r0, r0, #8
 801c58a:	6070      	str	r0, [r6, #4]

0801c58c <??GATT_Update_Char_Value_Core_33>:
 801c58c:	ea5f 70cb 	movs.w	r0, fp, lsl #31
 801c590:	d536      	bpl.n	801c600 <??GATT_Update_Char_Value_Core_29>
 801c592:	9903      	ldr	r1, [sp, #12]
 801c594:	9400      	str	r4, [sp, #0]
 801c596:	f8bd 201a 	ldrh.w	r2, [sp, #26]
 801c59a:	698b      	ldr	r3, [r1, #24]
 801c59c:	311c      	adds	r1, #28
 801c59e:	2001      	movs	r0, #1
 801c5a0:	f002 f83e 	bl	801e620 <ATT_Build_Notif_Or_Ind>
 801c5a4:	f1b8 0f00 	cmp.w	r8, #0
 801c5a8:	d003      	beq.n	801c5b2 <??GATT_Update_Char_Value_Core_36>
 801c5aa:	7ce0      	ldrb	r0, [r4, #19]
 801c5ac:	f040 0080 	orr.w	r0, r0, #128	; 0x80
 801c5b0:	74e0      	strb	r0, [r4, #19]

0801c5b2 <??GATT_Update_Char_Value_Core_36>:
 801c5b2:	7db8      	ldrb	r0, [r7, #22]
 801c5b4:	2100      	movs	r1, #0
 801c5b6:	4688      	mov	r8, r1
 801c5b8:	b310      	cbz	r0, 801c600 <??GATT_Update_Char_Value_Core_29>
 801c5ba:	f8df 6814 	ldr.w	r6, [pc, #2068]	; 801cdd0 <??DataTable22>
 801c5be:	6e32      	ldr	r2, [r6, #96]	; 0x60

0801c5c0 <??GATT_Update_Char_Value_Core_37>:
 801c5c0:	7913      	ldrb	r3, [r2, #4]
 801c5c2:	07df      	lsls	r7, r3, #31
 801c5c4:	d504      	bpl.n	801c5d0 <??GATT_Update_Char_Value_Core_38>
 801c5c6:	8853      	ldrh	r3, [r2, #2]
 801c5c8:	4299      	cmp	r1, r3
 801c5ca:	bf3c      	itt	cc
 801c5cc:	4619      	movcc	r1, r3
 801c5ce:	4690      	movcc	r8, r2

0801c5d0 <??GATT_Update_Char_Value_Core_38>:
 801c5d0:	3224      	adds	r2, #36	; 0x24
 801c5d2:	1e40      	subs	r0, r0, #1
 801c5d4:	d1f4      	bne.n	801c5c0 <??GATT_Update_Char_Value_Core_37>
 801c5d6:	f1b8 0f00 	cmp.w	r8, #0
 801c5da:	d011      	beq.n	801c600 <??GATT_Update_Char_Value_Core_29>
 801c5dc:	88e0      	ldrh	r0, [r4, #6]
 801c5de:	4281      	cmp	r1, r0
 801c5e0:	bf88      	it	hi
 801c5e2:	4601      	movhi	r1, r0
 801c5e4:	80e1      	strh	r1, [r4, #6]
 801c5e6:	f8b8 1000 	ldrh.w	r1, [r8]
 801c5ea:	4620      	mov	r0, r4
 801c5ec:	80a1      	strh	r1, [r4, #4]
 801c5ee:	f7fd fc58 	bl	8019ea2 <GATT_Send_Packet>
 801c5f2:	f8d8 0004 	ldr.w	r0, [r8, #4]
 801c5f6:	0840      	lsrs	r0, r0, #1
 801c5f8:	0040      	lsls	r0, r0, #1
 801c5fa:	f8c8 0004 	str.w	r0, [r8, #4]
 801c5fe:	65f4      	str	r4, [r6, #92]	; 0x5c

0801c600 <??GATT_Update_Char_Value_Core_29>:
 801c600:	2000      	movs	r0, #0
 801c602:	e00f      	b.n	801c624 <??GATT_Update_Char_Value_Core_1>

0801c604 <??GATT_Update_Char_Value_Core_27>:
 801c604:	9801      	ldr	r0, [sp, #4]
 801c606:	7801      	ldrb	r1, [r0, #0]
 801c608:	f041 0180 	orr.w	r1, r1, #128	; 0x80
 801c60c:	7001      	strb	r1, [r0, #0]
 801c60e:	9802      	ldr	r0, [sp, #8]
 801c610:	b110      	cbz	r0, 801c618 <??GATT_Update_Char_Value_Core_39>
 801c612:	2100      	movs	r1, #0
 801c614:	f008 fb65 	bl	8024ce2 <ACL_PM_Release>

0801c618 <??GATT_Update_Char_Value_Core_39>:
 801c618:	b11c      	cbz	r4, 801c622 <??GATT_Update_Char_Value_Core_19>
 801c61a:	2100      	movs	r1, #0
 801c61c:	4620      	mov	r0, r4
 801c61e:	f008 fb60 	bl	8024ce2 <ACL_PM_Release>

0801c622 <??GATT_Update_Char_Value_Core_19>:
 801c622:	2064      	movs	r0, #100	; 0x64

0801c624 <??GATT_Update_Char_Value_Core_1>:
 801c624:	b00d      	add	sp, #52	; 0x34
 801c626:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801c62a <aci_gatt_update_char_value_ext>:
 801c62a:	b570      	push	{r4, r5, r6, lr}
 801c62c:	b084      	sub	sp, #16
 801c62e:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 801c630:	f8bd 6024 	ldrh.w	r6, [sp, #36]	; 0x24
 801c634:	f8ad 600c 	strh.w	r6, [sp, #12]
 801c638:	f8ad 400e 	strh.w	r4, [sp, #14]
 801c63c:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 801c63e:	f8bd 6020 	ldrh.w	r6, [sp, #32]
 801c642:	ad03      	add	r5, sp, #12
 801c644:	9402      	str	r4, [sp, #8]
 801c646:	9501      	str	r5, [sp, #4]
 801c648:	9600      	str	r6, [sp, #0]
 801c64a:	f7ff fdd1 	bl	801c1f0 <GATT_Update_Char_Value_Core>
 801c64e:	b004      	add	sp, #16
 801c650:	bd70      	pop	{r4, r5, r6, pc}

0801c652 <aci_gatt_del_char>:
 801c652:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 801c656:	4604      	mov	r4, r0
 801c658:	460d      	mov	r5, r1
 801c65a:	f7fe fea5 	bl	801b3a8 <GATT_Server_Db_Check>
 801c65e:	0001      	movs	r1, r0
 801c660:	d145      	bne.n	801c6ee <??aci_gatt_del_char_0>
 801c662:	f8df 07d8 	ldr.w	r0, [pc, #2008]	; 801ce3c <??DataTable23_1>
 801c666:	f8d0 71b8 	ldr.w	r7, [r0, #440]	; 0x1b8
 801c66a:	f500 70dc 	add.w	r0, r0, #440	; 0x1b8
 801c66e:	e000      	b.n	801c672 <??aci_gatt_del_char_1>

0801c670 <??aci_gatt_del_char_2>:
 801c670:	683f      	ldr	r7, [r7, #0]

0801c672 <??aci_gatt_del_char_1>:
 801c672:	4287      	cmp	r7, r0
 801c674:	d019      	beq.n	801c6aa <??aci_gatt_del_char_3>
 801c676:	8d39      	ldrh	r1, [r7, #40]	; 0x28
 801c678:	42a1      	cmp	r1, r4
 801c67a:	d1f9      	bne.n	801c670 <??aci_gatt_del_char_2>
 801c67c:	6a3c      	ldr	r4, [r7, #32]
 801c67e:	f107 0020 	add.w	r0, r7, #32
 801c682:	e000      	b.n	801c686 <??aci_gatt_del_char_4>

0801c684 <??aci_gatt_del_char_5>:
 801c684:	6824      	ldr	r4, [r4, #0]

0801c686 <??aci_gatt_del_char_4>:
 801c686:	4284      	cmp	r4, r0
 801c688:	d00f      	beq.n	801c6aa <??aci_gatt_del_char_3>
 801c68a:	f8b4 801c 	ldrh.w	r8, [r4, #28]
 801c68e:	45a8      	cmp	r8, r5
 801c690:	d1f8      	bne.n	801c684 <??aci_gatt_del_char_5>
 801c692:	8920      	ldrh	r0, [r4, #8]
 801c694:	f642 0903 	movw	r9, #10243	; 0x2803
 801c698:	4548      	cmp	r0, r9
 801c69a:	bf04      	itt	eq
 801c69c:	f894 1023 	ldrbeq.w	r1, [r4, #35]	; 0x23
 801c6a0:	2901      	cmpeq	r1, #1
 801c6a2:	d005      	beq.n	801c6b0 <??aci_gatt_del_char_6>
 801c6a4:	2092      	movs	r0, #146	; 0x92
 801c6a6:	e8bd 83f2 	ldmia.w	sp!, {r1, r4, r5, r6, r7, r8, r9, pc}

0801c6aa <??aci_gatt_del_char_3>:
 801c6aa:	2060      	movs	r0, #96	; 0x60
 801c6ac:	e8bd 83f2 	ldmia.w	sp!, {r1, r4, r5, r6, r7, r8, r9, pc}

0801c6b0 <??aci_gatt_del_char_6>:
 801c6b0:	6826      	ldr	r6, [r4, #0]

0801c6b2 <??aci_gatt_del_char_7>:
 801c6b2:	8ba5      	ldrh	r5, [r4, #28]
 801c6b4:	4621      	mov	r1, r4
 801c6b6:	f107 0020 	add.w	r0, r7, #32
 801c6ba:	f008 fc27 	bl	8024f0c <CList_Remove_Node>
 801c6be:	4621      	mov	r1, r4
 801c6c0:	f107 0018 	add.w	r0, r7, #24
 801c6c4:	f008 fbfe 	bl	8024ec4 <CList_Insert>
 801c6c8:	4634      	mov	r4, r6
 801c6ca:	8920      	ldrh	r0, [r4, #8]
 801c6cc:	6826      	ldr	r6, [r4, #0]
 801c6ce:	4548      	cmp	r0, r9
 801c6d0:	bf07      	ittee	eq
 801c6d2:	f894 1023 	ldrbeq.w	r1, [r4, #35]	; 0x23
 801c6d6:	2901      	cmpeq	r1, #1
 801c6d8:	f107 0020 	addne.w	r0, r7, #32
 801c6dc:	4284      	cmpne	r4, r0
 801c6de:	d1e8      	bne.n	801c6b2 <??aci_gatt_del_char_7>
 801c6e0:	462b      	mov	r3, r5
 801c6e2:	4642      	mov	r2, r8
 801c6e4:	2100      	movs	r1, #0
 801c6e6:	2000      	movs	r0, #0
 801c6e8:	f000 fa31 	bl	801cb4e <GATT_Update_For_Service_Change>
 801c6ec:	2000      	movs	r0, #0

0801c6ee <??aci_gatt_del_char_0>:
 801c6ee:	e8bd 83f2 	ldmia.w	sp!, {r1, r4, r5, r6, r7, r8, r9, pc}

0801c6f2 <aci_gatt_del_service>:
 801c6f2:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 801c6f6:	4606      	mov	r6, r0
 801c6f8:	2500      	movs	r5, #0
 801c6fa:	f7fe fe55 	bl	801b3a8 <GATT_Server_Db_Check>
 801c6fe:	0001      	movs	r1, r0
 801c700:	d143      	bne.n	801c78a <??aci_gatt_del_service_0>
 801c702:	2e01      	cmp	r6, #1
 801c704:	bf08      	it	eq
 801c706:	2062      	moveq	r0, #98	; 0x62
 801c708:	d03f      	beq.n	801c78a <??aci_gatt_del_service_0>
 801c70a:	f8df 8730 	ldr.w	r8, [pc, #1840]	; 801ce3c <??DataTable23_1>
 801c70e:	f8d8 41b8 	ldr.w	r4, [r8, #440]	; 0x1b8
 801c712:	f508 7adc 	add.w	sl, r8, #440	; 0x1b8
 801c716:	e000      	b.n	801c71a <??aci_gatt_del_service_1>

0801c718 <??aci_gatt_del_service_2>:
 801c718:	6824      	ldr	r4, [r4, #0]

0801c71a <??aci_gatt_del_service_1>:
 801c71a:	4554      	cmp	r4, sl
 801c71c:	d007      	beq.n	801c72e <??aci_gatt_del_service_3>
 801c71e:	f8b4 9028 	ldrh.w	r9, [r4, #40]	; 0x28
 801c722:	45b1      	cmp	r9, r6
 801c724:	d1f8      	bne.n	801c718 <??aci_gatt_del_service_2>
 801c726:	69a7      	ldr	r7, [r4, #24]
 801c728:	f508 76d8 	add.w	r6, r8, #432	; 0x1b0
 801c72c:	e009      	b.n	801c742 <??aci_gatt_del_service_4>

0801c72e <??aci_gatt_del_service_3>:
 801c72e:	e02e      	b.n	801c78e <?Subroutine5>

0801c730 <??aci_gatt_del_service_5>:
 801c730:	4639      	mov	r1, r7
 801c732:	f008 fbeb 	bl	8024f0c <CList_Remove_Node>
 801c736:	4639      	mov	r1, r7
 801c738:	4630      	mov	r0, r6
 801c73a:	f008 fbc3 	bl	8024ec4 <CList_Insert>
 801c73e:	69a7      	ldr	r7, [r4, #24]
 801c740:	1c6d      	adds	r5, r5, #1

0801c742 <??aci_gatt_del_service_4>:
 801c742:	f104 0018 	add.w	r0, r4, #24
 801c746:	4287      	cmp	r7, r0
 801c748:	d1f2      	bne.n	801c730 <??aci_gatt_del_service_5>
 801c74a:	e006      	b.n	801c75a <??aci_gatt_del_service_6>

0801c74c <??aci_gatt_del_service_7>:
 801c74c:	4639      	mov	r1, r7
 801c74e:	f008 fbdd 	bl	8024f0c <CList_Remove_Node>
 801c752:	4639      	mov	r1, r7
 801c754:	4630      	mov	r0, r6
 801c756:	f008 fbb5 	bl	8024ec4 <CList_Insert>

0801c75a <??aci_gatt_del_service_6>:
 801c75a:	6a27      	ldr	r7, [r4, #32]
 801c75c:	1c6d      	adds	r5, r5, #1
 801c75e:	f104 0020 	add.w	r0, r4, #32
 801c762:	4287      	cmp	r7, r0
 801c764:	d1f2      	bne.n	801c74c <??aci_gatt_del_service_7>
 801c766:	4621      	mov	r1, r4
 801c768:	4650      	mov	r0, sl
 801c76a:	f008 fbcf 	bl	8024f0c <CList_Remove_Node>
 801c76e:	4621      	mov	r1, r4
 801c770:	f508 70e0 	add.w	r0, r8, #448	; 0x1c0
 801c774:	b2ed      	uxtb	r5, r5
 801c776:	f008 fba5 	bl	8024ec4 <CList_Insert>
 801c77a:	444d      	add	r5, r9
 801c77c:	b2ab      	uxth	r3, r5
 801c77e:	464a      	mov	r2, r9
 801c780:	2100      	movs	r1, #0
 801c782:	2000      	movs	r0, #0
 801c784:	f000 f9e3 	bl	801cb4e <GATT_Update_For_Service_Change>
 801c788:	2000      	movs	r0, #0

0801c78a <??aci_gatt_del_service_0>:
 801c78a:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}

0801c78e <?Subroutine5>:
 801c78e:	2060      	movs	r0, #96	; 0x60
 801c790:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}

0801c794 <aci_gatt_del_include_service>:
 801c794:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 801c796:	4604      	mov	r4, r0
 801c798:	460d      	mov	r5, r1
 801c79a:	f7fe fe05 	bl	801b3a8 <GATT_Server_Db_Check>
 801c79e:	0001      	movs	r1, r0
 801c7a0:	d134      	bne.n	801c80c <??aci_gatt_del_include_service_0>
 801c7a2:	f8df 0698 	ldr.w	r0, [pc, #1688]	; 801ce3c <??DataTable23_1>
 801c7a6:	f8d0 61b8 	ldr.w	r6, [r0, #440]	; 0x1b8
 801c7aa:	f500 70dc 	add.w	r0, r0, #440	; 0x1b8
 801c7ae:	e000      	b.n	801c7b2 <??aci_gatt_del_include_service_1>

0801c7b0 <??aci_gatt_del_include_service_2>:
 801c7b0:	6836      	ldr	r6, [r6, #0]

0801c7b2 <??aci_gatt_del_include_service_1>:
 801c7b2:	4286      	cmp	r6, r0
 801c7b4:	d017      	beq.n	801c7e6 <??aci_gatt_del_include_service_3>
 801c7b6:	8d31      	ldrh	r1, [r6, #40]	; 0x28
 801c7b8:	42a1      	cmp	r1, r4
 801c7ba:	d1f9      	bne.n	801c7b0 <??aci_gatt_del_include_service_2>
 801c7bc:	6a34      	ldr	r4, [r6, #32]
 801c7be:	f106 0020 	add.w	r0, r6, #32
 801c7c2:	e000      	b.n	801c7c6 <??aci_gatt_del_include_service_4>

0801c7c4 <??aci_gatt_del_include_service_5>:
 801c7c4:	6824      	ldr	r4, [r4, #0]

0801c7c6 <??aci_gatt_del_include_service_4>:
 801c7c6:	4284      	cmp	r4, r0
 801c7c8:	d00d      	beq.n	801c7e6 <??aci_gatt_del_include_service_3>
 801c7ca:	8ba7      	ldrh	r7, [r4, #28]
 801c7cc:	42af      	cmp	r7, r5
 801c7ce:	d1f9      	bne.n	801c7c4 <??aci_gatt_del_include_service_5>
 801c7d0:	8920      	ldrh	r0, [r4, #8]
 801c7d2:	f642 0102 	movw	r1, #10242	; 0x2802
 801c7d6:	4288      	cmp	r0, r1
 801c7d8:	bf04      	itt	eq
 801c7da:	f894 0023 	ldrbeq.w	r0, [r4, #35]	; 0x23
 801c7de:	2801      	cmpeq	r0, #1
 801c7e0:	d003      	beq.n	801c7ea <??aci_gatt_del_include_service_6>
 801c7e2:	2092      	movs	r0, #146	; 0x92
 801c7e4:	bdf2      	pop	{r1, r4, r5, r6, r7, pc}

0801c7e6 <??aci_gatt_del_include_service_3>:
 801c7e6:	2060      	movs	r0, #96	; 0x60
 801c7e8:	bdf2      	pop	{r1, r4, r5, r6, r7, pc}

0801c7ea <??aci_gatt_del_include_service_6>:
 801c7ea:	4621      	mov	r1, r4
 801c7ec:	f106 0020 	add.w	r0, r6, #32
 801c7f0:	f008 fb8c 	bl	8024f0c <CList_Remove_Node>
 801c7f4:	4621      	mov	r1, r4
 801c7f6:	f106 0018 	add.w	r0, r6, #24
 801c7fa:	f008 fb63 	bl	8024ec4 <CList_Insert>
 801c7fe:	463b      	mov	r3, r7
 801c800:	463a      	mov	r2, r7
 801c802:	2100      	movs	r1, #0
 801c804:	2000      	movs	r0, #0
 801c806:	f000 f9a2 	bl	801cb4e <GATT_Update_For_Service_Change>
 801c80a:	2000      	movs	r0, #0

0801c80c <??aci_gatt_del_include_service_0>:
 801c80c:	bdf2      	pop	{r1, r4, r5, r6, r7, pc}

0801c80e <aci_gatt_read_handle_value>:
 801c80e:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 801c810:	0004      	movs	r4, r0
 801c812:	d021      	beq.n	801c858 <??aci_gatt_read_handle_value_0>
 801c814:	f8df 4624 	ldr.w	r4, [pc, #1572]	; 801ce3c <??DataTable23_1>
 801c818:	f504 75d6 	add.w	r5, r4, #428	; 0x1ac
 801c81c:	782e      	ldrb	r6, [r5, #0]
 801c81e:	07f7      	lsls	r7, r6, #31
 801c820:	d401      	bmi.n	801c826 <??aci_gatt_read_handle_value_1>
 801c822:	2062      	movs	r0, #98	; 0x62
 801c824:	bdf2      	pop	{r1, r4, r5, r6, r7, pc}

0801c826 <??aci_gatt_read_handle_value_1>:
 801c826:	68ee      	ldr	r6, [r5, #12]
 801c828:	f504 75dc 	add.w	r5, r4, #440	; 0x1b8
 801c82c:	e000      	b.n	801c830 <??aci_gatt_read_handle_value_2>

0801c82e <??aci_gatt_read_handle_value_3>:
 801c82e:	6836      	ldr	r6, [r6, #0]

0801c830 <??aci_gatt_read_handle_value_2>:
 801c830:	42ae      	cmp	r6, r5
 801c832:	d033      	beq.n	801c89c <??aci_gatt_read_handle_value_4>
 801c834:	8d34      	ldrh	r4, [r6, #40]	; 0x28
 801c836:	4284      	cmp	r4, r0
 801c838:	d002      	beq.n	801c840 <??aci_gatt_read_handle_value_5>
 801c83a:	d22f      	bcs.n	801c89c <??aci_gatt_read_handle_value_4>
 801c83c:	6a34      	ldr	r4, [r6, #32]
 801c83e:	e010      	b.n	801c862 <??aci_gatt_read_handle_value_6>

0801c840 <??aci_gatt_read_handle_value_5>:
 801c840:	f896 002c 	ldrb.w	r0, [r6, #44]	; 0x2c
 801c844:	2801      	cmp	r0, #1
 801c846:	bf14      	ite	ne
 801c848:	2010      	movne	r0, #16
 801c84a:	2002      	moveq	r0, #2
 801c84c:	f106 0408 	add.w	r4, r6, #8

0801c850 <??aci_gatt_read_handle_value_7>:
 801c850:	b285      	uxth	r5, r0
 801c852:	8018      	strh	r0, [r3, #0]
 801c854:	42a9      	cmp	r1, r5
 801c856:	d323      	bcc.n	801c8a0 <??aci_gatt_read_handle_value_8>

0801c858 <??aci_gatt_read_handle_value_0>:
 801c858:	2092      	movs	r0, #146	; 0x92
 801c85a:	bdf2      	pop	{r1, r4, r5, r6, r7, pc}

0801c85c <??aci_gatt_read_handle_value_9>:
 801c85c:	42b8      	cmp	r0, r7
 801c85e:	d31d      	bcc.n	801c89c <??aci_gatt_read_handle_value_4>
 801c860:	6824      	ldr	r4, [r4, #0]

0801c862 <??aci_gatt_read_handle_value_6>:
 801c862:	f106 0720 	add.w	r7, r6, #32
 801c866:	42bc      	cmp	r4, r7
 801c868:	d0e1      	beq.n	801c82e <??aci_gatt_read_handle_value_3>
 801c86a:	8ba7      	ldrh	r7, [r4, #28]
 801c86c:	4287      	cmp	r7, r0
 801c86e:	d1f5      	bne.n	801c85c <??aci_gatt_read_handle_value_9>
 801c870:	f894 0023 	ldrb.w	r0, [r4, #35]	; 0x23
 801c874:	2801      	cmp	r0, #1
 801c876:	d10c      	bne.n	801c892 <??aci_gatt_read_handle_value_10>
 801c878:	8920      	ldrh	r0, [r4, #8]
 801c87a:	f642 1602 	movw	r6, #10498	; 0x2902
 801c87e:	42b0      	cmp	r0, r6
 801c880:	bf1c      	itt	ne
 801c882:	f642 3729 	movwne	r7, #11049	; 0x2b29
 801c886:	42b8      	cmpne	r0, r7
 801c888:	d103      	bne.n	801c892 <??aci_gatt_read_handle_value_10>
 801c88a:	f8df 05ac 	ldr.w	r0, [pc, #1452]	; 801ce38 <??DataTable23>
 801c88e:	7d86      	ldrb	r6, [r0, #22]
 801c890:	e000      	b.n	801c894 <??aci_gatt_read_handle_value_11>

0801c892 <??aci_gatt_read_handle_value_10>:
 801c892:	2601      	movs	r6, #1

0801c894 <??aci_gatt_read_handle_value_11>:
 801c894:	8be0      	ldrh	r0, [r4, #30]
 801c896:	69a4      	ldr	r4, [r4, #24]
 801c898:	4370      	muls	r0, r6
 801c89a:	e7d9      	b.n	801c850 <??aci_gatt_read_handle_value_7>

0801c89c <??aci_gatt_read_handle_value_4>:
 801c89c:	2091      	movs	r0, #145	; 0x91
 801c89e:	bdf2      	pop	{r1, r4, r5, r6, r7, pc}

0801c8a0 <??aci_gatt_read_handle_value_8>:
 801c8a0:	1a40      	subs	r0, r0, r1
 801c8a2:	b280      	uxth	r0, r0
 801c8a4:	9b06      	ldr	r3, [sp, #24]
 801c8a6:	4290      	cmp	r0, r2
 801c8a8:	bf88      	it	hi
 801c8aa:	4610      	movhi	r0, r2
 801c8ac:	8018      	strh	r0, [r3, #0]
 801c8ae:	4602      	mov	r2, r0
 801c8b0:	9807      	ldr	r0, [sp, #28]
 801c8b2:	4421      	add	r1, r4
 801c8b4:	f014 fb17 	bl	8030ee6 <__aeabi_memcpy>
 801c8b8:	2000      	movs	r0, #0
 801c8ba:	bdf2      	pop	{r1, r4, r5, r6, r7, pc}

0801c8bc <aci_gatt_write_resp>:
 801c8bc:	e92d 47fa 	stmdb	sp!, {r1, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 801c8c0:	4692      	mov	sl, r2
 801c8c2:	f8dd 8028 	ldr.w	r8, [sp, #40]	; 0x28
 801c8c6:	f7fd fb11 	bl	8019eec <GATT_Find_Client>
 801c8ca:	2800      	cmp	r0, #0
 801c8cc:	f000 80ab 	beq.w	801ca26 <??aci_gatt_write_resp_0>
 801c8d0:	f8df 156c 	ldr.w	r1, [pc, #1388]	; 801ce40 <??DataTable23_2>
 801c8d4:	68cc      	ldr	r4, [r1, #12]
 801c8d6:	f8dd 902c 	ldr.w	r9, [sp, #44]	; 0x2c
 801c8da:	2c00      	cmp	r4, #0
 801c8dc:	d062      	beq.n	801c9a4 <??aci_gatt_write_resp_1>
 801c8de:	6841      	ldr	r1, [r0, #4]
 801c8e0:	038a      	lsls	r2, r1, #14
 801c8e2:	d55f      	bpl.n	801c9a4 <??aci_gatt_write_resp_1>
 801c8e4:	4606      	mov	r6, r0

0801c8e6 <??aci_gatt_write_resp_2>:
 801c8e6:	88a0      	ldrh	r0, [r4, #4]
 801c8e8:	8831      	ldrh	r1, [r6, #0]
 801c8ea:	f3c0 000b 	ubfx	r0, r0, #0, #12
 801c8ee:	4288      	cmp	r0, r1
 801c8f0:	d117      	bne.n	801c922 <??aci_gatt_write_resp_3>
 801c8f2:	68a0      	ldr	r0, [r4, #8]
 801c8f4:	2302      	movs	r3, #2
 801c8f6:	2205      	movs	r2, #5
 801c8f8:	7b05      	ldrb	r5, [r0, #12]
 801c8fa:	4669      	mov	r1, sp
 801c8fc:	4620      	mov	r0, r4
 801c8fe:	2703      	movs	r7, #3
 801c900:	f008 fa6e 	bl	8024de0 <ACL_PM_Cmp_Data>
 801c904:	b968      	cbnz	r0, 801c922 <??aci_gatt_write_resp_3>
 801c906:	2d16      	cmp	r5, #22
 801c908:	bf08      	it	eq
 801c90a:	2705      	moveq	r7, #5
 801c90c:	88e1      	ldrh	r1, [r4, #6]
 801c90e:	1bc9      	subs	r1, r1, r7
 801c910:	4588      	cmp	r8, r1
 801c912:	d106      	bne.n	801c922 <??aci_gatt_write_resp_3>
 801c914:	4643      	mov	r3, r8
 801c916:	1d3a      	adds	r2, r7, #4
 801c918:	4649      	mov	r1, r9
 801c91a:	4620      	mov	r0, r4
 801c91c:	f008 fa60 	bl	8024de0 <ACL_PM_Cmp_Data>
 801c920:	b118      	cbz	r0, 801c92a <??aci_gatt_write_resp_4>

0801c922 <??aci_gatt_write_resp_3>:
 801c922:	6824      	ldr	r4, [r4, #0]
 801c924:	2c00      	cmp	r4, #0
 801c926:	d1de      	bne.n	801c8e6 <??aci_gatt_write_resp_2>
 801c928:	e03b      	b.n	801c9a2 <??aci_gatt_write_resp_5>

0801c92a <??aci_gatt_write_resp_4>:
 801c92a:	8831      	ldrh	r1, [r6, #0]
 801c92c:	2220      	movs	r2, #32
 801c92e:	f008 f9c0 	bl	8024cb2 <ACL_PM_New>
 801c932:	ea5f 0800 	movs.w	r8, r0
 801c936:	bf08      	it	eq
 801c938:	2064      	moveq	r0, #100	; 0x64
 801c93a:	d075      	beq.n	801ca28 <??aci_gatt_write_resp_6>
 801c93c:	6871      	ldr	r1, [r6, #4]
 801c93e:	f1ba 0f00 	cmp.w	sl, #0
 801c942:	f421 3100 	bic.w	r1, r1, #131072	; 0x20000
 801c946:	d118      	bne.n	801c97a <??aci_gatt_write_resp_7>
 801c948:	f041 7180 	orr.w	r1, r1, #16777216	; 0x1000000
 801c94c:	6071      	str	r1, [r6, #4]
 801c94e:	2d12      	cmp	r5, #18
 801c950:	4642      	mov	r2, r8
 801c952:	4621      	mov	r1, r4
 801c954:	4630      	mov	r0, r6
 801c956:	d10d      	bne.n	801c974 <??aci_gatt_write_resp_8>
 801c958:	f001 f962 	bl	801dc20 <ATT_Build_Write_Rsp>

0801c95c <??aci_gatt_write_resp_9>:
 801c95c:	0001      	movs	r1, r0
 801c95e:	d116      	bne.n	801c98e <??aci_gatt_write_resp_10>

0801c960 <??aci_gatt_write_resp_11>:
 801c960:	4621      	mov	r1, r4
 801c962:	f8df 04e0 	ldr.w	r0, [pc, #1248]	; 801ce44 <??DataTable23_3>
 801c966:	f008 f921 	bl	8024bac <ACL_List_Remove>
 801c96a:	2101      	movs	r1, #1
 801c96c:	4620      	mov	r0, r4
 801c96e:	f008 f9b8 	bl	8024ce2 <ACL_PM_Release>
 801c972:	e00e      	b.n	801c992 <??aci_gatt_write_resp_12>

0801c974 <??aci_gatt_write_resp_8>:
 801c974:	f001 f9d5 	bl	801dd22 <ATT_Build_Prepare_Write_Rsp>
 801c978:	e7f0      	b.n	801c95c <??aci_gatt_write_resp_9>

0801c97a <??aci_gatt_write_resp_7>:
 801c97a:	f89d 0004 	ldrb.w	r0, [sp, #4]
 801c97e:	6071      	str	r1, [r6, #4]
 801c980:	f8bd 2000 	ldrh.w	r2, [sp]
 801c984:	4643      	mov	r3, r8
 801c986:	4629      	mov	r1, r5
 801c988:	f001 fde1 	bl	801e54e <ATT_Build_Error_Rsp>
 801c98c:	e7e8      	b.n	801c960 <??aci_gatt_write_resp_11>

0801c98e <??aci_gatt_write_resp_10>:
 801c98e:	2869      	cmp	r0, #105	; 0x69
 801c990:	d046      	beq.n	801ca20 <??aci_gatt_write_resp_13>

0801c992 <??aci_gatt_write_resp_12>:
 801c992:	6870      	ldr	r0, [r6, #4]
 801c994:	f020 7080 	bic.w	r0, r0, #16777216	; 0x1000000
 801c998:	6070      	str	r0, [r6, #4]
 801c99a:	4640      	mov	r0, r8
 801c99c:	f7fd fa81 	bl	8019ea2 <GATT_Send_Packet>
 801c9a0:	e03e      	b.n	801ca20 <??aci_gatt_write_resp_13>

0801c9a2 <??aci_gatt_write_resp_5>:
 801c9a2:	4630      	mov	r0, r6

0801c9a4 <??aci_gatt_write_resp_1>:
 801c9a4:	f8df 5498 	ldr.w	r5, [pc, #1176]	; 801ce40 <??DataTable23_2>
 801c9a8:	682c      	ldr	r4, [r5, #0]
 801c9aa:	2c00      	cmp	r4, #0
 801c9ac:	d03b      	beq.n	801ca26 <??aci_gatt_write_resp_0>
 801c9ae:	6841      	ldr	r1, [r0, #4]
 801c9b0:	034a      	lsls	r2, r1, #13
 801c9b2:	d538      	bpl.n	801ca26 <??aci_gatt_write_resp_0>
 801c9b4:	4606      	mov	r6, r0

0801c9b6 <??aci_gatt_write_resp_14>:
 801c9b6:	88a1      	ldrh	r1, [r4, #4]
 801c9b8:	8830      	ldrh	r0, [r6, #0]
 801c9ba:	f3c1 010b 	ubfx	r1, r1, #0, #12
 801c9be:	4288      	cmp	r0, r1
 801c9c0:	d113      	bne.n	801c9ea <??aci_gatt_write_resp_15>
 801c9c2:	68a0      	ldr	r0, [r4, #8]
 801c9c4:	7b00      	ldrb	r0, [r0, #12]
 801c9c6:	2852      	cmp	r0, #82	; 0x52
 801c9c8:	bf18      	it	ne
 801c9ca:	28d2      	cmpne	r0, #210	; 0xd2
 801c9cc:	d10d      	bne.n	801c9ea <??aci_gatt_write_resp_15>
 801c9ce:	2302      	movs	r3, #2
 801c9d0:	2205      	movs	r2, #5
 801c9d2:	4669      	mov	r1, sp
 801c9d4:	4620      	mov	r0, r4
 801c9d6:	f008 fa03 	bl	8024de0 <ACL_PM_Cmp_Data>
 801c9da:	b930      	cbnz	r0, 801c9ea <??aci_gatt_write_resp_15>
 801c9dc:	4643      	mov	r3, r8
 801c9de:	2207      	movs	r2, #7
 801c9e0:	4649      	mov	r1, r9
 801c9e2:	4620      	mov	r0, r4
 801c9e4:	f008 f9fc 	bl	8024de0 <ACL_PM_Cmp_Data>
 801c9e8:	b118      	cbz	r0, 801c9f2 <??aci_gatt_write_resp_16>

0801c9ea <??aci_gatt_write_resp_15>:
 801c9ea:	6824      	ldr	r4, [r4, #0]
 801c9ec:	2c00      	cmp	r4, #0
 801c9ee:	d1e2      	bne.n	801c9b6 <??aci_gatt_write_resp_14>
 801c9f0:	e019      	b.n	801ca26 <??aci_gatt_write_resp_0>

0801c9f2 <??aci_gatt_write_resp_16>:
 801c9f2:	f1ba 0f00 	cmp.w	sl, #0
 801c9f6:	d107      	bne.n	801ca08 <??aci_gatt_write_resp_17>
 801c9f8:	6870      	ldr	r0, [r6, #4]
 801c9fa:	4621      	mov	r1, r4
 801c9fc:	f040 6080 	orr.w	r0, r0, #67108864	; 0x4000000
 801ca00:	6070      	str	r0, [r6, #4]
 801ca02:	4630      	mov	r0, r6
 801ca04:	f001 fb7d 	bl	801e102 <GATT_Handle_Write_Cmd>

0801ca08 <??aci_gatt_write_resp_17>:
 801ca08:	6870      	ldr	r0, [r6, #4]
 801ca0a:	4621      	mov	r1, r4
 801ca0c:	f420 2080 	bic.w	r0, r0, #262144	; 0x40000
 801ca10:	6070      	str	r0, [r6, #4]
 801ca12:	4628      	mov	r0, r5
 801ca14:	f008 f8ca 	bl	8024bac <ACL_List_Remove>
 801ca18:	2101      	movs	r1, #1
 801ca1a:	4620      	mov	r0, r4
 801ca1c:	f008 f961 	bl	8024ce2 <ACL_PM_Release>

0801ca20 <??aci_gatt_write_resp_13>:
 801ca20:	2000      	movs	r0, #0
 801ca22:	e8bd 87f6 	ldmia.w	sp!, {r1, r2, r4, r5, r6, r7, r8, r9, sl, pc}

0801ca26 <??aci_gatt_write_resp_0>:
 801ca26:	2091      	movs	r0, #145	; 0x91

0801ca28 <??aci_gatt_write_resp_6>:
 801ca28:	e8bd 87f6 	ldmia.w	sp!, {r1, r2, r4, r5, r6, r7, r8, r9, sl, pc}

0801ca2c <GATT_Appl_Auth_For_Read>:
 801ca2c:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 801ca30:	460f      	mov	r7, r1
 801ca32:	4691      	mov	r9, r2
 801ca34:	f7fd fa5a 	bl	8019eec <GATT_Find_Client>
 801ca38:	0005      	movs	r5, r0
 801ca3a:	d057      	beq.n	801caec <??GATT_Appl_Auth_For_Read_0>
 801ca3c:	6868      	ldr	r0, [r5, #4]
 801ca3e:	0301      	lsls	r1, r0, #12
 801ca40:	d554      	bpl.n	801caec <??GATT_Appl_Auth_For_Read_0>
 801ca42:	f8df 83f8 	ldr.w	r8, [pc, #1016]	; 801ce3c <??DataTable23_1>
 801ca46:	f8d8 41d4 	ldr.w	r4, [r8, #468]	; 0x1d4
 801ca4a:	e000      	b.n	801ca4e <??GATT_Appl_Auth_For_Read_1>

0801ca4c <??GATT_Appl_Auth_For_Read_2>:
 801ca4c:	6824      	ldr	r4, [r4, #0]

0801ca4e <??GATT_Appl_Auth_For_Read_1>:
 801ca4e:	2c00      	cmp	r4, #0
 801ca50:	d04c      	beq.n	801caec <??GATT_Appl_Auth_For_Read_0>
 801ca52:	8829      	ldrh	r1, [r5, #0]
 801ca54:	88a0      	ldrh	r0, [r4, #4]
 801ca56:	4281      	cmp	r1, r0
 801ca58:	d1f8      	bne.n	801ca4c <??GATT_Appl_Auth_For_Read_2>
 801ca5a:	2220      	movs	r2, #32
 801ca5c:	2000      	movs	r0, #0
 801ca5e:	f008 f928 	bl	8024cb2 <ACL_PM_New>
 801ca62:	0006      	movs	r6, r0
 801ca64:	bf08      	it	eq
 801ca66:	2064      	moveq	r0, #100	; 0x64
 801ca68:	d041      	beq.n	801caee <??GATT_Appl_Auth_For_Read_3>
 801ca6a:	68a0      	ldr	r0, [r4, #8]
 801ca6c:	7b01      	ldrb	r1, [r0, #12]
 801ca6e:	b137      	cbz	r7, 801ca7e <??GATT_Appl_Auth_For_Read_4>
 801ca70:	7b42      	ldrb	r2, [r0, #13]
 801ca72:	4633      	mov	r3, r6
 801ca74:	4648      	mov	r0, r9
 801ca76:	f001 fd6a 	bl	801e54e <ATT_Build_Error_Rsp>
 801ca7a:	2000      	movs	r0, #0
 801ca7c:	e01e      	b.n	801cabc <??GATT_Appl_Auth_For_Read_5>

0801ca7e <??GATT_Appl_Auth_For_Read_4>:
 801ca7e:	290a      	cmp	r1, #10
 801ca80:	d105      	bne.n	801ca8e <??GATT_Appl_Auth_For_Read_6>
 801ca82:	4632      	mov	r2, r6
 801ca84:	4621      	mov	r1, r4
 801ca86:	4628      	mov	r0, r5
 801ca88:	f000 fd64 	bl	801d554 <ATT_Build_Read_Rsp>
 801ca8c:	e016      	b.n	801cabc <??GATT_Appl_Auth_For_Read_5>

0801ca8e <??GATT_Appl_Auth_For_Read_6>:
 801ca8e:	290c      	cmp	r1, #12
 801ca90:	d105      	bne.n	801ca9e <??GATT_Appl_Auth_For_Read_7>
 801ca92:	4632      	mov	r2, r6
 801ca94:	4621      	mov	r1, r4
 801ca96:	4628      	mov	r0, r5
 801ca98:	f000 fdeb 	bl	801d672 <ATT_Build_Read_Blob_Rsp>
 801ca9c:	e00e      	b.n	801cabc <??GATT_Appl_Auth_For_Read_5>

0801ca9e <??GATT_Appl_Auth_For_Read_7>:
 801ca9e:	290e      	cmp	r1, #14
 801caa0:	d105      	bne.n	801caae <??GATT_Appl_Auth_For_Read_8>
 801caa2:	4632      	mov	r2, r6
 801caa4:	4621      	mov	r1, r4
 801caa6:	4628      	mov	r0, r5
 801caa8:	f000 fe89 	bl	801d7be <ATT_Build_Read_Multi_Rsp>
 801caac:	e006      	b.n	801cabc <??GATT_Appl_Auth_For_Read_5>

0801caae <??GATT_Appl_Auth_For_Read_8>:
 801caae:	2908      	cmp	r1, #8
 801cab0:	d11c      	bne.n	801caec <??GATT_Appl_Auth_For_Read_0>
 801cab2:	4632      	mov	r2, r6
 801cab4:	4621      	mov	r1, r4
 801cab6:	4628      	mov	r0, r5
 801cab8:	f000 fb3a 	bl	801d130 <ATT_Build_Read_By_Type_Rsp>

0801cabc <??GATT_Appl_Auth_For_Read_5>:
 801cabc:	6869      	ldr	r1, [r5, #4]
 801cabe:	0002      	movs	r2, r0
 801cac0:	f421 2100 	bic.w	r1, r1, #524288	; 0x80000
 801cac4:	6069      	str	r1, [r5, #4]
 801cac6:	d109      	bne.n	801cadc <??GATT_Appl_Auth_For_Read_9>
 801cac8:	4621      	mov	r1, r4
 801caca:	f508 70ea 	add.w	r0, r8, #468	; 0x1d4
 801cace:	f008 f86d 	bl	8024bac <ACL_List_Remove>
 801cad2:	2101      	movs	r1, #1
 801cad4:	4620      	mov	r0, r4
 801cad6:	f008 f904 	bl	8024ce2 <ACL_PM_Release>
 801cada:	e001      	b.n	801cae0 <??GATT_Appl_Auth_For_Read_10>

0801cadc <??GATT_Appl_Auth_For_Read_9>:
 801cadc:	2869      	cmp	r0, #105	; 0x69
 801cade:	d002      	beq.n	801cae6 <??GATT_Appl_Auth_For_Read_11>

0801cae0 <??GATT_Appl_Auth_For_Read_10>:
 801cae0:	4630      	mov	r0, r6
 801cae2:	f7fd f9de 	bl	8019ea2 <GATT_Send_Packet>

0801cae6 <??GATT_Appl_Auth_For_Read_11>:
 801cae6:	2000      	movs	r0, #0
 801cae8:	e8bd 83f2 	ldmia.w	sp!, {r1, r4, r5, r6, r7, r8, r9, pc}

0801caec <??GATT_Appl_Auth_For_Read_0>:
 801caec:	2091      	movs	r0, #145	; 0x91

0801caee <??GATT_Appl_Auth_For_Read_3>:
 801caee:	e8bd 83f2 	ldmia.w	sp!, {r1, r4, r5, r6, r7, r8, r9, pc}

0801caf2 <aci_gatt_allow_read>:
 801caf2:	2200      	movs	r2, #0
 801caf4:	2100      	movs	r1, #0
 801caf6:	e799      	b.n	801ca2c <GATT_Appl_Auth_For_Read>

0801caf8 <aci_gatt_deny_read>:
 801caf8:	460a      	mov	r2, r1
 801cafa:	2101      	movs	r1, #1
 801cafc:	e796      	b.n	801ca2c <GATT_Appl_Auth_For_Read>

0801cafe <aci_gatt_set_security_permission>:
 801cafe:	b430      	push	{r4, r5}
 801cb00:	f8df 3338 	ldr.w	r3, [pc, #824]	; 801ce3c <??DataTable23_1>
 801cb04:	f8d3 41b8 	ldr.w	r4, [r3, #440]	; 0x1b8
 801cb08:	f503 73dc 	add.w	r3, r3, #440	; 0x1b8
 801cb0c:	e000      	b.n	801cb10 <??aci_gatt_set_security_permission_0>

0801cb0e <??aci_gatt_set_security_permission_1>:
 801cb0e:	6824      	ldr	r4, [r4, #0]

0801cb10 <??aci_gatt_set_security_permission_0>:
 801cb10:	429c      	cmp	r4, r3
 801cb12:	d01b      	beq.n	801cb4c <??aci_gatt_set_security_permission_2>
 801cb14:	8d25      	ldrh	r5, [r4, #40]	; 0x28
 801cb16:	4285      	cmp	r5, r0
 801cb18:	d1f9      	bne.n	801cb0e <??aci_gatt_set_security_permission_1>
 801cb1a:	6a20      	ldr	r0, [r4, #32]
 801cb1c:	f104 0320 	add.w	r3, r4, #32
 801cb20:	e000      	b.n	801cb24 <??aci_gatt_set_security_permission_3>

0801cb22 <??aci_gatt_set_security_permission_4>:
 801cb22:	6800      	ldr	r0, [r0, #0]

0801cb24 <??aci_gatt_set_security_permission_3>:
 801cb24:	4298      	cmp	r0, r3
 801cb26:	d011      	beq.n	801cb4c <??aci_gatt_set_security_permission_2>
 801cb28:	8b85      	ldrh	r5, [r0, #28]
 801cb2a:	428d      	cmp	r5, r1
 801cb2c:	d1f9      	bne.n	801cb22 <??aci_gatt_set_security_permission_4>
 801cb2e:	f100 0123 	add.w	r1, r0, #35	; 0x23
 801cb32:	780b      	ldrb	r3, [r1, #0]
 801cb34:	2b01      	cmp	r3, #1
 801cb36:	bf02      	ittt	eq
 801cb38:	8900      	ldrheq	r0, [r0, #8]
 801cb3a:	f642 1302 	movweq	r3, #10498	; 0x2902
 801cb3e:	4298      	cmpeq	r0, r3
 801cb40:	bf12      	itee	ne
 801cb42:	200c      	movne	r0, #12
 801cb44:	708a      	strbeq	r2, [r1, #2]
 801cb46:	2000      	moveq	r0, #0
 801cb48:	bc30      	pop	{r4, r5}
 801cb4a:	4770      	bx	lr

0801cb4c <??aci_gatt_set_security_permission_2>:
 801cb4c:	e0c5      	b.n	801ccda <??aci_gatt_set_access_permission_2>

0801cb4e <GATT_Update_For_Service_Change>:
 801cb4e:	b530      	push	{r4, r5, lr}
 801cb50:	4cba      	ldr	r4, [pc, #744]	; (801ce3c <??DataTable23_1>)
 801cb52:	f894 51ac 	ldrb.w	r5, [r4, #428]	; 0x1ac
 801cb56:	b085      	sub	sp, #20
 801cb58:	07ac      	lsls	r4, r5, #30
 801cb5a:	d51c      	bpl.n	801cb96 <??GATT_Update_For_Service_Change_0>
 801cb5c:	4db6      	ldr	r5, [pc, #728]	; (801ce38 <??DataTable23>)
 801cb5e:	f895 4020 	ldrb.w	r4, [r5, #32]
 801cb62:	07a5      	lsls	r5, r4, #30
 801cb64:	d417      	bmi.n	801cb96 <??GATT_Update_For_Service_Change_0>
 801cb66:	b9b1      	cbnz	r1, 801cb96 <??GATT_Update_For_Service_Change_0>
 801cb68:	b100      	cbz	r0, 801cb6c <??GATT_Update_For_Service_Change_1>
 801cb6a:	8800      	ldrh	r0, [r0, #0]

0801cb6c <??GATT_Update_For_Service_Change_1>:
 801cb6c:	f8ad 300e 	strh.w	r3, [sp, #14]
 801cb70:	2404      	movs	r4, #4
 801cb72:	2300      	movs	r3, #0
 801cb74:	f8ad 4012 	strh.w	r4, [sp, #18]
 801cb78:	a903      	add	r1, sp, #12
 801cb7a:	f8ad 200c 	strh.w	r2, [sp, #12]
 801cb7e:	f8ad 3010 	strh.w	r3, [sp, #16]
 801cb82:	9102      	str	r1, [sp, #8]
 801cb84:	ac04      	add	r4, sp, #16
 801cb86:	2504      	movs	r5, #4
 801cb88:	9401      	str	r4, [sp, #4]
 801cb8a:	9500      	str	r5, [sp, #0]
 801cb8c:	2302      	movs	r3, #2
 801cb8e:	2202      	movs	r2, #2
 801cb90:	2101      	movs	r1, #1
 801cb92:	f7ff fb2d 	bl	801c1f0 <GATT_Update_Char_Value_Core>

0801cb96 <??GATT_Update_For_Service_Change_0>:
 801cb96:	b005      	add	sp, #20
 801cb98:	bd30      	pop	{r4, r5, pc}

0801cb9a <GATT_Check_For_Service_Change>:
 801cb9a:	b51c      	push	{r2, r3, r4, lr}
 801cb9c:	4604      	mov	r4, r0
 801cb9e:	466a      	mov	r2, sp
 801cba0:	f10d 0102 	add.w	r1, sp, #2
 801cba4:	f001 ff18 	bl	801e9d8 <GATT_Get_Change_Vs_Server_Database>
 801cba8:	f8bd 3000 	ldrh.w	r3, [sp]
 801cbac:	f8bd 2002 	ldrh.w	r2, [sp, #2]
 801cbb0:	4601      	mov	r1, r0
 801cbb2:	4620      	mov	r0, r4
 801cbb4:	f7ff ffcb 	bl	801cb4e <GATT_Update_For_Service_Change>
 801cbb8:	bd13      	pop	{r0, r1, r4, pc}

0801cbba <GATT_Check_Out_Of_Sync_Req>:
 801cbba:	b41c      	push	{r2, r3, r4}
 801cbbc:	6881      	ldr	r1, [r0, #8]
 801cbbe:	7b0a      	ldrb	r2, [r1, #12]
 801cbc0:	2a10      	cmp	r2, #16
 801cbc2:	d031      	beq.n	801cc28 <??GATT_Check_Out_Of_Sync_Req_0>
 801cbc4:	2a08      	cmp	r2, #8
 801cbc6:	d132      	bne.n	801cc2e <??GATT_Check_Out_Of_Sync_Req_1>
 801cbc8:	f101 020d 	add.w	r2, r1, #13
 801cbcc:	7814      	ldrb	r4, [r2, #0]
 801cbce:	ab01      	add	r3, sp, #4
 801cbd0:	701c      	strb	r4, [r3, #0]
 801cbd2:	7854      	ldrb	r4, [r2, #1]
 801cbd4:	f101 020f 	add.w	r2, r1, #15
 801cbd8:	705c      	strb	r4, [r3, #1]
 801cbda:	7814      	ldrb	r4, [r2, #0]
 801cbdc:	f10d 0302 	add.w	r3, sp, #2
 801cbe0:	701c      	strb	r4, [r3, #0]
 801cbe2:	7854      	ldrb	r4, [r2, #1]
 801cbe4:	705c      	strb	r4, [r3, #1]
 801cbe6:	f811 3f11 	ldrb.w	r3, [r1, #17]!
 801cbea:	f88d 3000 	strb.w	r3, [sp]
 801cbee:	784b      	ldrb	r3, [r1, #1]
 801cbf0:	f8bd 1004 	ldrh.w	r1, [sp, #4]
 801cbf4:	f88d 3001 	strb.w	r3, [sp, #1]
 801cbf8:	2901      	cmp	r1, #1
 801cbfa:	bf02      	ittt	eq
 801cbfc:	f8bd 1002 	ldrheq.w	r1, [sp, #2]
 801cc00:	f64f 72ff 	movweq	r2, #65535	; 0xffff
 801cc04:	4291      	cmpeq	r1, r2
 801cc06:	bf04      	itt	eq
 801cc08:	88c0      	ldrheq	r0, [r0, #6]
 801cc0a:	2807      	cmpeq	r0, #7
 801cc0c:	d10f      	bne.n	801cc2e <??GATT_Check_Out_Of_Sync_Req_1>
 801cc0e:	f8bd 0000 	ldrh.w	r0, [sp]
 801cc12:	f642 312a 	movw	r1, #11050	; 0x2b2a
 801cc16:	4288      	cmp	r0, r1
 801cc18:	bf1f      	itttt	ne
 801cc1a:	f642 0103 	movwne	r1, #10243	; 0x2803
 801cc1e:	4288      	cmpne	r0, r1
 801cc20:	f642 0102 	movwne	r1, #10242	; 0x2802
 801cc24:	4288      	cmpne	r0, r1
 801cc26:	d102      	bne.n	801cc2e <??GATT_Check_Out_Of_Sync_Req_1>

0801cc28 <??GATT_Check_Out_Of_Sync_Req_0>:
 801cc28:	2000      	movs	r0, #0
 801cc2a:	bc16      	pop	{r1, r2, r4}
 801cc2c:	4770      	bx	lr

0801cc2e <??GATT_Check_Out_Of_Sync_Req_1>:
 801cc2e:	2001      	movs	r0, #1
 801cc30:	bc16      	pop	{r1, r2, r4}
 801cc32:	4770      	bx	lr

0801cc34 <aci_gatt_set_access_permission>:
 801cc34:	b430      	push	{r4, r5}
 801cc36:	4b81      	ldr	r3, [pc, #516]	; (801ce3c <??DataTable23_1>)
 801cc38:	f8d3 41b8 	ldr.w	r4, [r3, #440]	; 0x1b8
 801cc3c:	f503 73dc 	add.w	r3, r3, #440	; 0x1b8
 801cc40:	e000      	b.n	801cc44 <??aci_gatt_set_access_permission_0>

0801cc42 <??aci_gatt_set_access_permission_1>:
 801cc42:	6824      	ldr	r4, [r4, #0]

0801cc44 <??aci_gatt_set_access_permission_0>:
 801cc44:	429c      	cmp	r4, r3
 801cc46:	d048      	beq.n	801ccda <??aci_gatt_set_access_permission_2>
 801cc48:	8d25      	ldrh	r5, [r4, #40]	; 0x28
 801cc4a:	4285      	cmp	r5, r0
 801cc4c:	d1f9      	bne.n	801cc42 <??aci_gatt_set_access_permission_1>
 801cc4e:	6a23      	ldr	r3, [r4, #32]
 801cc50:	f104 0020 	add.w	r0, r4, #32
 801cc54:	e000      	b.n	801cc58 <??aci_gatt_set_access_permission_3>

0801cc56 <??aci_gatt_set_access_permission_4>:
 801cc56:	681b      	ldr	r3, [r3, #0]

0801cc58 <??aci_gatt_set_access_permission_3>:
 801cc58:	4283      	cmp	r3, r0
 801cc5a:	d03e      	beq.n	801ccda <??aci_gatt_set_access_permission_2>
 801cc5c:	8b9d      	ldrh	r5, [r3, #28]
 801cc5e:	428d      	cmp	r5, r1
 801cc60:	d1f9      	bne.n	801cc56 <??aci_gatt_set_access_permission_4>
 801cc62:	f103 0023 	add.w	r0, r3, #35	; 0x23
 801cc66:	7801      	ldrb	r1, [r0, #0]
 801cc68:	2901      	cmp	r1, #1
 801cc6a:	d132      	bne.n	801ccd2 <??aci_gatt_set_access_permission_5>
 801cc6c:	8919      	ldrh	r1, [r3, #8]
 801cc6e:	f642 1304 	movw	r3, #10500	; 0x2904
 801cc72:	4299      	cmp	r1, r3
 801cc74:	bf1c      	itt	ne
 801cc76:	f642 1405 	movwne	r4, #10501	; 0x2905
 801cc7a:	42a1      	cmpne	r1, r4
 801cc7c:	d026      	beq.n	801cccc <??aci_gatt_set_access_permission_6>
 801cc7e:	f642 2305 	movw	r3, #10757	; 0x2a05
 801cc82:	4299      	cmp	r1, r3
 801cc84:	bf1c      	itt	ne
 801cc86:	f642 2404 	movwne	r4, #10756	; 0x2a04
 801cc8a:	42a1      	cmpne	r1, r4
 801cc8c:	d01e      	beq.n	801cccc <??aci_gatt_set_access_permission_6>
 801cc8e:	f642 23a6 	movw	r3, #10918	; 0x2aa6
 801cc92:	4299      	cmp	r1, r3
 801cc94:	bf1c      	itt	ne
 801cc96:	f642 24c9 	movwne	r4, #10953	; 0x2ac9
 801cc9a:	42a1      	cmpne	r1, r4
 801cc9c:	d016      	beq.n	801cccc <??aci_gatt_set_access_permission_6>
 801cc9e:	f642 0302 	movw	r3, #10242	; 0x2802
 801cca2:	4299      	cmp	r1, r3
 801cca4:	bf1c      	itt	ne
 801cca6:	f642 0403 	movwne	r4, #10243	; 0x2803
 801ccaa:	42a1      	cmpne	r1, r4
 801ccac:	d00e      	beq.n	801cccc <??aci_gatt_set_access_permission_6>
 801ccae:	f5b1 5f24 	cmp.w	r1, #10496	; 0x2900
 801ccb2:	bf1c      	itt	ne
 801ccb4:	f642 3329 	movwne	r3, #11049	; 0x2b29
 801ccb8:	4299      	cmpne	r1, r3
 801ccba:	d007      	beq.n	801cccc <??aci_gatt_set_access_permission_6>
 801ccbc:	f642 342a 	movw	r4, #11050	; 0x2b2a
 801ccc0:	42a1      	cmp	r1, r4
 801ccc2:	bf1c      	itt	ne
 801ccc4:	f642 333a 	movwne	r3, #11066	; 0x2b3a
 801ccc8:	4299      	cmpne	r1, r3
 801ccca:	d102      	bne.n	801ccd2 <??aci_gatt_set_access_permission_5>

0801cccc <??aci_gatt_set_access_permission_6>:
 801cccc:	200c      	movs	r0, #12
 801ccce:	bc30      	pop	{r4, r5}
 801ccd0:	4770      	bx	lr

0801ccd2 <??aci_gatt_set_access_permission_5>:
 801ccd2:	f002 020f 	and.w	r2, r2, #15
 801ccd6:	7042      	strb	r2, [r0, #1]
 801ccd8:	e0ab      	b.n	801ce32 <??GATT_Find_Attr_Index_1>

0801ccda <??aci_gatt_set_access_permission_2>:
 801ccda:	2091      	movs	r0, #145	; 0x91
 801ccdc:	bc30      	pop	{r4, r5}
 801ccde:	4770      	bx	lr

0801cce0 <GATT_Send_Notif_Or_Ind>:
 801cce0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 801cce2:	460e      	mov	r6, r1
 801cce4:	4615      	mov	r5, r2
 801cce6:	2100      	movs	r1, #0
 801cce8:	2400      	movs	r4, #0
 801ccea:	b130      	cbz	r0, 801ccfa <??GATT_Send_Notif_Or_Ind_0>
 801ccec:	2e01      	cmp	r6, #1
 801ccee:	d104      	bne.n	801ccfa <??GATT_Send_Notif_Or_Ind_0>
 801ccf0:	4852      	ldr	r0, [pc, #328]	; (801ce3c <??DataTable23_1>)
 801ccf2:	f8d0 2208 	ldr.w	r2, [r0, #520]	; 0x208
 801ccf6:	4295      	cmp	r5, r2
 801ccf8:	d110      	bne.n	801cd1c <??GATT_Send_Notif_Or_Ind_1>

0801ccfa <??GATT_Send_Notif_Or_Ind_0>:
 801ccfa:	484f      	ldr	r0, [pc, #316]	; (801ce38 <??DataTable23>)
 801ccfc:	7d80      	ldrb	r0, [r0, #22]
 801ccfe:	b168      	cbz	r0, 801cd1c <??GATT_Send_Notif_Or_Ind_1>
 801cd00:	4f51      	ldr	r7, [pc, #324]	; (801ce48 <??DataTable23_4>)
 801cd02:	687a      	ldr	r2, [r7, #4]

0801cd04 <??GATT_Send_Notif_Or_Ind_2>:
 801cd04:	6853      	ldr	r3, [r2, #4]
 801cd06:	4233      	tst	r3, r6
 801cd08:	d004      	beq.n	801cd14 <??GATT_Send_Notif_Or_Ind_3>
 801cd0a:	8853      	ldrh	r3, [r2, #2]
 801cd0c:	4299      	cmp	r1, r3
 801cd0e:	bf3c      	itt	cc
 801cd10:	4619      	movcc	r1, r3
 801cd12:	4614      	movcc	r4, r2

0801cd14 <??GATT_Send_Notif_Or_Ind_3>:
 801cd14:	3224      	adds	r2, #36	; 0x24
 801cd16:	1e40      	subs	r0, r0, #1
 801cd18:	d1f4      	bne.n	801cd04 <??GATT_Send_Notif_Or_Ind_2>
 801cd1a:	b90c      	cbnz	r4, 801cd20 <??GATT_Send_Notif_Or_Ind_4>

0801cd1c <??GATT_Send_Notif_Or_Ind_1>:
 801cd1c:	2000      	movs	r0, #0
 801cd1e:	bdf2      	pop	{r1, r4, r5, r6, r7, pc}

0801cd20 <??GATT_Send_Notif_Or_Ind_4>:
 801cd20:	88e8      	ldrh	r0, [r5, #6]
 801cd22:	4281      	cmp	r1, r0
 801cd24:	bf88      	it	hi
 801cd26:	4601      	movhi	r1, r0
 801cd28:	80e9      	strh	r1, [r5, #6]
 801cd2a:	8821      	ldrh	r1, [r4, #0]
 801cd2c:	4628      	mov	r0, r5
 801cd2e:	80a9      	strh	r1, [r5, #4]
 801cd30:	f7fd f8b7 	bl	8019ea2 <GATT_Send_Packet>
 801cd34:	6860      	ldr	r0, [r4, #4]
 801cd36:	2e02      	cmp	r6, #2
 801cd38:	bf08      	it	eq
 801cd3a:	f040 0008 	orreq.w	r0, r0, #8
 801cd3e:	43b0      	bics	r0, r6
 801cd40:	6060      	str	r0, [r4, #4]
 801cd42:	2e01      	cmp	r6, #1
 801cd44:	bf08      	it	eq
 801cd46:	603d      	streq	r5, [r7, #0]
 801cd48:	2093      	movs	r0, #147	; 0x93
 801cd4a:	bdf2      	pop	{r1, r4, r5, r6, r7, pc}

0801cd4c <GATT_Search_Handle>:
 801cd4c:	b430      	push	{r4, r5}
 801cd4e:	6a0b      	ldr	r3, [r1, #32]
 801cd50:	f101 0420 	add.w	r4, r1, #32
 801cd54:	e000      	b.n	801cd58 <??GATT_Search_Handle_0>

0801cd56 <??GATT_Search_Handle_1>:
 801cd56:	681b      	ldr	r3, [r3, #0]

0801cd58 <??GATT_Search_Handle_0>:
 801cd58:	42a3      	cmp	r3, r4
 801cd5a:	d004      	beq.n	801cd66 <??GATT_Search_Handle_2>
 801cd5c:	8b9d      	ldrh	r5, [r3, #28]
 801cd5e:	4285      	cmp	r5, r0
 801cd60:	d1f9      	bne.n	801cd56 <??GATT_Search_Handle_1>
 801cd62:	6013      	str	r3, [r2, #0]
 801cd64:	e065      	b.n	801ce32 <??GATT_Find_Attr_Index_1>

0801cd66 <??GATT_Search_Handle_2>:
 801cd66:	e7b8      	b.n	801ccda <??aci_gatt_set_access_permission_2>

0801cd68 <GATT_Find_Srv_Owner_Of_Handle>:
 801cd68:	b450      	push	{r4, r6}
 801cd6a:	4a34      	ldr	r2, [pc, #208]	; (801ce3c <??DataTable23_1>)
 801cd6c:	f8d2 11b8 	ldr.w	r1, [r2, #440]	; 0x1b8
 801cd70:	0003      	movs	r3, r0
 801cd72:	d103      	bne.n	801cd7c <??GATT_Find_Srv_Owner_Of_Handle_0>
 801cd74:	2000      	movs	r0, #0
 801cd76:	bc50      	pop	{r4, r6}
 801cd78:	4770      	bx	lr

0801cd7a <??GATT_Find_Srv_Owner_Of_Handle_1>:
 801cd7a:	4619      	mov	r1, r3

0801cd7c <??GATT_Find_Srv_Owner_Of_Handle_0>:
 801cd7c:	680b      	ldr	r3, [r1, #0]
 801cd7e:	f502 74dc 	add.w	r4, r2, #440	; 0x1b8
 801cd82:	42a3      	cmp	r3, r4
 801cd84:	d002      	beq.n	801cd8c <??GATT_Find_Srv_Owner_Of_Handle_2>
 801cd86:	8d1e      	ldrh	r6, [r3, #40]	; 0x28
 801cd88:	42b0      	cmp	r0, r6
 801cd8a:	d2f6      	bcs.n	801cd7a <??GATT_Find_Srv_Owner_Of_Handle_1>

0801cd8c <??GATT_Find_Srv_Owner_Of_Handle_2>:
 801cd8c:	42a3      	cmp	r3, r4
 801cd8e:	d10c      	bne.n	801cdaa <??GATT_Find_Srv_Owner_Of_Handle_3>
 801cd90:	8d0b      	ldrh	r3, [r1, #40]	; 0x28
 801cd92:	4283      	cmp	r3, r0
 801cd94:	d209      	bcs.n	801cdaa <??GATT_Find_Srv_Owner_Of_Handle_3>
 801cd96:	6a0b      	ldr	r3, [r1, #32]
 801cd98:	f101 0220 	add.w	r2, r1, #32
 801cd9c:	429a      	cmp	r2, r3
 801cd9e:	d003      	beq.n	801cda8 <??GATT_Find_Srv_Owner_Of_Handle_4>
 801cda0:	6a4a      	ldr	r2, [r1, #36]	; 0x24
 801cda2:	8b93      	ldrh	r3, [r2, #28]
 801cda4:	4283      	cmp	r3, r0
 801cda6:	d200      	bcs.n	801cdaa <??GATT_Find_Srv_Owner_Of_Handle_3>

0801cda8 <??GATT_Find_Srv_Owner_Of_Handle_4>:
 801cda8:	2100      	movs	r1, #0

0801cdaa <??GATT_Find_Srv_Owner_Of_Handle_3>:
 801cdaa:	4608      	mov	r0, r1
 801cdac:	bc50      	pop	{r4, r6}
 801cdae:	4770      	bx	lr

0801cdb0 <GATT_Find_Srv_From_Handle>:
 801cdb0:	4601      	mov	r1, r0
 801cdb2:	4a22      	ldr	r2, [pc, #136]	; (801ce3c <??DataTable23_1>)
 801cdb4:	f8d2 01b8 	ldr.w	r0, [r2, #440]	; 0x1b8
 801cdb8:	f502 72dc 	add.w	r2, r2, #440	; 0x1b8
 801cdbc:	e003      	b.n	801cdc6 <??GATT_Find_Srv_From_Handle_0>

0801cdbe <??GATT_Find_Srv_From_Handle_1>:
 801cdbe:	8d03      	ldrh	r3, [r0, #40]	; 0x28
 801cdc0:	428b      	cmp	r3, r1
 801cdc2:	d203      	bcs.n	801cdcc <??GATT_Find_Srv_From_Handle_2>
 801cdc4:	6800      	ldr	r0, [r0, #0]

0801cdc6 <??GATT_Find_Srv_From_Handle_0>:
 801cdc6:	4290      	cmp	r0, r2
 801cdc8:	d1f9      	bne.n	801cdbe <??GATT_Find_Srv_From_Handle_1>
 801cdca:	2000      	movs	r0, #0

0801cdcc <??GATT_Find_Srv_From_Handle_2>:
 801cdcc:	4770      	bx	lr
	...

0801cdd0 <??DataTable22>:
 801cdd0:	38bc 2000                                   .8. 

0801cdd4 <GATT_Is_Multiple_Val_Attr>:
 801cdd4:	2801      	cmp	r0, #1
 801cdd6:	d10a      	bne.n	801cdee <??GATT_Is_Multiple_Val_Attr_0>
 801cdd8:	8808      	ldrh	r0, [r1, #0]
 801cdda:	f642 1102 	movw	r1, #10498	; 0x2902
 801cdde:	4288      	cmp	r0, r1
 801cde0:	bf1c      	itt	ne
 801cde2:	f642 3229 	movwne	r2, #11049	; 0x2b29
 801cde6:	4290      	cmpne	r0, r2
 801cde8:	d101      	bne.n	801cdee <??GATT_Is_Multiple_Val_Attr_0>
 801cdea:	2001      	movs	r0, #1
 801cdec:	4770      	bx	lr

0801cdee <??GATT_Is_Multiple_Val_Attr_0>:
 801cdee:	2000      	movs	r0, #0
 801cdf0:	4770      	bx	lr

0801cdf2 <GATT_Find_Attr_Index>:
 801cdf2:	b430      	push	{r4, r5}
 801cdf4:	b160      	cbz	r0, 801ce10 <??GATT_Find_Attr_Index_0>
 801cdf6:	3008      	adds	r0, #8
 801cdf8:	7ec2      	ldrb	r2, [r0, #27]
 801cdfa:	2a01      	cmp	r2, #1
 801cdfc:	d119      	bne.n	801ce32 <??GATT_Find_Attr_Index_1>
 801cdfe:	8800      	ldrh	r0, [r0, #0]
 801ce00:	f642 1202 	movw	r2, #10498	; 0x2902
 801ce04:	4290      	cmp	r0, r2
 801ce06:	bf1c      	itt	ne
 801ce08:	f642 3329 	movwne	r3, #11049	; 0x2b29
 801ce0c:	4298      	cmpne	r0, r3
 801ce0e:	d110      	bne.n	801ce32 <??GATT_Find_Attr_Index_1>

0801ce10 <??GATT_Find_Attr_Index_0>:
 801ce10:	4a0a      	ldr	r2, [pc, #40]	; (801ce3c <??DataTable23_1>)
 801ce12:	4b09      	ldr	r3, [pc, #36]	; (801ce38 <??DataTable23>)
 801ce14:	2000      	movs	r0, #0
 801ce16:	f8d2 220c 	ldr.w	r2, [r2, #524]	; 0x20c
 801ce1a:	7d9d      	ldrb	r5, [r3, #22]
 801ce1c:	e001      	b.n	801ce22 <??GATT_Find_Attr_Index_2>

0801ce1e <??GATT_Find_Attr_Index_3>:
 801ce1e:	1c40      	adds	r0, r0, #1
 801ce20:	3224      	adds	r2, #36	; 0x24

0801ce22 <??GATT_Find_Attr_Index_2>:
 801ce22:	b2c4      	uxtb	r4, r0
 801ce24:	42ac      	cmp	r4, r5
 801ce26:	d204      	bcs.n	801ce32 <??GATT_Find_Attr_Index_1>
 801ce28:	4291      	cmp	r1, r2
 801ce2a:	d1f8      	bne.n	801ce1e <??GATT_Find_Attr_Index_3>
 801ce2c:	b2c0      	uxtb	r0, r0
 801ce2e:	bc30      	pop	{r4, r5}
 801ce30:	4770      	bx	lr

0801ce32 <??GATT_Find_Attr_Index_1>:
 801ce32:	2000      	movs	r0, #0
 801ce34:	bc30      	pop	{r4, r5}
 801ce36:	4770      	bx	lr

0801ce38 <??DataTable23>:
 801ce38:	36e8 2000                                   .6. 

0801ce3c <??DataTable23_1>:
 801ce3c:	3710 2000                                   .7. 

0801ce40 <??DataTable23_2>:
 801ce40:	38d8 2000                                   .8. 

0801ce44 <??DataTable23_3>:
 801ce44:	38e4 2000                                   .8. 

0801ce48 <??DataTable23_4>:
 801ce48:	3918 2000                                   .9. 

0801ce4c <GATT_Set_UUID>:
 801ce4c:	b538      	push	{r3, r4, r5, lr}
 801ce4e:	460c      	mov	r4, r1
 801ce50:	461d      	mov	r5, r3
 801ce52:	4611      	mov	r1, r2
 801ce54:	2d01      	cmp	r5, #1
 801ce56:	d106      	bne.n	801ce66 <??GATT_Set_UUID_0>
 801ce58:	780a      	ldrb	r2, [r1, #0]
 801ce5a:	7002      	strb	r2, [r0, #0]
 801ce5c:	784a      	ldrb	r2, [r1, #1]
 801ce5e:	7042      	strb	r2, [r0, #1]

0801ce60 <??GATT_Set_UUID_1>:
 801ce60:	7025      	strb	r5, [r4, #0]
 801ce62:	2000      	movs	r0, #0
 801ce64:	bd32      	pop	{r1, r4, r5, pc}

0801ce66 <??GATT_Set_UUID_0>:
 801ce66:	2d02      	cmp	r5, #2
 801ce68:	d103      	bne.n	801ce72 <??GATT_Set_UUID_2>
 801ce6a:	2210      	movs	r2, #16
 801ce6c:	f014 f83b 	bl	8030ee6 <__aeabi_memcpy>
 801ce70:	e7f6      	b.n	801ce60 <??GATT_Set_UUID_1>

0801ce72 <??GATT_Set_UUID_2>:
 801ce72:	2092      	movs	r0, #146	; 0x92
 801ce74:	bd32      	pop	{r1, r4, r5, pc}
	...

0801ce78 <GATT_Send_Attribute_Modified_Event>:
 801ce78:	b538      	push	{r3, r4, r5, lr}
 801ce7a:	460c      	mov	r4, r1
 801ce7c:	f894 1026 	ldrb.w	r1, [r4, #38]	; 0x26
 801ce80:	4615      	mov	r5, r2
 801ce82:	07ca      	lsls	r2, r1, #31
 801ce84:	d50c      	bpl.n	801cea0 <??GATT_Send_Attribute_Modified_Event_0>
 801ce86:	f7fd f87b 	bl	8019f80 <GATT_Evt_Handle>
 801ce8a:	8c21      	ldrh	r1, [r4, #32]
 801ce8c:	69a2      	ldr	r2, [r4, #24]
 801ce8e:	434d      	muls	r5, r1
 801ce90:	8ba1      	ldrh	r1, [r4, #28]
 801ce92:	1953      	adds	r3, r2, r5
 801ce94:	8be2      	ldrh	r2, [r4, #30]
 801ce96:	b001      	add	sp, #4
 801ce98:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
 801ce9c:	f002 bab5 	b.w	801f40a <EVT_GATT_Attribute_Modified>

0801cea0 <??GATT_Send_Attribute_Modified_Event_0>:
 801cea0:	bd31      	pop	{r0, r4, r5, pc}

0801cea2 <ATT_Build_Find_By_Type_Val_Rsp>:
 801cea2:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801cea6:	b085      	sub	sp, #20
 801cea8:	468a      	mov	sl, r1
 801ceaa:	f8ba 1006 	ldrh.w	r1, [sl, #6]
 801ceae:	4690      	mov	r8, r2
 801ceb0:	2907      	cmp	r1, #7
 801ceb2:	d206      	bcs.n	801cec2 <??ATT_Build_Find_By_Type_Val_Rsp_0>
 801ceb4:	4643      	mov	r3, r8
 801ceb6:	2200      	movs	r2, #0
 801ceb8:	2106      	movs	r1, #6
 801ceba:	2004      	movs	r0, #4
 801cebc:	f001 fb47 	bl	801e54e <ATT_Build_Error_Rsp>
 801cec0:	e044      	b.n	801cf4c <??ATT_Build_Find_By_Type_Val_Rsp_1>

0801cec2 <??ATT_Build_Find_By_Type_Val_Rsp_0>:
 801cec2:	f8da 2008 	ldr.w	r2, [sl, #8]
 801cec6:	ad01      	add	r5, sp, #4
 801cec8:	1fcc      	subs	r4, r1, #7
 801ceca:	f102 030d 	add.w	r3, r2, #13
 801cece:	781e      	ldrb	r6, [r3, #0]
 801ced0:	b2a4      	uxth	r4, r4
 801ced2:	f88d 6000 	strb.w	r6, [sp]
 801ced6:	785e      	ldrb	r6, [r3, #1]
 801ced8:	f102 030f 	add.w	r3, r2, #15
 801cedc:	f88d 6001 	strb.w	r6, [sp, #1]
 801cee0:	781e      	ldrb	r6, [r3, #0]
 801cee2:	702e      	strb	r6, [r5, #0]
 801cee4:	785e      	ldrb	r6, [r3, #1]
 801cee6:	f10d 0302 	add.w	r3, sp, #2
 801ceea:	706e      	strb	r6, [r5, #1]
 801ceec:	f812 5f11 	ldrb.w	r5, [r2, #17]!
 801cef0:	f8bd 1004 	ldrh.w	r1, [sp, #4]
 801cef4:	701d      	strb	r5, [r3, #0]
 801cef6:	7855      	ldrb	r5, [r2, #1]
 801cef8:	f8bd 2000 	ldrh.w	r2, [sp]
 801cefc:	705d      	strb	r5, [r3, #1]
 801cefe:	4291      	cmp	r1, r2
 801cf00:	d300      	bcc.n	801cf04 <??ATT_Build_Find_By_Type_Val_Rsp_2>
 801cf02:	b92a      	cbnz	r2, 801cf10 <??ATT_Build_Find_By_Type_Val_Rsp_3>

0801cf04 <??ATT_Build_Find_By_Type_Val_Rsp_2>:
 801cf04:	4643      	mov	r3, r8
 801cf06:	2106      	movs	r1, #6
 801cf08:	2001      	movs	r0, #1
 801cf0a:	f001 fb20 	bl	801e54e <ATT_Build_Error_Rsp>
 801cf0e:	e01d      	b.n	801cf4c <??ATT_Build_Find_By_Type_Val_Rsp_1>

0801cf10 <??ATT_Build_Find_By_Type_Val_Rsp_3>:
 801cf10:	4607      	mov	r7, r0
 801cf12:	887a      	ldrh	r2, [r7, #2]
 801cf14:	f8d8 0008 	ldr.w	r0, [r8, #8]
 801cf18:	2100      	movs	r1, #0
 801cf1a:	1d12      	adds	r2, r2, #4
 801cf1c:	b292      	uxth	r2, r2
 801cf1e:	f007 ff1a 	bl	8024d56 <ACL_PM_Resize>
 801cf22:	b108      	cbz	r0, 801cf28 <??ATT_Build_Find_By_Type_Val_Rsp_4>
 801cf24:	2095      	movs	r0, #149	; 0x95
 801cf26:	e100      	b.n	801d12a <?Subroutine3>

0801cf28 <??ATT_Build_Find_By_Type_Val_Rsp_4>:
 801cf28:	f8d8 1008 	ldr.w	r1, [r8, #8]
 801cf2c:	2007      	movs	r0, #7
 801cf2e:	2501      	movs	r5, #1
 801cf30:	7308      	strb	r0, [r1, #12]
 801cf32:	f8bd 0000 	ldrh.w	r0, [sp]
 801cf36:	f7ff ff17 	bl	801cd68 <GATT_Find_Srv_Owner_Of_Handle>
 801cf3a:	0006      	movs	r6, r0
 801cf3c:	d13e      	bne.n	801cfbc <??ATT_Build_Find_By_Type_Val_Rsp_5>

0801cf3e <??ATT_Build_Find_By_Type_Val_Rsp_6>:
 801cf3e:	f8bd 2000 	ldrh.w	r2, [sp]
 801cf42:	4643      	mov	r3, r8
 801cf44:	2106      	movs	r1, #6
 801cf46:	200a      	movs	r0, #10
 801cf48:	f001 fb01 	bl	801e54e <ATT_Build_Error_Rsp>

0801cf4c <??ATT_Build_Find_By_Type_Val_Rsp_1>:
 801cf4c:	2000      	movs	r0, #0
 801cf4e:	e0ec      	b.n	801d12a <?Subroutine3>

0801cf50 <??ATT_Build_Find_By_Type_Val_Rsp_7>:
 801cf50:	f8bd 0000 	ldrh.w	r0, [sp]
 801cf54:	4281      	cmp	r1, r0
 801cf56:	d330      	bcc.n	801cfba <??ATT_Build_Find_By_Type_Val_Rsp_8>
 801cf58:	b2a3      	uxth	r3, r4
 801cf5a:	220b      	movs	r2, #11
 801cf5c:	f106 0108 	add.w	r1, r6, #8
 801cf60:	4650      	mov	r0, sl
 801cf62:	f007 ff3d 	bl	8024de0 <ACL_PM_Cmp_Data>
 801cf66:	f8bd 1002 	ldrh.w	r1, [sp, #2]
 801cf6a:	8d72      	ldrh	r2, [r6, #42]	; 0x2a
 801cf6c:	4291      	cmp	r1, r2
 801cf6e:	d124      	bne.n	801cfba <??ATT_Build_Find_By_Type_Val_Rsp_8>
 801cf70:	2c02      	cmp	r4, #2
 801cf72:	bf18      	it	ne
 801cf74:	2c10      	cmpne	r4, #16
 801cf76:	d120      	bne.n	801cfba <??ATT_Build_Find_By_Type_Val_Rsp_8>
 801cf78:	b9f8      	cbnz	r0, 801cfba <??ATT_Build_Find_By_Type_Val_Rsp_8>
 801cf7a:	6a31      	ldr	r1, [r6, #32]
 801cf7c:	f106 0020 	add.w	r0, r6, #32
 801cf80:	4288      	cmp	r0, r1
 801cf82:	bf1a      	itte	ne
 801cf84:	6a70      	ldrne	r0, [r6, #36]	; 0x24
 801cf86:	f100 091c 	addne.w	r9, r0, #28
 801cf8a:	f106 0928 	addeq.w	r9, r6, #40	; 0x28
 801cf8e:	1d29      	adds	r1, r5, #4
 801cf90:	f106 0328 	add.w	r3, r6, #40	; 0x28
 801cf94:	2202      	movs	r2, #2
 801cf96:	b289      	uxth	r1, r1
 801cf98:	4640      	mov	r0, r8
 801cf9a:	1cad      	adds	r5, r5, #2
 801cf9c:	f007 ff2d 	bl	8024dfa <ACL_PM_Set_Data>
 801cfa0:	1d29      	adds	r1, r5, #4
 801cfa2:	464b      	mov	r3, r9
 801cfa4:	2202      	movs	r2, #2
 801cfa6:	b289      	uxth	r1, r1
 801cfa8:	4640      	mov	r0, r8
 801cfaa:	f007 ff26 	bl	8024dfa <ACL_PM_Set_Data>
 801cfae:	1cad      	adds	r5, r5, #2
 801cfb0:	e003      	b.n	801cfba <??ATT_Build_Find_By_Type_Val_Rsp_8>

0801cfb2 <??ATT_Build_Find_By_Type_Val_Rsp_9>:
 801cfb2:	9f02      	ldr	r7, [sp, #8]
 801cfb4:	f8dd a010 	ldr.w	sl, [sp, #16]
 801cfb8:	9c03      	ldr	r4, [sp, #12]

0801cfba <??ATT_Build_Find_By_Type_Val_Rsp_8>:
 801cfba:	6836      	ldr	r6, [r6, #0]

0801cfbc <??ATT_Build_Find_By_Type_Val_Rsp_5>:
 801cfbc:	f8df 0c44 	ldr.w	r0, [pc, #3140]	; 801dc04 <??DataTable4>
 801cfc0:	4286      	cmp	r6, r0
 801cfc2:	f000 80ab 	beq.w	801d11c <??ATT_Build_Find_By_Type_Val_Rsp_10>
 801cfc6:	8d31      	ldrh	r1, [r6, #40]	; 0x28
 801cfc8:	f8bd 2004 	ldrh.w	r2, [sp, #4]
 801cfcc:	428a      	cmp	r2, r1
 801cfce:	bf21      	itttt	cs
 801cfd0:	887b      	ldrhcs	r3, [r7, #2]
 801cfd2:	b2a8      	uxthcs	r0, r5
 801cfd4:	1a1b      	subcs	r3, r3, r0
 801cfd6:	2b04      	cmpcs	r3, #4
 801cfd8:	f0c0 80a0 	bcc.w	801d11c <??ATT_Build_Find_By_Type_Val_Rsp_10>
 801cfdc:	f8bd 0002 	ldrh.w	r0, [sp, #2]
 801cfe0:	f5b0 5f20 	cmp.w	r0, #10240	; 0x2800
 801cfe4:	bf1c      	itt	ne
 801cfe6:	f642 0201 	movwne	r2, #10241	; 0x2801
 801cfea:	4290      	cmpne	r0, r2
 801cfec:	d0b0      	beq.n	801cf50 <??ATT_Build_Find_By_Type_Val_Rsp_7>
 801cfee:	6a32      	ldr	r2, [r6, #32]
 801cff0:	f106 0020 	add.w	r0, r6, #32
 801cff4:	4290      	cmp	r0, r2
 801cff6:	d0e0      	beq.n	801cfba <??ATT_Build_Find_By_Type_Val_Rsp_8>
 801cff8:	9702      	str	r7, [sp, #8]
 801cffa:	f8cd a010 	str.w	sl, [sp, #16]
 801cffe:	9403      	str	r4, [sp, #12]
 801d000:	f642 0903 	movw	r9, #10243	; 0x2803
 801d004:	4614      	mov	r4, r2
 801d006:	e017      	b.n	801d038 <??ATT_Build_Find_By_Type_Val_Rsp_11>

0801d008 <??ATT_Build_Find_By_Type_Val_Rsp_12>:
 801d008:	6824      	ldr	r4, [r4, #0]
 801d00a:	6820      	ldr	r0, [r4, #0]

0801d00c <??ATT_Build_Find_By_Type_Val_Rsp_13>:
 801d00c:	4288      	cmp	r0, r1
 801d00e:	bf1c      	itt	ne
 801d010:	8900      	ldrhne	r0, [r0, #8]
 801d012:	4548      	cmpne	r0, r9
 801d014:	d1f8      	bne.n	801d008 <??ATT_Build_Find_By_Type_Val_Rsp_12>

0801d016 <??ATT_Build_Find_By_Type_Val_Rsp_14>:
 801d016:	1d29      	adds	r1, r5, #4
 801d018:	2202      	movs	r2, #2
 801d01a:	b289      	uxth	r1, r1
 801d01c:	4640      	mov	r0, r8
 801d01e:	1cad      	adds	r5, r5, #2
 801d020:	f007 feeb 	bl	8024dfa <ACL_PM_Set_Data>
 801d024:	1d29      	adds	r1, r5, #4
 801d026:	f104 031c 	add.w	r3, r4, #28
 801d02a:	2202      	movs	r2, #2
 801d02c:	b289      	uxth	r1, r1
 801d02e:	4640      	mov	r0, r8
 801d030:	f007 fee3 	bl	8024dfa <ACL_PM_Set_Data>
 801d034:	1cad      	adds	r5, r5, #2

0801d036 <??ATT_Build_Find_By_Type_Val_Rsp_15>:
 801d036:	6824      	ldr	r4, [r4, #0]

0801d038 <??ATT_Build_Find_By_Type_Val_Rsp_11>:
 801d038:	f106 0020 	add.w	r0, r6, #32
 801d03c:	4284      	cmp	r4, r0
 801d03e:	d0b8      	beq.n	801cfb2 <??ATT_Build_Find_By_Type_Val_Rsp_9>
 801d040:	8ba0      	ldrh	r0, [r4, #28]
 801d042:	f8bd 1000 	ldrh.w	r1, [sp]
 801d046:	4288      	cmp	r0, r1
 801d048:	d3f5      	bcc.n	801d036 <??ATT_Build_Find_By_Type_Val_Rsp_15>
 801d04a:	f8bd 2004 	ldrh.w	r2, [sp, #4]
 801d04e:	4282      	cmp	r2, r0
 801d050:	d364      	bcc.n	801d11c <??ATT_Build_Find_By_Type_Val_Rsp_10>
 801d052:	f104 0723 	add.w	r7, r4, #35	; 0x23
 801d056:	7838      	ldrb	r0, [r7, #0]
 801d058:	2801      	cmp	r0, #1
 801d05a:	d1ec      	bne.n	801d036 <??ATT_Build_Find_By_Type_Val_Rsp_15>
 801d05c:	9902      	ldr	r1, [sp, #8]
 801d05e:	4620      	mov	r0, r4
 801d060:	f7ff fec7 	bl	801cdf2 <GATT_Find_Attr_Index>
 801d064:	9903      	ldr	r1, [sp, #12]
 801d066:	f8d4 a018 	ldr.w	sl, [r4, #24]
 801d06a:	220b      	movs	r2, #11
 801d06c:	b28b      	uxth	r3, r1
 801d06e:	8c21      	ldrh	r1, [r4, #32]
 801d070:	4348      	muls	r0, r1
 801d072:	eb0a 0100 	add.w	r1, sl, r0
 801d076:	9804      	ldr	r0, [sp, #16]
 801d078:	f007 feb2 	bl	8024de0 <ACL_PM_Cmp_Data>
 801d07c:	4682      	mov	sl, r0
 801d07e:	9802      	ldr	r0, [sp, #8]
 801d080:	f8b0 b000 	ldrh.w	fp, [r0]
 801d084:	4658      	mov	r0, fp
 801d086:	f004 ff21 	bl	8021ecc <SMP_Get_Remote_Device>
 801d08a:	b300      	cbz	r0, 801d0ce <??ATT_Build_Find_By_Type_Val_Rsp_16>
 801d08c:	4658      	mov	r0, fp
 801d08e:	f004 ff8a 	bl	8021fa6 <SMP_Get_Link_Status>
 801d092:	4602      	mov	r2, r0
 801d094:	78b8      	ldrb	r0, [r7, #2]
 801d096:	07c3      	lsls	r3, r0, #31
 801d098:	d502      	bpl.n	801d0a0 <??ATT_Build_Find_By_Type_Val_Rsp_17>
 801d09a:	f012 0106 	ands.w	r1, r2, #6
 801d09e:	d0ca      	beq.n	801d036 <??ATT_Build_Find_By_Type_Val_Rsp_15>

0801d0a0 <??ATT_Build_Find_By_Type_Val_Rsp_17>:
 801d0a0:	0781      	lsls	r1, r0, #30
 801d0a2:	d501      	bpl.n	801d0a8 <??ATT_Build_Find_By_Type_Val_Rsp_18>
 801d0a4:	0713      	lsls	r3, r2, #28
 801d0a6:	d5c6      	bpl.n	801d036 <??ATT_Build_Find_By_Type_Val_Rsp_15>

0801d0a8 <??ATT_Build_Find_By_Type_Val_Rsp_18>:
 801d0a8:	f010 0004 	ands.w	r0, r0, #4
 801d0ac:	d001      	beq.n	801d0b2 <??ATT_Build_Find_By_Type_Val_Rsp_19>
 801d0ae:	07d1      	lsls	r1, r2, #31
 801d0b0:	d5c1      	bpl.n	801d036 <??ATT_Build_Find_By_Type_Val_Rsp_15>

0801d0b2 <??ATT_Build_Find_By_Type_Val_Rsp_19>:
 801d0b2:	b128      	cbz	r0, 801d0c0 <??ATT_Build_Find_By_Type_Val_Rsp_20>
 801d0b4:	7939      	ldrb	r1, [r7, #4]
 801d0b6:	4658      	mov	r0, fp
 801d0b8:	f004 ffc6 	bl	8022048 <SMP_Check_Encryption_KeySize>
 801d0bc:	285f      	cmp	r0, #95	; 0x5f
 801d0be:	d0ba      	beq.n	801d036 <??ATT_Build_Find_By_Type_Val_Rsp_15>

0801d0c0 <??ATT_Build_Find_By_Type_Val_Rsp_20>:
 801d0c0:	7879      	ldrb	r1, [r7, #1]
 801d0c2:	f001 0101 	and.w	r1, r1, #1
 801d0c6:	f081 0101 	eor.w	r1, r1, #1
 801d0ca:	0049      	lsls	r1, r1, #1
 801d0cc:	e008      	b.n	801d0e0 <??ATT_Build_Find_By_Type_Val_Rsp_21>

0801d0ce <??ATT_Build_Find_By_Type_Val_Rsp_16>:
 801d0ce:	78b8      	ldrb	r0, [r7, #2]
 801d0d0:	2100      	movs	r1, #0
 801d0d2:	b920      	cbnz	r0, 801d0de <??ATT_Build_Find_By_Type_Val_Rsp_22>
 801d0d4:	7878      	ldrb	r0, [r7, #1]
 801d0d6:	07c2      	lsls	r2, r0, #31
 801d0d8:	d402      	bmi.n	801d0e0 <??ATT_Build_Find_By_Type_Val_Rsp_21>
 801d0da:	2102      	movs	r1, #2
 801d0dc:	e000      	b.n	801d0e0 <??ATT_Build_Find_By_Type_Val_Rsp_21>

0801d0de <??ATT_Build_Find_By_Type_Val_Rsp_22>:
 801d0de:	210e      	movs	r1, #14

0801d0e0 <??ATT_Build_Find_By_Type_Val_Rsp_21>:
 801d0e0:	8920      	ldrh	r0, [r4, #8]
 801d0e2:	f8bd 2002 	ldrh.w	r2, [sp, #2]
 801d0e6:	4290      	cmp	r0, r2
 801d0e8:	bf08      	it	eq
 801d0ea:	2900      	cmpeq	r1, #0
 801d0ec:	d1a3      	bne.n	801d036 <??ATT_Build_Find_By_Type_Val_Rsp_15>
 801d0ee:	8be1      	ldrh	r1, [r4, #30]
 801d0f0:	9a03      	ldr	r2, [sp, #12]
 801d0f2:	4291      	cmp	r1, r2
 801d0f4:	bf08      	it	eq
 801d0f6:	f1ba 0f00 	cmpeq.w	sl, #0
 801d0fa:	d19c      	bne.n	801d036 <??ATT_Build_Find_By_Type_Val_Rsp_15>
 801d0fc:	9902      	ldr	r1, [sp, #8]
 801d0fe:	b2ab      	uxth	r3, r5
 801d100:	884a      	ldrh	r2, [r1, #2]
 801d102:	1ad2      	subs	r2, r2, r3
 801d104:	2a04      	cmp	r2, #4
 801d106:	d309      	bcc.n	801d11c <??ATT_Build_Find_By_Type_Val_Rsp_10>
 801d108:	f104 031c 	add.w	r3, r4, #28
 801d10c:	4548      	cmp	r0, r9
 801d10e:	d182      	bne.n	801d016 <??ATT_Build_Find_By_Type_Val_Rsp_14>
 801d110:	6820      	ldr	r0, [r4, #0]
 801d112:	f642 0903 	movw	r9, #10243	; 0x2803
 801d116:	f106 0120 	add.w	r1, r6, #32
 801d11a:	e777      	b.n	801d00c <??ATT_Build_Find_By_Type_Val_Rsp_13>

0801d11c <??ATT_Build_Find_By_Type_Val_Rsp_10>:
 801d11c:	b2a8      	uxth	r0, r5
 801d11e:	2802      	cmp	r0, #2
 801d120:	f4ff af0d 	bcc.w	801cf3e <??ATT_Build_Find_By_Type_Val_Rsp_6>
 801d124:	f8a8 5006 	strh.w	r5, [r8, #6]
 801d128:	e710      	b.n	801cf4c <??ATT_Build_Find_By_Type_Val_Rsp_1>

0801d12a <?Subroutine3>:
 801d12a:	b005      	add	sp, #20
 801d12c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801d130 <ATT_Build_Read_By_Type_Rsp>:
 801d130:	e92d 4ff2 	stmdb	sp!, {r1, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801d134:	4604      	mov	r4, r0
 801d136:	f5ad 7d0e 	sub.w	sp, sp, #568	; 0x238
 801d13a:	2002      	movs	r0, #2
 801d13c:	900c      	str	r0, [sp, #48]	; 0x30
 801d13e:	988e      	ldr	r0, [sp, #568]	; 0x238
 801d140:	4617      	mov	r7, r2
 801d142:	f04f 0800 	mov.w	r8, #0
 801d146:	88c1      	ldrh	r1, [r0, #6]
 801d148:	2907      	cmp	r1, #7
 801d14a:	bf18      	it	ne
 801d14c:	2915      	cmpne	r1, #21
 801d14e:	d004      	beq.n	801d15a <??ATT_Build_Read_By_Type_Rsp_0>
 801d150:	463b      	mov	r3, r7
 801d152:	2200      	movs	r2, #0
 801d154:	2108      	movs	r1, #8
 801d156:	2004      	movs	r0, #4
 801d158:	e021      	b.n	801d19e <??ATT_Build_Read_By_Type_Rsp_1>

0801d15a <??ATT_Build_Read_By_Type_Rsp_0>:
 801d15a:	988e      	ldr	r0, [sp, #568]	; 0x238
 801d15c:	f8cd 802c 	str.w	r8, [sp, #44]	; 0x2c
 801d160:	f8ad 8028 	strh.w	r8, [sp, #40]	; 0x28
 801d164:	6882      	ldr	r2, [r0, #8]
 801d166:	f10d 0302 	add.w	r3, sp, #2
 801d16a:	f102 000d 	add.w	r0, r2, #13
 801d16e:	7805      	ldrb	r5, [r0, #0]
 801d170:	f88d 5000 	strb.w	r5, [sp]
 801d174:	7845      	ldrb	r5, [r0, #1]
 801d176:	f102 000f 	add.w	r0, r2, #15
 801d17a:	f88d 5001 	strb.w	r5, [sp, #1]
 801d17e:	7805      	ldrb	r5, [r0, #0]
 801d180:	701d      	strb	r5, [r3, #0]
 801d182:	7845      	ldrb	r5, [r0, #1]
 801d184:	705d      	strb	r5, [r3, #1]
 801d186:	f8bd 0002 	ldrh.w	r0, [sp, #2]
 801d18a:	f8bd 3000 	ldrh.w	r3, [sp]
 801d18e:	4298      	cmp	r0, r3
 801d190:	d300      	bcc.n	801d194 <??ATT_Build_Read_By_Type_Rsp_2>
 801d192:	b93b      	cbnz	r3, 801d1a4 <??ATT_Build_Read_By_Type_Rsp_3>

0801d194 <??ATT_Build_Read_By_Type_Rsp_2>:
 801d194:	463b      	mov	r3, r7
 801d196:	f8bd 2000 	ldrh.w	r2, [sp]
 801d19a:	2108      	movs	r1, #8
 801d19c:	2001      	movs	r0, #1

0801d19e <??ATT_Build_Read_By_Type_Rsp_1>:
 801d19e:	f001 f9d6 	bl	801e54e <ATT_Build_Error_Rsp>
 801d1a2:	e1d2      	b.n	801d54a <?Subroutine0>

0801d1a4 <??ATT_Build_Read_By_Type_Rsp_3>:
 801d1a4:	f60f 2060 	addw	r0, pc, #2656	; 0xa60
 801d1a8:	e890 5060 	ldmia.w	r0, {r5, r6, ip, lr}
 801d1ac:	ab02      	add	r3, sp, #8
 801d1ae:	2907      	cmp	r1, #7
 801d1b0:	e883 5060 	stmia.w	r3, {r5, r6, ip, lr}
 801d1b4:	d10c      	bne.n	801d1d0 <??ATT_Build_Read_By_Type_Rsp_4>
 801d1b6:	e890 1068 	ldmia.w	r0, {r3, r5, r6, ip}
 801d1ba:	f102 0011 	add.w	r0, r2, #17
 801d1be:	a906      	add	r1, sp, #24
 801d1c0:	e881 1068 	stmia.w	r1, {r3, r5, r6, ip}
 801d1c4:	7802      	ldrb	r2, [r0, #0]
 801d1c6:	a909      	add	r1, sp, #36	; 0x24
 801d1c8:	700a      	strb	r2, [r1, #0]
 801d1ca:	7842      	ldrb	r2, [r0, #1]
 801d1cc:	704a      	strb	r2, [r1, #1]
 801d1ce:	e005      	b.n	801d1dc <??ATT_Build_Read_By_Type_Rsp_5>

0801d1d0 <??ATT_Build_Read_By_Type_Rsp_4>:
 801d1d0:	988e      	ldr	r0, [sp, #568]	; 0x238
 801d1d2:	ab06      	add	r3, sp, #24
 801d1d4:	2210      	movs	r2, #16
 801d1d6:	2109      	movs	r1, #9
 801d1d8:	f007 fe05 	bl	8024de6 <ACL_PM_Get_Data>

0801d1dc <??ATT_Build_Read_By_Type_Rsp_5>:
 801d1dc:	9401      	str	r4, [sp, #4]
 801d1de:	6861      	ldr	r1, [r4, #4]
 801d1e0:	0308      	lsls	r0, r1, #12
 801d1e2:	d411      	bmi.n	801d208 <??ATT_Build_Read_By_Type_Rsp_6>
 801d1e4:	8821      	ldrh	r1, [r4, #0]
 801d1e6:	2400      	movs	r4, #0
 801d1e8:	460a      	mov	r2, r1
 801d1ea:	f88d 2034 	strb.w	r2, [sp, #52]	; 0x34
 801d1ee:	0a09      	lsrs	r1, r1, #8
 801d1f0:	f88d 1035 	strb.w	r1, [sp, #53]	; 0x35
 801d1f4:	f8bd 6000 	ldrh.w	r6, [sp]
 801d1f8:	f8bd 5002 	ldrh.w	r5, [sp, #2]
 801d1fc:	4630      	mov	r0, r6
 801d1fe:	f7ff fdb3 	bl	801cd68 <GATT_Find_Srv_Owner_Of_Handle>
 801d202:	b108      	cbz	r0, 801d208 <??ATT_Build_Read_By_Type_Rsp_6>
 801d204:	4681      	mov	r9, r0
 801d206:	e010      	b.n	801d22a <??ATT_Build_Read_By_Type_Rsp_7>

0801d208 <??ATT_Build_Read_By_Type_Rsp_6>:
 801d208:	9801      	ldr	r0, [sp, #4]
 801d20a:	2100      	movs	r1, #0
 801d20c:	8842      	ldrh	r2, [r0, #2]
 801d20e:	68b8      	ldr	r0, [r7, #8]
 801d210:	1d12      	adds	r2, r2, #4
 801d212:	b292      	uxth	r2, r2
 801d214:	f007 fd9f 	bl	8024d56 <ACL_PM_Resize>
 801d218:	2800      	cmp	r0, #0
 801d21a:	d072      	beq.n	801d302 <??ATT_Build_Read_By_Type_Rsp_8>
 801d21c:	2095      	movs	r0, #149	; 0x95
 801d21e:	e195      	b.n	801d54c <??Subroutine0_0>

0801d220 <??ATT_Build_Read_By_Type_Rsp_9>:
 801d220:	f10b 0008 	add.w	r0, fp, #8
 801d224:	e038      	b.n	801d298 <??ATT_Build_Read_By_Type_Rsp_10>

0801d226 <??ATT_Build_Read_By_Type_Rsp_11>:
 801d226:	f8d9 9000 	ldr.w	r9, [r9]

0801d22a <??ATT_Build_Read_By_Type_Rsp_7>:
 801d22a:	f8df 09d8 	ldr.w	r0, [pc, #2520]	; 801dc04 <??DataTable4>
 801d22e:	4581      	cmp	r9, r0
 801d230:	d053      	beq.n	801d2da <??ATT_Build_Read_By_Type_Rsp_12>
 801d232:	f8b9 a028 	ldrh.w	sl, [r9, #40]	; 0x28
 801d236:	4555      	cmp	r5, sl
 801d238:	d34f      	bcc.n	801d2da <??ATT_Build_Read_By_Type_Rsp_12>
 801d23a:	45b2      	cmp	sl, r6
 801d23c:	d30f      	bcc.n	801d25e <??ATT_Build_Read_By_Type_Rsp_13>
 801d23e:	f109 002a 	add.w	r0, r9, #42	; 0x2a
 801d242:	7802      	ldrb	r2, [r0, #0]
 801d244:	a905      	add	r1, sp, #20
 801d246:	700a      	strb	r2, [r1, #0]
 801d248:	7842      	ldrb	r2, [r0, #1]
 801d24a:	a802      	add	r0, sp, #8
 801d24c:	704a      	strb	r2, [r1, #1]
 801d24e:	2210      	movs	r2, #16
 801d250:	a906      	add	r1, sp, #24
 801d252:	f013 fe75 	bl	8030f40 <memcmp>
 801d256:	2800      	cmp	r0, #0
 801d258:	d0d6      	beq.n	801d208 <??ATT_Build_Read_By_Type_Rsp_6>
 801d25a:	45aa      	cmp	sl, r5
 801d25c:	d03d      	beq.n	801d2da <??ATT_Build_Read_By_Type_Rsp_12>

0801d25e <??ATT_Build_Read_By_Type_Rsp_13>:
 801d25e:	f8d9 b020 	ldr.w	fp, [r9, #32]
 801d262:	f109 0020 	add.w	r0, r9, #32
 801d266:	4558      	cmp	r0, fp
 801d268:	d0dd      	beq.n	801d226 <??ATT_Build_Read_By_Type_Rsp_11>

0801d26a <??ATT_Build_Read_By_Type_Rsp_14>:
 801d26a:	f109 0120 	add.w	r1, r9, #32
 801d26e:	458b      	cmp	fp, r1
 801d270:	d0d9      	beq.n	801d226 <??ATT_Build_Read_By_Type_Rsp_11>
 801d272:	f8bb 001c 	ldrh.w	r0, [fp, #28]
 801d276:	42b0      	cmp	r0, r6
 801d278:	d32c      	bcc.n	801d2d4 <??ATT_Build_Read_By_Type_Rsp_15>
 801d27a:	4285      	cmp	r5, r0
 801d27c:	d3d3      	bcc.n	801d226 <??ATT_Build_Read_By_Type_Rsp_11>
 801d27e:	f10b 0a23 	add.w	sl, fp, #35	; 0x23
 801d282:	f89a 0000 	ldrb.w	r0, [sl]
 801d286:	2801      	cmp	r0, #1
 801d288:	d1ca      	bne.n	801d220 <??ATT_Build_Read_By_Type_Rsp_9>
 801d28a:	2202      	movs	r2, #2
 801d28c:	f10b 0108 	add.w	r1, fp, #8
 801d290:	a805      	add	r0, sp, #20
 801d292:	f013 fe28 	bl	8030ee6 <__aeabi_memcpy>
 801d296:	a802      	add	r0, sp, #8

0801d298 <??ATT_Build_Read_By_Type_Rsp_10>:
 801d298:	2210      	movs	r2, #16
 801d29a:	a906      	add	r1, sp, #24
 801d29c:	f013 fe50 	bl	8030f40 <memcmp>
 801d2a0:	b9c0      	cbnz	r0, 801d2d4 <??ATT_Build_Read_By_Type_Rsp_15>
 801d2a2:	f89a 0003 	ldrb.w	r0, [sl, #3]
 801d2a6:	0741      	lsls	r1, r0, #29
 801d2a8:	d514      	bpl.n	801d2d4 <??ATT_Build_Read_By_Type_Rsp_15>
 801d2aa:	b90c      	cbnz	r4, 801d2b0 <??ATT_Build_Read_By_Type_Rsp_16>
 801d2ac:	f8bb 401e 	ldrh.w	r4, [fp, #30]

0801d2b0 <??ATT_Build_Read_By_Type_Rsp_16>:
 801d2b0:	f8bb 001e 	ldrh.w	r0, [fp, #30]
 801d2b4:	42a0      	cmp	r0, r4
 801d2b6:	d1b6      	bne.n	801d226 <??ATT_Build_Read_By_Type_Rsp_11>
 801d2b8:	f10d 0036 	add.w	r0, sp, #54	; 0x36
 801d2bc:	fa1f f288 	uxth.w	r2, r8
 801d2c0:	f10b 011c 	add.w	r1, fp, #28
 801d2c4:	eb00 0342 	add.w	r3, r0, r2, lsl #1
 801d2c8:	7808      	ldrb	r0, [r1, #0]
 801d2ca:	f108 0801 	add.w	r8, r8, #1
 801d2ce:	7018      	strb	r0, [r3, #0]
 801d2d0:	7848      	ldrb	r0, [r1, #1]
 801d2d2:	7058      	strb	r0, [r3, #1]

0801d2d4 <??ATT_Build_Read_By_Type_Rsp_15>:
 801d2d4:	f8db b000 	ldr.w	fp, [fp]
 801d2d8:	e7c7      	b.n	801d26a <??ATT_Build_Read_By_Type_Rsp_14>

0801d2da <??ATT_Build_Read_By_Type_Rsp_12>:
 801d2da:	fa1f f088 	uxth.w	r0, r8
 801d2de:	2800      	cmp	r0, #0
 801d2e0:	d092      	beq.n	801d208 <??ATT_Build_Read_By_Type_Rsp_6>
 801d2e2:	9801      	ldr	r0, [sp, #4]
 801d2e4:	f10d 0236 	add.w	r2, sp, #54	; 0x36
 801d2e8:	6841      	ldr	r1, [r0, #4]
 801d2ea:	f441 2100 	orr.w	r1, r1, #524288	; 0x80000
 801d2ee:	6041      	str	r1, [r0, #4]
 801d2f0:	9b8e      	ldr	r3, [sp, #568]	; 0x238
 801d2f2:	ea4f 0148 	mov.w	r1, r8, lsl #1
 801d2f6:	b2c9      	uxtb	r1, r1
 801d2f8:	2001      	movs	r0, #1
 801d2fa:	f001 ffb1 	bl	801f260 <EVT_aci_gatt_read_multi_permit_req>
 801d2fe:	2069      	movs	r0, #105	; 0x69
 801d300:	e124      	b.n	801d54c <??Subroutine0_0>

0801d302 <??ATT_Build_Read_By_Type_Rsp_8>:
 801d302:	f8bd 0000 	ldrh.w	r0, [sp]
 801d306:	f7ff fd2f 	bl	801cd68 <GATT_Find_Srv_Owner_Of_Handle>
 801d30a:	ea5f 0900 	movs.w	r9, r0
 801d30e:	d134      	bne.n	801d37a <??ATT_Build_Read_By_Type_Rsp_17>

0801d310 <??ATT_Build_Read_By_Type_Rsp_18>:
 801d310:	f8bd 2000 	ldrh.w	r2, [sp]
 801d314:	463b      	mov	r3, r7
 801d316:	2108      	movs	r1, #8
 801d318:	200a      	movs	r0, #10
 801d31a:	f001 f918 	bl	801e54e <ATT_Build_Error_Rsp>

0801d31e <??ATT_Build_Read_By_Type_Rsp_19>:
 801d31e:	e114      	b.n	801d54a <?Subroutine0>

0801d320 <??ATT_Build_Read_By_Type_Rsp_20>:
 801d320:	b93c      	cbnz	r4, 801d332 <??ATT_Build_Read_By_Type_Rsp_21>
 801d322:	f899 002c 	ldrb.w	r0, [r9, #44]	; 0x2c
 801d326:	2801      	cmp	r0, #1
 801d328:	bf08      	it	eq
 801d32a:	2404      	moveq	r4, #4
 801d32c:	d00f      	beq.n	801d34e <??ATT_Build_Read_By_Type_Rsp_22>
 801d32e:	2412      	movs	r4, #18
 801d330:	e008      	b.n	801d344 <??ATT_Build_Read_By_Type_Rsp_23>

0801d332 <??ATT_Build_Read_By_Type_Rsp_21>:
 801d332:	2c04      	cmp	r4, #4
 801d334:	bf04      	itt	eq
 801d336:	f899 002c 	ldrbeq.w	r0, [r9, #44]	; 0x2c
 801d33a:	2801      	cmpeq	r0, #1
 801d33c:	d007      	beq.n	801d34e <??ATT_Build_Read_By_Type_Rsp_22>
 801d33e:	2c12      	cmp	r4, #18
 801d340:	f040 80f8 	bne.w	801d534 <??ATT_Build_Read_By_Type_Rsp_24>

0801d344 <??ATT_Build_Read_By_Type_Rsp_23>:
 801d344:	f899 002c 	ldrb.w	r0, [r9, #44]	; 0x2c
 801d348:	2802      	cmp	r0, #2
 801d34a:	f040 80f3 	bne.w	801d534 <??ATT_Build_Read_By_Type_Rsp_24>

0801d34e <??ATT_Build_Read_By_Type_Rsp_22>:
 801d34e:	9801      	ldr	r0, [sp, #4]
 801d350:	1d29      	adds	r1, r5, #4
 801d352:	f109 0328 	add.w	r3, r9, #40	; 0x28
 801d356:	2202      	movs	r2, #2
 801d358:	b289      	uxth	r1, r1
 801d35a:	1cad      	adds	r5, r5, #2
 801d35c:	f007 fd4d 	bl	8024dfa <ACL_PM_Set_Data>
 801d360:	9801      	ldr	r0, [sp, #4]
 801d362:	1ea2      	subs	r2, r4, #2
 801d364:	1d29      	adds	r1, r5, #4
 801d366:	1965      	adds	r5, r4, r5
 801d368:	f109 0308 	add.w	r3, r9, #8
 801d36c:	b292      	uxth	r2, r2
 801d36e:	b289      	uxth	r1, r1
 801d370:	1ead      	subs	r5, r5, #2
 801d372:	f007 fd42 	bl	8024dfa <ACL_PM_Set_Data>
 801d376:	b2ad      	uxth	r5, r5
 801d378:	e007      	b.n	801d38a <??ATT_Build_Read_By_Type_Rsp_25>

0801d37a <??ATT_Build_Read_By_Type_Rsp_17>:
 801d37a:	9e01      	ldr	r6, [sp, #4]
 801d37c:	9701      	str	r7, [sp, #4]
 801d37e:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 801d380:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 801d382:	e004      	b.n	801d38e <??ATT_Build_Read_By_Type_Rsp_26>

0801d384 <??ATT_Build_Read_By_Type_Rsp_27>:
 801d384:	f8ad 8028 	strh.w	r8, [sp, #40]	; 0x28
 801d388:	46b9      	mov	r9, r7

0801d38a <??ATT_Build_Read_By_Type_Rsp_25>:
 801d38a:	f8d9 9000 	ldr.w	r9, [r9]

0801d38e <??ATT_Build_Read_By_Type_Rsp_26>:
 801d38e:	f8df 0874 	ldr.w	r0, [pc, #2164]	; 801dc04 <??DataTable4>
 801d392:	4581      	cmp	r9, r0
 801d394:	f000 80ce 	beq.w	801d534 <??ATT_Build_Read_By_Type_Rsp_24>
 801d398:	f8bd 1002 	ldrh.w	r1, [sp, #2]
 801d39c:	f8b9 0028 	ldrh.w	r0, [r9, #40]	; 0x28
 801d3a0:	4281      	cmp	r1, r0
 801d3a2:	f0c0 80c7 	bcc.w	801d534 <??ATT_Build_Read_By_Type_Rsp_24>
 801d3a6:	8871      	ldrh	r1, [r6, #2]
 801d3a8:	1b49      	subs	r1, r1, r5
 801d3aa:	42a1      	cmp	r1, r4
 801d3ac:	f2c0 80c2 	blt.w	801d534 <??ATT_Build_Read_By_Type_Rsp_24>
 801d3b0:	f109 002a 	add.w	r0, r9, #42	; 0x2a
 801d3b4:	7802      	ldrb	r2, [r0, #0]
 801d3b6:	a905      	add	r1, sp, #20
 801d3b8:	700a      	strb	r2, [r1, #0]
 801d3ba:	7842      	ldrb	r2, [r0, #1]
 801d3bc:	a802      	add	r0, sp, #8
 801d3be:	704a      	strb	r2, [r1, #1]
 801d3c0:	2210      	movs	r2, #16
 801d3c2:	a906      	add	r1, sp, #24
 801d3c4:	f013 fdbc 	bl	8030f40 <memcmp>
 801d3c8:	2800      	cmp	r0, #0
 801d3ca:	d0a9      	beq.n	801d320 <??ATT_Build_Read_By_Type_Rsp_20>
 801d3cc:	f8d9 0020 	ldr.w	r0, [r9, #32]
 801d3d0:	f109 0120 	add.w	r1, r9, #32
 801d3d4:	4281      	cmp	r1, r0
 801d3d6:	d0d8      	beq.n	801d38a <??ATT_Build_Read_By_Type_Rsp_25>
 801d3d8:	464f      	mov	r7, r9
 801d3da:	f8bd 8028 	ldrh.w	r8, [sp, #40]	; 0x28
 801d3de:	4681      	mov	r9, r0
 801d3e0:	e03b      	b.n	801d45a <??ATT_Build_Read_By_Type_Rsp_28>

0801d3e2 <??ATT_Build_Read_By_Type_Rsp_29>:
 801d3e2:	f8b9 801e 	ldrh.w	r8, [r9, #30]
 801d3e6:	f1b8 0ffe 	cmp.w	r8, #254	; 0xfe
 801d3ea:	bf3a      	itte	cc
 801d3ec:	f108 0402 	addcc.w	r4, r8, #2
 801d3f0:	b2e4      	uxtbcc	r4, r4
 801d3f2:	24ff      	movcs	r4, #255	; 0xff
 801d3f4:	8871      	ldrh	r1, [r6, #2]
 801d3f6:	1e8a      	subs	r2, r1, #2
 801d3f8:	42a2      	cmp	r2, r4
 801d3fa:	bf3c      	itt	cc
 801d3fc:	1e8c      	subcc	r4, r1, #2
 801d3fe:	b2e4      	uxtbcc	r4, r4

0801d400 <??ATT_Build_Read_By_Type_Rsp_30>:
 801d400:	8871      	ldrh	r1, [r6, #2]
 801d402:	1b49      	subs	r1, r1, r5
 801d404:	42a1      	cmp	r1, r4
 801d406:	f2c0 8095 	blt.w	801d534 <??ATT_Build_Read_By_Type_Rsp_24>
 801d40a:	2800      	cmp	r0, #0
 801d40c:	bf04      	itt	eq
 801d40e:	f8b9 001e 	ldrheq.w	r0, [r9, #30]
 801d412:	4540      	cmpeq	r0, r8
 801d414:	f040 808e 	bne.w	801d534 <??ATT_Build_Read_By_Type_Rsp_24>
 801d418:	9801      	ldr	r0, [sp, #4]
 801d41a:	1d29      	adds	r1, r5, #4
 801d41c:	f109 031c 	add.w	r3, r9, #28
 801d420:	2202      	movs	r2, #2
 801d422:	b289      	uxth	r1, r1
 801d424:	f007 fce9 	bl	8024dfa <ACL_PM_Set_Data>
 801d428:	4631      	mov	r1, r6
 801d42a:	4648      	mov	r0, r9
 801d42c:	f7ff fce1 	bl	801cdf2 <GATT_Find_Attr_Index>
 801d430:	f8b9 2020 	ldrh.w	r2, [r9, #32]
 801d434:	f8d9 1018 	ldr.w	r1, [r9, #24]
 801d438:	4350      	muls	r0, r2
 801d43a:	180b      	adds	r3, r1, r0
 801d43c:	9801      	ldr	r0, [sp, #4]
 801d43e:	1ea2      	subs	r2, r4, #2
 801d440:	1da9      	adds	r1, r5, #6
 801d442:	b292      	uxth	r2, r2
 801d444:	b289      	uxth	r1, r1
 801d446:	f007 fcd8 	bl	8024dfa <ACL_PM_Set_Data>
 801d44a:	8870      	ldrh	r0, [r6, #2]
 801d44c:	1965      	adds	r5, r4, r5
 801d44e:	b2ad      	uxth	r5, r5
 801d450:	1b40      	subs	r0, r0, r5
 801d452:	42a0      	cmp	r0, r4
 801d454:	db6e      	blt.n	801d534 <??ATT_Build_Read_By_Type_Rsp_24>

0801d456 <??ATT_Build_Read_By_Type_Rsp_31>:
 801d456:	f8d9 9000 	ldr.w	r9, [r9]

0801d45a <??ATT_Build_Read_By_Type_Rsp_28>:
 801d45a:	f107 0020 	add.w	r0, r7, #32
 801d45e:	4581      	cmp	r9, r0
 801d460:	d090      	beq.n	801d384 <??ATT_Build_Read_By_Type_Rsp_27>
 801d462:	f8b9 001c 	ldrh.w	r0, [r9, #28]
 801d466:	f8bd 1000 	ldrh.w	r1, [sp]
 801d46a:	4288      	cmp	r0, r1
 801d46c:	d3f3      	bcc.n	801d456 <??ATT_Build_Read_By_Type_Rsp_31>
 801d46e:	f8bd 2002 	ldrh.w	r2, [sp, #2]
 801d472:	4282      	cmp	r2, r0
 801d474:	d35e      	bcc.n	801d534 <??ATT_Build_Read_By_Type_Rsp_24>
 801d476:	f109 0a23 	add.w	sl, r9, #35	; 0x23
 801d47a:	f89a 0000 	ldrb.w	r0, [sl]
 801d47e:	2801      	cmp	r0, #1
 801d480:	d107      	bne.n	801d492 <??ATT_Build_Read_By_Type_Rsp_32>
 801d482:	2202      	movs	r2, #2
 801d484:	f109 0108 	add.w	r1, r9, #8
 801d488:	a805      	add	r0, sp, #20
 801d48a:	f013 fd2c 	bl	8030ee6 <__aeabi_memcpy>
 801d48e:	a802      	add	r0, sp, #8
 801d490:	e001      	b.n	801d496 <??ATT_Build_Read_By_Type_Rsp_33>

0801d492 <??ATT_Build_Read_By_Type_Rsp_32>:
 801d492:	f109 0008 	add.w	r0, r9, #8

0801d496 <??ATT_Build_Read_By_Type_Rsp_33>:
 801d496:	2210      	movs	r2, #16
 801d498:	a906      	add	r1, sp, #24
 801d49a:	f013 fd51 	bl	8030f40 <memcmp>
 801d49e:	2800      	cmp	r0, #0
 801d4a0:	d1d9      	bne.n	801d456 <??ATT_Build_Read_By_Type_Rsp_31>
 801d4a2:	f8b6 b000 	ldrh.w	fp, [r6]
 801d4a6:	4658      	mov	r0, fp
 801d4a8:	f004 fd10 	bl	8021ecc <SMP_Get_Remote_Device>
 801d4ac:	b358      	cbz	r0, 801d506 <??ATT_Build_Read_By_Type_Rsp_34>
 801d4ae:	4658      	mov	r0, fp
 801d4b0:	f004 fd79 	bl	8021fa6 <SMP_Get_Link_Status>
 801d4b4:	4602      	mov	r2, r0
 801d4b6:	f89a 0002 	ldrb.w	r0, [sl, #2]
 801d4ba:	07c3      	lsls	r3, r0, #31
 801d4bc:	d502      	bpl.n	801d4c4 <??ATT_Build_Read_By_Type_Rsp_35>
 801d4be:	f012 0106 	ands.w	r1, r2, #6
 801d4c2:	d018      	beq.n	801d4f6 <??ATT_Build_Read_By_Type_Rsp_36>

0801d4c4 <??ATT_Build_Read_By_Type_Rsp_35>:
 801d4c4:	0781      	lsls	r1, r0, #30
 801d4c6:	d501      	bpl.n	801d4cc <??ATT_Build_Read_By_Type_Rsp_37>
 801d4c8:	0713      	lsls	r3, r2, #28
 801d4ca:	d516      	bpl.n	801d4fa <??ATT_Build_Read_By_Type_Rsp_38>

0801d4cc <??ATT_Build_Read_By_Type_Rsp_37>:
 801d4cc:	f010 0004 	ands.w	r0, r0, #4
 801d4d0:	d001      	beq.n	801d4d6 <??ATT_Build_Read_By_Type_Rsp_39>
 801d4d2:	07d1      	lsls	r1, r2, #31
 801d4d4:	d513      	bpl.n	801d4fe <??ATT_Build_Read_By_Type_Rsp_40>

0801d4d6 <??ATT_Build_Read_By_Type_Rsp_39>:
 801d4d6:	b130      	cbz	r0, 801d4e6 <??ATT_Build_Read_By_Type_Rsp_41>
 801d4d8:	f89a 1004 	ldrb.w	r1, [sl, #4]
 801d4dc:	4658      	mov	r0, fp
 801d4de:	f004 fdb3 	bl	8022048 <SMP_Check_Encryption_KeySize>
 801d4e2:	285f      	cmp	r0, #95	; 0x5f
 801d4e4:	d00d      	beq.n	801d502 <??ATT_Build_Read_By_Type_Rsp_42>

0801d4e6 <??ATT_Build_Read_By_Type_Rsp_41>:
 801d4e6:	f89a 0001 	ldrb.w	r0, [sl, #1]
 801d4ea:	f000 0001 	and.w	r0, r0, #1
 801d4ee:	f080 0001 	eor.w	r0, r0, #1
 801d4f2:	0040      	lsls	r0, r0, #1
 801d4f4:	e011      	b.n	801d51a <??ATT_Build_Read_By_Type_Rsp_43>

0801d4f6 <??ATT_Build_Read_By_Type_Rsp_36>:
 801d4f6:	2005      	movs	r0, #5
 801d4f8:	e00f      	b.n	801d51a <??ATT_Build_Read_By_Type_Rsp_43>

0801d4fa <??ATT_Build_Read_By_Type_Rsp_38>:
 801d4fa:	2008      	movs	r0, #8
 801d4fc:	e00d      	b.n	801d51a <??ATT_Build_Read_By_Type_Rsp_43>

0801d4fe <??ATT_Build_Read_By_Type_Rsp_40>:
 801d4fe:	200f      	movs	r0, #15
 801d500:	e00b      	b.n	801d51a <??ATT_Build_Read_By_Type_Rsp_43>

0801d502 <??ATT_Build_Read_By_Type_Rsp_42>:
 801d502:	200c      	movs	r0, #12
 801d504:	e009      	b.n	801d51a <??ATT_Build_Read_By_Type_Rsp_43>

0801d506 <??ATT_Build_Read_By_Type_Rsp_34>:
 801d506:	f89a 1002 	ldrb.w	r1, [sl, #2]
 801d50a:	b929      	cbnz	r1, 801d518 <??ATT_Build_Read_By_Type_Rsp_44>
 801d50c:	f89a 1001 	ldrb.w	r1, [sl, #1]
 801d510:	07ca      	lsls	r2, r1, #31
 801d512:	d402      	bmi.n	801d51a <??ATT_Build_Read_By_Type_Rsp_43>
 801d514:	2002      	movs	r0, #2
 801d516:	e000      	b.n	801d51a <??ATT_Build_Read_By_Type_Rsp_43>

0801d518 <??ATT_Build_Read_By_Type_Rsp_44>:
 801d518:	200e      	movs	r0, #14

0801d51a <??ATT_Build_Read_By_Type_Rsp_43>:
 801d51a:	2c00      	cmp	r4, #0
 801d51c:	f47f af70 	bne.w	801d400 <??ATT_Build_Read_By_Type_Rsp_30>
 801d520:	2800      	cmp	r0, #0
 801d522:	f43f af5e 	beq.w	801d3e2 <??ATT_Build_Read_By_Type_Rsp_29>
 801d526:	9b01      	ldr	r3, [sp, #4]
 801d528:	f8b9 201c 	ldrh.w	r2, [r9, #28]
 801d52c:	2108      	movs	r1, #8
 801d52e:	f001 f80e 	bl	801e54e <ATT_Build_Error_Rsp>
 801d532:	e6f4      	b.n	801d31e <??ATT_Build_Read_By_Type_Rsp_19>

0801d534 <??ATT_Build_Read_By_Type_Rsp_24>:
 801d534:	9f01      	ldr	r7, [sp, #4]
 801d536:	2d02      	cmp	r5, #2
 801d538:	f67f aeea 	bls.w	801d310 <??ATT_Build_Read_By_Type_Rsp_18>
 801d53c:	68b9      	ldr	r1, [r7, #8]
 801d53e:	2009      	movs	r0, #9
 801d540:	7308      	strb	r0, [r1, #12]
 801d542:	68b8      	ldr	r0, [r7, #8]
 801d544:	7344      	strb	r4, [r0, #13]
 801d546:	80fd      	strh	r5, [r7, #6]
 801d548:	e6e9      	b.n	801d31e <??ATT_Build_Read_By_Type_Rsp_19>

0801d54a <?Subroutine0>:
 801d54a:	2000      	movs	r0, #0

0801d54c <??Subroutine0_0>:
 801d54c:	f50d 7d0f 	add.w	sp, sp, #572	; 0x23c
 801d550:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801d554 <ATT_Build_Read_Rsp>:
 801d554:	b57c      	push	{r2, r3, r4, r5, r6, lr}
 801d556:	4605      	mov	r5, r0
 801d558:	460e      	mov	r6, r1
 801d55a:	88f0      	ldrh	r0, [r6, #6]
 801d55c:	4614      	mov	r4, r2
 801d55e:	2803      	cmp	r0, #3
 801d560:	d006      	beq.n	801d570 <??ATT_Build_Read_Rsp_0>
 801d562:	4623      	mov	r3, r4
 801d564:	2200      	movs	r2, #0
 801d566:	210a      	movs	r1, #10
 801d568:	2004      	movs	r0, #4
 801d56a:	f000 fff0 	bl	801e54e <ATT_Build_Error_Rsp>
 801d56e:	e07e      	b.n	801d66e <??ATT_Build_Read_Rsp_1>

0801d570 <??ATT_Build_Read_Rsp_0>:
 801d570:	68b0      	ldr	r0, [r6, #8]
 801d572:	f100 010d 	add.w	r1, r0, #13
 801d576:	7808      	ldrb	r0, [r1, #0]
 801d578:	f88d 0000 	strb.w	r0, [sp]
 801d57c:	7848      	ldrb	r0, [r1, #1]
 801d57e:	f88d 0001 	strb.w	r0, [sp, #1]
 801d582:	f8bd 0000 	ldrh.w	r0, [sp]
 801d586:	f7ff fbef 	bl	801cd68 <GATT_Find_Srv_Owner_Of_Handle>
 801d58a:	2800      	cmp	r0, #0
 801d58c:	d068      	beq.n	801d660 <??ATT_Build_Read_Rsp_2>
 801d58e:	f100 0128 	add.w	r1, r0, #40	; 0x28
 801d592:	880a      	ldrh	r2, [r1, #0]
 801d594:	f8bd 3000 	ldrh.w	r3, [sp]
 801d598:	429a      	cmp	r2, r3
 801d59a:	d115      	bne.n	801d5c8 <??ATT_Build_Read_Rsp_3>
 801d59c:	68a3      	ldr	r3, [r4, #8]
 801d59e:	220b      	movs	r2, #11
 801d5a0:	731a      	strb	r2, [r3, #12]
 801d5a2:	7909      	ldrb	r1, [r1, #4]
 801d5a4:	f100 0308 	add.w	r3, r0, #8
 801d5a8:	2901      	cmp	r1, #1
 801d5aa:	d106      	bne.n	801d5ba <??ATT_Build_Read_Rsp_4>
 801d5ac:	2202      	movs	r2, #2
 801d5ae:	2105      	movs	r1, #5
 801d5b0:	4620      	mov	r0, r4
 801d5b2:	f007 fc22 	bl	8024dfa <ACL_PM_Set_Data>
 801d5b6:	2503      	movs	r5, #3
 801d5b8:	e050      	b.n	801d65c <??ATT_Build_Read_Rsp_5>

0801d5ba <??ATT_Build_Read_Rsp_4>:
 801d5ba:	2210      	movs	r2, #16
 801d5bc:	2105      	movs	r1, #5
 801d5be:	4620      	mov	r0, r4
 801d5c0:	f007 fc1b 	bl	8024dfa <ACL_PM_Set_Data>
 801d5c4:	2511      	movs	r5, #17
 801d5c6:	e049      	b.n	801d65c <??ATT_Build_Read_Rsp_5>

0801d5c8 <??ATT_Build_Read_Rsp_3>:
 801d5c8:	4601      	mov	r1, r0
 801d5ca:	aa01      	add	r2, sp, #4
 801d5cc:	4618      	mov	r0, r3
 801d5ce:	f7ff fbbd 	bl	801cd4c <GATT_Search_Handle>
 801d5d2:	2800      	cmp	r0, #0
 801d5d4:	d144      	bne.n	801d660 <??ATT_Build_Read_Rsp_2>
 801d5d6:	9901      	ldr	r1, [sp, #4]
 801d5d8:	8828      	ldrh	r0, [r5, #0]
 801d5da:	2201      	movs	r2, #1
 801d5dc:	f000 fe25 	bl	801e22a <ATT_Check_Perms>
 801d5e0:	0001      	movs	r1, r0
 801d5e2:	d006      	beq.n	801d5f2 <??ATT_Build_Read_Rsp_6>
 801d5e4:	f8bd 2000 	ldrh.w	r2, [sp]
 801d5e8:	4623      	mov	r3, r4
 801d5ea:	210a      	movs	r1, #10
 801d5ec:	f000 ffaf 	bl	801e54e <ATT_Build_Error_Rsp>
 801d5f0:	e03d      	b.n	801d66e <??ATT_Build_Read_Rsp_1>

0801d5f2 <??ATT_Build_Read_Rsp_6>:
 801d5f2:	9801      	ldr	r0, [sp, #4]
 801d5f4:	301c      	adds	r0, #28
 801d5f6:	7a81      	ldrb	r1, [r0, #10]
 801d5f8:	074a      	lsls	r2, r1, #29
 801d5fa:	d509      	bpl.n	801d610 <??ATT_Build_Read_Rsp_7>
 801d5fc:	6869      	ldr	r1, [r5, #4]
 801d5fe:	030a      	lsls	r2, r1, #12
 801d600:	d406      	bmi.n	801d610 <??ATT_Build_Read_Rsp_7>
 801d602:	f441 2100 	orr.w	r1, r1, #524288	; 0x80000
 801d606:	6069      	str	r1, [r5, #4]
 801d608:	8801      	ldrh	r1, [r0, #0]
 801d60a:	4633      	mov	r3, r6
 801d60c:	2200      	movs	r2, #0
 801d60e:	e0d1      	b.n	801d7b4 <?Subroutine4>

0801d610 <??ATT_Build_Read_Rsp_7>:
 801d610:	886a      	ldrh	r2, [r5, #2]
 801d612:	68a0      	ldr	r0, [r4, #8]
 801d614:	2100      	movs	r1, #0
 801d616:	1d12      	adds	r2, r2, #4
 801d618:	b292      	uxth	r2, r2
 801d61a:	f007 fb9c 	bl	8024d56 <ACL_PM_Resize>
 801d61e:	b108      	cbz	r0, 801d624 <??ATT_Build_Read_Rsp_8>
 801d620:	2095      	movs	r0, #149	; 0x95
 801d622:	bd76      	pop	{r1, r2, r4, r5, r6, pc}

0801d624 <??ATT_Build_Read_Rsp_8>:
 801d624:	68a1      	ldr	r1, [r4, #8]
 801d626:	200b      	movs	r0, #11
 801d628:	7308      	strb	r0, [r1, #12]
 801d62a:	9801      	ldr	r0, [sp, #4]
 801d62c:	4629      	mov	r1, r5
 801d62e:	f7ff fbe0 	bl	801cdf2 <GATT_Find_Attr_Index>
 801d632:	9901      	ldr	r1, [sp, #4]
 801d634:	886a      	ldrh	r2, [r5, #2]
 801d636:	8bc9      	ldrh	r1, [r1, #30]
 801d638:	1e55      	subs	r5, r2, #1
 801d63a:	b2ad      	uxth	r5, r5
 801d63c:	428d      	cmp	r5, r1
 801d63e:	bf88      	it	hi
 801d640:	460d      	movhi	r5, r1
 801d642:	9901      	ldr	r1, [sp, #4]
 801d644:	698a      	ldr	r2, [r1, #24]
 801d646:	8c09      	ldrh	r1, [r1, #32]
 801d648:	4348      	muls	r0, r1
 801d64a:	1813      	adds	r3, r2, r0
 801d64c:	462a      	mov	r2, r5
 801d64e:	2105      	movs	r1, #5
 801d650:	4620      	mov	r0, r4
 801d652:	f007 fbd2 	bl	8024dfa <ACL_PM_Set_Data>
 801d656:	1c6d      	adds	r5, r5, #1
 801d658:	b2a8      	uxth	r0, r5
 801d65a:	b108      	cbz	r0, 801d660 <??ATT_Build_Read_Rsp_2>

0801d65c <??ATT_Build_Read_Rsp_5>:
 801d65c:	80e5      	strh	r5, [r4, #6]
 801d65e:	e006      	b.n	801d66e <??ATT_Build_Read_Rsp_1>

0801d660 <??ATT_Build_Read_Rsp_2>:
 801d660:	f8bd 2000 	ldrh.w	r2, [sp]
 801d664:	4623      	mov	r3, r4
 801d666:	210a      	movs	r1, #10
 801d668:	2001      	movs	r0, #1
 801d66a:	f000 ff70 	bl	801e54e <ATT_Build_Error_Rsp>

0801d66e <??ATT_Build_Read_Rsp_1>:
 801d66e:	2000      	movs	r0, #0
 801d670:	bd76      	pop	{r1, r2, r4, r5, r6, pc}

0801d672 <ATT_Build_Read_Blob_Rsp>:
 801d672:	b57c      	push	{r2, r3, r4, r5, r6, lr}
 801d674:	4605      	mov	r5, r0
 801d676:	460e      	mov	r6, r1
 801d678:	88f0      	ldrh	r0, [r6, #6]
 801d67a:	4614      	mov	r4, r2
 801d67c:	2805      	cmp	r0, #5
 801d67e:	d006      	beq.n	801d68e <??ATT_Build_Read_Blob_Rsp_0>
 801d680:	4623      	mov	r3, r4
 801d682:	2200      	movs	r2, #0
 801d684:	210c      	movs	r1, #12
 801d686:	2004      	movs	r0, #4
 801d688:	f000 ff61 	bl	801e54e <ATT_Build_Error_Rsp>
 801d68c:	e090      	b.n	801d7b0 <??ATT_Build_Read_Blob_Rsp_1>

0801d68e <??ATT_Build_Read_Blob_Rsp_0>:
 801d68e:	68b0      	ldr	r0, [r6, #8]
 801d690:	f100 010d 	add.w	r1, r0, #13
 801d694:	780b      	ldrb	r3, [r1, #0]
 801d696:	f88d 3000 	strb.w	r3, [sp]
 801d69a:	784b      	ldrb	r3, [r1, #1]
 801d69c:	f10d 0102 	add.w	r1, sp, #2
 801d6a0:	f88d 3001 	strb.w	r3, [sp, #1]
 801d6a4:	f810 2f0f 	ldrb.w	r2, [r0, #15]!
 801d6a8:	700a      	strb	r2, [r1, #0]
 801d6aa:	7842      	ldrb	r2, [r0, #1]
 801d6ac:	f8bd 0000 	ldrh.w	r0, [sp]
 801d6b0:	704a      	strb	r2, [r1, #1]
 801d6b2:	f7ff fb59 	bl	801cd68 <GATT_Find_Srv_Owner_Of_Handle>
 801d6b6:	2800      	cmp	r0, #0
 801d6b8:	d073      	beq.n	801d7a2 <??ATT_Build_Read_Blob_Rsp_2>
 801d6ba:	8d01      	ldrh	r1, [r0, #40]	; 0x28
 801d6bc:	f8bd 2000 	ldrh.w	r2, [sp]
 801d6c0:	4291      	cmp	r1, r2
 801d6c2:	d01b      	beq.n	801d6fc <??ATT_Build_Read_Blob_Rsp_3>
 801d6c4:	4601      	mov	r1, r0
 801d6c6:	f8bd 0000 	ldrh.w	r0, [sp]
 801d6ca:	aa01      	add	r2, sp, #4
 801d6cc:	f7ff fb3e 	bl	801cd4c <GATT_Search_Handle>
 801d6d0:	2800      	cmp	r0, #0
 801d6d2:	d166      	bne.n	801d7a2 <??ATT_Build_Read_Blob_Rsp_2>
 801d6d4:	9901      	ldr	r1, [sp, #4]
 801d6d6:	8828      	ldrh	r0, [r5, #0]
 801d6d8:	2201      	movs	r2, #1
 801d6da:	f000 fda6 	bl	801e22a <ATT_Check_Perms>
 801d6de:	0001      	movs	r1, r0
 801d6e0:	d006      	beq.n	801d6f0 <??ATT_Build_Read_Blob_Rsp_4>
 801d6e2:	f8bd 2000 	ldrh.w	r2, [sp]
 801d6e6:	4623      	mov	r3, r4
 801d6e8:	210c      	movs	r1, #12
 801d6ea:	f000 ff30 	bl	801e54e <ATT_Build_Error_Rsp>
 801d6ee:	e05f      	b.n	801d7b0 <??ATT_Build_Read_Blob_Rsp_1>

0801d6f0 <??ATT_Build_Read_Blob_Rsp_4>:
 801d6f0:	9801      	ldr	r0, [sp, #4]
 801d6f2:	886a      	ldrh	r2, [r5, #2]
 801d6f4:	8bc0      	ldrh	r0, [r0, #30]
 801d6f6:	1ed1      	subs	r1, r2, #3
 801d6f8:	4281      	cmp	r1, r0
 801d6fa:	d307      	bcc.n	801d70c <??ATT_Build_Read_Blob_Rsp_5>

0801d6fc <??ATT_Build_Read_Blob_Rsp_3>:
 801d6fc:	f8bd 2000 	ldrh.w	r2, [sp]
 801d700:	4623      	mov	r3, r4
 801d702:	210c      	movs	r1, #12
 801d704:	200b      	movs	r0, #11
 801d706:	f000 ff22 	bl	801e54e <ATT_Build_Error_Rsp>
 801d70a:	e051      	b.n	801d7b0 <??ATT_Build_Read_Blob_Rsp_1>

0801d70c <??ATT_Build_Read_Blob_Rsp_5>:
 801d70c:	f8bd 1002 	ldrh.w	r1, [sp, #2]
 801d710:	4288      	cmp	r0, r1
 801d712:	d207      	bcs.n	801d724 <??ATT_Build_Read_Blob_Rsp_6>
 801d714:	f8bd 2000 	ldrh.w	r2, [sp]
 801d718:	4623      	mov	r3, r4
 801d71a:	210c      	movs	r1, #12
 801d71c:	2007      	movs	r0, #7
 801d71e:	f000 ff16 	bl	801e54e <ATT_Build_Error_Rsp>
 801d722:	e045      	b.n	801d7b0 <??ATT_Build_Read_Blob_Rsp_1>

0801d724 <??ATT_Build_Read_Blob_Rsp_6>:
 801d724:	9801      	ldr	r0, [sp, #4]
 801d726:	f890 1026 	ldrb.w	r1, [r0, #38]	; 0x26
 801d72a:	0748      	lsls	r0, r1, #29
 801d72c:	d50b      	bpl.n	801d746 <??ATT_Build_Read_Blob_Rsp_7>
 801d72e:	6868      	ldr	r0, [r5, #4]
 801d730:	0301      	lsls	r1, r0, #12
 801d732:	d408      	bmi.n	801d746 <??ATT_Build_Read_Blob_Rsp_7>
 801d734:	f440 2000 	orr.w	r0, r0, #524288	; 0x80000
 801d738:	6068      	str	r0, [r5, #4]
 801d73a:	9801      	ldr	r0, [sp, #4]
 801d73c:	f8bd 2002 	ldrh.w	r2, [sp, #2]
 801d740:	4633      	mov	r3, r6
 801d742:	8b81      	ldrh	r1, [r0, #28]
 801d744:	e036      	b.n	801d7b4 <?Subroutine4>

0801d746 <??ATT_Build_Read_Blob_Rsp_7>:
 801d746:	68a0      	ldr	r0, [r4, #8]
 801d748:	1d12      	adds	r2, r2, #4
 801d74a:	b292      	uxth	r2, r2
 801d74c:	2100      	movs	r1, #0
 801d74e:	f007 fb02 	bl	8024d56 <ACL_PM_Resize>
 801d752:	b108      	cbz	r0, 801d758 <??ATT_Build_Read_Blob_Rsp_8>
 801d754:	2095      	movs	r0, #149	; 0x95
 801d756:	bd76      	pop	{r1, r2, r4, r5, r6, pc}

0801d758 <??ATT_Build_Read_Blob_Rsp_8>:
 801d758:	68a1      	ldr	r1, [r4, #8]
 801d75a:	200d      	movs	r0, #13
 801d75c:	7308      	strb	r0, [r1, #12]
 801d75e:	9801      	ldr	r0, [sp, #4]
 801d760:	4629      	mov	r1, r5
 801d762:	f7ff fb46 	bl	801cdf2 <GATT_Find_Attr_Index>
 801d766:	9a01      	ldr	r2, [sp, #4]
 801d768:	8869      	ldrh	r1, [r5, #2]
 801d76a:	f8bd 5002 	ldrh.w	r5, [sp, #2]
 801d76e:	8bd3      	ldrh	r3, [r2, #30]
 801d770:	1e49      	subs	r1, r1, #1
 801d772:	b289      	uxth	r1, r1
 801d774:	1b5d      	subs	r5, r3, r5
 801d776:	b2ad      	uxth	r5, r5
 801d778:	428d      	cmp	r5, r1
 801d77a:	bf88      	it	hi
 801d77c:	460d      	movhi	r5, r1
 801d77e:	4611      	mov	r1, r2
 801d780:	698a      	ldr	r2, [r1, #24]
 801d782:	8c09      	ldrh	r1, [r1, #32]
 801d784:	4348      	muls	r0, r1
 801d786:	4410      	add	r0, r2
 801d788:	f8bd 2002 	ldrh.w	r2, [sp, #2]
 801d78c:	2105      	movs	r1, #5
 801d78e:	1883      	adds	r3, r0, r2
 801d790:	462a      	mov	r2, r5
 801d792:	4620      	mov	r0, r4
 801d794:	f007 fb31 	bl	8024dfa <ACL_PM_Set_Data>
 801d798:	1c6d      	adds	r5, r5, #1
 801d79a:	b2a8      	uxth	r0, r5
 801d79c:	b108      	cbz	r0, 801d7a2 <??ATT_Build_Read_Blob_Rsp_2>
 801d79e:	80e5      	strh	r5, [r4, #6]
 801d7a0:	e006      	b.n	801d7b0 <??ATT_Build_Read_Blob_Rsp_1>

0801d7a2 <??ATT_Build_Read_Blob_Rsp_2>:
 801d7a2:	f8bd 2000 	ldrh.w	r2, [sp]
 801d7a6:	4623      	mov	r3, r4
 801d7a8:	210c      	movs	r1, #12
 801d7aa:	2001      	movs	r0, #1
 801d7ac:	f000 fecf 	bl	801e54e <ATT_Build_Error_Rsp>

0801d7b0 <??ATT_Build_Read_Blob_Rsp_1>:
 801d7b0:	2000      	movs	r0, #0
 801d7b2:	bd76      	pop	{r1, r2, r4, r5, r6, pc}

0801d7b4 <?Subroutine4>:
 801d7b4:	2001      	movs	r0, #1
 801d7b6:	f001 fd50 	bl	801f25a <EVT_aci_gatt_read_permit_req>
 801d7ba:	2069      	movs	r0, #105	; 0x69
 801d7bc:	bd76      	pop	{r1, r2, r4, r5, r6, pc}

0801d7be <ATT_Build_Read_Multi_Rsp>:
 801d7be:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801d7c2:	f5ad 7d03 	sub.w	sp, sp, #524	; 0x20c
 801d7c6:	4606      	mov	r6, r0
 801d7c8:	468a      	mov	sl, r1
 801d7ca:	f8ba 0006 	ldrh.w	r0, [sl, #6]
 801d7ce:	2400      	movs	r4, #0
 801d7d0:	4690      	mov	r8, r2
 801d7d2:	1e41      	subs	r1, r0, #1
 801d7d4:	2904      	cmp	r1, #4
 801d7d6:	d301      	bcc.n	801d7dc <??ATT_Build_Read_Multi_Rsp_0>
 801d7d8:	07cb      	lsls	r3, r1, #31
 801d7da:	d506      	bpl.n	801d7ea <??ATT_Build_Read_Multi_Rsp_1>

0801d7dc <??ATT_Build_Read_Multi_Rsp_0>:
 801d7dc:	4643      	mov	r3, r8
 801d7de:	2200      	movs	r2, #0
 801d7e0:	210e      	movs	r1, #14
 801d7e2:	2004      	movs	r0, #4
 801d7e4:	f000 feb3 	bl	801e54e <ATT_Build_Error_Rsp>
 801d7e8:	e121      	b.n	801da2e <??ATT_Build_Read_Multi_Rsp_28>

0801d7ea <??ATT_Build_Read_Multi_Rsp_1>:
 801d7ea:	6871      	ldr	r1, [r6, #4]
 801d7ec:	030a      	lsls	r2, r1, #12
 801d7ee:	d448      	bmi.n	801d882 <??ATT_Build_Read_Multi_Rsp_2>
 801d7f0:	f1a0 0901 	sub.w	r9, r0, #1
 801d7f4:	2500      	movs	r5, #0
 801d7f6:	fa1f f989 	uxth.w	r9, r9
 801d7fa:	2701      	movs	r7, #1
 801d7fc:	e030      	b.n	801d860 <??ATT_Build_Read_Multi_Rsp_3>

0801d7fe <??ATT_Build_Read_Multi_Rsp_4>:
 801d7fe:	f8da 0008 	ldr.w	r0, [sl, #8]
 801d802:	f10d 0202 	add.w	r2, sp, #2
 801d806:	19c0      	adds	r0, r0, r7
 801d808:	f100 010c 	add.w	r1, r0, #12
 801d80c:	7808      	ldrb	r0, [r1, #0]
 801d80e:	7010      	strb	r0, [r2, #0]
 801d810:	7848      	ldrb	r0, [r1, #1]
 801d812:	7050      	strb	r0, [r2, #1]
 801d814:	f8bd 0002 	ldrh.w	r0, [sp, #2]
 801d818:	f7ff faa6 	bl	801cd68 <GATT_Find_Srv_Owner_Of_Handle>
 801d81c:	b388      	cbz	r0, 801d882 <??ATT_Build_Read_Multi_Rsp_2>
 801d81e:	8d01      	ldrh	r1, [r0, #40]	; 0x28
 801d820:	f8bd 2002 	ldrh.w	r2, [sp, #2]
 801d824:	4291      	cmp	r1, r2
 801d826:	d019      	beq.n	801d85c <??ATT_Build_Read_Multi_Rsp_5>
 801d828:	4601      	mov	r1, r0
 801d82a:	f8bd 0002 	ldrh.w	r0, [sp, #2]
 801d82e:	aa02      	add	r2, sp, #8
 801d830:	f7ff fa8c 	bl	801cd4c <GATT_Search_Handle>
 801d834:	b990      	cbnz	r0, 801d85c <??ATT_Build_Read_Multi_Rsp_5>
 801d836:	9802      	ldr	r0, [sp, #8]
 801d838:	f890 1026 	ldrb.w	r1, [r0, #38]	; 0x26
 801d83c:	0748      	lsls	r0, r1, #29
 801d83e:	d50d      	bpl.n	801d85c <??ATT_Build_Read_Multi_Rsp_5>
 801d840:	9802      	ldr	r0, [sp, #8]
 801d842:	aa03      	add	r2, sp, #12
 801d844:	b2ab      	uxth	r3, r5
 801d846:	f100 011c 	add.w	r1, r0, #28
 801d84a:	7808      	ldrb	r0, [r1, #0]
 801d84c:	eb02 0c43 	add.w	ip, r2, r3, lsl #1
 801d850:	1c6d      	adds	r5, r5, #1
 801d852:	f88c 0000 	strb.w	r0, [ip]
 801d856:	7848      	ldrb	r0, [r1, #1]
 801d858:	f88c 0001 	strb.w	r0, [ip, #1]

0801d85c <??ATT_Build_Read_Multi_Rsp_5>:
 801d85c:	1cbf      	adds	r7, r7, #2
 801d85e:	b2bf      	uxth	r7, r7

0801d860 <??ATT_Build_Read_Multi_Rsp_3>:
 801d860:	454f      	cmp	r7, r9
 801d862:	dbcc      	blt.n	801d7fe <??ATT_Build_Read_Multi_Rsp_4>
 801d864:	b2a8      	uxth	r0, r5
 801d866:	b160      	cbz	r0, 801d882 <??ATT_Build_Read_Multi_Rsp_2>
 801d868:	6870      	ldr	r0, [r6, #4]
 801d86a:	0069      	lsls	r1, r5, #1
 801d86c:	4653      	mov	r3, sl
 801d86e:	f440 2000 	orr.w	r0, r0, #524288	; 0x80000
 801d872:	6070      	str	r0, [r6, #4]
 801d874:	aa03      	add	r2, sp, #12
 801d876:	b2c9      	uxtb	r1, r1
 801d878:	2001      	movs	r0, #1
 801d87a:	f001 fcf1 	bl	801f260 <EVT_aci_gatt_read_multi_permit_req>
 801d87e:	2069      	movs	r0, #105	; 0x69
 801d880:	e0d6      	b.n	801da30 <??Subroutine1_0>

0801d882 <??ATT_Build_Read_Multi_Rsp_2>:
 801d882:	8872      	ldrh	r2, [r6, #2]
 801d884:	f8d8 0008 	ldr.w	r0, [r8, #8]
 801d888:	2100      	movs	r1, #0
 801d88a:	1d12      	adds	r2, r2, #4
 801d88c:	b292      	uxth	r2, r2
 801d88e:	f007 fa62 	bl	8024d56 <ACL_PM_Resize>
 801d892:	b108      	cbz	r0, 801d898 <??ATT_Build_Read_Multi_Rsp_6>
 801d894:	2095      	movs	r0, #149	; 0x95
 801d896:	e0cb      	b.n	801da30 <??Subroutine1_0>

0801d898 <??ATT_Build_Read_Multi_Rsp_6>:
 801d898:	f8ba 0006 	ldrh.w	r0, [sl, #6]
 801d89c:	f04f 0901 	mov.w	r9, #1
 801d8a0:	1e45      	subs	r5, r0, #1
 801d8a2:	b2ad      	uxth	r5, r5
 801d8a4:	e031      	b.n	801d90a <??ATT_Build_Read_Multi_Rsp_7>

0801d8a6 <??ATT_Build_Read_Multi_Rsp_8>:
 801d8a6:	1b3f      	subs	r7, r7, r4
 801d8a8:	b2bf      	uxth	r7, r7
 801d8aa:	2f02      	cmp	r7, #2
 801d8ac:	bf88      	it	hi
 801d8ae:	2702      	movhi	r7, #2
 801d8b0:	f100 0308 	add.w	r3, r0, #8
 801d8b4:	463a      	mov	r2, r7
 801d8b6:	e020      	b.n	801d8fa <??ATT_Build_Read_Multi_Rsp_9>

0801d8b8 <??ATT_Build_Read_Multi_Rsp_10>:
 801d8b8:	f04f 0c0e 	mov.w	ip, #14

0801d8bc <??ATT_Build_Read_Multi_Rsp_11>:
 801d8bc:	f1bc 0f00 	cmp.w	ip, #0
 801d8c0:	f040 808a 	bne.w	801d9d8 <??ATT_Build_Read_Multi_Rsp_12>
 801d8c4:	b924      	cbnz	r4, 801d8d0 <??ATT_Build_Read_Multi_Rsp_13>
 801d8c6:	f8d8 1008 	ldr.w	r1, [r8, #8]
 801d8ca:	200f      	movs	r0, #15
 801d8cc:	2401      	movs	r4, #1
 801d8ce:	7308      	strb	r0, [r1, #12]

0801d8d0 <??ATT_Build_Read_Multi_Rsp_13>:
 801d8d0:	8877      	ldrh	r7, [r6, #2]
 801d8d2:	1b38      	subs	r0, r7, r4
 801d8d4:	d017      	beq.n	801d906 <??ATT_Build_Read_Multi_Rsp_14>
 801d8d6:	9801      	ldr	r0, [sp, #4]
 801d8d8:	1b3f      	subs	r7, r7, r4
 801d8da:	b2bf      	uxth	r7, r7
 801d8dc:	8bc0      	ldrh	r0, [r0, #30]
 801d8de:	4287      	cmp	r7, r0
 801d8e0:	bf88      	it	hi
 801d8e2:	4607      	movhi	r7, r0
 801d8e4:	9801      	ldr	r0, [sp, #4]
 801d8e6:	4631      	mov	r1, r6
 801d8e8:	f7ff fa83 	bl	801cdf2 <GATT_Find_Attr_Index>
 801d8ec:	9901      	ldr	r1, [sp, #4]
 801d8ee:	8c0b      	ldrh	r3, [r1, #32]
 801d8f0:	698a      	ldr	r2, [r1, #24]
 801d8f2:	1d21      	adds	r1, r4, #4
 801d8f4:	4358      	muls	r0, r3
 801d8f6:	1813      	adds	r3, r2, r0
 801d8f8:	463a      	mov	r2, r7

0801d8fa <??ATT_Build_Read_Multi_Rsp_9>:
 801d8fa:	b289      	uxth	r1, r1
 801d8fc:	4640      	mov	r0, r8
 801d8fe:	193c      	adds	r4, r7, r4
 801d900:	f007 fa7b 	bl	8024dfa <ACL_PM_Set_Data>
 801d904:	b2a4      	uxth	r4, r4

0801d906 <??ATT_Build_Read_Multi_Rsp_14>:
 801d906:	f109 0902 	add.w	r9, r9, #2

0801d90a <??ATT_Build_Read_Multi_Rsp_7>:
 801d90a:	fa1f f089 	uxth.w	r0, r9
 801d90e:	42a8      	cmp	r0, r5
 801d910:	f280 808a 	bge.w	801da28 <??ATT_Build_Read_Multi_Rsp_15>
 801d914:	f109 0104 	add.w	r1, r9, #4
 801d918:	466b      	mov	r3, sp
 801d91a:	2202      	movs	r2, #2
 801d91c:	b289      	uxth	r1, r1
 801d91e:	4650      	mov	r0, sl
 801d920:	f007 fa61 	bl	8024de6 <ACL_PM_Get_Data>
 801d924:	f8bd 0000 	ldrh.w	r0, [sp]
 801d928:	f7ff fa1e 	bl	801cd68 <GATT_Find_Srv_Owner_Of_Handle>
 801d92c:	2800      	cmp	r0, #0
 801d92e:	d073      	beq.n	801da18 <??ATT_Build_Read_Multi_Rsp_16>
 801d930:	f100 0228 	add.w	r2, r0, #40	; 0x28
 801d934:	8811      	ldrh	r1, [r2, #0]
 801d936:	f8bd 3000 	ldrh.w	r3, [sp]
 801d93a:	4299      	cmp	r1, r3
 801d93c:	d115      	bne.n	801d96a <??ATT_Build_Read_Multi_Rsp_17>
 801d93e:	b924      	cbnz	r4, 801d94a <??ATT_Build_Read_Multi_Rsp_18>
 801d940:	f8d8 3008 	ldr.w	r3, [r8, #8]
 801d944:	210f      	movs	r1, #15
 801d946:	2401      	movs	r4, #1
 801d948:	7319      	strb	r1, [r3, #12]

0801d94a <??ATT_Build_Read_Multi_Rsp_18>:
 801d94a:	8877      	ldrh	r7, [r6, #2]
 801d94c:	1b39      	subs	r1, r7, r4
 801d94e:	d0da      	beq.n	801d906 <??ATT_Build_Read_Multi_Rsp_14>
 801d950:	7912      	ldrb	r2, [r2, #4]
 801d952:	1d21      	adds	r1, r4, #4
 801d954:	2a01      	cmp	r2, #1
 801d956:	d0a6      	beq.n	801d8a6 <??ATT_Build_Read_Multi_Rsp_8>
 801d958:	1b3f      	subs	r7, r7, r4
 801d95a:	b2bf      	uxth	r7, r7
 801d95c:	2f10      	cmp	r7, #16
 801d95e:	bf88      	it	hi
 801d960:	2710      	movhi	r7, #16
 801d962:	f100 0308 	add.w	r3, r0, #8
 801d966:	463a      	mov	r2, r7
 801d968:	e7c7      	b.n	801d8fa <??ATT_Build_Read_Multi_Rsp_9>

0801d96a <??ATT_Build_Read_Multi_Rsp_17>:
 801d96a:	4601      	mov	r1, r0
 801d96c:	aa01      	add	r2, sp, #4
 801d96e:	4618      	mov	r0, r3
 801d970:	f7ff f9ec 	bl	801cd4c <GATT_Search_Handle>
 801d974:	2800      	cmp	r0, #0
 801d976:	d14f      	bne.n	801da18 <??ATT_Build_Read_Multi_Rsp_16>
 801d978:	9801      	ldr	r0, [sp, #4]
 801d97a:	8837      	ldrh	r7, [r6, #0]
 801d97c:	f100 0b24 	add.w	fp, r0, #36	; 0x24
 801d980:	4638      	mov	r0, r7
 801d982:	f004 faa3 	bl	8021ecc <SMP_Get_Remote_Device>
 801d986:	2800      	cmp	r0, #0
 801d988:	d037      	beq.n	801d9fa <??ATT_Build_Read_Multi_Rsp_19>
 801d98a:	4638      	mov	r0, r7
 801d98c:	f004 fb0b 	bl	8021fa6 <SMP_Get_Link_Status>
 801d990:	4602      	mov	r2, r0
 801d992:	f89b 0001 	ldrb.w	r0, [fp, #1]
 801d996:	07c3      	lsls	r3, r0, #31
 801d998:	d502      	bpl.n	801d9a0 <??ATT_Build_Read_Multi_Rsp_20>
 801d99a:	f012 0106 	ands.w	r1, r2, #6
 801d99e:	d019      	beq.n	801d9d4 <??ATT_Build_Read_Multi_Rsp_21>

0801d9a0 <??ATT_Build_Read_Multi_Rsp_20>:
 801d9a0:	0781      	lsls	r1, r0, #30
 801d9a2:	d501      	bpl.n	801d9a8 <??ATT_Build_Read_Multi_Rsp_22>
 801d9a4:	0713      	lsls	r3, r2, #28
 801d9a6:	d51f      	bpl.n	801d9e8 <??ATT_Build_Read_Multi_Rsp_23>

0801d9a8 <??ATT_Build_Read_Multi_Rsp_22>:
 801d9a8:	f010 0004 	ands.w	r0, r0, #4
 801d9ac:	d001      	beq.n	801d9b2 <??ATT_Build_Read_Multi_Rsp_24>
 801d9ae:	07d1      	lsls	r1, r2, #31
 801d9b0:	d51d      	bpl.n	801d9ee <??ATT_Build_Read_Multi_Rsp_25>

0801d9b2 <??ATT_Build_Read_Multi_Rsp_24>:
 801d9b2:	b130      	cbz	r0, 801d9c2 <??ATT_Build_Read_Multi_Rsp_26>
 801d9b4:	f89b 1003 	ldrb.w	r1, [fp, #3]
 801d9b8:	4638      	mov	r0, r7
 801d9ba:	f004 fb45 	bl	8022048 <SMP_Check_Encryption_KeySize>
 801d9be:	285f      	cmp	r0, #95	; 0x5f
 801d9c0:	d018      	beq.n	801d9f4 <??ATT_Build_Read_Multi_Rsp_27>

0801d9c2 <??ATT_Build_Read_Multi_Rsp_26>:
 801d9c2:	f89b c000 	ldrb.w	ip, [fp]
 801d9c6:	f00c 0c01 	and.w	ip, ip, #1
 801d9ca:	f08c 0c01 	eor.w	ip, ip, #1
 801d9ce:	ea4f 0c4c 	mov.w	ip, ip, lsl #1
 801d9d2:	e773      	b.n	801d8bc <??ATT_Build_Read_Multi_Rsp_11>

0801d9d4 <??ATT_Build_Read_Multi_Rsp_21>:
 801d9d4:	f04f 0c05 	mov.w	ip, #5

0801d9d8 <??ATT_Build_Read_Multi_Rsp_12>:
 801d9d8:	f8bd 2000 	ldrh.w	r2, [sp]
 801d9dc:	4643      	mov	r3, r8
 801d9de:	210e      	movs	r1, #14
 801d9e0:	4660      	mov	r0, ip
 801d9e2:	f000 fdb4 	bl	801e54e <ATT_Build_Error_Rsp>
 801d9e6:	e022      	b.n	801da2e <??ATT_Build_Read_Multi_Rsp_28>

0801d9e8 <??ATT_Build_Read_Multi_Rsp_23>:
 801d9e8:	f04f 0c08 	mov.w	ip, #8
 801d9ec:	e7f4      	b.n	801d9d8 <??ATT_Build_Read_Multi_Rsp_12>

0801d9ee <??ATT_Build_Read_Multi_Rsp_25>:
 801d9ee:	f04f 0c0f 	mov.w	ip, #15
 801d9f2:	e7f1      	b.n	801d9d8 <??ATT_Build_Read_Multi_Rsp_12>

0801d9f4 <??ATT_Build_Read_Multi_Rsp_27>:
 801d9f4:	f04f 0c0c 	mov.w	ip, #12
 801d9f8:	e7ee      	b.n	801d9d8 <??ATT_Build_Read_Multi_Rsp_12>

0801d9fa <??ATT_Build_Read_Multi_Rsp_19>:
 801d9fa:	f89b 0001 	ldrb.w	r0, [fp, #1]
 801d9fe:	f04f 0c00 	mov.w	ip, #0
 801da02:	2800      	cmp	r0, #0
 801da04:	f47f af58 	bne.w	801d8b8 <??ATT_Build_Read_Multi_Rsp_10>
 801da08:	f89b 1000 	ldrb.w	r1, [fp]
 801da0c:	07c8      	lsls	r0, r1, #31
 801da0e:	f53f af55 	bmi.w	801d8bc <??ATT_Build_Read_Multi_Rsp_11>
 801da12:	f04f 0c02 	mov.w	ip, #2
 801da16:	e751      	b.n	801d8bc <??ATT_Build_Read_Multi_Rsp_11>

0801da18 <??ATT_Build_Read_Multi_Rsp_16>:
 801da18:	f8bd 2000 	ldrh.w	r2, [sp]
 801da1c:	4643      	mov	r3, r8
 801da1e:	210e      	movs	r1, #14
 801da20:	2001      	movs	r0, #1
 801da22:	f000 fd94 	bl	801e54e <ATT_Build_Error_Rsp>
 801da26:	e002      	b.n	801da2e <??ATT_Build_Read_Multi_Rsp_28>

0801da28 <??ATT_Build_Read_Multi_Rsp_15>:
 801da28:	b10c      	cbz	r4, 801da2e <??ATT_Build_Read_Multi_Rsp_28>
 801da2a:	f8a8 4006 	strh.w	r4, [r8, #6]

0801da2e <??ATT_Build_Read_Multi_Rsp_28>:
 801da2e:	2000      	movs	r0, #0

0801da30 <??Subroutine1_0>:
 801da30:	f50d 7d03 	add.w	sp, sp, #524	; 0x20c
 801da34:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801da38 <ATT_Build_Read_By_Grp_Type_Rsp>:
 801da38:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 801da3c:	b08a      	sub	sp, #40	; 0x28
 801da3e:	460f      	mov	r7, r1
 801da40:	88f9      	ldrh	r1, [r7, #6]
 801da42:	2400      	movs	r4, #0
 801da44:	4605      	mov	r5, r0
 801da46:	4616      	mov	r6, r2
 801da48:	f04f 0800 	mov.w	r8, #0
 801da4c:	2907      	cmp	r1, #7
 801da4e:	bf18      	it	ne
 801da50:	2915      	cmpne	r1, #21
 801da52:	d004      	beq.n	801da5e <??ATT_Build_Read_By_Grp_Type_Rsp_0>
 801da54:	4633      	mov	r3, r6
 801da56:	2200      	movs	r2, #0
 801da58:	2110      	movs	r1, #16
 801da5a:	2004      	movs	r0, #4
 801da5c:	e0cd      	b.n	801dbfa <??ATT_Build_Read_By_Grp_Type_Rsp_1>

0801da5e <??ATT_Build_Read_By_Grp_Type_Rsp_0>:
 801da5e:	68ba      	ldr	r2, [r7, #8]
 801da60:	ab01      	add	r3, sp, #4
 801da62:	f102 000d 	add.w	r0, r2, #13
 801da66:	f890 c000 	ldrb.w	ip, [r0]
 801da6a:	f88d c000 	strb.w	ip, [sp]
 801da6e:	f890 c001 	ldrb.w	ip, [r0, #1]
 801da72:	f102 000f 	add.w	r0, r2, #15
 801da76:	f88d c001 	strb.w	ip, [sp, #1]
 801da7a:	f890 c000 	ldrb.w	ip, [r0]
 801da7e:	f883 c000 	strb.w	ip, [r3]
 801da82:	f890 c001 	ldrb.w	ip, [r0, #1]
 801da86:	f883 c001 	strb.w	ip, [r3, #1]
 801da8a:	f8bd 0004 	ldrh.w	r0, [sp, #4]
 801da8e:	f8bd 3000 	ldrh.w	r3, [sp]
 801da92:	4298      	cmp	r0, r3
 801da94:	d300      	bcc.n	801da98 <??ATT_Build_Read_By_Grp_Type_Rsp_2>
 801da96:	b92b      	cbnz	r3, 801daa4 <??ATT_Build_Read_By_Grp_Type_Rsp_3>

0801da98 <??ATT_Build_Read_By_Grp_Type_Rsp_2>:
 801da98:	4633      	mov	r3, r6
 801da9a:	f8bd 2000 	ldrh.w	r2, [sp]
 801da9e:	2110      	movs	r1, #16
 801daa0:	2001      	movs	r0, #1
 801daa2:	e0aa      	b.n	801dbfa <??ATT_Build_Read_By_Grp_Type_Rsp_1>

0801daa4 <??ATT_Build_Read_By_Grp_Type_Rsp_3>:
 801daa4:	a058      	add	r0, pc, #352	; (adr r0, 801dc08 <GATT_bleBaseUuid>)
 801daa6:	e890 5600 	ldmia.w	r0, {r9, sl, ip, lr}
 801daaa:	ab06      	add	r3, sp, #24
 801daac:	2907      	cmp	r1, #7
 801daae:	e883 5600 	stmia.w	r3, {r9, sl, ip, lr}
 801dab2:	d10c      	bne.n	801dace <??ATT_Build_Read_By_Grp_Type_Rsp_4>
 801dab4:	e890 5088 	ldmia.w	r0, {r3, r7, ip, lr}
 801dab8:	f102 0011 	add.w	r0, r2, #17
 801dabc:	a902      	add	r1, sp, #8
 801dabe:	e881 5088 	stmia.w	r1, {r3, r7, ip, lr}
 801dac2:	7802      	ldrb	r2, [r0, #0]
 801dac4:	a905      	add	r1, sp, #20
 801dac6:	700a      	strb	r2, [r1, #0]
 801dac8:	7842      	ldrb	r2, [r0, #1]
 801daca:	704a      	strb	r2, [r1, #1]
 801dacc:	e005      	b.n	801dada <??ATT_Build_Read_By_Grp_Type_Rsp_5>

0801dace <??ATT_Build_Read_By_Grp_Type_Rsp_4>:
 801dace:	ab05      	add	r3, sp, #20
 801dad0:	2210      	movs	r2, #16
 801dad2:	2109      	movs	r1, #9
 801dad4:	4638      	mov	r0, r7
 801dad6:	f007 f986 	bl	8024de6 <ACL_PM_Get_Data>

0801dada <??ATT_Build_Read_By_Grp_Type_Rsp_5>:
 801dada:	a805      	add	r0, sp, #20
 801dadc:	7802      	ldrb	r2, [r0, #0]
 801dade:	f10d 0102 	add.w	r1, sp, #2
 801dae2:	700a      	strb	r2, [r1, #0]
 801dae4:	7842      	ldrb	r2, [r0, #1]
 801dae6:	704a      	strb	r2, [r1, #1]
 801dae8:	f8bd 0002 	ldrh.w	r0, [sp, #2]
 801daec:	f5b0 5f20 	cmp.w	r0, #10240	; 0x2800
 801daf0:	bf1c      	itt	ne
 801daf2:	f642 0101 	movwne	r1, #10241	; 0x2801
 801daf6:	4288      	cmpne	r0, r1
 801daf8:	d17a      	bne.n	801dbf0 <??ATT_Build_Read_By_Grp_Type_Rsp_6>
 801dafa:	f8bd 0000 	ldrh.w	r0, [sp]
 801dafe:	f7ff f957 	bl	801cdb0 <GATT_Find_Srv_From_Handle>
 801db02:	0007      	movs	r7, r0
 801db04:	d06c      	beq.n	801dbe0 <??ATT_Build_Read_By_Grp_Type_Rsp_7>
 801db06:	886a      	ldrh	r2, [r5, #2]
 801db08:	68b0      	ldr	r0, [r6, #8]
 801db0a:	2100      	movs	r1, #0
 801db0c:	1d12      	adds	r2, r2, #4
 801db0e:	b292      	uxth	r2, r2
 801db10:	f007 f921 	bl	8024d56 <ACL_PM_Resize>
 801db14:	b110      	cbz	r0, 801db1c <??ATT_Build_Read_By_Grp_Type_Rsp_8>
 801db16:	2095      	movs	r0, #149	; 0x95
 801db18:	e07f      	b.n	801dc1a <??Subroutine5_0>

0801db1a <??ATT_Build_Read_By_Grp_Type_Rsp_9>:
 801db1a:	683f      	ldr	r7, [r7, #0]

0801db1c <??ATT_Build_Read_By_Grp_Type_Rsp_8>:
 801db1c:	4839      	ldr	r0, [pc, #228]	; (801dc04 <??DataTable4>)
 801db1e:	4287      	cmp	r7, r0
 801db20:	d05d      	beq.n	801dbde <??ATT_Build_Read_By_Grp_Type_Rsp_10>
 801db22:	f8bd 1004 	ldrh.w	r1, [sp, #4]
 801db26:	8d38      	ldrh	r0, [r7, #40]	; 0x28
 801db28:	4281      	cmp	r1, r0
 801db2a:	d358      	bcc.n	801dbde <??ATT_Build_Read_By_Grp_Type_Rsp_10>
 801db2c:	8d79      	ldrh	r1, [r7, #42]	; 0x2a
 801db2e:	f8bd 0002 	ldrh.w	r0, [sp, #2]
 801db32:	4281      	cmp	r1, r0
 801db34:	d1f1      	bne.n	801db1a <??ATT_Build_Read_By_Grp_Type_Rsp_9>
 801db36:	b974      	cbnz	r4, 801db56 <??ATT_Build_Read_By_Grp_Type_Rsp_11>
 801db38:	68b1      	ldr	r1, [r6, #8]
 801db3a:	2011      	movs	r0, #17
 801db3c:	7308      	strb	r0, [r1, #12]
 801db3e:	f897 002c 	ldrb.w	r0, [r7, #44]	; 0x2c
 801db42:	2801      	cmp	r0, #1
 801db44:	bf0c      	ite	eq
 801db46:	f04f 0806 	moveq.w	r8, #6
 801db4a:	f04f 0814 	movne.w	r8, #20
 801db4e:	68b0      	ldr	r0, [r6, #8]
 801db50:	2402      	movs	r4, #2
 801db52:	f880 800d 	strb.w	r8, [r0, #13]

0801db56 <??ATT_Build_Read_By_Grp_Type_Rsp_11>:
 801db56:	8868      	ldrh	r0, [r5, #2]
 801db58:	1b00      	subs	r0, r0, r4
 801db5a:	2804      	cmp	r0, #4
 801db5c:	d33f      	bcc.n	801dbde <??ATT_Build_Read_By_Grp_Type_Rsp_10>
 801db5e:	f1b8 0f06 	cmp.w	r8, #6
 801db62:	bf04      	itt	eq
 801db64:	f897 002c 	ldrbeq.w	r0, [r7, #44]	; 0x2c
 801db68:	2801      	cmpeq	r0, #1
 801db6a:	d006      	beq.n	801db7a <??ATT_Build_Read_By_Grp_Type_Rsp_12>
 801db6c:	f1b8 0f14 	cmp.w	r8, #20
 801db70:	bf04      	itt	eq
 801db72:	f897 002c 	ldrbeq.w	r0, [r7, #44]	; 0x2c
 801db76:	2802      	cmpeq	r0, #2
 801db78:	d131      	bne.n	801dbde <??ATT_Build_Read_By_Grp_Type_Rsp_10>

0801db7a <??ATT_Build_Read_By_Grp_Type_Rsp_12>:
 801db7a:	1d21      	adds	r1, r4, #4
 801db7c:	f107 0328 	add.w	r3, r7, #40	; 0x28
 801db80:	2202      	movs	r2, #2
 801db82:	b289      	uxth	r1, r1
 801db84:	4630      	mov	r0, r6
 801db86:	f007 f938 	bl	8024dfa <ACL_PM_Set_Data>
 801db8a:	1ca4      	adds	r4, r4, #2
 801db8c:	6a3a      	ldr	r2, [r7, #32]
 801db8e:	1d21      	adds	r1, r4, #4
 801db90:	1ca4      	adds	r4, r4, #2
 801db92:	f107 0020 	add.w	r0, r7, #32
 801db96:	4290      	cmp	r0, r2
 801db98:	bf1a      	itte	ne
 801db9a:	6a78      	ldrne	r0, [r7, #36]	; 0x24
 801db9c:	f100 031c 	addne.w	r3, r0, #28
 801dba0:	f107 0328 	addeq.w	r3, r7, #40	; 0x28
 801dba4:	2202      	movs	r2, #2
 801dba6:	b289      	uxth	r1, r1
 801dba8:	4630      	mov	r0, r6
 801dbaa:	f007 f926 	bl	8024dfa <ACL_PM_Set_Data>
 801dbae:	8868      	ldrh	r0, [r5, #2]
 801dbb0:	f1a8 0904 	sub.w	r9, r8, #4
 801dbb4:	fa1f f989 	uxth.w	r9, r9
 801dbb8:	1b00      	subs	r0, r0, r4
 801dbba:	b280      	uxth	r0, r0
 801dbbc:	4581      	cmp	r9, r0
 801dbbe:	bf88      	it	hi
 801dbc0:	4681      	movhi	r9, r0
 801dbc2:	1d21      	adds	r1, r4, #4
 801dbc4:	f107 0308 	add.w	r3, r7, #8
 801dbc8:	464a      	mov	r2, r9
 801dbca:	b289      	uxth	r1, r1
 801dbcc:	4630      	mov	r0, r6
 801dbce:	f007 f914 	bl	8024dfa <ACL_PM_Set_Data>
 801dbd2:	8868      	ldrh	r0, [r5, #2]
 801dbd4:	444c      	add	r4, r9
 801dbd6:	b2a4      	uxth	r4, r4
 801dbd8:	1b00      	subs	r0, r0, r4
 801dbda:	2804      	cmp	r0, #4
 801dbdc:	d29d      	bcs.n	801db1a <??ATT_Build_Read_By_Grp_Type_Rsp_9>

0801dbde <??ATT_Build_Read_By_Grp_Type_Rsp_10>:
 801dbde:	b97c      	cbnz	r4, 801dc00 <??ATT_Build_Read_By_Grp_Type_Rsp_13>

0801dbe0 <??ATT_Build_Read_By_Grp_Type_Rsp_7>:
 801dbe0:	f8bd 2000 	ldrh.w	r2, [sp]
 801dbe4:	4633      	mov	r3, r6
 801dbe6:	2110      	movs	r1, #16
 801dbe8:	200a      	movs	r0, #10
 801dbea:	f000 fcb0 	bl	801e54e <ATT_Build_Error_Rsp>

0801dbee <??ATT_Build_Read_By_Grp_Type_Rsp_14>:
 801dbee:	e013      	b.n	801dc18 <?Subroutine5>

0801dbf0 <??ATT_Build_Read_By_Grp_Type_Rsp_6>:
 801dbf0:	4633      	mov	r3, r6
 801dbf2:	f8bd 2000 	ldrh.w	r2, [sp]
 801dbf6:	2110      	movs	r1, #16
 801dbf8:	2010      	movs	r0, #16

0801dbfa <??ATT_Build_Read_By_Grp_Type_Rsp_1>:
 801dbfa:	f000 fca8 	bl	801e54e <ATT_Build_Error_Rsp>
 801dbfe:	e00b      	b.n	801dc18 <?Subroutine5>

0801dc00 <??ATT_Build_Read_By_Grp_Type_Rsp_13>:
 801dc00:	80f4      	strh	r4, [r6, #6]
 801dc02:	e7f4      	b.n	801dbee <??ATT_Build_Read_By_Grp_Type_Rsp_14>

0801dc04 <??DataTable4>:
 801dc04:	38c8 2000                                   .8. 

0801dc08 <GATT_bleBaseUuid>:
 801dc08:	34fb 5f9b 0080 8000 1000 0000 0000 0000     .4._............

0801dc18 <?Subroutine5>:
 801dc18:	2000      	movs	r0, #0

0801dc1a <??Subroutine5_0>:
 801dc1a:	b00a      	add	sp, #40	; 0x28
 801dc1c:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}

0801dc20 <ATT_Build_Write_Rsp>:
 801dc20:	e92d 41f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, lr}
 801dc24:	4605      	mov	r5, r0
 801dc26:	b083      	sub	sp, #12
 801dc28:	2000      	movs	r0, #0
 801dc2a:	460e      	mov	r6, r1
 801dc2c:	f8ad 0008 	strh.w	r0, [sp, #8]
 801dc30:	88f0      	ldrh	r0, [r6, #6]
 801dc32:	2701      	movs	r7, #1
 801dc34:	4614      	mov	r4, r2
 801dc36:	2802      	cmp	r0, #2
 801dc38:	d809      	bhi.n	801dc4e <??ATT_Build_Write_Rsp_0>
 801dc3a:	2704      	movs	r7, #4

0801dc3c <??ATT_Build_Write_Rsp_1>:
 801dc3c:	f8bd 2008 	ldrh.w	r2, [sp, #8]
 801dc40:	4623      	mov	r3, r4
 801dc42:	2112      	movs	r1, #18
 801dc44:	4638      	mov	r0, r7
 801dc46:	f000 fc82 	bl	801e54e <ATT_Build_Error_Rsp>

0801dc4a <??ATT_Build_Write_Rsp_2>:
 801dc4a:	2000      	movs	r0, #0
 801dc4c:	e122      	b.n	801de94 <??Subroutine6_0>

0801dc4e <??ATT_Build_Write_Rsp_0>:
 801dc4e:	68b0      	ldr	r0, [r6, #8]
 801dc50:	aa02      	add	r2, sp, #8
 801dc52:	f100 010d 	add.w	r1, r0, #13
 801dc56:	7808      	ldrb	r0, [r1, #0]
 801dc58:	7010      	strb	r0, [r2, #0]
 801dc5a:	7848      	ldrb	r0, [r1, #1]
 801dc5c:	7050      	strb	r0, [r2, #1]
 801dc5e:	f8bd 0008 	ldrh.w	r0, [sp, #8]
 801dc62:	f7ff f881 	bl	801cd68 <GATT_Find_Srv_Owner_Of_Handle>
 801dc66:	2800      	cmp	r0, #0
 801dc68:	d0e8      	beq.n	801dc3c <??ATT_Build_Write_Rsp_1>
 801dc6a:	f8bd 1008 	ldrh.w	r1, [sp, #8]
 801dc6e:	8d02      	ldrh	r2, [r0, #40]	; 0x28
 801dc70:	4291      	cmp	r1, r2
 801dc72:	bf08      	it	eq
 801dc74:	2703      	moveq	r7, #3
 801dc76:	d0e1      	beq.n	801dc3c <??ATT_Build_Write_Rsp_1>
 801dc78:	4601      	mov	r1, r0
 801dc7a:	f8bd 0008 	ldrh.w	r0, [sp, #8]
 801dc7e:	aa01      	add	r2, sp, #4
 801dc80:	f7ff f864 	bl	801cd4c <GATT_Search_Handle>
 801dc84:	2800      	cmp	r0, #0
 801dc86:	d1d9      	bne.n	801dc3c <??ATT_Build_Write_Rsp_1>
 801dc88:	9901      	ldr	r1, [sp, #4]
 801dc8a:	8828      	ldrh	r0, [r5, #0]
 801dc8c:	2202      	movs	r2, #2
 801dc8e:	f000 facc 	bl	801e22a <ATT_Check_Perms>
 801dc92:	0007      	movs	r7, r0
 801dc94:	d1d2      	bne.n	801dc3c <??ATT_Build_Write_Rsp_1>
 801dc96:	9901      	ldr	r1, [sp, #4]
 801dc98:	88f0      	ldrh	r0, [r6, #6]
 801dc9a:	1ec7      	subs	r7, r0, #3
 801dc9c:	f811 0f22 	ldrb.w	r0, [r1, #34]!
 801dca0:	b2bf      	uxth	r7, r7
 801dca2:	b9b0      	cbnz	r0, 801dcd2 <??ATT_Build_Write_Rsp_3>
 801dca4:	9801      	ldr	r0, [sp, #4]
 801dca6:	8bc2      	ldrh	r2, [r0, #30]
 801dca8:	42ba      	cmp	r2, r7
 801dcaa:	db18      	blt.n	801dcde <??ATT_Build_Write_Rsp_4>

0801dcac <??ATT_Build_Write_Rsp_5>:
 801dcac:	7908      	ldrb	r0, [r1, #4]
 801dcae:	0781      	lsls	r1, r0, #30
 801dcb0:	d517      	bpl.n	801dce2 <??ATT_Build_Write_Rsp_6>
 801dcb2:	6868      	ldr	r0, [r5, #4]
 801dcb4:	f010 7f81 	tst.w	r0, #16908288	; 0x1020000
 801dcb8:	d113      	bne.n	801dce2 <??ATT_Build_Write_Rsp_6>
 801dcba:	f440 3000 	orr.w	r0, r0, #131072	; 0x20000
 801dcbe:	6068      	str	r0, [r5, #4]
 801dcc0:	9801      	ldr	r0, [sp, #4]
 801dcc2:	9600      	str	r6, [sp, #0]
 801dcc4:	b2fb      	uxtb	r3, r7
 801dcc6:	8b81      	ldrh	r1, [r0, #28]
 801dcc8:	2203      	movs	r2, #3
 801dcca:	2001      	movs	r0, #1
 801dccc:	f001 facc 	bl	801f268 <EVT_aci_gatt_write_permit_req>
 801dcd0:	e0df      	b.n	801de92 <?Subroutine6>

0801dcd2 <??ATT_Build_Write_Rsp_3>:
 801dcd2:	2801      	cmp	r0, #1
 801dcd4:	d1ea      	bne.n	801dcac <??ATT_Build_Write_Rsp_5>
 801dcd6:	9801      	ldr	r0, [sp, #4]
 801dcd8:	8c02      	ldrh	r2, [r0, #32]
 801dcda:	42ba      	cmp	r2, r7
 801dcdc:	dae6      	bge.n	801dcac <??ATT_Build_Write_Rsp_5>

0801dcde <??ATT_Build_Write_Rsp_4>:
 801dcde:	270d      	movs	r7, #13
 801dce0:	e7ac      	b.n	801dc3c <??ATT_Build_Write_Rsp_1>

0801dce2 <??ATT_Build_Write_Rsp_6>:
 801dce2:	9801      	ldr	r0, [sp, #4]
 801dce4:	4629      	mov	r1, r5
 801dce6:	f7ff f884 	bl	801cdf2 <GATT_Find_Attr_Index>
 801dcea:	4680      	mov	r8, r0
 801dcec:	9801      	ldr	r0, [sp, #4]
 801dcee:	4642      	mov	r2, r8
 801dcf0:	6981      	ldr	r1, [r0, #24]
 801dcf2:	8c00      	ldrh	r0, [r0, #32]
 801dcf4:	4342      	muls	r2, r0
 801dcf6:	4630      	mov	r0, r6
 801dcf8:	188b      	adds	r3, r1, r2
 801dcfa:	463a      	mov	r2, r7
 801dcfc:	2107      	movs	r1, #7
 801dcfe:	f007 f872 	bl	8024de6 <ACL_PM_Get_Data>
 801dd02:	9901      	ldr	r1, [sp, #4]
 801dd04:	311e      	adds	r1, #30
 801dd06:	7908      	ldrb	r0, [r1, #4]
 801dd08:	b100      	cbz	r0, 801dd0c <??ATT_Build_Write_Rsp_7>
 801dd0a:	800f      	strh	r7, [r1, #0]

0801dd0c <??ATT_Build_Write_Rsp_7>:
 801dd0c:	68a0      	ldr	r0, [r4, #8]
 801dd0e:	2113      	movs	r1, #19
 801dd10:	4642      	mov	r2, r8
 801dd12:	7301      	strb	r1, [r0, #12]
 801dd14:	2101      	movs	r1, #1
 801dd16:	80e1      	strh	r1, [r4, #6]
 801dd18:	9901      	ldr	r1, [sp, #4]
 801dd1a:	4628      	mov	r0, r5
 801dd1c:	f7ff f8ac 	bl	801ce78 <GATT_Send_Attribute_Modified_Event>
 801dd20:	e793      	b.n	801dc4a <??ATT_Build_Write_Rsp_2>

0801dd22 <ATT_Build_Prepare_Write_Rsp>:
 801dd22:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 801dd26:	4680      	mov	r8, r0
 801dd28:	b084      	sub	sp, #16
 801dd2a:	2000      	movs	r0, #0
 801dd2c:	460d      	mov	r5, r1
 801dd2e:	f8ad 0008 	strh.w	r0, [sp, #8]
 801dd32:	88e8      	ldrh	r0, [r5, #6]
 801dd34:	2401      	movs	r4, #1
 801dd36:	4616      	mov	r6, r2
 801dd38:	2805      	cmp	r0, #5
 801dd3a:	d209      	bcs.n	801dd50 <??ATT_Build_Prepare_Write_Rsp_0>
 801dd3c:	2404      	movs	r4, #4

0801dd3e <??ATT_Build_Prepare_Write_Rsp_1>:
 801dd3e:	f8bd 2008 	ldrh.w	r2, [sp, #8]
 801dd42:	4633      	mov	r3, r6
 801dd44:	2116      	movs	r1, #22
 801dd46:	4620      	mov	r0, r4
 801dd48:	f000 fc01 	bl	801e54e <ATT_Build_Error_Rsp>
 801dd4c:	2000      	movs	r0, #0
 801dd4e:	e0a1      	b.n	801de94 <??Subroutine6_0>

0801dd50 <??ATT_Build_Prepare_Write_Rsp_0>:
 801dd50:	68a8      	ldr	r0, [r5, #8]
 801dd52:	aa02      	add	r2, sp, #8
 801dd54:	f100 010d 	add.w	r1, r0, #13
 801dd58:	7808      	ldrb	r0, [r1, #0]
 801dd5a:	7010      	strb	r0, [r2, #0]
 801dd5c:	7848      	ldrb	r0, [r1, #1]
 801dd5e:	7050      	strb	r0, [r2, #1]
 801dd60:	f8bd 0008 	ldrh.w	r0, [sp, #8]
 801dd64:	f7ff f800 	bl	801cd68 <GATT_Find_Srv_Owner_Of_Handle>
 801dd68:	2800      	cmp	r0, #0
 801dd6a:	d0e8      	beq.n	801dd3e <??ATT_Build_Prepare_Write_Rsp_1>
 801dd6c:	f8bd 1008 	ldrh.w	r1, [sp, #8]
 801dd70:	8d02      	ldrh	r2, [r0, #40]	; 0x28
 801dd72:	4291      	cmp	r1, r2
 801dd74:	d035      	beq.n	801dde2 <??ATT_Build_Prepare_Write_Rsp_2>
 801dd76:	4601      	mov	r1, r0
 801dd78:	f8bd 0008 	ldrh.w	r0, [sp, #8]
 801dd7c:	aa03      	add	r2, sp, #12
 801dd7e:	f7fe ffe5 	bl	801cd4c <GATT_Search_Handle>
 801dd82:	2800      	cmp	r0, #0
 801dd84:	d1db      	bne.n	801dd3e <??ATT_Build_Prepare_Write_Rsp_1>
 801dd86:	9803      	ldr	r0, [sp, #12]
 801dd88:	f8b8 4000 	ldrh.w	r4, [r8]
 801dd8c:	f100 0724 	add.w	r7, r0, #36	; 0x24
 801dd90:	4620      	mov	r0, r4
 801dd92:	f004 f89b 	bl	8021ecc <SMP_Get_Remote_Device>
 801dd96:	b330      	cbz	r0, 801dde6 <??ATT_Build_Prepare_Write_Rsp_3>
 801dd98:	4620      	mov	r0, r4
 801dd9a:	f004 f904 	bl	8021fa6 <SMP_Get_Link_Status>
 801dd9e:	787a      	ldrb	r2, [r7, #1]
 801dda0:	4601      	mov	r1, r0
 801dda2:	0713      	lsls	r3, r2, #28
 801dda4:	d504      	bpl.n	801ddb0 <??ATT_Build_Prepare_Write_Rsp_4>
 801dda6:	f011 0006 	ands.w	r0, r1, #6
 801ddaa:	bf08      	it	eq
 801ddac:	2405      	moveq	r4, #5
 801ddae:	d0c6      	beq.n	801dd3e <??ATT_Build_Prepare_Write_Rsp_1>

0801ddb0 <??ATT_Build_Prepare_Write_Rsp_4>:
 801ddb0:	06d0      	lsls	r0, r2, #27
 801ddb2:	d503      	bpl.n	801ddbc <??ATT_Build_Prepare_Write_Rsp_5>
 801ddb4:	070b      	lsls	r3, r1, #28
 801ddb6:	bf58      	it	pl
 801ddb8:	2408      	movpl	r4, #8
 801ddba:	d5c0      	bpl.n	801dd3e <??ATT_Build_Prepare_Write_Rsp_1>

0801ddbc <??ATT_Build_Prepare_Write_Rsp_5>:
 801ddbc:	0690      	lsls	r0, r2, #26
 801ddbe:	d503      	bpl.n	801ddc8 <??ATT_Build_Prepare_Write_Rsp_6>
 801ddc0:	07c9      	lsls	r1, r1, #31
 801ddc2:	bf58      	it	pl
 801ddc4:	240f      	movpl	r4, #15
 801ddc6:	d5ba      	bpl.n	801dd3e <??ATT_Build_Prepare_Write_Rsp_1>

0801ddc8 <??ATT_Build_Prepare_Write_Rsp_6>:
 801ddc8:	0690      	lsls	r0, r2, #26
 801ddca:	d507      	bpl.n	801dddc <??ATT_Build_Prepare_Write_Rsp_7>
 801ddcc:	78f9      	ldrb	r1, [r7, #3]
 801ddce:	4620      	mov	r0, r4
 801ddd0:	f004 f93a 	bl	8022048 <SMP_Check_Encryption_KeySize>
 801ddd4:	285f      	cmp	r0, #95	; 0x5f
 801ddd6:	bf08      	it	eq
 801ddd8:	240c      	moveq	r4, #12
 801ddda:	d0b0      	beq.n	801dd3e <??ATT_Build_Prepare_Write_Rsp_1>

0801dddc <??ATT_Build_Prepare_Write_Rsp_7>:
 801dddc:	7838      	ldrb	r0, [r7, #0]
 801ddde:	0781      	lsls	r1, r0, #30
 801dde0:	d40c      	bmi.n	801ddfc <??ATT_Build_Prepare_Write_Rsp_8>

0801dde2 <??ATT_Build_Prepare_Write_Rsp_2>:
 801dde2:	2403      	movs	r4, #3
 801dde4:	e7ab      	b.n	801dd3e <??ATT_Build_Prepare_Write_Rsp_1>

0801dde6 <??ATT_Build_Prepare_Write_Rsp_3>:
 801dde6:	7878      	ldrb	r0, [r7, #1]
 801dde8:	2400      	movs	r4, #0
 801ddea:	b920      	cbnz	r0, 801ddf6 <??ATT_Build_Prepare_Write_Rsp_9>
 801ddec:	7839      	ldrb	r1, [r7, #0]
 801ddee:	0788      	lsls	r0, r1, #30
 801ddf0:	d402      	bmi.n	801ddf8 <??ATT_Build_Prepare_Write_Rsp_10>
 801ddf2:	2403      	movs	r4, #3
 801ddf4:	e000      	b.n	801ddf8 <??ATT_Build_Prepare_Write_Rsp_10>

0801ddf6 <??ATT_Build_Prepare_Write_Rsp_9>:
 801ddf6:	240e      	movs	r4, #14

0801ddf8 <??ATT_Build_Prepare_Write_Rsp_10>:
 801ddf8:	2c00      	cmp	r4, #0
 801ddfa:	d1a0      	bne.n	801dd3e <??ATT_Build_Prepare_Write_Rsp_1>

0801ddfc <??ATT_Build_Prepare_Write_Rsp_8>:
 801ddfc:	f8df 7818 	ldr.w	r7, [pc, #2072]	; 801e618 <??DataTable7>
 801de00:	f507 74f0 	add.w	r4, r7, #480	; 0x1e0
 801de04:	4629      	mov	r1, r5
 801de06:	4620      	mov	r0, r4
 801de08:	f006 fefc 	bl	8024c04 <ACL_List_Full_On_Packet>
 801de0c:	b108      	cbz	r0, 801de12 <??ATT_Build_Prepare_Write_Rsp_11>
 801de0e:	2409      	movs	r4, #9
 801de10:	e795      	b.n	801dd3e <??ATT_Build_Prepare_Write_Rsp_1>

0801de12 <??ATT_Build_Prepare_Write_Rsp_11>:
 801de12:	9803      	ldr	r0, [sp, #12]
 801de14:	301c      	adds	r0, #28
 801de16:	7a81      	ldrb	r1, [r0, #10]
 801de18:	078a      	lsls	r2, r1, #30
 801de1a:	d51e      	bpl.n	801de5a <??ATT_Build_Prepare_Write_Rsp_12>
 801de1c:	f8d8 1004 	ldr.w	r1, [r8, #4]
 801de20:	f011 7f81 	tst.w	r1, #16908288	; 0x1020000
 801de24:	d119      	bne.n	801de5a <??ATT_Build_Prepare_Write_Rsp_12>
 801de26:	68aa      	ldr	r2, [r5, #8]
 801de28:	f10d 060a 	add.w	r6, sp, #10
 801de2c:	f441 3100 	orr.w	r1, r1, #131072	; 0x20000
 801de30:	f102 030f 	add.w	r3, r2, #15
 801de34:	781a      	ldrb	r2, [r3, #0]
 801de36:	7032      	strb	r2, [r6, #0]
 801de38:	785a      	ldrb	r2, [r3, #1]
 801de3a:	2305      	movs	r3, #5
 801de3c:	7072      	strb	r2, [r6, #1]
 801de3e:	f8c8 1004 	str.w	r1, [r8, #4]
 801de42:	9501      	str	r5, [sp, #4]
 801de44:	88e9      	ldrh	r1, [r5, #6]
 801de46:	1f4a      	subs	r2, r1, #5
 801de48:	b2d2      	uxtb	r2, r2
 801de4a:	9200      	str	r2, [sp, #0]
 801de4c:	f8bd 200a 	ldrh.w	r2, [sp, #10]
 801de50:	8801      	ldrh	r1, [r0, #0]
 801de52:	2001      	movs	r0, #1
 801de54:	f001 fa1c 	bl	801f290 <EVT_aci_gatt_prepare_write_permit_req>
 801de58:	e01b      	b.n	801de92 <?Subroutine6>

0801de5a <??ATT_Build_Prepare_Write_Rsp_12>:
 801de5a:	88ea      	ldrh	r2, [r5, #6]
 801de5c:	68b0      	ldr	r0, [r6, #8]
 801de5e:	2100      	movs	r1, #0
 801de60:	1d12      	adds	r2, r2, #4
 801de62:	b292      	uxth	r2, r2
 801de64:	f006 ff77 	bl	8024d56 <ACL_PM_Resize>
 801de68:	b108      	cbz	r0, 801de6e <??ATT_Build_Prepare_Write_Rsp_13>
 801de6a:	2095      	movs	r0, #149	; 0x95
 801de6c:	e012      	b.n	801de94 <??Subroutine6_0>

0801de6e <??ATT_Build_Prepare_Write_Rsp_13>:
 801de6e:	4629      	mov	r1, r5
 801de70:	f507 70ea 	add.w	r0, r7, #468	; 0x1d4
 801de74:	f006 fe9a 	bl	8024bac <ACL_List_Remove>
 801de78:	4629      	mov	r1, r5
 801de7a:	4630      	mov	r0, r6
 801de7c:	f006 ffc7 	bl	8024e0e <ACL_PM_Clone>
 801de80:	4629      	mov	r1, r5
 801de82:	4620      	mov	r0, r4
 801de84:	f006 fe76 	bl	8024b74 <ACL_List_Insert_Tail>
 801de88:	68b1      	ldr	r1, [r6, #8]
 801de8a:	2017      	movs	r0, #23
 801de8c:	7308      	strb	r0, [r1, #12]
 801de8e:	2067      	movs	r0, #103	; 0x67
 801de90:	e000      	b.n	801de94 <??Subroutine6_0>

0801de92 <?Subroutine6>:
 801de92:	2069      	movs	r0, #105	; 0x69

0801de94 <??Subroutine6_0>:
 801de94:	b004      	add	sp, #16
 801de96:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0801de9a <ATT_Build_Exec_Write_Rsp>:
 801de9a:	e92d 4ff1 	stmdb	sp!, {r0, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801de9e:	460d      	mov	r5, r1
 801dea0:	4614      	mov	r4, r2
 801dea2:	b086      	sub	sp, #24
 801dea4:	2100      	movs	r1, #0
 801dea6:	2200      	movs	r2, #0
 801dea8:	f88d 1006 	strb.w	r1, [sp, #6]
 801deac:	f8ad 2002 	strh.w	r2, [sp, #2]
 801deb0:	88e8      	ldrh	r0, [r5, #6]
 801deb2:	2700      	movs	r7, #0
 801deb4:	2802      	cmp	r0, #2
 801deb6:	d005      	beq.n	801dec4 <??ATT_Build_Exec_Write_Rsp_0>
 801deb8:	4623      	mov	r3, r4
 801deba:	2118      	movs	r1, #24
 801debc:	2004      	movs	r0, #4
 801debe:	f000 fb46 	bl	801e54e <ATT_Build_Error_Rsp>
 801dec2:	e11a      	b.n	801e0fa <??ATT_Build_Exec_Write_Rsp_15>

0801dec4 <??ATT_Build_Exec_Write_Rsp_0>:
 801dec4:	68a8      	ldr	r0, [r5, #8]
 801dec6:	4690      	mov	r8, r2
 801dec8:	4691      	mov	r9, r2
 801deca:	7b41      	ldrb	r1, [r0, #13]
 801decc:	9104      	str	r1, [sp, #16]

0801dece <??ATT_Build_Exec_Write_Rsp_1>:
 801dece:	f8df 0748 	ldr.w	r0, [pc, #1864]	; 801e618 <??DataTable7>
 801ded2:	f8d0 61e0 	ldr.w	r6, [r0, #480]	; 0x1e0
 801ded6:	f500 70f0 	add.w	r0, r0, #480	; 0x1e0
 801deda:	46ba      	mov	sl, r7
 801dedc:	9005      	str	r0, [sp, #20]
 801dede:	e022      	b.n	801df26 <??ATT_Build_Exec_Write_Rsp_2>

0801dee0 <??ATT_Build_Exec_Write_Rsp_3>:
 801dee0:	88b0      	ldrh	r0, [r6, #4]
 801dee2:	88a9      	ldrh	r1, [r5, #4]
 801dee4:	f8d6 b000 	ldr.w	fp, [r6]
 801dee8:	4288      	cmp	r0, r1
 801deea:	d11b      	bne.n	801df24 <??ATT_Build_Exec_Write_Rsp_4>
 801deec:	68b0      	ldr	r0, [r6, #8]
 801deee:	aa03      	add	r2, sp, #12
 801def0:	f1ba 0f00 	cmp.w	sl, #0
 801def4:	f100 010d 	add.w	r1, r0, #13
 801def8:	7808      	ldrb	r0, [r1, #0]
 801defa:	7010      	strb	r0, [r2, #0]
 801defc:	7848      	ldrb	r0, [r1, #1]
 801defe:	7050      	strb	r0, [r2, #1]
 801df00:	f8bd 000c 	ldrh.w	r0, [sp, #12]
 801df04:	bf08      	it	eq
 801df06:	4682      	moveq	sl, r0
 801df08:	4582      	cmp	sl, r0
 801df0a:	d10b      	bne.n	801df24 <??ATT_Build_Exec_Write_Rsp_4>
 801df0c:	9805      	ldr	r0, [sp, #20]
 801df0e:	4631      	mov	r1, r6
 801df10:	f006 fe4c 	bl	8024bac <ACL_List_Remove>
 801df14:	6037      	str	r7, [r6, #0]
 801df16:	f1b8 0f00 	cmp.w	r8, #0
 801df1a:	bf14      	ite	ne
 801df1c:	f8c9 6000 	strne.w	r6, [r9]
 801df20:	46b0      	moveq	r8, r6
 801df22:	46b1      	mov	r9, r6

0801df24 <??ATT_Build_Exec_Write_Rsp_4>:
 801df24:	465e      	mov	r6, fp

0801df26 <??ATT_Build_Exec_Write_Rsp_2>:
 801df26:	2e00      	cmp	r6, #0
 801df28:	d1da      	bne.n	801dee0 <??ATT_Build_Exec_Write_Rsp_3>
 801df2a:	f1ba 0f00 	cmp.w	sl, #0
 801df2e:	d1ce      	bne.n	801dece <??ATT_Build_Exec_Write_Rsp_1>
 801df30:	68a1      	ldr	r1, [r4, #8]
 801df32:	2019      	movs	r0, #25
 801df34:	7308      	strb	r0, [r1, #12]
 801df36:	2001      	movs	r0, #1
 801df38:	80e0      	strh	r0, [r4, #6]
 801df3a:	9804      	ldr	r0, [sp, #16]
 801df3c:	f8dd 9018 	ldr.w	r9, [sp, #24]
 801df40:	2801      	cmp	r0, #1
 801df42:	d15b      	bne.n	801dffc <??ATT_Build_Exec_Write_Rsp_5>
 801df44:	2200      	movs	r2, #0
 801df46:	4645      	mov	r5, r8
 801df48:	e00e      	b.n	801df68 <??ATT_Build_Exec_Write_Rsp_6>

0801df4a <??ATT_Build_Exec_Write_Rsp_7>:
 801df4a:	8bd0      	ldrh	r0, [r2, #30]
 801df4c:	f8bd c00c 	ldrh.w	ip, [sp, #12]
 801df50:	1e43      	subs	r3, r0, #1
 801df52:	4563      	cmp	r3, ip
 801df54:	d33a      	bcc.n	801dfcc <??ATT_Build_Exec_Write_Rsp_8>
 801df56:	4461      	add	r1, ip
 801df58:	4288      	cmp	r0, r1
 801df5a:	da04      	bge.n	801df66 <??ATT_Build_Exec_Write_Rsp_9>
 801df5c:	e0c4      	b.n	801e0e8 <??ATT_Build_Exec_Write_Rsp_10>

0801df5e <??ATT_Build_Exec_Write_Rsp_11>:
 801df5e:	4461      	add	r1, ip
 801df60:	4288      	cmp	r0, r1
 801df62:	f2c0 80c1 	blt.w	801e0e8 <??ATT_Build_Exec_Write_Rsp_10>

0801df66 <??ATT_Build_Exec_Write_Rsp_9>:
 801df66:	4635      	mov	r5, r6

0801df68 <??ATT_Build_Exec_Write_Rsp_6>:
 801df68:	2d00      	cmp	r5, #0
 801df6a:	f000 80bf 	beq.w	801e0ec <??ATT_Build_Exec_Write_Rsp_12>
 801df6e:	68a8      	ldr	r0, [r5, #8]
 801df70:	682e      	ldr	r6, [r5, #0]
 801df72:	f100 010d 	add.w	r1, r0, #13
 801df76:	7808      	ldrb	r0, [r1, #0]
 801df78:	f88d 0000 	strb.w	r0, [sp]
 801df7c:	7848      	ldrb	r0, [r1, #1]
 801df7e:	f88d 0001 	strb.w	r0, [sp, #1]
 801df82:	f8bd 1000 	ldrh.w	r1, [sp]
 801df86:	458a      	cmp	sl, r1
 801df88:	d009      	beq.n	801df9e <??ATT_Build_Exec_Write_Rsp_13>
 801df8a:	468a      	mov	sl, r1
 801df8c:	4650      	mov	r0, sl
 801df8e:	f7fe feeb 	bl	801cd68 <GATT_Find_Srv_Owner_Of_Handle>
 801df92:	4601      	mov	r1, r0
 801df94:	aa05      	add	r2, sp, #20
 801df96:	4650      	mov	r0, sl
 801df98:	f7fe fed8 	bl	801cd4c <GATT_Search_Handle>
 801df9c:	9a05      	ldr	r2, [sp, #20]

0801df9e <??ATT_Build_Exec_Write_Rsp_13>:
 801df9e:	68a8      	ldr	r0, [r5, #8]
 801dfa0:	ab03      	add	r3, sp, #12
 801dfa2:	f100 010f 	add.w	r1, r0, #15
 801dfa6:	7808      	ldrb	r0, [r1, #0]
 801dfa8:	7018      	strb	r0, [r3, #0]
 801dfaa:	7848      	ldrb	r0, [r1, #1]
 801dfac:	7058      	strb	r0, [r3, #1]
 801dfae:	88e8      	ldrh	r0, [r5, #6]
 801dfb0:	1f41      	subs	r1, r0, #5
 801dfb2:	f892 0022 	ldrb.w	r0, [r2, #34]	; 0x22
 801dfb6:	b289      	uxth	r1, r1
 801dfb8:	2800      	cmp	r0, #0
 801dfba:	d0c6      	beq.n	801df4a <??ATT_Build_Exec_Write_Rsp_7>
 801dfbc:	2801      	cmp	r0, #1
 801dfbe:	d1d2      	bne.n	801df66 <??ATT_Build_Exec_Write_Rsp_9>
 801dfc0:	8c10      	ldrh	r0, [r2, #32]
 801dfc2:	f8bd c00c 	ldrh.w	ip, [sp, #12]
 801dfc6:	1e43      	subs	r3, r0, #1
 801dfc8:	4563      	cmp	r3, ip
 801dfca:	d2c8      	bcs.n	801df5e <??ATT_Build_Exec_Write_Rsp_11>

0801dfcc <??ATT_Build_Exec_Write_Rsp_8>:
 801dfcc:	2007      	movs	r0, #7

0801dfce <??ATT_Build_Exec_Write_Rsp_14>:
 801dfce:	f8bd 1000 	ldrh.w	r1, [sp]
 801dfd2:	2201      	movs	r2, #1
 801dfd4:	f8ad 100c 	strh.w	r1, [sp, #12]
 801dfd8:	68a1      	ldr	r1, [r4, #8]
 801dfda:	730a      	strb	r2, [r1, #12]
 801dfdc:	68a1      	ldr	r1, [r4, #8]
 801dfde:	2218      	movs	r2, #24
 801dfe0:	734a      	strb	r2, [r1, #13]
 801dfe2:	68a1      	ldr	r1, [r4, #8]
 801dfe4:	aa03      	add	r2, sp, #12
 801dfe6:	f101 030e 	add.w	r3, r1, #14
 801dfea:	7811      	ldrb	r1, [r2, #0]
 801dfec:	7019      	strb	r1, [r3, #0]
 801dfee:	7851      	ldrb	r1, [r2, #1]
 801dff0:	7059      	strb	r1, [r3, #1]
 801dff2:	68a1      	ldr	r1, [r4, #8]
 801dff4:	7408      	strb	r0, [r1, #16]
 801dff6:	2005      	movs	r0, #5
 801dff8:	80e0      	strh	r0, [r4, #6]
 801dffa:	9704      	str	r7, [sp, #16]

0801dffc <??ATT_Build_Exec_Write_Rsp_5>:
 801dffc:	f89d 0006 	ldrb.w	r0, [sp, #6]
 801e000:	9c04      	ldr	r4, [sp, #16]
 801e002:	f1b8 0f00 	cmp.w	r8, #0
 801e006:	d078      	beq.n	801e0fa <??ATT_Build_Exec_Write_Rsp_15>
 801e008:	f8d8 1008 	ldr.w	r1, [r8, #8]
 801e00c:	2c01      	cmp	r4, #1
 801e00e:	f101 020d 	add.w	r2, r1, #13
 801e012:	7811      	ldrb	r1, [r2, #0]
 801e014:	f88d 1000 	strb.w	r1, [sp]
 801e018:	7851      	ldrb	r1, [r2, #1]
 801e01a:	f88d 1001 	strb.w	r1, [sp, #1]
 801e01e:	d10e      	bne.n	801e03e <??ATT_Build_Exec_Write_Rsp_16>
 801e020:	f8bd 0000 	ldrh.w	r0, [sp]
 801e024:	f7fe fea0 	bl	801cd68 <GATT_Find_Srv_Owner_Of_Handle>
 801e028:	4601      	mov	r1, r0
 801e02a:	f8bd 0000 	ldrh.w	r0, [sp]
 801e02e:	aa02      	add	r2, sp, #8
 801e030:	f7fe fe8c 	bl	801cd4c <GATT_Search_Handle>
 801e034:	9f02      	ldr	r7, [sp, #8]
 801e036:	4649      	mov	r1, r9
 801e038:	4638      	mov	r0, r7
 801e03a:	f7fe feda 	bl	801cdf2 <GATT_Find_Attr_Index>

0801e03e <??ATT_Build_Exec_Write_Rsp_16>:
 801e03e:	f88d 0006 	strb.w	r0, [sp, #6]
 801e042:	9404      	str	r4, [sp, #16]
 801e044:	46c2      	mov	sl, r8

0801e046 <??ATT_Build_Exec_Write_Rsp_17>:
 801e046:	9804      	ldr	r0, [sp, #16]
 801e048:	f8da 6000 	ldr.w	r6, [sl]
 801e04c:	2801      	cmp	r0, #1
 801e04e:	d138      	bne.n	801e0c2 <??ATT_Build_Exec_Write_Rsp_18>
 801e050:	2e00      	cmp	r6, #0
 801e052:	d04e      	beq.n	801e0f2 <??ATT_Build_Exec_Write_Rsp_19>
 801e054:	68b0      	ldr	r0, [r6, #8]
 801e056:	f10d 0202 	add.w	r2, sp, #2
 801e05a:	f100 010d 	add.w	r1, r0, #13
 801e05e:	7808      	ldrb	r0, [r1, #0]
 801e060:	7010      	strb	r0, [r2, #0]
 801e062:	7848      	ldrb	r0, [r1, #1]
 801e064:	7050      	strb	r0, [r2, #1]

0801e066 <??ATT_Build_Exec_Write_Rsp_20>:
 801e066:	f8da 0008 	ldr.w	r0, [sl, #8]
 801e06a:	aa01      	add	r2, sp, #4
 801e06c:	f100 010f 	add.w	r1, r0, #15
 801e070:	7808      	ldrb	r0, [r1, #0]
 801e072:	7010      	strb	r0, [r2, #0]
 801e074:	7848      	ldrb	r0, [r1, #1]
 801e076:	7050      	strb	r0, [r2, #1]
 801e078:	f8ba 0006 	ldrh.w	r0, [sl, #6]
 801e07c:	8c3a      	ldrh	r2, [r7, #32]
 801e07e:	69b9      	ldr	r1, [r7, #24]
 801e080:	1f44      	subs	r4, r0, #5
 801e082:	f89d 0006 	ldrb.w	r0, [sp, #6]
 801e086:	4350      	muls	r0, r2
 801e088:	b2a2      	uxth	r2, r4
 801e08a:	4401      	add	r1, r0
 801e08c:	f8bd 0004 	ldrh.w	r0, [sp, #4]
 801e090:	180b      	adds	r3, r1, r0
 801e092:	2109      	movs	r1, #9
 801e094:	4650      	mov	r0, sl
 801e096:	f006 fea6 	bl	8024de6 <ACL_PM_Get_Data>
 801e09a:	f897 0022 	ldrb.w	r0, [r7, #34]	; 0x22
 801e09e:	2801      	cmp	r0, #1
 801e0a0:	d103      	bne.n	801e0aa <??ATT_Build_Exec_Write_Rsp_21>
 801e0a2:	f8bd 0004 	ldrh.w	r0, [sp, #4]
 801e0a6:	1824      	adds	r4, r4, r0
 801e0a8:	83fc      	strh	r4, [r7, #30]

0801e0aa <??ATT_Build_Exec_Write_Rsp_21>:
 801e0aa:	f8bd 0000 	ldrh.w	r0, [sp]
 801e0ae:	f8bd 1002 	ldrh.w	r1, [sp, #2]
 801e0b2:	4288      	cmp	r0, r1
 801e0b4:	d005      	beq.n	801e0c2 <??ATT_Build_Exec_Write_Rsp_18>
 801e0b6:	f89d 2006 	ldrb.w	r2, [sp, #6]
 801e0ba:	4639      	mov	r1, r7
 801e0bc:	4648      	mov	r0, r9
 801e0be:	f7fe fedb 	bl	801ce78 <GATT_Send_Attribute_Modified_Event>

0801e0c2 <??ATT_Build_Exec_Write_Rsp_18>:
 801e0c2:	4640      	mov	r0, r8
 801e0c4:	f8d0 8000 	ldr.w	r8, [r0]
 801e0c8:	2100      	movs	r1, #0
 801e0ca:	6001      	str	r1, [r0, #0]
 801e0cc:	2101      	movs	r1, #1
 801e0ce:	4650      	mov	r0, sl
 801e0d0:	f006 fe07 	bl	8024ce2 <ACL_PM_Release>
 801e0d4:	f8bd 0000 	ldrh.w	r0, [sp]
 801e0d8:	f8bd 1002 	ldrh.w	r1, [sp, #2]
 801e0dc:	4288      	cmp	r0, r1
 801e0de:	d18d      	bne.n	801dffc <??ATT_Build_Exec_Write_Rsp_5>
 801e0e0:	ea5f 0a06 	movs.w	sl, r6
 801e0e4:	d1af      	bne.n	801e046 <??ATT_Build_Exec_Write_Rsp_17>
 801e0e6:	e789      	b.n	801dffc <??ATT_Build_Exec_Write_Rsp_5>

0801e0e8 <??ATT_Build_Exec_Write_Rsp_10>:
 801e0e8:	200d      	movs	r0, #13
 801e0ea:	e770      	b.n	801dfce <??ATT_Build_Exec_Write_Rsp_14>

0801e0ec <??ATT_Build_Exec_Write_Rsp_12>:
 801e0ec:	f8ad 7000 	strh.w	r7, [sp]
 801e0f0:	e784      	b.n	801dffc <??ATT_Build_Exec_Write_Rsp_5>

0801e0f2 <??ATT_Build_Exec_Write_Rsp_19>:
 801e0f2:	2200      	movs	r2, #0
 801e0f4:	f8ad 2002 	strh.w	r2, [sp, #2]
 801e0f8:	e7b5      	b.n	801e066 <??ATT_Build_Exec_Write_Rsp_20>

0801e0fa <??ATT_Build_Exec_Write_Rsp_15>:
 801e0fa:	2000      	movs	r0, #0
 801e0fc:	b007      	add	sp, #28
 801e0fe:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801e102 <GATT_Handle_Write_Cmd>:
 801e102:	e92d 41f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, lr}
 801e106:	b083      	sub	sp, #12
 801e108:	4606      	mov	r6, r0
 801e10a:	460c      	mov	r4, r1
 801e10c:	68a0      	ldr	r0, [r4, #8]
 801e10e:	7b01      	ldrb	r1, [r0, #12]
 801e110:	2952      	cmp	r1, #82	; 0x52
 801e112:	bf07      	ittee	eq
 801e114:	2503      	moveq	r5, #3
 801e116:	2704      	moveq	r7, #4
 801e118:	250f      	movne	r5, #15
 801e11a:	2708      	movne	r7, #8
 801e11c:	88e1      	ldrh	r1, [r4, #6]
 801e11e:	42a9      	cmp	r1, r5
 801e120:	f0c0 8082 	bcc.w	801e228 <??GATT_Handle_Write_Cmd_0>
 801e124:	f810 2f0d 	ldrb.w	r2, [r0, #13]!
 801e128:	a902      	add	r1, sp, #8
 801e12a:	700a      	strb	r2, [r1, #0]
 801e12c:	7842      	ldrb	r2, [r0, #1]
 801e12e:	704a      	strb	r2, [r1, #1]
 801e130:	f8bd 0008 	ldrh.w	r0, [sp, #8]
 801e134:	2800      	cmp	r0, #0
 801e136:	d077      	beq.n	801e228 <??GATT_Handle_Write_Cmd_0>
 801e138:	2f08      	cmp	r7, #8
 801e13a:	d108      	bne.n	801e14e <??GATT_Handle_Write_Cmd_1>
 801e13c:	6870      	ldr	r0, [r6, #4]
 801e13e:	0141      	lsls	r1, r0, #5
 801e140:	d405      	bmi.n	801e14e <??GATT_Handle_Write_Cmd_1>
 801e142:	8830      	ldrh	r0, [r6, #0]
 801e144:	4621      	mov	r1, r4
 801e146:	f004 f96d 	bl	8022424 <SMP_Validate_Signed_Packet>
 801e14a:	2800      	cmp	r0, #0
 801e14c:	d16c      	bne.n	801e228 <??GATT_Handle_Write_Cmd_0>

0801e14e <??GATT_Handle_Write_Cmd_1>:
 801e14e:	6870      	ldr	r0, [r6, #4]
 801e150:	f020 6080 	bic.w	r0, r0, #67108864	; 0x4000000
 801e154:	6070      	str	r0, [r6, #4]
 801e156:	f8bd 0008 	ldrh.w	r0, [sp, #8]
 801e15a:	f7fe fe05 	bl	801cd68 <GATT_Find_Srv_Owner_Of_Handle>
 801e15e:	2800      	cmp	r0, #0
 801e160:	bf1e      	ittt	ne
 801e162:	f8bd 1008 	ldrhne.w	r1, [sp, #8]
 801e166:	8d02      	ldrhne	r2, [r0, #40]	; 0x28
 801e168:	4291      	cmpne	r1, r2
 801e16a:	d05d      	beq.n	801e228 <??GATT_Handle_Write_Cmd_0>
 801e16c:	4601      	mov	r1, r0
 801e16e:	f8bd 0008 	ldrh.w	r0, [sp, #8]
 801e172:	aa01      	add	r2, sp, #4
 801e174:	f7fe fdea 	bl	801cd4c <GATT_Search_Handle>
 801e178:	2800      	cmp	r0, #0
 801e17a:	d155      	bne.n	801e228 <??GATT_Handle_Write_Cmd_0>
 801e17c:	f8b6 8000 	ldrh.w	r8, [r6]
 801e180:	9901      	ldr	r1, [sp, #4]
 801e182:	463a      	mov	r2, r7
 801e184:	4640      	mov	r0, r8
 801e186:	f000 f850 	bl	801e22a <ATT_Check_Perms>
 801e18a:	2f08      	cmp	r7, #8
 801e18c:	bf08      	it	eq
 801e18e:	2805      	cmpeq	r0, #5
 801e190:	d125      	bne.n	801e1de <??GATT_Handle_Write_Cmd_2>
 801e192:	4640      	mov	r0, r8
 801e194:	f003 fe9a 	bl	8021ecc <SMP_Get_Remote_Device>
 801e198:	2800      	cmp	r0, #0
 801e19a:	bf1c      	itt	ne
 801e19c:	8ac0      	ldrhne	r0, [r0, #22]
 801e19e:	f410 4fc0 	tstne.w	r0, #24576	; 0x6000
 801e1a2:	d041      	beq.n	801e228 <??GATT_Handle_Write_Cmd_0>

0801e1a4 <??GATT_Handle_Write_Cmd_3>:
 801e1a4:	9901      	ldr	r1, [sp, #4]
 801e1a6:	88e0      	ldrh	r0, [r4, #6]
 801e1a8:	1b45      	subs	r5, r0, r5
 801e1aa:	f811 0f22 	ldrb.w	r0, [r1, #34]!
 801e1ae:	b2ad      	uxth	r5, r5
 801e1b0:	b9c0      	cbnz	r0, 801e1e4 <??GATT_Handle_Write_Cmd_4>
 801e1b2:	9801      	ldr	r0, [sp, #4]
 801e1b4:	8bc2      	ldrh	r2, [r0, #30]
 801e1b6:	42aa      	cmp	r2, r5
 801e1b8:	db36      	blt.n	801e228 <??GATT_Handle_Write_Cmd_0>

0801e1ba <??GATT_Handle_Write_Cmd_5>:
 801e1ba:	7908      	ldrb	r0, [r1, #4]
 801e1bc:	0781      	lsls	r1, r0, #30
 801e1be:	d518      	bpl.n	801e1f2 <??GATT_Handle_Write_Cmd_6>
 801e1c0:	6870      	ldr	r0, [r6, #4]
 801e1c2:	0341      	lsls	r1, r0, #13
 801e1c4:	d415      	bmi.n	801e1f2 <??GATT_Handle_Write_Cmd_6>
 801e1c6:	f440 2080 	orr.w	r0, r0, #262144	; 0x40000
 801e1ca:	6070      	str	r0, [r6, #4]
 801e1cc:	9801      	ldr	r0, [sp, #4]
 801e1ce:	9400      	str	r4, [sp, #0]
 801e1d0:	b2eb      	uxtb	r3, r5
 801e1d2:	8b81      	ldrh	r1, [r0, #28]
 801e1d4:	2203      	movs	r2, #3
 801e1d6:	2001      	movs	r0, #1
 801e1d8:	f001 f846 	bl	801f268 <EVT_aci_gatt_write_permit_req>
 801e1dc:	e65a      	b.n	801de94 <??Subroutine6_0>

0801e1de <??GATT_Handle_Write_Cmd_2>:
 801e1de:	2800      	cmp	r0, #0
 801e1e0:	d0e0      	beq.n	801e1a4 <??GATT_Handle_Write_Cmd_3>
 801e1e2:	e657      	b.n	801de94 <??Subroutine6_0>

0801e1e4 <??GATT_Handle_Write_Cmd_4>:
 801e1e4:	2801      	cmp	r0, #1
 801e1e6:	d1e8      	bne.n	801e1ba <??GATT_Handle_Write_Cmd_5>
 801e1e8:	9801      	ldr	r0, [sp, #4]
 801e1ea:	8c02      	ldrh	r2, [r0, #32]
 801e1ec:	42aa      	cmp	r2, r5
 801e1ee:	dae4      	bge.n	801e1ba <??GATT_Handle_Write_Cmd_5>
 801e1f0:	e650      	b.n	801de94 <??Subroutine6_0>

0801e1f2 <??GATT_Handle_Write_Cmd_6>:
 801e1f2:	9801      	ldr	r0, [sp, #4]
 801e1f4:	4631      	mov	r1, r6
 801e1f6:	f7fe fdfc 	bl	801cdf2 <GATT_Find_Attr_Index>
 801e1fa:	4607      	mov	r7, r0
 801e1fc:	9801      	ldr	r0, [sp, #4]
 801e1fe:	463a      	mov	r2, r7
 801e200:	6981      	ldr	r1, [r0, #24]
 801e202:	8c00      	ldrh	r0, [r0, #32]
 801e204:	4342      	muls	r2, r0
 801e206:	4620      	mov	r0, r4
 801e208:	188b      	adds	r3, r1, r2
 801e20a:	462a      	mov	r2, r5
 801e20c:	2107      	movs	r1, #7
 801e20e:	f006 fdea 	bl	8024de6 <ACL_PM_Get_Data>
 801e212:	9801      	ldr	r0, [sp, #4]
 801e214:	301e      	adds	r0, #30
 801e216:	7901      	ldrb	r1, [r0, #4]
 801e218:	2901      	cmp	r1, #1
 801e21a:	bf08      	it	eq
 801e21c:	8005      	strheq	r5, [r0, #0]
 801e21e:	9901      	ldr	r1, [sp, #4]
 801e220:	463a      	mov	r2, r7
 801e222:	4630      	mov	r0, r6
 801e224:	f7fe fe28 	bl	801ce78 <GATT_Send_Attribute_Modified_Event>

0801e228 <??GATT_Handle_Write_Cmd_0>:
 801e228:	e634      	b.n	801de94 <??Subroutine6_0>

0801e22a <ATT_Check_Perms>:
 801e22a:	b570      	push	{r4, r5, r6, lr}
 801e22c:	4606      	mov	r6, r0
 801e22e:	4614      	mov	r4, r2
 801e230:	f101 0524 	add.w	r5, r1, #36	; 0x24
 801e234:	f003 fe4a 	bl	8021ecc <SMP_Get_Remote_Device>
 801e238:	2800      	cmp	r0, #0
 801e23a:	d050      	beq.n	801e2de <??ATT_Check_Perms_0>
 801e23c:	4630      	mov	r0, r6
 801e23e:	f003 feb2 	bl	8021fa6 <SMP_Get_Link_Status>
 801e242:	4601      	mov	r1, r0
 801e244:	786a      	ldrb	r2, [r5, #1]
 801e246:	2c01      	cmp	r4, #1
 801e248:	d11b      	bne.n	801e282 <??ATT_Check_Perms_1>
 801e24a:	07d3      	lsls	r3, r2, #31
 801e24c:	d502      	bpl.n	801e254 <??ATT_Check_Perms_2>
 801e24e:	f011 0006 	ands.w	r0, r1, #6
 801e252:	d01b      	beq.n	801e28c <??ATT_Check_Perms_3>

0801e254 <??ATT_Check_Perms_2>:
 801e254:	0790      	lsls	r0, r2, #30
 801e256:	d501      	bpl.n	801e25c <??ATT_Check_Perms_4>
 801e258:	070b      	lsls	r3, r1, #28
 801e25a:	d51d      	bpl.n	801e298 <??ATT_Check_Perms_5>

0801e25c <??ATT_Check_Perms_4>:
 801e25c:	0750      	lsls	r0, r2, #29
 801e25e:	d501      	bpl.n	801e264 <??ATT_Check_Perms_6>
 801e260:	07c9      	lsls	r1, r1, #31
 801e262:	d51f      	bpl.n	801e2a4 <??ATT_Check_Perms_7>

0801e264 <??ATT_Check_Perms_6>:
 801e264:	0750      	lsls	r0, r2, #29
 801e266:	d505      	bpl.n	801e274 <??ATT_Check_Perms_8>
 801e268:	78e9      	ldrb	r1, [r5, #3]
 801e26a:	4630      	mov	r0, r6
 801e26c:	f003 feec 	bl	8022048 <SMP_Check_Encryption_KeySize>
 801e270:	285f      	cmp	r0, #95	; 0x5f
 801e272:	d021      	beq.n	801e2b8 <??ATT_Check_Perms_9>

0801e274 <??ATT_Check_Perms_8>:
 801e274:	7828      	ldrb	r0, [r5, #0]
 801e276:	f000 0001 	and.w	r0, r0, #1
 801e27a:	f080 0001 	eor.w	r0, r0, #1
 801e27e:	0040      	lsls	r0, r0, #1
 801e280:	bd70      	pop	{r4, r5, r6, pc}

0801e282 <??ATT_Check_Perms_1>:
 801e282:	0713      	lsls	r3, r2, #28
 801e284:	d504      	bpl.n	801e290 <??ATT_Check_Perms_10>
 801e286:	f011 0006 	ands.w	r0, r1, #6
 801e28a:	d101      	bne.n	801e290 <??ATT_Check_Perms_10>

0801e28c <??ATT_Check_Perms_3>:
 801e28c:	2005      	movs	r0, #5
 801e28e:	bd70      	pop	{r4, r5, r6, pc}

0801e290 <??ATT_Check_Perms_10>:
 801e290:	06d0      	lsls	r0, r2, #27
 801e292:	d503      	bpl.n	801e29c <??ATT_Check_Perms_11>
 801e294:	070b      	lsls	r3, r1, #28
 801e296:	d401      	bmi.n	801e29c <??ATT_Check_Perms_11>

0801e298 <??ATT_Check_Perms_5>:
 801e298:	2008      	movs	r0, #8
 801e29a:	bd70      	pop	{r4, r5, r6, pc}

0801e29c <??ATT_Check_Perms_11>:
 801e29c:	0690      	lsls	r0, r2, #26
 801e29e:	d503      	bpl.n	801e2a8 <??ATT_Check_Perms_12>
 801e2a0:	07c9      	lsls	r1, r1, #31
 801e2a2:	d401      	bmi.n	801e2a8 <??ATT_Check_Perms_12>

0801e2a4 <??ATT_Check_Perms_7>:
 801e2a4:	200f      	movs	r0, #15
 801e2a6:	bd70      	pop	{r4, r5, r6, pc}

0801e2a8 <??ATT_Check_Perms_12>:
 801e2a8:	0690      	lsls	r0, r2, #26
 801e2aa:	d507      	bpl.n	801e2bc <??ATT_Check_Perms_13>
 801e2ac:	78e9      	ldrb	r1, [r5, #3]
 801e2ae:	4630      	mov	r0, r6
 801e2b0:	f003 feca 	bl	8022048 <SMP_Check_Encryption_KeySize>
 801e2b4:	285f      	cmp	r0, #95	; 0x5f
 801e2b6:	d101      	bne.n	801e2bc <??ATT_Check_Perms_13>

0801e2b8 <??ATT_Check_Perms_9>:
 801e2b8:	200c      	movs	r0, #12
 801e2ba:	bd70      	pop	{r4, r5, r6, pc}

0801e2bc <??ATT_Check_Perms_13>:
 801e2bc:	7828      	ldrb	r0, [r5, #0]
 801e2be:	0781      	lsls	r1, r0, #30
 801e2c0:	d401      	bmi.n	801e2c6 <??ATT_Check_Perms_14>
 801e2c2:	2c02      	cmp	r4, #2
 801e2c4:	d007      	beq.n	801e2d6 <??ATT_Check_Perms_15>

0801e2c6 <??ATT_Check_Perms_14>:
 801e2c6:	0741      	lsls	r1, r0, #29
 801e2c8:	d401      	bmi.n	801e2ce <??ATT_Check_Perms_16>
 801e2ca:	2c04      	cmp	r4, #4
 801e2cc:	d003      	beq.n	801e2d6 <??ATT_Check_Perms_15>

0801e2ce <??ATT_Check_Perms_16>:
 801e2ce:	0700      	lsls	r0, r0, #28
 801e2d0:	d403      	bmi.n	801e2da <??ATT_Check_Perms_17>
 801e2d2:	2c08      	cmp	r4, #8
 801e2d4:	d101      	bne.n	801e2da <??ATT_Check_Perms_17>

0801e2d6 <??ATT_Check_Perms_15>:
 801e2d6:	2003      	movs	r0, #3
 801e2d8:	bd70      	pop	{r4, r5, r6, pc}

0801e2da <??ATT_Check_Perms_17>:
 801e2da:	2000      	movs	r0, #0
 801e2dc:	bd70      	pop	{r4, r5, r6, pc}

0801e2de <??ATT_Check_Perms_0>:
 801e2de:	7868      	ldrb	r0, [r5, #1]
 801e2e0:	2100      	movs	r1, #0
 801e2e2:	b980      	cbnz	r0, 801e306 <??ATT_Check_Perms_18>
 801e2e4:	7828      	ldrb	r0, [r5, #0]
 801e2e6:	07c2      	lsls	r2, r0, #31
 801e2e8:	d403      	bmi.n	801e2f2 <??ATT_Check_Perms_19>
 801e2ea:	2c01      	cmp	r4, #1
 801e2ec:	bf08      	it	eq
 801e2ee:	2102      	moveq	r1, #2
 801e2f0:	d00a      	beq.n	801e308 <??ATT_Check_Perms_20>

0801e2f2 <??ATT_Check_Perms_19>:
 801e2f2:	0782      	lsls	r2, r0, #30
 801e2f4:	d401      	bmi.n	801e2fa <??ATT_Check_Perms_21>
 801e2f6:	2c02      	cmp	r4, #2
 801e2f8:	d003      	beq.n	801e302 <??ATT_Check_Perms_22>

0801e2fa <??ATT_Check_Perms_21>:
 801e2fa:	0740      	lsls	r0, r0, #29
 801e2fc:	d404      	bmi.n	801e308 <??ATT_Check_Perms_20>
 801e2fe:	2c04      	cmp	r4, #4
 801e300:	d102      	bne.n	801e308 <??ATT_Check_Perms_20>

0801e302 <??ATT_Check_Perms_22>:
 801e302:	2103      	movs	r1, #3
 801e304:	e000      	b.n	801e308 <??ATT_Check_Perms_20>

0801e306 <??ATT_Check_Perms_18>:
 801e306:	210e      	movs	r1, #14

0801e308 <??ATT_Check_Perms_20>:
 801e308:	4608      	mov	r0, r1
 801e30a:	bd70      	pop	{r4, r5, r6, pc}

0801e30c <ATT_Build_Find_Info_Rsp>:
 801e30c:	e92d 47fc 	stmdb	sp!, {r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 801e310:	4682      	mov	sl, r0
 801e312:	88d0      	ldrh	r0, [r2, #6]
 801e314:	2400      	movs	r4, #0
 801e316:	2700      	movs	r7, #0
 801e318:	461d      	mov	r5, r3
 801e31a:	2805      	cmp	r0, #5
 801e31c:	d015      	beq.n	801e34a <??ATT_Build_Find_Info_Rsp_0>
 801e31e:	f8ad 4004 	strh.w	r4, [sp, #4]
 801e322:	68a9      	ldr	r1, [r5, #8]
 801e324:	2001      	movs	r0, #1
 801e326:	7308      	strb	r0, [r1, #12]
 801e328:	68a9      	ldr	r1, [r5, #8]
 801e32a:	2004      	movs	r0, #4
 801e32c:	7348      	strb	r0, [r1, #13]
 801e32e:	68a9      	ldr	r1, [r5, #8]
 801e330:	a801      	add	r0, sp, #4
 801e332:	f101 020e 	add.w	r2, r1, #14
 801e336:	7801      	ldrb	r1, [r0, #0]
 801e338:	7011      	strb	r1, [r2, #0]
 801e33a:	7841      	ldrb	r1, [r0, #1]
 801e33c:	2004      	movs	r0, #4
 801e33e:	7051      	strb	r1, [r2, #1]
 801e340:	68a9      	ldr	r1, [r5, #8]
 801e342:	7408      	strb	r0, [r1, #16]
 801e344:	2005      	movs	r0, #5
 801e346:	80e8      	strh	r0, [r5, #6]
 801e348:	e02c      	b.n	801e3a4 <??ATT_Build_Find_Info_Rsp_1>

0801e34a <??ATT_Build_Find_Info_Rsp_0>:
 801e34a:	6890      	ldr	r0, [r2, #8]
 801e34c:	f100 020d 	add.w	r2, r0, #13
 801e350:	7816      	ldrb	r6, [r2, #0]
 801e352:	f88d 6000 	strb.w	r6, [sp]
 801e356:	7856      	ldrb	r6, [r2, #1]
 801e358:	f10d 0202 	add.w	r2, sp, #2
 801e35c:	f88d 6001 	strb.w	r6, [sp, #1]
 801e360:	f810 3f0f 	ldrb.w	r3, [r0, #15]!
 801e364:	7013      	strb	r3, [r2, #0]
 801e366:	7843      	ldrb	r3, [r0, #1]
 801e368:	7053      	strb	r3, [r2, #1]
 801e36a:	f8bd 0002 	ldrh.w	r0, [sp, #2]
 801e36e:	f8bd 2000 	ldrh.w	r2, [sp]
 801e372:	4290      	cmp	r0, r2
 801e374:	d301      	bcc.n	801e37a <??ATT_Build_Find_Info_Rsp_2>
 801e376:	0010      	movs	r0, r2
 801e378:	d115      	bne.n	801e3a6 <??ATT_Build_Find_Info_Rsp_3>

0801e37a <??ATT_Build_Find_Info_Rsp_2>:
 801e37a:	f8ad 2004 	strh.w	r2, [sp, #4]
 801e37e:	68a8      	ldr	r0, [r5, #8]
 801e380:	2101      	movs	r1, #1
 801e382:	7301      	strb	r1, [r0, #12]
 801e384:	68a8      	ldr	r0, [r5, #8]
 801e386:	2104      	movs	r1, #4
 801e388:	7341      	strb	r1, [r0, #13]
 801e38a:	68a8      	ldr	r0, [r5, #8]
 801e38c:	a901      	add	r1, sp, #4
 801e38e:	f100 020e 	add.w	r2, r0, #14
 801e392:	7808      	ldrb	r0, [r1, #0]
 801e394:	7010      	strb	r0, [r2, #0]
 801e396:	7848      	ldrb	r0, [r1, #1]
 801e398:	2101      	movs	r1, #1
 801e39a:	7050      	strb	r0, [r2, #1]
 801e39c:	68a8      	ldr	r0, [r5, #8]
 801e39e:	7401      	strb	r1, [r0, #16]
 801e3a0:	2105      	movs	r1, #5
 801e3a2:	80e9      	strh	r1, [r5, #6]

0801e3a4 <??ATT_Build_Find_Info_Rsp_1>:
 801e3a4:	e0d0      	b.n	801e548 <?Subroutine7>

0801e3a6 <??ATT_Build_Find_Info_Rsp_3>:
 801e3a6:	460e      	mov	r6, r1
 801e3a8:	8872      	ldrh	r2, [r6, #2]
 801e3aa:	68a8      	ldr	r0, [r5, #8]
 801e3ac:	2100      	movs	r1, #0
 801e3ae:	1d12      	adds	r2, r2, #4
 801e3b0:	b292      	uxth	r2, r2
 801e3b2:	f006 fcd0 	bl	8024d56 <ACL_PM_Resize>
 801e3b6:	b110      	cbz	r0, 801e3be <??ATT_Build_Find_Info_Rsp_4>
 801e3b8:	2095      	movs	r0, #149	; 0x95
 801e3ba:	e8bd 87f6 	ldmia.w	sp!, {r1, r2, r4, r5, r6, r7, r8, r9, sl, pc}

0801e3be <??ATT_Build_Find_Info_Rsp_4>:
 801e3be:	f8bd 0000 	ldrh.w	r0, [sp]
 801e3c2:	f7fe fcd1 	bl	801cd68 <GATT_Find_Srv_Owner_Of_Handle>
 801e3c6:	ea5f 0800 	movs.w	r8, r0
 801e3ca:	d119      	bne.n	801e400 <??ATT_Build_Find_Info_Rsp_5>

0801e3cc <??ATT_Build_Find_Info_Rsp_6>:
 801e3cc:	f8bd 0000 	ldrh.w	r0, [sp]
 801e3d0:	2101      	movs	r1, #1
 801e3d2:	2405      	movs	r4, #5
 801e3d4:	f8ad 0004 	strh.w	r0, [sp, #4]
 801e3d8:	68a8      	ldr	r0, [r5, #8]
 801e3da:	7301      	strb	r1, [r0, #12]
 801e3dc:	68a8      	ldr	r0, [r5, #8]
 801e3de:	2104      	movs	r1, #4
 801e3e0:	7341      	strb	r1, [r0, #13]
 801e3e2:	68a8      	ldr	r0, [r5, #8]
 801e3e4:	a901      	add	r1, sp, #4
 801e3e6:	f100 020e 	add.w	r2, r0, #14
 801e3ea:	7808      	ldrb	r0, [r1, #0]
 801e3ec:	7010      	strb	r0, [r2, #0]
 801e3ee:	7848      	ldrb	r0, [r1, #1]
 801e3f0:	210a      	movs	r1, #10
 801e3f2:	7050      	strb	r0, [r2, #1]
 801e3f4:	68a8      	ldr	r0, [r5, #8]
 801e3f6:	7401      	strb	r1, [r0, #16]

0801e3f8 <??ATT_Build_Find_Info_Rsp_7>:
 801e3f8:	80ec      	strh	r4, [r5, #6]
 801e3fa:	e0a5      	b.n	801e548 <?Subroutine7>

0801e3fc <??ATT_Build_Find_Info_Rsp_8>:
 801e3fc:	f8d8 8000 	ldr.w	r8, [r8]

0801e400 <??ATT_Build_Find_Info_Rsp_5>:
 801e400:	f10a 000c 	add.w	r0, sl, #12
 801e404:	4580      	cmp	r8, r0
 801e406:	f000 809b 	beq.w	801e540 <??ATT_Build_Find_Info_Rsp_9>
 801e40a:	f8b8 0028 	ldrh.w	r0, [r8, #40]	; 0x28
 801e40e:	f8bd 1000 	ldrh.w	r1, [sp]
 801e412:	4288      	cmp	r0, r1
 801e414:	bf24      	itt	cs
 801e416:	f8bd 2002 	ldrhcs.w	r2, [sp, #2]
 801e41a:	4282      	cmpcs	r2, r0
 801e41c:	d328      	bcc.n	801e470 <??ATT_Build_Find_Info_Rsp_10>
 801e41e:	b934      	cbnz	r4, 801e42e <??ATT_Build_Find_Info_Rsp_11>
 801e420:	68a9      	ldr	r1, [r5, #8]
 801e422:	2005      	movs	r0, #5
 801e424:	2701      	movs	r7, #1
 801e426:	7308      	strb	r0, [r1, #12]
 801e428:	68a9      	ldr	r1, [r5, #8]
 801e42a:	2402      	movs	r4, #2
 801e42c:	734f      	strb	r7, [r1, #13]

0801e42e <??ATT_Build_Find_Info_Rsp_11>:
 801e42e:	8870      	ldrh	r0, [r6, #2]
 801e430:	1b00      	subs	r0, r0, r4
 801e432:	2804      	cmp	r0, #4
 801e434:	f0c0 8084 	bcc.w	801e540 <??ATT_Build_Find_Info_Rsp_9>
 801e438:	2f01      	cmp	r7, #1
 801e43a:	f040 8081 	bne.w	801e540 <??ATT_Build_Find_Info_Rsp_9>
 801e43e:	1d21      	adds	r1, r4, #4
 801e440:	f108 0328 	add.w	r3, r8, #40	; 0x28
 801e444:	2202      	movs	r2, #2
 801e446:	b289      	uxth	r1, r1
 801e448:	4628      	mov	r0, r5
 801e44a:	1ca4      	adds	r4, r4, #2
 801e44c:	f006 fcd5 	bl	8024dfa <ACL_PM_Set_Data>
 801e450:	1d21      	adds	r1, r4, #4
 801e452:	f108 032a 	add.w	r3, r8, #42	; 0x2a
 801e456:	2202      	movs	r2, #2
 801e458:	b289      	uxth	r1, r1
 801e45a:	4628      	mov	r0, r5
 801e45c:	f006 fccd 	bl	8024dfa <ACL_PM_Set_Data>
 801e460:	f8b8 0028 	ldrh.w	r0, [r8, #40]	; 0x28
 801e464:	f8bd 1002 	ldrh.w	r1, [sp, #2]
 801e468:	1ca4      	adds	r4, r4, #2
 801e46a:	b2a4      	uxth	r4, r4
 801e46c:	4288      	cmp	r0, r1
 801e46e:	d067      	beq.n	801e540 <??ATT_Build_Find_Info_Rsp_9>

0801e470 <??ATT_Build_Find_Info_Rsp_10>:
 801e470:	f8d8 9020 	ldr.w	r9, [r8, #32]
 801e474:	f108 0020 	add.w	r0, r8, #32
 801e478:	4548      	cmp	r0, r9
 801e47a:	d0c1      	beq.n	801e400 <??ATT_Build_Find_Info_Rsp_5>
 801e47c:	e023      	b.n	801e4c6 <??ATT_Build_Find_Info_Rsp_12>

0801e47e <??ATT_Build_Find_Info_Rsp_13>:
 801e47e:	f109 0308 	add.w	r3, r9, #8
 801e482:	2210      	movs	r2, #16
 801e484:	2108      	movs	r1, #8
 801e486:	4628      	mov	r0, r5
 801e488:	f006 fcb7 	bl	8024dfa <ACL_PM_Set_Data>
 801e48c:	2414      	movs	r4, #20
 801e48e:	e018      	b.n	801e4c2 <??ATT_Build_Find_Info_Rsp_14>

0801e490 <??ATT_Build_Find_Info_Rsp_15>:
 801e490:	68a9      	ldr	r1, [r5, #8]
 801e492:	4607      	mov	r7, r0
 801e494:	2005      	movs	r0, #5
 801e496:	7308      	strb	r0, [r1, #12]
 801e498:	68a8      	ldr	r0, [r5, #8]
 801e49a:	f109 011c 	add.w	r1, r9, #28
 801e49e:	2f01      	cmp	r7, #1
 801e4a0:	7347      	strb	r7, [r0, #13]
 801e4a2:	68a8      	ldr	r0, [r5, #8]
 801e4a4:	f100 020e 	add.w	r2, r0, #14
 801e4a8:	7808      	ldrb	r0, [r1, #0]
 801e4aa:	7010      	strb	r0, [r2, #0]
 801e4ac:	7848      	ldrb	r0, [r1, #1]
 801e4ae:	7050      	strb	r0, [r2, #1]
 801e4b0:	d1e5      	bne.n	801e47e <??ATT_Build_Find_Info_Rsp_13>
 801e4b2:	68a8      	ldr	r0, [r5, #8]
 801e4b4:	2202      	movs	r2, #2
 801e4b6:	f109 0108 	add.w	r1, r9, #8
 801e4ba:	3010      	adds	r0, #16
 801e4bc:	f012 fd13 	bl	8030ee6 <__aeabi_memcpy>
 801e4c0:	2406      	movs	r4, #6

0801e4c2 <??ATT_Build_Find_Info_Rsp_14>:
 801e4c2:	f8d9 9000 	ldr.w	r9, [r9]

0801e4c6 <??ATT_Build_Find_Info_Rsp_12>:
 801e4c6:	f108 0020 	add.w	r0, r8, #32
 801e4ca:	4581      	cmp	r9, r0
 801e4cc:	d096      	beq.n	801e3fc <??ATT_Build_Find_Info_Rsp_8>
 801e4ce:	f8b9 001c 	ldrh.w	r0, [r9, #28]
 801e4d2:	f8bd 1000 	ldrh.w	r1, [sp]
 801e4d6:	4288      	cmp	r0, r1
 801e4d8:	d3f3      	bcc.n	801e4c2 <??ATT_Build_Find_Info_Rsp_14>
 801e4da:	f8bd 2002 	ldrh.w	r2, [sp, #2]
 801e4de:	4282      	cmp	r2, r0
 801e4e0:	d32e      	bcc.n	801e540 <??ATT_Build_Find_Info_Rsp_9>
 801e4e2:	f899 0023 	ldrb.w	r0, [r9, #35]	; 0x23
 801e4e6:	2c00      	cmp	r4, #0
 801e4e8:	d0d2      	beq.n	801e490 <??ATT_Build_Find_Info_Rsp_15>
 801e4ea:	42b8      	cmp	r0, r7
 801e4ec:	d184      	bne.n	801e3f8 <??ATT_Build_Find_Info_Rsp_7>
 801e4ee:	8870      	ldrh	r0, [r6, #2]
 801e4f0:	1b00      	subs	r0, r0, r4
 801e4f2:	2804      	cmp	r0, #4
 801e4f4:	d301      	bcc.n	801e4fa <??ATT_Build_Find_Info_Rsp_16>
 801e4f6:	2f01      	cmp	r7, #1
 801e4f8:	d005      	beq.n	801e506 <??ATT_Build_Find_Info_Rsp_17>

0801e4fa <??ATT_Build_Find_Info_Rsp_16>:
 801e4fa:	2812      	cmp	r0, #18
 801e4fc:	f4ff af7c 	bcc.w	801e3f8 <??ATT_Build_Find_Info_Rsp_7>
 801e500:	2f02      	cmp	r7, #2
 801e502:	f47f af79 	bne.w	801e3f8 <??ATT_Build_Find_Info_Rsp_7>

0801e506 <??ATT_Build_Find_Info_Rsp_17>:
 801e506:	1d21      	adds	r1, r4, #4
 801e508:	f109 031c 	add.w	r3, r9, #28
 801e50c:	2202      	movs	r2, #2
 801e50e:	b289      	uxth	r1, r1
 801e510:	4628      	mov	r0, r5
 801e512:	f006 fc72 	bl	8024dfa <ACL_PM_Set_Data>
 801e516:	1ca4      	adds	r4, r4, #2
 801e518:	1d21      	adds	r1, r4, #4
 801e51a:	2f01      	cmp	r7, #1
 801e51c:	f109 0308 	add.w	r3, r9, #8
 801e520:	d107      	bne.n	801e532 <??ATT_Build_Find_Info_Rsp_18>
 801e522:	2202      	movs	r2, #2
 801e524:	b289      	uxth	r1, r1
 801e526:	4628      	mov	r0, r5
 801e528:	f006 fc67 	bl	8024dfa <ACL_PM_Set_Data>
 801e52c:	1ca4      	adds	r4, r4, #2

0801e52e <??ATT_Build_Find_Info_Rsp_19>:
 801e52e:	b2a4      	uxth	r4, r4
 801e530:	e7c7      	b.n	801e4c2 <??ATT_Build_Find_Info_Rsp_14>

0801e532 <??ATT_Build_Find_Info_Rsp_18>:
 801e532:	2210      	movs	r2, #16
 801e534:	b289      	uxth	r1, r1
 801e536:	4628      	mov	r0, r5
 801e538:	f006 fc5f 	bl	8024dfa <ACL_PM_Set_Data>
 801e53c:	3410      	adds	r4, #16
 801e53e:	e7f6      	b.n	801e52e <??ATT_Build_Find_Info_Rsp_19>

0801e540 <??ATT_Build_Find_Info_Rsp_9>:
 801e540:	2c00      	cmp	r4, #0
 801e542:	f43f af43 	beq.w	801e3cc <??ATT_Build_Find_Info_Rsp_6>
 801e546:	e757      	b.n	801e3f8 <??ATT_Build_Find_Info_Rsp_7>

0801e548 <?Subroutine7>:
 801e548:	2000      	movs	r0, #0
 801e54a:	e8bd 87f6 	ldmia.w	sp!, {r1, r2, r4, r5, r6, r7, r8, r9, sl, pc}

0801e54e <ATT_Build_Error_Rsp>:
 801e54e:	b414      	push	{r2, r4}
 801e550:	689c      	ldr	r4, [r3, #8]
 801e552:	2201      	movs	r2, #1
 801e554:	7322      	strb	r2, [r4, #12]
 801e556:	689a      	ldr	r2, [r3, #8]
 801e558:	7351      	strb	r1, [r2, #13]
 801e55a:	689a      	ldr	r2, [r3, #8]
 801e55c:	f102 040e 	add.w	r4, r2, #14
 801e560:	f89d 2000 	ldrb.w	r2, [sp]
 801e564:	7022      	strb	r2, [r4, #0]
 801e566:	f89d 2001 	ldrb.w	r2, [sp, #1]
 801e56a:	7062      	strb	r2, [r4, #1]
 801e56c:	6899      	ldr	r1, [r3, #8]
 801e56e:	7408      	strb	r0, [r1, #16]
 801e570:	2005      	movs	r0, #5
 801e572:	80d8      	strh	r0, [r3, #6]
 801e574:	bc11      	pop	{r0, r4}
 801e576:	4770      	bx	lr

0801e578 <ATT_Build_Exchg_Mtu_Rsp>:
 801e578:	b51c      	push	{r2, r3, r4, lr}
 801e57a:	4614      	mov	r4, r2
 801e57c:	88ca      	ldrh	r2, [r1, #6]
 801e57e:	2a03      	cmp	r2, #3
 801e580:	d017      	beq.n	801e5b2 <??ATT_Build_Exchg_Mtu_Rsp_0>
 801e582:	2000      	movs	r0, #0
 801e584:	f8ad 0002 	strh.w	r0, [sp, #2]
 801e588:	68a0      	ldr	r0, [r4, #8]
 801e58a:	2101      	movs	r1, #1
 801e58c:	7301      	strb	r1, [r0, #12]
 801e58e:	68a0      	ldr	r0, [r4, #8]
 801e590:	2102      	movs	r1, #2
 801e592:	7341      	strb	r1, [r0, #13]
 801e594:	68a0      	ldr	r0, [r4, #8]
 801e596:	f10d 0102 	add.w	r1, sp, #2
 801e59a:	f100 020e 	add.w	r2, r0, #14
 801e59e:	7808      	ldrb	r0, [r1, #0]
 801e5a0:	7010      	strb	r0, [r2, #0]
 801e5a2:	7848      	ldrb	r0, [r1, #1]
 801e5a4:	2104      	movs	r1, #4
 801e5a6:	7050      	strb	r0, [r2, #1]
 801e5a8:	68a0      	ldr	r0, [r4, #8]
 801e5aa:	7401      	strb	r1, [r0, #16]
 801e5ac:	2105      	movs	r1, #5
 801e5ae:	80e1      	strh	r1, [r4, #6]
 801e5b0:	e02f      	b.n	801e612 <??ATT_Build_Exchg_Mtu_Rsp_1>

0801e5b2 <??ATT_Build_Exchg_Mtu_Rsp_0>:
 801e5b2:	6889      	ldr	r1, [r1, #8]
 801e5b4:	f101 020d 	add.w	r2, r1, #13
 801e5b8:	7811      	ldrb	r1, [r2, #0]
 801e5ba:	f88d 1000 	strb.w	r1, [sp]
 801e5be:	7851      	ldrb	r1, [r2, #1]
 801e5c0:	f88d 1001 	strb.w	r1, [sp, #1]
 801e5c4:	6841      	ldr	r1, [r0, #4]
 801e5c6:	058a      	lsls	r2, r1, #22
 801e5c8:	d416      	bmi.n	801e5f8 <??ATT_Build_Exchg_Mtu_Rsp_2>
 801e5ca:	f8bd 3000 	ldrh.w	r3, [sp]
 801e5ce:	2b17      	cmp	r3, #23
 801e5d0:	bf23      	ittte	cs
 801e5d2:	4a11      	ldrcs	r2, [pc, #68]	; (801e618 <??DataTable7>)
 801e5d4:	f8b2 3206 	ldrhcs.w	r3, [r2, #518]	; 0x206
 801e5d8:	2b17      	cmpcs	r3, #23
 801e5da:	2217      	movcc	r2, #23
 801e5dc:	d304      	bcc.n	801e5e8 <??ATT_Build_Exchg_Mtu_Rsp_3>
 801e5de:	f8bd 2000 	ldrh.w	r2, [sp]
 801e5e2:	429a      	cmp	r2, r3
 801e5e4:	bf88      	it	hi
 801e5e6:	461a      	movhi	r2, r3

0801e5e8 <??ATT_Build_Exchg_Mtu_Rsp_3>:
 801e5e8:	f441 7100 	orr.w	r1, r1, #512	; 0x200
 801e5ec:	6041      	str	r1, [r0, #4]
 801e5ee:	8042      	strh	r2, [r0, #2]
 801e5f0:	8801      	ldrh	r1, [r0, #0]
 801e5f2:	2001      	movs	r0, #1
 801e5f4:	f000 fe63 	bl	801f2be <EVT_aci_att_exchange_mtu_resp>

0801e5f8 <??ATT_Build_Exchg_Mtu_Rsp_2>:
 801e5f8:	68a1      	ldr	r1, [r4, #8]
 801e5fa:	2003      	movs	r0, #3
 801e5fc:	7308      	strb	r0, [r1, #12]
 801e5fe:	68a1      	ldr	r1, [r4, #8]
 801e600:	4806      	ldr	r0, [pc, #24]	; (801e61c <??DataTable7_1>)
 801e602:	f101 020d 	add.w	r2, r1, #13
 801e606:	7801      	ldrb	r1, [r0, #0]
 801e608:	7011      	strb	r1, [r2, #0]
 801e60a:	7841      	ldrb	r1, [r0, #1]
 801e60c:	2003      	movs	r0, #3
 801e60e:	7051      	strb	r1, [r2, #1]
 801e610:	80e0      	strh	r0, [r4, #6]

0801e612 <??ATT_Build_Exchg_Mtu_Rsp_1>:
 801e612:	2000      	movs	r0, #0
 801e614:	bd16      	pop	{r1, r2, r4, pc}
	...

0801e618 <??DataTable7>:
 801e618:	3710 2000                                   .7. 

0801e61c <??DataTable7_1>:
 801e61c:	3916 2000                                   .9. 

0801e620 <ATT_Build_Notif_Or_Ind>:
 801e620:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 801e622:	9c06      	ldr	r4, [sp, #24]
 801e624:	4605      	mov	r5, r0
 801e626:	4616      	mov	r6, r2
 801e628:	b1ac      	cbz	r4, 801e656 <??ATT_Build_Notif_Or_Ind_0>
 801e62a:	68a0      	ldr	r0, [r4, #8]
 801e62c:	1ef2      	subs	r2, r6, #3
 801e62e:	b292      	uxth	r2, r2
 801e630:	f100 070d 	add.w	r7, r0, #13
 801e634:	7808      	ldrb	r0, [r1, #0]
 801e636:	7038      	strb	r0, [r7, #0]
 801e638:	7848      	ldrb	r0, [r1, #1]
 801e63a:	2107      	movs	r1, #7
 801e63c:	7078      	strb	r0, [r7, #1]
 801e63e:	4620      	mov	r0, r4
 801e640:	f006 fbdb 	bl	8024dfa <ACL_PM_Set_Data>
 801e644:	80e6      	strh	r6, [r4, #6]
 801e646:	68a0      	ldr	r0, [r4, #8]
 801e648:	2d01      	cmp	r5, #1
 801e64a:	d102      	bne.n	801e652 <??ATT_Build_Notif_Or_Ind_1>
 801e64c:	211b      	movs	r1, #27
 801e64e:	7301      	strb	r1, [r0, #12]
 801e650:	bdf1      	pop	{r0, r4, r5, r6, r7, pc}

0801e652 <??ATT_Build_Notif_Or_Ind_1>:
 801e652:	221d      	movs	r2, #29
 801e654:	7302      	strb	r2, [r0, #12]

0801e656 <??ATT_Build_Notif_Or_Ind_0>:
 801e656:	bdf1      	pop	{r0, r4, r5, r6, r7, pc}

0801e658 <GATT_Gap_Add_Service>:
 801e658:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 801e65c:	460f      	mov	r7, r1
 801e65e:	4615      	mov	r5, r2
 801e660:	461e      	mov	r6, r3
 801e662:	bf00      	nop
 801e664:	a171      	add	r1, pc, #452	; (adr r1, 801e82c <?_0>)
 801e666:	e9d1 2300 	ldrd	r2, r3, [r1]
 801e66a:	b090      	sub	sp, #64	; 0x40
 801e66c:	4680      	mov	r8, r0
 801e66e:	4c6d      	ldr	r4, [pc, #436]	; (801e824 <??DataTable1>)
 801e670:	a802      	add	r0, sp, #8
 801e672:	f894 4037 	ldrb.w	r4, [r4, #55]	; 0x37
 801e676:	e9c0 2300 	strd	r2, r3, [r0]
 801e67a:	f44f 51c0 	mov.w	r1, #6144	; 0x1800
 801e67e:	2201      	movs	r2, #1
 801e680:	f8ad 102e 	strh.w	r1, [sp, #46]	; 0x2e
 801e684:	f88d 202c 	strb.w	r2, [sp, #44]	; 0x2c
 801e688:	2c00      	cmp	r4, #0
 801e68a:	bf14      	ite	ne
 801e68c:	2209      	movne	r2, #9
 801e68e:	2207      	moveq	r2, #7
 801e690:	2301      	movs	r3, #1
 801e692:	a90b      	add	r1, sp, #44	; 0x2c
 801e694:	f10d 0006 	add.w	r0, sp, #6
 801e698:	f7fc ffdc 	bl	801b654 <GATT_Add_Service_Core>
 801e69c:	2800      	cmp	r0, #0
 801e69e:	f040 80ba 	bne.w	801e816 <??GATT_Gap_Add_Service_0>
 801e6a2:	f8bd 1006 	ldrh.w	r1, [sp, #6]
 801e6a6:	8029      	strh	r1, [r5, #0]
 801e6a8:	f8bd 2006 	ldrh.w	r2, [sp, #6]
 801e6ac:	2101      	movs	r1, #1
 801e6ae:	4d5e      	ldr	r5, [pc, #376]	; (801e828 <??DataTable1_1>)
 801e6b0:	f8ad 2010 	strh.w	r2, [sp, #16]
 801e6b4:	f88d 1012 	strb.w	r1, [sp, #18]
 801e6b8:	2200      	movs	r2, #0
 801e6ba:	f895 0020 	ldrb.w	r0, [r5, #32]
 801e6be:	f88d 2027 	strb.w	r2, [sp, #39]	; 0x27
 801e6c2:	2107      	movs	r1, #7
 801e6c4:	f88d 1029 	strb.w	r1, [sp, #41]	; 0x29
 801e6c8:	f44f 5228 	mov.w	r2, #10752	; 0x2a00
 801e6cc:	f8ad 2014 	strh.w	r2, [sp, #20]
 801e6d0:	f8ad 7024 	strh.w	r7, [sp, #36]	; 0x24
 801e6d4:	0741      	lsls	r1, r0, #29
 801e6d6:	bf4c      	ite	mi
 801e6d8:	2002      	movmi	r0, #2
 801e6da:	200a      	movpl	r0, #10
 801e6dc:	2101      	movs	r1, #1
 801e6de:	f88d 0026 	strb.w	r0, [sp, #38]	; 0x26
 801e6e2:	f88d 1028 	strb.w	r1, [sp, #40]	; 0x28
 801e6e6:	f88d 102a 	strb.w	r1, [sp, #42]	; 0x2a
 801e6ea:	a904      	add	r1, sp, #16
 801e6ec:	a801      	add	r0, sp, #4
 801e6ee:	f7fd f943 	bl	801b978 <GATT_Add_Char_Core>
 801e6f2:	2800      	cmp	r0, #0
 801e6f4:	f040 808f 	bne.w	801e816 <??GATT_Gap_Add_Service_0>
 801e6f8:	f8bd 0004 	ldrh.w	r0, [sp, #4]
 801e6fc:	2f07      	cmp	r7, #7
 801e6fe:	8030      	strh	r0, [r6, #0]
 801e700:	bfc8      	it	gt
 801e702:	2708      	movgt	r7, #8
 801e704:	a802      	add	r0, sp, #8
 801e706:	9000      	str	r0, [sp, #0]
 801e708:	f8bd 1004 	ldrh.w	r1, [sp, #4]
 801e70c:	f8bd 0006 	ldrh.w	r0, [sp, #6]
 801e710:	463b      	mov	r3, r7
 801e712:	2200      	movs	r2, #0
 801e714:	f7fd fd2d 	bl	801c172 <aci_gatt_update_char_value>
 801e718:	2800      	cmp	r0, #0
 801e71a:	d17c      	bne.n	801e816 <??GATT_Gap_Add_Service_0>
 801e71c:	f642 2101 	movw	r1, #10753	; 0x2a01
 801e720:	2202      	movs	r2, #2
 801e722:	f8ad 1014 	strh.w	r1, [sp, #20]
 801e726:	f8ad 2024 	strh.w	r2, [sp, #36]	; 0x24
 801e72a:	8c28      	ldrh	r0, [r5, #32]
 801e72c:	05c1      	lsls	r1, r0, #23
 801e72e:	bf4c      	ite	mi
 801e730:	210a      	movmi	r1, #10
 801e732:	2102      	movpl	r1, #2
 801e734:	f88d 1026 	strb.w	r1, [sp, #38]	; 0x26
 801e738:	2100      	movs	r1, #0
 801e73a:	f88d 102a 	strb.w	r1, [sp, #42]	; 0x2a
 801e73e:	a904      	add	r1, sp, #16
 801e740:	a801      	add	r0, sp, #4
 801e742:	f7fd f919 	bl	801b978 <GATT_Add_Char_Core>
 801e746:	2800      	cmp	r0, #0
 801e748:	d165      	bne.n	801e816 <??GATT_Gap_Add_Service_0>
 801e74a:	9816      	ldr	r0, [sp, #88]	; 0x58
 801e74c:	f8bd 1004 	ldrh.w	r1, [sp, #4]
 801e750:	2302      	movs	r3, #2
 801e752:	2200      	movs	r2, #0
 801e754:	8001      	strh	r1, [r0, #0]
 801e756:	2100      	movs	r1, #0
 801e758:	a802      	add	r0, sp, #8
 801e75a:	f8ad 1008 	strh.w	r1, [sp, #8]
 801e75e:	9000      	str	r0, [sp, #0]
 801e760:	f8bd 1004 	ldrh.w	r1, [sp, #4]
 801e764:	f8bd 0006 	ldrh.w	r0, [sp, #6]
 801e768:	ae02      	add	r6, sp, #8
 801e76a:	f7fd fd02 	bl	801c172 <aci_gatt_update_char_value>
 801e76e:	2800      	cmp	r0, #0
 801e770:	d151      	bne.n	801e816 <??GATT_Gap_Add_Service_0>
 801e772:	ea5f 70c8 	movs.w	r0, r8, lsl #31
 801e776:	d52b      	bpl.n	801e7d0 <??GATT_Gap_Add_Service_1>
 801e778:	f642 2104 	movw	r1, #10756	; 0x2a04
 801e77c:	f8ad 1014 	strh.w	r1, [sp, #20]
 801e780:	2208      	movs	r2, #8
 801e782:	f8ad 2024 	strh.w	r2, [sp, #36]	; 0x24
 801e786:	2102      	movs	r1, #2
 801e788:	f88d 1026 	strb.w	r1, [sp, #38]	; 0x26
 801e78c:	2200      	movs	r2, #0
 801e78e:	f88d 2028 	strb.w	r2, [sp, #40]	; 0x28
 801e792:	a904      	add	r1, sp, #16
 801e794:	a801      	add	r0, sp, #4
 801e796:	f7fd f8ef 	bl	801b978 <GATT_Add_Char_Core>
 801e79a:	2800      	cmp	r0, #0
 801e79c:	d13b      	bne.n	801e816 <??GATT_Gap_Add_Service_0>
 801e79e:	21ff      	movs	r1, #255	; 0xff
 801e7a0:	71f1      	strb	r1, [r6, #7]
 801e7a2:	f88d 100e 	strb.w	r1, [sp, #14]
 801e7a6:	f88d 100b 	strb.w	r1, [sp, #11]
 801e7aa:	70b1      	strb	r1, [r6, #2]
 801e7ac:	7071      	strb	r1, [r6, #1]
 801e7ae:	f88d 1008 	strb.w	r1, [sp, #8]
 801e7b2:	2100      	movs	r1, #0
 801e7b4:	f88d 100d 	strb.w	r1, [sp, #13]
 801e7b8:	a902      	add	r1, sp, #8
 801e7ba:	7130      	strb	r0, [r6, #4]
 801e7bc:	9100      	str	r1, [sp, #0]
 801e7be:	f8bd 1004 	ldrh.w	r1, [sp, #4]
 801e7c2:	f8bd 0006 	ldrh.w	r0, [sp, #6]
 801e7c6:	2308      	movs	r3, #8
 801e7c8:	2200      	movs	r2, #0
 801e7ca:	f7fd fcd2 	bl	801c172 <aci_gatt_update_char_value>
 801e7ce:	bb10      	cbnz	r0, 801e816 <??GATT_Gap_Add_Service_0>

0801e7d0 <??GATT_Gap_Add_Service_1>:
 801e7d0:	b31c      	cbz	r4, 801e81a <??GATT_Gap_Add_Service_2>
 801e7d2:	2101      	movs	r1, #1
 801e7d4:	f8ad 1024 	strh.w	r1, [sp, #36]	; 0x24
 801e7d8:	f642 20a6 	movw	r0, #10918	; 0x2aa6
 801e7dc:	2100      	movs	r1, #0
 801e7de:	f8ad 0014 	strh.w	r0, [sp, #20]
 801e7e2:	2202      	movs	r2, #2
 801e7e4:	f88d 1028 	strb.w	r1, [sp, #40]	; 0x28
 801e7e8:	f88d 102a 	strb.w	r1, [sp, #42]	; 0x2a
 801e7ec:	f88d 2026 	strb.w	r2, [sp, #38]	; 0x26
 801e7f0:	a904      	add	r1, sp, #16
 801e7f2:	a801      	add	r0, sp, #4
 801e7f4:	f7fd f8c0 	bl	801b978 <GATT_Add_Char_Core>
 801e7f8:	b968      	cbnz	r0, 801e816 <??GATT_Gap_Add_Service_0>
 801e7fa:	2001      	movs	r0, #1
 801e7fc:	a902      	add	r1, sp, #8
 801e7fe:	f88d 0008 	strb.w	r0, [sp, #8]
 801e802:	9100      	str	r1, [sp, #0]
 801e804:	f8bd 1004 	ldrh.w	r1, [sp, #4]
 801e808:	f8bd 0006 	ldrh.w	r0, [sp, #6]
 801e80c:	2301      	movs	r3, #1
 801e80e:	2200      	movs	r2, #0
 801e810:	f7fd fcaf 	bl	801c172 <aci_gatt_update_char_value>
 801e814:	b108      	cbz	r0, 801e81a <??GATT_Gap_Add_Service_2>

0801e816 <??GATT_Gap_Add_Service_0>:
 801e816:	2097      	movs	r0, #151	; 0x97
 801e818:	e000      	b.n	801e81c <?Subroutine0>

0801e81a <??GATT_Gap_Add_Service_2>:
 801e81a:	2000      	movs	r0, #0

0801e81c <?Subroutine0>:
 801e81c:	b010      	add	sp, #64	; 0x40
 801e81e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
	...

0801e824 <??DataTable1>:
 801e824:	3710 2000                                   .7. 

0801e828 <??DataTable1_1>:
 801e828:	36e8 2000                                   .6. 

0801e82c <?_0>:
 801e82c:	5453 334d 5732 2142                         STM32WB!

0801e834 <GATT_Fetch_Handle>:
 801e834:	b4f0      	push	{r4, r5, r6, r7}
 801e836:	4604      	mov	r4, r0
 801e838:	68e0      	ldr	r0, [r4, #12]
 801e83a:	e000      	b.n	801e83e <??GATT_Fetch_Handle_0>

0801e83c <??GATT_Fetch_Handle_1>:
 801e83c:	6800      	ldr	r0, [r0, #0]

0801e83e <??GATT_Fetch_Handle_0>:
 801e83e:	f104 050c 	add.w	r5, r4, #12
 801e842:	42a8      	cmp	r0, r5
 801e844:	d018      	beq.n	801e878 <??GATT_Fetch_Handle_2>
 801e846:	8d06      	ldrh	r6, [r0, #40]	; 0x28
 801e848:	428e      	cmp	r6, r1
 801e84a:	d004      	beq.n	801e856 <??GATT_Fetch_Handle_3>
 801e84c:	6018      	str	r0, [r3, #0]
 801e84e:	6a05      	ldr	r5, [r0, #32]
 801e850:	f100 0620 	add.w	r6, r0, #32
 801e854:	e007      	b.n	801e866 <??GATT_Fetch_Handle_4>

0801e856 <??GATT_Fetch_Handle_3>:
 801e856:	6010      	str	r0, [r2, #0]
 801e858:	f104 000c 	add.w	r0, r4, #12
 801e85c:	6018      	str	r0, [r3, #0]
 801e85e:	2001      	movs	r0, #1
 801e860:	bcf0      	pop	{r4, r5, r6, r7}
 801e862:	4770      	bx	lr

0801e864 <??GATT_Fetch_Handle_5>:
 801e864:	682d      	ldr	r5, [r5, #0]

0801e866 <??GATT_Fetch_Handle_4>:
 801e866:	42b5      	cmp	r5, r6
 801e868:	d0e8      	beq.n	801e83c <??GATT_Fetch_Handle_1>
 801e86a:	8baf      	ldrh	r7, [r5, #28]
 801e86c:	428f      	cmp	r7, r1
 801e86e:	d1f9      	bne.n	801e864 <??GATT_Fetch_Handle_5>
 801e870:	6015      	str	r5, [r2, #0]
 801e872:	2002      	movs	r0, #2
 801e874:	bcf0      	pop	{r4, r5, r6, r7}
 801e876:	4770      	bx	lr

0801e878 <??GATT_Fetch_Handle_2>:
 801e878:	2000      	movs	r0, #0
 801e87a:	bcf0      	pop	{r4, r5, r6, r7}
 801e87c:	4770      	bx	lr

0801e87e <GATT_Compute_Database_Hash>:
 801e87e:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 801e882:	b088      	sub	sp, #32
 801e884:	4680      	mov	r8, r0
 801e886:	460c      	mov	r4, r1
 801e888:	4617      	mov	r7, r2
 801e88a:	a904      	add	r1, sp, #16
 801e88c:	2000      	movs	r0, #0
 801e88e:	2200      	movs	r2, #0
 801e890:	2300      	movs	r3, #0
 801e892:	2500      	movs	r5, #0
 801e894:	e881 002d 	stmia.w	r1, {r0, r2, r3, r5}
 801e898:	a804      	add	r0, sp, #16
 801e89a:	f009 f845 	bl	8027928 <BLEPLAT_AesCmacSetKey>
 801e89e:	2600      	movs	r6, #0
 801e8a0:	f8d8 500c 	ldr.w	r5, [r8, #12]
 801e8a4:	e000      	b.n	801e8a8 <??GATT_Compute_Database_Hash_0>

0801e8a6 <??GATT_Compute_Database_Hash_1>:
 801e8a6:	682d      	ldr	r5, [r5, #0]

0801e8a8 <??GATT_Compute_Database_Hash_0>:
 801e8a8:	f108 000c 	add.w	r0, r8, #12
 801e8ac:	4285      	cmp	r5, r0
 801e8ae:	f000 8080 	beq.w	801e9b2 <??GATT_Compute_Database_Hash_2>
 801e8b2:	1cb1      	adds	r1, r6, #2
 801e8b4:	b28a      	uxth	r2, r1
 801e8b6:	f5b2 7f00 	cmp.w	r2, #512	; 0x200
 801e8ba:	d807      	bhi.n	801e8cc <??GATT_Compute_Database_Hash_3>
 801e8bc:	f105 0028 	add.w	r0, r5, #40	; 0x28
 801e8c0:	7803      	ldrb	r3, [r0, #0]
 801e8c2:	b2b6      	uxth	r6, r6
 801e8c4:	19a2      	adds	r2, r4, r6
 801e8c6:	7013      	strb	r3, [r2, #0]
 801e8c8:	7843      	ldrb	r3, [r0, #1]
 801e8ca:	7053      	strb	r3, [r2, #1]

0801e8cc <??GATT_Compute_Database_Hash_3>:
 801e8cc:	1c88      	adds	r0, r1, #2
 801e8ce:	b283      	uxth	r3, r0
 801e8d0:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 801e8d4:	d807      	bhi.n	801e8e6 <??GATT_Compute_Database_Hash_4>
 801e8d6:	f105 022a 	add.w	r2, r5, #42	; 0x2a
 801e8da:	7813      	ldrb	r3, [r2, #0]
 801e8dc:	b289      	uxth	r1, r1
 801e8de:	4421      	add	r1, r4
 801e8e0:	700b      	strb	r3, [r1, #0]
 801e8e2:	7853      	ldrb	r3, [r2, #1]
 801e8e4:	704b      	strb	r3, [r1, #1]

0801e8e6 <??GATT_Compute_Database_Hash_4>:
 801e8e6:	f895 302c 	ldrb.w	r3, [r5, #44]	; 0x2c
 801e8ea:	2b01      	cmp	r3, #1
 801e8ec:	d10d      	bne.n	801e90a <??GATT_Compute_Database_Hash_5>
 801e8ee:	1c86      	adds	r6, r0, #2
 801e8f0:	b2b1      	uxth	r1, r6
 801e8f2:	f5b1 7f00 	cmp.w	r1, #512	; 0x200
 801e8f6:	d815      	bhi.n	801e924 <??GATT_Compute_Database_Hash_6>
 801e8f8:	f105 0108 	add.w	r1, r5, #8
 801e8fc:	780a      	ldrb	r2, [r1, #0]
 801e8fe:	b280      	uxth	r0, r0
 801e900:	4420      	add	r0, r4
 801e902:	7002      	strb	r2, [r0, #0]
 801e904:	784a      	ldrb	r2, [r1, #1]
 801e906:	7042      	strb	r2, [r0, #1]
 801e908:	e00c      	b.n	801e924 <??GATT_Compute_Database_Hash_6>

0801e90a <??GATT_Compute_Database_Hash_5>:
 801e90a:	f100 0610 	add.w	r6, r0, #16
 801e90e:	b2b2      	uxth	r2, r6
 801e910:	f5b2 7f00 	cmp.w	r2, #512	; 0x200
 801e914:	d806      	bhi.n	801e924 <??GATT_Compute_Database_Hash_6>
 801e916:	b280      	uxth	r0, r0
 801e918:	2210      	movs	r2, #16
 801e91a:	f105 0108 	add.w	r1, r5, #8
 801e91e:	4420      	add	r0, r4
 801e920:	f012 fae1 	bl	8030ee6 <__aeabi_memcpy>

0801e924 <??GATT_Compute_Database_Hash_6>:
 801e924:	f8d5 9020 	ldr.w	r9, [r5, #32]
 801e928:	e001      	b.n	801e92e <??GATT_Compute_Database_Hash_7>

0801e92a <??GATT_Compute_Database_Hash_8>:
 801e92a:	2002      	movs	r0, #2
 801e92c:	e014      	b.n	801e958 <??GATT_Compute_Database_Hash_9>

0801e92e <??GATT_Compute_Database_Hash_7>:
 801e92e:	f105 0020 	add.w	r0, r5, #32
 801e932:	4581      	cmp	r9, r0
 801e934:	d0b7      	beq.n	801e8a6 <??GATT_Compute_Database_Hash_1>
 801e936:	f899 1023 	ldrb.w	r1, [r9, #35]	; 0x23
 801e93a:	2901      	cmp	r1, #1
 801e93c:	d136      	bne.n	801e9ac <??GATT_Compute_Database_Hash_10>
 801e93e:	f8b9 0008 	ldrh.w	r0, [r9, #8]
 801e942:	f642 0102 	movw	r1, #10242	; 0x2802
 801e946:	1a40      	subs	r0, r0, r1
 801e948:	2801      	cmp	r0, #1
 801e94a:	d9ee      	bls.n	801e92a <??GATT_Compute_Database_Hash_8>
 801e94c:	38fe      	subs	r0, #254	; 0xfe
 801e94e:	d0ec      	beq.n	801e92a <??GATT_Compute_Database_Hash_8>
 801e950:	1e40      	subs	r0, r0, #1
 801e952:	2804      	cmp	r0, #4
 801e954:	d82a      	bhi.n	801e9ac <??GATT_Compute_Database_Hash_10>
 801e956:	2001      	movs	r0, #1

0801e958 <??GATT_Compute_Database_Hash_9>:
 801e958:	1cb1      	adds	r1, r6, #2
 801e95a:	b28a      	uxth	r2, r1
 801e95c:	f5b2 7f00 	cmp.w	r2, #512	; 0x200
 801e960:	d807      	bhi.n	801e972 <??GATT_Compute_Database_Hash_11>
 801e962:	b2b6      	uxth	r6, r6
 801e964:	f109 021c 	add.w	r2, r9, #28
 801e968:	19a3      	adds	r3, r4, r6
 801e96a:	7816      	ldrb	r6, [r2, #0]
 801e96c:	701e      	strb	r6, [r3, #0]
 801e96e:	7856      	ldrb	r6, [r2, #1]
 801e970:	705e      	strb	r6, [r3, #1]

0801e972 <??GATT_Compute_Database_Hash_11>:
 801e972:	1c8e      	adds	r6, r1, #2
 801e974:	fa1f fc86 	uxth.w	ip, r6
 801e978:	f5bc 7f00 	cmp.w	ip, #512	; 0x200
 801e97c:	d807      	bhi.n	801e98e <??GATT_Compute_Database_Hash_12>
 801e97e:	f109 0208 	add.w	r2, r9, #8
 801e982:	7813      	ldrb	r3, [r2, #0]
 801e984:	b289      	uxth	r1, r1
 801e986:	4421      	add	r1, r4
 801e988:	700b      	strb	r3, [r1, #0]
 801e98a:	7853      	ldrb	r3, [r2, #1]
 801e98c:	704b      	strb	r3, [r1, #1]

0801e98e <??GATT_Compute_Database_Hash_12>:
 801e98e:	2802      	cmp	r0, #2
 801e990:	db0c      	blt.n	801e9ac <??GATT_Compute_Database_Hash_10>
 801e992:	f8b9 201e 	ldrh.w	r2, [r9, #30]
 801e996:	b2b0      	uxth	r0, r6
 801e998:	4420      	add	r0, r4
 801e99a:	1996      	adds	r6, r2, r6
 801e99c:	b2b1      	uxth	r1, r6
 801e99e:	f5b1 7f00 	cmp.w	r1, #512	; 0x200
 801e9a2:	bf9c      	itt	ls
 801e9a4:	f8d9 1018 	ldrls.w	r1, [r9, #24]
 801e9a8:	f012 fa9d 	blls	8030ee6 <__aeabi_memcpy>

0801e9ac <??GATT_Compute_Database_Hash_10>:
 801e9ac:	f8d9 9000 	ldr.w	r9, [r9]
 801e9b0:	e7bd      	b.n	801e92e <??GATT_Compute_Database_Hash_7>

0801e9b2 <??GATT_Compute_Database_Hash_2>:
 801e9b2:	b2b1      	uxth	r1, r6
 801e9b4:	4620      	mov	r0, r4
 801e9b6:	f5b1 7f00 	cmp.w	r1, #512	; 0x200
 801e9ba:	bf28      	it	cs
 801e9bc:	f44f 7600 	movcs.w	r6, #512	; 0x200
 801e9c0:	466a      	mov	r2, sp
 801e9c2:	b2b1      	uxth	r1, r6
 801e9c4:	f008 ffb2 	bl	802792c <BLEPLAT_AesCmacCompute>
 801e9c8:	2210      	movs	r2, #16
 801e9ca:	4669      	mov	r1, sp
 801e9cc:	4638      	mov	r0, r7
 801e9ce:	f006 f84e 	bl	8024a6e <Rev_Memcpy>
 801e9d2:	b009      	add	sp, #36	; 0x24
 801e9d4:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}

0801e9d8 <GATT_Get_Change_Vs_Server_Database>:
 801e9d8:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801e9dc:	4683      	mov	fp, r0
 801e9de:	f5ad 7d0c 	sub.w	sp, sp, #560	; 0x230
 801e9e2:	f44f 7000 	mov.w	r0, #512	; 0x200
 801e9e6:	9001      	str	r0, [sp, #4]
 801e9e8:	f8df 5600 	ldr.w	r5, [pc, #1536]	; 801efec <??DataTable3>
 801e9ec:	f895 0020 	ldrb.w	r0, [r5, #32]
 801e9f0:	f64f 7aff 	movw	sl, #65535	; 0xffff
 801e9f4:	2400      	movs	r4, #0
 801e9f6:	f000 0022 	and.w	r0, r0, #34	; 0x22
 801e9fa:	46d0      	mov	r8, sl
 801e9fc:	f04f 0901 	mov.w	r9, #1
 801ea00:	2820      	cmp	r0, #32
 801ea02:	d105      	bne.n	801ea10 <??GATT_Get_Change_Vs_Server_Database_0>
 801ea04:	aa08      	add	r2, sp, #32
 801ea06:	a90c      	add	r1, sp, #48	; 0x30
 801ea08:	f8df 05e4 	ldr.w	r0, [pc, #1508]	; 801eff0 <??DataTable3_1>
 801ea0c:	f7ff ff37 	bl	801e87e <GATT_Compute_Database_Hash>

0801ea10 <??GATT_Get_Change_Vs_Server_Database_0>:
 801ea10:	f8cd b014 	str.w	fp, [sp, #20]
 801ea14:	f8bb 0000 	ldrh.w	r0, [fp]
 801ea18:	aa0c      	add	r2, sp, #48	; 0x30
 801ea1a:	a901      	add	r1, sp, #4
 801ea1c:	f003 fa9e 	bl	8021f5c <SMP_Retrieve_Gatt_Data>
 801ea20:	0001      	movs	r1, r0
 801ea22:	f040 81b9 	bne.w	801ed98 <??GATT_Get_Change_Vs_Server_Database_1>
 801ea26:	8c28      	ldrh	r0, [r5, #32]
 801ea28:	0681      	lsls	r1, r0, #26
 801ea2a:	d545      	bpl.n	801eab8 <??GATT_Get_Change_Vs_Server_Database_2>
 801ea2c:	0780      	lsls	r0, r0, #30
 801ea2e:	d502      	bpl.n	801ea36 <??GATT_Get_Change_Vs_Server_Database_3>
 801ea30:	46a2      	mov	sl, r4

0801ea32 <??GATT_Get_Change_Vs_Server_Database_4>:
 801ea32:	9c05      	ldr	r4, [sp, #20]
 801ea34:	e00d      	b.n	801ea52 <??GATT_Get_Change_Vs_Server_Database_5>

0801ea36 <??GATT_Get_Change_Vs_Server_Database_3>:
 801ea36:	9801      	ldr	r0, [sp, #4]
 801ea38:	2810      	cmp	r0, #16
 801ea3a:	d340      	bcc.n	801eabe <??GATT_Get_Change_Vs_Server_Database_6>
 801ea3c:	2210      	movs	r2, #16
 801ea3e:	a90c      	add	r1, sp, #48	; 0x30
 801ea40:	a808      	add	r0, sp, #32
 801ea42:	f012 fa7d 	bl	8030f40 <memcmp>
 801ea46:	b108      	cbz	r0, 801ea4c <??GATT_Get_Change_Vs_Server_Database_7>
 801ea48:	46c8      	mov	r8, r9
 801ea4a:	46d1      	mov	r9, sl

0801ea4c <??GATT_Get_Change_Vs_Server_Database_7>:
 801ea4c:	f04f 0a10 	mov.w	sl, #16
 801ea50:	e7ef      	b.n	801ea32 <??GATT_Get_Change_Vs_Server_Database_4>

0801ea52 <??GATT_Get_Change_Vs_Server_Database_5>:
 801ea52:	9801      	ldr	r0, [sp, #4]
 801ea54:	f10a 0103 	add.w	r1, sl, #3
 801ea58:	4288      	cmp	r0, r1
 801ea5a:	f0c0 818e 	bcc.w	801ed7a <??GATT_Get_Change_Vs_Server_Database_8>
 801ea5e:	aa0c      	add	r2, sp, #48	; 0x30
 801ea60:	eb02 000a 	add.w	r0, r2, sl
 801ea64:	f890 b001 	ldrb.w	fp, [r0, #1]
 801ea68:	7801      	ldrb	r1, [r0, #0]
 801ea6a:	ab04      	add	r3, sp, #16
 801ea6c:	aa02      	add	r2, sp, #8
 801ea6e:	ea41 210b 	orr.w	r1, r1, fp, lsl #8
 801ea72:	f8df 057c 	ldr.w	r0, [pc, #1404]	; 801eff0 <??DataTable3_1>
 801ea76:	f7ff fedd 	bl	801e834 <GATT_Fetch_Handle>
 801ea7a:	f8dd b008 	ldr.w	fp, [sp, #8]
 801ea7e:	2802      	cmp	r0, #2
 801ea80:	d115      	bne.n	801eaae <??GATT_Get_Change_Vs_Server_Database_9>
 801ea82:	f89b 0023 	ldrb.w	r0, [fp, #35]	; 0x23
 801ea86:	f10b 0108 	add.w	r1, fp, #8
 801ea8a:	f7fe f9a3 	bl	801cdd4 <GATT_Is_Multiple_Val_Attr>
 801ea8e:	b170      	cbz	r0, 801eaae <??GATT_Get_Change_Vs_Server_Database_9>
 801ea90:	4621      	mov	r1, r4
 801ea92:	4658      	mov	r0, fp
 801ea94:	f7fe f9ad 	bl	801cdf2 <GATT_Find_Attr_Index>
 801ea98:	f8bb 2020 	ldrh.w	r2, [fp, #32]
 801ea9c:	f8db 1018 	ldr.w	r1, [fp, #24]
 801eaa0:	f10d 0332 	add.w	r3, sp, #50	; 0x32
 801eaa4:	4350      	muls	r0, r2
 801eaa6:	f813 b00a 	ldrb.w	fp, [r3, sl]
 801eaaa:	f801 b000 	strb.w	fp, [r1, r0]

0801eaae <??GATT_Get_Change_Vs_Server_Database_9>:
 801eaae:	f10a 0a03 	add.w	sl, sl, #3
 801eab2:	fa1f fa8a 	uxth.w	sl, sl
 801eab6:	e7cc      	b.n	801ea52 <??GATT_Get_Change_Vs_Server_Database_5>

0801eab8 <??GATT_Get_Change_Vs_Server_Database_2>:
 801eab8:	9801      	ldr	r0, [sp, #4]
 801eaba:	2804      	cmp	r0, #4
 801eabc:	d201      	bcs.n	801eac2 <??GATT_Get_Change_Vs_Server_Database_10>

0801eabe <??GATT_Get_Change_Vs_Server_Database_6>:
 801eabe:	2097      	movs	r0, #151	; 0x97
 801eac0:	e16a      	b.n	801ed98 <??GATT_Get_Change_Vs_Server_Database_1>

0801eac2 <??GATT_Get_Change_Vs_Server_Database_10>:
 801eac2:	9a01      	ldr	r2, [sp, #4]
 801eac4:	a90c      	add	r1, sp, #48	; 0x30
 801eac6:	2004      	movs	r0, #4
 801eac8:	440a      	add	r2, r1
 801eaca:	1e51      	subs	r1, r2, #1

0801eacc <??GATT_Get_Change_Vs_Server_Database_11>:
 801eacc:	f811 3901 	ldrb.w	r3, [r1], #-1
 801ead0:	2b0b      	cmp	r3, #11
 801ead2:	d106      	bne.n	801eae2 <??GATT_Get_Change_Vs_Server_Database_12>
 801ead4:	9a01      	ldr	r2, [sp, #4]
 801ead6:	1e40      	subs	r0, r0, #1
 801ead8:	b280      	uxth	r0, r0
 801eada:	1e52      	subs	r2, r2, #1
 801eadc:	9201      	str	r2, [sp, #4]
 801eade:	2800      	cmp	r0, #0
 801eae0:	d1f4      	bne.n	801eacc <??GATT_Get_Change_Vs_Server_Database_11>

0801eae2 <??GATT_Get_Change_Vs_Server_Database_12>:
 801eae2:	f8df 050c 	ldr.w	r0, [pc, #1292]	; 801eff0 <??DataTable3_1>
 801eae6:	2500      	movs	r5, #0
 801eae8:	9007      	str	r0, [sp, #28]

0801eaea <??GATT_Get_Change_Vs_Server_Database_13>:
 801eaea:	a80c      	add	r0, sp, #48	; 0x30
 801eaec:	1946      	adds	r6, r0, r5
 801eaee:	7830      	ldrb	r0, [r6, #0]
 801eaf0:	ab04      	add	r3, sp, #16
 801eaf2:	aa02      	add	r2, sp, #8
 801eaf4:	f88d 0000 	strb.w	r0, [sp]
 801eaf8:	7870      	ldrb	r0, [r6, #1]
 801eafa:	f04f 0a00 	mov.w	sl, #0
 801eafe:	f8df b4f4 	ldr.w	fp, [pc, #1268]	; 801eff4 <??DataTable3_2>
 801eb02:	f88d 0001 	strb.w	r0, [sp, #1]
 801eb06:	f8bd 1000 	ldrh.w	r1, [sp]
 801eb0a:	9807      	ldr	r0, [sp, #28]
 801eb0c:	f7ff fe92 	bl	801e834 <GATT_Fetch_Handle>
 801eb10:	2801      	cmp	r0, #1
 801eb12:	d174      	bne.n	801ebfe <??GATT_Get_Change_Vs_Server_Database_14>
 801eb14:	9f02      	ldr	r7, [sp, #8]
 801eb16:	2c00      	cmp	r4, #0
 801eb18:	f040 8127 	bne.w	801ed6a <??GATT_Get_Change_Vs_Server_Database_15>
 801eb1c:	2202      	movs	r2, #2
 801eb1e:	f107 0128 	add.w	r1, r7, #40	; 0x28
 801eb22:	4630      	mov	r0, r6
 801eb24:	f012 fa0c 	bl	8030f40 <memcmp>
 801eb28:	2800      	cmp	r0, #0
 801eb2a:	bf01      	itttt	eq
 801eb2c:	78b0      	ldrbeq	r0, [r6, #2]
 801eb2e:	f107 0128 	addeq.w	r1, r7, #40	; 0x28
 801eb32:	790a      	ldrbeq	r2, [r1, #4]
 801eb34:	4282      	cmpeq	r2, r0
 801eb36:	d112      	bne.n	801eb5e <??GATT_Get_Change_Vs_Server_Database_16>
 801eb38:	2801      	cmp	r0, #1
 801eb3a:	d107      	bne.n	801eb4c <??GATT_Get_Change_Vs_Server_Database_17>
 801eb3c:	2202      	movs	r2, #2
 801eb3e:	1cf1      	adds	r1, r6, #3
 801eb40:	f107 0008 	add.w	r0, r7, #8
 801eb44:	f012 f9fc 	bl	8030f40 <memcmp>
 801eb48:	b948      	cbnz	r0, 801eb5e <??GATT_Get_Change_Vs_Server_Database_16>
 801eb4a:	e012      	b.n	801eb72 <??GATT_Get_Change_Vs_Server_Database_18>

0801eb4c <??GATT_Get_Change_Vs_Server_Database_17>:
 801eb4c:	2802      	cmp	r0, #2
 801eb4e:	d106      	bne.n	801eb5e <??GATT_Get_Change_Vs_Server_Database_16>
 801eb50:	2210      	movs	r2, #16
 801eb52:	1cf1      	adds	r1, r6, #3
 801eb54:	f107 0008 	add.w	r0, r7, #8
 801eb58:	f012 f9f2 	bl	8030f40 <memcmp>
 801eb5c:	b158      	cbz	r0, 801eb76 <??GATT_Get_Change_Vs_Server_Database_19>

0801eb5e <??GATT_Get_Change_Vs_Server_Database_16>:
 801eb5e:	8d39      	ldrh	r1, [r7, #40]	; 0x28
 801eb60:	4588      	cmp	r8, r1
 801eb62:	bf88      	it	hi
 801eb64:	4688      	movhi	r8, r1
 801eb66:	4589      	cmp	r9, r1
 801eb68:	bf38      	it	cc
 801eb6a:	4689      	movcc	r9, r1
 801eb6c:	78b1      	ldrb	r1, [r6, #2]
 801eb6e:	2901      	cmp	r1, #1
 801eb70:	d101      	bne.n	801eb76 <??GATT_Get_Change_Vs_Server_Database_19>

0801eb72 <??GATT_Get_Change_Vs_Server_Database_18>:
 801eb72:	1d6d      	adds	r5, r5, #5
 801eb74:	e000      	b.n	801eb78 <??GATT_Get_Change_Vs_Server_Database_20>

0801eb76 <??GATT_Get_Change_Vs_Server_Database_19>:
 801eb76:	3513      	adds	r5, #19

0801eb78 <??GATT_Get_Change_Vs_Server_Database_20>:
 801eb78:	9801      	ldr	r0, [sp, #4]
 801eb7a:	b2ad      	uxth	r5, r5
 801eb7c:	4285      	cmp	r5, r0
 801eb7e:	bf28      	it	cs
 801eb80:	2401      	movcs	r4, #1
 801eb82:	d207      	bcs.n	801eb94 <??GATT_Get_Change_Vs_Server_Database_21>
 801eb84:	a80c      	add	r0, sp, #48	; 0x30
 801eb86:	1940      	adds	r0, r0, r5
 801eb88:	7802      	ldrb	r2, [r0, #0]
 801eb8a:	f88d 2000 	strb.w	r2, [sp]
 801eb8e:	7842      	ldrb	r2, [r0, #1]
 801eb90:	f88d 2001 	strb.w	r2, [sp, #1]

0801eb94 <??GATT_Get_Change_Vs_Server_Database_21>:
 801eb94:	f50b 72dc 	add.w	r2, fp, #440	; 0x1b8
 801eb98:	9203      	str	r2, [sp, #12]
 801eb9a:	4297      	cmp	r7, r2
 801eb9c:	f000 80e5 	beq.w	801ed6a <??GATT_Get_Change_Vs_Server_Database_15>
 801eba0:	4620      	mov	r0, r4

0801eba2 <??GATT_Get_Change_Vs_Server_Database_22>:
 801eba2:	6a39      	ldr	r1, [r7, #32]
 801eba4:	e011      	b.n	801ebca <??GATT_Get_Change_Vs_Server_Database_23>

0801eba6 <??GATT_Get_Change_Vs_Server_Database_24>:
 801eba6:	8b8a      	ldrh	r2, [r1, #28]
 801eba8:	f8bd 3000 	ldrh.w	r3, [sp]
 801ebac:	429a      	cmp	r2, r3
 801ebae:	d305      	bcc.n	801ebbc <??GATT_Get_Change_Vs_Server_Database_25>
 801ebb0:	2800      	cmp	r0, #0
 801ebb2:	f000 80b4 	beq.w	801ed1e <??GATT_Get_Change_Vs_Server_Database_26>
 801ebb6:	4293      	cmp	r3, r2
 801ebb8:	f080 80b1 	bcs.w	801ed1e <??GATT_Get_Change_Vs_Server_Database_26>

0801ebbc <??GATT_Get_Change_Vs_Server_Database_25>:
 801ebbc:	4590      	cmp	r8, r2
 801ebbe:	bf88      	it	hi
 801ebc0:	4690      	movhi	r8, r2
 801ebc2:	4591      	cmp	r9, r2
 801ebc4:	bf38      	it	cc
 801ebc6:	4691      	movcc	r9, r2
 801ebc8:	6809      	ldr	r1, [r1, #0]

0801ebca <??GATT_Get_Change_Vs_Server_Database_23>:
 801ebca:	f107 0220 	add.w	r2, r7, #32
 801ebce:	4291      	cmp	r1, r2
 801ebd0:	d1e9      	bne.n	801eba6 <??GATT_Get_Change_Vs_Server_Database_24>
 801ebd2:	683f      	ldr	r7, [r7, #0]
 801ebd4:	9903      	ldr	r1, [sp, #12]
 801ebd6:	428f      	cmp	r7, r1
 801ebd8:	d0dc      	beq.n	801eb94 <??GATT_Get_Change_Vs_Server_Database_21>
 801ebda:	8d39      	ldrh	r1, [r7, #40]	; 0x28
 801ebdc:	f8bd 2000 	ldrh.w	r2, [sp]
 801ebe0:	4291      	cmp	r1, r2
 801ebe2:	d303      	bcc.n	801ebec <??GATT_Get_Change_Vs_Server_Database_27>
 801ebe4:	2800      	cmp	r0, #0
 801ebe6:	d0dc      	beq.n	801eba2 <??GATT_Get_Change_Vs_Server_Database_22>
 801ebe8:	428a      	cmp	r2, r1
 801ebea:	d2da      	bcs.n	801eba2 <??GATT_Get_Change_Vs_Server_Database_22>

0801ebec <??GATT_Get_Change_Vs_Server_Database_27>:
 801ebec:	4588      	cmp	r8, r1
 801ebee:	bf88      	it	hi
 801ebf0:	4688      	movhi	r8, r1
 801ebf2:	4589      	cmp	r9, r1
 801ebf4:	bf38      	it	cc
 801ebf6:	4689      	movcc	r9, r1
 801ebf8:	2800      	cmp	r0, #0
 801ebfa:	d1d2      	bne.n	801eba2 <??GATT_Get_Change_Vs_Server_Database_22>
 801ebfc:	e08f      	b.n	801ed1e <??GATT_Get_Change_Vs_Server_Database_26>

0801ebfe <??GATT_Get_Change_Vs_Server_Database_14>:
 801ebfe:	2802      	cmp	r0, #2
 801ec00:	f040 8091 	bne.w	801ed26 <??GATT_Get_Change_Vs_Server_Database_28>
 801ec04:	9f02      	ldr	r7, [sp, #8]
 801ec06:	2c00      	cmp	r4, #0
 801ec08:	f040 80af 	bne.w	801ed6a <??GATT_Get_Change_Vs_Server_Database_15>
 801ec0c:	78b1      	ldrb	r1, [r6, #2]
 801ec0e:	1cf2      	adds	r2, r6, #3
 801ec10:	9206      	str	r2, [sp, #24]
 801ec12:	9103      	str	r1, [sp, #12]
 801ec14:	2202      	movs	r2, #2
 801ec16:	f107 011c 	add.w	r1, r7, #28
 801ec1a:	4630      	mov	r0, r6
 801ec1c:	f012 f990 	bl	8030f40 <memcmp>
 801ec20:	2800      	cmp	r0, #0
 801ec22:	bf02      	ittt	eq
 801ec24:	f897 0023 	ldrbeq.w	r0, [r7, #35]	; 0x23
 801ec28:	9903      	ldreq	r1, [sp, #12]
 801ec2a:	4288      	cmpeq	r0, r1
 801ec2c:	d108      	bne.n	801ec40 <??GATT_Get_Change_Vs_Server_Database_29>
 801ec2e:	2901      	cmp	r1, #1
 801ec30:	d113      	bne.n	801ec5a <??GATT_Get_Change_Vs_Server_Database_30>
 801ec32:	9906      	ldr	r1, [sp, #24]
 801ec34:	2202      	movs	r2, #2
 801ec36:	f107 0008 	add.w	r0, r7, #8
 801ec3a:	f012 f981 	bl	8030f40 <memcmp>
 801ec3e:	b1b0      	cbz	r0, 801ec6e <??GATT_Get_Change_Vs_Server_Database_31>

0801ec40 <??GATT_Get_Change_Vs_Server_Database_29>:
 801ec40:	8bb9      	ldrh	r1, [r7, #28]
 801ec42:	4588      	cmp	r8, r1
 801ec44:	bf88      	it	hi
 801ec46:	4688      	movhi	r8, r1
 801ec48:	4589      	cmp	r9, r1
 801ec4a:	bf38      	it	cc
 801ec4c:	4689      	movcc	r9, r1

0801ec4e <??GATT_Get_Change_Vs_Server_Database_32>:
 801ec4e:	9903      	ldr	r1, [sp, #12]
 801ec50:	2901      	cmp	r1, #1
 801ec52:	bf0c      	ite	eq
 801ec54:	1d6d      	addeq	r5, r5, #5
 801ec56:	3513      	addne	r5, #19
 801ec58:	e021      	b.n	801ec9e <??GATT_Get_Change_Vs_Server_Database_33>

0801ec5a <??GATT_Get_Change_Vs_Server_Database_30>:
 801ec5a:	2902      	cmp	r1, #2
 801ec5c:	d1f0      	bne.n	801ec40 <??GATT_Get_Change_Vs_Server_Database_29>
 801ec5e:	9906      	ldr	r1, [sp, #24]
 801ec60:	2210      	movs	r2, #16
 801ec62:	f107 0008 	add.w	r0, r7, #8
 801ec66:	f012 f96b 	bl	8030f40 <memcmp>
 801ec6a:	2800      	cmp	r0, #0
 801ec6c:	d1e8      	bne.n	801ec40 <??GATT_Get_Change_Vs_Server_Database_29>

0801ec6e <??GATT_Get_Change_Vs_Server_Database_31>:
 801ec6e:	9803      	ldr	r0, [sp, #12]
 801ec70:	f107 0108 	add.w	r1, r7, #8
 801ec74:	b2c0      	uxtb	r0, r0
 801ec76:	f7fe f8ad 	bl	801cdd4 <GATT_Is_Multiple_Val_Attr>
 801ec7a:	2800      	cmp	r0, #0
 801ec7c:	d0e7      	beq.n	801ec4e <??GATT_Get_Change_Vs_Server_Database_32>
 801ec7e:	9905      	ldr	r1, [sp, #20]
 801ec80:	4638      	mov	r0, r7
 801ec82:	f7fe f8b6 	bl	801cdf2 <GATT_Find_Attr_Index>
 801ec86:	8c3b      	ldrh	r3, [r7, #32]
 801ec88:	f8d7 c018 	ldr.w	ip, [r7, #24]
 801ec8c:	1d71      	adds	r1, r6, #5
 801ec8e:	4358      	muls	r0, r3
 801ec90:	461a      	mov	r2, r3
 801ec92:	4460      	add	r0, ip
 801ec94:	f012 f927 	bl	8030ee6 <__aeabi_memcpy>
 801ec98:	8c38      	ldrh	r0, [r7, #32]
 801ec9a:	1945      	adds	r5, r0, r5
 801ec9c:	e7d7      	b.n	801ec4e <??GATT_Get_Change_Vs_Server_Database_32>

0801ec9e <??GATT_Get_Change_Vs_Server_Database_33>:
 801ec9e:	9801      	ldr	r0, [sp, #4]
 801eca0:	b2ad      	uxth	r5, r5
 801eca2:	4285      	cmp	r5, r0
 801eca4:	bf28      	it	cs
 801eca6:	2401      	movcs	r4, #1
 801eca8:	d207      	bcs.n	801ecba <??GATT_Get_Change_Vs_Server_Database_34>
 801ecaa:	a80c      	add	r0, sp, #48	; 0x30
 801ecac:	1940      	adds	r0, r0, r5
 801ecae:	7802      	ldrb	r2, [r0, #0]
 801ecb0:	f88d 2000 	strb.w	r2, [sp]
 801ecb4:	7842      	ldrb	r2, [r0, #1]
 801ecb6:	f88d 2001 	strb.w	r2, [sp, #1]

0801ecba <??GATT_Get_Change_Vs_Server_Database_34>:
 801ecba:	9904      	ldr	r1, [sp, #16]
 801ecbc:	683a      	ldr	r2, [r7, #0]
 801ecbe:	f50b 73dc 	add.w	r3, fp, #440	; 0x1b8
 801ecc2:	e000      	b.n	801ecc6 <??GATT_Get_Change_Vs_Server_Database_35>

0801ecc4 <??GATT_Get_Change_Vs_Server_Database_36>:
 801ecc4:	4604      	mov	r4, r0

0801ecc6 <??GATT_Get_Change_Vs_Server_Database_35>:
 801ecc6:	4299      	cmp	r1, r3
 801ecc8:	d04f      	beq.n	801ed6a <??GATT_Get_Change_Vs_Server_Database_15>
 801ecca:	4620      	mov	r0, r4
 801eccc:	e00e      	b.n	801ecec <??GATT_Get_Change_Vs_Server_Database_37>

0801ecce <??GATT_Get_Change_Vs_Server_Database_38>:
 801ecce:	8b94      	ldrh	r4, [r2, #28]
 801ecd0:	f8bd b000 	ldrh.w	fp, [sp]
 801ecd4:	455c      	cmp	r4, fp
 801ecd6:	d302      	bcc.n	801ecde <??GATT_Get_Change_Vs_Server_Database_39>
 801ecd8:	b308      	cbz	r0, 801ed1e <??GATT_Get_Change_Vs_Server_Database_26>
 801ecda:	45a3      	cmp	fp, r4
 801ecdc:	d21f      	bcs.n	801ed1e <??GATT_Get_Change_Vs_Server_Database_26>

0801ecde <??GATT_Get_Change_Vs_Server_Database_39>:
 801ecde:	45a0      	cmp	r8, r4
 801ece0:	bf88      	it	hi
 801ece2:	46a0      	movhi	r8, r4
 801ece4:	45a1      	cmp	r9, r4
 801ece6:	bf38      	it	cc
 801ece8:	46a1      	movcc	r9, r4
 801ecea:	6812      	ldr	r2, [r2, #0]

0801ecec <??GATT_Get_Change_Vs_Server_Database_37>:
 801ecec:	f101 0420 	add.w	r4, r1, #32
 801ecf0:	42a2      	cmp	r2, r4
 801ecf2:	d1ec      	bne.n	801ecce <??GATT_Get_Change_Vs_Server_Database_38>
 801ecf4:	6809      	ldr	r1, [r1, #0]
 801ecf6:	4299      	cmp	r1, r3
 801ecf8:	d0e4      	beq.n	801ecc4 <??GATT_Get_Change_Vs_Server_Database_36>
 801ecfa:	8d0c      	ldrh	r4, [r1, #40]	; 0x28
 801ecfc:	f8bd b000 	ldrh.w	fp, [sp]
 801ed00:	6a0a      	ldr	r2, [r1, #32]
 801ed02:	455c      	cmp	r4, fp
 801ed04:	d303      	bcc.n	801ed0e <??GATT_Get_Change_Vs_Server_Database_40>
 801ed06:	2800      	cmp	r0, #0
 801ed08:	d0f0      	beq.n	801ecec <??GATT_Get_Change_Vs_Server_Database_37>
 801ed0a:	45a3      	cmp	fp, r4
 801ed0c:	d2ee      	bcs.n	801ecec <??GATT_Get_Change_Vs_Server_Database_37>

0801ed0e <??GATT_Get_Change_Vs_Server_Database_40>:
 801ed0e:	45a0      	cmp	r8, r4
 801ed10:	bf88      	it	hi
 801ed12:	46a0      	movhi	r8, r4
 801ed14:	45a1      	cmp	r9, r4
 801ed16:	bf38      	it	cc
 801ed18:	46a1      	movcc	r9, r4
 801ed1a:	2800      	cmp	r0, #0
 801ed1c:	d1e6      	bne.n	801ecec <??GATT_Get_Change_Vs_Server_Database_37>

0801ed1e <??GATT_Get_Change_Vs_Server_Database_26>:
 801ed1e:	4604      	mov	r4, r0
 801ed20:	f04f 0a01 	mov.w	sl, #1
 801ed24:	e021      	b.n	801ed6a <??GATT_Get_Change_Vs_Server_Database_15>

0801ed26 <??GATT_Get_Change_Vs_Server_Database_28>:
 801ed26:	f8bd 0000 	ldrh.w	r0, [sp]
 801ed2a:	4580      	cmp	r8, r0
 801ed2c:	bf88      	it	hi
 801ed2e:	4680      	movhi	r8, r0
 801ed30:	4581      	cmp	r9, r0
 801ed32:	bf38      	it	cc
 801ed34:	4681      	movcc	r9, r0
 801ed36:	78b0      	ldrb	r0, [r6, #2]
 801ed38:	2801      	cmp	r0, #1
 801ed3a:	d110      	bne.n	801ed5e <??GATT_Get_Change_Vs_Server_Database_41>
 801ed3c:	7931      	ldrb	r1, [r6, #4]
 801ed3e:	78f0      	ldrb	r0, [r6, #3]
 801ed40:	ea40 2001 	orr.w	r0, r0, r1, lsl #8
 801ed44:	f642 1102 	movw	r1, #10498	; 0x2902
 801ed48:	4288      	cmp	r0, r1
 801ed4a:	bf08      	it	eq
 801ed4c:	1cad      	addeq	r5, r5, #2
 801ed4e:	d004      	beq.n	801ed5a <??GATT_Get_Change_Vs_Server_Database_42>
 801ed50:	f642 3129 	movw	r1, #11049	; 0x2b29
 801ed54:	4288      	cmp	r0, r1
 801ed56:	bf08      	it	eq
 801ed58:	1c6d      	addeq	r5, r5, #1

0801ed5a <??GATT_Get_Change_Vs_Server_Database_42>:
 801ed5a:	1d6d      	adds	r5, r5, #5
 801ed5c:	e000      	b.n	801ed60 <??GATT_Get_Change_Vs_Server_Database_43>

0801ed5e <??GATT_Get_Change_Vs_Server_Database_41>:
 801ed5e:	3513      	adds	r5, #19

0801ed60 <??GATT_Get_Change_Vs_Server_Database_43>:
 801ed60:	9801      	ldr	r0, [sp, #4]
 801ed62:	b2ad      	uxth	r5, r5
 801ed64:	4285      	cmp	r5, r0
 801ed66:	bf28      	it	cs
 801ed68:	2401      	movcs	r4, #1

0801ed6a <??GATT_Get_Change_Vs_Server_Database_15>:
 801ed6a:	9801      	ldr	r0, [sp, #4]
 801ed6c:	1b40      	subs	r0, r0, r5
 801ed6e:	2804      	cmp	r0, #4
 801ed70:	d207      	bcs.n	801ed82 <??GATT_Get_Change_Vs_Server_Database_44>

0801ed72 <??GATT_Get_Change_Vs_Server_Database_45>:
 801ed72:	f1ba 0f00 	cmp.w	sl, #0
 801ed76:	f47f aeb8 	bne.w	801eaea <??GATT_Get_Change_Vs_Server_Database_13>

0801ed7a <??GATT_Get_Change_Vs_Server_Database_8>:
 801ed7a:	45c1      	cmp	r9, r8
 801ed7c:	d205      	bcs.n	801ed8a <??GATT_Get_Change_Vs_Server_Database_46>
 801ed7e:	2091      	movs	r0, #145	; 0x91
 801ed80:	e00a      	b.n	801ed98 <??GATT_Get_Change_Vs_Server_Database_1>

0801ed82 <??GATT_Get_Change_Vs_Server_Database_44>:
 801ed82:	9801      	ldr	r0, [sp, #4]
 801ed84:	4285      	cmp	r5, r0
 801ed86:	d2f4      	bcs.n	801ed72 <??GATT_Get_Change_Vs_Server_Database_45>
 801ed88:	e6af      	b.n	801eaea <??GATT_Get_Change_Vs_Server_Database_13>

0801ed8a <??GATT_Get_Change_Vs_Server_Database_46>:
 801ed8a:	988d      	ldr	r0, [sp, #564]	; 0x234
 801ed8c:	998e      	ldr	r1, [sp, #568]	; 0x238
 801ed8e:	f8a0 8000 	strh.w	r8, [r0]
 801ed92:	2000      	movs	r0, #0
 801ed94:	f8a1 9000 	strh.w	r9, [r1]

0801ed98 <??GATT_Get_Change_Vs_Server_Database_1>:
 801ed98:	f50d 7d0f 	add.w	sp, sp, #572	; 0x23c
 801ed9c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801eda0 <GATT_Store_Server_Database>:
 801eda0:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801eda4:	4607      	mov	r7, r0
 801eda6:	4689      	mov	r9, r1
 801eda8:	4892      	ldr	r0, [pc, #584]	; (801eff4 <??DataTable3_2>)
 801edaa:	f8d0 51b8 	ldr.w	r5, [r0, #440]	; 0x1b8
 801edae:	498f      	ldr	r1, [pc, #572]	; (801efec <??DataTable3>)
 801edb0:	f891 0020 	ldrb.w	r0, [r1, #32]
 801edb4:	2497      	movs	r4, #151	; 0x97
 801edb6:	2600      	movs	r6, #0
 801edb8:	f000 0022 	and.w	r0, r0, #34	; 0x22
 801edbc:	f5ad 7d06 	sub.w	sp, sp, #536	; 0x218
 801edc0:	2820      	cmp	r0, #32
 801edc2:	d10e      	bne.n	801ede2 <??GATT_Store_Server_Database_0>
 801edc4:	aa01      	add	r2, sp, #4
 801edc6:	f10d 0115 	add.w	r1, sp, #21
 801edca:	4889      	ldr	r0, [pc, #548]	; (801eff0 <??DataTable3_1>)
 801edcc:	f7ff fd57 	bl	801e87e <GATT_Compute_Database_Hash>
 801edd0:	2210      	movs	r2, #16
 801edd2:	a901      	add	r1, sp, #4
 801edd4:	a805      	add	r0, sp, #20
 801edd6:	2610      	movs	r6, #16
 801edd8:	f012 f885 	bl	8030ee6 <__aeabi_memcpy>
 801eddc:	e001      	b.n	801ede2 <??GATT_Store_Server_Database_0>

0801edde <??GATT_Store_Server_Database_1>:
 801edde:	9f00      	ldr	r7, [sp, #0]
 801ede0:	682d      	ldr	r5, [r5, #0]

0801ede2 <??GATT_Store_Server_Database_0>:
 801ede2:	4885      	ldr	r0, [pc, #532]	; (801eff8 <??DataTable3_3>)
 801ede4:	4285      	cmp	r5, r0
 801ede6:	f000 80ce 	beq.w	801ef86 <??GATT_Store_Server_Database_2>
 801edea:	4980      	ldr	r1, [pc, #512]	; (801efec <??DataTable3>)
 801edec:	f891 0020 	ldrb.w	r0, [r1, #32]
 801edf0:	f240 2801 	movw	r8, #513	; 0x201
 801edf4:	0681      	lsls	r1, r0, #26
 801edf6:	d439      	bmi.n	801ee6c <??GATT_Store_Server_Database_3>
 801edf8:	1cb0      	adds	r0, r6, #2
 801edfa:	b282      	uxth	r2, r0
 801edfc:	4542      	cmp	r2, r8
 801edfe:	d208      	bcs.n	801ee12 <??GATT_Store_Server_Database_4>
 801ee00:	f105 0128 	add.w	r1, r5, #40	; 0x28
 801ee04:	780b      	ldrb	r3, [r1, #0]
 801ee06:	aa05      	add	r2, sp, #20
 801ee08:	b2b6      	uxth	r6, r6
 801ee0a:	4432      	add	r2, r6
 801ee0c:	7013      	strb	r3, [r2, #0]
 801ee0e:	784b      	ldrb	r3, [r1, #1]
 801ee10:	7053      	strb	r3, [r2, #1]

0801ee12 <??GATT_Store_Server_Database_4>:
 801ee12:	1c43      	adds	r3, r0, #1
 801ee14:	b29c      	uxth	r4, r3
 801ee16:	4544      	cmp	r4, r8
 801ee18:	d206      	bcs.n	801ee28 <??GATT_Store_Server_Database_5>
 801ee1a:	aa05      	add	r2, sp, #20
 801ee1c:	b280      	uxth	r0, r0
 801ee1e:	f105 012c 	add.w	r1, r5, #44	; 0x2c
 801ee22:	4410      	add	r0, r2
 801ee24:	780a      	ldrb	r2, [r1, #0]
 801ee26:	7002      	strb	r2, [r0, #0]

0801ee28 <??GATT_Store_Server_Database_5>:
 801ee28:	f895 102c 	ldrb.w	r1, [r5, #44]	; 0x2c
 801ee2c:	2901      	cmp	r1, #1
 801ee2e:	d10d      	bne.n	801ee4c <??GATT_Store_Server_Database_6>
 801ee30:	1c9e      	adds	r6, r3, #2
 801ee32:	b2b0      	uxth	r0, r6
 801ee34:	4540      	cmp	r0, r8
 801ee36:	d218      	bcs.n	801ee6a <??GATT_Store_Server_Database_7>
 801ee38:	f105 0108 	add.w	r1, r5, #8
 801ee3c:	780a      	ldrb	r2, [r1, #0]
 801ee3e:	a805      	add	r0, sp, #20
 801ee40:	b29b      	uxth	r3, r3
 801ee42:	4418      	add	r0, r3
 801ee44:	7002      	strb	r2, [r0, #0]
 801ee46:	784a      	ldrb	r2, [r1, #1]
 801ee48:	7042      	strb	r2, [r0, #1]
 801ee4a:	e00c      	b.n	801ee66 <??GATT_Store_Server_Database_8>

0801ee4c <??GATT_Store_Server_Database_6>:
 801ee4c:	f103 0610 	add.w	r6, r3, #16
 801ee50:	b2b0      	uxth	r0, r6
 801ee52:	4540      	cmp	r0, r8
 801ee54:	d209      	bcs.n	801ee6a <??GATT_Store_Server_Database_7>
 801ee56:	a805      	add	r0, sp, #20
 801ee58:	b29b      	uxth	r3, r3
 801ee5a:	2210      	movs	r2, #16
 801ee5c:	f105 0108 	add.w	r1, r5, #8
 801ee60:	4418      	add	r0, r3
 801ee62:	f012 f840 	bl	8030ee6 <__aeabi_memcpy>

0801ee66 <??GATT_Store_Server_Database_8>:
 801ee66:	2400      	movs	r4, #0
 801ee68:	e000      	b.n	801ee6c <??GATT_Store_Server_Database_3>

0801ee6a <??GATT_Store_Server_Database_7>:
 801ee6a:	2491      	movs	r4, #145	; 0x91

0801ee6c <??GATT_Store_Server_Database_3>:
 801ee6c:	6a28      	ldr	r0, [r5, #32]
 801ee6e:	9700      	str	r7, [sp, #0]
 801ee70:	4607      	mov	r7, r0
 801ee72:	e014      	b.n	801ee9e <??GATT_Store_Server_Database_9>

0801ee74 <??GATT_Store_Server_Database_10>:
 801ee74:	2491      	movs	r4, #145	; 0x91
 801ee76:	e00a      	b.n	801ee8e <??GATT_Store_Server_Database_11>

0801ee78 <??GATT_Store_Server_Database_12>:
 801ee78:	a805      	add	r0, sp, #20
 801ee7a:	b2b1      	uxth	r1, r6
 801ee7c:	4408      	add	r0, r1
 801ee7e:	4456      	add	r6, sl
 801ee80:	b2b1      	uxth	r1, r6
 801ee82:	4541      	cmp	r1, r8
 801ee84:	d2f6      	bcs.n	801ee74 <??GATT_Store_Server_Database_10>
 801ee86:	4659      	mov	r1, fp
 801ee88:	f012 f82d 	bl	8030ee6 <__aeabi_memcpy>

0801ee8c <??GATT_Store_Server_Database_13>:
 801ee8c:	2400      	movs	r4, #0

0801ee8e <??GATT_Store_Server_Database_11>:
 801ee8e:	ea5f 0009 	movs.w	r0, r9
 801ee92:	d003      	beq.n	801ee9c <??GATT_Store_Server_Database_14>
 801ee94:	4651      	mov	r1, sl
 801ee96:	4658      	mov	r0, fp
 801ee98:	f012 f822 	bl	8030ee0 <__aeabi_memclr>

0801ee9c <??GATT_Store_Server_Database_14>:
 801ee9c:	683f      	ldr	r7, [r7, #0]

0801ee9e <??GATT_Store_Server_Database_9>:
 801ee9e:	f105 0020 	add.w	r0, r5, #32
 801eea2:	4287      	cmp	r7, r0
 801eea4:	d09b      	beq.n	801edde <??GATT_Store_Server_Database_1>
 801eea6:	4951      	ldr	r1, [pc, #324]	; (801efec <??DataTable3>)
 801eea8:	f891 0020 	ldrb.w	r0, [r1, #32]
 801eeac:	0681      	lsls	r1, r0, #26
 801eeae:	d439      	bmi.n	801ef24 <??GATT_Store_Server_Database_15>
 801eeb0:	1cb0      	adds	r0, r6, #2
 801eeb2:	b282      	uxth	r2, r0
 801eeb4:	4542      	cmp	r2, r8
 801eeb6:	d208      	bcs.n	801eeca <??GATT_Store_Server_Database_16>
 801eeb8:	f107 011c 	add.w	r1, r7, #28
 801eebc:	780b      	ldrb	r3, [r1, #0]
 801eebe:	aa05      	add	r2, sp, #20
 801eec0:	b2b6      	uxth	r6, r6
 801eec2:	4432      	add	r2, r6
 801eec4:	7013      	strb	r3, [r2, #0]
 801eec6:	784b      	ldrb	r3, [r1, #1]
 801eec8:	7053      	strb	r3, [r2, #1]

0801eeca <??GATT_Store_Server_Database_16>:
 801eeca:	1c43      	adds	r3, r0, #1
 801eecc:	b29c      	uxth	r4, r3
 801eece:	4544      	cmp	r4, r8
 801eed0:	d206      	bcs.n	801eee0 <??GATT_Store_Server_Database_17>
 801eed2:	aa05      	add	r2, sp, #20
 801eed4:	b280      	uxth	r0, r0
 801eed6:	f107 0123 	add.w	r1, r7, #35	; 0x23
 801eeda:	4410      	add	r0, r2
 801eedc:	780a      	ldrb	r2, [r1, #0]
 801eede:	7002      	strb	r2, [r0, #0]

0801eee0 <??GATT_Store_Server_Database_17>:
 801eee0:	f897 1023 	ldrb.w	r1, [r7, #35]	; 0x23
 801eee4:	2901      	cmp	r1, #1
 801eee6:	d10d      	bne.n	801ef04 <??GATT_Store_Server_Database_18>
 801eee8:	1c9e      	adds	r6, r3, #2
 801eeea:	b2b0      	uxth	r0, r6
 801eeec:	4540      	cmp	r0, r8
 801eeee:	d218      	bcs.n	801ef22 <??GATT_Store_Server_Database_19>
 801eef0:	f107 0108 	add.w	r1, r7, #8
 801eef4:	780a      	ldrb	r2, [r1, #0]
 801eef6:	a805      	add	r0, sp, #20
 801eef8:	b29b      	uxth	r3, r3
 801eefa:	4418      	add	r0, r3
 801eefc:	7002      	strb	r2, [r0, #0]
 801eefe:	784a      	ldrb	r2, [r1, #1]
 801ef00:	7042      	strb	r2, [r0, #1]
 801ef02:	e00c      	b.n	801ef1e <??GATT_Store_Server_Database_20>

0801ef04 <??GATT_Store_Server_Database_18>:
 801ef04:	f103 0610 	add.w	r6, r3, #16
 801ef08:	b2b0      	uxth	r0, r6
 801ef0a:	4540      	cmp	r0, r8
 801ef0c:	d209      	bcs.n	801ef22 <??GATT_Store_Server_Database_19>
 801ef0e:	a805      	add	r0, sp, #20
 801ef10:	b29b      	uxth	r3, r3
 801ef12:	2210      	movs	r2, #16
 801ef14:	f107 0108 	add.w	r1, r7, #8
 801ef18:	4418      	add	r0, r3
 801ef1a:	f011 ffe4 	bl	8030ee6 <__aeabi_memcpy>

0801ef1e <??GATT_Store_Server_Database_20>:
 801ef1e:	2400      	movs	r4, #0
 801ef20:	e000      	b.n	801ef24 <??GATT_Store_Server_Database_15>

0801ef22 <??GATT_Store_Server_Database_19>:
 801ef22:	2491      	movs	r4, #145	; 0x91

0801ef24 <??GATT_Store_Server_Database_15>:
 801ef24:	f897 0023 	ldrb.w	r0, [r7, #35]	; 0x23
 801ef28:	f107 0108 	add.w	r1, r7, #8
 801ef2c:	f7fd ff52 	bl	801cdd4 <GATT_Is_Multiple_Val_Attr>
 801ef30:	2800      	cmp	r0, #0
 801ef32:	d0b3      	beq.n	801ee9c <??GATT_Store_Server_Database_14>
 801ef34:	9900      	ldr	r1, [sp, #0]
 801ef36:	2000      	movs	r0, #0
 801ef38:	f7fd ff5b 	bl	801cdf2 <GATT_Find_Attr_Index>
 801ef3c:	f8b7 a020 	ldrh.w	sl, [r7, #32]
 801ef40:	69b9      	ldr	r1, [r7, #24]
 801ef42:	4652      	mov	r2, sl
 801ef44:	4350      	muls	r0, r2
 801ef46:	eb01 0b00 	add.w	fp, r1, r0
 801ef4a:	4828      	ldr	r0, [pc, #160]	; (801efec <??DataTable3>)
 801ef4c:	f890 3020 	ldrb.w	r3, [r0, #32]
 801ef50:	0698      	lsls	r0, r3, #26
 801ef52:	d591      	bpl.n	801ee78 <??GATT_Store_Server_Database_12>
 801ef54:	1cb0      	adds	r0, r6, #2
 801ef56:	b281      	uxth	r1, r0
 801ef58:	4541      	cmp	r1, r8
 801ef5a:	d208      	bcs.n	801ef6e <??GATT_Store_Server_Database_21>
 801ef5c:	f107 021c 	add.w	r2, r7, #28
 801ef60:	7813      	ldrb	r3, [r2, #0]
 801ef62:	a905      	add	r1, sp, #20
 801ef64:	b2b6      	uxth	r6, r6
 801ef66:	4431      	add	r1, r6
 801ef68:	700b      	strb	r3, [r1, #0]
 801ef6a:	7853      	ldrb	r3, [r2, #1]
 801ef6c:	704b      	strb	r3, [r1, #1]

0801ef6e <??GATT_Store_Server_Database_21>:
 801ef6e:	1c46      	adds	r6, r0, #1
 801ef70:	b2b3      	uxth	r3, r6
 801ef72:	4543      	cmp	r3, r8
 801ef74:	f4bf af7e 	bcs.w	801ee74 <??GATT_Store_Server_Database_10>
 801ef78:	a905      	add	r1, sp, #20
 801ef7a:	b280      	uxth	r0, r0
 801ef7c:	4408      	add	r0, r1
 801ef7e:	f89b 1000 	ldrb.w	r1, [fp]
 801ef82:	7001      	strb	r1, [r0, #0]
 801ef84:	e782      	b.n	801ee8c <??GATT_Store_Server_Database_13>

0801ef86 <??GATT_Store_Server_Database_2>:
 801ef86:	b9bc      	cbnz	r4, 801efb8 <??GATT_Store_Server_Database_22>
 801ef88:	4818      	ldr	r0, [pc, #96]	; (801efec <??DataTable3>)
 801ef8a:	f890 1020 	ldrb.w	r1, [r0, #32]
 801ef8e:	0688      	lsls	r0, r1, #26
 801ef90:	d40d      	bmi.n	801efae <??GATT_Store_Server_Database_23>
 801ef92:	f016 0f03 	tst.w	r6, #3
 801ef96:	d00a      	beq.n	801efae <??GATT_Store_Server_Database_23>
 801ef98:	b2b3      	uxth	r3, r6
 801ef9a:	1d36      	adds	r6, r6, #4
 801ef9c:	f64f 70fc 	movw	r0, #65532	; 0xfffc
 801efa0:	4006      	ands	r6, r0
 801efa2:	ac05      	add	r4, sp, #20
 801efa4:	220b      	movs	r2, #11
 801efa6:	1af1      	subs	r1, r6, r3
 801efa8:	18e0      	adds	r0, r4, r3
 801efaa:	f005 fffb 	bl	8024fa4 <__aeabi_memset>

0801efae <??GATT_Store_Server_Database_23>:
 801efae:	8838      	ldrh	r0, [r7, #0]
 801efb0:	aa05      	add	r2, sp, #20
 801efb2:	b2b1      	uxth	r1, r6
 801efb4:	f002 ffaf 	bl	8021f16 <SMP_Save_Gatt_Data>

0801efb8 <??GATT_Store_Server_Database_22>:
 801efb8:	f50d 7d07 	add.w	sp, sp, #540	; 0x21c
 801efbc:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801efc0 <aci_gatt_store_db>:
 801efc0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 801efc2:	2400      	movs	r4, #0
 801efc4:	2500      	movs	r5, #0
 801efc6:	4e0b      	ldr	r6, [pc, #44]	; (801eff4 <??DataTable3_2>)
 801efc8:	4f08      	ldr	r7, [pc, #32]	; (801efec <??DataTable3>)
 801efca:	e009      	b.n	801efe0 <??aci_gatt_store_db_0>

0801efcc <??aci_gatt_store_db_1>:
 801efcc:	f8d6 020c 	ldr.w	r0, [r6, #524]	; 0x20c
 801efd0:	4428      	add	r0, r5
 801efd2:	8801      	ldrh	r1, [r0, #0]
 801efd4:	b111      	cbz	r1, 801efdc <??aci_gatt_store_db_2>
 801efd6:	2100      	movs	r1, #0
 801efd8:	f7ff fee2 	bl	801eda0 <GATT_Store_Server_Database>

0801efdc <??aci_gatt_store_db_2>:
 801efdc:	1c64      	adds	r4, r4, #1
 801efde:	3524      	adds	r5, #36	; 0x24

0801efe0 <??aci_gatt_store_db_0>:
 801efe0:	7db8      	ldrb	r0, [r7, #22]
 801efe2:	4284      	cmp	r4, r0
 801efe4:	d3f2      	bcc.n	801efcc <??aci_gatt_store_db_1>
 801efe6:	2000      	movs	r0, #0
 801efe8:	bdf2      	pop	{r1, r4, r5, r6, r7, pc}
	...

0801efec <??DataTable3>:
 801efec:	36e8 2000                                   .6. 

0801eff0 <??DataTable3_1>:
 801eff0:	38bc 2000                                   .8. 

0801eff4 <??DataTable3_2>:
 801eff4:	3710 2000                                   .7. 

0801eff8 <??DataTable3_3>:
 801eff8:	38c8 2000                                   .8. 

0801effc <EVT_Init>:
 801effc:	f8df 05c8 	ldr.w	r0, [pc, #1480]	; 801f5c8 <??DataTable32>
 801f000:	f64f 71ff 	movw	r1, #65535	; 0xffff
 801f004:	f8df 25c4 	ldr.w	r2, [pc, #1476]	; 801f5cc <??DataTable32_1>
 801f008:	8001      	strh	r1, [r0, #0]
 801f00a:	6042      	str	r2, [r0, #4]
 801f00c:	4770      	bx	lr

0801f00e <EVT_aci_hal_fw_error>:
 801f00e:	b580      	push	{r7, lr}
 801f010:	f7f8 ff2a 	bl	8017e68 <aci_hal_fw_error_event>
 801f014:	2000      	movs	r0, #0
 801f016:	bd02      	pop	{r1, pc}

0801f018 <EVT_aci_l2cap_connection_update_resp>:
 801f018:	4608      	mov	r0, r1
 801f01a:	4611      	mov	r1, r2
 801f01c:	b510      	push	{r4, lr}
 801f01e:	f8df 25a8 	ldr.w	r2, [pc, #1448]	; 801f5c8 <??DataTable32>
 801f022:	8813      	ldrh	r3, [r2, #0]
 801f024:	059c      	lsls	r4, r3, #22
 801f026:	bf48      	it	mi
 801f028:	f7f9 f819 	blmi	801805e <aci_l2cap_connection_update_resp_event>
 801f02c:	2000      	movs	r0, #0
 801f02e:	bd10      	pop	{r4, pc}

0801f030 <EVT_aci_l2cap_connection_update_req>:
 801f030:	4608      	mov	r0, r1
 801f032:	f8df 1594 	ldr.w	r1, [pc, #1428]	; 801f5c8 <??DataTable32>
 801f036:	b530      	push	{r4, r5, lr}
 801f038:	880b      	ldrh	r3, [r1, #0]
 801f03a:	b083      	sub	sp, #12
 801f03c:	05dc      	lsls	r4, r3, #23
 801f03e:	d51f      	bpl.n	801f080 <??EVT_aci_l2cap_connection_update_req_0>
 801f040:	6891      	ldr	r1, [r2, #8]
 801f042:	7d8a      	ldrb	r2, [r1, #22]
 801f044:	7dcb      	ldrb	r3, [r1, #23]
 801f046:	eb02 2203 	add.w	r2, r2, r3, lsl #8
 801f04a:	b292      	uxth	r2, r2
 801f04c:	9202      	str	r2, [sp, #8]
 801f04e:	7d0a      	ldrb	r2, [r1, #20]
 801f050:	7d4b      	ldrb	r3, [r1, #21]
 801f052:	eb02 2203 	add.w	r2, r2, r3, lsl #8
 801f056:	b292      	uxth	r2, r2
 801f058:	9201      	str	r2, [sp, #4]
 801f05a:	7c8a      	ldrb	r2, [r1, #18]
 801f05c:	7ccb      	ldrb	r3, [r1, #19]
 801f05e:	eb02 2203 	add.w	r2, r2, r3, lsl #8
 801f062:	b292      	uxth	r2, r2
 801f064:	9200      	str	r2, [sp, #0]
 801f066:	7c0a      	ldrb	r2, [r1, #16]
 801f068:	7c4c      	ldrb	r4, [r1, #17]
 801f06a:	7b8d      	ldrb	r5, [r1, #14]
 801f06c:	eb02 2204 	add.w	r2, r2, r4, lsl #8
 801f070:	7bcc      	ldrb	r4, [r1, #15]
 801f072:	7b49      	ldrb	r1, [r1, #13]
 801f074:	b293      	uxth	r3, r2
 801f076:	eb05 2504 	add.w	r5, r5, r4, lsl #8
 801f07a:	b2aa      	uxth	r2, r5
 801f07c:	f7f9 f826 	bl	80180cc <aci_l2cap_connection_update_req_event>

0801f080 <??EVT_aci_l2cap_connection_update_req_0>:
 801f080:	2000      	movs	r0, #0
 801f082:	b003      	add	sp, #12
 801f084:	bd30      	pop	{r4, r5, pc}

0801f086 <EVT_aci_l2cap_command_reject>:
 801f086:	b578      	push	{r3, r4, r5, r6, lr}
 801f088:	b0c1      	sub	sp, #260	; 0x104
 801f08a:	460c      	mov	r4, r1
 801f08c:	4610      	mov	r0, r2
 801f08e:	6881      	ldr	r1, [r0, #8]
 801f090:	7b4d      	ldrb	r5, [r1, #13]
 801f092:	ab01      	add	r3, sp, #4
 801f094:	7b8e      	ldrb	r6, [r1, #14]
 801f096:	7bc9      	ldrb	r1, [r1, #15]
 801f098:	2200      	movs	r2, #0
 801f09a:	eb06 2601 	add.w	r6, r6, r1, lsl #8
 801f09e:	2105      	movs	r1, #5
 801f0a0:	f005 fea1 	bl	8024de6 <ACL_PM_Get_Data>
 801f0a4:	aa01      	add	r2, sp, #4
 801f0a6:	9200      	str	r2, [sp, #0]
 801f0a8:	2300      	movs	r3, #0
 801f0aa:	b2b2      	uxth	r2, r6
 801f0ac:	4629      	mov	r1, r5
 801f0ae:	4620      	mov	r0, r4
 801f0b0:	f7f9 f831 	bl	8018116 <aci_l2cap_command_reject_event>
 801f0b4:	e0ce      	b.n	801f254 <??EVT_aci_gatt_disc_read_char_by_uuid_resp_0>

0801f0b6 <EVT_aci_l2cap_proc_timeout>:
 801f0b6:	4608      	mov	r0, r1
 801f0b8:	f8df 150c 	ldr.w	r1, [pc, #1292]	; 801f5c8 <??DataTable32>
 801f0bc:	b580      	push	{r7, lr}
 801f0be:	880a      	ldrh	r2, [r1, #0]
 801f0c0:	b0c0      	sub	sp, #256	; 0x100
 801f0c2:	0553      	lsls	r3, r2, #21
 801f0c4:	d503      	bpl.n	801f0ce <??EVT_aci_l2cap_proc_timeout_0>
 801f0c6:	466a      	mov	r2, sp
 801f0c8:	2100      	movs	r1, #0
 801f0ca:	f7f8 ffe0 	bl	801808e <aci_l2cap_proc_timeout_event>

0801f0ce <??EVT_aci_l2cap_proc_timeout_0>:
 801f0ce:	2000      	movs	r0, #0
 801f0d0:	b041      	add	sp, #260	; 0x104
 801f0d2:	bd00      	pop	{pc}

0801f0d4 <EVT_aci_gap_limited_discoverable>:
 801f0d4:	f8df 04f0 	ldr.w	r0, [pc, #1264]	; 801f5c8 <??DataTable32>
 801f0d8:	7801      	ldrb	r1, [r0, #0]
 801f0da:	07ca      	lsls	r2, r1, #31
 801f0dc:	bf48      	it	mi
 801f0de:	f7f8 bee3 	bmi.w	8017ea8 <aci_gap_limited_discoverable_event>
 801f0e2:	4770      	bx	lr

0801f0e4 <EVT_aci_gap_proc_complete>:
 801f0e4:	4608      	mov	r0, r1
 801f0e6:	4611      	mov	r1, r2
 801f0e8:	b418      	push	{r3, r4}
 801f0ea:	f8df 24dc 	ldr.w	r2, [pc, #1244]	; 801f5c8 <??DataTable32>
 801f0ee:	7813      	ldrb	r3, [r2, #0]
 801f0f0:	061c      	lsls	r4, r3, #24
 801f0f2:	d505      	bpl.n	801f100 <??EVT_aci_gap_proc_complete_0>
 801f0f4:	b001      	add	sp, #4
 801f0f6:	2300      	movs	r3, #0
 801f0f8:	2200      	movs	r2, #0
 801f0fa:	bc10      	pop	{r4}
 801f0fc:	f7f8 bf49 	b.w	8017f92 <aci_gap_proc_complete_event>

0801f100 <??EVT_aci_gap_proc_complete_0>:
 801f100:	bc11      	pop	{r0, r4}
 801f102:	4770      	bx	lr

0801f104 <EVT_aci_gap_pass_key_req>:
 801f104:	4608      	mov	r0, r1
 801f106:	f8df 14c0 	ldr.w	r1, [pc, #1216]	; 801f5c8 <??DataTable32>
 801f10a:	780a      	ldrb	r2, [r1, #0]
 801f10c:	0753      	lsls	r3, r2, #29
 801f10e:	bf48      	it	mi
 801f110:	f7f8 bef6 	bmi.w	8017f00 <aci_gap_pass_key_req_event>
 801f114:	4770      	bx	lr

0801f116 <EVT_aci_gap_numeric_comparison_value>:
 801f116:	4608      	mov	r0, r1
 801f118:	4611      	mov	r1, r2
 801f11a:	b418      	push	{r3, r4}
 801f11c:	f8df 24a8 	ldr.w	r2, [pc, #1192]	; 801f5c8 <??DataTable32>
 801f120:	8813      	ldrh	r3, [r2, #0]
 801f122:	049c      	lsls	r4, r3, #18
 801f124:	d502      	bpl.n	801f12c <??EVT_aci_gap_numeric_comparison_value_0>
 801f126:	bc14      	pop	{r2, r4}
 801f128:	f7f8 bf68 	b.w	8017ffc <aci_gap_numeric_comparison_value_event>

0801f12c <??EVT_aci_gap_numeric_comparison_value_0>:
 801f12c:	bc11      	pop	{r0, r4}
 801f12e:	4770      	bx	lr

0801f130 <EVT_aci_gap_keypress_notification>:
 801f130:	4608      	mov	r0, r1
 801f132:	4611      	mov	r1, r2
 801f134:	b418      	push	{r3, r4}
 801f136:	f8df 2490 	ldr.w	r2, [pc, #1168]	; 801f5c8 <??DataTable32>
 801f13a:	8813      	ldrh	r3, [r2, #0]
 801f13c:	045c      	lsls	r4, r3, #17
 801f13e:	d502      	bpl.n	801f146 <??EVT_aci_gap_keypress_notification_0>
 801f140:	bc14      	pop	{r2, r4}
 801f142:	f7f8 bf74 	b.w	801802e <aci_gap_keypress_notification_event>

0801f146 <??EVT_aci_gap_keypress_notification_0>:
 801f146:	bc11      	pop	{r0, r4}
 801f148:	4770      	bx	lr

0801f14a <EVT_aci_gap_addr_not_resolved>:
 801f14a:	4608      	mov	r0, r1
 801f14c:	f8df 1478 	ldr.w	r1, [pc, #1144]	; 801f5c8 <??DataTable32>
 801f150:	880a      	ldrh	r2, [r1, #0]
 801f152:	0513      	lsls	r3, r2, #20
 801f154:	bf48      	it	mi
 801f156:	f7f8 bf3c 	bmi.w	8017fd2 <aci_gap_addr_not_resolved_event>
 801f15a:	4770      	bx	lr

0801f15c <EVT_aci_gap_slave_security_initiated>:
 801f15c:	f8df 0468 	ldr.w	r0, [pc, #1128]	; 801f5c8 <??DataTable32>
 801f160:	7801      	ldrb	r1, [r0, #0]
 801f162:	06ca      	lsls	r2, r1, #27
 801f164:	bf48      	it	mi
 801f166:	f7f8 bef1 	bmi.w	8017f4c <aci_gap_slave_security_initiated_event>
 801f16a:	4770      	bx	lr

0801f16c <EVT_aci_gap_bond_lost>:
 801f16c:	f8df 0458 	ldr.w	r0, [pc, #1112]	; 801f5c8 <??DataTable32>
 801f170:	7801      	ldrb	r1, [r0, #0]
 801f172:	068a      	lsls	r2, r1, #26
 801f174:	bf48      	it	mi
 801f176:	f7f8 befa 	bmi.w	8017f6e <aci_gap_bond_lost_event>
 801f17a:	4770      	bx	lr

0801f17c <EVT_aci_gap_pairing_complete>:
 801f17c:	4608      	mov	r0, r1
 801f17e:	4611      	mov	r1, r2
 801f180:	461a      	mov	r2, r3
 801f182:	b430      	push	{r4, r5}
 801f184:	f8df 3440 	ldr.w	r3, [pc, #1088]	; 801f5c8 <??DataTable32>
 801f188:	781c      	ldrb	r4, [r3, #0]
 801f18a:	07a5      	lsls	r5, r4, #30
 801f18c:	d502      	bpl.n	801f194 <??EVT_aci_gap_pairing_complete_0>
 801f18e:	bc30      	pop	{r4, r5}
 801f190:	f7f8 be9c 	b.w	8017ecc <aci_gap_pairing_complete_event>

0801f194 <??EVT_aci_gap_pairing_complete_0>:
 801f194:	bc30      	pop	{r4, r5}
 801f196:	4770      	bx	lr

0801f198 <EVT_aci_gap_authorization_req>:
 801f198:	4608      	mov	r0, r1
 801f19a:	f8df 142c 	ldr.w	r1, [pc, #1068]	; 801f5c8 <??DataTable32>
 801f19e:	780a      	ldrb	r2, [r1, #0]
 801f1a0:	0713      	lsls	r3, r2, #28
 801f1a2:	bf48      	it	mi
 801f1a4:	f7f8 bebf 	bmi.w	8017f26 <aci_gap_authorization_req_event>
 801f1a8:	4770      	bx	lr

0801f1aa <EVT_aci_gatt_tx_pool_available>:
 801f1aa:	4608      	mov	r0, r1
 801f1ac:	4611      	mov	r1, r2
 801f1ae:	f7f9 ba5b 	b.w	8018668 <aci_gatt_tx_pool_available_event>

0801f1b2 <EVT_aci_gatt_server_confirmation>:
 801f1b2:	4608      	mov	r0, r1
 801f1b4:	f7f9 ba70 	b.w	8018698 <aci_gatt_server_confirmation_event>

0801f1b8 <EVT_aci_gatt_proc_complete>:
 801f1b8:	4608      	mov	r0, r1
 801f1ba:	4611      	mov	r1, r2
 801f1bc:	f8df 2408 	ldr.w	r2, [pc, #1032]	; 801f5c8 <??DataTable32>
 801f1c0:	6853      	ldr	r3, [r2, #4]
 801f1c2:	03da      	lsls	r2, r3, #15
 801f1c4:	bf48      	it	mi
 801f1c6:	f7f9 b997 	bmi.w	80184f8 <aci_gatt_proc_complete_event>
 801f1ca:	2000      	movs	r0, #0
 801f1cc:	4770      	bx	lr

0801f1ce <EVT_aci_gatt_proc_timeout>:
 801f1ce:	4608      	mov	r0, r1
 801f1d0:	f8df 13f4 	ldr.w	r1, [pc, #1012]	; 801f5c8 <??DataTable32>
 801f1d4:	790a      	ldrb	r2, [r1, #4]
 801f1d6:	0791      	lsls	r1, r2, #30
 801f1d8:	bf48      	it	mi
 801f1da:	f7f8 bfe4 	bmi.w	80181a6 <aci_gatt_proc_timeout_event>
 801f1de:	2000      	movs	r0, #0
 801f1e0:	4770      	bx	lr

0801f1e2 <EVT_aci_gatt_error_resp>:
 801f1e2:	4608      	mov	r0, r1
 801f1e4:	b538      	push	{r3, r4, r5, lr}
 801f1e6:	f8df 13e0 	ldr.w	r1, [pc, #992]	; 801f5c8 <??DataTable32>
 801f1ea:	684a      	ldr	r2, [r1, #4]
 801f1ec:	0411      	lsls	r1, r2, #16
 801f1ee:	d510      	bpl.n	801f212 <??EVT_aci_gatt_error_resp_0>
 801f1f0:	6882      	ldr	r2, [r0, #8]
 801f1f2:	f102 030e 	add.w	r3, r2, #14
 801f1f6:	781d      	ldrb	r5, [r3, #0]
 801f1f8:	7b51      	ldrb	r1, [r2, #13]
 801f1fa:	f88d 5000 	strb.w	r5, [sp]
 801f1fe:	785d      	ldrb	r5, [r3, #1]
 801f200:	f88d 5001 	strb.w	r5, [sp, #1]
 801f204:	7c13      	ldrb	r3, [r2, #16]
 801f206:	f8bd 2000 	ldrh.w	r2, [sp]
 801f20a:	8880      	ldrh	r0, [r0, #4]
 801f20c:	f7f9 f98c 	bl	8018528 <aci_gatt_error_resp_event>
 801f210:	bd26      	pop	{r1, r2, r5, pc}

0801f212 <??EVT_aci_gatt_error_resp_0>:
 801f212:	2000      	movs	r0, #0
 801f214:	bd26      	pop	{r1, r2, r5, pc}

0801f216 <EVT_aci_gatt_disc_read_char_by_uuid_resp>:
 801f216:	b578      	push	{r3, r4, r5, r6, lr}
 801f218:	b0c1      	sub	sp, #260	; 0x104
 801f21a:	460c      	mov	r4, r1
 801f21c:	461d      	mov	r5, r3
 801f21e:	1e96      	subs	r6, r2, #2
 801f220:	466b      	mov	r3, sp
 801f222:	2202      	movs	r2, #2
 801f224:	1d21      	adds	r1, r4, #4
 801f226:	4628      	mov	r0, r5
 801f228:	f005 fddd 	bl	8024de6 <ACL_PM_Get_Data>
 801f22c:	ab01      	add	r3, sp, #4
 801f22e:	b2f2      	uxtb	r2, r6
 801f230:	1da1      	adds	r1, r4, #6
 801f232:	4628      	mov	r0, r5
 801f234:	f005 fdd7 	bl	8024de6 <ACL_PM_Get_Data>
 801f238:	f8df 038c 	ldr.w	r0, [pc, #908]	; 801f5c8 <??DataTable32>
 801f23c:	6841      	ldr	r1, [r0, #4]
 801f23e:	0388      	lsls	r0, r1, #14
 801f240:	d508      	bpl.n	801f254 <??EVT_aci_gatt_disc_read_char_by_uuid_resp_0>
 801f242:	f8bd 1000 	ldrh.w	r1, [sp]
 801f246:	88a8      	ldrh	r0, [r5, #4]
 801f248:	ab01      	add	r3, sp, #4
 801f24a:	b2f2      	uxtb	r2, r6
 801f24c:	f7f9 f988 	bl	8018560 <aci_gatt_disc_read_char_by_uuid_resp_event>
 801f250:	b042      	add	sp, #264	; 0x108
 801f252:	bd70      	pop	{r4, r5, r6, pc}

0801f254 <??EVT_aci_gatt_disc_read_char_by_uuid_resp_0>:
 801f254:	2000      	movs	r0, #0
 801f256:	b042      	add	sp, #264	; 0x108
 801f258:	bd70      	pop	{r4, r5, r6, pc}

0801f25a <EVT_aci_gatt_read_permit_req>:
 801f25a:	8898      	ldrh	r0, [r3, #4]
 801f25c:	f7f9 b9c6 	b.w	80185ec <aci_gatt_read_permit_req_event>

0801f260 <EVT_aci_gatt_read_multi_permit_req>:
 801f260:	8898      	ldrh	r0, [r3, #4]
 801f262:	0849      	lsrs	r1, r1, #1
 801f264:	f7f9 b9dc 	b.w	8018620 <aci_gatt_read_multi_permit_req_event>

0801f268 <EVT_aci_gatt_write_permit_req>:
 801f268:	b570      	push	{r4, r5, r6, lr}
 801f26a:	b0c0      	sub	sp, #256	; 0x100
 801f26c:	9e44      	ldr	r6, [sp, #272]	; 0x110
 801f26e:	460c      	mov	r4, r1
 801f270:	4611      	mov	r1, r2
 801f272:	461d      	mov	r5, r3
 801f274:	466b      	mov	r3, sp
 801f276:	462a      	mov	r2, r5
 801f278:	1d09      	adds	r1, r1, #4
 801f27a:	4630      	mov	r0, r6
 801f27c:	f005 fdb3 	bl	8024de6 <ACL_PM_Get_Data>
 801f280:	88b0      	ldrh	r0, [r6, #4]
 801f282:	466b      	mov	r3, sp
 801f284:	462a      	mov	r2, r5
 801f286:	4621      	mov	r1, r4
 801f288:	f7f9 f98f 	bl	80185aa <aci_gatt_write_permit_req_event>
 801f28c:	b040      	add	sp, #256	; 0x100
 801f28e:	bd70      	pop	{r4, r5, r6, pc}

0801f290 <EVT_aci_gatt_prepare_write_permit_req>:
 801f290:	b5f0      	push	{r4, r5, r6, r7, lr}
 801f292:	b0c1      	sub	sp, #260	; 0x104
 801f294:	9c46      	ldr	r4, [sp, #280]	; 0x118
 801f296:	9f47      	ldr	r7, [sp, #284]	; 0x11c
 801f298:	460d      	mov	r5, r1
 801f29a:	4616      	mov	r6, r2
 801f29c:	4619      	mov	r1, r3
 801f29e:	ab01      	add	r3, sp, #4
 801f2a0:	4622      	mov	r2, r4
 801f2a2:	1d09      	adds	r1, r1, #4
 801f2a4:	4638      	mov	r0, r7
 801f2a6:	f005 fd9e 	bl	8024de6 <ACL_PM_Get_Data>
 801f2aa:	aa01      	add	r2, sp, #4
 801f2ac:	9200      	str	r2, [sp, #0]
 801f2ae:	88b8      	ldrh	r0, [r7, #4]
 801f2b0:	4623      	mov	r3, r4
 801f2b2:	4632      	mov	r2, r6
 801f2b4:	4629      	mov	r1, r5
 801f2b6:	f7f9 fa0a 	bl	80186ce <aci_gatt_prepare_write_permit_req_event>
 801f2ba:	b041      	add	sp, #260	; 0x104
 801f2bc:	bdf0      	pop	{r4, r5, r6, r7, pc}

0801f2be <EVT_aci_att_exchange_mtu_resp>:
 801f2be:	4608      	mov	r0, r1
 801f2c0:	4611      	mov	r1, r2
 801f2c2:	4ac1      	ldr	r2, [pc, #772]	; (801f5c8 <??DataTable32>)
 801f2c4:	7913      	ldrb	r3, [r2, #4]
 801f2c6:	075a      	lsls	r2, r3, #29
 801f2c8:	bf48      	it	mi
 801f2ca:	f7f8 bf80 	bmi.w	80181ce <aci_att_exchange_mtu_resp_event>
 801f2ce:	2000      	movs	r0, #0
 801f2d0:	4770      	bx	lr

0801f2d2 <EVT_aci_att_read_by_type_resp>:
 801f2d2:	48bd      	ldr	r0, [pc, #756]	; (801f5c8 <??DataTable32>)
 801f2d4:	b570      	push	{r4, r5, r6, lr}
 801f2d6:	460c      	mov	r4, r1
 801f2d8:	7901      	ldrb	r1, [r0, #4]
 801f2da:	b0c0      	sub	sp, #256	; 0x100
 801f2dc:	0688      	lsls	r0, r1, #26
 801f2de:	d511      	bpl.n	801f304 <??EVT_aci_att_read_by_type_resp_0>
 801f2e0:	68a1      	ldr	r1, [r4, #8]
 801f2e2:	88e6      	ldrh	r6, [r4, #6]
 801f2e4:	7b4d      	ldrb	r5, [r1, #13]
 801f2e6:	466b      	mov	r3, sp
 801f2e8:	1eb6      	subs	r6, r6, #2
 801f2ea:	b2f2      	uxtb	r2, r6
 801f2ec:	2106      	movs	r1, #6
 801f2ee:	4620      	mov	r0, r4
 801f2f0:	f005 fd79 	bl	8024de6 <ACL_PM_Get_Data>
 801f2f4:	88a0      	ldrh	r0, [r4, #4]
 801f2f6:	466b      	mov	r3, sp
 801f2f8:	b2f2      	uxtb	r2, r6
 801f2fa:	4629      	mov	r1, r5
 801f2fc:	f7f8 ffca 	bl	8018294 <aci_att_read_by_type_resp_event>
 801f300:	b040      	add	sp, #256	; 0x100
 801f302:	bd70      	pop	{r4, r5, r6, pc}

0801f304 <??EVT_aci_att_read_by_type_resp_0>:
 801f304:	e018      	b.n	801f338 <??EVT_aci_att_find_info_resp_0>

0801f306 <EVT_aci_att_find_info_resp>:
 801f306:	48b0      	ldr	r0, [pc, #704]	; (801f5c8 <??DataTable32>)
 801f308:	b570      	push	{r4, r5, r6, lr}
 801f30a:	460c      	mov	r4, r1
 801f30c:	7901      	ldrb	r1, [r0, #4]
 801f30e:	b0c0      	sub	sp, #256	; 0x100
 801f310:	0708      	lsls	r0, r1, #28
 801f312:	d511      	bpl.n	801f338 <??EVT_aci_att_find_info_resp_0>
 801f314:	88e1      	ldrh	r1, [r4, #6]
 801f316:	68a0      	ldr	r0, [r4, #8]
 801f318:	1e8d      	subs	r5, r1, #2
 801f31a:	466b      	mov	r3, sp
 801f31c:	7b46      	ldrb	r6, [r0, #13]
 801f31e:	b2ea      	uxtb	r2, r5
 801f320:	2106      	movs	r1, #6
 801f322:	4620      	mov	r0, r4
 801f324:	f005 fd5f 	bl	8024de6 <ACL_PM_Get_Data>
 801f328:	88a0      	ldrh	r0, [r4, #4]
 801f32a:	466b      	mov	r3, sp
 801f32c:	b2ea      	uxtb	r2, r5
 801f32e:	4631      	mov	r1, r6
 801f330:	f7f8 ff65 	bl	80181fe <aci_att_find_info_resp_event>
 801f334:	b040      	add	sp, #256	; 0x100
 801f336:	bd70      	pop	{r4, r5, r6, pc}

0801f338 <??EVT_aci_att_find_info_resp_0>:
 801f338:	2000      	movs	r0, #0
 801f33a:	b040      	add	sp, #256	; 0x100
 801f33c:	bd70      	pop	{r4, r5, r6, pc}

0801f33e <EVT_aci_att_find_by_type_value_resp>:
 801f33e:	48a2      	ldr	r0, [pc, #648]	; (801f5c8 <??DataTable32>)
 801f340:	b538      	push	{r3, r4, r5, lr}
 801f342:	460c      	mov	r4, r1
 801f344:	7901      	ldrb	r1, [r0, #4]
 801f346:	b0c0      	sub	sp, #256	; 0x100
 801f348:	06c8      	lsls	r0, r1, #27
 801f34a:	d50f      	bpl.n	801f36c <??EVT_aci_att_find_by_type_value_resp_0>
 801f34c:	88e5      	ldrh	r5, [r4, #6]
 801f34e:	466b      	mov	r3, sp
 801f350:	2105      	movs	r1, #5
 801f352:	1e6d      	subs	r5, r5, #1
 801f354:	b2ed      	uxtb	r5, r5
 801f356:	462a      	mov	r2, r5
 801f358:	4620      	mov	r0, r4
 801f35a:	f005 fd44 	bl	8024de6 <ACL_PM_Get_Data>
 801f35e:	88a0      	ldrh	r0, [r4, #4]
 801f360:	466a      	mov	r2, sp
 801f362:	08a9      	lsrs	r1, r5, #2
 801f364:	f7f8 ff6d 	bl	8018242 <aci_att_find_by_type_value_resp_event>
 801f368:	b041      	add	sp, #260	; 0x104
 801f36a:	bd30      	pop	{r4, r5, pc}

0801f36c <??EVT_aci_att_find_by_type_value_resp_0>:
 801f36c:	e095      	b.n	801f49a <??EVT_GATT_Read_Resp_0>

0801f36e <EVT_aci_att_read_by_group_type_resp>:
 801f36e:	4896      	ldr	r0, [pc, #600]	; (801f5c8 <??DataTable32>)
 801f370:	b570      	push	{r4, r5, r6, lr}
 801f372:	460c      	mov	r4, r1
 801f374:	6841      	ldr	r1, [r0, #4]
 801f376:	b0c0      	sub	sp, #256	; 0x100
 801f378:	0588      	lsls	r0, r1, #22
 801f37a:	d511      	bpl.n	801f3a0 <??EVT_aci_att_read_by_group_type_resp_0>
 801f37c:	88e1      	ldrh	r1, [r4, #6]
 801f37e:	68a0      	ldr	r0, [r4, #8]
 801f380:	1e8d      	subs	r5, r1, #2
 801f382:	466b      	mov	r3, sp
 801f384:	7b46      	ldrb	r6, [r0, #13]
 801f386:	b2ea      	uxtb	r2, r5
 801f388:	2106      	movs	r1, #6
 801f38a:	4620      	mov	r0, r4
 801f38c:	f005 fd2b 	bl	8024de6 <ACL_PM_Get_Data>
 801f390:	88a0      	ldrh	r0, [r4, #4]
 801f392:	466b      	mov	r3, sp
 801f394:	b2ea      	uxtb	r2, r5
 801f396:	4631      	mov	r1, r6
 801f398:	f7f9 f807 	bl	80183aa <aci_att_read_by_group_type_resp_event>
 801f39c:	b040      	add	sp, #256	; 0x100
 801f39e:	bd70      	pop	{r4, r5, r6, pc}

0801f3a0 <??EVT_aci_att_read_by_group_type_resp_0>:
 801f3a0:	e7ca      	b.n	801f338 <??EVT_aci_att_find_info_resp_0>

0801f3a2 <EVT_aci_att_prepare_write_resp>:
 801f3a2:	4889      	ldr	r0, [pc, #548]	; (801f5c8 <??DataTable32>)
 801f3a4:	b570      	push	{r4, r5, r6, lr}
 801f3a6:	460c      	mov	r4, r1
 801f3a8:	6841      	ldr	r1, [r0, #4]
 801f3aa:	b0c2      	sub	sp, #264	; 0x108
 801f3ac:	0508      	lsls	r0, r1, #20
 801f3ae:	d522      	bpl.n	801f3f6 <??EVT_aci_att_prepare_write_resp_0>
 801f3b0:	88e1      	ldrh	r1, [r4, #6]
 801f3b2:	68a0      	ldr	r0, [r4, #8]
 801f3b4:	f10d 0206 	add.w	r2, sp, #6
 801f3b8:	1f4d      	subs	r5, r1, #5
 801f3ba:	f100 010d 	add.w	r1, r0, #13
 801f3be:	780b      	ldrb	r3, [r1, #0]
 801f3c0:	ae01      	add	r6, sp, #4
 801f3c2:	7013      	strb	r3, [r2, #0]
 801f3c4:	784b      	ldrb	r3, [r1, #1]
 801f3c6:	7053      	strb	r3, [r2, #1]
 801f3c8:	f810 1f0f 	ldrb.w	r1, [r0, #15]!
 801f3cc:	ab02      	add	r3, sp, #8
 801f3ce:	b2ea      	uxtb	r2, r5
 801f3d0:	7031      	strb	r1, [r6, #0]
 801f3d2:	7841      	ldrb	r1, [r0, #1]
 801f3d4:	4620      	mov	r0, r4
 801f3d6:	7071      	strb	r1, [r6, #1]
 801f3d8:	2109      	movs	r1, #9
 801f3da:	f005 fd04 	bl	8024de6 <ACL_PM_Get_Data>
 801f3de:	aa02      	add	r2, sp, #8
 801f3e0:	9200      	str	r2, [sp, #0]
 801f3e2:	f8bd 2004 	ldrh.w	r2, [sp, #4]
 801f3e6:	f8bd 1006 	ldrh.w	r1, [sp, #6]
 801f3ea:	88a0      	ldrh	r0, [r4, #4]
 801f3ec:	b2eb      	uxtb	r3, r5
 801f3ee:	f7f9 f801 	bl	80183f4 <aci_att_prepare_write_resp_event>
 801f3f2:	b042      	add	sp, #264	; 0x108
 801f3f4:	bd70      	pop	{r4, r5, r6, pc}

0801f3f6 <??EVT_aci_att_prepare_write_resp_0>:
 801f3f6:	e72d      	b.n	801f254 <??EVT_aci_gatt_disc_read_char_by_uuid_resp_0>

0801f3f8 <EVT_aci_att_exec_write_resp>:
 801f3f8:	4873      	ldr	r0, [pc, #460]	; (801f5c8 <??DataTable32>)
 801f3fa:	6842      	ldr	r2, [r0, #4]
 801f3fc:	04d0      	lsls	r0, r2, #19
 801f3fe:	bf44      	itt	mi
 801f400:	8888      	ldrhmi	r0, [r1, #4]
 801f402:	f7f9 b819 	bmi.w	8018438 <aci_att_exec_write_resp_event>
 801f406:	2000      	movs	r0, #0
 801f408:	4770      	bx	lr

0801f40a <EVT_GATT_Attribute_Modified>:
 801f40a:	e92d 47f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, lr}
 801f40e:	4680      	mov	r8, r0
 801f410:	468a      	mov	sl, r1
 801f412:	486d      	ldr	r0, [pc, #436]	; (801f5c8 <??DataTable32>)
 801f414:	7801      	ldrb	r1, [r0, #0]
 801f416:	4616      	mov	r6, r2
 801f418:	2400      	movs	r4, #0
 801f41a:	b0bf      	sub	sp, #252	; 0xfc
 801f41c:	461f      	mov	r7, r3
 801f41e:	f44f 4900 	mov.w	r9, #32768	; 0x8000
 801f422:	07ca      	lsls	r2, r1, #31
 801f424:	d51b      	bpl.n	801f45e <??EVT_GATT_Attribute_Modified_0>

0801f426 <??EVT_GATT_Attribute_Modified_1>:
 801f426:	25f5      	movs	r5, #245	; 0xf5
 801f428:	b2b0      	uxth	r0, r6
 801f42a:	28f5      	cmp	r0, #245	; 0xf5
 801f42c:	bfdc      	itt	le
 801f42e:	4605      	movle	r5, r0
 801f430:	f04f 0900 	movle.w	r9, #0
 801f434:	b2a0      	uxth	r0, r4
 801f436:	1839      	adds	r1, r7, r0
 801f438:	462a      	mov	r2, r5
 801f43a:	a801      	add	r0, sp, #4
 801f43c:	f011 fd53 	bl	8030ee6 <__aeabi_memcpy>
 801f440:	a901      	add	r1, sp, #4
 801f442:	9100      	str	r1, [sp, #0]
 801f444:	ea49 0204 	orr.w	r2, r9, r4
 801f448:	462b      	mov	r3, r5
 801f44a:	b292      	uxth	r2, r2
 801f44c:	4651      	mov	r1, sl
 801f44e:	4640      	mov	r0, r8
 801f450:	f7f8 fe85 	bl	801815e <aci_gatt_attribute_modified_event>
 801f454:	1b76      	subs	r6, r6, r5
 801f456:	192c      	adds	r4, r5, r4
 801f458:	b2b0      	uxth	r0, r6
 801f45a:	2800      	cmp	r0, #0
 801f45c:	d1e3      	bne.n	801f426 <??EVT_GATT_Attribute_Modified_1>

0801f45e <??EVT_GATT_Attribute_Modified_0>:
 801f45e:	2000      	movs	r0, #0
 801f460:	b040      	add	sp, #256	; 0x100
 801f462:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}

0801f466 <EVT_GATT_Read_Resp>:
 801f466:	b538      	push	{r3, r4, r5, lr}
 801f468:	4604      	mov	r4, r0
 801f46a:	4857      	ldr	r0, [pc, #348]	; (801f5c8 <??DataTable32>)
 801f46c:	7901      	ldrb	r1, [r0, #4]
 801f46e:	b0c0      	sub	sp, #256	; 0x100
 801f470:	0648      	lsls	r0, r1, #25
 801f472:	d512      	bpl.n	801f49a <??EVT_GATT_Read_Resp_0>
 801f474:	88e1      	ldrh	r1, [r4, #6]
 801f476:	1e4d      	subs	r5, r1, #1
 801f478:	b2a8      	uxth	r0, r5
 801f47a:	28f5      	cmp	r0, #245	; 0xf5
 801f47c:	db00      	blt.n	801f480 <??EVT_GATT_Read_Resp_1>
 801f47e:	e02a      	b.n	801f4d6 <?Subroutine0>

0801f480 <??EVT_GATT_Read_Resp_1>:
 801f480:	466b      	mov	r3, sp
 801f482:	b2aa      	uxth	r2, r5
 801f484:	2105      	movs	r1, #5
 801f486:	4620      	mov	r0, r4
 801f488:	f005 fcad 	bl	8024de6 <ACL_PM_Get_Data>
 801f48c:	88a0      	ldrh	r0, [r4, #4]
 801f48e:	466a      	mov	r2, sp
 801f490:	b2e9      	uxtb	r1, r5
 801f492:	f7f8 ff24 	bl	80182de <aci_att_read_resp_event>
 801f496:	b041      	add	sp, #260	; 0x104
 801f498:	bd30      	pop	{r4, r5, pc}

0801f49a <??EVT_GATT_Read_Resp_0>:
 801f49a:	2000      	movs	r0, #0
 801f49c:	b041      	add	sp, #260	; 0x104
 801f49e:	bd30      	pop	{r4, r5, pc}

0801f4a0 <EVT_GATT_Read_Blob_Resp>:
 801f4a0:	b538      	push	{r3, r4, r5, lr}
 801f4a2:	4604      	mov	r4, r0
 801f4a4:	4848      	ldr	r0, [pc, #288]	; (801f5c8 <??DataTable32>)
 801f4a6:	7901      	ldrb	r1, [r0, #4]
 801f4a8:	b0c0      	sub	sp, #256	; 0x100
 801f4aa:	0608      	lsls	r0, r1, #24
 801f4ac:	d512      	bpl.n	801f4d4 <??EVT_GATT_Read_Blob_Resp_0>
 801f4ae:	88e1      	ldrh	r1, [r4, #6]
 801f4b0:	1e4d      	subs	r5, r1, #1
 801f4b2:	b2a8      	uxth	r0, r5
 801f4b4:	28f5      	cmp	r0, #245	; 0xf5
 801f4b6:	db00      	blt.n	801f4ba <??EVT_GATT_Read_Blob_Resp_1>
 801f4b8:	e00d      	b.n	801f4d6 <?Subroutine0>

0801f4ba <??EVT_GATT_Read_Blob_Resp_1>:
 801f4ba:	466b      	mov	r3, sp
 801f4bc:	b2aa      	uxth	r2, r5
 801f4be:	2105      	movs	r1, #5
 801f4c0:	4620      	mov	r0, r4
 801f4c2:	f005 fc90 	bl	8024de6 <ACL_PM_Get_Data>
 801f4c6:	88a0      	ldrh	r0, [r4, #4]
 801f4c8:	466a      	mov	r2, sp
 801f4ca:	b2e9      	uxtb	r1, r5
 801f4cc:	f7f8 ff29 	bl	8018322 <aci_att_read_blob_resp_event>
 801f4d0:	b041      	add	sp, #260	; 0x104
 801f4d2:	bd30      	pop	{r4, r5, pc}

0801f4d4 <??EVT_GATT_Read_Blob_Resp_0>:
 801f4d4:	e7e1      	b.n	801f49a <??EVT_GATT_Read_Resp_0>

0801f4d6 <?Subroutine0>:
 801f4d6:	4620      	mov	r0, r4
 801f4d8:	f000 f87a 	bl	801f5d0 <EVT_GATT_Ext_A>
 801f4dc:	b041      	add	sp, #260	; 0x104
 801f4de:	bd30      	pop	{r4, r5, pc}

0801f4e0 <EVT_GATT_Read_Multiple_Resp>:
 801f4e0:	b538      	push	{r3, r4, r5, lr}
 801f4e2:	4604      	mov	r4, r0
 801f4e4:	4838      	ldr	r0, [pc, #224]	; (801f5c8 <??DataTable32>)
 801f4e6:	6841      	ldr	r1, [r0, #4]
 801f4e8:	b0c0      	sub	sp, #256	; 0x100
 801f4ea:	05c8      	lsls	r0, r1, #23
 801f4ec:	d512      	bpl.n	801f514 <??EVT_GATT_Read_Multiple_Resp_0>
 801f4ee:	88e1      	ldrh	r1, [r4, #6]
 801f4f0:	1e4d      	subs	r5, r1, #1
 801f4f2:	b2a8      	uxth	r0, r5
 801f4f4:	28f5      	cmp	r0, #245	; 0xf5
 801f4f6:	db00      	blt.n	801f4fa <??EVT_GATT_Read_Multiple_Resp_1>
 801f4f8:	e7ed      	b.n	801f4d6 <?Subroutine0>

0801f4fa <??EVT_GATT_Read_Multiple_Resp_1>:
 801f4fa:	466b      	mov	r3, sp
 801f4fc:	b2aa      	uxth	r2, r5
 801f4fe:	2105      	movs	r1, #5
 801f500:	4620      	mov	r0, r4
 801f502:	f005 fc70 	bl	8024de6 <ACL_PM_Get_Data>
 801f506:	88a0      	ldrh	r0, [r4, #4]
 801f508:	466a      	mov	r2, sp
 801f50a:	b2e9      	uxtb	r1, r5
 801f50c:	f7f8 ff2b 	bl	8018366 <aci_att_read_multiple_resp_event>
 801f510:	b041      	add	sp, #260	; 0x104
 801f512:	bd30      	pop	{r4, r5, pc}

0801f514 <??EVT_GATT_Read_Multiple_Resp_0>:
 801f514:	e7c1      	b.n	801f49a <??EVT_GATT_Read_Resp_0>

0801f516 <EVT_GATT_Indication>:
 801f516:	b530      	push	{r4, r5, lr}
 801f518:	4604      	mov	r4, r0
 801f51a:	482b      	ldr	r0, [pc, #172]	; (801f5c8 <??DataTable32>)
 801f51c:	6841      	ldr	r1, [r0, #4]
 801f51e:	b0c1      	sub	sp, #260	; 0x104
 801f520:	0488      	lsls	r0, r1, #18
 801f522:	d51d      	bpl.n	801f560 <??EVT_GATT_Indication_0>
 801f524:	88e1      	ldrh	r1, [r4, #6]
 801f526:	1ecd      	subs	r5, r1, #3
 801f528:	b2a8      	uxth	r0, r5
 801f52a:	28f5      	cmp	r0, #245	; 0xf5
 801f52c:	db00      	blt.n	801f530 <??EVT_GATT_Indication_1>
 801f52e:	e03e      	b.n	801f5ae <?Subroutine1>

0801f530 <??EVT_GATT_Indication_1>:
 801f530:	68a0      	ldr	r0, [r4, #8]
 801f532:	ab01      	add	r3, sp, #4
 801f534:	b2aa      	uxth	r2, r5
 801f536:	f100 010d 	add.w	r1, r0, #13
 801f53a:	7808      	ldrb	r0, [r1, #0]
 801f53c:	f88d 0000 	strb.w	r0, [sp]
 801f540:	7848      	ldrb	r0, [r1, #1]
 801f542:	2107      	movs	r1, #7
 801f544:	f88d 0001 	strb.w	r0, [sp, #1]
 801f548:	4620      	mov	r0, r4
 801f54a:	f005 fc4c 	bl	8024de6 <ACL_PM_Get_Data>
 801f54e:	f8bd 1000 	ldrh.w	r1, [sp]
 801f552:	88a0      	ldrh	r0, [r4, #4]
 801f554:	ab01      	add	r3, sp, #4
 801f556:	b2ea      	uxtb	r2, r5
 801f558:	f7f8 ff84 	bl	8018464 <aci_gatt_indication_event>
 801f55c:	b041      	add	sp, #260	; 0x104
 801f55e:	bd30      	pop	{r4, r5, pc}

0801f560 <??EVT_GATT_Indication_0>:
 801f560:	e79b      	b.n	801f49a <??EVT_GATT_Read_Resp_0>

0801f562 <EVT_GATT_Notification>:
 801f562:	b530      	push	{r4, r5, lr}
 801f564:	4604      	mov	r4, r0
 801f566:	4818      	ldr	r0, [pc, #96]	; (801f5c8 <??DataTable32>)
 801f568:	6841      	ldr	r1, [r0, #4]
 801f56a:	b0c1      	sub	sp, #260	; 0x104
 801f56c:	0448      	lsls	r0, r1, #17
 801f56e:	d51d      	bpl.n	801f5ac <??EVT_GATT_Notification_0>
 801f570:	88e1      	ldrh	r1, [r4, #6]
 801f572:	1ecd      	subs	r5, r1, #3
 801f574:	b2a8      	uxth	r0, r5
 801f576:	28f5      	cmp	r0, #245	; 0xf5
 801f578:	db00      	blt.n	801f57c <??EVT_GATT_Notification_1>
 801f57a:	e018      	b.n	801f5ae <?Subroutine1>

0801f57c <??EVT_GATT_Notification_1>:
 801f57c:	68a0      	ldr	r0, [r4, #8]
 801f57e:	ab01      	add	r3, sp, #4
 801f580:	b2aa      	uxth	r2, r5
 801f582:	f100 010d 	add.w	r1, r0, #13
 801f586:	7808      	ldrb	r0, [r1, #0]
 801f588:	f88d 0000 	strb.w	r0, [sp]
 801f58c:	7848      	ldrb	r0, [r1, #1]
 801f58e:	2107      	movs	r1, #7
 801f590:	f88d 0001 	strb.w	r0, [sp, #1]
 801f594:	4620      	mov	r0, r4
 801f596:	f005 fc26 	bl	8024de6 <ACL_PM_Get_Data>
 801f59a:	f8bd 1000 	ldrh.w	r1, [sp]
 801f59e:	88a0      	ldrh	r0, [r4, #4]
 801f5a0:	ab01      	add	r3, sp, #4
 801f5a2:	b2ea      	uxtb	r2, r5
 801f5a4:	f7f8 ff83 	bl	80184ae <aci_gatt_notification_event>
 801f5a8:	b041      	add	sp, #260	; 0x104
 801f5aa:	bd30      	pop	{r4, r5, pc}

0801f5ac <??EVT_GATT_Notification_0>:
 801f5ac:	e775      	b.n	801f49a <??EVT_GATT_Read_Resp_0>

0801f5ae <?Subroutine1>:
 801f5ae:	4620      	mov	r0, r4
 801f5b0:	f000 f837 	bl	801f622 <EVT_GATT_Ext_B>
 801f5b4:	b041      	add	sp, #260	; 0x104
 801f5b6:	bd30      	pop	{r4, r5, pc}

0801f5b8 <aci_gap_set_event_mask>:
 801f5b8:	4903      	ldr	r1, [pc, #12]	; (801f5c8 <??DataTable32>)
 801f5ba:	8008      	strh	r0, [r1, #0]
 801f5bc:	2000      	movs	r0, #0
 801f5be:	4770      	bx	lr

0801f5c0 <aci_gatt_set_event_mask>:
 801f5c0:	4901      	ldr	r1, [pc, #4]	; (801f5c8 <??DataTable32>)
 801f5c2:	6048      	str	r0, [r1, #4]
 801f5c4:	2000      	movs	r0, #0
 801f5c6:	4770      	bx	lr

0801f5c8 <??DataTable32>:
 801f5c8:	3928 2000                                   (9. 

0801f5cc <??DataTable32_1>:
 801f5cc:	ffff 0003                                   ....

0801f5d0 <EVT_GATT_Ext_A>:
 801f5d0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 801f5d4:	b0c0      	sub	sp, #256	; 0x100
 801f5d6:	4605      	mov	r5, r0
 801f5d8:	88e8      	ldrh	r0, [r5, #6]
 801f5da:	2600      	movs	r6, #0
 801f5dc:	f44f 4800 	mov.w	r8, #32768	; 0x8000
 801f5e0:	1e44      	subs	r4, r0, #1
 801f5e2:	b2a4      	uxth	r4, r4

0801f5e4 <??EVT_GATT_Ext_A_0>:
 801f5e4:	27f5      	movs	r7, #245	; 0xf5
 801f5e6:	2cf6      	cmp	r4, #246	; 0xf6
 801f5e8:	bfbc      	itt	lt
 801f5ea:	4627      	movlt	r7, r4
 801f5ec:	f04f 0800 	movlt.w	r8, #0
 801f5f0:	f3c6 010e 	ubfx	r1, r6, #0, #15
 801f5f4:	466b      	mov	r3, sp
 801f5f6:	b2ba      	uxth	r2, r7
 801f5f8:	1d49      	adds	r1, r1, #5
 801f5fa:	4628      	mov	r0, r5
 801f5fc:	f005 fbf3 	bl	8024de6 <ACL_PM_Get_Data>
 801f600:	88a8      	ldrh	r0, [r5, #4]
 801f602:	ea48 0106 	orr.w	r1, r8, r6
 801f606:	466b      	mov	r3, sp
 801f608:	b2ba      	uxth	r2, r7
 801f60a:	b289      	uxth	r1, r1
 801f60c:	1be4      	subs	r4, r4, r7
 801f60e:	f7f9 f881 	bl	8018714 <aci_gatt_read_ext_event>
 801f612:	b2a4      	uxth	r4, r4
 801f614:	19be      	adds	r6, r7, r6
 801f616:	2c00      	cmp	r4, #0
 801f618:	d1e4      	bne.n	801f5e4 <??EVT_GATT_Ext_A_0>
 801f61a:	2000      	movs	r0, #0
 801f61c:	b040      	add	sp, #256	; 0x100
 801f61e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0801f622 <EVT_GATT_Ext_B>:
 801f622:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 801f626:	b0c2      	sub	sp, #264	; 0x108
 801f628:	4605      	mov	r5, r0
 801f62a:	aa01      	add	r2, sp, #4
 801f62c:	88e8      	ldrh	r0, [r5, #6]
 801f62e:	2600      	movs	r6, #0
 801f630:	f44f 4800 	mov.w	r8, #32768	; 0x8000
 801f634:	1ec4      	subs	r4, r0, #3
 801f636:	68a8      	ldr	r0, [r5, #8]
 801f638:	b2a4      	uxth	r4, r4
 801f63a:	f100 010d 	add.w	r1, r0, #13
 801f63e:	7808      	ldrb	r0, [r1, #0]
 801f640:	7010      	strb	r0, [r2, #0]
 801f642:	7848      	ldrb	r0, [r1, #1]
 801f644:	7050      	strb	r0, [r2, #1]

0801f646 <??EVT_GATT_Ext_B_0>:
 801f646:	27f5      	movs	r7, #245	; 0xf5
 801f648:	2cf6      	cmp	r4, #246	; 0xf6
 801f64a:	bfbc      	itt	lt
 801f64c:	4627      	movlt	r7, r4
 801f64e:	f04f 0800 	movlt.w	r8, #0
 801f652:	f3c6 010e 	ubfx	r1, r6, #0, #15
 801f656:	ab02      	add	r3, sp, #8
 801f658:	b2ba      	uxth	r2, r7
 801f65a:	1dc9      	adds	r1, r1, #7
 801f65c:	4628      	mov	r0, r5
 801f65e:	f005 fbc2 	bl	8024de6 <ACL_PM_Get_Data>
 801f662:	68a9      	ldr	r1, [r5, #8]
 801f664:	88a8      	ldrh	r0, [r5, #4]
 801f666:	ea48 0206 	orr.w	r2, r8, r6
 801f66a:	7b0b      	ldrb	r3, [r1, #12]
 801f66c:	a902      	add	r1, sp, #8
 801f66e:	9100      	str	r1, [sp, #0]
 801f670:	2b1d      	cmp	r3, #29
 801f672:	b2bb      	uxth	r3, r7
 801f674:	b292      	uxth	r2, r2
 801f676:	f8bd 1004 	ldrh.w	r1, [sp, #4]
 801f67a:	d102      	bne.n	801f682 <??EVT_GATT_Ext_B_1>
 801f67c:	f7f9 f86b 	bl	8018756 <aci_gatt_indication_ext_event>
 801f680:	e001      	b.n	801f686 <??EVT_GATT_Ext_B_2>

0801f682 <??EVT_GATT_Ext_B_1>:
 801f682:	f7f9 f88c 	bl	801879e <aci_gatt_notification_ext_event>

0801f686 <??EVT_GATT_Ext_B_2>:
 801f686:	1be4      	subs	r4, r4, r7
 801f688:	b2a4      	uxth	r4, r4
 801f68a:	19be      	adds	r6, r7, r6
 801f68c:	2c00      	cmp	r4, #0
 801f68e:	d1da      	bne.n	801f646 <??EVT_GATT_Ext_B_0>
 801f690:	2000      	movs	r0, #0
 801f692:	b042      	add	sp, #264	; 0x108
 801f694:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0801f698 <L2C_MemAlloc>:
 801f698:	b580      	push	{r7, lr}
 801f69a:	f8df 13ac 	ldr.w	r1, [pc, #940]	; 801fa48 <??DataTable8>
 801f69e:	7d89      	ldrb	r1, [r1, #22]
 801f6a0:	220c      	movs	r2, #12
 801f6a2:	f005 fa0b 	bl	8024abc <Mem_Assign>
 801f6a6:	f8df 23a4 	ldr.w	r2, [pc, #932]	; 801fa4c <??DataTable8_1>
 801f6aa:	6790      	str	r0, [r2, #120]	; 0x78
 801f6ac:	bd01      	pop	{r0, pc}

0801f6ae <L2C_Init>:
 801f6ae:	4770      	bx	lr

0801f6b0 <L2C_Send_Data>:
 801f6b0:	b510      	push	{r4, lr}
 801f6b2:	460c      	mov	r4, r1
 801f6b4:	88e1      	ldrh	r1, [r4, #6]
 801f6b6:	68a2      	ldr	r2, [r4, #8]
 801f6b8:	7211      	strb	r1, [r2, #8]
 801f6ba:	88e1      	ldrh	r1, [r4, #6]
 801f6bc:	68a2      	ldr	r2, [r4, #8]
 801f6be:	0a09      	lsrs	r1, r1, #8
 801f6c0:	7251      	strb	r1, [r2, #9]
 801f6c2:	68a1      	ldr	r1, [r4, #8]
 801f6c4:	7288      	strb	r0, [r1, #10]
 801f6c6:	68a1      	ldr	r1, [r4, #8]
 801f6c8:	0a00      	lsrs	r0, r0, #8
 801f6ca:	72c8      	strb	r0, [r1, #11]
 801f6cc:	88e0      	ldrh	r0, [r4, #6]
 801f6ce:	2102      	movs	r1, #2
 801f6d0:	7321      	strb	r1, [r4, #12]
 801f6d2:	1d00      	adds	r0, r0, #4
 801f6d4:	80e0      	strh	r0, [r4, #6]
 801f6d6:	4620      	mov	r0, r4
 801f6d8:	f000 fb9d 	bl	801fe16 <LECTRL_SendAclDataFromHostToController>
 801f6dc:	b118      	cbz	r0, 801f6e6 <??L2C_Send_Data_0>
 801f6de:	88e0      	ldrh	r0, [r4, #6]
 801f6e0:	1f01      	subs	r1, r0, #4
 801f6e2:	80e1      	strh	r1, [r4, #6]
 801f6e4:	2091      	movs	r0, #145	; 0x91

0801f6e6 <??L2C_Send_Data_0>:
 801f6e6:	bd10      	pop	{r4, pc}

0801f6e8 <L2C_Mux_Acl_Packet>:
 801f6e8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 801f6ea:	b084      	sub	sp, #16
 801f6ec:	4604      	mov	r4, r0
 801f6ee:	68a0      	ldr	r0, [r4, #8]
 801f6f0:	88e3      	ldrh	r3, [r4, #6]
 801f6f2:	7a82      	ldrb	r2, [r0, #10]
 801f6f4:	7ac0      	ldrb	r0, [r0, #11]
 801f6f6:	eb02 2200 	add.w	r2, r2, r0, lsl #8
 801f6fa:	1f18      	subs	r0, r3, #4
 801f6fc:	80e0      	strh	r0, [r4, #6]
 801f6fe:	b292      	uxth	r2, r2
 801f700:	2a04      	cmp	r2, #4
 801f702:	d004      	beq.n	801f70e <??L2C_Mux_Acl_Packet_0>
 801f704:	d369      	bcc.n	801f7da <??L2C_Mux_Acl_Packet_1>
 801f706:	2a06      	cmp	r2, #6
 801f708:	d062      	beq.n	801f7d0 <??L2C_Mux_Acl_Packet_2>
 801f70a:	d304      	bcc.n	801f716 <??L2C_Mux_Acl_Packet_3>
 801f70c:	e065      	b.n	801f7da <??L2C_Mux_Acl_Packet_1>

0801f70e <??L2C_Mux_Acl_Packet_0>:
 801f70e:	4620      	mov	r0, r4
 801f710:	f7fa f802 	bl	8019718 <GATT_L2cap_Data_Handler>
 801f714:	e05f      	b.n	801f7d6 <??L2C_Mux_Acl_Packet_4>

0801f716 <??L2C_Mux_Acl_Packet_3>:
 801f716:	2500      	movs	r5, #0
 801f718:	2900      	cmp	r1, #0
 801f71a:	d04e      	beq.n	801f7ba <??L2C_Mux_Acl_Packet_5>
 801f71c:	88a0      	ldrh	r0, [r4, #4]
 801f71e:	4669      	mov	r1, sp
 801f720:	f000 f97c 	bl	801fa1c <L2C_Get_Connection>
 801f724:	2800      	cmp	r0, #0
 801f726:	d047      	beq.n	801f7b8 <??L2C_Mux_Acl_Packet_6>
 801f728:	68a0      	ldr	r0, [r4, #8]
 801f72a:	f100 010c 	add.w	r1, r0, #12
 801f72e:	780a      	ldrb	r2, [r1, #0]
 801f730:	2a01      	cmp	r2, #1
 801f732:	d00f      	beq.n	801f754 <??L2C_Mux_Acl_Packet_7>
 801f734:	2a12      	cmp	r2, #18
 801f736:	d007      	beq.n	801f748 <??L2C_Mux_Acl_Packet_8>
 801f738:	2a13      	cmp	r2, #19
 801f73a:	d128      	bne.n	801f78e <??L2C_Mux_Acl_Packet_9>
 801f73c:	f89d 0000 	ldrb.w	r0, [sp]
 801f740:	4621      	mov	r1, r4
 801f742:	f000 f9ff 	bl	801fb44 <L2C_CPU_Rsp_Rx_Handler>
 801f746:	e034      	b.n	801f7b2 <??L2C_Mux_Acl_Packet_10>

0801f748 <??L2C_Mux_Acl_Packet_8>:
 801f748:	f89d 0000 	ldrb.w	r0, [sp]
 801f74c:	4621      	mov	r1, r4
 801f74e:	f000 fa26 	bl	801fb9e <L2C_CPU_Req_Rx_Handler>
 801f752:	e02e      	b.n	801f7b2 <??L2C_Mux_Acl_Packet_10>

0801f754 <??L2C_Mux_Acl_Packet_7>:
 801f754:	f89d 6000 	ldrb.w	r6, [sp]
 801f758:	49bc      	ldr	r1, [pc, #752]	; (801fa4c <??DataTable8_1>)
 801f75a:	6f8a      	ldr	r2, [r1, #120]	; 0x78
 801f75c:	eb06 0746 	add.w	r7, r6, r6, lsl #1
 801f760:	eb02 0187 	add.w	r1, r2, r7, lsl #2
 801f764:	f891 c002 	ldrb.w	ip, [r1, #2]
 801f768:	ea5f 728c 	movs.w	r2, ip, lsl #30
 801f76c:	d524      	bpl.n	801f7b8 <??L2C_Mux_Acl_Packet_6>
 801f76e:	78c9      	ldrb	r1, [r1, #3]
 801f770:	7b40      	ldrb	r0, [r0, #13]
 801f772:	4281      	cmp	r1, r0
 801f774:	d120      	bne.n	801f7b8 <??L2C_Mux_Acl_Packet_6>
 801f776:	4630      	mov	r0, r6
 801f778:	f000 f8fb 	bl	801f972 <L2C_Increment_Identifier>
 801f77c:	4630      	mov	r0, r6
 801f77e:	f000 f8d6 	bl	801f92e <L2C_Stop_Timer>
 801f782:	88a1      	ldrh	r1, [r4, #4]
 801f784:	4622      	mov	r2, r4
 801f786:	2000      	movs	r0, #0
 801f788:	f7ff fc7d 	bl	801f086 <EVT_aci_l2cap_command_reject>
 801f78c:	e014      	b.n	801f7b8 <??L2C_Mux_Acl_Packet_6>

0801f78e <??L2C_Mux_Acl_Packet_9>:
 801f78e:	7849      	ldrb	r1, [r1, #1]
 801f790:	f89d 0000 	ldrb.w	r0, [sp]
 801f794:	2202      	movs	r2, #2
 801f796:	0209      	lsls	r1, r1, #8
 801f798:	f041 0101 	orr.w	r1, r1, #1
 801f79c:	f8ad 1004 	strh.w	r1, [sp, #4]
 801f7a0:	a901      	add	r1, sp, #4
 801f7a2:	804a      	strh	r2, [r1, #2]
 801f7a4:	604d      	str	r5, [r1, #4]
 801f7a6:	810d      	strh	r5, [r1, #8]
 801f7a8:	ab01      	add	r3, sp, #4
 801f7aa:	2206      	movs	r2, #6
 801f7ac:	2105      	movs	r1, #5
 801f7ae:	f000 f8ed 	bl	801f98c <L2C_Send_Packet>

0801f7b2 <??L2C_Mux_Acl_Packet_10>:
 801f7b2:	4605      	mov	r5, r0
 801f7b4:	0028      	movs	r0, r5
 801f7b6:	d103      	bne.n	801f7c0 <??L2C_Mux_Acl_Packet_11>

0801f7b8 <??L2C_Mux_Acl_Packet_6>:
 801f7b8:	2101      	movs	r1, #1

0801f7ba <??L2C_Mux_Acl_Packet_5>:
 801f7ba:	4620      	mov	r0, r4
 801f7bc:	f005 fa91 	bl	8024ce2 <ACL_PM_Release>

0801f7c0 <??L2C_Mux_Acl_Packet_11>:
 801f7c0:	0028      	movs	r0, r5
 801f7c2:	d002      	beq.n	801f7ca <??L2C_Mux_Acl_Packet_12>
 801f7c4:	88e0      	ldrh	r0, [r4, #6]
 801f7c6:	1d00      	adds	r0, r0, #4
 801f7c8:	80e0      	strh	r0, [r4, #6]

0801f7ca <??L2C_Mux_Acl_Packet_12>:
 801f7ca:	4628      	mov	r0, r5
 801f7cc:	b005      	add	sp, #20
 801f7ce:	bdf0      	pop	{r4, r5, r6, r7, pc}

0801f7d0 <??L2C_Mux_Acl_Packet_2>:
 801f7d0:	4620      	mov	r0, r4
 801f7d2:	f002 f9fc 	bl	8021bce <SMP_L2cap_Data_Handler>

0801f7d6 <??L2C_Mux_Acl_Packet_4>:
 801f7d6:	4605      	mov	r5, r0
 801f7d8:	e7f2      	b.n	801f7c0 <??L2C_Mux_Acl_Packet_11>

0801f7da <??L2C_Mux_Acl_Packet_1>:
 801f7da:	4620      	mov	r0, r4
 801f7dc:	f005 fa81 	bl	8024ce2 <ACL_PM_Release>
 801f7e0:	2500      	movs	r5, #0
 801f7e2:	e7f2      	b.n	801f7ca <??L2C_Mux_Acl_Packet_12>

0801f7e4 <L2C_Rx_Data_Handler>:
 801f7e4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 801f7e6:	4605      	mov	r5, r0
 801f7e8:	88a8      	ldrh	r0, [r5, #4]
 801f7ea:	4669      	mov	r1, sp
 801f7ec:	f000 f916 	bl	801fa1c <L2C_Get_Connection>
 801f7f0:	0004      	movs	r4, r0
 801f7f2:	d105      	bne.n	801f800 <??L2C_Rx_Data_Handler_0>
 801f7f4:	2101      	movs	r1, #1
 801f7f6:	4628      	mov	r0, r5
 801f7f8:	f005 fa73 	bl	8024ce2 <ACL_PM_Release>
 801f7fc:	2000      	movs	r0, #0
 801f7fe:	bdf2      	pop	{r1, r4, r5, r6, r7, pc}

0801f800 <??L2C_Rx_Data_Handler_0>:
 801f800:	7b2e      	ldrb	r6, [r5, #12]
 801f802:	2700      	movs	r7, #0
 801f804:	68a0      	ldr	r0, [r4, #8]
 801f806:	2e02      	cmp	r6, #2
 801f808:	d106      	bne.n	801f818 <??L2C_Rx_Data_Handler_1>
 801f80a:	2800      	cmp	r0, #0
 801f80c:	bf03      	ittte	eq
 801f80e:	60a5      	streq	r5, [r4, #8]
 801f810:	88e8      	ldrheq	r0, [r5, #6]
 801f812:	80e0      	strheq	r0, [r4, #6]
 801f814:	2795      	movne	r7, #149	; 0x95
 801f816:	e012      	b.n	801f83e <??L2C_Rx_Data_Handler_2>

0801f818 <??L2C_Rx_Data_Handler_1>:
 801f818:	b398      	cbz	r0, 801f882 <??L2C_Rx_Data_Handler_3>
 801f81a:	88e8      	ldrh	r0, [r5, #6]
 801f81c:	b178      	cbz	r0, 801f83e <??L2C_Rx_Data_Handler_2>
 801f81e:	88e1      	ldrh	r1, [r4, #6]
 801f820:	1840      	adds	r0, r0, r1
 801f822:	80e0      	strh	r0, [r4, #6]
 801f824:	4628      	mov	r0, r5
 801f826:	f005 fb03 	bl	8024e30 <ACL_PM_Extract_Pdu_MBuff>
 801f82a:	4601      	mov	r1, r0
 801f82c:	68a0      	ldr	r0, [r4, #8]
 801f82e:	6880      	ldr	r0, [r0, #8]
 801f830:	f001 fb64 	bl	8020efc <MBuff_Append>
 801f834:	68a1      	ldr	r1, [r4, #8]
 801f836:	2001      	movs	r0, #1
 801f838:	f005 fb12 	bl	8024e60 <ACL_PM_Compact>
 801f83c:	80ef      	strh	r7, [r5, #6]

0801f83e <??L2C_Rx_Data_Handler_2>:
 801f83e:	88e1      	ldrh	r1, [r4, #6]
 801f840:	2904      	cmp	r1, #4
 801f842:	d31c      	bcc.n	801f87e <??L2C_Rx_Data_Handler_4>
 801f844:	68a0      	ldr	r0, [r4, #8]
 801f846:	6883      	ldr	r3, [r0, #8]
 801f848:	7a1a      	ldrb	r2, [r3, #8]
 801f84a:	7a5b      	ldrb	r3, [r3, #9]
 801f84c:	eb02 2203 	add.w	r2, r2, r3, lsl #8
 801f850:	1d12      	adds	r2, r2, #4
 801f852:	b292      	uxth	r2, r2
 801f854:	428a      	cmp	r2, r1
 801f856:	db14      	blt.n	801f882 <??L2C_Rx_Data_Handler_3>
 801f858:	4291      	cmp	r1, r2
 801f85a:	d110      	bne.n	801f87e <??L2C_Rx_Data_Handler_4>
 801f85c:	80c2      	strh	r2, [r0, #6]
 801f85e:	2101      	movs	r1, #1
 801f860:	f7ff ff42 	bl	801f6e8 <L2C_Mux_Acl_Packet>
 801f864:	68a1      	ldr	r1, [r4, #8]
 801f866:	b918      	cbnz	r0, 801f870 <??L2C_Rx_Data_Handler_5>
 801f868:	2100      	movs	r1, #0
 801f86a:	80e0      	strh	r0, [r4, #6]
 801f86c:	60a1      	str	r1, [r4, #8]
 801f86e:	e015      	b.n	801f89c <??L2C_Rx_Data_Handler_6>

0801f870 <??L2C_Rx_Data_Handler_5>:
 801f870:	42a9      	cmp	r1, r5
 801f872:	bf04      	itt	eq
 801f874:	2100      	moveq	r1, #0
 801f876:	80e1      	strheq	r1, [r4, #6]
 801f878:	2795      	movs	r7, #149	; 0x95
 801f87a:	60a1      	str	r1, [r4, #8]
 801f87c:	e016      	b.n	801f8ac <??L2C_Rx_Data_Handler_7>

0801f87e <??L2C_Rx_Data_Handler_4>:
 801f87e:	2f95      	cmp	r7, #149	; 0x95
 801f880:	d10c      	bne.n	801f89c <??L2C_Rx_Data_Handler_6>

0801f882 <??L2C_Rx_Data_Handler_3>:
 801f882:	4622      	mov	r2, r4
 801f884:	2102      	movs	r1, #2
 801f886:	2001      	movs	r0, #1
 801f888:	f7ff fbc1 	bl	801f00e <EVT_aci_hal_fw_error>
 801f88c:	68a0      	ldr	r0, [r4, #8]
 801f88e:	b128      	cbz	r0, 801f89c <??L2C_Rx_Data_Handler_6>
 801f890:	2101      	movs	r1, #1
 801f892:	f005 fa26 	bl	8024ce2 <ACL_PM_Release>
 801f896:	2000      	movs	r0, #0
 801f898:	60a0      	str	r0, [r4, #8]
 801f89a:	80e0      	strh	r0, [r4, #6]

0801f89c <??L2C_Rx_Data_Handler_6>:
 801f89c:	0038      	movs	r0, r7
 801f89e:	bf08      	it	eq
 801f8a0:	2e01      	cmpeq	r6, #1
 801f8a2:	d103      	bne.n	801f8ac <??L2C_Rx_Data_Handler_7>
 801f8a4:	2101      	movs	r1, #1
 801f8a6:	4628      	mov	r0, r5
 801f8a8:	f005 fa1b 	bl	8024ce2 <ACL_PM_Release>

0801f8ac <??L2C_Rx_Data_Handler_7>:
 801f8ac:	4638      	mov	r0, r7
 801f8ae:	bdf2      	pop	{r1, r4, r5, r6, r7, pc}

0801f8b0 <L2C_Tx_Data_Conplete_Handler>:
 801f8b0:	2100      	movs	r1, #0
 801f8b2:	e719      	b.n	801f6e8 <L2C_Mux_Acl_Packet>

0801f8b4 <L2C_Connection_Complete_Handler>:
 801f8b4:	4a65      	ldr	r2, [pc, #404]	; (801fa4c <??DataTable8_1>)
 801f8b6:	b430      	push	{r4, r5}
 801f8b8:	6f93      	ldr	r3, [r2, #120]	; 0x78
 801f8ba:	4a63      	ldr	r2, [pc, #396]	; (801fa48 <??DataTable8>)
 801f8bc:	2400      	movs	r4, #0
 801f8be:	7d95      	ldrb	r5, [r2, #22]
 801f8c0:	e001      	b.n	801f8c6 <??L2C_Connection_Complete_Handler_0>

0801f8c2 <??L2C_Connection_Complete_Handler_1>:
 801f8c2:	1c64      	adds	r4, r4, #1
 801f8c4:	330c      	adds	r3, #12

0801f8c6 <??L2C_Connection_Complete_Handler_0>:
 801f8c6:	42ac      	cmp	r4, r5
 801f8c8:	d20a      	bcs.n	801f8e0 <??L2C_Connection_Complete_Handler_2>
 801f8ca:	881a      	ldrh	r2, [r3, #0]
 801f8cc:	2a00      	cmp	r2, #0
 801f8ce:	d1f8      	bne.n	801f8c2 <??L2C_Connection_Complete_Handler_1>
 801f8d0:	b133      	cbz	r3, 801f8e0 <??L2C_Connection_Complete_Handler_2>
 801f8d2:	8018      	strh	r0, [r3, #0]
 801f8d4:	1e48      	subs	r0, r1, #1
 801f8d6:	4180      	sbcs	r0, r0
 801f8d8:	0fc0      	lsrs	r0, r0, #31
 801f8da:	7098      	strb	r0, [r3, #2]
 801f8dc:	2001      	movs	r0, #1
 801f8de:	70d8      	strb	r0, [r3, #3]

0801f8e0 <??L2C_Connection_Complete_Handler_2>:
 801f8e0:	bc30      	pop	{r4, r5}
 801f8e2:	4770      	bx	lr

0801f8e4 <L2C_Disconnection_Complete_Handler>:
 801f8e4:	b51c      	push	{r2, r3, r4, lr}
 801f8e6:	4669      	mov	r1, sp
 801f8e8:	f000 f898 	bl	801fa1c <L2C_Get_Connection>
 801f8ec:	0004      	movs	r4, r0
 801f8ee:	d00d      	beq.n	801f90c <??L2C_Disconnection_Complete_Handler_0>
 801f8f0:	68a0      	ldr	r0, [r4, #8]
 801f8f2:	b128      	cbz	r0, 801f900 <??L2C_Disconnection_Complete_Handler_1>
 801f8f4:	2101      	movs	r1, #1
 801f8f6:	f005 f9f4 	bl	8024ce2 <ACL_PM_Release>
 801f8fa:	2000      	movs	r0, #0
 801f8fc:	60a0      	str	r0, [r4, #8]
 801f8fe:	80e0      	strh	r0, [r4, #6]

0801f900 <??L2C_Disconnection_Complete_Handler_1>:
 801f900:	f89d 0000 	ldrb.w	r0, [sp]
 801f904:	f000 f813 	bl	801f92e <L2C_Stop_Timer>
 801f908:	2000      	movs	r0, #0
 801f90a:	8020      	strh	r0, [r4, #0]

0801f90c <??L2C_Disconnection_Complete_Handler_0>:
 801f90c:	bd13      	pop	{r0, r1, r4, pc}

0801f90e <L2C_Start_Timer>:
 801f90e:	b538      	push	{r3, r4, r5, lr}
 801f910:	4a4e      	ldr	r2, [pc, #312]	; (801fa4c <??DataTable8_1>)
 801f912:	6f93      	ldr	r3, [r2, #120]	; 0x78
 801f914:	eb00 0540 	add.w	r5, r0, r0, lsl #1
 801f918:	3032      	adds	r0, #50	; 0x32
 801f91a:	eb03 0485 	add.w	r4, r3, r5, lsl #2
 801f91e:	b2c0      	uxtb	r0, r0
 801f920:	f008 f810 	bl	8027944 <BLEPLAT_TimerStart>
 801f924:	78a0      	ldrb	r0, [r4, #2]
 801f926:	f040 0002 	orr.w	r0, r0, #2
 801f92a:	70a0      	strb	r0, [r4, #2]
 801f92c:	bd31      	pop	{r0, r4, r5, pc}

0801f92e <L2C_Stop_Timer>:
 801f92e:	b510      	push	{r4, lr}
 801f930:	4946      	ldr	r1, [pc, #280]	; (801fa4c <??DataTable8_1>)
 801f932:	6f8a      	ldr	r2, [r1, #120]	; 0x78
 801f934:	eb00 0440 	add.w	r4, r0, r0, lsl #1
 801f938:	3032      	adds	r0, #50	; 0x32
 801f93a:	eb02 0484 	add.w	r4, r2, r4, lsl #2
 801f93e:	b2c0      	uxtb	r0, r0
 801f940:	f008 f802 	bl	8027948 <BLEPLAT_TimerStop>
 801f944:	78a0      	ldrb	r0, [r4, #2]
 801f946:	f000 00f9 	and.w	r0, r0, #249	; 0xf9
 801f94a:	70a0      	strb	r0, [r4, #2]
 801f94c:	bd10      	pop	{r4, pc}

0801f94e <L2C_Timeout_Cb>:
 801f94e:	493f      	ldr	r1, [pc, #252]	; (801fa4c <??DataTable8_1>)
 801f950:	3832      	subs	r0, #50	; 0x32
 801f952:	6f8a      	ldr	r2, [r1, #120]	; 0x78
 801f954:	b2c0      	uxtb	r0, r0
 801f956:	eb00 0140 	add.w	r1, r0, r0, lsl #1
 801f95a:	eb02 0081 	add.w	r0, r2, r1, lsl #2
 801f95e:	8801      	ldrh	r1, [r0, #0]
 801f960:	b131      	cbz	r1, 801f970 <??L2C_Timeout_Cb_0>
 801f962:	7882      	ldrb	r2, [r0, #2]
 801f964:	f002 02f9 	and.w	r2, r2, #249	; 0xf9
 801f968:	7082      	strb	r2, [r0, #2]
 801f96a:	2001      	movs	r0, #1
 801f96c:	f7ff bba3 	b.w	801f0b6 <EVT_aci_l2cap_proc_timeout>

0801f970 <??L2C_Timeout_Cb_0>:
 801f970:	4770      	bx	lr

0801f972 <L2C_Increment_Identifier>:
 801f972:	4936      	ldr	r1, [pc, #216]	; (801fa4c <??DataTable8_1>)
 801f974:	6f8a      	ldr	r2, [r1, #120]	; 0x78
 801f976:	eb00 0340 	add.w	r3, r0, r0, lsl #1
 801f97a:	eb02 0083 	add.w	r0, r2, r3, lsl #2
 801f97e:	78c1      	ldrb	r1, [r0, #3]
 801f980:	1c49      	adds	r1, r1, #1
 801f982:	b2ca      	uxtb	r2, r1
 801f984:	b902      	cbnz	r2, 801f988 <??L2C_Increment_Identifier_0>
 801f986:	2101      	movs	r1, #1

0801f988 <??L2C_Increment_Identifier_0>:
 801f988:	70c1      	strb	r1, [r0, #3]
 801f98a:	4770      	bx	lr

0801f98c <L2C_Send_Packet>:
 801f98c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 801f98e:	460d      	mov	r5, r1
 801f990:	461f      	mov	r7, r3
 801f992:	492e      	ldr	r1, [pc, #184]	; (801fa4c <??DataTable8_1>)
 801f994:	6f8b      	ldr	r3, [r1, #120]	; 0x78
 801f996:	eb00 0440 	add.w	r4, r0, r0, lsl #1
 801f99a:	00a4      	lsls	r4, r4, #2
 801f99c:	4616      	mov	r6, r2
 801f99e:	5b19      	ldrh	r1, [r3, r4]
 801f9a0:	1d32      	adds	r2, r6, #4
 801f9a2:	b292      	uxth	r2, r2
 801f9a4:	2000      	movs	r0, #0
 801f9a6:	f005 f984 	bl	8024cb2 <ACL_PM_New>
 801f9aa:	0004      	movs	r4, r0
 801f9ac:	d101      	bne.n	801f9b2 <??L2C_Send_Packet_0>
 801f9ae:	2064      	movs	r0, #100	; 0x64
 801f9b0:	bdf2      	pop	{r1, r4, r5, r6, r7, pc}

0801f9b2 <??L2C_Send_Packet_0>:
 801f9b2:	80e6      	strh	r6, [r4, #6]
 801f9b4:	463b      	mov	r3, r7
 801f9b6:	4632      	mov	r2, r6
 801f9b8:	2104      	movs	r1, #4
 801f9ba:	f005 fa1e 	bl	8024dfa <ACL_PM_Set_Data>
 801f9be:	4621      	mov	r1, r4
 801f9c0:	4628      	mov	r0, r5
 801f9c2:	f7ff fe75 	bl	801f6b0 <L2C_Send_Data>
 801f9c6:	b120      	cbz	r0, 801f9d2 <??L2C_Send_Packet_1>
 801f9c8:	2100      	movs	r1, #0
 801f9ca:	4620      	mov	r0, r4
 801f9cc:	f005 f989 	bl	8024ce2 <ACL_PM_Release>
 801f9d0:	2091      	movs	r0, #145	; 0x91

0801f9d2 <??L2C_Send_Packet_1>:
 801f9d2:	bdf2      	pop	{r1, r4, r5, r6, r7, pc}

0801f9d4 <L2C_Send_Signaling_Packet>:
 801f9d4:	460b      	mov	r3, r1
 801f9d6:	885a      	ldrh	r2, [r3, #2]
 801f9d8:	2105      	movs	r1, #5
 801f9da:	1d12      	adds	r2, r2, #4
 801f9dc:	b292      	uxth	r2, r2
 801f9de:	e7d5      	b.n	801f98c <L2C_Send_Packet>

0801f9e0 <L2C_Send_Command_Reject>:
 801f9e0:	b518      	push	{r3, r4, lr}
 801f9e2:	0209      	lsls	r1, r1, #8
 801f9e4:	b083      	sub	sp, #12
 801f9e6:	f041 0101 	orr.w	r1, r1, #1
 801f9ea:	f8ad 1000 	strh.w	r1, [sp]
 801f9ee:	2a02      	cmp	r2, #2
 801f9f0:	bf0c      	ite	eq
 801f9f2:	2406      	moveq	r4, #6
 801f9f4:	2402      	movne	r4, #2
 801f9f6:	f8ad 4002 	strh.w	r4, [sp, #2]
 801f9fa:	f8ad 2004 	strh.w	r2, [sp, #4]
 801f9fe:	9906      	ldr	r1, [sp, #24]
 801fa00:	f8bd 2002 	ldrh.w	r2, [sp, #2]
 801fa04:	f8ad 3006 	strh.w	r3, [sp, #6]
 801fa08:	f8ad 1008 	strh.w	r1, [sp, #8]
 801fa0c:	1d12      	adds	r2, r2, #4
 801fa0e:	466b      	mov	r3, sp
 801fa10:	b292      	uxth	r2, r2
 801fa12:	2105      	movs	r1, #5
 801fa14:	f7ff ffba 	bl	801f98c <L2C_Send_Packet>
 801fa18:	b004      	add	sp, #16
 801fa1a:	bd10      	pop	{r4, pc}

0801fa1c <L2C_Get_Connection>:
 801fa1c:	4602      	mov	r2, r0
 801fa1e:	b430      	push	{r4, r5}
 801fa20:	480a      	ldr	r0, [pc, #40]	; (801fa4c <??DataTable8_1>)
 801fa22:	4c09      	ldr	r4, [pc, #36]	; (801fa48 <??DataTable8>)
 801fa24:	2300      	movs	r3, #0
 801fa26:	6f80      	ldr	r0, [r0, #120]	; 0x78
 801fa28:	7da4      	ldrb	r4, [r4, #22]
 801fa2a:	e001      	b.n	801fa30 <??L2C_Get_Connection_0>

0801fa2c <??L2C_Get_Connection_1>:
 801fa2c:	1c5b      	adds	r3, r3, #1
 801fa2e:	300c      	adds	r0, #12

0801fa30 <??L2C_Get_Connection_0>:
 801fa30:	42a3      	cmp	r3, r4
 801fa32:	d205      	bcs.n	801fa40 <??L2C_Get_Connection_2>
 801fa34:	8805      	ldrh	r5, [r0, #0]
 801fa36:	4295      	cmp	r5, r2
 801fa38:	d1f8      	bne.n	801fa2c <??L2C_Get_Connection_1>
 801fa3a:	700b      	strb	r3, [r1, #0]
 801fa3c:	bc30      	pop	{r4, r5}
 801fa3e:	4770      	bx	lr

0801fa40 <??L2C_Get_Connection_2>:
 801fa40:	2000      	movs	r0, #0
 801fa42:	bc30      	pop	{r4, r5}
 801fa44:	4770      	bx	lr
	...

0801fa48 <??DataTable8>:
 801fa48:	36e8 2000                                   .6. 

0801fa4c <??DataTable8_1>:
 801fa4c:	3710 2000                                   .7. 

0801fa50 <aci_l2cap_connection_parameter_update_req>:
 801fa50:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 801fa54:	4689      	mov	r9, r1
 801fa56:	4605      	mov	r5, r0
 801fa58:	4690      	mov	r8, r2
 801fa5a:	461f      	mov	r7, r3
 801fa5c:	4669      	mov	r1, sp
 801fa5e:	f7ff ffdd 	bl	801fa1c <L2C_Get_Connection>
 801fa62:	0004      	movs	r4, r0
 801fa64:	d01b      	beq.n	801fa9e <??aci_l2cap_connection_parameter_update_req_0>
 801fa66:	f640 417b 	movw	r1, #3195	; 0xc7b
 801fa6a:	f1a9 0006 	sub.w	r0, r9, #6
 801fa6e:	4288      	cmp	r0, r1
 801fa70:	bf3c      	itt	cc
 801fa72:	f1a8 0206 	subcc.w	r2, r8, #6
 801fa76:	428a      	cmpcc	r2, r1
 801fa78:	d211      	bcs.n	801fa9e <??aci_l2cap_connection_parameter_update_req_0>
 801fa7a:	45c8      	cmp	r8, r9
 801fa7c:	d30f      	bcc.n	801fa9e <??aci_l2cap_connection_parameter_update_req_0>
 801fa7e:	f5b7 7ffa 	cmp.w	r7, #500	; 0x1f4
 801fa82:	d20c      	bcs.n	801fa9e <??aci_l2cap_connection_parameter_update_req_0>
 801fa84:	9e08      	ldr	r6, [sp, #32]
 801fa86:	1c79      	adds	r1, r7, #1
 801fa88:	fb08 f001 	mul.w	r0, r8, r1
 801fa8c:	00b3      	lsls	r3, r6, #2
 801fa8e:	4283      	cmp	r3, r0
 801fa90:	d305      	bcc.n	801fa9e <??aci_l2cap_connection_parameter_update_req_0>
 801fa92:	f1a6 020a 	sub.w	r2, r6, #10
 801fa96:	f640 4077 	movw	r0, #3191	; 0xc77
 801fa9a:	4282      	cmp	r2, r0
 801fa9c:	d302      	bcc.n	801faa4 <??aci_l2cap_connection_parameter_update_req_1>

0801fa9e <??aci_l2cap_connection_parameter_update_req_0>:
 801fa9e:	2092      	movs	r0, #146	; 0x92
 801faa0:	e8bd 83f2 	ldmia.w	sp!, {r1, r4, r5, r6, r7, r8, r9, pc}

0801faa4 <??aci_l2cap_connection_parameter_update_req_1>:
 801faa4:	78a0      	ldrb	r0, [r4, #2]
 801faa6:	f010 0f03 	tst.w	r0, #3
 801faaa:	bf18      	it	ne
 801faac:	200c      	movne	r0, #12
 801faae:	d147      	bne.n	801fb40 <??aci_l2cap_connection_parameter_update_req_2>
 801fab0:	2220      	movs	r2, #32
 801fab2:	4629      	mov	r1, r5
 801fab4:	2000      	movs	r0, #0
 801fab6:	f005 f8fc 	bl	8024cb2 <ACL_PM_New>
 801faba:	0005      	movs	r5, r0
 801fabc:	bf08      	it	eq
 801fabe:	2064      	moveq	r0, #100	; 0x64
 801fac0:	d03e      	beq.n	801fb40 <??aci_l2cap_connection_parameter_update_req_2>
 801fac2:	68a9      	ldr	r1, [r5, #8]
 801fac4:	2012      	movs	r0, #18
 801fac6:	7308      	strb	r0, [r1, #12]
 801fac8:	78e0      	ldrb	r0, [r4, #3]
 801faca:	68a9      	ldr	r1, [r5, #8]
 801facc:	7348      	strb	r0, [r1, #13]
 801face:	68a9      	ldr	r1, [r5, #8]
 801fad0:	2008      	movs	r0, #8
 801fad2:	7388      	strb	r0, [r1, #14]
 801fad4:	68a9      	ldr	r1, [r5, #8]
 801fad6:	2000      	movs	r0, #0
 801fad8:	73c8      	strb	r0, [r1, #15]
 801fada:	68a8      	ldr	r0, [r5, #8]
 801fadc:	f880 9010 	strb.w	r9, [r0, #16]
 801fae0:	68a8      	ldr	r0, [r5, #8]
 801fae2:	ea4f 2919 	mov.w	r9, r9, lsr #8
 801fae6:	f880 9011 	strb.w	r9, [r0, #17]
 801faea:	68a9      	ldr	r1, [r5, #8]
 801faec:	f881 8012 	strb.w	r8, [r1, #18]
 801faf0:	68a8      	ldr	r0, [r5, #8]
 801faf2:	ea4f 2818 	mov.w	r8, r8, lsr #8
 801faf6:	f880 8013 	strb.w	r8, [r0, #19]
 801fafa:	68a9      	ldr	r1, [r5, #8]
 801fafc:	750f      	strb	r7, [r1, #20]
 801fafe:	68a8      	ldr	r0, [r5, #8]
 801fb00:	0a3f      	lsrs	r7, r7, #8
 801fb02:	7547      	strb	r7, [r0, #21]
 801fb04:	68a9      	ldr	r1, [r5, #8]
 801fb06:	758e      	strb	r6, [r1, #22]
 801fb08:	68a8      	ldr	r0, [r5, #8]
 801fb0a:	0a36      	lsrs	r6, r6, #8
 801fb0c:	210c      	movs	r1, #12
 801fb0e:	75c6      	strb	r6, [r0, #23]
 801fb10:	80e9      	strh	r1, [r5, #6]
 801fb12:	4629      	mov	r1, r5
 801fb14:	2005      	movs	r0, #5
 801fb16:	f7ff fdcb 	bl	801f6b0 <L2C_Send_Data>
 801fb1a:	b130      	cbz	r0, 801fb2a <??aci_l2cap_connection_parameter_update_req_3>
 801fb1c:	2100      	movs	r1, #0
 801fb1e:	4628      	mov	r0, r5
 801fb20:	f005 f8df 	bl	8024ce2 <ACL_PM_Release>
 801fb24:	2091      	movs	r0, #145	; 0x91
 801fb26:	e8bd 83f2 	ldmia.w	sp!, {r1, r4, r5, r6, r7, r8, r9, pc}

0801fb2a <??aci_l2cap_connection_parameter_update_req_3>:
 801fb2a:	f89d 0000 	ldrb.w	r0, [sp]
 801fb2e:	f247 5130 	movw	r1, #30000	; 0x7530
 801fb32:	f7ff feec 	bl	801f90e <L2C_Start_Timer>
 801fb36:	78a0      	ldrb	r0, [r4, #2]
 801fb38:	f040 0004 	orr.w	r0, r0, #4
 801fb3c:	70a0      	strb	r0, [r4, #2]
 801fb3e:	2000      	movs	r0, #0

0801fb40 <??aci_l2cap_connection_parameter_update_req_2>:
 801fb40:	e8bd 83f2 	ldmia.w	sp!, {r1, r4, r5, r6, r7, r8, r9, pc}

0801fb44 <L2C_CPU_Rsp_Rx_Handler>:
 801fb44:	b57c      	push	{r2, r3, r4, r5, r6, lr}
 801fb46:	4605      	mov	r5, r0
 801fb48:	460c      	mov	r4, r1
 801fb4a:	4828      	ldr	r0, [pc, #160]	; (801fbec <??DataTable2>)
 801fb4c:	6f81      	ldr	r1, [r0, #120]	; 0x78
 801fb4e:	68a6      	ldr	r6, [r4, #8]
 801fb50:	eb05 0345 	add.w	r3, r5, r5, lsl #1
 801fb54:	eb01 0083 	add.w	r0, r1, r3, lsl #2
 801fb58:	7882      	ldrb	r2, [r0, #2]
 801fb5a:	7b71      	ldrb	r1, [r6, #13]
 801fb5c:	f002 0205 	and.w	r2, r2, #5
 801fb60:	2a04      	cmp	r2, #4
 801fb62:	d007      	beq.n	801fb74 <??L2C_CPU_Rsp_Rx_Handler_0>
 801fb64:	2400      	movs	r4, #0
 801fb66:	9400      	str	r4, [sp, #0]
 801fb68:	2300      	movs	r3, #0
 801fb6a:	2200      	movs	r2, #0
 801fb6c:	4628      	mov	r0, r5
 801fb6e:	f7ff ff37 	bl	801f9e0 <L2C_Send_Command_Reject>
 801fb72:	bd76      	pop	{r1, r2, r4, r5, r6, pc}

0801fb74 <??L2C_CPU_Rsp_Rx_Handler_0>:
 801fb74:	78c0      	ldrb	r0, [r0, #3]
 801fb76:	4281      	cmp	r1, r0
 801fb78:	d10f      	bne.n	801fb9a <??L2C_CPU_Rsp_Rx_Handler_1>
 801fb7a:	4628      	mov	r0, r5
 801fb7c:	f7ff fef9 	bl	801f972 <L2C_Increment_Identifier>
 801fb80:	4628      	mov	r0, r5
 801fb82:	f7ff fed4 	bl	801f92e <L2C_Stop_Timer>
 801fb86:	68a0      	ldr	r0, [r4, #8]
 801fb88:	7c01      	ldrb	r1, [r0, #16]
 801fb8a:	7c40      	ldrb	r0, [r0, #17]
 801fb8c:	eb01 2100 	add.w	r1, r1, r0, lsl #8
 801fb90:	2000      	movs	r0, #0
 801fb92:	b28a      	uxth	r2, r1
 801fb94:	88a1      	ldrh	r1, [r4, #4]
 801fb96:	f7ff fa3f 	bl	801f018 <EVT_aci_l2cap_connection_update_resp>

0801fb9a <??L2C_CPU_Rsp_Rx_Handler_1>:
 801fb9a:	2000      	movs	r0, #0
 801fb9c:	bd76      	pop	{r1, r2, r4, r5, r6, pc}

0801fb9e <L2C_CPU_Req_Rx_Handler>:
 801fb9e:	460a      	mov	r2, r1
 801fba0:	b538      	push	{r3, r4, r5, lr}
 801fba2:	4912      	ldr	r1, [pc, #72]	; (801fbec <??DataTable2>)
 801fba4:	6f8b      	ldr	r3, [r1, #120]	; 0x78
 801fba6:	6891      	ldr	r1, [r2, #8]
 801fba8:	eb00 0540 	add.w	r5, r0, r0, lsl #1
 801fbac:	eb03 0585 	add.w	r5, r3, r5, lsl #2
 801fbb0:	7b4c      	ldrb	r4, [r1, #13]
 801fbb2:	78a9      	ldrb	r1, [r5, #2]
 801fbb4:	070b      	lsls	r3, r1, #28
 801fbb6:	d503      	bpl.n	801fbc0 <??L2C_CPU_Req_Rx_Handler_0>
 801fbb8:	7929      	ldrb	r1, [r5, #4]
 801fbba:	42a1      	cmp	r1, r4
 801fbbc:	d10d      	bne.n	801fbda <??L2C_CPU_Req_Rx_Handler_1>
 801fbbe:	e00a      	b.n	801fbd6 <??L2C_CPU_Req_Rx_Handler_2>

0801fbc0 <??L2C_CPU_Req_Rx_Handler_0>:
 801fbc0:	07cb      	lsls	r3, r1, #31
 801fbc2:	d50a      	bpl.n	801fbda <??L2C_CPU_Req_Rx_Handler_1>
 801fbc4:	8891      	ldrh	r1, [r2, #4]
 801fbc6:	2000      	movs	r0, #0
 801fbc8:	f7ff fa32 	bl	801f030 <EVT_aci_l2cap_connection_update_req>
 801fbcc:	78a8      	ldrb	r0, [r5, #2]
 801fbce:	712c      	strb	r4, [r5, #4]
 801fbd0:	f040 0008 	orr.w	r0, r0, #8
 801fbd4:	70a8      	strb	r0, [r5, #2]

0801fbd6 <??L2C_CPU_Req_Rx_Handler_2>:
 801fbd6:	2000      	movs	r0, #0
 801fbd8:	bd32      	pop	{r1, r4, r5, pc}

0801fbda <??L2C_CPU_Req_Rx_Handler_1>:
 801fbda:	2100      	movs	r1, #0
 801fbdc:	9100      	str	r1, [sp, #0]
 801fbde:	2300      	movs	r3, #0
 801fbe0:	2200      	movs	r2, #0
 801fbe2:	4621      	mov	r1, r4
 801fbe4:	f7ff fefc 	bl	801f9e0 <L2C_Send_Command_Reject>
 801fbe8:	bd32      	pop	{r1, r4, r5, pc}
	...

0801fbec <??DataTable2>:
 801fbec:	3710 2000                                   .7. 

0801fbf0 <aci_l2cap_connection_parameter_update_resp>:
 801fbf0:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 801fbf4:	b084      	sub	sp, #16
 801fbf6:	4688      	mov	r8, r1
 801fbf8:	4607      	mov	r7, r0
 801fbfa:	4691      	mov	r9, r2
 801fbfc:	469a      	mov	sl, r3
 801fbfe:	a903      	add	r1, sp, #12
 801fc00:	f7ff ff0c 	bl	801fa1c <L2C_Get_Connection>
 801fc04:	0005      	movs	r5, r0
 801fc06:	bf08      	it	eq
 801fc08:	2002      	moveq	r0, #2
 801fc0a:	d04a      	beq.n	801fca2 <??aci_l2cap_connection_parameter_update_resp_0>
 801fc0c:	78a8      	ldrb	r0, [r5, #2]
 801fc0e:	0701      	lsls	r1, r0, #28
 801fc10:	bf58      	it	pl
 801fc12:	200c      	movpl	r0, #12
 801fc14:	d545      	bpl.n	801fca2 <??aci_l2cap_connection_parameter_update_resp_0>
 801fc16:	9e0f      	ldr	r6, [sp, #60]	; 0x3c
 801fc18:	7928      	ldrb	r0, [r5, #4]
 801fc1a:	42b0      	cmp	r0, r6
 801fc1c:	bf18      	it	ne
 801fc1e:	2092      	movne	r0, #146	; 0x92
 801fc20:	d13f      	bne.n	801fca2 <??aci_l2cap_connection_parameter_update_resp_0>
 801fc22:	2220      	movs	r2, #32
 801fc24:	4639      	mov	r1, r7
 801fc26:	2000      	movs	r0, #0
 801fc28:	f005 f843 	bl	8024cb2 <ACL_PM_New>
 801fc2c:	0004      	movs	r4, r0
 801fc2e:	bf08      	it	eq
 801fc30:	2064      	moveq	r0, #100	; 0x64
 801fc32:	d036      	beq.n	801fca2 <??aci_l2cap_connection_parameter_update_resp_0>
 801fc34:	78a9      	ldrb	r1, [r5, #2]
 801fc36:	9810      	ldr	r0, [sp, #64]	; 0x40
 801fc38:	f001 01f7 	and.w	r1, r1, #247	; 0xf7
 801fc3c:	70a9      	strb	r1, [r5, #2]
 801fc3e:	b198      	cbz	r0, 801fc68 <??aci_l2cap_connection_parameter_update_resp_1>
 801fc40:	f8bd 0038 	ldrh.w	r0, [sp, #56]	; 0x38
 801fc44:	f8bd 1034 	ldrh.w	r1, [sp, #52]	; 0x34
 801fc48:	4653      	mov	r3, sl
 801fc4a:	9002      	str	r0, [sp, #8]
 801fc4c:	f8bd 0030 	ldrh.w	r0, [sp, #48]	; 0x30
 801fc50:	9101      	str	r1, [sp, #4]
 801fc52:	464a      	mov	r2, r9
 801fc54:	9000      	str	r0, [sp, #0]
 801fc56:	4641      	mov	r1, r8
 801fc58:	4638      	mov	r0, r7
 801fc5a:	f000 fa1d 	bl	8020098 <hci_le_connection_update>
 801fc5e:	1e40      	subs	r0, r0, #1
 801fc60:	4180      	sbcs	r0, r0
 801fc62:	43c0      	mvns	r0, r0
 801fc64:	0fc0      	lsrs	r0, r0, #31
 801fc66:	e000      	b.n	801fc6a <??aci_l2cap_connection_parameter_update_resp_2>

0801fc68 <??aci_l2cap_connection_parameter_update_resp_1>:
 801fc68:	2001      	movs	r0, #1

0801fc6a <??aci_l2cap_connection_parameter_update_resp_2>:
 801fc6a:	68a2      	ldr	r2, [r4, #8]
 801fc6c:	2113      	movs	r1, #19
 801fc6e:	7311      	strb	r1, [r2, #12]
 801fc70:	68a1      	ldr	r1, [r4, #8]
 801fc72:	2202      	movs	r2, #2
 801fc74:	734e      	strb	r6, [r1, #13]
 801fc76:	68a1      	ldr	r1, [r4, #8]
 801fc78:	738a      	strb	r2, [r1, #14]
 801fc7a:	68a1      	ldr	r1, [r4, #8]
 801fc7c:	2200      	movs	r2, #0
 801fc7e:	73ca      	strb	r2, [r1, #15]
 801fc80:	68a2      	ldr	r2, [r4, #8]
 801fc82:	7410      	strb	r0, [r2, #16]
 801fc84:	68a1      	ldr	r1, [r4, #8]
 801fc86:	2000      	movs	r0, #0
 801fc88:	7448      	strb	r0, [r1, #17]
 801fc8a:	2006      	movs	r0, #6
 801fc8c:	80e0      	strh	r0, [r4, #6]
 801fc8e:	4621      	mov	r1, r4
 801fc90:	2005      	movs	r0, #5
 801fc92:	f7ff fd0d 	bl	801f6b0 <L2C_Send_Data>
 801fc96:	b120      	cbz	r0, 801fca2 <??aci_l2cap_connection_parameter_update_resp_0>
 801fc98:	2100      	movs	r1, #0
 801fc9a:	4620      	mov	r0, r4
 801fc9c:	f005 f821 	bl	8024ce2 <ACL_PM_Release>
 801fca0:	2091      	movs	r0, #145	; 0x91

0801fca2 <??aci_l2cap_connection_parameter_update_resp_0>:
 801fca2:	b004      	add	sp, #16
 801fca4:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}

0801fca8 <LECTRL_Init>:
 801fca8:	b510      	push	{r4, lr}
 801fcaa:	f8df 47c4 	ldr.w	r4, [pc, #1988]	; 8020470 <??DataTable15>
 801fcae:	7820      	ldrb	r0, [r4, #0]
 801fcb0:	b928      	cbnz	r0, 801fcbe <??LECTRL_Init_0>
 801fcb2:	f8df 07c0 	ldr.w	r0, [pc, #1984]	; 8020474 <??DataTable15_1>
 801fcb6:	f010 fd19 	bl	80306ec <ll_sys_ble_cntrl_init>
 801fcba:	2101      	movs	r1, #1
 801fcbc:	7021      	strb	r1, [r4, #0]

0801fcbe <??LECTRL_Init_0>:
 801fcbe:	bd10      	pop	{r4, pc}

0801fcc0 <LECTRL_Reset>:
 801fcc0:	f20f 70d4 	addw	r0, pc, #2004	; 0x7d4
 801fcc4:	b570      	push	{r4, r5, r6, lr}
 801fcc6:	e9d0 2300 	ldrd	r2, r3, [r0]
 801fcca:	f8df 57ac 	ldr.w	r5, [pc, #1964]	; 8020478 <??DataTable15_2>
 801fcce:	f105 0120 	add.w	r1, r5, #32
 801fcd2:	e9c1 2300 	strd	r2, r3, [r1]
 801fcd6:	f20f 70c8 	addw	r0, pc, #1992	; 0x7c8
 801fcda:	e9d0 1200 	ldrd	r1, r2, [r0]
 801fcde:	f105 0630 	add.w	r6, r5, #48	; 0x30
 801fce2:	2413      	movs	r4, #19
 801fce4:	e9c5 1200 	strd	r1, r2, [r5]
 801fce8:	f20f 71bc 	addw	r1, pc, #1980	; 0x7bc
 801fcec:	e9d1 0300 	ldrd	r0, r3, [r1]
 801fcf0:	f105 0228 	add.w	r2, r5, #40	; 0x28
 801fcf4:	e9c2 0300 	strd	r0, r3, [r2]
 801fcf8:	f105 0020 	add.w	r0, r5, #32
 801fcfc:	f7e5 fa65 	bl	80051ca <ll_intf_set_event_mask>
 801fd00:	f105 0028 	add.w	r0, r5, #40	; 0x28
 801fd04:	f7e5 fa63 	bl	80051ce <ll_intf_set_event_mask_page2>
 801fd08:	4628      	mov	r0, r5
 801fd0a:	f7e5 fa62 	bl	80051d2 <ll_intf_set_le_event_mask>
 801fd0e:	2014      	movs	r0, #20
 801fd10:	f7e5 fa7e 	bl	8005210 <ll_intf_set_custom_event_mask>
 801fd14:	2002      	movs	r0, #2
 801fd16:	210a      	movs	r1, #10
 801fd18:	61e8      	str	r0, [r5, #28]
 801fd1a:	7229      	strb	r1, [r5, #8]
 801fd1c:	f105 0014 	add.w	r0, r5, #20
 801fd20:	f105 0114 	add.w	r1, r5, #20
 801fd24:	61a8      	str	r0, [r5, #24]
 801fd26:	6169      	str	r1, [r5, #20]
 801fd28:	f105 000c 	add.w	r0, r5, #12
 801fd2c:	f105 010c 	add.w	r1, r5, #12
 801fd30:	6128      	str	r0, [r5, #16]
 801fd32:	60e9      	str	r1, [r5, #12]

0801fd34 <??LECTRL_Reset_0>:
 801fd34:	4631      	mov	r1, r6
 801fd36:	f105 0014 	add.w	r0, r5, #20
 801fd3a:	f005 f8c3 	bl	8024ec4 <CList_Insert>
 801fd3e:	3610      	adds	r6, #16
 801fd40:	1e64      	subs	r4, r4, #1
 801fd42:	d1f7      	bne.n	801fd34 <??LECTRL_Reset_0>
 801fd44:	f7e4 fa8c 	bl	8004260 <ll_intf_reset>
 801fd48:	b2c0      	uxtb	r0, r0
 801fd4a:	bd70      	pop	{r4, r5, r6, pc}

0801fd4c <LECTRL_Process>:
 801fd4c:	2002      	movs	r0, #2
 801fd4e:	f7e5 ba1e 	b.w	800518e <ll_intf_chng_evnt_hndlr_state>

0801fd52 <LECTRL_AclPacketTransmitted>:
 801fd52:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 801fd56:	4689      	mov	r9, r1
 801fd58:	4680      	mov	r8, r0
 801fd5a:	f8df 771c 	ldr.w	r7, [pc, #1820]	; 8020478 <??DataTable15_2>
 801fd5e:	68f9      	ldr	r1, [r7, #12]
 801fd60:	2600      	movs	r6, #0
 801fd62:	f107 000c 	add.w	r0, r7, #12
 801fd66:	4288      	cmp	r0, r1
 801fd68:	d01f      	beq.n	801fdaa <??LECTRL_AclPacketTransmitted_0>
 801fd6a:	f005 f8c1 	bl	8024ef0 <CList_Get_Head>
 801fd6e:	4604      	mov	r4, r0
 801fd70:	e000      	b.n	801fd74 <??LECTRL_AclPacketTransmitted_1>

0801fd72 <??LECTRL_AclPacketTransmitted_2>:
 801fd72:	462c      	mov	r4, r5

0801fd74 <??LECTRL_AclPacketTransmitted_1>:
 801fd74:	f107 010c 	add.w	r1, r7, #12
 801fd78:	428c      	cmp	r4, r1
 801fd7a:	d016      	beq.n	801fdaa <??LECTRL_AclPacketTransmitted_0>
 801fd7c:	8920      	ldrh	r0, [r4, #8]
 801fd7e:	6825      	ldr	r5, [r4, #0]
 801fd80:	4540      	cmp	r0, r8
 801fd82:	d1f6      	bne.n	801fd72 <??LECTRL_AclPacketTransmitted_2>
 801fd84:	68e0      	ldr	r0, [r4, #12]
 801fd86:	2800      	cmp	r0, #0
 801fd88:	d0f3      	beq.n	801fd72 <??LECTRL_AclPacketTransmitted_2>
 801fd8a:	f7ff fd91 	bl	801f8b0 <L2C_Tx_Data_Conplete_Handler>
 801fd8e:	4621      	mov	r1, r4
 801fd90:	f107 000c 	add.w	r0, r7, #12
 801fd94:	f005 f8ba 	bl	8024f0c <CList_Remove_Node>
 801fd98:	4621      	mov	r1, r4
 801fd9a:	f107 0014 	add.w	r0, r7, #20
 801fd9e:	1c76      	adds	r6, r6, #1
 801fda0:	f005 f890 	bl	8024ec4 <CList_Insert>
 801fda4:	b2f0      	uxtb	r0, r6
 801fda6:	4548      	cmp	r0, r9
 801fda8:	d1e3      	bne.n	801fd72 <??LECTRL_AclPacketTransmitted_2>

0801fdaa <??LECTRL_AclPacketTransmitted_0>:
 801fdaa:	e8bd 83f1 	ldmia.w	sp!, {r0, r4, r5, r6, r7, r8, r9, pc}

0801fdae <BLE_SendIsoDataToLinkLayer>:
 801fdae:	4770      	bx	lr

0801fdb0 <LECTRL_SendAclDataToController>:
 801fdb0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 801fdb4:	4606      	mov	r6, r0
 801fdb6:	460d      	mov	r5, r1
 801fdb8:	78b7      	ldrb	r7, [r6, #2]
 801fdba:	78f1      	ldrb	r1, [r6, #3]
 801fdbc:	4690      	mov	r8, r2
 801fdbe:	f8df 06bc 	ldr.w	r0, [pc, #1724]	; 802047c <??DataTable15_3>
 801fdc2:	ea47 2701 	orr.w	r7, r7, r1, lsl #8
 801fdc6:	f7e5 fa27 	bl	8005218 <os_mem_pool_alloc>
 801fdca:	0004      	movs	r4, r0
 801fdcc:	d00a      	beq.n	801fde4 <??LECTRL_SendAclDataToController_0>
 801fdce:	2210      	movs	r2, #16
 801fdd0:	2100      	movs	r1, #0
 801fdd2:	f7ee ff0a 	bl	800ebea <ble_memset>
 801fdd6:	f7e5 f903 	bl	8004fe0 <ll_intf_alloc_ll_pkt>
 801fdda:	6020      	str	r0, [r4, #0]
 801fddc:	b928      	cbnz	r0, 801fdea <??LECTRL_SendAclDataToController_1>
 801fdde:	4620      	mov	r0, r4
 801fde0:	f7e5 fa1c 	bl	800521c <os_mem_pool_free>

0801fde4 <??LECTRL_SendAclDataToController_0>:
 801fde4:	2064      	movs	r0, #100	; 0x64
 801fde6:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0801fdea <??LECTRL_SendAclDataToController_1>:
 801fdea:	1d3a      	adds	r2, r7, #4
 801fdec:	b292      	uxth	r2, r2
 801fdee:	4631      	mov	r1, r6
 801fdf0:	f7ee feaa 	bl	800eb48 <ble_memcpy>
 801fdf4:	2004      	movs	r0, #4
 801fdf6:	8160      	strh	r0, [r4, #10]
 801fdf8:	81a7      	strh	r7, [r4, #12]
 801fdfa:	f1b8 0f01 	cmp.w	r8, #1
 801fdfe:	bf0c      	ite	eq
 801fe00:	2000      	moveq	r0, #0
 801fe02:	2001      	movne	r0, #1
 801fe04:	73a0      	strb	r0, [r4, #14]
 801fe06:	1e68      	subs	r0, r5, #1
 801fe08:	4621      	mov	r1, r4
 801fe0a:	b280      	uxth	r0, r0
 801fe0c:	f7e4 ff73 	bl	8004cf6 <ll_intf_acl_data_from_host_to_cntrlr>
 801fe10:	b2c0      	uxtb	r0, r0
 801fe12:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0801fe16 <LECTRL_SendAclDataFromHostToController>:
 801fe16:	e92d 41fc 	stmdb	sp!, {r2, r3, r4, r5, r6, r7, r8, lr}
 801fe1a:	4606      	mov	r6, r0
 801fe1c:	68b4      	ldr	r4, [r6, #8]
 801fe1e:	7a27      	ldrb	r7, [r4, #8]
 801fe20:	f8df 0658 	ldr.w	r0, [pc, #1624]	; 802047c <??DataTable15_3>
 801fe24:	7a61      	ldrb	r1, [r4, #9]
 801fe26:	ea47 2701 	orr.w	r7, r7, r1, lsl #8
 801fe2a:	f7e5 f9f5 	bl	8005218 <os_mem_pool_alloc>
 801fe2e:	1d3f      	adds	r7, r7, #4
 801fe30:	0005      	movs	r5, r0
 801fe32:	d00a      	beq.n	801fe4a <??LECTRL_SendAclDataFromHostToController_0>
 801fe34:	2210      	movs	r2, #16
 801fe36:	2100      	movs	r1, #0
 801fe38:	f7ee fed7 	bl	800ebea <ble_memset>
 801fe3c:	f7e5 f8d0 	bl	8004fe0 <ll_intf_alloc_ll_pkt>
 801fe40:	6028      	str	r0, [r5, #0]
 801fe42:	b928      	cbnz	r0, 801fe50 <??LECTRL_SendAclDataFromHostToController_1>
 801fe44:	4628      	mov	r0, r5
 801fe46:	f7e5 f9e9 	bl	800521c <os_mem_pool_free>

0801fe4a <??LECTRL_SendAclDataFromHostToController_0>:
 801fe4a:	2064      	movs	r0, #100	; 0x64
 801fe4c:	e8bd 81f6 	ldmia.w	sp!, {r1, r2, r4, r5, r6, r7, r8, pc}

0801fe50 <??LECTRL_SendAclDataFromHostToController_1>:
 801fe50:	b2b9      	uxth	r1, r7
 801fe52:	2921      	cmp	r1, #33	; 0x21
 801fe54:	d206      	bcs.n	801fe64 <??LECTRL_SendAclDataFromHostToController_2>
 801fe56:	b2ba      	uxth	r2, r7
 801fe58:	f104 0108 	add.w	r1, r4, #8
 801fe5c:	1d00      	adds	r0, r0, #4
 801fe5e:	f7ee fe73 	bl	800eb48 <ble_memcpy>
 801fe62:	e018      	b.n	801fe96 <??LECTRL_SendAclDataFromHostToController_3>

0801fe64 <??LECTRL_SendAclDataFromHostToController_2>:
 801fe64:	88a2      	ldrh	r2, [r4, #4]
 801fe66:	f104 0108 	add.w	r1, r4, #8
 801fe6a:	1d00      	adds	r0, r0, #4
 801fe6c:	f102 0804 	add.w	r8, r2, #4
 801fe70:	fa1f f888 	uxth.w	r8, r8
 801fe74:	f7ee fe68 	bl	800eb48 <ble_memcpy>
 801fe78:	e00a      	b.n	801fe90 <??LECTRL_SendAclDataFromHostToController_4>

0801fe7a <??LECTRL_SendAclDataFromHostToController_5>:
 801fe7a:	6828      	ldr	r0, [r5, #0]
 801fe7c:	88a2      	ldrh	r2, [r4, #4]
 801fe7e:	fa1f f388 	uxth.w	r3, r8
 801fe82:	f104 0108 	add.w	r1, r4, #8
 801fe86:	4418      	add	r0, r3
 801fe88:	f7ee fe5e 	bl	800eb48 <ble_memcpy>
 801fe8c:	88a0      	ldrh	r0, [r4, #4]
 801fe8e:	4480      	add	r8, r0

0801fe90 <??LECTRL_SendAclDataFromHostToController_4>:
 801fe90:	6824      	ldr	r4, [r4, #0]
 801fe92:	2c00      	cmp	r4, #0
 801fe94:	d1f1      	bne.n	801fe7a <??LECTRL_SendAclDataFromHostToController_5>

0801fe96 <??LECTRL_SendAclDataFromHostToController_3>:
 801fe96:	2004      	movs	r0, #4
 801fe98:	8168      	strh	r0, [r5, #10]
 801fe9a:	81af      	strh	r7, [r5, #12]
 801fe9c:	7b30      	ldrb	r0, [r6, #12]
 801fe9e:	2801      	cmp	r0, #1
 801fea0:	bf0c      	ite	eq
 801fea2:	2000      	moveq	r0, #0
 801fea4:	2001      	movne	r0, #1
 801fea6:	73a8      	strb	r0, [r5, #14]
 801fea8:	f8df 45cc 	ldr.w	r4, [pc, #1484]	; 8020478 <??DataTable15_2>
 801feac:	4669      	mov	r1, sp
 801feae:	f104 0014 	add.w	r0, r4, #20
 801feb2:	f005 f80e 	bl	8024ed2 <CList_Remove_Head>
 801feb6:	9800      	ldr	r0, [sp, #0]
 801feb8:	b140      	cbz	r0, 801fecc <??LECTRL_SendAclDataFromHostToController_6>
 801feba:	60c6      	str	r6, [r0, #12]
 801febc:	88b1      	ldrh	r1, [r6, #4]
 801febe:	9800      	ldr	r0, [sp, #0]
 801fec0:	8101      	strh	r1, [r0, #8]
 801fec2:	9900      	ldr	r1, [sp, #0]
 801fec4:	f104 000c 	add.w	r0, r4, #12
 801fec8:	f004 fffc 	bl	8024ec4 <CList_Insert>

0801fecc <??LECTRL_SendAclDataFromHostToController_6>:
 801fecc:	88b0      	ldrh	r0, [r6, #4]
 801fece:	4629      	mov	r1, r5
 801fed0:	1e40      	subs	r0, r0, #1
 801fed2:	b280      	uxth	r0, r0
 801fed4:	f7e4 ff0f 	bl	8004cf6 <ll_intf_acl_data_from_host_to_cntrlr>
 801fed8:	b2c0      	uxtb	r0, r0
 801feda:	e8bd 81f6 	ldmia.w	sp!, {r1, r2, r4, r5, r6, r7, r8, pc}

0801fede <hci_disconnect>:
 801fede:	1e40      	subs	r0, r0, #1
 801fee0:	b580      	push	{r7, lr}
 801fee2:	b280      	uxth	r0, r0
 801fee4:	f7e4 f811 	bl	8003f0a <ll_intf_disconnect>
 801fee8:	b2c0      	uxtb	r0, r0
 801feea:	bd02      	pop	{r1, pc}

0801feec <hci_le_set_event_mask>:
 801feec:	b580      	push	{r7, lr}
 801feee:	6802      	ldr	r2, [r0, #0]
 801fef0:	f8df 1584 	ldr.w	r1, [pc, #1412]	; 8020478 <??DataTable15_2>
 801fef4:	600a      	str	r2, [r1, #0]
 801fef6:	6842      	ldr	r2, [r0, #4]
 801fef8:	4608      	mov	r0, r1
 801fefa:	604a      	str	r2, [r1, #4]
 801fefc:	f7e5 f969 	bl	80051d2 <ll_intf_set_le_event_mask>
 801ff00:	2000      	movs	r0, #0
 801ff02:	bd02      	pop	{r1, pc}

0801ff04 <hci_set_event_mask>:
 801ff04:	b580      	push	{r7, lr}
 801ff06:	6803      	ldr	r3, [r0, #0]
 801ff08:	f8df 156c 	ldr.w	r1, [pc, #1388]	; 8020478 <??DataTable15_2>
 801ff0c:	f101 0220 	add.w	r2, r1, #32
 801ff10:	6013      	str	r3, [r2, #0]
 801ff12:	6843      	ldr	r3, [r0, #4]
 801ff14:	f101 0020 	add.w	r0, r1, #32
 801ff18:	6053      	str	r3, [r2, #4]
 801ff1a:	f7e5 f956 	bl	80051ca <ll_intf_set_event_mask>
 801ff1e:	2000      	movs	r0, #0
 801ff20:	bd02      	pop	{r1, pc}

0801ff22 <hci_set_event_mask_page_2>:
 801ff22:	b580      	push	{r7, lr}
 801ff24:	6803      	ldr	r3, [r0, #0]
 801ff26:	f8df 1550 	ldr.w	r1, [pc, #1360]	; 8020478 <??DataTable15_2>
 801ff2a:	f101 0228 	add.w	r2, r1, #40	; 0x28
 801ff2e:	6013      	str	r3, [r2, #0]
 801ff30:	6843      	ldr	r3, [r0, #4]
 801ff32:	f101 0028 	add.w	r0, r1, #40	; 0x28
 801ff36:	6053      	str	r3, [r2, #4]
 801ff38:	f7e5 f949 	bl	80051ce <ll_intf_set_event_mask_page2>
 801ff3c:	2000      	movs	r0, #0
 801ff3e:	bd02      	pop	{r1, pc}

0801ff40 <hci_le_read_local_supported_features>:
 801ff40:	b580      	push	{r7, lr}
 801ff42:	f7e4 f8d4 	bl	80040ee <ll_intf_le_read_local_supported_features>
 801ff46:	b2c0      	uxtb	r0, r0
 801ff48:	bd02      	pop	{r1, pc}

0801ff4a <hci_le_set_advertising_parameters>:
 801ff4a:	b570      	push	{r4, r5, r6, lr}
 801ff4c:	b084      	sub	sp, #16
 801ff4e:	460c      	mov	r4, r1
 801ff50:	9e0a      	ldr	r6, [sp, #40]	; 0x28
 801ff52:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 801ff54:	9909      	ldr	r1, [sp, #36]	; 0x24
 801ff56:	f88d 600d 	strb.w	r6, [sp, #13]
 801ff5a:	f88d 500e 	strb.w	r5, [sp, #14]
 801ff5e:	f8ad 4002 	strh.w	r4, [sp, #2]
 801ff62:	f8ad 0000 	strh.w	r0, [sp]
 801ff66:	f88d 2004 	strb.w	r2, [sp, #4]
 801ff6a:	f88d 3005 	strb.w	r3, [sp, #5]
 801ff6e:	b929      	cbnz	r1, 801ff7c <??hci_le_set_advertising_parameters_0>
 801ff70:	2206      	movs	r2, #6
 801ff72:	f10d 0007 	add.w	r0, sp, #7
 801ff76:	f7ee fe38 	bl	800ebea <ble_memset>
 801ff7a:	e004      	b.n	801ff86 <??hci_le_set_advertising_parameters_1>

0801ff7c <??hci_le_set_advertising_parameters_0>:
 801ff7c:	2206      	movs	r2, #6
 801ff7e:	f10d 0007 	add.w	r0, sp, #7
 801ff82:	f7ee fde1 	bl	800eb48 <ble_memcpy>

0801ff86 <??hci_le_set_advertising_parameters_1>:
 801ff86:	9808      	ldr	r0, [sp, #32]
 801ff88:	f88d 0006 	strb.w	r0, [sp, #6]
 801ff8c:	4668      	mov	r0, sp
 801ff8e:	f7e4 f900 	bl	8004192 <ll_intf_le_set_adv_params>
 801ff92:	e0ce      	b.n	8020132 <?Subroutine0>

0801ff94 <hci_le_set_advertising_data>:
 801ff94:	b580      	push	{r7, lr}
 801ff96:	f7e4 f8f1 	bl	800417c <ll_intf_le_set_adv_data>
 801ff9a:	b2c0      	uxtb	r0, r0
 801ff9c:	bd02      	pop	{r1, pc}

0801ff9e <hci_le_set_scan_response_data>:
 801ff9e:	b580      	push	{r7, lr}
 801ffa0:	f7e4 fd62 	bl	8004a68 <ll_intf_le_set_scan_rsp_data>
 801ffa4:	b2c0      	uxtb	r0, r0
 801ffa6:	bd02      	pop	{r1, pc}

0801ffa8 <hci_le_set_advertising_enable>:
 801ffa8:	b580      	push	{r7, lr}
 801ffaa:	f7e4 f8dc 	bl	8004166 <ll_intf_le_set_adv_enable>
 801ffae:	b2c0      	uxtb	r0, r0
 801ffb0:	bd02      	pop	{r1, pc}

0801ffb2 <hci_le_set_scan_parameters>:
 801ffb2:	b51c      	push	{r2, r3, r4, lr}
 801ffb4:	9c04      	ldr	r4, [sp, #16]
 801ffb6:	f88d 0000 	strb.w	r0, [sp]
 801ffba:	f88d 3006 	strb.w	r3, [sp, #6]
 801ffbe:	f88d 4007 	strb.w	r4, [sp, #7]
 801ffc2:	f8ad 1002 	strh.w	r1, [sp, #2]
 801ffc6:	f8ad 2004 	strh.w	r2, [sp, #4]
 801ffca:	4668      	mov	r0, sp
 801ffcc:	f7e4 fcfa 	bl	80049c4 <ll_intf_le_set_scan_params>
 801ffd0:	b2c0      	uxtb	r0, r0
 801ffd2:	bd16      	pop	{r1, r2, r4, pc}

0801ffd4 <hci_le_set_scan_enable>:
 801ffd4:	b580      	push	{r7, lr}
 801ffd6:	f7e4 fd3c 	bl	8004a52 <ll_intf_le_set_scan_enable>
 801ffda:	b2c0      	uxtb	r0, r0
 801ffdc:	bd02      	pop	{r1, pc}

0801ffde <hci_le_create_connection>:
 801ffde:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 801ffe2:	4699      	mov	r9, r3
 801ffe4:	b087      	sub	sp, #28
 801ffe6:	4688      	mov	r8, r1
 801ffe8:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 801ffea:	9c11      	ldr	r4, [sp, #68]	; 0x44
 801ffec:	f8dd e048 	ldr.w	lr, [sp, #72]	; 0x48
 801fff0:	9d14      	ldr	r5, [sp, #80]	; 0x50
 801fff2:	9e15      	ldr	r6, [sp, #84]	; 0x54
 801fff4:	990e      	ldr	r1, [sp, #56]	; 0x38
 801fff6:	9f10      	ldr	r7, [sp, #64]	; 0x40
 801fff8:	f8ad 4010 	strh.w	r4, [sp, #16]
 801fffc:	f8ad e012 	strh.w	lr, [sp, #18]
 8020000:	f8ad 700e 	strh.w	r7, [sp, #14]
 8020004:	f88d 2004 	strb.w	r2, [sp, #4]
 8020008:	f8ad 0000 	strh.w	r0, [sp]
 802000c:	f8ad 8002 	strh.w	r8, [sp, #2]
 8020010:	f8ad 6018 	strh.w	r6, [sp, #24]
 8020014:	f8ad 5016 	strh.w	r5, [sp, #22]
 8020018:	f88d 300c 	strb.w	r3, [sp, #12]
 802001c:	b121      	cbz	r1, 8020028 <??hci_le_create_connection_0>
 802001e:	2206      	movs	r2, #6
 8020020:	f10d 0006 	add.w	r0, sp, #6
 8020024:	f7ee fd90 	bl	800eb48 <ble_memcpy>

08020028 <??hci_le_create_connection_0>:
 8020028:	9813      	ldr	r0, [sp, #76]	; 0x4c
 802002a:	f88d 9005 	strb.w	r9, [sp, #5]
 802002e:	f8ad 0014 	strh.w	r0, [sp, #20]
 8020032:	4668      	mov	r0, sp
 8020034:	f7e4 fc30 	bl	8004898 <ll_intf_le_create_conn>
 8020038:	b2c0      	uxtb	r0, r0
 802003a:	b007      	add	sp, #28
 802003c:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}

08020040 <hci_le_create_connection_cancel>:
 8020040:	b580      	push	{r7, lr}
 8020042:	f7e4 fdd6 	bl	8004bf2 <ll_intf_le_create_conn_cancel>
 8020046:	b2c0      	uxtb	r0, r0
 8020048:	bd02      	pop	{r1, pc}

0802004a <hci_le_receiver_test>:
 802004a:	b580      	push	{r7, lr}
 802004c:	f7e4 f9de 	bl	800440c <ll_intf_le_receiver_test>
 8020050:	b2c0      	uxtb	r0, r0
 8020052:	bd02      	pop	{r1, pc}

08020054 <hci_le_transmitter_test>:
 8020054:	b580      	push	{r7, lr}
 8020056:	f7e4 f9f7 	bl	8004448 <ll_intf_le_transmitter_test>
 802005a:	b2c0      	uxtb	r0, r0
 802005c:	bd02      	pop	{r1, pc}

0802005e <hci_le_test_end>:
 802005e:	b580      	push	{r7, lr}
 8020060:	f7e4 fa34 	bl	80044cc <ll_intf_le_test_end>
 8020064:	b2c0      	uxtb	r0, r0
 8020066:	bd02      	pop	{r1, pc}

08020068 <hci_le_set_data_length>:
 8020068:	1e40      	subs	r0, r0, #1
 802006a:	b580      	push	{r7, lr}
 802006c:	b280      	uxth	r0, r0
 802006e:	f7e4 fb40 	bl	80046f2 <ll_intf_le_set_data_length>
 8020072:	b2c0      	uxtb	r0, r0
 8020074:	bd02      	pop	{r1, pc}

08020076 <hci_le_read_suggested_default_data_length>:
 8020076:	b580      	push	{r7, lr}
 8020078:	f7e4 fbf9 	bl	800486e <ll_intf_le_read_sugg_default_data_length>
 802007c:	b2c0      	uxtb	r0, r0
 802007e:	bd02      	pop	{r1, pc}

08020080 <hci_le_write_suggested_default_data_length>:
 8020080:	b580      	push	{r7, lr}
 8020082:	f7e4 fbfb 	bl	800487c <ll_intf_le_wrt_sugg_default_data_length>
 8020086:	b2c0      	uxtb	r0, r0
 8020088:	bd02      	pop	{r1, pc}

0802008a <hci_le_read_remote_features>:
 802008a:	1e40      	subs	r0, r0, #1
 802008c:	b580      	push	{r7, lr}
 802008e:	b280      	uxth	r0, r0
 8020090:	f7e4 fd36 	bl	8004b00 <ll_intf_le_read_remote_used_features>
 8020094:	b2c0      	uxtb	r0, r0
 8020096:	bd02      	pop	{r1, pc}

08020098 <hci_le_connection_update>:
 8020098:	b530      	push	{r4, r5, lr}
 802009a:	b083      	sub	sp, #12
 802009c:	f8bd 4020 	ldrh.w	r4, [sp, #32]
 80200a0:	f8bd 501c 	ldrh.w	r5, [sp, #28]
 80200a4:	1e40      	subs	r0, r0, #1
 80200a6:	9402      	str	r4, [sp, #8]
 80200a8:	f8bd 4018 	ldrh.w	r4, [sp, #24]
 80200ac:	9501      	str	r5, [sp, #4]
 80200ae:	b280      	uxth	r0, r0
 80200b0:	9400      	str	r4, [sp, #0]
 80200b2:	f7e4 fd4f 	bl	8004b54 <ll_intf_le_conn_update>
 80200b6:	e008      	b.n	80200ca <?Subroutine2>

080200b8 <hci_read_local_version_information>:
 80200b8:	b53e      	push	{r1, r2, r3, r4, r5, lr}
 80200ba:	f242 0405 	movw	r4, #8197	; 0x2005
 80200be:	800c      	strh	r4, [r1, #0]
 80200c0:	9d06      	ldr	r5, [sp, #24]
 80200c2:	a901      	add	r1, sp, #4
 80200c4:	9500      	str	r5, [sp, #0]
 80200c6:	f7e3 ff3b 	bl	8003f40 <ll_intf_read_local_ver_info>

080200ca <?Subroutine2>:
 80200ca:	b2c0      	uxtb	r0, r0
 80200cc:	b003      	add	sp, #12
 80200ce:	bd30      	pop	{r4, r5, pc}

080200d0 <hci_read_local_supported_features>:
 80200d0:	b580      	push	{r7, lr}
 80200d2:	f7e3 fff4 	bl	80040be <ll_intf_read_local_supported_features>
 80200d6:	b2c0      	uxtb	r0, r0
 80200d8:	bd02      	pop	{r1, pc}

080200da <hci_read_bd_addr>:
 80200da:	b580      	push	{r7, lr}
 80200dc:	f7e3 fff7 	bl	80040ce <ll_intf_read_bd_addr>
 80200e0:	b2c0      	uxtb	r0, r0
 80200e2:	bd02      	pop	{r1, pc}

080200e4 <hci_read_rssi>:
 80200e4:	1e40      	subs	r0, r0, #1
 80200e6:	b580      	push	{r7, lr}
 80200e8:	b280      	uxth	r0, r0
 80200ea:	f7e4 fd1d 	bl	8004b28 <ll_intf_read_rssi>
 80200ee:	b2c0      	uxtb	r0, r0
 80200f0:	bd02      	pop	{r1, pc}

080200f2 <hci_le_read_buffer_size>:
 80200f2:	b580      	push	{r7, lr}
 80200f4:	f7e3 ffdc 	bl	80040b0 <ll_intf_le_read_buffer_size>
 80200f8:	b2c0      	uxtb	r0, r0
 80200fa:	bd02      	pop	{r1, pc}

080200fc <hci_le_read_maximum_data_length>:
 80200fc:	b580      	push	{r7, lr}
 80200fe:	f7e4 f802 	bl	8004106 <ll_intf_le_read_max_data_length>
 8020102:	b2c0      	uxtb	r0, r0
 8020104:	bd02      	pop	{r1, pc}

08020106 <hci_le_remote_connection_parameter_request_reply>:
 8020106:	b578      	push	{r3, r4, r5, r6, lr}
 8020108:	b083      	sub	sp, #12
 802010a:	9e08      	ldr	r6, [sp, #32]
 802010c:	9d09      	ldr	r5, [sp, #36]	; 0x24
 802010e:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 8020110:	f8ad 1000 	strh.w	r1, [sp]
 8020114:	1e40      	subs	r0, r0, #1
 8020116:	f8ad 2002 	strh.w	r2, [sp, #2]
 802011a:	f8ad 3004 	strh.w	r3, [sp, #4]
 802011e:	f8ad 6006 	strh.w	r6, [sp, #6]
 8020122:	f8ad 5008 	strh.w	r5, [sp, #8]
 8020126:	f8ad 400a 	strh.w	r4, [sp, #10]
 802012a:	4669      	mov	r1, sp
 802012c:	b280      	uxth	r0, r0
 802012e:	f7e4 fb05 	bl	800473c <ll_intf_le_remote_conn_parm_req_reply>

08020132 <?Subroutine0>:
 8020132:	b2c0      	uxtb	r0, r0
 8020134:	b004      	add	sp, #16
 8020136:	bd70      	pop	{r4, r5, r6, pc}

08020138 <hci_le_remote_connection_parameter_request_negative_reply>:
 8020138:	1e40      	subs	r0, r0, #1
 802013a:	b580      	push	{r7, lr}
 802013c:	b280      	uxth	r0, r0
 802013e:	f7e4 fb52 	bl	80047e6 <ll_intf_le_remote_conn_parm_req_neg_reply>
 8020142:	b2c0      	uxtb	r0, r0
 8020144:	bd02      	pop	{r1, pc}

08020146 <hci_le_read_supported_states>:
 8020146:	b580      	push	{r7, lr}
 8020148:	f7e3 ffd7 	bl	80040fa <ll_intf_le_read_supported_states>
 802014c:	b2c0      	uxtb	r0, r0
 802014e:	bd02      	pop	{r1, pc}

08020150 <hci_le_rand>:
 8020150:	b580      	push	{r7, lr}
 8020152:	f7e4 f947 	bl	80043e4 <ll_intf_le_rand_data>
 8020156:	b2c0      	uxtb	r0, r0
 8020158:	bd02      	pop	{r1, pc}

0802015a <hci_read_local_supported_commands>:
 802015a:	b510      	push	{r4, lr}
 802015c:	4604      	mov	r4, r0
 802015e:	2240      	movs	r2, #64	; 0x40
 8020160:	2100      	movs	r1, #0
 8020162:	f7ee fd42 	bl	800ebea <ble_memset>
 8020166:	7822      	ldrb	r2, [r4, #0]
 8020168:	f042 0220 	orr.w	r2, r2, #32
 802016c:	7022      	strb	r2, [r4, #0]
 802016e:	78a0      	ldrb	r0, [r4, #2]
 8020170:	f040 0080 	orr.w	r0, r0, #128	; 0x80
 8020174:	70a0      	strb	r0, [r4, #2]
 8020176:	7960      	ldrb	r0, [r4, #5]
 8020178:	f040 00c0 	orr.w	r0, r0, #192	; 0xc0
 802017c:	7160      	strb	r0, [r4, #5]
 802017e:	7aa0      	ldrb	r0, [r4, #10]
 8020180:	f040 0004 	orr.w	r0, r0, #4
 8020184:	72a0      	strb	r0, [r4, #10]
 8020186:	7ba0      	ldrb	r0, [r4, #14]
 8020188:	f040 0008 	orr.w	r0, r0, #8
 802018c:	73a0      	strb	r0, [r4, #14]
 802018e:	7be0      	ldrb	r0, [r4, #15]
 8020190:	f040 0022 	orr.w	r0, r0, #34	; 0x22
 8020194:	73e0      	strb	r0, [r4, #15]
 8020196:	7e60      	ldrb	r0, [r4, #25]
 8020198:	f040 0081 	orr.w	r0, r0, #129	; 0x81
 802019c:	7660      	strb	r0, [r4, #25]
 802019e:	7ea0      	ldrb	r0, [r4, #26]
 80201a0:	f040 0001 	orr.w	r0, r0, #1
 80201a4:	76a0      	strb	r0, [r4, #26]
 80201a6:	7ee0      	ldrb	r0, [r4, #27]
 80201a8:	f040 00f4 	orr.w	r0, r0, #244	; 0xf4
 80201ac:	76e0      	strb	r0, [r4, #27]
 80201ae:	7f20      	ldrb	r0, [r4, #28]
 80201b0:	f040 0070 	orr.w	r0, r0, #112	; 0x70
 80201b4:	7720      	strb	r0, [r4, #28]
 80201b6:	f104 0021 	add.w	r0, r4, #33	; 0x21
 80201ba:	7801      	ldrb	r1, [r0, #0]
 80201bc:	7842      	ldrb	r2, [r0, #1]
 80201be:	f041 01c0 	orr.w	r1, r1, #192	; 0xc0
 80201c2:	7001      	strb	r1, [r0, #0]
 80201c4:	7881      	ldrb	r1, [r0, #2]
 80201c6:	f042 0283 	orr.w	r2, r2, #131	; 0x83
 80201ca:	7042      	strb	r2, [r0, #1]
 80201cc:	f041 01fd 	orr.w	r1, r1, #253	; 0xfd
 80201d0:	7081      	strb	r1, [r0, #2]
 80201d2:	7981      	ldrb	r1, [r0, #6]
 80201d4:	2201      	movs	r2, #1
 80201d6:	70c2      	strb	r2, [r0, #3]
 80201d8:	f041 0104 	orr.w	r1, r1, #4
 80201dc:	7181      	strb	r1, [r0, #6]
 80201de:	2000      	movs	r0, #0
 80201e0:	bd10      	pop	{r4, pc}

080201e2 <hci_le_set_host_channel_classification>:
 80201e2:	b580      	push	{r7, lr}
 80201e4:	f7e4 f89e 	bl	8004324 <ll_intf_le_set_host_channel_classification>
 80201e8:	b2c0      	uxtb	r0, r0
 80201ea:	bd02      	pop	{r1, pc}

080201ec <hci_le_read_channel_map>:
 80201ec:	1e40      	subs	r0, r0, #1
 80201ee:	b580      	push	{r7, lr}
 80201f0:	b280      	uxth	r0, r0
 80201f2:	f7e4 faff 	bl	80047f4 <ll_intf_le_read_channel_map>
 80201f6:	b2c0      	uxtb	r0, r0
 80201f8:	bd02      	pop	{r1, pc}

080201fa <hci_le_set_privacy_mode>:
 80201fa:	b580      	push	{r7, lr}
 80201fc:	f7e4 fa66 	bl	80046cc <ll_intf_le_set_privacy_mode>
 8020200:	b2c0      	uxtb	r0, r0
 8020202:	bd02      	pop	{r1, pc}

08020204 <hci_le_set_address_resolution_enable>:
 8020204:	b580      	push	{r7, lr}
 8020206:	f7e4 fa5b 	bl	80046c0 <ll_intf_le_set_addr_rsln_enble>
 802020a:	b2c0      	uxtb	r0, r0
 802020c:	bd02      	pop	{r1, pc}

0802020e <hci_le_read_local_resolvable_address>:
 802020e:	b580      	push	{r7, lr}
 8020210:	f7e4 fa45 	bl	800469e <ll_intf_le_read_lcl_rsolvabl_addr>
 8020214:	b2c0      	uxtb	r0, r0
 8020216:	bd02      	pop	{r1, pc}

08020218 <hci_le_read_peer_resolvable_address>:
 8020218:	b580      	push	{r7, lr}
 802021a:	f7e4 fa31 	bl	8004680 <ll_intf_le_read_peer_rsolvabl_addr>
 802021e:	b2c0      	uxtb	r0, r0
 8020220:	bd02      	pop	{r1, pc}

08020222 <hci_le_set_resolvable_private_address_timeout>:
 8020222:	b580      	push	{r7, lr}
 8020224:	f7e4 f9e9 	bl	80045fa <ll_intf_le_set_resolvable_private_addr_timeout>
 8020228:	b2c0      	uxtb	r0, r0
 802022a:	bd02      	pop	{r1, pc}

0802022c <hci_le_read_resolving_list_size>:
 802022c:	b580      	push	{r7, lr}
 802022e:	f7e4 fa21 	bl	8004674 <ll_intf_le_read_rsolv_list_size>
 8020232:	b2c0      	uxtb	r0, r0
 8020234:	bd02      	pop	{r1, pc}

08020236 <hci_le_clear_resolving_list>:
 8020236:	b580      	push	{r7, lr}
 8020238:	f7e4 fa12 	bl	8004660 <ll_intf_le_clear_rsolv_list>
 802023c:	b2c0      	uxtb	r0, r0
 802023e:	bd02      	pop	{r1, pc}

08020240 <hci_le_remove_device_from_resolving_list>:
 8020240:	b580      	push	{r7, lr}
 8020242:	f7e4 f9fb 	bl	800463c <ll_intf_le_remove_device_rsolv_list>
 8020246:	b2c0      	uxtb	r0, r0
 8020248:	bd02      	pop	{r1, pc}

0802024a <hci_le_add_device_to_resolving_list>:
 802024a:	b580      	push	{r7, lr}
 802024c:	f7e4 f9df 	bl	800460e <ll_intf_le_add_device_rsolv_list>
 8020250:	b2c0      	uxtb	r0, r0
 8020252:	bd02      	pop	{r1, pc}

08020254 <hci_read_transmit_power_level>:
 8020254:	1e40      	subs	r0, r0, #1
 8020256:	b580      	push	{r7, lr}
 8020258:	b280      	uxth	r0, r0
 802025a:	f7e4 fae8 	bl	800482e <ll_intf_read_transmit_power_level>
 802025e:	b2c0      	uxtb	r0, r0
 8020260:	bd02      	pop	{r1, pc}

08020262 <hci_le_read_filter_accept_list_size>:
 8020262:	b580      	push	{r7, lr}
 8020264:	f7e4 fc2a 	bl	8004abc <ll_intf_le_read_white_list_size>
 8020268:	b2c0      	uxtb	r0, r0
 802026a:	bd02      	pop	{r1, pc}

0802026c <hci_le_clear_filter_accept_list>:
 802026c:	b580      	push	{r7, lr}
 802026e:	f7e4 fc1d 	bl	8004aac <ll_intf_le_clear_white_list>
 8020272:	b2c0      	uxtb	r0, r0
 8020274:	bd02      	pop	{r1, pc}

08020276 <hci_le_add_device_to_filter_accept_list>:
 8020276:	b580      	push	{r7, lr}
 8020278:	f7e4 fc00 	bl	8004a7c <ll_intf_le_add_device_white_list>
 802027c:	b2c0      	uxtb	r0, r0
 802027e:	bd02      	pop	{r1, pc}

08020280 <hci_le_remove_device_from_filter_accept_list>:
 8020280:	b580      	push	{r7, lr}
 8020282:	f7e4 fc06 	bl	8004a92 <ll_intf_le_remove_device_white_list>
 8020286:	b2c0      	uxtb	r0, r0
 8020288:	bd02      	pop	{r1, pc}

0802028a <hci_le_read_phy>:
 802028a:	1e40      	subs	r0, r0, #1
 802028c:	b580      	push	{r7, lr}
 802028e:	b280      	uxth	r0, r0
 8020290:	f7e4 fcda 	bl	8004c48 <ll_intf_le_read_phy_cmd>
 8020294:	b2c0      	uxtb	r0, r0
 8020296:	bd02      	pop	{r1, pc}

08020298 <hci_le_set_default_phy>:
 8020298:	b580      	push	{r7, lr}
 802029a:	f7e4 fcb9 	bl	8004c10 <ll_intf_le_set_default_phy_cmd>
 802029e:	b2c0      	uxtb	r0, r0
 80202a0:	bd02      	pop	{r1, pc}

080202a2 <hci_le_set_phy>:
 80202a2:	b51c      	push	{r2, r3, r4, lr}
 80202a4:	f8bd 4010 	ldrh.w	r4, [sp, #16]
 80202a8:	1e40      	subs	r0, r0, #1
 80202aa:	b280      	uxth	r0, r0
 80202ac:	9400      	str	r4, [sp, #0]
 80202ae:	f7e4 fcd9 	bl	8004c64 <ll_intf_le_set_phy_cmd>
 80202b2:	b2c0      	uxtb	r0, r0
 80202b4:	bd16      	pop	{r1, r2, r4, pc}

080202b6 <hci_le_read_advertising_physical_channel_tx_power>:
 80202b6:	b580      	push	{r7, lr}
 80202b8:	f7e4 faa4 	bl	8004804 <ll_intf_le_read_adv_channel_tx_power>
 80202bc:	b2c0      	uxtb	r0, r0
 80202be:	bd02      	pop	{r1, pc}

080202c0 <hci_le_read_transmit_power>:
 80202c0:	b580      	push	{r7, lr}
 80202c2:	f7e4 fd33 	bl	8004d2c <ll_intf_le_read_tx_pwr>
 80202c6:	b2c0      	uxtb	r0, r0
 80202c8:	bd02      	pop	{r1, pc}

080202ca <hci_le_receiver_test_v2>:
 80202ca:	b580      	push	{r7, lr}
 80202cc:	f7e4 f911 	bl	80044f2 <ll_intf_le_enhanced_receiver_test>
 80202d0:	b2c0      	uxtb	r0, r0
 80202d2:	bd02      	pop	{r1, pc}

080202d4 <hci_le_transmitter_test_v2>:
 80202d4:	b580      	push	{r7, lr}
 80202d6:	f7e4 f933 	bl	8004540 <ll_intf_le_enhanced_transmitter_test>
 80202da:	b2c0      	uxtb	r0, r0
 80202dc:	bd02      	pop	{r1, pc}

080202de <hci_read_remote_version_information>:
 80202de:	1e40      	subs	r0, r0, #1
 80202e0:	b580      	push	{r7, lr}
 80202e2:	b280      	uxth	r0, r0
 80202e4:	f7e4 fbf9 	bl	8004ada <ll_intf_read_remote_version_info>
 80202e8:	b2c0      	uxtb	r0, r0
 80202ea:	bd02      	pop	{r1, pc}

080202ec <hci_set_ecosystem_base_interval>:
 80202ec:	b580      	push	{r7, lr}
 80202ee:	f7e4 fe9c 	bl	800502a <ll_intf_set_ecosystem_base_interval>
 80202f2:	b2c0      	uxtb	r0, r0
 80202f4:	bd02      	pop	{r1, pc}

080202f6 <hci_read_authenticated_payload_timeout>:
 80202f6:	1e40      	subs	r0, r0, #1
 80202f8:	b580      	push	{r7, lr}
 80202fa:	b280      	uxth	r0, r0
 80202fc:	f7e4 f975 	bl	80045ea <ll_intf_read_authn_pyld_tout>
 8020300:	b2c0      	uxtb	r0, r0
 8020302:	bd02      	pop	{r1, pc}

08020304 <hci_le_long_term_key_request_negative_reply>:
 8020304:	1e40      	subs	r0, r0, #1
 8020306:	b580      	push	{r7, lr}
 8020308:	2100      	movs	r1, #0
 802030a:	e001      	b.n	8020310 <?Subroutine1>

0802030c <hci_le_long_term_key_request_reply>:
 802030c:	1e40      	subs	r0, r0, #1
 802030e:	b580      	push	{r7, lr}

08020310 <?Subroutine1>:
 8020310:	b280      	uxth	r0, r0
 8020312:	f7e4 f860 	bl	80043d6 <ll_intf_rcvd_long_trm_key>
 8020316:	b2c0      	uxtb	r0, r0
 8020318:	bd02      	pop	{r1, pc}

0802031a <hci_write_authenticated_payload_timeout>:
 802031a:	1e40      	subs	r0, r0, #1
 802031c:	b580      	push	{r7, lr}
 802031e:	b280      	uxth	r0, r0
 8020320:	f7e4 f95a 	bl	80045d8 <ll_intf_wrte_authn_pyld_tout>
 8020324:	b2c0      	uxtb	r0, r0
 8020326:	bd02      	pop	{r1, pc}

08020328 <hci_le_encrypt>:
 8020328:	b580      	push	{r7, lr}
 802032a:	f7e4 f808 	bl	800433e <ll_intf_le_encrypt>
 802032e:	b2c0      	uxtb	r0, r0
 8020330:	bd02      	pop	{r1, pc}

08020332 <hci_le_enable_encryption>:
 8020332:	1e40      	subs	r0, r0, #1
 8020334:	b580      	push	{r7, lr}
 8020336:	b280      	uxth	r0, r0
 8020338:	f7e4 f85d 	bl	80043f6 <ll_intf_le_strt_encrpt>
 802033c:	b2c0      	uxtb	r0, r0
 802033e:	bd02      	pop	{r1, pc}

08020340 <hci_le_set_random_address>:
 8020340:	b580      	push	{r7, lr}
 8020342:	f7e4 fbc4 	bl	8004ace <ll_intf_le_set_random_addr>
 8020346:	b2c0      	uxtb	r0, r0
 8020348:	bd02      	pop	{r1, pc}

0802034a <hci_le_read_rf_path_compensation>:
 802034a:	b580      	push	{r7, lr}
 802034c:	f7e4 fd10 	bl	8004d70 <ll_intf_le_read_rf_path_compensation>
 8020350:	b2c0      	uxtb	r0, r0
 8020352:	bd02      	pop	{r1, pc}

08020354 <hci_le_write_rf_path_compensation>:
 8020354:	b580      	push	{r7, lr}
 8020356:	b209      	sxth	r1, r1
 8020358:	b200      	sxth	r0, r0
 802035a:	f7e4 fd10 	bl	8004d7e <ll_intf_le_write_rf_path_compensation>
 802035e:	b2c0      	uxtb	r0, r0
 8020360:	bd02      	pop	{r1, pc}

08020362 <LECTRL_Enhanced_Conn_Complete_Event_Unmask>:
 8020362:	4845      	ldr	r0, [pc, #276]	; (8020478 <??DataTable15_2>)
 8020364:	7841      	ldrb	r1, [r0, #1]
 8020366:	f041 0102 	orr.w	r1, r1, #2
 802036a:	7041      	strb	r1, [r0, #1]
 802036c:	f7e4 bf31 	b.w	80051d2 <ll_intf_set_le_event_mask>

08020370 <aci_hal_write_config_data>:
 8020370:	b570      	push	{r4, r5, r6, lr}
 8020372:	4604      	mov	r4, r0
 8020374:	460d      	mov	r5, r1
 8020376:	4616      	mov	r6, r2
 8020378:	0020      	movs	r0, r4
 802037a:	bf04      	itt	eq
 802037c:	4630      	moveq	r0, r6
 802037e:	f7e3 feae 	bleq	80040de <ll_intf_write_bd_addr>
 8020382:	4632      	mov	r2, r6
 8020384:	4629      	mov	r1, r5
 8020386:	4620      	mov	r0, r4
 8020388:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 802038c:	f7f8 bad0 	b.w	8018930 <CfgData_Write>

08020390 <aci_hal_read_config_data>:
 8020390:	f7f8 baf5 	b.w	801897e <CfgData_Read>

08020394 <aci_hal_set_tx_power_level>:
 8020394:	b580      	push	{r7, lr}
 8020396:	f06f 0013 	mvn.w	r0, #19
 802039a:	2905      	cmp	r1, #5
 802039c:	bfa8      	it	ge
 802039e:	f1a1 0019 	subge.w	r0, r1, #25
 80203a2:	4935      	ldr	r1, [pc, #212]	; (8020478 <??DataTable15_2>)
 80203a4:	7208      	strb	r0, [r1, #8]
 80203a6:	b240      	sxtb	r0, r0
 80203a8:	f7e4 fd26 	bl	8004df8 <ll_intf_le_write_tx_pwr>
 80203ac:	b2c0      	uxtb	r0, r0
 80203ae:	bd02      	pop	{r1, pc}

080203b0 <aci_hal_le_tx_test_packet_number>:
 80203b0:	b580      	push	{r7, lr}
 80203b2:	f7e4 fe89 	bl	80050c8 <ll_intf_le_tx_test_packet_number>
 80203b6:	b2c0      	uxtb	r0, r0
 80203b8:	bd02      	pop	{r1, pc}

080203ba <aci_hal_continuous_tx_start>:
 80203ba:	b510      	push	{r4, lr}
 80203bc:	2828      	cmp	r0, #40	; 0x28
 80203be:	da05      	bge.n	80203cc <??aci_hal_continuous_tx_start_0>
 80203c0:	2901      	cmp	r1, #1
 80203c2:	bf18      	it	ne
 80203c4:	2902      	cmpne	r1, #2
 80203c6:	d101      	bne.n	80203cc <??aci_hal_continuous_tx_start_0>
 80203c8:	2a08      	cmp	r2, #8
 80203ca:	db01      	blt.n	80203d0 <??aci_hal_continuous_tx_start_1>

080203cc <??aci_hal_continuous_tx_start_0>:
 80203cc:	2012      	movs	r0, #18
 80203ce:	bd10      	pop	{r4, pc}

080203d0 <??aci_hal_continuous_tx_start_1>:
 80203d0:	4c29      	ldr	r4, [pc, #164]	; (8020478 <??DataTable15_2>)
 80203d2:	f994 3008 	ldrsb.w	r3, [r4, #8]
 80203d6:	f7e4 fe48 	bl	800506a <ll_init_start_cont_dtm>
 80203da:	b2c0      	uxtb	r0, r0
 80203dc:	bd10      	pop	{r4, pc}

080203de <aci_hal_tone_start>:
 80203de:	b580      	push	{r7, lr}
 80203e0:	4a25      	ldr	r2, [pc, #148]	; (8020478 <??DataTable15_2>)
 80203e2:	f992 3008 	ldrsb.w	r3, [r2, #8]
 80203e6:	2201      	movs	r2, #1
 80203e8:	f7e4 fdc0 	bl	8004f6c <ll_init_start_unmod_carrier>
 80203ec:	b2c0      	uxtb	r0, r0
 80203ee:	bd02      	pop	{r1, pc}

080203f0 <aci_hal_tone_stop>:
 80203f0:	b580      	push	{r7, lr}
 80203f2:	f7e4 fded 	bl	8004fd0 <ll_init_stop_unmod_carrier>
 80203f6:	b2c0      	uxtb	r0, r0
 80203f8:	bd02      	pop	{r1, pc}

080203fa <aci_hal_get_link_status_v2>:
 80203fa:	b510      	push	{r4, lr}
 80203fc:	460c      	mov	r4, r1
 80203fe:	f7e4 fe83 	bl	8005108 <ll_intf_get_link_status>
 8020402:	8822      	ldrh	r2, [r4, #0]
 8020404:	f64f 71ff 	movw	r1, #65535	; 0xffff
 8020408:	428a      	cmp	r2, r1
 802040a:	bf1c      	itt	ne
 802040c:	1c52      	addne	r2, r2, #1
 802040e:	8022      	strhne	r2, [r4, #0]
 8020410:	8862      	ldrh	r2, [r4, #2]
 8020412:	428a      	cmp	r2, r1
 8020414:	bf1c      	itt	ne
 8020416:	1c52      	addne	r2, r2, #1
 8020418:	8062      	strhne	r2, [r4, #2]
 802041a:	88a2      	ldrh	r2, [r4, #4]
 802041c:	428a      	cmp	r2, r1
 802041e:	bf1c      	itt	ne
 8020420:	1c52      	addne	r2, r2, #1
 8020422:	80a2      	strhne	r2, [r4, #4]
 8020424:	88e2      	ldrh	r2, [r4, #6]
 8020426:	428a      	cmp	r2, r1
 8020428:	bf1c      	itt	ne
 802042a:	1c52      	addne	r2, r2, #1
 802042c:	80e2      	strhne	r2, [r4, #6]
 802042e:	8922      	ldrh	r2, [r4, #8]
 8020430:	428a      	cmp	r2, r1
 8020432:	bf1c      	itt	ne
 8020434:	1c52      	addne	r2, r2, #1
 8020436:	8122      	strhne	r2, [r4, #8]
 8020438:	8962      	ldrh	r2, [r4, #10]
 802043a:	428a      	cmp	r2, r1
 802043c:	bf1c      	itt	ne
 802043e:	1c52      	addne	r2, r2, #1
 8020440:	8162      	strhne	r2, [r4, #10]
 8020442:	89a2      	ldrh	r2, [r4, #12]
 8020444:	428a      	cmp	r2, r1
 8020446:	bf1c      	itt	ne
 8020448:	1c52      	addne	r2, r2, #1
 802044a:	81a2      	strhne	r2, [r4, #12]
 802044c:	89e2      	ldrh	r2, [r4, #14]
 802044e:	428a      	cmp	r2, r1
 8020450:	bf1c      	itt	ne
 8020452:	1c52      	addne	r2, r2, #1
 8020454:	81e2      	strhne	r2, [r4, #14]
 8020456:	b2c0      	uxtb	r0, r0
 8020458:	bd10      	pop	{r4, pc}

0802045a <aci_hal_set_radio_activity_mask>:
 802045a:	b580      	push	{r7, lr}
 802045c:	f7e4 fe4f 	bl	80050fe <ll_intf_set_end_of_activity_mask>
 8020460:	b2c0      	uxtb	r0, r0
 8020462:	bd02      	pop	{r1, pc}

08020464 <aci_hal_get_anchor_period>:
 8020464:	2000      	movs	r0, #0
 8020466:	4770      	bx	lr

08020468 <aci_hal_set_event_mask>:
 8020468:	4903      	ldr	r1, [pc, #12]	; (8020478 <??DataTable15_2>)
 802046a:	61c8      	str	r0, [r1, #28]
 802046c:	2000      	movs	r0, #0
 802046e:	4770      	bx	lr

08020470 <??DataTable15>:
 8020470:	3a90 2000                                   .:. 

08020474 <??DataTable15_1>:
 8020474:	04b1 0802                                   ....

08020478 <??DataTable15_2>:
 8020478:	3930 2000                                   09. 

0802047c <??DataTable15_3>:
 802047c:	3624 2000                                   $6. 

08020480 <aci_hal_set_slave_latency>:
 8020480:	2000      	movs	r0, #0
 8020482:	4770      	bx	lr

08020484 <aci_hal_read_rssi>:
 8020484:	b51c      	push	{r2, r3, r4, lr}
 8020486:	4604      	mov	r4, r0
 8020488:	4668      	mov	r0, sp
 802048a:	f7e4 fe29 	bl	80050e0 <ll_intf_read_raw_rssi>
 802048e:	9900      	ldr	r1, [sp, #0]
 8020490:	b2c0      	uxtb	r0, r0
 8020492:	7021      	strb	r1, [r4, #0]
 8020494:	bd16      	pop	{r1, r2, r4, pc}
	...

08020498 <aDefaultEventMask>:
 8020498:	ffff ffff ffff 2000                         ....... 

080204a0 <aDefaultLeEventMask>:
 80204a0:	185f 0003 0000 0000                         _.......

080204a8 <aDefaultEventMaskPage2>:
	...

080204b0 <LECTRL_UpperLayerCallback>:
 80204b0:	b510      	push	{r4, lr}
 80204b2:	0004      	movs	r4, r0
 80204b4:	d012      	beq.n	80204dc <??LECTRL_UpperLayerCallback_0>
 80204b6:	89a0      	ldrh	r0, [r4, #12]
 80204b8:	2802      	cmp	r0, #2
 80204ba:	db0c      	blt.n	80204d6 <??LECTRL_UpperLayerCallback_1>
 80204bc:	7ba0      	ldrb	r0, [r4, #14]
 80204be:	2808      	cmp	r0, #8
 80204c0:	d103      	bne.n	80204ca <??LECTRL_UpperLayerCallback_2>
 80204c2:	4620      	mov	r0, r4
 80204c4:	f000 f80e 	bl	80204e4 <LECTRL_SendEventToHost>
 80204c8:	e004      	b.n	80204d4 <??LECTRL_UpperLayerCallback_3>

080204ca <??LECTRL_UpperLayerCallback_2>:
 80204ca:	2810      	cmp	r0, #16
 80204cc:	d103      	bne.n	80204d6 <??LECTRL_UpperLayerCallback_1>
 80204ce:	4620      	mov	r0, r4
 80204d0:	f000 f848 	bl	8020564 <LECTRL_SendDataToHost>

080204d4 <??LECTRL_UpperLayerCallback_3>:
 80204d4:	b920      	cbnz	r0, 80204e0 <??LECTRL_UpperLayerCallback_4>

080204d6 <??LECTRL_UpperLayerCallback_1>:
 80204d6:	4620      	mov	r0, r4
 80204d8:	f7e4 fd91 	bl	8004ffe <ll_intf_free_ll_pkt_hndlr>

080204dc <??LECTRL_UpperLayerCallback_0>:
 80204dc:	2001      	movs	r0, #1
 80204de:	bd10      	pop	{r4, pc}

080204e0 <??LECTRL_UpperLayerCallback_4>:
 80204e0:	2000      	movs	r0, #0
 80204e2:	bd10      	pop	{r4, pc}

080204e4 <LECTRL_SendEventToHost>:
 80204e4:	b4f0      	push	{r4, r5, r6, r7}
 80204e6:	b1d8      	cbz	r0, 8020520 <??LECTRL_SendEventToHost_0>
 80204e8:	6801      	ldr	r1, [r0, #0]
 80204ea:	8940      	ldrh	r0, [r0, #10]
 80204ec:	180a      	adds	r2, r1, r0
 80204ee:	7813      	ldrb	r3, [r2, #0]
 80204f0:	7851      	ldrb	r1, [r2, #1]
 80204f2:	2b3e      	cmp	r3, #62	; 0x3e
 80204f4:	d117      	bne.n	8020526 <??LECTRL_SendEventToHost_1>
 80204f6:	7893      	ldrb	r3, [r2, #2]
 80204f8:	1cd0      	adds	r0, r2, #3
 80204fa:	4c53      	ldr	r4, [pc, #332]	; (8020648 <??DataTable2>)
 80204fc:	2200      	movs	r2, #0
 80204fe:	4625      	mov	r5, r4

08020500 <??LECTRL_SendEventToHost_2>:
 8020500:	782e      	ldrb	r6, [r5, #0]
 8020502:	42b3      	cmp	r3, r6
 8020504:	d102      	bne.n	802050c <??LECTRL_SendEventToHost_3>
 8020506:	786f      	ldrb	r7, [r5, #1]
 8020508:	428f      	cmp	r7, r1
 802050a:	da04      	bge.n	8020516 <??LECTRL_SendEventToHost_4>

0802050c <??LECTRL_SendEventToHost_3>:
 802050c:	1c52      	adds	r2, r2, #1
 802050e:	3508      	adds	r5, #8
 8020510:	2a0a      	cmp	r2, #10
 8020512:	ddf5      	ble.n	8020500 <??LECTRL_SendEventToHost_2>
 8020514:	e004      	b.n	8020520 <??LECTRL_SendEventToHost_0>

08020516 <??LECTRL_SendEventToHost_4>:
 8020516:	eb04 01c2 	add.w	r1, r4, r2, lsl #3
 802051a:	684a      	ldr	r2, [r1, #4]
 802051c:	bcf0      	pop	{r4, r5, r6, r7}

0802051e <__iar_annotation$$tailcall>:
 802051e:	4710      	bx	r2

08020520 <??LECTRL_SendEventToHost_0>:
 8020520:	2000      	movs	r0, #0
 8020522:	bcf0      	pop	{r4, r5, r6, r7}
 8020524:	4770      	bx	lr

08020526 <??LECTRL_SendEventToHost_1>:
 8020526:	2bff      	cmp	r3, #255	; 0xff
 8020528:	d107      	bne.n	802053a <??LECTRL_SendEventToHost_5>
 802052a:	1cd0      	adds	r0, r2, #3
 802052c:	7892      	ldrb	r2, [r2, #2]
 802052e:	2a05      	cmp	r2, #5
 8020530:	d1f6      	bne.n	8020520 <??LECTRL_SendEventToHost_0>
 8020532:	290a      	cmp	r1, #10
 8020534:	daf4      	bge.n	8020520 <??LECTRL_SendEventToHost_0>
 8020536:	bcf0      	pop	{r4, r5, r6, r7}
 8020538:	e24e      	b.n	80209d8 <LECTRL_EndOfRadioActivityEvent>

0802053a <??LECTRL_SendEventToHost_5>:
 802053a:	1c90      	adds	r0, r2, #2
 802053c:	4a42      	ldr	r2, [pc, #264]	; (8020648 <??DataTable2>)
 802053e:	2400      	movs	r4, #0
 8020540:	f102 0558 	add.w	r5, r2, #88	; 0x58

08020544 <??LECTRL_SendEventToHost_6>:
 8020544:	782e      	ldrb	r6, [r5, #0]
 8020546:	42b3      	cmp	r3, r6
 8020548:	d102      	bne.n	8020550 <??LECTRL_SendEventToHost_7>
 802054a:	786f      	ldrb	r7, [r5, #1]
 802054c:	428f      	cmp	r7, r1
 802054e:	da04      	bge.n	802055a <??LECTRL_SendEventToHost_8>

08020550 <??LECTRL_SendEventToHost_7>:
 8020550:	1c64      	adds	r4, r4, #1
 8020552:	3508      	adds	r5, #8
 8020554:	2c08      	cmp	r4, #8
 8020556:	dbf5      	blt.n	8020544 <??LECTRL_SendEventToHost_6>
 8020558:	e7e2      	b.n	8020520 <??LECTRL_SendEventToHost_0>

0802055a <??LECTRL_SendEventToHost_8>:
 802055a:	eb02 01c4 	add.w	r1, r2, r4, lsl #3
 802055e:	6dca      	ldr	r2, [r1, #92]	; 0x5c
 8020560:	bcf0      	pop	{r4, r5, r6, r7}

08020562 <__iar_annotation$$tailcall>:
 8020562:	4710      	bx	r2

08020564 <LECTRL_SendDataToHost>:
 8020564:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8020568:	8941      	ldrh	r1, [r0, #10]
 802056a:	6802      	ldr	r2, [r0, #0]
 802056c:	2500      	movs	r5, #0
 802056e:	1853      	adds	r3, r2, r1
 8020570:	f893 8001 	ldrb.w	r8, [r3, #1]
 8020574:	5c57      	ldrb	r7, [r2, r1]
 8020576:	ea47 2708 	orr.w	r7, r7, r8, lsl #8
 802057a:	ea4f 1818 	mov.w	r8, r8, lsr #4
 802057e:	1c7f      	adds	r7, r7, #1
 8020580:	f3c7 070b 	ubfx	r7, r7, #0, #12
 8020584:	b1f8      	cbz	r0, 80205c6 <??LECTRL_SendDataToHost_0>
 8020586:	8980      	ldrh	r0, [r0, #12]
 8020588:	2804      	cmp	r0, #4
 802058a:	db1c      	blt.n	80205c6 <??LECTRL_SendDataToHost_0>
 802058c:	1f06      	subs	r6, r0, #4
 802058e:	f103 0904 	add.w	r9, r3, #4
 8020592:	b2b2      	uxth	r2, r6
 8020594:	4639      	mov	r1, r7
 8020596:	2001      	movs	r0, #1
 8020598:	f004 fb8b 	bl	8024cb2 <ACL_PM_New>
 802059c:	0004      	movs	r4, r0
 802059e:	d011      	beq.n	80205c4 <??LECTRL_SendDataToHost_1>
 80205a0:	80e6      	strh	r6, [r4, #6]
 80205a2:	6025      	str	r5, [r4, #0]
 80205a4:	f884 800c 	strb.w	r8, [r4, #12]
 80205a8:	80a7      	strh	r7, [r4, #4]
 80205aa:	464b      	mov	r3, r9
 80205ac:	b2b2      	uxth	r2, r6
 80205ae:	2100      	movs	r1, #0
 80205b0:	f004 fc23 	bl	8024dfa <ACL_PM_Set_Data>
 80205b4:	4620      	mov	r0, r4
 80205b6:	f7ff f915 	bl	801f7e4 <L2C_Rx_Data_Handler>
 80205ba:	b120      	cbz	r0, 80205c6 <??LECTRL_SendDataToHost_0>
 80205bc:	2101      	movs	r1, #1
 80205be:	4620      	mov	r0, r4
 80205c0:	f004 fb8f 	bl	8024ce2 <ACL_PM_Release>

080205c4 <??LECTRL_SendDataToHost_1>:
 80205c4:	2507      	movs	r5, #7

080205c6 <??LECTRL_SendDataToHost_0>:
 80205c6:	4628      	mov	r0, r5
 80205c8:	e8bd 83f2 	ldmia.w	sp!, {r1, r4, r5, r6, r7, r8, r9, pc}

080205cc <LECTRL_HwErrorEvent>:
 80205cc:	7800      	ldrb	r0, [r0, #0]
 80205ce:	f7f7 ba80 	b.w	8017ad2 <hci_hardware_error_event>

080205d2 <LECTRL_DisconnectionComplete>:
 80205d2:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80205d6:	7881      	ldrb	r1, [r0, #2]
 80205d8:	7845      	ldrb	r5, [r0, #1]
 80205da:	7804      	ldrb	r4, [r0, #0]
 80205dc:	f890 a003 	ldrb.w	sl, [r0, #3]
 80205e0:	ea45 2501 	orr.w	r5, r5, r1, lsl #8
 80205e4:	1c6f      	adds	r7, r5, #1
 80205e6:	b2b8      	uxth	r0, r7
 80205e8:	f7f8 fa34 	bl	8018a54 <GAP_Disconnection_Complete_Handler>
 80205ec:	4652      	mov	r2, sl
 80205ee:	b2b9      	uxth	r1, r7
 80205f0:	4620      	mov	r0, r4
 80205f2:	f7f7 fa2d 	bl	8017a50 <hci_disconnection_complete_event>
 80205f6:	4682      	mov	sl, r0
 80205f8:	4f14      	ldr	r7, [pc, #80]	; (802064c <??DataTable2_1>)
 80205fa:	6838      	ldr	r0, [r7, #0]
 80205fc:	4287      	cmp	r7, r0
 80205fe:	d019      	beq.n	8020634 <??LECTRL_DisconnectionComplete_0>
 8020600:	4638      	mov	r0, r7
 8020602:	f004 fc75 	bl	8024ef0 <CList_Get_Head>
 8020606:	4606      	mov	r6, r0
 8020608:	f105 0801 	add.w	r8, r5, #1
 802060c:	f8df 9040 	ldr.w	r9, [pc, #64]	; 8020650 <??DataTable2_2>
 8020610:	e00e      	b.n	8020630 <??LECTRL_DisconnectionComplete_1>

08020612 <??LECTRL_DisconnectionComplete_2>:
 8020612:	8931      	ldrh	r1, [r6, #8]
 8020614:	6834      	ldr	r4, [r6, #0]
 8020616:	4541      	cmp	r1, r8
 8020618:	d109      	bne.n	802062e <??LECTRL_DisconnectionComplete_3>
 802061a:	68f0      	ldr	r0, [r6, #12]
 802061c:	b138      	cbz	r0, 802062e <??LECTRL_DisconnectionComplete_3>
 802061e:	4631      	mov	r1, r6
 8020620:	4638      	mov	r0, r7
 8020622:	f004 fc73 	bl	8024f0c <CList_Remove_Node>
 8020626:	4631      	mov	r1, r6
 8020628:	4648      	mov	r0, r9
 802062a:	f004 fc4b 	bl	8024ec4 <CList_Insert>

0802062e <??LECTRL_DisconnectionComplete_3>:
 802062e:	4626      	mov	r6, r4

08020630 <??LECTRL_DisconnectionComplete_1>:
 8020630:	42be      	cmp	r6, r7
 8020632:	d1ee      	bne.n	8020612 <??LECTRL_DisconnectionComplete_2>

08020634 <??LECTRL_DisconnectionComplete_0>:
 8020634:	ea5f 000a 	movs.w	r0, sl
 8020638:	bf04      	itt	eq
 802063a:	4628      	moveq	r0, r5
 802063c:	f7e4 fdcc 	bleq	80051d8 <ll_intf_clear_event>
 8020640:	4650      	mov	r0, sl
 8020642:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
	...

08020648 <??DataTable2>:
 8020648:	2234 0803                                   4"..

0802064c <??DataTable2_1>:
 802064c:	393c 2000                                   <9. 

08020650 <??DataTable2_2>:
 8020650:	3944 2000                                   D9. 

08020654 <LECTRL_ReadRemoteVersionInformationComplete>:
 8020654:	b51c      	push	{r2, r3, r4, lr}
 8020656:	79c1      	ldrb	r1, [r0, #7]
 8020658:	7982      	ldrb	r2, [r0, #6]
 802065a:	ea42 2201 	orr.w	r2, r2, r1, lsl #8
 802065e:	9200      	str	r2, [sp, #0]
 8020660:	7941      	ldrb	r1, [r0, #5]
 8020662:	7903      	ldrb	r3, [r0, #4]
 8020664:	7884      	ldrb	r4, [r0, #2]
 8020666:	78c2      	ldrb	r2, [r0, #3]
 8020668:	ea43 2301 	orr.w	r3, r3, r1, lsl #8
 802066c:	7841      	ldrb	r1, [r0, #1]
 802066e:	7800      	ldrb	r0, [r0, #0]
 8020670:	ea41 2104 	orr.w	r1, r1, r4, lsl #8
 8020674:	1c49      	adds	r1, r1, #1
 8020676:	b289      	uxth	r1, r1
 8020678:	f7f7 fa12 	bl	8017aa0 <hci_read_remote_version_information_complete_event>
 802067c:	bd16      	pop	{r1, r2, r4, pc}

0802067e <LECTRL_LeConnectionCompleteEvent>:
 802067e:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8020682:	b086      	sub	sp, #24
 8020684:	4604      	mov	r4, r0
 8020686:	78a0      	ldrb	r0, [r4, #2]
 8020688:	7867      	ldrb	r7, [r4, #1]
 802068a:	7ae5      	ldrb	r5, [r4, #11]
 802068c:	7b66      	ldrb	r6, [r4, #13]
 802068e:	ea47 2700 	orr.w	r7, r7, r0, lsl #8
 8020692:	7b20      	ldrb	r0, [r4, #12]
 8020694:	f894 a00f 	ldrb.w	sl, [r4, #15]
 8020698:	f894 8000 	ldrb.w	r8, [r4]
 802069c:	ea45 2500 	orr.w	r5, r5, r0, lsl #8
 80206a0:	7ba0      	ldrb	r0, [r4, #14]
 80206a2:	f894 9003 	ldrb.w	r9, [r4, #3]
 80206a6:	f894 b004 	ldrb.w	fp, [r4, #4]
 80206aa:	ea46 2600 	orr.w	r6, r6, r0, lsl #8
 80206ae:	7c20      	ldrb	r0, [r4, #16]
 80206b0:	1c7f      	adds	r7, r7, #1
 80206b2:	f04f 0e00 	mov.w	lr, #0
 80206b6:	ea4a 2a00 	orr.w	sl, sl, r0, lsl #8
 80206ba:	7c60      	ldrb	r0, [r4, #17]
 80206bc:	f8cd e004 	str.w	lr, [sp, #4]
 80206c0:	465b      	mov	r3, fp
 80206c2:	f88d 0014 	strb.w	r0, [sp, #20]
 80206c6:	1d60      	adds	r0, r4, #5
 80206c8:	9000      	str	r0, [sp, #0]
 80206ca:	464a      	mov	r2, r9
 80206cc:	b2b9      	uxth	r1, r7
 80206ce:	4640      	mov	r0, r8
 80206d0:	f7f8 f996 	bl	8018a00 <GAP_Connection_Complete_Handler>
 80206d4:	f89d 0014 	ldrb.w	r0, [sp, #20]
 80206d8:	f8cd a00c 	str.w	sl, [sp, #12]
 80206dc:	1d61      	adds	r1, r4, #5
 80206de:	9004      	str	r0, [sp, #16]
 80206e0:	9602      	str	r6, [sp, #8]
 80206e2:	9501      	str	r5, [sp, #4]
 80206e4:	9100      	str	r1, [sp, #0]
 80206e6:	465b      	mov	r3, fp
 80206e8:	464a      	mov	r2, r9
 80206ea:	b2b9      	uxth	r1, r7
 80206ec:	4640      	mov	r0, r8
 80206ee:	f7f7 fa12 	bl	8017b16 <hci_le_connection_complete_event>
 80206f2:	b007      	add	sp, #28
 80206f4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

080206f8 <LECTRL_LeEnhancedConnectionCompleteEvent>:
 80206f8:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80206fc:	b088      	sub	sp, #32
 80206fe:	4604      	mov	r4, r0
 8020700:	78a0      	ldrb	r0, [r4, #2]
 8020702:	7867      	ldrb	r7, [r4, #1]
 8020704:	7de5      	ldrb	r5, [r4, #23]
 8020706:	7e66      	ldrb	r6, [r4, #25]
 8020708:	ea47 2700 	orr.w	r7, r7, r0, lsl #8
 802070c:	7e20      	ldrb	r0, [r4, #24]
 802070e:	f894 a01b 	ldrb.w	sl, [r4, #27]
 8020712:	f894 8000 	ldrb.w	r8, [r4]
 8020716:	ea45 2500 	orr.w	r5, r5, r0, lsl #8
 802071a:	7ea0      	ldrb	r0, [r4, #26]
 802071c:	f894 9003 	ldrb.w	r9, [r4, #3]
 8020720:	f894 b004 	ldrb.w	fp, [r4, #4]
 8020724:	ea46 2600 	orr.w	r6, r6, r0, lsl #8
 8020728:	7f20      	ldrb	r0, [r4, #28]
 802072a:	1c7f      	adds	r7, r7, #1
 802072c:	f104 0e0b 	add.w	lr, r4, #11
 8020730:	ea4a 2a00 	orr.w	sl, sl, r0, lsl #8
 8020734:	7f60      	ldrb	r0, [r4, #29]
 8020736:	f8cd e004 	str.w	lr, [sp, #4]
 802073a:	465b      	mov	r3, fp
 802073c:	f88d 001c 	strb.w	r0, [sp, #28]
 8020740:	1d60      	adds	r0, r4, #5
 8020742:	9000      	str	r0, [sp, #0]
 8020744:	464a      	mov	r2, r9
 8020746:	b2b9      	uxth	r1, r7
 8020748:	4640      	mov	r0, r8
 802074a:	f7f8 f959 	bl	8018a00 <GAP_Connection_Complete_Handler>
 802074e:	f89d 001c 	ldrb.w	r0, [sp, #28]
 8020752:	f8cd a014 	str.w	sl, [sp, #20]
 8020756:	f104 0111 	add.w	r1, r4, #17
 802075a:	9006      	str	r0, [sp, #24]
 802075c:	9604      	str	r6, [sp, #16]
 802075e:	9503      	str	r5, [sp, #12]
 8020760:	f104 020b 	add.w	r2, r4, #11
 8020764:	1d63      	adds	r3, r4, #5
 8020766:	9102      	str	r1, [sp, #8]
 8020768:	9201      	str	r2, [sp, #4]
 802076a:	9300      	str	r3, [sp, #0]
 802076c:	465b      	mov	r3, fp
 802076e:	464a      	mov	r2, r9
 8020770:	b2b9      	uxth	r1, r7
 8020772:	4640      	mov	r0, r8
 8020774:	f7f7 faba 	bl	8017cec <hci_le_enhanced_connection_complete_event>
 8020778:	b009      	add	sp, #36	; 0x24
 802077a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0802077e <LECTRL_LeConnectionUpdateCompleteEvent>:
 802077e:	b51c      	push	{r2, r3, r4, lr}
 8020780:	7a01      	ldrb	r1, [r0, #8]
 8020782:	79c2      	ldrb	r2, [r0, #7]
 8020784:	ea42 2201 	orr.w	r2, r2, r1, lsl #8
 8020788:	9200      	str	r2, [sp, #0]
 802078a:	7981      	ldrb	r1, [r0, #6]
 802078c:	7943      	ldrb	r3, [r0, #5]
 802078e:	78c2      	ldrb	r2, [r0, #3]
 8020790:	7884      	ldrb	r4, [r0, #2]
 8020792:	ea43 2301 	orr.w	r3, r3, r1, lsl #8
 8020796:	7901      	ldrb	r1, [r0, #4]
 8020798:	ea42 2201 	orr.w	r2, r2, r1, lsl #8
 802079c:	7841      	ldrb	r1, [r0, #1]
 802079e:	7800      	ldrb	r0, [r0, #0]
 80207a0:	ea41 2104 	orr.w	r1, r1, r4, lsl #8
 80207a4:	1c49      	adds	r1, r1, #1
 80207a6:	b289      	uxth	r1, r1
 80207a8:	f7f7 fa1a 	bl	8017be0 <hci_le_connection_update_complete_event>
 80207ac:	bd16      	pop	{r1, r2, r4, pc}

080207ae <LECTRL_LeRemoteConnParamReqEvent>:
 80207ae:	2000      	movs	r0, #0
 80207b0:	4770      	bx	lr

080207b2 <LECTRL_LeChannelSelectionAlgorithmEvent>:
 80207b2:	7881      	ldrb	r1, [r0, #2]
 80207b4:	7842      	ldrb	r2, [r0, #1]
 80207b6:	7800      	ldrb	r0, [r0, #0]
 80207b8:	ea40 2002 	orr.w	r0, r0, r2, lsl #8
 80207bc:	1c40      	adds	r0, r0, #1
 80207be:	b280      	uxth	r0, r0
 80207c0:	f7f7 bb1d 	b.w	8017dfe <hci_le_channel_selection_algorithm_event>

080207c4 <LECTRL_LeReadRemoteUsedFeaturesCompleteEvent>:
 80207c4:	7883      	ldrb	r3, [r0, #2]
 80207c6:	7841      	ldrb	r1, [r0, #1]
 80207c8:	1cc2      	adds	r2, r0, #3
 80207ca:	7800      	ldrb	r0, [r0, #0]
 80207cc:	ea41 2103 	orr.w	r1, r1, r3, lsl #8
 80207d0:	1c49      	adds	r1, r1, #1
 80207d2:	b289      	uxth	r1, r1
 80207d4:	f7f7 ba20 	b.w	8017c18 <hci_le_read_remote_features_complete_event>

080207d8 <LECTRL_LeDataLengthChangeEvent>:
 80207d8:	b51c      	push	{r2, r3, r4, lr}
 80207da:	7a41      	ldrb	r1, [r0, #9]
 80207dc:	7a02      	ldrb	r2, [r0, #8]
 80207de:	ea42 2201 	orr.w	r2, r2, r1, lsl #8
 80207e2:	9200      	str	r2, [sp, #0]
 80207e4:	79c1      	ldrb	r1, [r0, #7]
 80207e6:	7983      	ldrb	r3, [r0, #6]
 80207e8:	7902      	ldrb	r2, [r0, #4]
 80207ea:	78c4      	ldrb	r4, [r0, #3]
 80207ec:	ea43 2301 	orr.w	r3, r3, r1, lsl #8
 80207f0:	7941      	ldrb	r1, [r0, #5]
 80207f2:	ea42 2201 	orr.w	r2, r2, r1, lsl #8
 80207f6:	7881      	ldrb	r1, [r0, #2]
 80207f8:	ea41 2104 	orr.w	r1, r1, r4, lsl #8
 80207fc:	7844      	ldrb	r4, [r0, #1]
 80207fe:	7800      	ldrb	r0, [r0, #0]
 8020800:	ea40 2004 	orr.w	r0, r0, r4, lsl #8
 8020804:	1c40      	adds	r0, r0, #1
 8020806:	b280      	uxth	r0, r0
 8020808:	f7f7 fa3c 	bl	8017c84 <hci_le_data_length_change_event>
 802080c:	bd16      	pop	{r1, r2, r4, pc}

0802080e <LECTRL_LePhyUpdateCompleteEvent>:
 802080e:	b418      	push	{r3, r4}
 8020810:	7884      	ldrb	r4, [r0, #2]
 8020812:	7841      	ldrb	r1, [r0, #1]
 8020814:	7903      	ldrb	r3, [r0, #4]
 8020816:	78c2      	ldrb	r2, [r0, #3]
 8020818:	ea41 2104 	orr.w	r1, r1, r4, lsl #8
 802081c:	7800      	ldrb	r0, [r0, #0]
 802081e:	b001      	add	sp, #4
 8020820:	1c49      	adds	r1, r1, #1
 8020822:	b289      	uxth	r1, r1
 8020824:	bc10      	pop	{r4}
 8020826:	f7f7 bad1 	b.w	8017dcc <hci_le_phy_update_complete_event>

0802082a <LECTRL_LeAdvertisingReportEvent>:
 802082a:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 802082e:	b084      	sub	sp, #16
 8020830:	4605      	mov	r5, r0
 8020832:	782c      	ldrb	r4, [r5, #0]
 8020834:	2700      	movs	r7, #0
 8020836:	2601      	movs	r6, #1
 8020838:	f04f 0800 	mov.w	r8, #0
 802083c:	2c01      	cmp	r4, #1
 802083e:	db39      	blt.n	80208b4 <??LECTRL_LeAdvertisingReportEvent_0>

08020840 <??LECTRL_LeAdvertisingReportEvent_1>:
 8020840:	b2f0      	uxtb	r0, r6
 8020842:	5c28      	ldrb	r0, [r5, r0]
 8020844:	1c76      	adds	r6, r6, #1
 8020846:	b2f1      	uxtb	r1, r6
 8020848:	f88d 0000 	strb.w	r0, [sp]
 802084c:	5c6a      	ldrb	r2, [r5, r1]
 802084e:	1c76      	adds	r6, r6, #1
 8020850:	b2f1      	uxtb	r1, r6
 8020852:	f88d 2001 	strb.w	r2, [sp, #1]
 8020856:	2206      	movs	r2, #6
 8020858:	4429      	add	r1, r5
 802085a:	f10d 0002 	add.w	r0, sp, #2
 802085e:	f7ee f973 	bl	800eb48 <ble_memcpy>
 8020862:	1db6      	adds	r6, r6, #6
 8020864:	b2f1      	uxtb	r1, r6
 8020866:	5c68      	ldrb	r0, [r5, r1]
 8020868:	1c76      	adds	r6, r6, #1
 802086a:	b2f1      	uxtb	r1, r6
 802086c:	f88d 0008 	strb.w	r0, [sp, #8]
 8020870:	f10d 0009 	add.w	r0, sp, #9
 8020874:	4429      	add	r1, r5
 8020876:	6001      	str	r1, [r0, #0]
 8020878:	f89d 0008 	ldrb.w	r0, [sp, #8]
 802087c:	1986      	adds	r6, r0, r6
 802087e:	b2f0      	uxtb	r0, r6
 8020880:	5c29      	ldrb	r1, [r5, r0]
 8020882:	f10d 0009 	add.w	r0, sp, #9
 8020886:	1c76      	adds	r6, r6, #1
 8020888:	f88d 100d 	strb.w	r1, [sp, #13]
 802088c:	6802      	ldr	r2, [r0, #0]
 802088e:	f89d 1008 	ldrb.w	r1, [sp, #8]
 8020892:	f89d 0000 	ldrb.w	r0, [sp]
 8020896:	f004 fb53 	bl	8024f40 <GAP_Advertising_Report_Handler>
 802089a:	b148      	cbz	r0, 80208b0 <??LECTRL_LeAdvertisingReportEvent_2>
 802089c:	4669      	mov	r1, sp
 802089e:	2001      	movs	r0, #1
 80208a0:	f7f7 f963 	bl	8017b6a <hci_le_advertising_report_event>
 80208a4:	ea5f 0800 	movs.w	r8, r0
 80208a8:	d001      	beq.n	80208ae <??LECTRL_LeAdvertisingReportEvent_3>
 80208aa:	b2f8      	uxtb	r0, r7
 80208ac:	b110      	cbz	r0, 80208b4 <??LECTRL_LeAdvertisingReportEvent_0>

080208ae <??LECTRL_LeAdvertisingReportEvent_3>:
 80208ae:	1c7f      	adds	r7, r7, #1

080208b0 <??LECTRL_LeAdvertisingReportEvent_2>:
 80208b0:	1e64      	subs	r4, r4, #1
 80208b2:	d1c5      	bne.n	8020840 <??LECTRL_LeAdvertisingReportEvent_1>

080208b4 <??LECTRL_LeAdvertisingReportEvent_0>:
 80208b4:	4640      	mov	r0, r8
 80208b6:	b004      	add	sp, #16
 80208b8:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

080208bc <LECTRL_LeDirectedAdvertisingReportEvent>:
 80208bc:	b510      	push	{r4, lr}
 80208be:	b084      	sub	sp, #16
 80208c0:	4604      	mov	r4, r0
 80208c2:	7860      	ldrb	r0, [r4, #1]
 80208c4:	2206      	movs	r2, #6
 80208c6:	f88d 0000 	strb.w	r0, [sp]
 80208ca:	78a1      	ldrb	r1, [r4, #2]
 80208cc:	f10d 0002 	add.w	r0, sp, #2
 80208d0:	f88d 1001 	strb.w	r1, [sp, #1]
 80208d4:	1ce1      	adds	r1, r4, #3
 80208d6:	f7ee f937 	bl	800eb48 <ble_memcpy>
 80208da:	7a60      	ldrb	r0, [r4, #9]
 80208dc:	2206      	movs	r2, #6
 80208de:	f104 010a 	add.w	r1, r4, #10
 80208e2:	f88d 0008 	strb.w	r0, [sp, #8]
 80208e6:	f10d 0009 	add.w	r0, sp, #9
 80208ea:	f7ee f92d 	bl	800eb48 <ble_memcpy>
 80208ee:	7c20      	ldrb	r0, [r4, #16]
 80208f0:	4669      	mov	r1, sp
 80208f2:	f88d 000f 	strb.w	r0, [sp, #15]
 80208f6:	2001      	movs	r0, #1
 80208f8:	f7f7 fa2f 	bl	8017d5a <hci_le_directed_advertising_report_event>
 80208fc:	b004      	add	sp, #16
 80208fe:	bd10      	pop	{r4, pc}

08020900 <LECTRL_DataBufferOverflowEvent>:
 8020900:	2000      	movs	r0, #0
 8020902:	4770      	bx	lr

08020904 <LECTRL_EncryptionChangeEvent>:
 8020904:	b570      	push	{r4, r5, r6, lr}
 8020906:	7881      	ldrb	r1, [r0, #2]
 8020908:	7845      	ldrb	r5, [r0, #1]
 802090a:	7804      	ldrb	r4, [r0, #0]
 802090c:	78c6      	ldrb	r6, [r0, #3]
 802090e:	ea45 2501 	orr.w	r5, r5, r1, lsl #8
 8020912:	4621      	mov	r1, r4
 8020914:	4633      	mov	r3, r6
 8020916:	1c6d      	adds	r5, r5, #1
 8020918:	b2aa      	uxth	r2, r5
 802091a:	2000      	movs	r0, #0
 802091c:	f001 f9c4 	bl	8021ca8 <SMP_Encryption_Update_Handler>
 8020920:	4632      	mov	r2, r6
 8020922:	b2a9      	uxth	r1, r5
 8020924:	4620      	mov	r0, r4
 8020926:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 802092a:	f7f7 b8a5 	b.w	8017a78 <hci_encryption_change_event>

0802092e <LECTRL_EncryptionKeyRefreshCompleteEvent>:
 802092e:	b538      	push	{r3, r4, r5, lr}
 8020930:	7881      	ldrb	r1, [r0, #2]
 8020932:	7845      	ldrb	r5, [r0, #1]
 8020934:	7804      	ldrb	r4, [r0, #0]
 8020936:	2301      	movs	r3, #1
 8020938:	ea45 2501 	orr.w	r5, r5, r1, lsl #8
 802093c:	4621      	mov	r1, r4
 802093e:	2001      	movs	r0, #1
 8020940:	1c6d      	adds	r5, r5, #1
 8020942:	b2aa      	uxth	r2, r5
 8020944:	f001 f9b0 	bl	8021ca8 <SMP_Encryption_Update_Handler>
 8020948:	b2a9      	uxth	r1, r5
 802094a:	4620      	mov	r0, r4
 802094c:	e8bd 4034 	ldmia.w	sp!, {r2, r4, r5, lr}
 8020950:	f7f7 b8cf 	b.w	8017af2 <hci_encryption_key_refresh_complete_event>

08020954 <LECTRL_AutPayloadTimeoutEvent>:
 8020954:	2000      	movs	r0, #0
 8020956:	4770      	bx	lr

08020958 <LECTRL_LeLongTermKeyRequestEvent>:
 8020958:	b570      	push	{r4, r5, r6, lr}
 802095a:	4604      	mov	r4, r0
 802095c:	7860      	ldrb	r0, [r4, #1]
 802095e:	7825      	ldrb	r5, [r4, #0]
 8020960:	7aa6      	ldrb	r6, [r4, #10]
 8020962:	1ca1      	adds	r1, r4, #2
 8020964:	ea45 2500 	orr.w	r5, r5, r0, lsl #8
 8020968:	7ae0      	ldrb	r0, [r4, #11]
 802096a:	ea46 2600 	orr.w	r6, r6, r0, lsl #8
 802096e:	1c6d      	adds	r5, r5, #1
 8020970:	b2a8      	uxth	r0, r5
 8020972:	4632      	mov	r2, r6
 8020974:	f001 f904 	bl	8021b80 <SMP_Ltk_Request_Handler>
 8020978:	b130      	cbz	r0, 8020988 <??LECTRL_LeLongTermKeyRequestEvent_0>
 802097a:	4632      	mov	r2, r6
 802097c:	1ca1      	adds	r1, r4, #2
 802097e:	b2a8      	uxth	r0, r5
 8020980:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8020984:	f7f7 b963 	b.w	8017c4e <hci_le_long_term_key_request_event>

08020988 <??LECTRL_LeLongTermKeyRequestEvent_0>:
 8020988:	bd70      	pop	{r4, r5, r6, pc}

0802098a <LECTRL_NumberOfCompletedPacketsEvent>:
 802098a:	b5f0      	push	{r4, r5, r6, r7, lr}
 802098c:	b0bf      	sub	sp, #252	; 0xfc
 802098e:	4605      	mov	r5, r0
 8020990:	782c      	ldrb	r4, [r5, #0]
 8020992:	22fc      	movs	r2, #252	; 0xfc
 8020994:	2100      	movs	r1, #0
 8020996:	4668      	mov	r0, sp
 8020998:	f7ee f927 	bl	800ebea <ble_memset>
 802099c:	2c01      	cmp	r4, #1
 802099e:	db18      	blt.n	80209d2 <??LECTRL_NumberOfCompletedPacketsEvent_0>
 80209a0:	0060      	lsls	r0, r4, #1
 80209a2:	1c40      	adds	r0, r0, #1
 80209a4:	b2c0      	uxtb	r0, r0
 80209a6:	182e      	adds	r6, r5, r0
 80209a8:	466f      	mov	r7, sp

080209aa <??LECTRL_NumberOfCompletedPacketsEvent_1>:
 80209aa:	78a9      	ldrb	r1, [r5, #2]
 80209ac:	7868      	ldrb	r0, [r5, #1]
 80209ae:	1cad      	adds	r5, r5, #2
 80209b0:	ea40 2001 	orr.w	r0, r0, r1, lsl #8
 80209b4:	1c40      	adds	r0, r0, #1
 80209b6:	f3c0 000b 	ubfx	r0, r0, #0, #12
 80209ba:	8038      	strh	r0, [r7, #0]
 80209bc:	7872      	ldrb	r2, [r6, #1]
 80209be:	f816 1b02 	ldrb.w	r1, [r6], #2
 80209c2:	ea41 2102 	orr.w	r1, r1, r2, lsl #8
 80209c6:	8079      	strh	r1, [r7, #2]
 80209c8:	f7ff f9c3 	bl	801fd52 <LECTRL_AclPacketTransmitted>
 80209cc:	1d3f      	adds	r7, r7, #4
 80209ce:	1e64      	subs	r4, r4, #1
 80209d0:	d1eb      	bne.n	80209aa <??LECTRL_NumberOfCompletedPacketsEvent_1>

080209d2 <??LECTRL_NumberOfCompletedPacketsEvent_0>:
 80209d2:	2000      	movs	r0, #0
 80209d4:	b03f      	add	sp, #252	; 0xfc
 80209d6:	bdf0      	pop	{r4, r5, r6, r7, pc}

080209d8 <LECTRL_EndOfRadioActivityEvent>:
 80209d8:	b580      	push	{r7, lr}
 80209da:	2100      	movs	r1, #0
 80209dc:	9100      	str	r1, [sp, #0]
 80209de:	7881      	ldrb	r1, [r0, #2]
 80209e0:	7800      	ldrb	r0, [r0, #0]
 80209e2:	2300      	movs	r3, #0
 80209e4:	2200      	movs	r2, #0
 80209e6:	f7f7 fa1f 	bl	8017e28 <aci_hal_end_of_radio_activity_event>
 80209ea:	bd02      	pop	{r1, pc}

080209ec <hci_le_read_local_p256_public_key>:
 80209ec:	b538      	push	{r3, r4, r5, lr}
 80209ee:	4c6a      	ldr	r4, [pc, #424]	; (8020b98 <??DataTable7>)
 80209f0:	f104 0560 	add.w	r5, r4, #96	; 0x60
 80209f4:	7828      	ldrb	r0, [r5, #0]
 80209f6:	0781      	lsls	r1, r0, #30
 80209f8:	d409      	bmi.n	8020a0e <??hci_le_read_local_p256_public_key_0>
 80209fa:	f104 0140 	add.w	r1, r4, #64	; 0x40
 80209fe:	2008      	movs	r0, #8
 8020a00:	f006 ff8d 	bl	802791e <BLEPLAT_RngGet>
 8020a04:	f104 0040 	add.w	r0, r4, #64	; 0x40
 8020a08:	f006 ff92 	bl	8027930 <BLEPLAT_PkaStartP256Key>
 8020a0c:	b108      	cbz	r0, 8020a12 <??hci_le_read_local_p256_public_key_1>

08020a0e <??hci_le_read_local_p256_public_key_0>:
 8020a0e:	203a      	movs	r0, #58	; 0x3a
 8020a10:	bd32      	pop	{r1, r4, r5, pc}

08020a12 <??hci_le_read_local_p256_public_key_1>:
 8020a12:	7828      	ldrb	r0, [r5, #0]
 8020a14:	2100      	movs	r1, #0
 8020a16:	7069      	strb	r1, [r5, #1]
 8020a18:	f040 0002 	orr.w	r0, r0, #2
 8020a1c:	7028      	strb	r0, [r5, #0]
 8020a1e:	f3ef 8010 	mrs	r0, PRIMASK
 8020a22:	b672      	cpsid	i
 8020a24:	f894 1039 	ldrb.w	r1, [r4, #57]	; 0x39
 8020a28:	f001 017f 	and.w	r1, r1, #127	; 0x7f
 8020a2c:	f884 1039 	strb.w	r1, [r4, #57]	; 0x39
 8020a30:	f380 8810 	msr	PRIMASK, r0
 8020a34:	2000      	movs	r0, #0
 8020a36:	bd32      	pop	{r1, r4, r5, pc}

08020a38 <hci_le_generate_dhkey>:
 8020a38:	b570      	push	{r4, r5, r6, lr}
 8020a3a:	4c57      	ldr	r4, [pc, #348]	; (8020b98 <??DataTable7>)
 8020a3c:	4605      	mov	r5, r0
 8020a3e:	f104 0660 	add.w	r6, r4, #96	; 0x60
 8020a42:	7830      	ldrb	r0, [r6, #0]
 8020a44:	b090      	sub	sp, #64	; 0x40
 8020a46:	0781      	lsls	r1, r0, #30
 8020a48:	d411      	bmi.n	8020a6e <??hci_le_generate_dhkey_0>
 8020a4a:	2120      	movs	r1, #32
 8020a4c:	f104 0040 	add.w	r0, r4, #64	; 0x40
 8020a50:	f004 f800 	bl	8024a54 <Is_Empty>
 8020a54:	b100      	cbz	r0, 8020a58 <??hci_le_generate_dhkey_1>
 8020a56:	e032      	b.n	8020abe <?Subroutine2>

08020a58 <??hci_le_generate_dhkey_1>:
 8020a58:	2240      	movs	r2, #64	; 0x40
 8020a5a:	4629      	mov	r1, r5
 8020a5c:	4668      	mov	r0, sp
 8020a5e:	f7ee f873 	bl	800eb48 <ble_memcpy>
 8020a62:	4669      	mov	r1, sp
 8020a64:	f104 0040 	add.w	r0, r4, #64	; 0x40
 8020a68:	f006 ff66 	bl	8027938 <BLEPLAT_PkaStartDhKey>
 8020a6c:	b100      	cbz	r0, 8020a70 <??hci_le_generate_dhkey_2>

08020a6e <??hci_le_generate_dhkey_0>:
 8020a6e:	e029      	b.n	8020ac4 <?Subroutine1>

08020a70 <??hci_le_generate_dhkey_2>:
 8020a70:	e02b      	b.n	8020aca <?Subroutine0>
	...

08020a74 <hci_le_generate_dhkey_v2>:
 8020a74:	b570      	push	{r4, r5, r6, lr}
 8020a76:	4c48      	ldr	r4, [pc, #288]	; (8020b98 <??DataTable7>)
 8020a78:	4605      	mov	r5, r0
 8020a7a:	f104 0660 	add.w	r6, r4, #96	; 0x60
 8020a7e:	7830      	ldrb	r0, [r6, #0]
 8020a80:	b090      	sub	sp, #64	; 0x40
 8020a82:	0782      	lsls	r2, r0, #30
 8020a84:	d419      	bmi.n	8020aba <??hci_le_generate_dhkey_v2_0>
 8020a86:	b131      	cbz	r1, 8020a96 <??hci_le_generate_dhkey_v2_1>
 8020a88:	f05f 0220 	movs.w	r2, #32
 8020a8c:	a147      	add	r1, pc, #284	; (adr r1, 8020bac <PKA_debug_private_key_le>)
 8020a8e:	f104 0040 	add.w	r0, r4, #64	; 0x40
 8020a92:	f7ee f859 	bl	800eb48 <ble_memcpy>

08020a96 <??hci_le_generate_dhkey_v2_1>:
 8020a96:	2120      	movs	r1, #32
 8020a98:	f104 0040 	add.w	r0, r4, #64	; 0x40
 8020a9c:	f003 ffda 	bl	8024a54 <Is_Empty>
 8020aa0:	b100      	cbz	r0, 8020aa4 <??hci_le_generate_dhkey_v2_2>
 8020aa2:	e00c      	b.n	8020abe <?Subroutine2>

08020aa4 <??hci_le_generate_dhkey_v2_2>:
 8020aa4:	2240      	movs	r2, #64	; 0x40
 8020aa6:	4629      	mov	r1, r5
 8020aa8:	4668      	mov	r0, sp
 8020aaa:	f7ee f84d 	bl	800eb48 <ble_memcpy>
 8020aae:	4669      	mov	r1, sp
 8020ab0:	f104 0040 	add.w	r0, r4, #64	; 0x40
 8020ab4:	f006 ff40 	bl	8027938 <BLEPLAT_PkaStartDhKey>
 8020ab8:	b100      	cbz	r0, 8020abc <??hci_le_generate_dhkey_v2_3>

08020aba <??hci_le_generate_dhkey_v2_0>:
 8020aba:	e003      	b.n	8020ac4 <?Subroutine1>

08020abc <??hci_le_generate_dhkey_v2_3>:
 8020abc:	e005      	b.n	8020aca <?Subroutine0>

08020abe <?Subroutine2>:
 8020abe:	201f      	movs	r0, #31
 8020ac0:	b010      	add	sp, #64	; 0x40
 8020ac2:	bd70      	pop	{r4, r5, r6, pc}

08020ac4 <?Subroutine1>:
 8020ac4:	203a      	movs	r0, #58	; 0x3a
 8020ac6:	b010      	add	sp, #64	; 0x40
 8020ac8:	bd70      	pop	{r4, r5, r6, pc}

08020aca <?Subroutine0>:
 8020aca:	7830      	ldrb	r0, [r6, #0]
 8020acc:	2101      	movs	r1, #1
 8020ace:	7071      	strb	r1, [r6, #1]
 8020ad0:	f040 0002 	orr.w	r0, r0, #2
 8020ad4:	7030      	strb	r0, [r6, #0]
 8020ad6:	f3ef 8010 	mrs	r0, PRIMASK
 8020ada:	b672      	cpsid	i
 8020adc:	f894 1039 	ldrb.w	r1, [r4, #57]	; 0x39
 8020ae0:	f001 017f 	and.w	r1, r1, #127	; 0x7f
 8020ae4:	f884 1039 	strb.w	r1, [r4, #57]	; 0x39
 8020ae8:	f380 8810 	msr	PRIMASK, r0
 8020aec:	2000      	movs	r0, #0
 8020aee:	b010      	add	sp, #64	; 0x40
 8020af0:	bd70      	pop	{r4, r5, r6, pc}

08020af2 <BLEPLATCB_PkaComplete>:
 8020af2:	b570      	push	{r4, r5, r6, lr}
 8020af4:	4c28      	ldr	r4, [pc, #160]	; (8020b98 <??DataTable7>)
 8020af6:	f104 0560 	add.w	r5, r4, #96	; 0x60
 8020afa:	7828      	ldrb	r0, [r5, #0]
 8020afc:	b090      	sub	sp, #64	; 0x40
 8020afe:	0781      	lsls	r1, r0, #30
 8020b00:	d533      	bpl.n	8020b6a <??BLEPLATCB_PkaComplete_0>
 8020b02:	7869      	ldrb	r1, [r5, #1]
 8020b04:	2600      	movs	r6, #0
 8020b06:	4668      	mov	r0, sp
 8020b08:	2900      	cmp	r1, #0
 8020b0a:	d112      	bne.n	8020b32 <??BLEPLATCB_PkaComplete_1>
 8020b0c:	f006 ff12 	bl	8027934 <BLEPLAT_PkaReadP256Key>
 8020b10:	4669      	mov	r1, sp
 8020b12:	2000      	movs	r0, #0
 8020b14:	f003 fbd9 	bl	80242ca <SMP_Read_Local_P256key_Complete_Handler>
 8020b18:	4920      	ldr	r1, [pc, #128]	; (8020b9c <??DataTable7_1>)
 8020b1a:	79c8      	ldrb	r0, [r1, #7]
 8020b1c:	2800      	cmp	r0, #0
 8020b1e:	bf1e      	ittt	ne
 8020b20:	491f      	ldrne	r1, [pc, #124]	; (8020ba0 <??DataTable7_2>)
 8020b22:	7808      	ldrbne	r0, [r1, #0]
 8020b24:	2800      	cmpne	r0, #0
 8020b26:	d011      	beq.n	8020b4c <??BLEPLATCB_PkaComplete_2>
 8020b28:	4669      	mov	r1, sp
 8020b2a:	2000      	movs	r0, #0
 8020b2c:	f7f7 f8c6 	bl	8017cbc <hci_le_read_local_p256_public_key_complete_event>
 8020b30:	e00c      	b.n	8020b4c <??BLEPLATCB_PkaComplete_2>

08020b32 <??BLEPLATCB_PkaComplete_1>:
 8020b32:	f006 ff03 	bl	802793c <BLEPLAT_PkaReadDhKey>
 8020b36:	b128      	cbz	r0, 8020b44 <??BLEPLATCB_PkaComplete_3>
 8020b38:	2220      	movs	r2, #32
 8020b3a:	21ff      	movs	r1, #255	; 0xff
 8020b3c:	4668      	mov	r0, sp
 8020b3e:	f7ee f854 	bl	800ebea <ble_memset>
 8020b42:	2612      	movs	r6, #18

08020b44 <??BLEPLATCB_PkaComplete_3>:
 8020b44:	4669      	mov	r1, sp
 8020b46:	4630      	mov	r0, r6
 8020b48:	f003 fbe2 	bl	8024310 <SMP_Generate_DHkey_Complete_Handler>

08020b4c <??BLEPLATCB_PkaComplete_2>:
 8020b4c:	7828      	ldrb	r0, [r5, #0]
 8020b4e:	f000 00fd 	and.w	r0, r0, #253	; 0xfd
 8020b52:	7028      	strb	r0, [r5, #0]
 8020b54:	f3ef 8010 	mrs	r0, PRIMASK
 8020b58:	b672      	cpsid	i
 8020b5a:	f894 1039 	ldrb.w	r1, [r4, #57]	; 0x39
 8020b5e:	f041 0180 	orr.w	r1, r1, #128	; 0x80
 8020b62:	f884 1039 	strb.w	r1, [r4, #57]	; 0x39
 8020b66:	f380 8810 	msr	PRIMASK, r0

08020b6a <??BLEPLATCB_PkaComplete_0>:
 8020b6a:	b010      	add	sp, #64	; 0x40
 8020b6c:	bd70      	pop	{r4, r5, r6, pc}
	...

08020b70 <PKA_Force_Debug_Private_Key>:
 8020b70:	f05f 0220 	movs.w	r2, #32
 8020b74:	a10d      	add	r1, pc, #52	; (adr r1, 8020bac <PKA_debug_private_key_le>)
 8020b76:	480b      	ldr	r0, [pc, #44]	; (8020ba4 <??DataTable7_3>)
 8020b78:	f7ed bfe6 	b.w	800eb48 <ble_memcpy>

08020b7c <PKA_Get_Debug_Public_Key>:
 8020b7c:	2240      	movs	r2, #64	; 0x40
 8020b7e:	490a      	ldr	r1, [pc, #40]	; (8020ba8 <??DataTable7_4>)
 8020b80:	f7ed bfe2 	b.w	800eb48 <ble_memcpy>

08020b84 <PKA_Is_Debug_Public_Key>:
 8020b84:	b580      	push	{r7, lr}
 8020b86:	2240      	movs	r2, #64	; 0x40
 8020b88:	4907      	ldr	r1, [pc, #28]	; (8020ba8 <??DataTable7_4>)
 8020b8a:	f7ee f868 	bl	800ec5e <ble_memcmp>
 8020b8e:	1e40      	subs	r0, r0, #1
 8020b90:	4180      	sbcs	r0, r0
 8020b92:	0fc0      	lsrs	r0, r0, #31
 8020b94:	bd02      	pop	{r1, pc}
	...

08020b98 <??DataTable7>:
 8020b98:	3710 2000                                   .7. 

08020b9c <??DataTable7_1>:
 8020b9c:	3950 2000                                   P9. 

08020ba0 <??DataTable7_2>:
 8020ba0:	3930 2000                                   09. 

08020ba4 <??DataTable7_3>:
 8020ba4:	3750 2000                                   P7. 

08020ba8 <??DataTable7_4>:
 8020ba8:	22cc 0803                                   ."..

08020bac <PKA_debug_private_key_le>:
 8020bac:	1abd cd3c b8a6 5899 b799 eb40 607b 4aff     ..<....X..@.{`.J
 8020bbc:	3f50 d210 b3e3 74c9 5f38 a3c5 f6d4 3f49     P?.....t8_....I?

08020bcc <MBuff_Init>:
 8020bcc:	b4f0      	push	{r4, r5, r6, r7}
 8020bce:	4602      	mov	r2, r0
 8020bd0:	7850      	ldrb	r0, [r2, #1]
 8020bd2:	2800      	cmp	r0, #0
 8020bd4:	bf1c      	itt	ne
 8020bd6:	6893      	ldrne	r3, [r2, #8]
 8020bd8:	2b00      	cmpne	r3, #0
 8020bda:	d02a      	beq.n	8020c32 <??MBuff_Init_0>
 8020bdc:	2000      	movs	r0, #0
 8020bde:	7010      	strb	r0, [r2, #0]
 8020be0:	6854      	ldr	r4, [r2, #4]
 8020be2:	6020      	str	r0, [r4, #0]
 8020be4:	2400      	movs	r4, #0
 8020be6:	e01d      	b.n	8020c24 <??MBuff_Init_1>

08020be8 <??MBuff_Init_2>:
 8020be8:	eb00 0180 	add.w	r1, r0, r0, lsl #2
 8020bec:	00c8      	lsls	r0, r1, #3
 8020bee:	2500      	movs	r5, #0
 8020bf0:	501d      	str	r5, [r3, r0]
 8020bf2:	1818      	adds	r0, r3, r0
 8020bf4:	d015      	beq.n	8020c22 <??MBuff_Init_3>
 8020bf6:	f3ef 8510 	mrs	r5, PRIMASK
 8020bfa:	b672      	cpsid	i
 8020bfc:	7811      	ldrb	r1, [r2, #0]
 8020bfe:	6856      	ldr	r6, [r2, #4]
 8020c00:	b111      	cbz	r1, 8020c08 <??MBuff_Init_4>
 8020c02:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 8020c06:	6008      	str	r0, [r1, #0]

08020c08 <??MBuff_Init_4>:
 8020c08:	2700      	movs	r7, #0
 8020c0a:	8087      	strh	r7, [r0, #4]
 8020c0c:	7811      	ldrb	r1, [r2, #0]
 8020c0e:	1c49      	adds	r1, r1, #1
 8020c10:	7011      	strb	r1, [r2, #0]
 8020c12:	b2c9      	uxtb	r1, r1
 8020c14:	f846 0021 	str.w	r0, [r6, r1, lsl #2]
 8020c18:	6800      	ldr	r0, [r0, #0]
 8020c1a:	2800      	cmp	r0, #0
 8020c1c:	d1f4      	bne.n	8020c08 <??MBuff_Init_4>
 8020c1e:	f385 8810 	msr	PRIMASK, r5

08020c22 <??MBuff_Init_3>:
 8020c22:	1c64      	adds	r4, r4, #1

08020c24 <??MBuff_Init_1>:
 8020c24:	7851      	ldrb	r1, [r2, #1]
 8020c26:	b2e0      	uxtb	r0, r4
 8020c28:	4288      	cmp	r0, r1
 8020c2a:	d3dd      	bcc.n	8020be8 <??MBuff_Init_2>
 8020c2c:	2000      	movs	r0, #0
 8020c2e:	bcf0      	pop	{r4, r5, r6, r7}
 8020c30:	4770      	bx	lr

08020c32 <??MBuff_Init_0>:
 8020c32:	2097      	movs	r0, #151	; 0x97
 8020c34:	bcf0      	pop	{r4, r5, r6, r7}
 8020c36:	4770      	bx	lr

08020c38 <MBuff_Get>:
 8020c38:	1e49      	subs	r1, r1, #1
 8020c3a:	04c9      	lsls	r1, r1, #19
 8020c3c:	0e09      	lsrs	r1, r1, #24
 8020c3e:	f3ef 8210 	mrs	r2, PRIMASK
 8020c42:	b672      	cpsid	i
 8020c44:	7803      	ldrb	r3, [r0, #0]
 8020c46:	4299      	cmp	r1, r3
 8020c48:	da0e      	bge.n	8020c68 <??MBuff_Get_0>
 8020c4a:	1a59      	subs	r1, r3, r1
 8020c4c:	f101 03ff 	add.w	r3, r1, #255	; 0xff
 8020c50:	7003      	strb	r3, [r0, #0]
 8020c52:	f8d0 c004 	ldr.w	ip, [r0, #4]
 8020c56:	b2db      	uxtb	r3, r3
 8020c58:	b2c9      	uxtb	r1, r1
 8020c5a:	f85c 3023 	ldr.w	r3, [ip, r3, lsl #2]
 8020c5e:	f85c 0021 	ldr.w	r0, [ip, r1, lsl #2]
 8020c62:	2100      	movs	r1, #0
 8020c64:	6019      	str	r1, [r3, #0]
 8020c66:	e000      	b.n	8020c6a <??MBuff_Get_1>

08020c68 <??MBuff_Get_0>:
 8020c68:	2000      	movs	r0, #0

08020c6a <??MBuff_Get_1>:
 8020c6a:	f382 8810 	msr	PRIMASK, r2
 8020c6e:	4770      	bx	lr

08020c70 <MBuff_Release>:
 8020c70:	2900      	cmp	r1, #0
 8020c72:	d100      	bne.n	8020c76 <??MBuff_Release_0>
 8020c74:	4770      	bx	lr

08020c76 <??MBuff_Release_0>:
 8020c76:	b430      	push	{r4, r5}
 8020c78:	f3ef 8310 	mrs	r3, PRIMASK
 8020c7c:	b672      	cpsid	i
 8020c7e:	7802      	ldrb	r2, [r0, #0]
 8020c80:	6844      	ldr	r4, [r0, #4]
 8020c82:	b112      	cbz	r2, 8020c8a <??MBuff_Release_1>
 8020c84:	f854 2022 	ldr.w	r2, [r4, r2, lsl #2]
 8020c88:	6011      	str	r1, [r2, #0]

08020c8a <??MBuff_Release_1>:
 8020c8a:	2500      	movs	r5, #0
 8020c8c:	808d      	strh	r5, [r1, #4]
 8020c8e:	7802      	ldrb	r2, [r0, #0]
 8020c90:	1c52      	adds	r2, r2, #1
 8020c92:	7002      	strb	r2, [r0, #0]
 8020c94:	b2d2      	uxtb	r2, r2
 8020c96:	f844 1022 	str.w	r1, [r4, r2, lsl #2]
 8020c9a:	6809      	ldr	r1, [r1, #0]
 8020c9c:	2900      	cmp	r1, #0
 8020c9e:	d1f4      	bne.n	8020c8a <??MBuff_Release_1>
 8020ca0:	f383 8810 	msr	PRIMASK, r3
 8020ca4:	bc30      	pop	{r4, r5}
 8020ca6:	4770      	bx	lr

08020ca8 <MBuff_Get_Chain_Count>:
 8020ca8:	4601      	mov	r1, r0
 8020caa:	2000      	movs	r0, #0
 8020cac:	e001      	b.n	8020cb2 <??MBuff_Get_Chain_Count_0>

08020cae <??MBuff_Get_Chain_Count_1>:
 8020cae:	1c40      	adds	r0, r0, #1
 8020cb0:	6809      	ldr	r1, [r1, #0]

08020cb2 <??MBuff_Get_Chain_Count_0>:
 8020cb2:	2900      	cmp	r1, #0
 8020cb4:	d1fb      	bne.n	8020cae <??MBuff_Get_Chain_Count_1>
 8020cb6:	b2c0      	uxtb	r0, r0
 8020cb8:	4770      	bx	lr

08020cba <MBuff_Get_Chain_Size>:
 8020cba:	4601      	mov	r1, r0
 8020cbc:	2000      	movs	r0, #0
 8020cbe:	e001      	b.n	8020cc4 <??MBuff_Get_Chain_Size_0>

08020cc0 <??MBuff_Get_Chain_Size_1>:
 8020cc0:	1c40      	adds	r0, r0, #1
 8020cc2:	6809      	ldr	r1, [r1, #0]

08020cc4 <??MBuff_Get_Chain_Size_0>:
 8020cc4:	2900      	cmp	r1, #0
 8020cc6:	d1fb      	bne.n	8020cc0 <??MBuff_Get_Chain_Size_1>
 8020cc8:	0600      	lsls	r0, r0, #24
 8020cca:	0cc0      	lsrs	r0, r0, #19
 8020ccc:	4770      	bx	lr

08020cce <MBuff_Resize>:
 8020cce:	b538      	push	{r3, r4, r5, lr}
 8020cd0:	460c      	mov	r4, r1
 8020cd2:	2100      	movs	r1, #0
 8020cd4:	4625      	mov	r5, r4
 8020cd6:	e001      	b.n	8020cdc <??MBuff_Resize_0>

08020cd8 <??MBuff_Resize_1>:
 8020cd8:	4625      	mov	r5, r4
 8020cda:	682c      	ldr	r4, [r5, #0]

08020cdc <??MBuff_Resize_0>:
 8020cdc:	b154      	cbz	r4, 8020cf4 <??MBuff_Resize_2>
 8020cde:	3120      	adds	r1, #32
 8020ce0:	b289      	uxth	r1, r1
 8020ce2:	4291      	cmp	r1, r2
 8020ce4:	dbf8      	blt.n	8020cd8 <??MBuff_Resize_1>
 8020ce6:	6821      	ldr	r1, [r4, #0]
 8020ce8:	b161      	cbz	r1, 8020d04 <??MBuff_Resize_3>
 8020cea:	f7ff ffc1 	bl	8020c70 <MBuff_Release>
 8020cee:	2000      	movs	r0, #0
 8020cf0:	6020      	str	r0, [r4, #0]
 8020cf2:	e007      	b.n	8020d04 <??MBuff_Resize_3>

08020cf4 <??MBuff_Resize_2>:
 8020cf4:	1a52      	subs	r2, r2, r1
 8020cf6:	b291      	uxth	r1, r2
 8020cf8:	f7ff ff9e 	bl	8020c38 <MBuff_Get>
 8020cfc:	6028      	str	r0, [r5, #0]
 8020cfe:	b908      	cbnz	r0, 8020d04 <??MBuff_Resize_3>
 8020d00:	2097      	movs	r0, #151	; 0x97
 8020d02:	bd32      	pop	{r1, r4, r5, pc}

08020d04 <??MBuff_Resize_3>:
 8020d04:	2000      	movs	r0, #0
 8020d06:	bd32      	pop	{r1, r4, r5, pc}

08020d08 <MBuff_Write>:
 8020d08:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8020d0c:	4604      	mov	r4, r0
 8020d0e:	4688      	mov	r8, r1
 8020d10:	0950      	lsrs	r0, r2, #5
 8020d12:	461e      	mov	r6, r3
 8020d14:	b2c1      	uxtb	r1, r0
 8020d16:	b121      	cbz	r1, 8020d22 <??MBuff_Write_0>
 8020d18:	b2c0      	uxtb	r0, r0

08020d1a <??MBuff_Write_1>:
 8020d1a:	b314      	cbz	r4, 8020d62 <??MBuff_Write_2>
 8020d1c:	6824      	ldr	r4, [r4, #0]
 8020d1e:	1e40      	subs	r0, r0, #1
 8020d20:	d1fb      	bne.n	8020d1a <??MBuff_Write_1>

08020d22 <??MBuff_Write_0>:
 8020d22:	f002 071f 	and.w	r7, r2, #31
 8020d26:	e018      	b.n	8020d5a <??MBuff_Write_3>

08020d28 <??MBuff_Write_4>:
 8020d28:	f1c7 0520 	rsb	r5, r7, #32
 8020d2c:	b2ad      	uxth	r5, r5
 8020d2e:	b2b1      	uxth	r1, r6
 8020d30:	428d      	cmp	r5, r1
 8020d32:	bf88      	it	hi
 8020d34:	460d      	movhi	r5, r1
 8020d36:	19e3      	adds	r3, r4, r7
 8020d38:	462a      	mov	r2, r5
 8020d3a:	4641      	mov	r1, r8
 8020d3c:	f103 0008 	add.w	r0, r3, #8
 8020d40:	f010 f8d1 	bl	8030ee6 <__aeabi_memcpy>
 8020d44:	88a1      	ldrh	r1, [r4, #4]
 8020d46:	1b76      	subs	r6, r6, r5
 8020d48:	eb05 0907 	add.w	r9, r5, r7
 8020d4c:	44a8      	add	r8, r5
 8020d4e:	4549      	cmp	r1, r9
 8020d50:	bfbc      	itt	lt
 8020d52:	197f      	addlt	r7, r7, r5
 8020d54:	80a7      	strhlt	r7, [r4, #4]
 8020d56:	2700      	movs	r7, #0
 8020d58:	6824      	ldr	r4, [r4, #0]

08020d5a <??MBuff_Write_3>:
 8020d5a:	b2b0      	uxth	r0, r6
 8020d5c:	b110      	cbz	r0, 8020d64 <??MBuff_Write_5>
 8020d5e:	2c00      	cmp	r4, #0
 8020d60:	d1e2      	bne.n	8020d28 <??MBuff_Write_4>

08020d62 <??MBuff_Write_2>:
 8020d62:	2091      	movs	r0, #145	; 0x91

08020d64 <??MBuff_Write_5>:
 8020d64:	e8bd 83f2 	ldmia.w	sp!, {r1, r4, r5, r6, r7, r8, r9, pc}

08020d68 <MBuff_Read>:
 8020d68:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8020d6a:	4604      	mov	r4, r0
 8020d6c:	460d      	mov	r5, r1
 8020d6e:	4610      	mov	r0, r2
 8020d70:	461e      	mov	r6, r3
 8020d72:	e001      	b.n	8020d78 <??MBuff_Read_0>

08020d74 <??MBuff_Read_1>:
 8020d74:	1a40      	subs	r0, r0, r1
 8020d76:	6824      	ldr	r4, [r4, #0]

08020d78 <??MBuff_Read_0>:
 8020d78:	b281      	uxth	r1, r0
 8020d7a:	b121      	cbz	r1, 8020d86 <??MBuff_Read_2>
 8020d7c:	b1e4      	cbz	r4, 8020db8 <??MBuff_Read_3>
 8020d7e:	88a1      	ldrh	r1, [r4, #4]
 8020d80:	b282      	uxth	r2, r0
 8020d82:	428a      	cmp	r2, r1
 8020d84:	d2f6      	bcs.n	8020d74 <??MBuff_Read_1>

08020d86 <??MBuff_Read_2>:
 8020d86:	b99c      	cbnz	r4, 8020db0 <??MBuff_Read_4>
 8020d88:	e016      	b.n	8020db8 <??MBuff_Read_3>

08020d8a <??MBuff_Read_5>:
 8020d8a:	88a7      	ldrh	r7, [r4, #4]
 8020d8c:	b2b2      	uxth	r2, r6
 8020d8e:	1a3f      	subs	r7, r7, r0
 8020d90:	b2bf      	uxth	r7, r7
 8020d92:	4297      	cmp	r7, r2
 8020d94:	bf88      	it	hi
 8020d96:	4617      	movhi	r7, r2
 8020d98:	b280      	uxth	r0, r0
 8020d9a:	1823      	adds	r3, r4, r0
 8020d9c:	463a      	mov	r2, r7
 8020d9e:	f103 0108 	add.w	r1, r3, #8
 8020da2:	4628      	mov	r0, r5
 8020da4:	f010 f89f 	bl	8030ee6 <__aeabi_memcpy>
 8020da8:	443d      	add	r5, r7
 8020daa:	1bf6      	subs	r6, r6, r7
 8020dac:	6824      	ldr	r4, [r4, #0]
 8020dae:	2000      	movs	r0, #0

08020db0 <??MBuff_Read_4>:
 8020db0:	b2b1      	uxth	r1, r6
 8020db2:	b119      	cbz	r1, 8020dbc <??MBuff_Read_6>
 8020db4:	2c00      	cmp	r4, #0
 8020db6:	d1e8      	bne.n	8020d8a <??MBuff_Read_5>

08020db8 <??MBuff_Read_3>:
 8020db8:	2091      	movs	r0, #145	; 0x91
 8020dba:	bdf2      	pop	{r1, r4, r5, r6, r7, pc}

08020dbc <??MBuff_Read_6>:
 8020dbc:	2000      	movs	r0, #0
 8020dbe:	bdf2      	pop	{r1, r4, r5, r6, r7, pc}

08020dc0 <MBuff_Cmp>:
 8020dc0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8020dc4:	4604      	mov	r4, r0
 8020dc6:	460f      	mov	r7, r1
 8020dc8:	4698      	mov	r8, r3
 8020dca:	e005      	b.n	8020dd8 <??MBuff_Cmp_0>

08020dcc <??MBuff_Cmp_1>:
 8020dcc:	88a1      	ldrh	r1, [r4, #4]
 8020dce:	b293      	uxth	r3, r2
 8020dd0:	428b      	cmp	r3, r1
 8020dd2:	d306      	bcc.n	8020de2 <??MBuff_Cmp_2>
 8020dd4:	1a52      	subs	r2, r2, r1
 8020dd6:	6824      	ldr	r4, [r4, #0]

08020dd8 <??MBuff_Cmp_0>:
 8020dd8:	b291      	uxth	r1, r2
 8020dda:	b111      	cbz	r1, 8020de2 <??MBuff_Cmp_2>
 8020ddc:	2c00      	cmp	r4, #0
 8020dde:	d1f5      	bne.n	8020dcc <??MBuff_Cmp_1>
 8020de0:	e000      	b.n	8020de4 <??MBuff_Cmp_3>

08020de2 <??MBuff_Cmp_2>:
 8020de2:	4610      	mov	r0, r2

08020de4 <??MBuff_Cmp_3>:
 8020de4:	b914      	cbnz	r4, 8020dec <??MBuff_Cmp_4>
 8020de6:	4640      	mov	r0, r8
 8020de8:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

08020dec <??MBuff_Cmp_4>:
 8020dec:	2500      	movs	r5, #0
 8020dee:	e002      	b.n	8020df6 <??MBuff_Cmp_5>

08020df0 <??MBuff_Cmp_6>:
 8020df0:	1975      	adds	r5, r6, r5
 8020df2:	b2ad      	uxth	r5, r5
 8020df4:	6824      	ldr	r4, [r4, #0]

08020df6 <??MBuff_Cmp_5>:
 8020df6:	4545      	cmp	r5, r8
 8020df8:	db05      	blt.n	8020e06 <??MBuff_Cmp_7>

08020dfa <??MBuff_Cmp_8>:
 8020dfa:	eba8 0005 	sub.w	r0, r8, r5
 8020dfe:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

08020e02 <??MBuff_Cmp_9>:
 8020e02:	1b80      	subs	r0, r0, r6
 8020e04:	6824      	ldr	r4, [r4, #0]

08020e06 <??MBuff_Cmp_7>:
 8020e06:	2c00      	cmp	r4, #0
 8020e08:	d0f7      	beq.n	8020dfa <??MBuff_Cmp_8>
 8020e0a:	88a6      	ldrh	r6, [r4, #4]
 8020e0c:	b281      	uxth	r1, r0
 8020e0e:	42b1      	cmp	r1, r6
 8020e10:	d2f7      	bcs.n	8020e02 <??MBuff_Cmp_9>
 8020e12:	1a36      	subs	r6, r6, r0
 8020e14:	b2b6      	uxth	r6, r6
 8020e16:	4546      	cmp	r6, r8
 8020e18:	bf88      	it	hi
 8020e1a:	4646      	movhi	r6, r8
 8020e1c:	b280      	uxth	r0, r0
 8020e1e:	4420      	add	r0, r4
 8020e20:	4632      	mov	r2, r6
 8020e22:	1979      	adds	r1, r7, r5
 8020e24:	3008      	adds	r0, #8
 8020e26:	f010 f88b 	bl	8030f40 <memcmp>
 8020e2a:	2800      	cmp	r0, #0
 8020e2c:	d0e0      	beq.n	8020df0 <??MBuff_Cmp_6>
 8020e2e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

08020e32 <MBuff_Clone>:
 8020e32:	b538      	push	{r3, r4, r5, lr}
 8020e34:	4605      	mov	r5, r0
 8020e36:	460c      	mov	r4, r1
 8020e38:	e00b      	b.n	8020e52 <??MBuff_Clone_0>

08020e3a <??MBuff_Clone_1>:
 8020e3a:	b17c      	cbz	r4, 8020e5c <??MBuff_Clone_2>
 8020e3c:	88a2      	ldrh	r2, [r4, #4]
 8020e3e:	f104 0108 	add.w	r1, r4, #8
 8020e42:	f105 0008 	add.w	r0, r5, #8
 8020e46:	f010 f84e 	bl	8030ee6 <__aeabi_memcpy>
 8020e4a:	88a1      	ldrh	r1, [r4, #4]
 8020e4c:	80a9      	strh	r1, [r5, #4]
 8020e4e:	682d      	ldr	r5, [r5, #0]
 8020e50:	6824      	ldr	r4, [r4, #0]

08020e52 <??MBuff_Clone_0>:
 8020e52:	2d00      	cmp	r5, #0
 8020e54:	d1f1      	bne.n	8020e3a <??MBuff_Clone_1>
 8020e56:	b90c      	cbnz	r4, 8020e5c <??MBuff_Clone_2>
 8020e58:	2000      	movs	r0, #0
 8020e5a:	bd32      	pop	{r1, r4, r5, pc}

08020e5c <??MBuff_Clone_2>:
 8020e5c:	2097      	movs	r0, #151	; 0x97
 8020e5e:	bd32      	pop	{r1, r4, r5, pc}

08020e60 <MBuff_Block_Copy>:
 8020e60:	4603      	mov	r3, r0
 8020e62:	4610      	mov	r0, r2
 8020e64:	1e40      	subs	r0, r0, #1
 8020e66:	f040 001f 	orr.w	r0, r0, #31
 8020e6a:	1c40      	adds	r0, r0, #1
 8020e6c:	2200      	movs	r2, #0
 8020e6e:	0400      	lsls	r0, r0, #16
 8020e70:	b430      	push	{r4, r5}
 8020e72:	0d40      	lsrs	r0, r0, #21
 8020e74:	d016      	beq.n	8020ea4 <??MBuff_Block_Copy_0>

08020e76 <??MBuff_Block_Copy_1>:
 8020e76:	f101 0408 	add.w	r4, r1, #8
 8020e7a:	6822      	ldr	r2, [r4, #0]
 8020e7c:	601a      	str	r2, [r3, #0]
 8020e7e:	6865      	ldr	r5, [r4, #4]
 8020e80:	605d      	str	r5, [r3, #4]
 8020e82:	68a2      	ldr	r2, [r4, #8]
 8020e84:	609a      	str	r2, [r3, #8]
 8020e86:	68e5      	ldr	r5, [r4, #12]
 8020e88:	60dd      	str	r5, [r3, #12]
 8020e8a:	6922      	ldr	r2, [r4, #16]
 8020e8c:	611a      	str	r2, [r3, #16]
 8020e8e:	6965      	ldr	r5, [r4, #20]
 8020e90:	615d      	str	r5, [r3, #20]
 8020e92:	69a2      	ldr	r2, [r4, #24]
 8020e94:	619a      	str	r2, [r3, #24]
 8020e96:	69e4      	ldr	r4, [r4, #28]
 8020e98:	460a      	mov	r2, r1
 8020e9a:	61dc      	str	r4, [r3, #28]
 8020e9c:	3320      	adds	r3, #32
 8020e9e:	6809      	ldr	r1, [r1, #0]
 8020ea0:	1e40      	subs	r0, r0, #1
 8020ea2:	d1e8      	bne.n	8020e76 <??MBuff_Block_Copy_1>

08020ea4 <??MBuff_Block_Copy_0>:
 8020ea4:	4610      	mov	r0, r2
 8020ea6:	bc30      	pop	{r4, r5}
 8020ea8:	4770      	bx	lr

08020eaa <MBuff_Block_Write>:
 8020eaa:	4603      	mov	r3, r0
 8020eac:	1e50      	subs	r0, r2, #1
 8020eae:	f040 001f 	orr.w	r0, r0, #31
 8020eb2:	1c40      	adds	r0, r0, #1
 8020eb4:	0400      	lsls	r0, r0, #16
 8020eb6:	0d40      	lsrs	r0, r0, #21
 8020eb8:	d100      	bne.n	8020ebc <??MBuff_Block_Write_0>
 8020eba:	4770      	bx	lr

08020ebc <??MBuff_Block_Write_0>:
 8020ebc:	b470      	push	{r4, r5, r6}

08020ebe <??MBuff_Block_Write_1>:
 8020ebe:	680c      	ldr	r4, [r1, #0]
 8020ec0:	f103 0508 	add.w	r5, r3, #8
 8020ec4:	602c      	str	r4, [r5, #0]
 8020ec6:	684e      	ldr	r6, [r1, #4]
 8020ec8:	606e      	str	r6, [r5, #4]
 8020eca:	688c      	ldr	r4, [r1, #8]
 8020ecc:	60ac      	str	r4, [r5, #8]
 8020ece:	68ce      	ldr	r6, [r1, #12]
 8020ed0:	60ee      	str	r6, [r5, #12]
 8020ed2:	690c      	ldr	r4, [r1, #16]
 8020ed4:	612c      	str	r4, [r5, #16]
 8020ed6:	694e      	ldr	r6, [r1, #20]
 8020ed8:	616e      	str	r6, [r5, #20]
 8020eda:	698c      	ldr	r4, [r1, #24]
 8020edc:	61ac      	str	r4, [r5, #24]
 8020ede:	69ce      	ldr	r6, [r1, #28]
 8020ee0:	3120      	adds	r1, #32
 8020ee2:	b294      	uxth	r4, r2
 8020ee4:	61ee      	str	r6, [r5, #28]
 8020ee6:	2c21      	cmp	r4, #33	; 0x21
 8020ee8:	bf2c      	ite	cs
 8020eea:	2420      	movcs	r4, #32
 8020eec:	4614      	movcc	r4, r2
 8020eee:	1b12      	subs	r2, r2, r4
 8020ef0:	809c      	strh	r4, [r3, #4]
 8020ef2:	681b      	ldr	r3, [r3, #0]
 8020ef4:	1e40      	subs	r0, r0, #1
 8020ef6:	d1e2      	bne.n	8020ebe <??MBuff_Block_Write_1>
 8020ef8:	bc70      	pop	{r4, r5, r6}
 8020efa:	4770      	bx	lr

08020efc <MBuff_Append>:
 8020efc:	e000      	b.n	8020f00 <??MBuff_Append_0>

08020efe <??MBuff_Append_1>:
 8020efe:	4610      	mov	r0, r2

08020f00 <??MBuff_Append_0>:
 8020f00:	6802      	ldr	r2, [r0, #0]
 8020f02:	2a00      	cmp	r2, #0
 8020f04:	d1fb      	bne.n	8020efe <??MBuff_Append_1>
 8020f06:	6001      	str	r1, [r0, #0]
 8020f08:	4770      	bx	lr

08020f0a <MBuff_Compact>:
 8020f0a:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8020f0e:	b088      	sub	sp, #32
 8020f10:	4681      	mov	r9, r0
 8020f12:	460d      	mov	r5, r1
 8020f14:	e003      	b.n	8020f1e <??MBuff_Compact_0>

08020f16 <??MBuff_Compact_1>:
 8020f16:	88a8      	ldrh	r0, [r5, #4]
 8020f18:	2820      	cmp	r0, #32
 8020f1a:	d103      	bne.n	8020f24 <??MBuff_Compact_2>
 8020f1c:	682d      	ldr	r5, [r5, #0]

08020f1e <??MBuff_Compact_0>:
 8020f1e:	2d00      	cmp	r5, #0
 8020f20:	d1f9      	bne.n	8020f16 <??MBuff_Compact_1>
 8020f22:	e036      	b.n	8020f92 <?Subroutine0>

08020f24 <??MBuff_Compact_2>:
 8020f24:	462e      	mov	r6, r5

08020f26 <??MBuff_Compact_3>:
 8020f26:	6836      	ldr	r6, [r6, #0]
 8020f28:	b146      	cbz	r6, 8020f3c <??MBuff_Compact_4>
 8020f2a:	88b4      	ldrh	r4, [r6, #4]
 8020f2c:	f106 0108 	add.w	r1, r6, #8
 8020f30:	4668      	mov	r0, sp
 8020f32:	4622      	mov	r2, r4
 8020f34:	f00f ffd7 	bl	8030ee6 <__aeabi_memcpy>
 8020f38:	2700      	movs	r7, #0
 8020f3a:	e007      	b.n	8020f4c <??MBuff_Compact_5>

08020f3c <??MBuff_Compact_4>:
 8020f3c:	6829      	ldr	r1, [r5, #0]
 8020f3e:	b121      	cbz	r1, 8020f4a <??MBuff_Compact_6>
 8020f40:	2000      	movs	r0, #0
 8020f42:	6028      	str	r0, [r5, #0]
 8020f44:	4648      	mov	r0, r9
 8020f46:	f7ff fe93 	bl	8020c70 <MBuff_Release>

08020f4a <??MBuff_Compact_6>:
 8020f4a:	e022      	b.n	8020f92 <?Subroutine0>

08020f4c <??MBuff_Compact_5>:
 8020f4c:	88a8      	ldrh	r0, [r5, #4]
 8020f4e:	2820      	cmp	r0, #32
 8020f50:	d102      	bne.n	8020f58 <??MBuff_Compact_7>
 8020f52:	682d      	ldr	r5, [r5, #0]
 8020f54:	2000      	movs	r0, #0
 8020f56:	80a8      	strh	r0, [r5, #4]

08020f58 <??MBuff_Compact_7>:
 8020f58:	2c00      	cmp	r4, #0
 8020f5a:	d0e4      	beq.n	8020f26 <??MBuff_Compact_3>
 8020f5c:	88a8      	ldrh	r0, [r5, #4]
 8020f5e:	46a0      	mov	r8, r4
 8020f60:	f1c0 0120 	rsb	r1, r0, #32
 8020f64:	b289      	uxth	r1, r1
 8020f66:	4588      	cmp	r8, r1
 8020f68:	bf88      	it	hi
 8020f6a:	4688      	movhi	r8, r1
 8020f6c:	b2bb      	uxth	r3, r7
 8020f6e:	4428      	add	r0, r5
 8020f70:	4642      	mov	r2, r8
 8020f72:	eb0d 0103 	add.w	r1, sp, r3
 8020f76:	3008      	adds	r0, #8
 8020f78:	f00f ffb5 	bl	8030ee6 <__aeabi_memcpy>
 8020f7c:	88a8      	ldrh	r0, [r5, #4]
 8020f7e:	eba4 0408 	sub.w	r4, r4, r8
 8020f82:	4447      	add	r7, r8
 8020f84:	b2a4      	uxth	r4, r4
 8020f86:	4480      	add	r8, r0
 8020f88:	f8a5 8004 	strh.w	r8, [r5, #4]
 8020f8c:	2c00      	cmp	r4, #0
 8020f8e:	d1dd      	bne.n	8020f4c <??MBuff_Compact_5>
 8020f90:	e7c9      	b.n	8020f26 <??MBuff_Compact_3>

08020f92 <?Subroutine0>:
 8020f92:	b009      	add	sp, #36	; 0x24
 8020f94:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}

08020f98 <RndAddr_Generate_Static_Address>:
 8020f98:	b51c      	push	{r2, r3, r4, lr}
 8020f9a:	4604      	mov	r4, r0
 8020f9c:	4669      	mov	r1, sp
 8020f9e:	2002      	movs	r0, #2
 8020fa0:	f006 fcbd 	bl	802791e <BLEPLAT_RngGet>
 8020fa4:	9901      	ldr	r1, [sp, #4]
 8020fa6:	2206      	movs	r2, #6
 8020fa8:	4620      	mov	r0, r4
 8020faa:	f441 4140 	orr.w	r1, r1, #49152	; 0xc000
 8020fae:	9101      	str	r1, [sp, #4]
 8020fb0:	4669      	mov	r1, sp
 8020fb2:	f00f ff98 	bl	8030ee6 <__aeabi_memcpy>
 8020fb6:	bd13      	pop	{r0, r1, r4, pc}

08020fb8 <RndAddr_Generate_Non_Resolvable_Address>:
 8020fb8:	b53e      	push	{r1, r2, r3, r4, r5, lr}
 8020fba:	4604      	mov	r4, r0
 8020fbc:	4d10      	ldr	r5, [pc, #64]	; (8021000 <??DataTable1>)

08020fbe <??RndAddr_Generate_Non_Resolvable_Address_0>:
 8020fbe:	4669      	mov	r1, sp
 8020fc0:	2002      	movs	r0, #2
 8020fc2:	f006 fcac 	bl	802791e <BLEPLAT_RngGet>
 8020fc6:	9901      	ldr	r1, [sp, #4]
 8020fc8:	9800      	ldr	r0, [sp, #0]
 8020fca:	f3c1 010d 	ubfx	r1, r1, #0, #14
 8020fce:	9101      	str	r1, [sp, #4]
 8020fd0:	4308      	orrs	r0, r1
 8020fd2:	d0f4      	beq.n	8020fbe <??RndAddr_Generate_Non_Resolvable_Address_0>
 8020fd4:	9800      	ldr	r0, [sp, #0]
 8020fd6:	43c9      	mvns	r1, r1
 8020fd8:	f3c1 010d 	ubfx	r1, r1, #0, #14
 8020fdc:	ea71 0100 	orns	r1, r1, r0
 8020fe0:	d0ed      	beq.n	8020fbe <??RndAddr_Generate_Non_Resolvable_Address_0>
 8020fe2:	2206      	movs	r2, #6
 8020fe4:	4629      	mov	r1, r5
 8020fe6:	4668      	mov	r0, sp
 8020fe8:	f00f ffaa 	bl	8030f40 <memcmp>
 8020fec:	2800      	cmp	r0, #0
 8020fee:	d0e6      	beq.n	8020fbe <??RndAddr_Generate_Non_Resolvable_Address_0>
 8020ff0:	2206      	movs	r2, #6
 8020ff2:	4669      	mov	r1, sp
 8020ff4:	4620      	mov	r0, r4
 8020ff6:	f00f ff76 	bl	8030ee6 <__aeabi_memcpy>
 8020ffa:	b003      	add	sp, #12
 8020ffc:	bd30      	pop	{r4, r5, pc}
	...

08021000 <??DataTable1>:
 8021000:	3710 2000                                   .7. 

08021004 <RndAddr_Calculate_Address_Hash>:
 8021004:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8021006:	b088      	sub	sp, #32
 8021008:	4604      	mov	r4, r0
 802100a:	4615      	mov	r5, r2
 802100c:	466b      	mov	r3, sp
 802100e:	2000      	movs	r0, #0
 8021010:	2200      	movs	r2, #0
 8021012:	2600      	movs	r6, #0
 8021014:	2700      	movs	r7, #0
 8021016:	e883 00c5 	stmia.w	r3, {r0, r2, r6, r7}
 802101a:	2203      	movs	r2, #3
 802101c:	4668      	mov	r0, sp
 802101e:	f00f ff62 	bl	8030ee6 <__aeabi_memcpy>
 8021022:	aa04      	add	r2, sp, #16
 8021024:	4669      	mov	r1, sp
 8021026:	4620      	mov	r0, r4
 8021028:	f006 fc7b 	bl	8027922 <BLEPLAT_AesEcbEncrypt>
 802102c:	2203      	movs	r2, #3
 802102e:	a904      	add	r1, sp, #16
 8021030:	4628      	mov	r0, r5
 8021032:	f00f ff58 	bl	8030ee6 <__aeabi_memcpy>
 8021036:	b009      	add	sp, #36	; 0x24
 8021038:	bdf0      	pop	{r4, r5, r6, r7, pc}

0802103a <RndAddr_Generate_Resolvable_Address>:
 802103a:	b538      	push	{r3, r4, r5, lr}
 802103c:	4604      	mov	r4, r0
 802103e:	460d      	mov	r5, r1
 8021040:	4669      	mov	r1, sp
 8021042:	2001      	movs	r0, #1
 8021044:	f006 fc6b 	bl	802791e <BLEPLAT_RngGet>
 8021048:	9900      	ldr	r1, [sp, #0]
 802104a:	2001      	movs	r0, #1
 802104c:	2203      	movs	r2, #3
 802104e:	f360 519f 	bfi	r1, r0, #22, #10
 8021052:	9100      	str	r1, [sp, #0]
 8021054:	4669      	mov	r1, sp
 8021056:	1ce8      	adds	r0, r5, #3
 8021058:	f00f ff45 	bl	8030ee6 <__aeabi_memcpy>
 802105c:	462a      	mov	r2, r5
 802105e:	4669      	mov	r1, sp
 8021060:	4620      	mov	r0, r4
 8021062:	f7ff ffcf 	bl	8021004 <RndAddr_Calculate_Address_Hash>
 8021066:	bd31      	pop	{r0, r4, r5, pc}

08021068 <RndAddr_Check_Resolvable_Address>:
 8021068:	b51c      	push	{r2, r3, r4, lr}
 802106a:	460c      	mov	r4, r1
 802106c:	466a      	mov	r2, sp
 802106e:	1ce1      	adds	r1, r4, #3
 8021070:	f7ff ffc8 	bl	8021004 <RndAddr_Calculate_Address_Hash>
 8021074:	2203      	movs	r2, #3
 8021076:	4621      	mov	r1, r4
 8021078:	4668      	mov	r0, sp
 802107a:	f00f ff61 	bl	8030f40 <memcmp>
 802107e:	bd16      	pop	{r1, r2, r4, pc}

08021080 <SDB_Get_Sec_Record>:
 8021080:	460b      	mov	r3, r1
 8021082:	b580      	push	{r7, lr}
 8021084:	2150      	movs	r1, #80	; 0x50
 8021086:	9100      	str	r1, [sp, #0]
 8021088:	2200      	movs	r2, #0
 802108a:	2100      	movs	r1, #0
 802108c:	f006 fc3b 	bl	8027906 <BLEPLAT_NvmGet>
 8021090:	f110 0f03 	cmn.w	r0, #3
 8021094:	d101      	bne.n	802109a <??SDB_Get_Sec_Record_0>
 8021096:	205c      	movs	r0, #92	; 0x5c
 8021098:	bd02      	pop	{r1, pc}

0802109a <??SDB_Get_Sec_Record_0>:
 802109a:	2000      	movs	r0, #0
 802109c:	bd02      	pop	{r1, pc}

0802109e <SDB_Read_Sec_Record>:
 802109e:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 80210a2:	460d      	mov	r5, r1
 80210a4:	4680      	mov	r8, r0
 80210a6:	4616      	mov	r6, r2
 80210a8:	2d01      	cmp	r5, #1
 80210aa:	bf02      	ittt	eq
 80210ac:	f898 0005 	ldrbeq.w	r0, [r8, #5]
 80210b0:	f000 00c0 	andeq.w	r0, r0, #192	; 0xc0
 80210b4:	2840      	cmpeq	r0, #64	; 0x40
 80210b6:	bf0c      	ite	eq
 80210b8:	2401      	moveq	r4, #1
 80210ba:	2400      	movne	r4, #0
 80210bc:	2700      	movs	r7, #0
 80210be:	f06f 0902 	mvn.w	r9, #2

080210c2 <??SDB_Read_Sec_Record_0>:
 80210c2:	2350      	movs	r3, #80	; 0x50
 80210c4:	9300      	str	r3, [sp, #0]
 80210c6:	4633      	mov	r3, r6
 80210c8:	2200      	movs	r2, #0
 80210ca:	2100      	movs	r1, #0
 80210cc:	4638      	mov	r0, r7
 80210ce:	f006 fc1a 	bl	8027906 <BLEPLAT_NvmGet>
 80210d2:	4548      	cmp	r0, r9
 80210d4:	d00a      	beq.n	80210ec <??SDB_Read_Sec_Record_1>
 80210d6:	2701      	movs	r7, #1
 80210d8:	b15c      	cbz	r4, 80210f2 <??SDB_Read_Sec_Record_2>
 80210da:	4641      	mov	r1, r8
 80210dc:	f106 001e 	add.w	r0, r6, #30
 80210e0:	f7ff ffc2 	bl	8021068 <RndAddr_Check_Resolvable_Address>

080210e4 <??SDB_Read_Sec_Record_3>:
 80210e4:	2800      	cmp	r0, #0
 80210e6:	d1ec      	bne.n	80210c2 <??SDB_Read_Sec_Record_0>
 80210e8:	e8bd 83f2 	ldmia.w	sp!, {r1, r4, r5, r6, r7, r8, r9, pc}

080210ec <??SDB_Read_Sec_Record_1>:
 80210ec:	205c      	movs	r0, #92	; 0x5c
 80210ee:	e8bd 83f2 	ldmia.w	sp!, {r1, r4, r5, r6, r7, r8, r9, pc}

080210f2 <??SDB_Read_Sec_Record_2>:
 80210f2:	7870      	ldrb	r0, [r6, #1]
 80210f4:	f000 0001 	and.w	r0, r0, #1
 80210f8:	42a8      	cmp	r0, r5
 80210fa:	d1e2      	bne.n	80210c2 <??SDB_Read_Sec_Record_0>
 80210fc:	2206      	movs	r2, #6
 80210fe:	4641      	mov	r1, r8
 8021100:	f106 003e 	add.w	r0, r6, #62	; 0x3e
 8021104:	f00f ff1c 	bl	8030f40 <memcmp>
 8021108:	e7ec      	b.n	80210e4 <??SDB_Read_Sec_Record_3>

0802110a <SDB_Get_Number_Of_Sec_Records>:
 802110a:	b57c      	push	{r2, r3, r4, r5, r6, lr}
 802110c:	2400      	movs	r4, #0
 802110e:	2000      	movs	r0, #0
 8021110:	f06f 0502 	mvn.w	r5, #2
 8021114:	2600      	movs	r6, #0
 8021116:	e001      	b.n	802111c <??SDB_Get_Number_Of_Sec_Records_0>

08021118 <??SDB_Get_Number_Of_Sec_Records_1>:
 8021118:	2001      	movs	r0, #1
 802111a:	1c64      	adds	r4, r4, #1

0802111c <??SDB_Get_Number_Of_Sec_Records_0>:
 802111c:	9600      	str	r6, [sp, #0]
 802111e:	2300      	movs	r3, #0
 8021120:	2200      	movs	r2, #0
 8021122:	2100      	movs	r1, #0
 8021124:	f006 fbef 	bl	8027906 <BLEPLAT_NvmGet>
 8021128:	42a8      	cmp	r0, r5
 802112a:	d1f5      	bne.n	8021118 <??SDB_Get_Number_Of_Sec_Records_1>
 802112c:	b2e0      	uxtb	r0, r4
 802112e:	bd76      	pop	{r1, r2, r4, r5, r6, pc}

08021130 <aci_gap_clear_security_db>:
 8021130:	b580      	push	{r7, lr}
 8021132:	2003      	movs	r0, #3
 8021134:	f006 fbf1 	bl	802791a <BLEPLAT_NvmDiscard>
 8021138:	2000      	movs	r0, #0
 802113a:	bd02      	pop	{r1, pc}

0802113c <aci_gap_get_bonded_devices>:
 802113c:	e92d 41f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, lr}
 8021140:	4605      	mov	r5, r0
 8021142:	b095      	sub	sp, #84	; 0x54
 8021144:	460e      	mov	r6, r1
 8021146:	2000      	movs	r0, #0
 8021148:	2700      	movs	r7, #0
 802114a:	2400      	movs	r4, #0
 802114c:	f06f 0802 	mvn.w	r8, #2
 8021150:	e012      	b.n	8021178 <??aci_gap_get_bonded_devices_0>

08021152 <??aci_gap_get_bonded_devices_1>:
 8021152:	2401      	movs	r4, #1
 8021154:	1df8      	adds	r0, r7, #7
 8021156:	28fb      	cmp	r0, #251	; 0xfb
 8021158:	d21b      	bcs.n	8021192 <??aci_gap_get_bonded_devices_2>
 802115a:	f89d 0005 	ldrb.w	r0, [sp, #5]
 802115e:	2206      	movs	r2, #6
 8021160:	f10d 0142 	add.w	r1, sp, #66	; 0x42
 8021164:	f000 0001 	and.w	r0, r0, #1
 8021168:	7030      	strb	r0, [r6, #0]
 802116a:	1c70      	adds	r0, r6, #1
 802116c:	f00f febb 	bl	8030ee6 <__aeabi_memcpy>
 8021170:	7828      	ldrb	r0, [r5, #0]
 8021172:	1dff      	adds	r7, r7, #7
 8021174:	1df6      	adds	r6, r6, #7
 8021176:	1c40      	adds	r0, r0, #1

08021178 <??aci_gap_get_bonded_devices_0>:
 8021178:	7028      	strb	r0, [r5, #0]
 802117a:	2050      	movs	r0, #80	; 0x50
 802117c:	9000      	str	r0, [sp, #0]
 802117e:	ab01      	add	r3, sp, #4
 8021180:	2200      	movs	r2, #0
 8021182:	2100      	movs	r1, #0
 8021184:	4620      	mov	r0, r4
 8021186:	f006 fbbe 	bl	8027906 <BLEPLAT_NvmGet>
 802118a:	4540      	cmp	r0, r8
 802118c:	d1e1      	bne.n	8021152 <??aci_gap_get_bonded_devices_1>
 802118e:	2000      	movs	r0, #0
 8021190:	e000      	b.n	8021194 <?Subroutine0>

08021192 <??aci_gap_get_bonded_devices_2>:
 8021192:	2064      	movs	r0, #100	; 0x64

08021194 <?Subroutine0>:
 8021194:	b016      	add	sp, #88	; 0x58
 8021196:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0802119a <aci_gap_is_device_bonded>:
 802119a:	460b      	mov	r3, r1
 802119c:	b580      	push	{r7, lr}
 802119e:	4601      	mov	r1, r0
 80211a0:	b094      	sub	sp, #80	; 0x50
 80211a2:	2902      	cmp	r1, #2
 80211a4:	bf2f      	iteee	cs
 80211a6:	2092      	movcs	r0, #146	; 0x92
 80211a8:	466a      	movcc	r2, sp
 80211aa:	4618      	movcc	r0, r3
 80211ac:	f7ff ff77 	blcc	802109e <SDB_Read_Sec_Record>
 80211b0:	b015      	add	sp, #84	; 0x54
 80211b2:	bd00      	pop	{pc}

080211b4 <aci_gap_remove_bonded_device>:
 80211b4:	4603      	mov	r3, r0
 80211b6:	4608      	mov	r0, r1
 80211b8:	b570      	push	{r4, r5, r6, lr}
 80211ba:	4619      	mov	r1, r3
 80211bc:	b098      	sub	sp, #96	; 0x60
 80211be:	2902      	cmp	r1, #2
 80211c0:	bf28      	it	cs
 80211c2:	2092      	movcs	r0, #146	; 0x92
 80211c4:	d222      	bcs.n	802120c <??aci_gap_remove_bonded_device_0>
 80211c6:	aa04      	add	r2, sp, #16
 80211c8:	f7ff ff69 	bl	802109e <SDB_Read_Sec_Record>
 80211cc:	0004      	movs	r4, r0
 80211ce:	d11c      	bne.n	802120a <??aci_gap_remove_bonded_device_1>
 80211d0:	2002      	movs	r0, #2
 80211d2:	f006 fba2 	bl	802791a <BLEPLAT_NvmDiscard>
 80211d6:	2500      	movs	r5, #0
 80211d8:	f06f 0602 	mvn.w	r6, #2

080211dc <??aci_gap_remove_bonded_device_2>:
 80211dc:	200c      	movs	r0, #12
 80211de:	9000      	str	r0, [sp, #0]
 80211e0:	ab01      	add	r3, sp, #4
 80211e2:	2200      	movs	r2, #0
 80211e4:	2101      	movs	r1, #1
 80211e6:	4628      	mov	r0, r5
 80211e8:	f006 fb8d 	bl	8027906 <BLEPLAT_NvmGet>
 80211ec:	2501      	movs	r5, #1
 80211ee:	42b0      	cmp	r0, r6
 80211f0:	d00b      	beq.n	802120a <??aci_gap_remove_bonded_device_1>
 80211f2:	2206      	movs	r2, #6
 80211f4:	f10d 014e 	add.w	r1, sp, #78	; 0x4e
 80211f8:	f10d 0005 	add.w	r0, sp, #5
 80211fc:	f00f fea0 	bl	8030f40 <memcmp>
 8021200:	2800      	cmp	r0, #0
 8021202:	d1eb      	bne.n	80211dc <??aci_gap_remove_bonded_device_2>
 8021204:	2002      	movs	r0, #2
 8021206:	f006 fb88 	bl	802791a <BLEPLAT_NvmDiscard>

0802120a <??aci_gap_remove_bonded_device_1>:
 802120a:	4620      	mov	r0, r4

0802120c <??aci_gap_remove_bonded_device_0>:
 802120c:	b018      	add	sp, #96	; 0x60
 802120e:	bd70      	pop	{r4, r5, r6, pc}

08021210 <SDB_Write_Sec_Record>:
 8021210:	b518      	push	{r3, r4, lr}
 8021212:	4604      	mov	r4, r0
 8021214:	b095      	sub	sp, #84	; 0x54
 8021216:	7861      	ldrb	r1, [r4, #1]
 8021218:	aa01      	add	r2, sp, #4
 802121a:	f104 003e 	add.w	r0, r4, #62	; 0x3e
 802121e:	f001 0101 	and.w	r1, r1, #1
 8021222:	f7ff ff3c 	bl	802109e <SDB_Read_Sec_Record>
 8021226:	2800      	cmp	r0, #0
 8021228:	d14a      	bne.n	80212c0 <??SDB_Write_Sec_Record_0>
 802122a:	2250      	movs	r2, #80	; 0x50
 802122c:	a901      	add	r1, sp, #4
 802122e:	4620      	mov	r0, r4
 8021230:	f00f fe86 	bl	8030f40 <memcmp>
 8021234:	2800      	cmp	r0, #0
 8021236:	d068      	beq.n	802130a <??SDB_Write_Sec_Record_1>
 8021238:	2002      	movs	r0, #2
 802123a:	f006 fb6e 	bl	802791a <BLEPLAT_NvmDiscard>
 802123e:	78e0      	ldrb	r0, [r4, #3]
 8021240:	f89d 1007 	ldrb.w	r1, [sp, #7]
 8021244:	4288      	cmp	r0, r1
 8021246:	d13b      	bne.n	80212c0 <??SDB_Write_Sec_Record_0>
 8021248:	7860      	ldrb	r0, [r4, #1]
 802124a:	06c1      	lsls	r1, r0, #27
 802124c:	d40d      	bmi.n	802126a <??SDB_Write_Sec_Record_2>
 802124e:	f89d 0005 	ldrb.w	r0, [sp, #5]
 8021252:	06c1      	lsls	r1, r0, #27
 8021254:	d509      	bpl.n	802126a <??SDB_Write_Sec_Record_2>
 8021256:	2202      	movs	r2, #2
 8021258:	a912      	add	r1, sp, #72	; 0x48
 802125a:	f104 0044 	add.w	r0, r4, #68	; 0x44
 802125e:	f00f fe42 	bl	8030ee6 <__aeabi_memcpy>
 8021262:	7860      	ldrb	r0, [r4, #1]
 8021264:	f040 0010 	orr.w	r0, r0, #16
 8021268:	7060      	strb	r0, [r4, #1]

0802126a <??SDB_Write_Sec_Record_2>:
 802126a:	7860      	ldrb	r0, [r4, #1]
 802126c:	0681      	lsls	r1, r0, #26
 802126e:	d415      	bmi.n	802129c <??SDB_Write_Sec_Record_3>
 8021270:	f89d 0005 	ldrb.w	r0, [sp, #5]
 8021274:	0681      	lsls	r1, r0, #26
 8021276:	d511      	bpl.n	802129c <??SDB_Write_Sec_Record_3>
 8021278:	2210      	movs	r2, #16
 802127a:	f10d 0122 	add.w	r1, sp, #34	; 0x22
 802127e:	f104 001e 	add.w	r0, r4, #30
 8021282:	f00f fe30 	bl	8030ee6 <__aeabi_memcpy>
 8021286:	2206      	movs	r2, #6
 8021288:	f10d 0142 	add.w	r1, sp, #66	; 0x42
 802128c:	f104 003e 	add.w	r0, r4, #62	; 0x3e
 8021290:	f00f fe29 	bl	8030ee6 <__aeabi_memcpy>
 8021294:	7860      	ldrb	r0, [r4, #1]
 8021296:	f040 0020 	orr.w	r0, r0, #32
 802129a:	7060      	strb	r0, [r4, #1]

0802129c <??SDB_Write_Sec_Record_3>:
 802129c:	7860      	ldrb	r0, [r4, #1]
 802129e:	0641      	lsls	r1, r0, #25
 80212a0:	d40e      	bmi.n	80212c0 <??SDB_Write_Sec_Record_0>
 80212a2:	f89d 0005 	ldrb.w	r0, [sp, #5]
 80212a6:	0641      	lsls	r1, r0, #25
 80212a8:	d50a      	bpl.n	80212c0 <??SDB_Write_Sec_Record_0>
 80212aa:	2210      	movs	r2, #16
 80212ac:	f10d 0132 	add.w	r1, sp, #50	; 0x32
 80212b0:	f104 002e 	add.w	r0, r4, #46	; 0x2e
 80212b4:	f00f fe17 	bl	8030ee6 <__aeabi_memcpy>
 80212b8:	7860      	ldrb	r0, [r4, #1]
 80212ba:	f040 0040 	orr.w	r0, r0, #64	; 0x40
 80212be:	7060      	strb	r0, [r4, #1]

080212c0 <??SDB_Write_Sec_Record_0>:
 80212c0:	7860      	ldrb	r0, [r4, #1]
 80212c2:	f010 0ff0 	tst.w	r0, #240	; 0xf0
 80212c6:	d020      	beq.n	802130a <??SDB_Write_Sec_Record_1>
 80212c8:	2000      	movs	r0, #0
 80212ca:	9000      	str	r0, [sp, #0]
 80212cc:	2300      	movs	r3, #0
 80212ce:	2250      	movs	r2, #80	; 0x50
 80212d0:	4621      	mov	r1, r4
 80212d2:	f006 fb10 	bl	80278f6 <BLEPLAT_NvmAdd>
 80212d6:	f110 0f04 	cmn.w	r0, #4
 80212da:	d109      	bne.n	80212f0 <??SDB_Write_Sec_Record_4>
 80212dc:	2000      	movs	r0, #0
 80212de:	f88d 0000 	strb.w	r0, [sp]
 80212e2:	466a      	mov	r2, sp
 80212e4:	2101      	movs	r1, #1
 80212e6:	2003      	movs	r0, #3
 80212e8:	f7fd fe91 	bl	801f00e <EVT_aci_hal_fw_error>
 80212ec:	b016      	add	sp, #88	; 0x58
 80212ee:	bd10      	pop	{r4, pc}

080212f0 <??SDB_Write_Sec_Record_4>:
 80212f0:	f110 0f01 	cmn.w	r0, #1
 80212f4:	d109      	bne.n	802130a <??SDB_Write_Sec_Record_1>
 80212f6:	2003      	movs	r0, #3
 80212f8:	f006 fb0f 	bl	802791a <BLEPLAT_NvmDiscard>
 80212fc:	2000      	movs	r0, #0
 80212fe:	9000      	str	r0, [sp, #0]
 8021300:	2300      	movs	r3, #0
 8021302:	2250      	movs	r2, #80	; 0x50
 8021304:	4621      	mov	r1, r4
 8021306:	f006 faf6 	bl	80278f6 <BLEPLAT_NvmAdd>

0802130a <??SDB_Write_Sec_Record_1>:
 802130a:	b016      	add	sp, #88	; 0x58
 802130c:	bd10      	pop	{r4, pc}

0802130e <SDB_Write_Gatt_Data>:
 802130e:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8021312:	460d      	mov	r5, r1
 8021314:	b09d      	sub	sp, #116	; 0x74
 8021316:	4604      	mov	r4, r0
 8021318:	4616      	mov	r6, r2
 802131a:	4699      	mov	r9, r3
 802131c:	f06f 0802 	mvn.w	r8, #2
 8021320:	2d01      	cmp	r5, #1
 8021322:	bf02      	ittt	eq
 8021324:	7960      	ldrbeq	r0, [r4, #5]
 8021326:	f000 00c0 	andeq.w	r0, r0, #192	; 0xc0
 802132a:	2840      	cmpeq	r0, #64	; 0x40
 802132c:	d118      	bne.n	8021360 <??SDB_Write_Gatt_Data_0>
 802132e:	2700      	movs	r7, #0

08021330 <??SDB_Write_Gatt_Data_1>:
 8021330:	f04f 0c50 	mov.w	ip, #80	; 0x50
 8021334:	f8cd c000 	str.w	ip, [sp]
 8021338:	ab09      	add	r3, sp, #36	; 0x24
 802133a:	2200      	movs	r2, #0
 802133c:	2100      	movs	r1, #0
 802133e:	4638      	mov	r0, r7
 8021340:	f006 fae1 	bl	8027906 <BLEPLAT_NvmGet>
 8021344:	4540      	cmp	r0, r8
 8021346:	d07b      	beq.n	8021440 <??SDB_Write_Gatt_Data_2>
 8021348:	4621      	mov	r1, r4
 802134a:	f10d 0042 	add.w	r0, sp, #66	; 0x42
 802134e:	2701      	movs	r7, #1
 8021350:	f7ff fe8a 	bl	8021068 <RndAddr_Check_Resolvable_Address>
 8021354:	2800      	cmp	r0, #0
 8021356:	d1eb      	bne.n	8021330 <??SDB_Write_Gatt_Data_1>
 8021358:	2206      	movs	r2, #6
 802135a:	f10d 0162 	add.w	r1, sp, #98	; 0x62
 802135e:	e001      	b.n	8021364 <??SDB_Write_Gatt_Data_3>

08021360 <??SDB_Write_Gatt_Data_0>:
 8021360:	2206      	movs	r2, #6
 8021362:	4621      	mov	r1, r4

08021364 <??SDB_Write_Gatt_Data_3>:
 8021364:	a801      	add	r0, sp, #4
 8021366:	f00f fdbe 	bl	8030ee6 <__aeabi_memcpy>
 802136a:	2700      	movs	r7, #0

0802136c <??SDB_Write_Gatt_Data_4>:
 802136c:	200c      	movs	r0, #12
 802136e:	9000      	str	r0, [sp, #0]
 8021370:	ab06      	add	r3, sp, #24
 8021372:	2200      	movs	r2, #0
 8021374:	2101      	movs	r1, #1
 8021376:	4638      	mov	r0, r7
 8021378:	f006 fac5 	bl	8027906 <BLEPLAT_NvmGet>
 802137c:	2701      	movs	r7, #1
 802137e:	4540      	cmp	r0, r8
 8021380:	d013      	beq.n	80213aa <??SDB_Write_Gatt_Data_5>
 8021382:	2206      	movs	r2, #6
 8021384:	a901      	add	r1, sp, #4
 8021386:	f10d 0019 	add.w	r0, sp, #25
 802138a:	f00f fdd9 	bl	8030f40 <memcmp>
 802138e:	2800      	cmp	r0, #0
 8021390:	d1ec      	bne.n	802136c <??SDB_Write_Gatt_Data_4>
 8021392:	9808      	ldr	r0, [sp, #32]
 8021394:	42b0      	cmp	r0, r6
 8021396:	d105      	bne.n	80213a4 <??SDB_Write_Gatt_Data_6>
 8021398:	b2b2      	uxth	r2, r6
 802139a:	4649      	mov	r1, r9
 802139c:	200c      	movs	r0, #12
 802139e:	f006 faba 	bl	8027916 <BLEPLAT_NvmCompare>
 80213a2:	b350      	cbz	r0, 80213fa <??SDB_Write_Gatt_Data_7>

080213a4 <??SDB_Write_Gatt_Data_6>:
 80213a4:	2002      	movs	r0, #2
 80213a6:	f006 fab8 	bl	802791a <BLEPLAT_NvmDiscard>

080213aa <??SDB_Write_Gatt_Data_5>:
 80213aa:	20fe      	movs	r0, #254	; 0xfe
 80213ac:	f89d 1004 	ldrb.w	r1, [sp, #4]
 80213b0:	f88d 000c 	strb.w	r0, [sp, #12]
 80213b4:	a803      	add	r0, sp, #12
 80213b6:	7041      	strb	r1, [r0, #1]
 80213b8:	a901      	add	r1, sp, #4
 80213ba:	784a      	ldrb	r2, [r1, #1]
 80213bc:	788b      	ldrb	r3, [r1, #2]
 80213be:	7082      	strb	r2, [r0, #2]
 80213c0:	78ca      	ldrb	r2, [r1, #3]
 80213c2:	70c3      	strb	r3, [r0, #3]
 80213c4:	790b      	ldrb	r3, [r1, #4]
 80213c6:	7949      	ldrb	r1, [r1, #5]
 80213c8:	7102      	strb	r2, [r0, #4]
 80213ca:	7143      	strb	r3, [r0, #5]
 80213cc:	7181      	strb	r1, [r0, #6]
 80213ce:	6086      	str	r6, [r0, #8]
 80213d0:	22ff      	movs	r2, #255	; 0xff
 80213d2:	b2b0      	uxth	r0, r6
 80213d4:	f88d 2013 	strb.w	r2, [sp, #19]
 80213d8:	9000      	str	r0, [sp, #0]
 80213da:	464b      	mov	r3, r9
 80213dc:	220c      	movs	r2, #12
 80213de:	a903      	add	r1, sp, #12
 80213e0:	2001      	movs	r0, #1
 80213e2:	f006 fa88 	bl	80278f6 <BLEPLAT_NvmAdd>
 80213e6:	f110 0f04 	cmn.w	r0, #4
 80213ea:	d108      	bne.n	80213fe <??SDB_Write_Gatt_Data_8>
 80213ec:	f88d 7000 	strb.w	r7, [sp]
 80213f0:	466a      	mov	r2, sp
 80213f2:	2101      	movs	r1, #1
 80213f4:	2003      	movs	r0, #3
 80213f6:	f7fd fe0a 	bl	801f00e <EVT_aci_hal_fw_error>

080213fa <??SDB_Write_Gatt_Data_7>:
 80213fa:	2000      	movs	r0, #0
 80213fc:	e021      	b.n	8021442 <?Subroutine1>

080213fe <??SDB_Write_Gatt_Data_8>:
 80213fe:	f110 0f01 	cmn.w	r0, #1
 8021402:	d11b      	bne.n	802143c <??SDB_Write_Gatt_Data_9>
 8021404:	aa09      	add	r2, sp, #36	; 0x24
 8021406:	4629      	mov	r1, r5
 8021408:	4620      	mov	r0, r4
 802140a:	f7ff fe48 	bl	802109e <SDB_Read_Sec_Record>
 802140e:	4604      	mov	r4, r0
 8021410:	2003      	movs	r0, #3
 8021412:	f006 fa82 	bl	802791a <BLEPLAT_NvmDiscard>
 8021416:	b93c      	cbnz	r4, 8021428 <??SDB_Write_Gatt_Data_10>
 8021418:	2000      	movs	r0, #0
 802141a:	9000      	str	r0, [sp, #0]
 802141c:	2300      	movs	r3, #0
 802141e:	2250      	movs	r2, #80	; 0x50
 8021420:	a909      	add	r1, sp, #36	; 0x24
 8021422:	f006 fa68 	bl	80278f6 <BLEPLAT_NvmAdd>
 8021426:	b958      	cbnz	r0, 8021440 <??SDB_Write_Gatt_Data_2>

08021428 <??SDB_Write_Gatt_Data_10>:
 8021428:	b2b6      	uxth	r6, r6
 802142a:	9600      	str	r6, [sp, #0]
 802142c:	464b      	mov	r3, r9
 802142e:	220c      	movs	r2, #12
 8021430:	a903      	add	r1, sp, #12
 8021432:	2001      	movs	r0, #1
 8021434:	f006 fa5f 	bl	80278f6 <BLEPLAT_NvmAdd>
 8021438:	b910      	cbnz	r0, 8021440 <??SDB_Write_Gatt_Data_2>
 802143a:	e7de      	b.n	80213fa <??SDB_Write_Gatt_Data_7>

0802143c <??SDB_Write_Gatt_Data_9>:
 802143c:	2800      	cmp	r0, #0
 802143e:	d0dc      	beq.n	80213fa <??SDB_Write_Gatt_Data_7>

08021440 <??SDB_Write_Gatt_Data_2>:
 8021440:	2097      	movs	r0, #151	; 0x97

08021442 <?Subroutine1>:
 8021442:	b01d      	add	sp, #116	; 0x74
 8021444:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}

08021448 <SDB_Read_Gatt_Data>:
 8021448:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 802144a:	b098      	sub	sp, #96	; 0x60
 802144c:	4614      	mov	r4, r2
 802144e:	461d      	mov	r5, r3
 8021450:	aa04      	add	r2, sp, #16
 8021452:	f7ff fe24 	bl	802109e <SDB_Read_Sec_Record>
 8021456:	b9e8      	cbnz	r0, 8021494 <??SDB_Read_Gatt_Data_0>
 8021458:	2600      	movs	r6, #0
 802145a:	f06f 0702 	mvn.w	r7, #2

0802145e <??SDB_Read_Gatt_Data_1>:
 802145e:	200c      	movs	r0, #12
 8021460:	9000      	str	r0, [sp, #0]
 8021462:	ab01      	add	r3, sp, #4
 8021464:	2200      	movs	r2, #0
 8021466:	2101      	movs	r1, #1
 8021468:	4630      	mov	r0, r6
 802146a:	f006 fa4c 	bl	8027906 <BLEPLAT_NvmGet>
 802146e:	2601      	movs	r6, #1
 8021470:	42b8      	cmp	r0, r7
 8021472:	d00f      	beq.n	8021494 <??SDB_Read_Gatt_Data_0>
 8021474:	2206      	movs	r2, #6
 8021476:	f10d 014e 	add.w	r1, sp, #78	; 0x4e
 802147a:	f10d 0005 	add.w	r0, sp, #5
 802147e:	f00f fd5f 	bl	8030f40 <memcmp>
 8021482:	2800      	cmp	r0, #0
 8021484:	d1eb      	bne.n	802145e <??SDB_Read_Gatt_Data_1>
 8021486:	9803      	ldr	r0, [sp, #12]
 8021488:	6821      	ldr	r1, [r4, #0]
 802148a:	4281      	cmp	r1, r0
 802148c:	d205      	bcs.n	802149a <??SDB_Read_Gatt_Data_2>
 802148e:	2098      	movs	r0, #152	; 0x98
 8021490:	b019      	add	sp, #100	; 0x64
 8021492:	bdf0      	pop	{r4, r5, r6, r7, pc}

08021494 <??SDB_Read_Gatt_Data_0>:
 8021494:	205c      	movs	r0, #92	; 0x5c
 8021496:	b019      	add	sp, #100	; 0x64
 8021498:	bdf0      	pop	{r4, r5, r6, r7, pc}

0802149a <??SDB_Read_Gatt_Data_2>:
 802149a:	6020      	str	r0, [r4, #0]
 802149c:	b280      	uxth	r0, r0
 802149e:	9000      	str	r0, [sp, #0]
 80214a0:	462b      	mov	r3, r5
 80214a2:	220c      	movs	r2, #12
 80214a4:	2101      	movs	r1, #1
 80214a6:	2002      	movs	r0, #2
 80214a8:	f006 fa2d 	bl	8027906 <BLEPLAT_NvmGet>
 80214ac:	2000      	movs	r0, #0
 80214ae:	b019      	add	sp, #100	; 0x64
 80214b0:	bdf0      	pop	{r4, r5, r6, r7, pc}
	...

080214b4 <SLP_Init>:
 80214b4:	480d      	ldr	r0, [pc, #52]	; (80214ec <??DataTable1>)
 80214b6:	2100      	movs	r1, #0
 80214b8:	7041      	strb	r1, [r0, #1]
 80214ba:	f3ef 8110 	mrs	r1, PRIMASK
 80214be:	b672      	cpsid	i
 80214c0:	7802      	ldrb	r2, [r0, #0]
 80214c2:	f042 0280 	orr.w	r2, r2, #128	; 0x80
 80214c6:	7002      	strb	r2, [r0, #0]
 80214c8:	f381 8810 	msr	PRIMASK, r1
 80214cc:	2100      	movs	r1, #0
 80214ce:	f041 0186 	orr.w	r1, r1, #134	; 0x86
 80214d2:	7041      	strb	r1, [r0, #1]
 80214d4:	4770      	bx	lr

080214d6 <SLP_SleepCheck>:
 80214d6:	4805      	ldr	r0, [pc, #20]	; (80214ec <??DataTable1>)
 80214d8:	7841      	ldrb	r1, [r0, #1]
 80214da:	7800      	ldrb	r0, [r0, #0]
 80214dc:	4008      	ands	r0, r1
 80214de:	4288      	cmp	r0, r1
 80214e0:	d101      	bne.n	80214e6 <??SLP_SleepCheck_0>
 80214e2:	2001      	movs	r0, #1
 80214e4:	4770      	bx	lr

080214e6 <??SLP_SleepCheck_0>:
 80214e6:	2000      	movs	r0, #0
 80214e8:	4770      	bx	lr
	...

080214ec <??DataTable1>:
 80214ec:	3749 2000                                   I7. 

080214f0 <SMA_Diversify>:
 80214f0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80214f2:	b084      	sub	sp, #16
 80214f4:	2500      	movs	r5, #0
 80214f6:	466c      	mov	r4, sp
 80214f8:	2600      	movs	r6, #0
 80214fa:	2700      	movs	r7, #0
 80214fc:	46ac      	mov	ip, r5
 80214fe:	e884 10e0 	stmia.w	r4, {r5, r6, r7, ip}
 8021502:	780d      	ldrb	r5, [r1, #0]
 8021504:	f88d 5000 	strb.w	r5, [sp]
 8021508:	784c      	ldrb	r4, [r1, #1]
 802150a:	4669      	mov	r1, sp
 802150c:	f88d 4001 	strb.w	r4, [sp, #1]
 8021510:	7815      	ldrb	r5, [r2, #0]
 8021512:	f88d 5002 	strb.w	r5, [sp, #2]
 8021516:	7854      	ldrb	r4, [r2, #1]
 8021518:	461a      	mov	r2, r3
 802151a:	f88d 4003 	strb.w	r4, [sp, #3]
 802151e:	f006 fa00 	bl	8027922 <BLEPLAT_AesEcbEncrypt>
 8021522:	b005      	add	sp, #20
 8021524:	bdf0      	pop	{r4, r5, r6, r7, pc}

08021526 <SMA_generate_EDIV_recovery_DIV>:
 8021526:	b5f0      	push	{r4, r5, r6, r7, lr}
 8021528:	b08d      	sub	sp, #52	; 0x34
 802152a:	4605      	mov	r5, r0
 802152c:	460e      	mov	r6, r1
 802152e:	f10d 0002 	add.w	r0, sp, #2
 8021532:	2100      	movs	r1, #0
 8021534:	4614      	mov	r4, r2
 8021536:	8001      	strh	r1, [r0, #0]
 8021538:	a801      	add	r0, sp, #4
 802153a:	2200      	movs	r2, #0
 802153c:	2300      	movs	r3, #0
 802153e:	2700      	movs	r7, #0
 8021540:	e880 008e 	stmia.w	r0, {r1, r2, r3, r7}
 8021544:	2103      	movs	r1, #3
 8021546:	f88d 1004 	strb.w	r1, [sp, #4]
 802154a:	f89d 1002 	ldrb.w	r1, [sp, #2]
 802154e:	f89d 3003 	ldrb.w	r3, [sp, #3]
 8021552:	7042      	strb	r2, [r0, #1]
 8021554:	7081      	strb	r1, [r0, #2]
 8021556:	70c3      	strb	r3, [r0, #3]
 8021558:	aa09      	add	r2, sp, #36	; 0x24
 802155a:	a901      	add	r1, sp, #4
 802155c:	4872      	ldr	r0, [pc, #456]	; (8021728 <??DataTable5>)
 802155e:	f006 f9e0 	bl	8027922 <BLEPLAT_AesEcbEncrypt>
 8021562:	a801      	add	r0, sp, #4
 8021564:	2100      	movs	r1, #0
 8021566:	2200      	movs	r2, #0
 8021568:	2300      	movs	r3, #0
 802156a:	e880 008e 	stmia.w	r0, {r1, r2, r3, r7}
 802156e:	6830      	ldr	r0, [r6, #0]
 8021570:	a901      	add	r1, sp, #4
 8021572:	aa05      	add	r2, sp, #20
 8021574:	6008      	str	r0, [r1, #0]
 8021576:	6870      	ldr	r0, [r6, #4]
 8021578:	6048      	str	r0, [r1, #4]
 802157a:	a809      	add	r0, sp, #36	; 0x24
 802157c:	f006 f9d1 	bl	8027922 <BLEPLAT_AesEcbEncrypt>
 8021580:	a805      	add	r0, sp, #20
 8021582:	7802      	ldrb	r2, [r0, #0]
 8021584:	f88d 2000 	strb.w	r2, [sp]
 8021588:	7842      	ldrb	r2, [r0, #1]
 802158a:	f88d 2001 	strb.w	r2, [sp, #1]
 802158e:	f89d 2000 	ldrb.w	r2, [sp]
 8021592:	7828      	ldrb	r0, [r5, #0]
 8021594:	4042      	eors	r2, r0
 8021596:	7022      	strb	r2, [r4, #0]
 8021598:	f89d 1001 	ldrb.w	r1, [sp, #1]
 802159c:	7868      	ldrb	r0, [r5, #1]
 802159e:	4041      	eors	r1, r0
 80215a0:	7061      	strb	r1, [r4, #1]
 80215a2:	b00d      	add	sp, #52	; 0x34
 80215a4:	bdf0      	pop	{r4, r5, r6, r7, pc}

080215a6 <SMA_LP_s1_Generate_STK>:
 80215a6:	b538      	push	{r3, r4, r5, lr}
 80215a8:	b084      	sub	sp, #16
 80215aa:	680d      	ldr	r5, [r1, #0]
 80215ac:	ac02      	add	r4, sp, #8
 80215ae:	6025      	str	r5, [r4, #0]
 80215b0:	684d      	ldr	r5, [r1, #4]
 80215b2:	6065      	str	r5, [r4, #4]
 80215b4:	6811      	ldr	r1, [r2, #0]
 80215b6:	9100      	str	r1, [sp, #0]
 80215b8:	6851      	ldr	r1, [r2, #4]
 80215ba:	461a      	mov	r2, r3
 80215bc:	9101      	str	r1, [sp, #4]
 80215be:	4669      	mov	r1, sp
 80215c0:	e02e      	b.n	8021620 <?Subroutine0>

080215c2 <SMA_Generate_CSRK>:
 80215c2:	b570      	push	{r4, r5, r6, lr}
 80215c4:	b084      	sub	sp, #16
 80215c6:	460a      	mov	r2, r1
 80215c8:	4669      	mov	r1, sp
 80215ca:	2300      	movs	r3, #0
 80215cc:	2400      	movs	r4, #0
 80215ce:	2500      	movs	r5, #0
 80215d0:	2600      	movs	r6, #0
 80215d2:	e881 0078 	stmia.w	r1, {r3, r4, r5, r6}
 80215d6:	7803      	ldrb	r3, [r0, #0]
 80215d8:	2101      	movs	r1, #1
 80215da:	f88d 3000 	strb.w	r3, [sp]
 80215de:	7840      	ldrb	r0, [r0, #1]
 80215e0:	f88d 1002 	strb.w	r1, [sp, #2]
 80215e4:	f88d 4003 	strb.w	r4, [sp, #3]
 80215e8:	f88d 0001 	strb.w	r0, [sp, #1]
 80215ec:	4669      	mov	r1, sp
 80215ee:	484f      	ldr	r0, [pc, #316]	; (802172c <??DataTable5_1>)
 80215f0:	f006 f997 	bl	8027922 <BLEPLAT_AesEcbEncrypt>
 80215f4:	b004      	add	sp, #16
 80215f6:	bd70      	pop	{r4, r5, r6, pc}

080215f8 <SMA_Generate_IRK>:
 80215f8:	b530      	push	{r4, r5, lr}
 80215fa:	4602      	mov	r2, r0
 80215fc:	b085      	sub	sp, #20
 80215fe:	2100      	movs	r1, #0
 8021600:	a801      	add	r0, sp, #4
 8021602:	2300      	movs	r3, #0
 8021604:	2400      	movs	r4, #0
 8021606:	2500      	movs	r5, #0
 8021608:	f8ad 1000 	strh.w	r1, [sp]
 802160c:	e880 003a 	stmia.w	r0, {r1, r3, r4, r5}
 8021610:	2101      	movs	r1, #1
 8021612:	f88d 1004 	strb.w	r1, [sp, #4]
 8021616:	2100      	movs	r1, #0
 8021618:	7043      	strb	r3, [r0, #1]
 802161a:	8041      	strh	r1, [r0, #2]
 802161c:	a901      	add	r1, sp, #4
 802161e:	4842      	ldr	r0, [pc, #264]	; (8021728 <??DataTable5>)

08021620 <?Subroutine0>:
 8021620:	f006 f97f 	bl	8027922 <BLEPLAT_AesEcbEncrypt>
 8021624:	b005      	add	sp, #20
 8021626:	bd30      	pop	{r4, r5, pc}

08021628 <SMA_SC_Gen_f4_Confirm>:
 8021628:	b5f0      	push	{r4, r5, r6, r7, lr}
 802162a:	460c      	mov	r4, r1
 802162c:	b099      	sub	sp, #100	; 0x64
 802162e:	4615      	mov	r5, r2
 8021630:	4601      	mov	r1, r0
 8021632:	461e      	mov	r6, r3
 8021634:	9f1e      	ldr	r7, [sp, #120]	; 0x78
 8021636:	2220      	movs	r2, #32
 8021638:	a808      	add	r0, sp, #32
 802163a:	f003 fa18 	bl	8024a6e <Rev_Memcpy>
 802163e:	2220      	movs	r2, #32
 8021640:	4621      	mov	r1, r4
 8021642:	a810      	add	r0, sp, #64	; 0x40
 8021644:	f003 fa13 	bl	8024a6e <Rev_Memcpy>
 8021648:	f88d 6060 	strb.w	r6, [sp, #96]	; 0x60
 802164c:	2210      	movs	r2, #16
 802164e:	4629      	mov	r1, r5
 8021650:	a804      	add	r0, sp, #16
 8021652:	f003 fa0c 	bl	8024a6e <Rev_Memcpy>
 8021656:	a804      	add	r0, sp, #16
 8021658:	f006 f966 	bl	8027928 <BLEPLAT_AesCmacSetKey>
 802165c:	466a      	mov	r2, sp
 802165e:	2141      	movs	r1, #65	; 0x41
 8021660:	a808      	add	r0, sp, #32
 8021662:	f006 f963 	bl	802792c <BLEPLAT_AesCmacCompute>
 8021666:	2210      	movs	r2, #16
 8021668:	4669      	mov	r1, sp
 802166a:	4638      	mov	r0, r7
 802166c:	f003 f9ff 	bl	8024a6e <Rev_Memcpy>
 8021670:	b019      	add	sp, #100	; 0x64
 8021672:	bdf0      	pop	{r4, r5, r6, r7, pc}

08021674 <SMA_SC_Gen_f5_Keys>:
 8021674:	e92d 4ff1 	stmdb	sp!, {r0, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8021678:	b0a2      	sub	sp, #136	; 0x88
 802167a:	468a      	mov	sl, r1
 802167c:	4693      	mov	fp, r2
 802167e:	4698      	mov	r8, r3
 8021680:	f8dd 90b0 	ldr.w	r9, [sp, #176]	; 0xb0
 8021684:	9c2d      	ldr	r4, [sp, #180]	; 0xb4
 8021686:	9e2e      	ldr	r6, [sp, #184]	; 0xb8
 8021688:	9f2f      	ldr	r7, [sp, #188]	; 0xbc
 802168a:	9d30      	ldr	r5, [sp, #192]	; 0xc0
 802168c:	a80c      	add	r0, sp, #48	; 0x30
 802168e:	4928      	ldr	r1, [pc, #160]	; (8021730 <??DataTable5_2>)
 8021690:	2238      	movs	r2, #56	; 0x38
 8021692:	f00f fc28 	bl	8030ee6 <__aeabi_memcpy>
 8021696:	9922      	ldr	r1, [sp, #136]	; 0x88
 8021698:	2220      	movs	r2, #32
 802169a:	a81a      	add	r0, sp, #104	; 0x68
 802169c:	f003 f9e7 	bl	8024a6e <Rev_Memcpy>
 80216a0:	a0e2      	add	r0, pc, #904	; (adr r0, 8021a2c <SMA_SC_Gen_f5_Keys::salt___BE>)
 80216a2:	f006 f941 	bl	8027928 <BLEPLAT_AesCmacSetKey>
 80216a6:	466a      	mov	r2, sp
 80216a8:	2120      	movs	r1, #32
 80216aa:	a81a      	add	r0, sp, #104	; 0x68
 80216ac:	f006 f93e 	bl	802792c <BLEPLAT_AesCmacCompute>
 80216b0:	2210      	movs	r2, #16
 80216b2:	4651      	mov	r1, sl
 80216b4:	f10d 0035 	add.w	r0, sp, #53	; 0x35
 80216b8:	f003 f9d9 	bl	8024a6e <Rev_Memcpy>
 80216bc:	2210      	movs	r2, #16
 80216be:	4659      	mov	r1, fp
 80216c0:	f10d 0045 	add.w	r0, sp, #69	; 0x45
 80216c4:	f003 f9d3 	bl	8024a6e <Rev_Memcpy>
 80216c8:	f88d 8055 	strb.w	r8, [sp, #85]	; 0x55
 80216cc:	2206      	movs	r2, #6
 80216ce:	4649      	mov	r1, r9
 80216d0:	f10d 0056 	add.w	r0, sp, #86	; 0x56
 80216d4:	f003 f9cb 	bl	8024a6e <Rev_Memcpy>
 80216d8:	f88d 405c 	strb.w	r4, [sp, #92]	; 0x5c
 80216dc:	2206      	movs	r2, #6
 80216de:	4631      	mov	r1, r6
 80216e0:	f10d 005d 	add.w	r0, sp, #93	; 0x5d
 80216e4:	f003 f9c3 	bl	8024a6e <Rev_Memcpy>
 80216e8:	4668      	mov	r0, sp
 80216ea:	f006 f91d 	bl	8027928 <BLEPLAT_AesCmacSetKey>
 80216ee:	aa08      	add	r2, sp, #32
 80216f0:	2135      	movs	r1, #53	; 0x35
 80216f2:	a80c      	add	r0, sp, #48	; 0x30
 80216f4:	f006 f91a 	bl	802792c <BLEPLAT_AesCmacCompute>
 80216f8:	2210      	movs	r2, #16
 80216fa:	a908      	add	r1, sp, #32
 80216fc:	4638      	mov	r0, r7
 80216fe:	f003 f9b6 	bl	8024a6e <Rev_Memcpy>
 8021702:	2001      	movs	r0, #1
 8021704:	f88d 0030 	strb.w	r0, [sp, #48]	; 0x30
 8021708:	4668      	mov	r0, sp
 802170a:	f006 f90d 	bl	8027928 <BLEPLAT_AesCmacSetKey>
 802170e:	aa04      	add	r2, sp, #16
 8021710:	2135      	movs	r1, #53	; 0x35
 8021712:	a80c      	add	r0, sp, #48	; 0x30
 8021714:	f006 f90a 	bl	802792c <BLEPLAT_AesCmacCompute>
 8021718:	2210      	movs	r2, #16
 802171a:	a904      	add	r1, sp, #16
 802171c:	4628      	mov	r0, r5
 802171e:	f003 f9a6 	bl	8024a6e <Rev_Memcpy>
 8021722:	b023      	add	sp, #140	; 0x8c
 8021724:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08021728 <??DataTable5>:
 8021728:	3728 2000                                   (7. 

0802172c <??DataTable5_1>:
 802172c:	3718 2000                                   .7. 

08021730 <??DataTable5_2>:
 8021730:	230c 0803                                   .#..

08021734 <SMA_SC_Gen_f6_Check_Val>:
 8021734:	e92d 4ff1 	stmdb	sp!, {r0, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8021738:	b09a      	sub	sp, #104	; 0x68
 802173a:	4690      	mov	r8, r2
 802173c:	4699      	mov	r9, r3
 802173e:	9e24      	ldr	r6, [sp, #144]	; 0x90
 8021740:	9c25      	ldr	r4, [sp, #148]	; 0x94
 8021742:	9f26      	ldr	r7, [sp, #152]	; 0x98
 8021744:	9d27      	ldr	r5, [sp, #156]	; 0x9c
 8021746:	f8dd a0a0 	ldr.w	sl, [sp, #160]	; 0xa0
 802174a:	f8dd b0a4 	ldr.w	fp, [sp, #164]	; 0xa4
 802174e:	2210      	movs	r2, #16
 8021750:	a808      	add	r0, sp, #32
 8021752:	f003 f98c 	bl	8024a6e <Rev_Memcpy>
 8021756:	2210      	movs	r2, #16
 8021758:	4641      	mov	r1, r8
 802175a:	a80c      	add	r0, sp, #48	; 0x30
 802175c:	f003 f987 	bl	8024a6e <Rev_Memcpy>
 8021760:	2210      	movs	r2, #16
 8021762:	4649      	mov	r1, r9
 8021764:	a810      	add	r0, sp, #64	; 0x40
 8021766:	f003 f982 	bl	8024a6e <Rev_Memcpy>
 802176a:	2203      	movs	r2, #3
 802176c:	4631      	mov	r1, r6
 802176e:	a814      	add	r0, sp, #80	; 0x50
 8021770:	f003 f97d 	bl	8024a6e <Rev_Memcpy>
 8021774:	f88d 4053 	strb.w	r4, [sp, #83]	; 0x53
 8021778:	2206      	movs	r2, #6
 802177a:	4639      	mov	r1, r7
 802177c:	a815      	add	r0, sp, #84	; 0x54
 802177e:	f003 f976 	bl	8024a6e <Rev_Memcpy>
 8021782:	f88d 505a 	strb.w	r5, [sp, #90]	; 0x5a
 8021786:	2206      	movs	r2, #6
 8021788:	4651      	mov	r1, sl
 802178a:	f10d 005b 	add.w	r0, sp, #91	; 0x5b
 802178e:	f003 f96e 	bl	8024a6e <Rev_Memcpy>
 8021792:	991a      	ldr	r1, [sp, #104]	; 0x68
 8021794:	2210      	movs	r2, #16
 8021796:	4668      	mov	r0, sp
 8021798:	f003 f969 	bl	8024a6e <Rev_Memcpy>
 802179c:	4668      	mov	r0, sp
 802179e:	f006 f8c3 	bl	8027928 <BLEPLAT_AesCmacSetKey>
 80217a2:	aa04      	add	r2, sp, #16
 80217a4:	2141      	movs	r1, #65	; 0x41
 80217a6:	a808      	add	r0, sp, #32
 80217a8:	f006 f8c0 	bl	802792c <BLEPLAT_AesCmacCompute>
 80217ac:	2210      	movs	r2, #16
 80217ae:	a904      	add	r1, sp, #16
 80217b0:	4658      	mov	r0, fp
 80217b2:	f003 f95c 	bl	8024a6e <Rev_Memcpy>
 80217b6:	b01b      	add	sp, #108	; 0x6c
 80217b8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

080217bc <SMA_SC_Gen_g2_NumComp_Val>:
 80217bc:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80217be:	460c      	mov	r4, r1
 80217c0:	b09c      	sub	sp, #112	; 0x70
 80217c2:	4615      	mov	r5, r2
 80217c4:	4601      	mov	r1, r0
 80217c6:	461e      	mov	r6, r3
 80217c8:	9f22      	ldr	r7, [sp, #136]	; 0x88
 80217ca:	2220      	movs	r2, #32
 80217cc:	a808      	add	r0, sp, #32
 80217ce:	f003 f94e 	bl	8024a6e <Rev_Memcpy>
 80217d2:	2220      	movs	r2, #32
 80217d4:	4621      	mov	r1, r4
 80217d6:	a810      	add	r0, sp, #64	; 0x40
 80217d8:	f003 f949 	bl	8024a6e <Rev_Memcpy>
 80217dc:	2210      	movs	r2, #16
 80217de:	4631      	mov	r1, r6
 80217e0:	a818      	add	r0, sp, #96	; 0x60
 80217e2:	f003 f944 	bl	8024a6e <Rev_Memcpy>
 80217e6:	2210      	movs	r2, #16
 80217e8:	4629      	mov	r1, r5
 80217ea:	a804      	add	r0, sp, #16
 80217ec:	f003 f93f 	bl	8024a6e <Rev_Memcpy>
 80217f0:	a804      	add	r0, sp, #16
 80217f2:	f006 f899 	bl	8027928 <BLEPLAT_AesCmacSetKey>
 80217f6:	466a      	mov	r2, sp
 80217f8:	2150      	movs	r1, #80	; 0x50
 80217fa:	a808      	add	r0, sp, #32
 80217fc:	f006 f896 	bl	802792c <BLEPLAT_AesCmacCompute>
 8021800:	2204      	movs	r2, #4
 8021802:	a903      	add	r1, sp, #12
 8021804:	4638      	mov	r0, r7
 8021806:	f003 f932 	bl	8024a6e <Rev_Memcpy>
 802180a:	b01d      	add	sp, #116	; 0x74
 802180c:	bdf0      	pop	{r4, r5, r6, r7, pc}

0802180e <SMA_left_shift>:
 802180e:	b430      	push	{r4, r5}
 8021810:	7802      	ldrb	r2, [r0, #0]
 8021812:	0052      	lsls	r2, r2, #1
 8021814:	f801 2b01 	strb.w	r2, [r1], #1
 8021818:	1c42      	adds	r2, r0, #1
 802181a:	200f      	movs	r0, #15

0802181c <??SMA_left_shift_0>:
 802181c:	7813      	ldrb	r3, [r2, #0]
 802181e:	005b      	lsls	r3, r3, #1
 8021820:	700b      	strb	r3, [r1, #0]
 8021822:	f812 4c01 	ldrb.w	r4, [r2, #-1]
 8021826:	0625      	lsls	r5, r4, #24
 8021828:	bf48      	it	mi
 802182a:	f043 0301 	orrmi.w	r3, r3, #1
 802182e:	1c52      	adds	r2, r2, #1
 8021830:	f801 3b01 	strb.w	r3, [r1], #1
 8021834:	1e40      	subs	r0, r0, #1
 8021836:	d1f1      	bne.n	802181c <??SMA_left_shift_0>
 8021838:	bc30      	pop	{r4, r5}
 802183a:	4770      	bx	lr

0802183c <SMA_CMAC_generate_tag>:
 802183c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8021840:	b098      	sub	sp, #96	; 0x60
 8021842:	4680      	mov	r8, r0
 8021844:	460e      	mov	r6, r1
 8021846:	4615      	mov	r5, r2
 8021848:	461f      	mov	r7, r3
 802184a:	ab10      	add	r3, sp, #64	; 0x40
 802184c:	2000      	movs	r0, #0
 802184e:	2100      	movs	r1, #0
 8021850:	2200      	movs	r2, #0
 8021852:	2400      	movs	r4, #0
 8021854:	e883 0017 	stmia.w	r3, {r0, r1, r2, r4}
 8021858:	aa14      	add	r2, sp, #80	; 0x50
 802185a:	a910      	add	r1, sp, #64	; 0x40
 802185c:	4640      	mov	r0, r8
 802185e:	f006 f860 	bl	8027922 <BLEPLAT_AesEcbEncrypt>
 8021862:	f89d 005f 	ldrb.w	r0, [sp, #95]	; 0x5f
 8021866:	0601      	lsls	r1, r0, #24
 8021868:	4669      	mov	r1, sp
 802186a:	a814      	add	r0, sp, #80	; 0x50
 802186c:	d51e      	bpl.n	80218ac <??SMA_CMAC_generate_tag_0>
 802186e:	f7ff ffce 	bl	802180e <SMA_left_shift>
 8021872:	2087      	movs	r0, #135	; 0x87
 8021874:	f88d 0040 	strb.w	r0, [sp, #64]	; 0x40
 8021878:	4669      	mov	r1, sp
 802187a:	aa10      	add	r2, sp, #64	; 0x40
 802187c:	2005      	movs	r0, #5

0802187e <??SMA_CMAC_generate_tag_1>:
 802187e:	f812 3b01 	ldrb.w	r3, [r2], #1
 8021882:	780c      	ldrb	r4, [r1, #0]
 8021884:	4063      	eors	r3, r4
 8021886:	f801 3b01 	strb.w	r3, [r1], #1
 802188a:	f812 3b01 	ldrb.w	r3, [r2], #1
 802188e:	f891 c000 	ldrb.w	ip, [r1]
 8021892:	ea83 030c 	eor.w	r3, r3, ip
 8021896:	f801 3b01 	strb.w	r3, [r1], #1
 802189a:	f812 3b01 	ldrb.w	r3, [r2], #1
 802189e:	780c      	ldrb	r4, [r1, #0]
 80218a0:	4063      	eors	r3, r4
 80218a2:	f801 3b01 	strb.w	r3, [r1], #1
 80218a6:	1e40      	subs	r0, r0, #1
 80218a8:	d1e9      	bne.n	802187e <??SMA_CMAC_generate_tag_1>
 80218aa:	e001      	b.n	80218b0 <??SMA_CMAC_generate_tag_2>

080218ac <??SMA_CMAC_generate_tag_0>:
 80218ac:	f7ff ffaf 	bl	802180e <SMA_left_shift>

080218b0 <??SMA_CMAC_generate_tag_2>:
 80218b0:	f89d 000f 	ldrb.w	r0, [sp, #15]
 80218b4:	0601      	lsls	r1, r0, #24
 80218b6:	a90c      	add	r1, sp, #48	; 0x30
 80218b8:	4668      	mov	r0, sp
 80218ba:	d51e      	bpl.n	80218fa <??SMA_CMAC_generate_tag_3>
 80218bc:	f7ff ffa7 	bl	802180e <SMA_left_shift>
 80218c0:	2087      	movs	r0, #135	; 0x87
 80218c2:	f88d 0040 	strb.w	r0, [sp, #64]	; 0x40
 80218c6:	a90c      	add	r1, sp, #48	; 0x30
 80218c8:	aa10      	add	r2, sp, #64	; 0x40
 80218ca:	2005      	movs	r0, #5

080218cc <??SMA_CMAC_generate_tag_4>:
 80218cc:	f812 3b01 	ldrb.w	r3, [r2], #1
 80218d0:	780c      	ldrb	r4, [r1, #0]
 80218d2:	4063      	eors	r3, r4
 80218d4:	f801 3b01 	strb.w	r3, [r1], #1
 80218d8:	f812 3b01 	ldrb.w	r3, [r2], #1
 80218dc:	f891 c000 	ldrb.w	ip, [r1]
 80218e0:	ea83 030c 	eor.w	r3, r3, ip
 80218e4:	f801 3b01 	strb.w	r3, [r1], #1
 80218e8:	f812 3b01 	ldrb.w	r3, [r2], #1
 80218ec:	780c      	ldrb	r4, [r1, #0]
 80218ee:	4063      	eors	r3, r4
 80218f0:	f801 3b01 	strb.w	r3, [r1], #1
 80218f4:	1e40      	subs	r0, r0, #1
 80218f6:	d1e9      	bne.n	80218cc <??SMA_CMAC_generate_tag_4>
 80218f8:	e001      	b.n	80218fe <??SMA_CMAC_generate_tag_5>

080218fa <??SMA_CMAC_generate_tag_3>:
 80218fa:	f7ff ff88 	bl	802180e <SMA_left_shift>

080218fe <??SMA_CMAC_generate_tag_5>:
 80218fe:	a808      	add	r0, sp, #32
 8021900:	2100      	movs	r1, #0
 8021902:	2200      	movs	r2, #0
 8021904:	2300      	movs	r3, #0
 8021906:	2400      	movs	r4, #0
 8021908:	e880 001e 	stmia.w	r0, {r1, r2, r3, r4}
 802190c:	e037      	b.n	802197e <??SMA_CMAC_generate_tag_6>

0802190e <??SMA_CMAC_generate_tag_7>:
 802190e:	1d21      	adds	r1, r4, #4
 8021910:	ab04      	add	r3, sp, #16
 8021912:	2210      	movs	r2, #16
 8021914:	b289      	uxth	r1, r1
 8021916:	4630      	mov	r0, r6
 8021918:	f003 fa65 	bl	8024de6 <ACL_PM_Get_Data>
 802191c:	a908      	add	r1, sp, #32
 802191e:	aa04      	add	r2, sp, #16
 8021920:	2004      	movs	r0, #4

08021922 <??SMA_CMAC_generate_tag_8>:
 8021922:	f812 3b01 	ldrb.w	r3, [r2], #1
 8021926:	f891 c000 	ldrb.w	ip, [r1]
 802192a:	1e40      	subs	r0, r0, #1
 802192c:	ea83 030c 	eor.w	r3, r3, ip
 8021930:	f801 3b01 	strb.w	r3, [r1], #1
 8021934:	f812 cb01 	ldrb.w	ip, [r2], #1
 8021938:	780b      	ldrb	r3, [r1, #0]
 802193a:	ea8c 0c03 	eor.w	ip, ip, r3
 802193e:	f801 cb01 	strb.w	ip, [r1], #1
 8021942:	f812 3b01 	ldrb.w	r3, [r2], #1
 8021946:	f891 c000 	ldrb.w	ip, [r1]
 802194a:	ea83 030c 	eor.w	r3, r3, ip
 802194e:	f801 3b01 	strb.w	r3, [r1], #1
 8021952:	f812 cb01 	ldrb.w	ip, [r2], #1
 8021956:	780b      	ldrb	r3, [r1, #0]
 8021958:	ea8c 0c03 	eor.w	ip, ip, r3
 802195c:	f801 cb01 	strb.w	ip, [r1], #1
 8021960:	d1df      	bne.n	8021922 <??SMA_CMAC_generate_tag_8>
 8021962:	aa04      	add	r2, sp, #16
 8021964:	a908      	add	r1, sp, #32
 8021966:	4640      	mov	r0, r8
 8021968:	f005 ffdb 	bl	8027922 <BLEPLAT_AesEcbEncrypt>
 802196c:	a804      	add	r0, sp, #16
 802196e:	e890 500c 	ldmia.w	r0, {r2, r3, ip, lr}
 8021972:	a908      	add	r1, sp, #32
 8021974:	3d10      	subs	r5, #16
 8021976:	e881 500c 	stmia.w	r1, {r2, r3, ip, lr}
 802197a:	3410      	adds	r4, #16
 802197c:	b2ed      	uxtb	r5, r5

0802197e <??SMA_CMAC_generate_tag_6>:
 802197e:	2d10      	cmp	r5, #16
 8021980:	d8c5      	bhi.n	802190e <??SMA_CMAC_generate_tag_7>
 8021982:	4630      	mov	r0, r6
 8021984:	462a      	mov	r2, r5
 8021986:	4621      	mov	r1, r4
 8021988:	d106      	bne.n	8021998 <??SMA_CMAC_generate_tag_9>
 802198a:	1d09      	adds	r1, r1, #4
 802198c:	ab04      	add	r3, sp, #16
 802198e:	b289      	uxth	r1, r1
 8021990:	466c      	mov	r4, sp
 8021992:	f003 fa28 	bl	8024de6 <ACL_PM_Get_Data>
 8021996:	e013      	b.n	80219c0 <??SMA_CMAC_generate_tag_10>

08021998 <??SMA_CMAC_generate_tag_9>:
 8021998:	2400      	movs	r4, #0
 802199a:	ab04      	add	r3, sp, #16
 802199c:	2500      	movs	r5, #0
 802199e:	2600      	movs	r6, #0
 80219a0:	46a4      	mov	ip, r4
 80219a2:	e883 1070 	stmia.w	r3, {r4, r5, r6, ip}
 80219a6:	ac04      	add	r4, sp, #16
 80219a8:	4255      	negs	r5, r2
 80219aa:	442c      	add	r4, r5
 80219ac:	b12a      	cbz	r2, 80219ba <??SMA_CMAC_generate_tag_11>
 80219ae:	1d09      	adds	r1, r1, #4
 80219b0:	f104 0310 	add.w	r3, r4, #16
 80219b4:	b289      	uxth	r1, r1
 80219b6:	f003 fa16 	bl	8024de6 <ACL_PM_Get_Data>

080219ba <??SMA_CMAC_generate_tag_11>:
 80219ba:	2080      	movs	r0, #128	; 0x80
 80219bc:	73e0      	strb	r0, [r4, #15]
 80219be:	ac0c      	add	r4, sp, #48	; 0x30

080219c0 <??SMA_CMAC_generate_tag_10>:
 80219c0:	aa08      	add	r2, sp, #32
 80219c2:	ab04      	add	r3, sp, #16
 80219c4:	2004      	movs	r0, #4

080219c6 <??SMA_CMAC_generate_tag_12>:
 80219c6:	f813 6b01 	ldrb.w	r6, [r3], #1
 80219ca:	7815      	ldrb	r5, [r2, #0]
 80219cc:	f814 1b01 	ldrb.w	r1, [r4], #1
 80219d0:	406e      	eors	r6, r5
 80219d2:	404e      	eors	r6, r1
 80219d4:	f802 6b01 	strb.w	r6, [r2], #1
 80219d8:	f813 cb01 	ldrb.w	ip, [r3], #1
 80219dc:	7811      	ldrb	r1, [r2, #0]
 80219de:	f814 5b01 	ldrb.w	r5, [r4], #1
 80219e2:	ea8c 0c01 	eor.w	ip, ip, r1
 80219e6:	ea85 0c0c 	eor.w	ip, r5, ip
 80219ea:	f802 cb01 	strb.w	ip, [r2], #1
 80219ee:	f813 6b01 	ldrb.w	r6, [r3], #1
 80219f2:	7815      	ldrb	r5, [r2, #0]
 80219f4:	f814 1b01 	ldrb.w	r1, [r4], #1
 80219f8:	406e      	eors	r6, r5
 80219fa:	404e      	eors	r6, r1
 80219fc:	f802 6b01 	strb.w	r6, [r2], #1
 8021a00:	f813 5b01 	ldrb.w	r5, [r3], #1
 8021a04:	7811      	ldrb	r1, [r2, #0]
 8021a06:	f814 cb01 	ldrb.w	ip, [r4], #1
 8021a0a:	404d      	eors	r5, r1
 8021a0c:	1e40      	subs	r0, r0, #1
 8021a0e:	ea8c 0505 	eor.w	r5, ip, r5
 8021a12:	f802 5b01 	strb.w	r5, [r2], #1
 8021a16:	d1d6      	bne.n	80219c6 <??SMA_CMAC_generate_tag_12>
 8021a18:	463a      	mov	r2, r7
 8021a1a:	a908      	add	r1, sp, #32
 8021a1c:	4640      	mov	r0, r8
 8021a1e:	f005 ff80 	bl	8027922 <BLEPLAT_AesEcbEncrypt>
 8021a22:	2000      	movs	r0, #0
 8021a24:	b018      	add	sp, #96	; 0x60
 8021a26:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
	...

08021a2c <SMA_SC_Gen_f5_Keys::salt___BE>:
 8021a2c:	886c 9183 f5aa 38a5 3760 db0b 605a be83     l......8`7..Z`..

08021a3c <SMP_MemAlloc>:
 8021a3c:	b538      	push	{r3, r4, r5, lr}
 8021a3e:	f8df 396c 	ldr.w	r3, [pc, #2412]	; 80223ac <??DataTable20>
 8021a42:	7d99      	ldrb	r1, [r3, #22]
 8021a44:	4604      	mov	r4, r0
 8021a46:	2280      	movs	r2, #128	; 0x80
 8021a48:	f8df 5964 	ldr.w	r5, [pc, #2404]	; 80223b0 <??DataTable20_1>
 8021a4c:	f003 f836 	bl	8024abc <Mem_Assign>
 8021a50:	6028      	str	r0, [r5, #0]
 8021a52:	2207      	movs	r2, #7
 8021a54:	2103      	movs	r1, #3
 8021a56:	4620      	mov	r0, r4
 8021a58:	f003 f830 	bl	8024abc <Mem_Assign>
 8021a5c:	6068      	str	r0, [r5, #4]
 8021a5e:	2228      	movs	r2, #40	; 0x28
 8021a60:	2101      	movs	r1, #1
 8021a62:	4620      	mov	r0, r4
 8021a64:	f003 f82a 	bl	8024abc <Mem_Assign>
 8021a68:	60e8      	str	r0, [r5, #12]
 8021a6a:	bd31      	pop	{r0, r4, r5, pc}

08021a6c <SMP_Init>:
 8021a6c:	b510      	push	{r4, lr}
 8021a6e:	f8df 4944 	ldr.w	r4, [pc, #2372]	; 80223b4 <??DataTable20_2>
 8021a72:	21ff      	movs	r1, #255	; 0xff
 8021a74:	f104 007c 	add.w	r0, r4, #124	; 0x7c
 8021a78:	f003 f876 	bl	8024b68 <ACL_List_Init>
 8021a7c:	2101      	movs	r1, #1
 8021a7e:	f104 0088 	add.w	r0, r4, #136	; 0x88
 8021a82:	f884 10c0 	strb.w	r1, [r4, #192]	; 0xc0
 8021a86:	7041      	strb	r1, [r0, #1]
 8021a88:	2107      	movs	r1, #7
 8021a8a:	2210      	movs	r2, #16
 8021a8c:	7081      	strb	r1, [r0, #2]
 8021a8e:	70c2      	strb	r2, [r0, #3]
 8021a90:	2100      	movs	r1, #0
 8021a92:	2201      	movs	r2, #1
 8021a94:	7201      	strb	r1, [r0, #8]
 8021a96:	7002      	strb	r2, [r0, #0]
 8021a98:	7282      	strb	r2, [r0, #10]
 8021a9a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8021a9e:	f002 bd64 	b.w	802456a <smp_sc_init_local_oob_random>

08021aa2 <SMP_Get_Identity_Address_Type>:
 8021aa2:	f8df 0910 	ldr.w	r0, [pc, #2320]	; 80223b4 <??DataTable20_2>
 8021aa6:	f890 0091 	ldrb.w	r0, [r0, #145]	; 0x91
 8021aaa:	4770      	bx	lr

08021aac <SMP_Connection_Complete_Handler>:
 8021aac:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8021ab0:	4607      	mov	r7, r0
 8021ab2:	f8df 9900 	ldr.w	r9, [pc, #2304]	; 80223b4 <??DataTable20_2>
 8021ab6:	f899 016d 	ldrb.w	r0, [r9, #365]	; 0x16d
 8021aba:	4688      	mov	r8, r1
 8021abc:	4616      	mov	r6, r2
 8021abe:	469a      	mov	sl, r3
 8021ac0:	07c1      	lsls	r1, r0, #31
 8021ac2:	d443      	bmi.n	8021b4c <??SMP_Connection_Complete_Handler_0>
 8021ac4:	f8d9 10b8 	ldr.w	r1, [r9, #184]	; 0xb8
 8021ac8:	f8df 38e0 	ldr.w	r3, [pc, #2272]	; 80223ac <??DataTable20>
 8021acc:	2000      	movs	r0, #0
 8021ace:	f101 0216 	add.w	r2, r1, #22
 8021ad2:	7d9b      	ldrb	r3, [r3, #22]
 8021ad4:	e000      	b.n	8021ad8 <??SMP_Connection_Complete_Handler_1>

08021ad6 <??SMP_Connection_Complete_Handler_2>:
 8021ad6:	1c40      	adds	r0, r0, #1

08021ad8 <??SMP_Connection_Complete_Handler_1>:
 8021ad8:	4298      	cmp	r0, r3
 8021ada:	d237      	bcs.n	8021b4c <??SMP_Connection_Complete_Handler_0>
 8021adc:	f832 4b80 	ldrh.w	r4, [r2], #128
 8021ae0:	2c00      	cmp	r4, #0
 8021ae2:	d1f8      	bne.n	8021ad6 <??SMP_Connection_Complete_Handler_2>
 8021ae4:	eb11 14c0 	adds.w	r4, r1, r0, lsl #7
 8021ae8:	d030      	beq.n	8021b4c <??SMP_Connection_Complete_Handler_0>
 8021aea:	9d08      	ldr	r5, [sp, #32]
 8021aec:	b13d      	cbz	r5, 8021afe <??SMP_Connection_Complete_Handler_3>
 8021aee:	2106      	movs	r1, #6
 8021af0:	4628      	mov	r0, r5
 8021af2:	f002 ffaf 	bl	8024a54 <Is_Empty>
 8021af6:	b910      	cbnz	r0, 8021afe <??SMP_Connection_Complete_Handler_3>
 8021af8:	2001      	movs	r0, #1
 8021afa:	4629      	mov	r1, r5
 8021afc:	e006      	b.n	8021b0c <??SMP_Connection_Complete_Handler_4>

08021afe <??SMP_Connection_Complete_Handler_3>:
 8021afe:	f899 0036 	ldrb.w	r0, [r9, #54]	; 0x36
 8021b02:	0001      	movs	r1, r0
 8021b04:	bf0c      	ite	eq
 8021b06:	4649      	moveq	r1, r9
 8021b08:	f109 012e 	addne.w	r1, r9, #46	; 0x2e

08021b0c <??SMP_Connection_Complete_Handler_4>:
 8021b0c:	f104 056e 	add.w	r5, r4, #110	; 0x6e
 8021b10:	2200      	movs	r2, #0
 8021b12:	706a      	strb	r2, [r5, #1]
 8021b14:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
 8021b18:	6063      	str	r3, [r4, #4]
 8021b1a:	82e7      	strh	r7, [r4, #22]
 8021b1c:	70e8      	strb	r0, [r5, #3]
 8021b1e:	f885 8000 	strb.w	r8, [r5]
 8021b22:	2206      	movs	r2, #6
 8021b24:	f104 0072 	add.w	r0, r4, #114	; 0x72
 8021b28:	f00f f9dd 	bl	8030ee6 <__aeabi_memcpy>
 8021b2c:	73e6      	strb	r6, [r4, #15]
 8021b2e:	2206      	movs	r2, #6
 8021b30:	4651      	mov	r1, sl
 8021b32:	f104 0010 	add.w	r0, r4, #16
 8021b36:	f00f f9d6 	bl	8030ee6 <__aeabi_memcpy>
 8021b3a:	742e      	strb	r6, [r5, #16]
 8021b3c:	2206      	movs	r2, #6
 8021b3e:	4651      	mov	r1, sl
 8021b40:	f104 0078 	add.w	r0, r4, #120	; 0x78
 8021b44:	f00f f9cf 	bl	8030ee6 <__aeabi_memcpy>
 8021b48:	2010      	movs	r0, #16
 8021b4a:	7220      	strb	r0, [r4, #8]

08021b4c <??SMP_Connection_Complete_Handler_0>:
 8021b4c:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}

08021b50 <SMP_Disconnection_Complete_Handler>:
 8021b50:	b510      	push	{r4, lr}
 8021b52:	f000 f9bb 	bl	8021ecc <SMP_Get_Remote_Device>
 8021b56:	0004      	movs	r4, r0
 8021b58:	d011      	beq.n	8021b7e <??SMP_Disconnection_Complete_Handler_0>
 8021b5a:	7a20      	ldrb	r0, [r4, #8]
 8021b5c:	38a0      	subs	r0, #160	; 0xa0
 8021b5e:	2841      	cmp	r0, #65	; 0x41
 8021b60:	d206      	bcs.n	8021b70 <??SMP_Disconnection_Complete_Handler_1>
 8021b62:	4620      	mov	r0, r4
 8021b64:	f000 fcce 	bl	8022504 <SMP_Stop_Timer>
 8021b68:	2102      	movs	r1, #2
 8021b6a:	4620      	mov	r0, r4
 8021b6c:	f002 f97c 	bl	8023e68 <SMP_Update_Statistics_On_Pairing_Complete>

08021b70 <??SMP_Disconnection_Complete_Handler_1>:
 8021b70:	8ae0      	ldrh	r0, [r4, #22]
 8021b72:	f3c0 000b 	ubfx	r0, r0, #0, #12
 8021b76:	f000 f94c 	bl	8021e12 <SMP_Flush_Rx_Packets>
 8021b7a:	20fe      	movs	r0, #254	; 0xfe
 8021b7c:	7220      	strb	r0, [r4, #8]

08021b7e <??SMP_Disconnection_Complete_Handler_0>:
 8021b7e:	bd10      	pop	{r4, pc}

08021b80 <SMP_Ltk_Request_Handler>:
 8021b80:	b516      	push	{r1, r2, r4, lr}
 8021b82:	460c      	mov	r4, r1
 8021b84:	f8df 182c 	ldr.w	r1, [pc, #2092]	; 80223b4 <??DataTable20_2>
 8021b88:	f891 216d 	ldrb.w	r2, [r1, #365]	; 0x16d
 8021b8c:	07d1      	lsls	r1, r2, #31
 8021b8e:	d501      	bpl.n	8021b94 <??SMP_Ltk_Request_Handler_0>
 8021b90:	2001      	movs	r0, #1
 8021b92:	bd16      	pop	{r1, r2, r4, pc}

08021b94 <??SMP_Ltk_Request_Handler_0>:
 8021b94:	f000 f99a 	bl	8021ecc <SMP_Get_Remote_Device>
 8021b98:	b1b8      	cbz	r0, 8021bca <??SMP_Ltk_Request_Handler_1>
 8021b9a:	f100 016e 	add.w	r1, r0, #110	; 0x6e
 8021b9e:	784a      	ldrb	r2, [r1, #1]
 8021ba0:	f042 0210 	orr.w	r2, r2, #16
 8021ba4:	704a      	strb	r2, [r1, #1]
 8021ba6:	7a02      	ldrb	r2, [r0, #8]
 8021ba8:	2abc      	cmp	r2, #188	; 0xbc
 8021baa:	d00e      	beq.n	8021bca <??SMP_Ltk_Request_Handler_1>
 8021bac:	7809      	ldrb	r1, [r1, #0]
 8021bae:	070a      	lsls	r2, r1, #28
 8021bb0:	d40b      	bmi.n	8021bca <??SMP_Ltk_Request_Handler_1>
 8021bb2:	6822      	ldr	r2, [r4, #0]
 8021bb4:	f100 0124 	add.w	r1, r0, #36	; 0x24
 8021bb8:	600a      	str	r2, [r1, #0]
 8021bba:	6862      	ldr	r2, [r4, #4]
 8021bbc:	604a      	str	r2, [r1, #4]
 8021bbe:	aa01      	add	r2, sp, #4
 8021bc0:	7811      	ldrb	r1, [r2, #0]
 8021bc2:	f800 1f2c 	strb.w	r1, [r0, #44]!
 8021bc6:	7851      	ldrb	r1, [r2, #1]
 8021bc8:	7041      	strb	r1, [r0, #1]

08021bca <??SMP_Ltk_Request_Handler_1>:
 8021bca:	2000      	movs	r0, #0
 8021bcc:	bd16      	pop	{r1, r2, r4, pc}

08021bce <SMP_L2cap_Data_Handler>:
 8021bce:	b570      	push	{r4, r5, r6, lr}
 8021bd0:	4605      	mov	r5, r0
 8021bd2:	88a8      	ldrh	r0, [r5, #4]
 8021bd4:	460e      	mov	r6, r1
 8021bd6:	f000 f979 	bl	8021ecc <SMP_Get_Remote_Device>
 8021bda:	0004      	movs	r4, r0
 8021bdc:	d05e      	beq.n	8021c9c <??SMP_L2cap_Data_Handler_0>
 8021bde:	0030      	movs	r0, r6
 8021be0:	d008      	beq.n	8021bf4 <??SMP_L2cap_Data_Handler_1>
 8021be2:	88e8      	ldrh	r0, [r5, #6]
 8021be4:	2842      	cmp	r0, #66	; 0x42
 8021be6:	d259      	bcs.n	8021c9c <??SMP_L2cap_Data_Handler_0>
 8021be8:	4629      	mov	r1, r5
 8021bea:	f8df 07cc 	ldr.w	r0, [pc, #1996]	; 80223b8 <??DataTable20_3>
 8021bee:	f002 ffc1 	bl	8024b74 <ACL_List_Insert_Tail>
 8021bf2:	e057      	b.n	8021ca4 <??SMP_L2cap_Data_Handler_2>

08021bf4 <??SMP_L2cap_Data_Handler_1>:
 8021bf4:	68a8      	ldr	r0, [r5, #8]
 8021bf6:	7b00      	ldrb	r0, [r0, #12]
 8021bf8:	2806      	cmp	r0, #6
 8021bfa:	bf08      	it	eq
 8021bfc:	20d2      	moveq	r0, #210	; 0xd2
 8021bfe:	d01b      	beq.n	8021c38 <??SMP_L2cap_Data_Handler_3>
 8021c00:	2807      	cmp	r0, #7
 8021c02:	d10c      	bne.n	8021c1e <??SMP_L2cap_Data_Handler_4>
 8021c04:	7a20      	ldrb	r0, [r4, #8]
 8021c06:	28dd      	cmp	r0, #221	; 0xdd
 8021c08:	d13b      	bne.n	8021c82 <??SMP_L2cap_Data_Handler_5>
 8021c0a:	7ee0      	ldrb	r0, [r4, #27]
 8021c0c:	0781      	lsls	r1, r0, #30
 8021c0e:	bf48      	it	mi
 8021c10:	20d3      	movmi	r0, #211	; 0xd3
 8021c12:	d411      	bmi.n	8021c38 <??SMP_L2cap_Data_Handler_3>
 8021c14:	0740      	lsls	r0, r0, #29
 8021c16:	d516      	bpl.n	8021c46 <??SMP_L2cap_Data_Handler_6>
 8021c18:	21d5      	movs	r1, #213	; 0xd5
 8021c1a:	7221      	strb	r1, [r4, #8]
 8021c1c:	e031      	b.n	8021c82 <??SMP_L2cap_Data_Handler_5>

08021c1e <??SMP_L2cap_Data_Handler_4>:
 8021c1e:	2808      	cmp	r0, #8
 8021c20:	bf08      	it	eq
 8021c22:	20d4      	moveq	r0, #212	; 0xd4
 8021c24:	d008      	beq.n	8021c38 <??SMP_L2cap_Data_Handler_3>
 8021c26:	2809      	cmp	r0, #9
 8021c28:	d108      	bne.n	8021c3c <??SMP_L2cap_Data_Handler_7>
 8021c2a:	7a20      	ldrb	r0, [r4, #8]
 8021c2c:	28dd      	cmp	r0, #221	; 0xdd
 8021c2e:	d128      	bne.n	8021c82 <??SMP_L2cap_Data_Handler_5>
 8021c30:	7ee0      	ldrb	r0, [r4, #27]
 8021c32:	0741      	lsls	r1, r0, #29
 8021c34:	d507      	bpl.n	8021c46 <??SMP_L2cap_Data_Handler_6>
 8021c36:	20d5      	movs	r0, #213	; 0xd5

08021c38 <??SMP_L2cap_Data_Handler_3>:
 8021c38:	7220      	strb	r0, [r4, #8]
 8021c3a:	e022      	b.n	8021c82 <??SMP_L2cap_Data_Handler_5>

08021c3c <??SMP_L2cap_Data_Handler_7>:
 8021c3c:	280a      	cmp	r0, #10
 8021c3e:	d106      	bne.n	8021c4e <??SMP_L2cap_Data_Handler_8>
 8021c40:	7a20      	ldrb	r0, [r4, #8]
 8021c42:	28dd      	cmp	r0, #221	; 0xdd
 8021c44:	d11d      	bne.n	8021c82 <??SMP_L2cap_Data_Handler_5>

08021c46 <??SMP_L2cap_Data_Handler_6>:
 8021c46:	4620      	mov	r0, r4
 8021c48:	f002 f8bc 	bl	8023dc4 <SMP_Keys_Distribution_Complete>
 8021c4c:	e019      	b.n	8021c82 <??SMP_L2cap_Data_Handler_5>

08021c4e <??SMP_L2cap_Data_Handler_8>:
 8021c4e:	280b      	cmp	r0, #11
 8021c50:	bf02      	ittt	eq
 8021c52:	f894 006f 	ldrbeq.w	r0, [r4, #111]	; 0x6f
 8021c56:	f000 0103 	andeq.w	r1, r0, #3
 8021c5a:	2901      	cmpeq	r1, #1
 8021c5c:	d111      	bne.n	8021c82 <??SMP_L2cap_Data_Handler_5>
 8021c5e:	f000 00fe 	and.w	r0, r0, #254	; 0xfe
 8021c62:	f040 0002 	orr.w	r0, r0, #2
 8021c66:	f884 006f 	strb.w	r0, [r4, #111]	; 0x6f
 8021c6a:	2000      	movs	r0, #0
 8021c6c:	f7fd fa76 	bl	801f15c <EVT_aci_gap_slave_security_initiated>
 8021c70:	7a20      	ldrb	r0, [r4, #8]
 8021c72:	28f1      	cmp	r0, #241	; 0xf1
 8021c74:	d105      	bne.n	8021c82 <??SMP_L2cap_Data_Handler_5>
 8021c76:	f894 006f 	ldrb.w	r0, [r4, #111]	; 0x6f
 8021c7a:	f040 0004 	orr.w	r0, r0, #4
 8021c7e:	f884 006f 	strb.w	r0, [r4, #111]	; 0x6f

08021c82 <??SMP_L2cap_Data_Handler_5>:
 8021c82:	f3ef 8010 	mrs	r0, PRIMASK
 8021c86:	b672      	cpsid	i
 8021c88:	f8df 1728 	ldr.w	r1, [pc, #1832]	; 80223b4 <??DataTable20_2>
 8021c8c:	f891 2039 	ldrb.w	r2, [r1, #57]	; 0x39
 8021c90:	f002 02fb 	and.w	r2, r2, #251	; 0xfb
 8021c94:	f881 2039 	strb.w	r2, [r1, #57]	; 0x39
 8021c98:	f380 8810 	msr	PRIMASK, r0

08021c9c <??SMP_L2cap_Data_Handler_0>:
 8021c9c:	4631      	mov	r1, r6
 8021c9e:	4628      	mov	r0, r5
 8021ca0:	f003 f81f 	bl	8024ce2 <ACL_PM_Release>

08021ca4 <??SMP_L2cap_Data_Handler_2>:
 8021ca4:	2000      	movs	r0, #0
 8021ca6:	bd70      	pop	{r4, r5, r6, pc}

08021ca8 <SMP_Encryption_Update_Handler>:
 8021ca8:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8021cac:	4605      	mov	r5, r0
 8021cae:	468a      	mov	sl, r1
 8021cb0:	4699      	mov	r9, r3
 8021cb2:	4610      	mov	r0, r2
 8021cb4:	2600      	movs	r6, #0
 8021cb6:	f000 f909 	bl	8021ecc <SMP_Get_Remote_Device>
 8021cba:	0004      	movs	r4, r0
 8021cbc:	d065      	beq.n	8021d8a <??SMP_Encryption_Update_Handler_0>
 8021cbe:	8ae1      	ldrh	r1, [r4, #22]
 8021cc0:	f104 076e 	add.w	r7, r4, #110	; 0x6e
 8021cc4:	f1ba 0f00 	cmp.w	sl, #0
 8021cc8:	f3c1 080b 	ubfx	r8, r1, #0, #12
 8021ccc:	d131      	bne.n	8021d32 <??SMP_Encryption_Update_Handler_1>
 8021cce:	f1b9 0f01 	cmp.w	r9, #1
 8021cd2:	d114      	bne.n	8021cfe <??SMP_Encryption_Update_Handler_2>
 8021cd4:	7a60      	ldrb	r0, [r4, #9]
 8021cd6:	f441 5180 	orr.w	r1, r1, #4096	; 0x1000
 8021cda:	2802      	cmp	r0, #2
 8021cdc:	bf1c      	itt	ne
 8021cde:	2803      	cmpne	r0, #3
 8021ce0:	2804      	cmpne	r0, #4
 8021ce2:	d106      	bne.n	8021cf2 <??SMP_Encryption_Update_Handler_3>
 8021ce4:	7838      	ldrb	r0, [r7, #0]
 8021ce6:	0702      	lsls	r2, r0, #28
 8021ce8:	bf54      	ite	pl
 8021cea:	f441 5100 	orrpl.w	r1, r1, #8192	; 0x2000
 8021cee:	f441 4180 	orrmi.w	r1, r1, #16384	; 0x4000

08021cf2 <??SMP_Encryption_Update_Handler_3>:
 8021cf2:	82e1      	strh	r1, [r4, #22]

08021cf4 <??SMP_Encryption_Update_Handler_4>:
 8021cf4:	7a20      	ldrb	r0, [r4, #8]
 8021cf6:	28bc      	cmp	r0, #188	; 0xbc
 8021cf8:	d108      	bne.n	8021d0c <??SMP_Encryption_Update_Handler_5>
 8021cfa:	20bf      	movs	r0, #191	; 0xbf
 8021cfc:	e02a      	b.n	8021d54 <??SMP_Encryption_Update_Handler_6>

08021cfe <??SMP_Encryption_Update_Handler_2>:
 8021cfe:	f1b9 0f00 	cmp.w	r9, #0
 8021d02:	d1f7      	bne.n	8021cf4 <??SMP_Encryption_Update_Handler_4>
 8021d04:	f648 70ff 	movw	r0, #36863	; 0x8fff
 8021d08:	4001      	ands	r1, r0
 8021d0a:	e7f2      	b.n	8021cf2 <??SMP_Encryption_Update_Handler_3>

08021d0c <??SMP_Encryption_Update_Handler_5>:
 8021d0c:	28ad      	cmp	r0, #173	; 0xad
 8021d0e:	bf08      	it	eq
 8021d10:	20af      	moveq	r0, #175	; 0xaf
 8021d12:	d01f      	beq.n	8021d54 <??SMP_Encryption_Update_Handler_6>
 8021d14:	28ae      	cmp	r0, #174	; 0xae
 8021d16:	bf08      	it	eq
 8021d18:	20e0      	moveq	r0, #224	; 0xe0
 8021d1a:	d01b      	beq.n	8021d54 <??SMP_Encryption_Update_Handler_6>
 8021d1c:	28f1      	cmp	r0, #241	; 0xf1
 8021d1e:	bf08      	it	eq
 8021d20:	2d00      	cmpeq	r5, #0
 8021d22:	d118      	bne.n	8021d56 <??SMP_Encryption_Update_Handler_7>
 8021d24:	2300      	movs	r3, #0
 8021d26:	2200      	movs	r2, #0
 8021d28:	4641      	mov	r1, r8
 8021d2a:	2000      	movs	r0, #0
 8021d2c:	f7fd fa26 	bl	801f17c <EVT_aci_gap_pairing_complete>
 8021d30:	e011      	b.n	8021d56 <??SMP_Encryption_Update_Handler_7>

08021d32 <??SMP_Encryption_Update_Handler_1>:
 8021d32:	7a20      	ldrb	r0, [r4, #8]
 8021d34:	38a0      	subs	r0, #160	; 0xa0
 8021d36:	2841      	cmp	r0, #65	; 0x41
 8021d38:	d204      	bcs.n	8021d44 <??SMP_Encryption_Update_Handler_8>
 8021d3a:	2102      	movs	r1, #2
 8021d3c:	4620      	mov	r0, r4
 8021d3e:	f002 f893 	bl	8023e68 <SMP_Update_Statistics_On_Pairing_Complete>
 8021d42:	2601      	movs	r6, #1

08021d44 <??SMP_Encryption_Update_Handler_8>:
 8021d44:	b92d      	cbnz	r5, 8021d52 <??SMP_Encryption_Update_Handler_9>
 8021d46:	4653      	mov	r3, sl
 8021d48:	2203      	movs	r2, #3
 8021d4a:	4641      	mov	r1, r8
 8021d4c:	2000      	movs	r0, #0
 8021d4e:	f7fd fa15 	bl	801f17c <EVT_aci_gap_pairing_complete>

08021d52 <??SMP_Encryption_Update_Handler_9>:
 8021d52:	2000      	movs	r0, #0

08021d54 <??SMP_Encryption_Update_Handler_6>:
 8021d54:	7220      	strb	r0, [r4, #8]

08021d56 <??SMP_Encryption_Update_Handler_7>:
 8021d56:	7839      	ldrb	r1, [r7, #0]
 8021d58:	07c8      	lsls	r0, r1, #31
 8021d5a:	d408      	bmi.n	8021d6e <??SMP_Encryption_Update_Handler_10>
 8021d5c:	78b8      	ldrb	r0, [r7, #2]
 8021d5e:	06c1      	lsls	r1, r0, #27
 8021d60:	d50d      	bpl.n	8021d7e <??SMP_Encryption_Update_Handler_11>
 8021d62:	f000 00ef 	and.w	r0, r0, #239	; 0xef
 8021d66:	0601      	lsls	r1, r0, #24
 8021d68:	70b8      	strb	r0, [r7, #2]
 8021d6a:	d508      	bpl.n	8021d7e <??SMP_Encryption_Update_Handler_11>
 8021d6c:	e008      	b.n	8021d80 <??SMP_Encryption_Update_Handler_12>

08021d6e <??SMP_Encryption_Update_Handler_10>:
 8021d6e:	7878      	ldrb	r0, [r7, #1]
 8021d70:	f010 0f03 	tst.w	r0, #3
 8021d74:	bf18      	it	ne
 8021d76:	2601      	movne	r6, #1
 8021d78:	f000 00f0 	and.w	r0, r0, #240	; 0xf0
 8021d7c:	7078      	strb	r0, [r7, #1]

08021d7e <??SMP_Encryption_Update_Handler_11>:
 8021d7e:	b126      	cbz	r6, 8021d8a <??SMP_Encryption_Update_Handler_0>

08021d80 <??SMP_Encryption_Update_Handler_12>:
 8021d80:	4620      	mov	r0, r4
 8021d82:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8021d86:	f000 bbbd 	b.w	8022504 <SMP_Stop_Timer>

08021d8a <??SMP_Encryption_Update_Handler_0>:
 8021d8a:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}

08021d8e <SMP_Process>:
 8021d8e:	b57c      	push	{r2, r3, r4, r5, r6, lr}
 8021d90:	2000      	movs	r0, #0
 8021d92:	9000      	str	r0, [sp, #0]
 8021d94:	f3ef 8110 	mrs	r1, PRIMASK
 8021d98:	b672      	cpsid	i
 8021d9a:	f8df 0618 	ldr.w	r0, [pc, #1560]	; 80223b4 <??DataTable20_2>
 8021d9e:	f890 2039 	ldrb.w	r2, [r0, #57]	; 0x39
 8021da2:	f042 0204 	orr.w	r2, r2, #4
 8021da6:	f880 2039 	strb.w	r2, [r0, #57]	; 0x39
 8021daa:	f381 8810 	msr	PRIMASK, r1
 8021dae:	2500      	movs	r5, #0
 8021db0:	f100 047c 	add.w	r4, r0, #124	; 0x7c
 8021db4:	f8df 65f4 	ldr.w	r6, [pc, #1524]	; 80223ac <??DataTable20>
 8021db8:	e009      	b.n	8021dce <??SMP_Process_0>

08021dba <??SMP_Process_1>:
 8021dba:	6be1      	ldr	r1, [r4, #60]	; 0x3c
 8021dbc:	062a      	lsls	r2, r5, #24
 8021dbe:	eb01 4152 	add.w	r1, r1, r2, lsr #17
 8021dc2:	8ac8      	ldrh	r0, [r1, #22]
 8021dc4:	b110      	cbz	r0, 8021dcc <??SMP_Process_2>
 8021dc6:	4608      	mov	r0, r1
 8021dc8:	f001 f895 	bl	8022ef6 <SMP_Pairing_Process>

08021dcc <??SMP_Process_2>:
 8021dcc:	1c6d      	adds	r5, r5, #1

08021dce <??SMP_Process_0>:
 8021dce:	7db1      	ldrb	r1, [r6, #22]
 8021dd0:	b2e8      	uxtb	r0, r5
 8021dd2:	4288      	cmp	r0, r1
 8021dd4:	d3f1      	bcc.n	8021dba <??SMP_Process_1>
 8021dd6:	f002 fb25 	bl	8024424 <smp_sc_check_for_ecc_pk_generation>
 8021dda:	e011      	b.n	8021e00 <??SMP_Process_3>

08021ddc <??SMP_Process_4>:
 8021ddc:	4669      	mov	r1, sp
 8021dde:	4620      	mov	r0, r4
 8021de0:	f002 fefd 	bl	8024bde <ACL_List_Remove_Head>
 8021de4:	9800      	ldr	r0, [sp, #0]
 8021de6:	8880      	ldrh	r0, [r0, #4]
 8021de8:	f000 f870 	bl	8021ecc <SMP_Get_Remote_Device>
 8021dec:	b120      	cbz	r0, 8021df8 <??SMP_Process_5>
 8021dee:	4601      	mov	r1, r0
 8021df0:	9800      	ldr	r0, [sp, #0]
 8021df2:	f001 fb1f 	bl	8023434 <SMP_Process_Rx_Packet>
 8021df6:	b938      	cbnz	r0, 8021e08 <??SMP_Process_6>

08021df8 <??SMP_Process_5>:
 8021df8:	9800      	ldr	r0, [sp, #0]
 8021dfa:	2101      	movs	r1, #1
 8021dfc:	f002 ff71 	bl	8024ce2 <ACL_PM_Release>

08021e00 <??SMP_Process_3>:
 8021e00:	6820      	ldr	r0, [r4, #0]
 8021e02:	2800      	cmp	r0, #0
 8021e04:	d1ea      	bne.n	8021ddc <??SMP_Process_4>
 8021e06:	bd73      	pop	{r0, r1, r4, r5, r6, pc}

08021e08 <??SMP_Process_6>:
 8021e08:	9900      	ldr	r1, [sp, #0]
 8021e0a:	4620      	mov	r0, r4
 8021e0c:	f002 febf 	bl	8024b8e <ACL_List_Insert_Head>
 8021e10:	bd73      	pop	{r0, r1, r4, r5, r6, pc}

08021e12 <SMP_Flush_Rx_Packets>:
 8021e12:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8021e14:	f8df 659c 	ldr.w	r6, [pc, #1436]	; 80223b4 <??DataTable20_2>
 8021e18:	6ff4      	ldr	r4, [r6, #124]	; 0x7c
 8021e1a:	4605      	mov	r5, r0
 8021e1c:	2c00      	cmp	r4, #0
 8021e1e:	e00d      	b.n	8021e3c <??SMP_Flush_Rx_Packets_0>

08021e20 <??SMP_Flush_Rx_Packets_1>:
 8021e20:	88a1      	ldrh	r1, [r4, #4]
 8021e22:	6827      	ldr	r7, [r4, #0]
 8021e24:	42a9      	cmp	r1, r5
 8021e26:	d108      	bne.n	8021e3a <??SMP_Flush_Rx_Packets_2>
 8021e28:	4621      	mov	r1, r4
 8021e2a:	f106 007c 	add.w	r0, r6, #124	; 0x7c
 8021e2e:	f002 febd 	bl	8024bac <ACL_List_Remove>
 8021e32:	2101      	movs	r1, #1
 8021e34:	4620      	mov	r0, r4
 8021e36:	f002 ff54 	bl	8024ce2 <ACL_PM_Release>

08021e3a <??SMP_Flush_Rx_Packets_2>:
 8021e3a:	003c      	movs	r4, r7

08021e3c <??SMP_Flush_Rx_Packets_0>:
 8021e3c:	d1f0      	bne.n	8021e20 <??SMP_Flush_Rx_Packets_1>
 8021e3e:	bdf1      	pop	{r0, r4, r5, r6, r7, pc}

08021e40 <SMP_Timeout_Cb>:
 8021e40:	b510      	push	{r4, lr}
 8021e42:	f8df 1570 	ldr.w	r1, [pc, #1392]	; 80223b4 <??DataTable20_2>
 8021e46:	f8d1 20b8 	ldr.w	r2, [r1, #184]	; 0xb8
 8021e4a:	2300      	movs	r3, #0
 8021e4c:	eb02 10c0 	add.w	r0, r2, r0, lsl #7
 8021e50:	2201      	movs	r2, #1
 8021e52:	f5a0 6480 	sub.w	r4, r0, #1024	; 0x400
 8021e56:	8ae1      	ldrh	r1, [r4, #22]
 8021e58:	2001      	movs	r0, #1
 8021e5a:	f3c1 010b 	ubfx	r1, r1, #0, #12
 8021e5e:	f7fd f98d 	bl	801f17c <EVT_aci_gap_pairing_complete>
 8021e62:	2102      	movs	r1, #2
 8021e64:	4620      	mov	r0, r4
 8021e66:	f001 ffff 	bl	8023e68 <SMP_Update_Statistics_On_Pairing_Complete>
 8021e6a:	4620      	mov	r0, r4
 8021e6c:	2180      	movs	r1, #128	; 0x80
 8021e6e:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8021e72:	f00f b835 	b.w	8030ee0 <__aeabi_memclr>

08021e76 <SMP_Rep_Attempts_Timeout_Cb>:
 8021e76:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8021e7a:	f8df 4534 	ldr.w	r4, [pc, #1332]	; 80223b0 <??DataTable20_1>
 8021e7e:	6861      	ldr	r1, [r4, #4]
 8021e80:	ebc0 00c0 	rsb	r0, r0, r0, lsl #3
 8021e84:	2700      	movs	r7, #0
 8021e86:	4408      	add	r0, r1
 8021e88:	1fc5      	subs	r5, r0, #7
 8021e8a:	782a      	ldrb	r2, [r5, #0]
 8021e8c:	f8df 851c 	ldr.w	r8, [pc, #1308]	; 80223ac <??DataTable20>
 8021e90:	f002 027f 	and.w	r2, r2, #127	; 0x7f
 8021e94:	f042 0240 	orr.w	r2, r2, #64	; 0x40
 8021e98:	702a      	strb	r2, [r5, #0]
 8021e9a:	e010      	b.n	8021ebe <??SMP_Rep_Attempts_Timeout_Cb_0>

08021e9c <??SMP_Rep_Attempts_Timeout_Cb_1>:
 8021e9c:	6820      	ldr	r0, [r4, #0]
 8021e9e:	063b      	lsls	r3, r7, #24
 8021ea0:	2206      	movs	r2, #6
 8021ea2:	eb00 4653 	add.w	r6, r0, r3, lsr #17
 8021ea6:	1c69      	adds	r1, r5, #1
 8021ea8:	f106 0010 	add.w	r0, r6, #16
 8021eac:	f00f f848 	bl	8030f40 <memcmp>
 8021eb0:	2800      	cmp	r0, #0
 8021eb2:	bf01      	itttt	eq
 8021eb4:	7a30      	ldrbeq	r0, [r6, #8]
 8021eb6:	28f0      	cmpeq	r0, #240	; 0xf0
 8021eb8:	2110      	moveq	r1, #16
 8021eba:	7231      	strbeq	r1, [r6, #8]
 8021ebc:	1c7f      	adds	r7, r7, #1

08021ebe <??SMP_Rep_Attempts_Timeout_Cb_0>:
 8021ebe:	f898 1016 	ldrb.w	r1, [r8, #22]
 8021ec2:	b2f8      	uxtb	r0, r7
 8021ec4:	4288      	cmp	r0, r1
 8021ec6:	d3e9      	bcc.n	8021e9c <??SMP_Rep_Attempts_Timeout_Cb_1>
 8021ec8:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

08021ecc <SMP_Get_Remote_Device>:
 8021ecc:	b470      	push	{r4, r5, r6}
 8021ece:	0001      	movs	r1, r0
 8021ed0:	d01e      	beq.n	8021f10 <??SMP_Get_Remote_Device_0>
 8021ed2:	f8df 14e0 	ldr.w	r1, [pc, #1248]	; 80223b4 <??DataTable20_2>
 8021ed6:	f891 216d 	ldrb.w	r2, [r1, #365]	; 0x16d
 8021eda:	07d3      	lsls	r3, r2, #31
 8021edc:	d418      	bmi.n	8021f10 <??SMP_Get_Remote_Device_0>
 8021ede:	f8d1 10b8 	ldr.w	r1, [r1, #184]	; 0xb8
 8021ee2:	f8df 44c8 	ldr.w	r4, [pc, #1224]	; 80223ac <??DataTable20>
 8021ee6:	2200      	movs	r2, #0
 8021ee8:	460b      	mov	r3, r1
 8021eea:	7da4      	ldrb	r4, [r4, #22]
 8021eec:	e001      	b.n	8021ef2 <??SMP_Get_Remote_Device_1>

08021eee <??SMP_Get_Remote_Device_2>:
 8021eee:	1c52      	adds	r2, r2, #1
 8021ef0:	3380      	adds	r3, #128	; 0x80

08021ef2 <??SMP_Get_Remote_Device_1>:
 8021ef2:	b2d5      	uxtb	r5, r2
 8021ef4:	42a5      	cmp	r5, r4
 8021ef6:	d20b      	bcs.n	8021f10 <??SMP_Get_Remote_Device_0>
 8021ef8:	8add      	ldrh	r5, [r3, #22]
 8021efa:	f3c0 060b 	ubfx	r6, r0, #0, #12
 8021efe:	f3c5 050b 	ubfx	r5, r5, #0, #12
 8021f02:	42b5      	cmp	r5, r6
 8021f04:	d1f3      	bne.n	8021eee <??SMP_Get_Remote_Device_2>
 8021f06:	0612      	lsls	r2, r2, #24
 8021f08:	eb01 4052 	add.w	r0, r1, r2, lsr #17
 8021f0c:	bc70      	pop	{r4, r5, r6}
 8021f0e:	4770      	bx	lr

08021f10 <??SMP_Get_Remote_Device_0>:
 8021f10:	2000      	movs	r0, #0
 8021f12:	bc70      	pop	{r4, r5, r6}
 8021f14:	4770      	bx	lr

08021f16 <SMP_Save_Gatt_Data>:
 8021f16:	b570      	push	{r4, r5, r6, lr}
 8021f18:	b094      	sub	sp, #80	; 0x50
 8021f1a:	460d      	mov	r5, r1
 8021f1c:	4616      	mov	r6, r2
 8021f1e:	f7ff ffd5 	bl	8021ecc <SMP_Get_Remote_Device>
 8021f22:	0004      	movs	r4, r0
 8021f24:	d019      	beq.n	8021f5a <??SMP_Save_Gatt_Data_0>
 8021f26:	f894 107e 	ldrb.w	r1, [r4, #126]	; 0x7e
 8021f2a:	466a      	mov	r2, sp
 8021f2c:	f104 0078 	add.w	r0, r4, #120	; 0x78
 8021f30:	f7ff f8b5 	bl	802109e <SDB_Read_Sec_Record>
 8021f34:	b138      	cbz	r0, 8021f46 <??SMP_Save_Gatt_Data_1>
 8021f36:	7a20      	ldrb	r0, [r4, #8]
 8021f38:	28f1      	cmp	r0, #241	; 0xf1
 8021f3a:	bf02      	ittt	eq
 8021f3c:	7b20      	ldrbeq	r0, [r4, #12]
 8021f3e:	f000 0003 	andeq.w	r0, r0, #3
 8021f42:	2803      	cmpeq	r0, #3
 8021f44:	d109      	bne.n	8021f5a <??SMP_Save_Gatt_Data_0>

08021f46 <??SMP_Save_Gatt_Data_1>:
 8021f46:	f894 107e 	ldrb.w	r1, [r4, #126]	; 0x7e
 8021f4a:	4633      	mov	r3, r6
 8021f4c:	462a      	mov	r2, r5
 8021f4e:	f104 0078 	add.w	r0, r4, #120	; 0x78
 8021f52:	f7ff f9dc 	bl	802130e <SDB_Write_Gatt_Data>
 8021f56:	b014      	add	sp, #80	; 0x50
 8021f58:	bd70      	pop	{r4, r5, r6, pc}

08021f5a <??SMP_Save_Gatt_Data_0>:
 8021f5a:	e021      	b.n	8021fa0 <??SMP_Retrieve_Gatt_Data_0>

08021f5c <SMP_Retrieve_Gatt_Data>:
 8021f5c:	b570      	push	{r4, r5, r6, lr}
 8021f5e:	b094      	sub	sp, #80	; 0x50
 8021f60:	460d      	mov	r5, r1
 8021f62:	4616      	mov	r6, r2
 8021f64:	f7ff ffb2 	bl	8021ecc <SMP_Get_Remote_Device>
 8021f68:	0004      	movs	r4, r0
 8021f6a:	d019      	beq.n	8021fa0 <??SMP_Retrieve_Gatt_Data_0>
 8021f6c:	f894 107e 	ldrb.w	r1, [r4, #126]	; 0x7e
 8021f70:	466a      	mov	r2, sp
 8021f72:	f104 0078 	add.w	r0, r4, #120	; 0x78
 8021f76:	f7ff f892 	bl	802109e <SDB_Read_Sec_Record>
 8021f7a:	b138      	cbz	r0, 8021f8c <??SMP_Retrieve_Gatt_Data_1>
 8021f7c:	7a20      	ldrb	r0, [r4, #8]
 8021f7e:	28f1      	cmp	r0, #241	; 0xf1
 8021f80:	bf02      	ittt	eq
 8021f82:	7b20      	ldrbeq	r0, [r4, #12]
 8021f84:	f000 0003 	andeq.w	r0, r0, #3
 8021f88:	2803      	cmpeq	r0, #3
 8021f8a:	d109      	bne.n	8021fa0 <??SMP_Retrieve_Gatt_Data_0>

08021f8c <??SMP_Retrieve_Gatt_Data_1>:
 8021f8c:	f894 107e 	ldrb.w	r1, [r4, #126]	; 0x7e
 8021f90:	4633      	mov	r3, r6
 8021f92:	462a      	mov	r2, r5
 8021f94:	f104 0078 	add.w	r0, r4, #120	; 0x78
 8021f98:	f7ff fa56 	bl	8021448 <SDB_Read_Gatt_Data>
 8021f9c:	b014      	add	sp, #80	; 0x50
 8021f9e:	bd70      	pop	{r4, r5, r6, pc}

08021fa0 <??SMP_Retrieve_Gatt_Data_0>:
 8021fa0:	205e      	movs	r0, #94	; 0x5e
 8021fa2:	b014      	add	sp, #80	; 0x50
 8021fa4:	bd70      	pop	{r4, r5, r6, pc}

08021fa6 <SMP_Get_Link_Status>:
 8021fa6:	2100      	movs	r1, #0
 8021fa8:	b4f0      	push	{r4, r5, r6, r7}
 8021faa:	0002      	movs	r2, r0
 8021fac:	d02c      	beq.n	8022008 <??SMP_Get_Link_Status_0>
 8021fae:	f8df 2404 	ldr.w	r2, [pc, #1028]	; 80223b4 <??DataTable20_2>
 8021fb2:	f892 316d 	ldrb.w	r3, [r2, #365]	; 0x16d
 8021fb6:	07dc      	lsls	r4, r3, #31
 8021fb8:	d426      	bmi.n	8022008 <??SMP_Get_Link_Status_0>
 8021fba:	f8d2 20b8 	ldr.w	r2, [r2, #184]	; 0xb8
 8021fbe:	f8df 53ec 	ldr.w	r5, [pc, #1004]	; 80223ac <??DataTable20>
 8021fc2:	2300      	movs	r3, #0
 8021fc4:	4614      	mov	r4, r2
 8021fc6:	7dad      	ldrb	r5, [r5, #22]
 8021fc8:	e001      	b.n	8021fce <??SMP_Get_Link_Status_1>

08021fca <??SMP_Get_Link_Status_2>:
 8021fca:	1c5b      	adds	r3, r3, #1
 8021fcc:	3480      	adds	r4, #128	; 0x80

08021fce <??SMP_Get_Link_Status_1>:
 8021fce:	b2de      	uxtb	r6, r3
 8021fd0:	42ae      	cmp	r6, r5
 8021fd2:	d219      	bcs.n	8022008 <??SMP_Get_Link_Status_0>
 8021fd4:	8ae6      	ldrh	r6, [r4, #22]
 8021fd6:	f3c0 070b 	ubfx	r7, r0, #0, #12
 8021fda:	f3c6 060b 	ubfx	r6, r6, #0, #12
 8021fde:	42be      	cmp	r6, r7
 8021fe0:	d1f3      	bne.n	8021fca <??SMP_Get_Link_Status_2>
 8021fe2:	061b      	lsls	r3, r3, #24
 8021fe4:	eb12 4053 	adds.w	r0, r2, r3, lsr #17
 8021fe8:	d00e      	beq.n	8022008 <??SMP_Get_Link_Status_0>
 8021fea:	8ac0      	ldrh	r0, [r0, #22]
 8021fec:	04c2      	lsls	r2, r0, #19
 8021fee:	d507      	bpl.n	8022000 <??SMP_Get_Link_Status_3>
 8021ff0:	2101      	movs	r1, #1
 8021ff2:	0482      	lsls	r2, r0, #18
 8021ff4:	bf48      	it	mi
 8021ff6:	2103      	movmi	r1, #3
 8021ff8:	d402      	bmi.n	8022000 <??SMP_Get_Link_Status_3>
 8021ffa:	0442      	lsls	r2, r0, #17
 8021ffc:	bf48      	it	mi
 8021ffe:	2105      	movmi	r1, #5

08022000 <??SMP_Get_Link_Status_3>:
 8022000:	0400      	lsls	r0, r0, #16
 8022002:	bf58      	it	pl
 8022004:	f041 0108 	orrpl.w	r1, r1, #8

08022008 <??SMP_Get_Link_Status_0>:
 8022008:	4608      	mov	r0, r1
 802200a:	bcf0      	pop	{r4, r5, r6, r7}
 802200c:	4770      	bx	lr

0802200e <aci_gap_get_security_level>:
 802200e:	b570      	push	{r4, r5, r6, lr}
 8022010:	4606      	mov	r6, r0
 8022012:	460c      	mov	r4, r1
 8022014:	4615      	mov	r5, r2
 8022016:	f7ff ff59 	bl	8021ecc <SMP_Get_Remote_Device>
 802201a:	b198      	cbz	r0, 8022044 <??aci_gap_get_security_level_0>
 802201c:	4630      	mov	r0, r6
 802201e:	f7ff ffc2 	bl	8021fa6 <SMP_Get_Link_Status>
 8022022:	2101      	movs	r1, #1
 8022024:	0743      	lsls	r3, r0, #29
 8022026:	bf48      	it	mi
 8022028:	2004      	movmi	r0, #4
 802202a:	d402      	bmi.n	8022032 <??aci_gap_get_security_level_1>
 802202c:	0782      	lsls	r2, r0, #30
 802202e:	d504      	bpl.n	802203a <??aci_gap_get_security_level_2>
 8022030:	2003      	movs	r0, #3

08022032 <??aci_gap_get_security_level_1>:
 8022032:	7021      	strb	r1, [r4, #0]
 8022034:	7028      	strb	r0, [r5, #0]
 8022036:	2000      	movs	r0, #0
 8022038:	bd70      	pop	{r4, r5, r6, pc}

0802203a <??aci_gap_get_security_level_2>:
 802203a:	07c0      	lsls	r0, r0, #31
 802203c:	bf54      	ite	pl
 802203e:	2001      	movpl	r0, #1
 8022040:	2002      	movmi	r0, #2
 8022042:	e7f6      	b.n	8022032 <??aci_gap_get_security_level_1>

08022044 <??aci_gap_get_security_level_0>:
 8022044:	2100      	movs	r1, #0
 8022046:	e7f4      	b.n	8022032 <??aci_gap_get_security_level_1>

08022048 <SMP_Check_Encryption_KeySize>:
 8022048:	b4f0      	push	{r4, r5, r6, r7}
 802204a:	0002      	movs	r2, r0
 802204c:	d025      	beq.n	802209a <??SMP_Check_Encryption_KeySize_0>
 802204e:	f8df 2364 	ldr.w	r2, [pc, #868]	; 80223b4 <??DataTable20_2>
 8022052:	f892 316d 	ldrb.w	r3, [r2, #365]	; 0x16d
 8022056:	07dc      	lsls	r4, r3, #31
 8022058:	d41f      	bmi.n	802209a <??SMP_Check_Encryption_KeySize_0>
 802205a:	f8d2 20b8 	ldr.w	r2, [r2, #184]	; 0xb8
 802205e:	f8df 534c 	ldr.w	r5, [pc, #844]	; 80223ac <??DataTable20>
 8022062:	2300      	movs	r3, #0
 8022064:	4614      	mov	r4, r2
 8022066:	7dad      	ldrb	r5, [r5, #22]
 8022068:	e001      	b.n	802206e <??SMP_Check_Encryption_KeySize_1>

0802206a <??SMP_Check_Encryption_KeySize_2>:
 802206a:	1c5b      	adds	r3, r3, #1
 802206c:	3480      	adds	r4, #128	; 0x80

0802206e <??SMP_Check_Encryption_KeySize_1>:
 802206e:	b2de      	uxtb	r6, r3
 8022070:	42ae      	cmp	r6, r5
 8022072:	d212      	bcs.n	802209a <??SMP_Check_Encryption_KeySize_0>
 8022074:	8ae6      	ldrh	r6, [r4, #22]
 8022076:	f3c0 070b 	ubfx	r7, r0, #0, #12
 802207a:	f3c6 060b 	ubfx	r6, r6, #0, #12
 802207e:	42be      	cmp	r6, r7
 8022080:	d1f3      	bne.n	802206a <??SMP_Check_Encryption_KeySize_2>
 8022082:	061b      	lsls	r3, r3, #24
 8022084:	eb12 4253 	adds.w	r2, r2, r3, lsr #17
 8022088:	bf1c      	itt	ne
 802208a:	7a10      	ldrbne	r0, [r2, #8]
 802208c:	2800      	cmpne	r0, #0
 802208e:	d004      	beq.n	802209a <??SMP_Check_Encryption_KeySize_0>
 8022090:	7b90      	ldrb	r0, [r2, #14]
 8022092:	4288      	cmp	r0, r1
 8022094:	bf28      	it	cs
 8022096:	2000      	movcs	r0, #0
 8022098:	d200      	bcs.n	802209c <??SMP_Check_Encryption_KeySize_3>

0802209a <??SMP_Check_Encryption_KeySize_0>:
 802209a:	205f      	movs	r0, #95	; 0x5f

0802209c <??SMP_Check_Encryption_KeySize_3>:
 802209c:	bcf0      	pop	{r4, r5, r6, r7}
 802209e:	4770      	bx	lr

080220a0 <SMP_Forget_Device>:
 80220a0:	0001      	movs	r1, r0
 80220a2:	d100      	bne.n	80220a6 <??SMP_Forget_Device_0>
 80220a4:	4770      	bx	lr

080220a6 <??SMP_Forget_Device_0>:
 80220a6:	b470      	push	{r4, r5, r6}
 80220a8:	f8df 1308 	ldr.w	r1, [pc, #776]	; 80223b4 <??DataTable20_2>
 80220ac:	f891 216d 	ldrb.w	r2, [r1, #365]	; 0x16d
 80220b0:	07d3      	lsls	r3, r2, #31
 80220b2:	d41c      	bmi.n	80220ee <??SMP_Forget_Device_1>
 80220b4:	f8d1 10b8 	ldr.w	r1, [r1, #184]	; 0xb8
 80220b8:	4cbc      	ldr	r4, [pc, #752]	; (80223ac <??DataTable20>)
 80220ba:	2200      	movs	r2, #0
 80220bc:	460b      	mov	r3, r1
 80220be:	7da4      	ldrb	r4, [r4, #22]
 80220c0:	e001      	b.n	80220c6 <??SMP_Forget_Device_2>

080220c2 <??SMP_Forget_Device_3>:
 80220c2:	1c52      	adds	r2, r2, #1
 80220c4:	3380      	adds	r3, #128	; 0x80

080220c6 <??SMP_Forget_Device_2>:
 80220c6:	b2d5      	uxtb	r5, r2
 80220c8:	42a5      	cmp	r5, r4
 80220ca:	d210      	bcs.n	80220ee <??SMP_Forget_Device_1>
 80220cc:	8add      	ldrh	r5, [r3, #22]
 80220ce:	f3c0 060b 	ubfx	r6, r0, #0, #12
 80220d2:	f3c5 050b 	ubfx	r5, r5, #0, #12
 80220d6:	42b5      	cmp	r5, r6
 80220d8:	d1f3      	bne.n	80220c2 <??SMP_Forget_Device_3>
 80220da:	0612      	lsls	r2, r2, #24
 80220dc:	eb11 4052 	adds.w	r0, r1, r2, lsr #17
 80220e0:	d005      	beq.n	80220ee <??SMP_Forget_Device_1>
 80220e2:	f890 106f 	ldrb.w	r1, [r0, #111]	; 0x6f
 80220e6:	f041 0180 	orr.w	r1, r1, #128	; 0x80
 80220ea:	f880 106f 	strb.w	r1, [r0, #111]	; 0x6f

080220ee <??SMP_Forget_Device_1>:
 80220ee:	bc70      	pop	{r4, r5, r6}
 80220f0:	4770      	bx	lr

080220f2 <aci_gap_set_io_capability>:
 80220f2:	b430      	push	{r4, r5}
 80220f4:	2805      	cmp	r0, #5
 80220f6:	d302      	bcc.n	80220fe <??aci_gap_set_io_capability_0>
 80220f8:	2092      	movs	r0, #146	; 0x92
 80220fa:	bc30      	pop	{r4, r5}
 80220fc:	4770      	bx	lr

080220fe <??aci_gap_set_io_capability_0>:
 80220fe:	4bac      	ldr	r3, [pc, #688]	; (80223b0 <??DataTable20_1>)
 8022100:	49aa      	ldr	r1, [pc, #680]	; (80223ac <??DataTable20>)
 8022102:	2200      	movs	r2, #0
 8022104:	681c      	ldr	r4, [r3, #0]
 8022106:	7d8d      	ldrb	r5, [r1, #22]
 8022108:	e001      	b.n	802210e <??aci_gap_set_io_capability_1>

0802210a <??aci_gap_set_io_capability_2>:
 802210a:	1c52      	adds	r2, r2, #1
 802210c:	3480      	adds	r4, #128	; 0x80

0802210e <??aci_gap_set_io_capability_1>:
 802210e:	b2d1      	uxtb	r1, r2
 8022110:	42a9      	cmp	r1, r5
 8022112:	d205      	bcs.n	8022120 <??aci_gap_set_io_capability_3>
 8022114:	8ae1      	ldrh	r1, [r4, #22]
 8022116:	2900      	cmp	r1, #0
 8022118:	d0f7      	beq.n	802210a <??aci_gap_set_io_capability_2>
 802211a:	200c      	movs	r0, #12
 802211c:	bc30      	pop	{r4, r5}
 802211e:	4770      	bx	lr

08022120 <??aci_gap_set_io_capability_3>:
 8022120:	7218      	strb	r0, [r3, #8]
 8022122:	2000      	movs	r0, #0
 8022124:	bc30      	pop	{r4, r5}
 8022126:	4770      	bx	lr

08022128 <aci_gap_set_authentication_requirement>:
 8022128:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 802212c:	4680      	mov	r8, r0
 802212e:	2802      	cmp	r0, #2
 8022130:	bf3c      	itt	cc
 8022132:	f88d 1000 	strbcc.w	r1, [sp]
 8022136:	2902      	cmpcc	r1, #2
 8022138:	d21a      	bcs.n	8022170 <??aci_gap_set_authentication_requirement_0>
 802213a:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 802213c:	2c07      	cmp	r4, #7
 802213e:	d317      	bcc.n	8022170 <??aci_gap_set_authentication_requirement_0>
 8022140:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 8022142:	2d11      	cmp	r5, #17
 8022144:	d214      	bcs.n	8022170 <??aci_gap_set_authentication_requirement_0>
 8022146:	42a5      	cmp	r5, r4
 8022148:	d312      	bcc.n	8022170 <??aci_gap_set_authentication_requirement_0>
 802214a:	9e0c      	ldr	r6, [sp, #48]	; 0x30
 802214c:	2e02      	cmp	r6, #2
 802214e:	bf3e      	ittt	cc
 8022150:	f8dd 9034 	ldrcc.w	r9, [sp, #52]	; 0x34
 8022154:	4899      	ldrcc	r0, [pc, #612]	; (80223bc <??DataTable20_4>)
 8022156:	4581      	cmpcc	r9, r0
 8022158:	bf3c      	itt	cc
 802215a:	9f0e      	ldrcc	r7, [sp, #56]	; 0x38
 802215c:	2f02      	cmpcc	r7, #2
 802215e:	d207      	bcs.n	8022170 <??aci_gap_set_authentication_requirement_0>
 8022160:	4692      	mov	sl, r2
 8022162:	f1ba 0f02 	cmp.w	sl, #2
 8022166:	d803      	bhi.n	8022170 <??aci_gap_set_authentication_requirement_0>
 8022168:	469b      	mov	fp, r3
 802216a:	f1bb 0f02 	cmp.w	fp, #2
 802216e:	d302      	bcc.n	8022176 <??aci_gap_set_authentication_requirement_1>

08022170 <??aci_gap_set_authentication_requirement_0>:
 8022170:	2092      	movs	r0, #146	; 0x92
 8022172:	e8bd 8ff2 	ldmia.w	sp!, {r1, r4, r5, r6, r7, r8, r9, sl, fp, pc}

08022176 <??aci_gap_set_authentication_requirement_1>:
 8022176:	f002 f807 	bl	8024188 <SMP_Is_Any_Pairing_Ongoing>
 802217a:	b110      	cbz	r0, 8022182 <??aci_gap_set_authentication_requirement_2>
 802217c:	200c      	movs	r0, #12
 802217e:	e8bd 8ff2 	ldmia.w	sp!, {r1, r4, r5, r6, r7, r8, r9, sl, fp, pc}

08022182 <??aci_gap_set_authentication_requirement_2>:
 8022182:	f89d 1000 	ldrb.w	r1, [sp]
 8022186:	488e      	ldr	r0, [pc, #568]	; (80223c0 <??DataTable20_5>)
 8022188:	f880 8000 	strb.w	r8, [r0]
 802218c:	7041      	strb	r1, [r0, #1]
 802218e:	f880 a00a 	strb.w	sl, [r0, #10]
 8022192:	f880 b00b 	strb.w	fp, [r0, #11]
 8022196:	7084      	strb	r4, [r0, #2]
 8022198:	70c5      	strb	r5, [r0, #3]
 802219a:	7206      	strb	r6, [r0, #8]
 802219c:	f8c0 9004 	str.w	r9, [r0, #4]
 80221a0:	7247      	strb	r7, [r0, #9]
 80221a2:	2000      	movs	r0, #0
 80221a4:	e8bd 8ff2 	ldmia.w	sp!, {r1, r4, r5, r6, r7, r8, r9, sl, fp, pc}

080221a8 <aci_gap_set_authorization_requirement>:
 80221a8:	b510      	push	{r4, lr}
 80221aa:	460c      	mov	r4, r1
 80221ac:	f7ff fe8e 	bl	8021ecc <SMP_Get_Remote_Device>
 80221b0:	b908      	cbnz	r0, 80221b6 <??aci_gap_set_authorization_requirement_0>
 80221b2:	2002      	movs	r0, #2
 80221b4:	bd10      	pop	{r4, pc}

080221b6 <??aci_gap_set_authorization_requirement_0>:
 80221b6:	0021      	movs	r1, r4
 80221b8:	d010      	beq.n	80221dc <??aci_gap_set_authorization_requirement_1>
 80221ba:	2c01      	cmp	r4, #1
 80221bc:	d001      	beq.n	80221c2 <??aci_gap_set_authorization_requirement_2>
 80221be:	2092      	movs	r0, #146	; 0x92
 80221c0:	bd10      	pop	{r4, pc}

080221c2 <??aci_gap_set_authorization_requirement_2>:
 80221c2:	8ac1      	ldrh	r1, [r0, #22]
 80221c4:	f441 4100 	orr.w	r1, r1, #32768	; 0x8000
 80221c8:	82c1      	strh	r1, [r0, #22]
 80221ca:	f411 4fc0 	tst.w	r1, #24576	; 0x6000
 80221ce:	d009      	beq.n	80221e4 <??aci_gap_set_authorization_requirement_3>
 80221d0:	f3c1 010b 	ubfx	r1, r1, #0, #12
 80221d4:	2001      	movs	r0, #1
 80221d6:	f7fc ffdf 	bl	801f198 <EVT_aci_gap_authorization_req>
 80221da:	e003      	b.n	80221e4 <??aci_gap_set_authorization_requirement_3>

080221dc <??aci_gap_set_authorization_requirement_1>:
 80221dc:	8ac1      	ldrh	r1, [r0, #22]
 80221de:	f3c1 010e 	ubfx	r1, r1, #0, #15
 80221e2:	82c1      	strh	r1, [r0, #22]

080221e4 <??aci_gap_set_authorization_requirement_3>:
 80221e4:	2000      	movs	r0, #0
 80221e6:	bd10      	pop	{r4, pc}

080221e8 <aci_gap_allow_rebond>:
 80221e8:	f3c0 000b 	ubfx	r0, r0, #0, #12
 80221ec:	b430      	push	{r4, r5}
 80221ee:	2800      	cmp	r0, #0
 80221f0:	d027      	beq.n	8022242 <??aci_gap_allow_rebond_0>
 80221f2:	4970      	ldr	r1, [pc, #448]	; (80223b4 <??DataTable20_2>)
 80221f4:	f891 216d 	ldrb.w	r2, [r1, #365]	; 0x16d
 80221f8:	07d3      	lsls	r3, r2, #31
 80221fa:	d422      	bmi.n	8022242 <??aci_gap_allow_rebond_0>
 80221fc:	f8d1 10b8 	ldr.w	r1, [r1, #184]	; 0xb8
 8022200:	4c6a      	ldr	r4, [pc, #424]	; (80223ac <??DataTable20>)
 8022202:	2200      	movs	r2, #0
 8022204:	460b      	mov	r3, r1
 8022206:	7da4      	ldrb	r4, [r4, #22]
 8022208:	e001      	b.n	802220e <??aci_gap_allow_rebond_1>

0802220a <??aci_gap_allow_rebond_2>:
 802220a:	1c52      	adds	r2, r2, #1
 802220c:	3380      	adds	r3, #128	; 0x80

0802220e <??aci_gap_allow_rebond_1>:
 802220e:	b2d5      	uxtb	r5, r2
 8022210:	42a5      	cmp	r5, r4
 8022212:	d216      	bcs.n	8022242 <??aci_gap_allow_rebond_0>
 8022214:	8add      	ldrh	r5, [r3, #22]
 8022216:	f3c5 050b 	ubfx	r5, r5, #0, #12
 802221a:	4285      	cmp	r5, r0
 802221c:	d1f5      	bne.n	802220a <??aci_gap_allow_rebond_2>
 802221e:	0612      	lsls	r2, r2, #24
 8022220:	eb11 4052 	adds.w	r0, r1, r2, lsr #17
 8022224:	d00d      	beq.n	8022242 <??aci_gap_allow_rebond_0>
 8022226:	f890 106f 	ldrb.w	r1, [r0, #111]	; 0x6f
 802222a:	f001 020c 	and.w	r2, r1, #12
 802222e:	2a08      	cmp	r2, #8
 8022230:	bf03      	ittte	eq
 8022232:	f041 010c 	orreq.w	r1, r1, #12
 8022236:	f880 106f 	strbeq.w	r1, [r0, #111]	; 0x6f
 802223a:	2000      	moveq	r0, #0
 802223c:	200c      	movne	r0, #12
 802223e:	bc30      	pop	{r4, r5}
 8022240:	4770      	bx	lr

08022242 <??aci_gap_allow_rebond_0>:
 8022242:	2002      	movs	r0, #2
 8022244:	bc30      	pop	{r4, r5}
 8022246:	4770      	bx	lr

08022248 <aci_gap_authorization_resp>:
 8022248:	b4f0      	push	{r4, r5, r6, r7}
 802224a:	0002      	movs	r2, r0
 802224c:	d022      	beq.n	8022294 <??aci_gap_authorization_resp_0>
 802224e:	4a59      	ldr	r2, [pc, #356]	; (80223b4 <??DataTable20_2>)
 8022250:	f892 316d 	ldrb.w	r3, [r2, #365]	; 0x16d
 8022254:	07dc      	lsls	r4, r3, #31
 8022256:	d41d      	bmi.n	8022294 <??aci_gap_authorization_resp_0>
 8022258:	f8d2 20b8 	ldr.w	r2, [r2, #184]	; 0xb8
 802225c:	4d53      	ldr	r5, [pc, #332]	; (80223ac <??DataTable20>)
 802225e:	2300      	movs	r3, #0
 8022260:	4614      	mov	r4, r2
 8022262:	7dad      	ldrb	r5, [r5, #22]
 8022264:	e001      	b.n	802226a <??aci_gap_authorization_resp_1>

08022266 <??aci_gap_authorization_resp_2>:
 8022266:	1c5b      	adds	r3, r3, #1
 8022268:	3480      	adds	r4, #128	; 0x80

0802226a <??aci_gap_authorization_resp_1>:
 802226a:	b2de      	uxtb	r6, r3
 802226c:	42ae      	cmp	r6, r5
 802226e:	d211      	bcs.n	8022294 <??aci_gap_authorization_resp_0>
 8022270:	8ae6      	ldrh	r6, [r4, #22]
 8022272:	f3c0 070b 	ubfx	r7, r0, #0, #12
 8022276:	f3c6 060b 	ubfx	r6, r6, #0, #12
 802227a:	42be      	cmp	r6, r7
 802227c:	d1f3      	bne.n	8022266 <??aci_gap_authorization_resp_2>
 802227e:	061b      	lsls	r3, r3, #24
 8022280:	eb12 4053 	adds.w	r0, r2, r3, lsr #17
 8022284:	d006      	beq.n	8022294 <??aci_gap_authorization_resp_0>
 8022286:	2901      	cmp	r1, #1
 8022288:	bf18      	it	ne
 802228a:	2902      	cmpne	r1, #2
 802228c:	d003      	beq.n	8022296 <??aci_gap_authorization_resp_3>
 802228e:	2092      	movs	r0, #146	; 0x92
 8022290:	bcf0      	pop	{r4, r5, r6, r7}
 8022292:	4770      	bx	lr

08022294 <??aci_gap_authorization_resp_0>:
 8022294:	e043      	b.n	802231e <?Subroutine0>

08022296 <??aci_gap_authorization_resp_3>:
 8022296:	8ac2      	ldrh	r2, [r0, #22]
 8022298:	0413      	lsls	r3, r2, #16
 802229a:	d507      	bpl.n	80222ac <??aci_gap_authorization_resp_4>
 802229c:	2901      	cmp	r1, #1
 802229e:	bf04      	itt	eq
 80222a0:	f3c2 020e 	ubfxeq	r2, r2, #0, #15
 80222a4:	82c2      	strheq	r2, [r0, #22]
 80222a6:	2000      	movs	r0, #0
 80222a8:	bcf0      	pop	{r4, r5, r6, r7}
 80222aa:	4770      	bx	lr

080222ac <??aci_gap_authorization_resp_4>:
 80222ac:	200c      	movs	r0, #12
 80222ae:	bcf0      	pop	{r4, r5, r6, r7}
 80222b0:	4770      	bx	lr

080222b2 <aci_gap_pass_key_resp>:
 80222b2:	b4f0      	push	{r4, r5, r6, r7}
 80222b4:	0002      	movs	r2, r0
 80222b6:	d01b      	beq.n	80222f0 <??aci_gap_pass_key_resp_0>
 80222b8:	4a3e      	ldr	r2, [pc, #248]	; (80223b4 <??DataTable20_2>)
 80222ba:	f892 316d 	ldrb.w	r3, [r2, #365]	; 0x16d
 80222be:	07dc      	lsls	r4, r3, #31
 80222c0:	d416      	bmi.n	80222f0 <??aci_gap_pass_key_resp_0>
 80222c2:	328c      	adds	r2, #140	; 0x8c
 80222c4:	6ad2      	ldr	r2, [r2, #44]	; 0x2c
 80222c6:	4d39      	ldr	r5, [pc, #228]	; (80223ac <??DataTable20>)
 80222c8:	2300      	movs	r3, #0
 80222ca:	4614      	mov	r4, r2
 80222cc:	7dad      	ldrb	r5, [r5, #22]
 80222ce:	e001      	b.n	80222d4 <??aci_gap_pass_key_resp_1>

080222d0 <??aci_gap_pass_key_resp_2>:
 80222d0:	1c5b      	adds	r3, r3, #1
 80222d2:	3480      	adds	r4, #128	; 0x80

080222d4 <??aci_gap_pass_key_resp_1>:
 80222d4:	b2de      	uxtb	r6, r3
 80222d6:	42ae      	cmp	r6, r5
 80222d8:	d20a      	bcs.n	80222f0 <??aci_gap_pass_key_resp_0>
 80222da:	8ae6      	ldrh	r6, [r4, #22]
 80222dc:	f3c0 070b 	ubfx	r7, r0, #0, #12
 80222e0:	f3c6 060b 	ubfx	r6, r6, #0, #12
 80222e4:	42be      	cmp	r6, r7
 80222e6:	d1f3      	bne.n	80222d0 <??aci_gap_pass_key_resp_2>
 80222e8:	061b      	lsls	r3, r3, #24
 80222ea:	eb02 4053 	add.w	r0, r2, r3, lsr #17
 80222ee:	e000      	b.n	80222f2 <??aci_gap_pass_key_resp_3>

080222f0 <??aci_gap_pass_key_resp_0>:
 80222f0:	2000      	movs	r0, #0

080222f2 <??aci_gap_pass_key_resp_3>:
 80222f2:	4a32      	ldr	r2, [pc, #200]	; (80223bc <??DataTable20_4>)
 80222f4:	4291      	cmp	r1, r2
 80222f6:	bf28      	it	cs
 80222f8:	2092      	movcs	r0, #146	; 0x92
 80222fa:	d20e      	bcs.n	802231a <??aci_gap_pass_key_resp_4>
 80222fc:	b900      	cbnz	r0, 8022300 <??aci_gap_pass_key_resp_5>
 80222fe:	e00e      	b.n	802231e <?Subroutine0>

08022300 <??aci_gap_pass_key_resp_5>:
 8022300:	7a42      	ldrb	r2, [r0, #9]
 8022302:	2a02      	cmp	r2, #2
 8022304:	bf18      	it	ne
 8022306:	200c      	movne	r0, #12
 8022308:	d107      	bne.n	802231a <??aci_gap_pass_key_resp_4>
 802230a:	4a2a      	ldr	r2, [pc, #168]	; (80223b4 <??DataTable20_2>)
 802230c:	f8c2 108c 	str.w	r1, [r2, #140]	; 0x8c
 8022310:	7b41      	ldrb	r1, [r0, #13]
 8022312:	f041 0110 	orr.w	r1, r1, #16
 8022316:	7341      	strb	r1, [r0, #13]
 8022318:	2000      	movs	r0, #0

0802231a <??aci_gap_pass_key_resp_4>:
 802231a:	bcf0      	pop	{r4, r5, r6, r7}
 802231c:	4770      	bx	lr

0802231e <?Subroutine0>:
 802231e:	2002      	movs	r0, #2
 8022320:	bcf0      	pop	{r4, r5, r6, r7}
 8022322:	4770      	bx	lr

08022324 <SMP_Is_In_Blacklist>:
 8022324:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8022326:	4605      	mov	r5, r0
 8022328:	4822      	ldr	r0, [pc, #136]	; (80223b4 <??DataTable20_2>)
 802232a:	2691      	movs	r6, #145	; 0x91
 802232c:	f8d0 70bc 	ldr.w	r7, [r0, #188]	; 0xbc
 8022330:	2403      	movs	r4, #3

08022332 <??SMP_Is_In_Blacklist_0>:
 8022332:	2206      	movs	r2, #6
 8022334:	4629      	mov	r1, r5
 8022336:	1c78      	adds	r0, r7, #1
 8022338:	f00e fe02 	bl	8030f40 <memcmp>
 802233c:	b918      	cbnz	r0, 8022346 <??SMP_Is_In_Blacklist_1>
 802233e:	7838      	ldrb	r0, [r7, #0]
 8022340:	0601      	lsls	r1, r0, #24
 8022342:	d503      	bpl.n	802234c <??SMP_Is_In_Blacklist_2>
 8022344:	2600      	movs	r6, #0

08022346 <??SMP_Is_In_Blacklist_1>:
 8022346:	1dff      	adds	r7, r7, #7
 8022348:	1e64      	subs	r4, r4, #1
 802234a:	d1f2      	bne.n	8022332 <??SMP_Is_In_Blacklist_0>

0802234c <??SMP_Is_In_Blacklist_2>:
 802234c:	4630      	mov	r0, r6
 802234e:	bdf2      	pop	{r1, r4, r5, r6, r7, pc}

08022350 <SMP_Remove_From_Blacklist>:
 8022350:	b570      	push	{r4, r5, r6, lr}
 8022352:	4d18      	ldr	r5, [pc, #96]	; (80223b4 <??DataTable20_2>)
 8022354:	f8d5 60bc 	ldr.w	r6, [r5, #188]	; 0xbc
 8022358:	4604      	mov	r4, r0
 802235a:	2206      	movs	r2, #6
 802235c:	4621      	mov	r1, r4
 802235e:	1c70      	adds	r0, r6, #1
 8022360:	f00e fdee 	bl	8030f40 <memcmp>
 8022364:	b918      	cbnz	r0, 802236e <??SMP_Remove_From_Blacklist_0>
 8022366:	2107      	movs	r1, #7
 8022368:	4630      	mov	r0, r6
 802236a:	f00e fdb9 	bl	8030ee0 <__aeabi_memclr>

0802236e <??SMP_Remove_From_Blacklist_0>:
 802236e:	f8d5 00bc 	ldr.w	r0, [r5, #188]	; 0xbc
 8022372:	2206      	movs	r2, #6
 8022374:	4621      	mov	r1, r4
 8022376:	1dc6      	adds	r6, r0, #7
 8022378:	1c70      	adds	r0, r6, #1
 802237a:	f00e fde1 	bl	8030f40 <memcmp>
 802237e:	b918      	cbnz	r0, 8022388 <??SMP_Remove_From_Blacklist_1>
 8022380:	2107      	movs	r1, #7
 8022382:	4630      	mov	r0, r6
 8022384:	f00e fdac 	bl	8030ee0 <__aeabi_memclr>

08022388 <??SMP_Remove_From_Blacklist_1>:
 8022388:	f8d5 00bc 	ldr.w	r0, [r5, #188]	; 0xbc
 802238c:	2206      	movs	r2, #6
 802238e:	4621      	mov	r1, r4
 8022390:	f100 050e 	add.w	r5, r0, #14
 8022394:	1c68      	adds	r0, r5, #1
 8022396:	f00e fdd3 	bl	8030f40 <memcmp>
 802239a:	b928      	cbnz	r0, 80223a8 <??SMP_Remove_From_Blacklist_2>
 802239c:	4628      	mov	r0, r5
 802239e:	2107      	movs	r1, #7
 80223a0:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 80223a4:	f00e bd9c 	b.w	8030ee0 <__aeabi_memclr>

080223a8 <??SMP_Remove_From_Blacklist_2>:
 80223a8:	bd70      	pop	{r4, r5, r6, pc}
	...

080223ac <??DataTable20>:
 80223ac:	36e8 2000                                   .6. 

080223b0 <??DataTable20_1>:
 80223b0:	37c8 2000                                   .7. 

080223b4 <??DataTable20_2>:
 80223b4:	3710 2000                                   .7. 

080223b8 <??DataTable20_3>:
 80223b8:	378c 2000                                   .7. 

080223bc <??DataTable20_4>:
 80223bc:	4240 000f                                   @B..

080223c0 <??DataTable20_5>:
 80223c0:	3798 2000                                   .7. 

080223c4 <SMP_Sign_Packet>:
 80223c4:	b570      	push	{r4, r5, r6, lr}
 80223c6:	b088      	sub	sp, #32
 80223c8:	460d      	mov	r5, r1
 80223ca:	f7ff fd7f 	bl	8021ecc <SMP_Get_Remote_Device>
 80223ce:	0004      	movs	r4, r0
 80223d0:	bf08      	it	eq
 80223d2:	2002      	moveq	r0, #2
 80223d4:	d024      	beq.n	8022420 <??SMP_Sign_Packet_0>
 80223d6:	a904      	add	r1, sp, #16
 80223d8:	f104 0018 	add.w	r0, r4, #24
 80223dc:	f7ff f8f1 	bl	80215c2 <SMA_Generate_CSRK>
 80223e0:	88ee      	ldrh	r6, [r5, #6]
 80223e2:	4623      	mov	r3, r4
 80223e4:	2204      	movs	r2, #4
 80223e6:	1d31      	adds	r1, r6, #4
 80223e8:	b289      	uxth	r1, r1
 80223ea:	4628      	mov	r0, r5
 80223ec:	f002 fd05 	bl	8024dfa <ACL_PM_Set_Data>
 80223f0:	1d36      	adds	r6, r6, #4
 80223f2:	466b      	mov	r3, sp
 80223f4:	b2f2      	uxtb	r2, r6
 80223f6:	4629      	mov	r1, r5
 80223f8:	a804      	add	r0, sp, #16
 80223fa:	f7ff fa1f 	bl	802183c <SMA_CMAC_generate_tag>
 80223fe:	1d31      	adds	r1, r6, #4
 8022400:	ab02      	add	r3, sp, #8
 8022402:	2208      	movs	r2, #8
 8022404:	b289      	uxth	r1, r1
 8022406:	4628      	mov	r0, r5
 8022408:	f002 fcf7 	bl	8024dfa <ACL_PM_Set_Data>
 802240c:	3608      	adds	r6, #8
 802240e:	80ee      	strh	r6, [r5, #6]
 8022410:	6820      	ldr	r0, [r4, #0]
 8022412:	f110 0f01 	cmn.w	r0, #1
 8022416:	bf0c      	ite	eq
 8022418:	2000      	moveq	r0, #0
 802241a:	1c40      	addne	r0, r0, #1
 802241c:	6020      	str	r0, [r4, #0]
 802241e:	2000      	movs	r0, #0

08022420 <??SMP_Sign_Packet_0>:
 8022420:	b008      	add	sp, #32
 8022422:	bd70      	pop	{r4, r5, r6, pc}

08022424 <SMP_Validate_Signed_Packet>:
 8022424:	b5f0      	push	{r4, r5, r6, r7, lr}
 8022426:	b08b      	sub	sp, #44	; 0x2c
 8022428:	460d      	mov	r5, r1
 802242a:	88ee      	ldrh	r6, [r5, #6]
 802242c:	f7ff fd4e 	bl	8021ecc <SMP_Get_Remote_Device>
 8022430:	0004      	movs	r4, r0
 8022432:	bf08      	it	eq
 8022434:	2002      	moveq	r0, #2
 8022436:	d039      	beq.n	80224ac <??SMP_Validate_Signed_Packet_0>
 8022438:	7ea0      	ldrb	r0, [r4, #26]
 802243a:	0641      	lsls	r1, r0, #25
 802243c:	d532      	bpl.n	80224a4 <??SMP_Validate_Signed_Packet_1>
 802243e:	2210      	movs	r2, #16
 8022440:	f104 015e 	add.w	r1, r4, #94	; 0x5e
 8022444:	a803      	add	r0, sp, #12
 8022446:	f00e fd4e 	bl	8030ee6 <__aeabi_memcpy>
 802244a:	f1a6 0108 	sub.w	r1, r6, #8
 802244e:	466b      	mov	r3, sp
 8022450:	220c      	movs	r2, #12
 8022452:	b289      	uxth	r1, r1
 8022454:	4628      	mov	r0, r5
 8022456:	f002 fcc6 	bl	8024de6 <ACL_PM_Get_Data>
 802245a:	f89d 0000 	ldrb.w	r0, [sp]
 802245e:	f89d 1001 	ldrb.w	r1, [sp, #1]
 8022462:	f89d 7002 	ldrb.w	r7, [sp, #2]
 8022466:	f89d 2003 	ldrb.w	r2, [sp, #3]
 802246a:	043f      	lsls	r7, r7, #16
 802246c:	ea47 6702 	orr.w	r7, r7, r2, lsl #24
 8022470:	ea47 2701 	orr.w	r7, r7, r1, lsl #8
 8022474:	4307      	orrs	r7, r0
 8022476:	6860      	ldr	r0, [r4, #4]
 8022478:	f110 0f01 	cmn.w	r0, #1
 802247c:	d001      	beq.n	8022482 <??SMP_Validate_Signed_Packet_2>
 802247e:	42b8      	cmp	r0, r7
 8022480:	d213      	bcs.n	80224aa <??SMP_Validate_Signed_Packet_3>

08022482 <??SMP_Validate_Signed_Packet_2>:
 8022482:	f1a6 0208 	sub.w	r2, r6, #8
 8022486:	ab07      	add	r3, sp, #28
 8022488:	b2d2      	uxtb	r2, r2
 802248a:	4629      	mov	r1, r5
 802248c:	a803      	add	r0, sp, #12
 802248e:	f7ff f9d5 	bl	802183c <SMA_CMAC_generate_tag>
 8022492:	2208      	movs	r2, #8
 8022494:	a909      	add	r1, sp, #36	; 0x24
 8022496:	a801      	add	r0, sp, #4
 8022498:	f00e fd52 	bl	8030f40 <memcmp>
 802249c:	b928      	cbnz	r0, 80224aa <??SMP_Validate_Signed_Packet_3>
 802249e:	6067      	str	r7, [r4, #4]
 80224a0:	b00b      	add	sp, #44	; 0x2c
 80224a2:	bdf0      	pop	{r4, r5, r6, r7, pc}

080224a4 <??SMP_Validate_Signed_Packet_1>:
 80224a4:	205a      	movs	r0, #90	; 0x5a
 80224a6:	b00b      	add	sp, #44	; 0x2c
 80224a8:	bdf0      	pop	{r4, r5, r6, r7, pc}

080224aa <??SMP_Validate_Signed_Packet_3>:
 80224aa:	2005      	movs	r0, #5

080224ac <??SMP_Validate_Signed_Packet_0>:
 80224ac:	b00b      	add	sp, #44	; 0x2c
 80224ae:	bdf0      	pop	{r4, r5, r6, r7, pc}

080224b0 <LE4_TO_U32>:
 80224b0:	4601      	mov	r1, r0
 80224b2:	7808      	ldrb	r0, [r1, #0]
 80224b4:	784a      	ldrb	r2, [r1, #1]
 80224b6:	788b      	ldrb	r3, [r1, #2]
 80224b8:	78c9      	ldrb	r1, [r1, #3]
 80224ba:	041b      	lsls	r3, r3, #16
 80224bc:	ea43 6301 	orr.w	r3, r3, r1, lsl #24
 80224c0:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
 80224c4:	4318      	orrs	r0, r3
 80224c6:	4770      	bx	lr

080224c8 <U32_TO_LE4>:
 80224c8:	7001      	strb	r1, [r0, #0]
 80224ca:	0a0a      	lsrs	r2, r1, #8
 80224cc:	7042      	strb	r2, [r0, #1]
 80224ce:	0c0b      	lsrs	r3, r1, #16
 80224d0:	7083      	strb	r3, [r0, #2]
 80224d2:	0e09      	lsrs	r1, r1, #24
 80224d4:	70c1      	strb	r1, [r0, #3]
 80224d6:	4770      	bx	lr

080224d8 <SMP_remDev_Index>:
 80224d8:	b410      	push	{r4}
 80224da:	8ac1      	ldrh	r1, [r0, #22]
 80224dc:	f8df 2958 	ldr.w	r2, [pc, #2392]	; 8022e38 <??DataTable11>
 80224e0:	f8df 3958 	ldr.w	r3, [pc, #2392]	; 8022e3c <??DataTable11_1>
 80224e4:	2000      	movs	r0, #0
 80224e6:	f8d2 20b8 	ldr.w	r2, [r2, #184]	; 0xb8
 80224ea:	7d9b      	ldrb	r3, [r3, #22]
 80224ec:	e001      	b.n	80224f2 <??SMP_remDev_Index_0>

080224ee <??SMP_remDev_Index_1>:
 80224ee:	1c40      	adds	r0, r0, #1
 80224f0:	3280      	adds	r2, #128	; 0x80

080224f2 <??SMP_remDev_Index_0>:
 80224f2:	b2c4      	uxtb	r4, r0
 80224f4:	429c      	cmp	r4, r3
 80224f6:	d202      	bcs.n	80224fe <??SMP_remDev_Index_2>
 80224f8:	8ad4      	ldrh	r4, [r2, #22]
 80224fa:	428c      	cmp	r4, r1
 80224fc:	d1f7      	bne.n	80224ee <??SMP_remDev_Index_1>

080224fe <??SMP_remDev_Index_2>:
 80224fe:	b2c0      	uxtb	r0, r0
 8022500:	bc10      	pop	{r4}
 8022502:	4770      	bx	lr

08022504 <SMP_Stop_Timer>:
 8022504:	b580      	push	{r7, lr}
 8022506:	f7ff ffe7 	bl	80224d8 <SMP_remDev_Index>
 802250a:	3008      	adds	r0, #8
 802250c:	b2c0      	uxtb	r0, r0
 802250e:	e8bd 4002 	ldmia.w	sp!, {r1, lr}
 8022512:	f005 ba19 	b.w	8027948 <BLEPLAT_TimerStop>

08022516 <SMP_Reset_Timer>:
 8022516:	b510      	push	{r4, lr}
 8022518:	f7ff ffde 	bl	80224d8 <SMP_remDev_Index>
 802251c:	f100 0408 	add.w	r4, r0, #8
 8022520:	b2e0      	uxtb	r0, r4
 8022522:	f005 fa11 	bl	8027948 <BLEPLAT_TimerStop>
 8022526:	b2e0      	uxtb	r0, r4
 8022528:	f247 5130 	movw	r1, #30000	; 0x7530
 802252c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8022530:	f005 ba08 	b.w	8027944 <BLEPLAT_TimerStart>

08022534 <SMP_Add_To_SDB>:
 8022534:	b538      	push	{r3, r4, r5, lr}
 8022536:	b094      	sub	sp, #80	; 0x50
 8022538:	4604      	mov	r4, r0
 802253a:	7b20      	ldrb	r0, [r4, #12]
 802253c:	f000 0003 	and.w	r0, r0, #3
 8022540:	2803      	cmp	r0, #3
 8022542:	f040 8095 	bne.w	8022670 <??SMP_Add_To_SDB_0>
 8022546:	2150      	movs	r1, #80	; 0x50
 8022548:	4668      	mov	r0, sp
 802254a:	f00e fcc9 	bl	8030ee0 <__aeabi_memclr>
 802254e:	22fe      	movs	r2, #254	; 0xfe
 8022550:	f88d 2000 	strb.w	r2, [sp]
 8022554:	7ba0      	ldrb	r0, [r4, #14]
 8022556:	2206      	movs	r2, #6
 8022558:	f104 0178 	add.w	r1, r4, #120	; 0x78
 802255c:	f88d 0003 	strb.w	r0, [sp, #3]
 8022560:	f10d 003e 	add.w	r0, sp, #62	; 0x3e
 8022564:	f00e fcbf 	bl	8030ee6 <__aeabi_memcpy>
 8022568:	f104 056e 	add.w	r5, r4, #110	; 0x6e
 802256c:	f89d 1001 	ldrb.w	r1, [sp, #1]
 8022570:	7c28      	ldrb	r0, [r5, #16]
 8022572:	4301      	orrs	r1, r0
 8022574:	f88d 1001 	strb.w	r1, [sp, #1]
 8022578:	7ea0      	ldrb	r0, [r4, #26]
 802257a:	06c1      	lsls	r1, r0, #27
 802257c:	d51c      	bpl.n	80225b8 <??SMP_Add_To_SDB_1>
 802257e:	f104 004c 	add.w	r0, r4, #76	; 0x4c
 8022582:	7802      	ldrb	r2, [r0, #0]
 8022584:	f10d 0106 	add.w	r1, sp, #6
 8022588:	f88d 2004 	strb.w	r2, [sp, #4]
 802258c:	7840      	ldrb	r0, [r0, #1]
 802258e:	f88d 0005 	strb.w	r0, [sp, #5]
 8022592:	f104 0044 	add.w	r0, r4, #68	; 0x44
 8022596:	6802      	ldr	r2, [r0, #0]
 8022598:	600a      	str	r2, [r1, #0]
 802259a:	6842      	ldr	r2, [r0, #4]
 802259c:	f10d 000e 	add.w	r0, sp, #14
 80225a0:	604a      	str	r2, [r1, #4]
 80225a2:	2210      	movs	r2, #16
 80225a4:	f104 0134 	add.w	r1, r4, #52	; 0x34
 80225a8:	f00e fc9d 	bl	8030ee6 <__aeabi_memcpy>
 80225ac:	f89d 0001 	ldrb.w	r0, [sp, #1]
 80225b0:	f040 0080 	orr.w	r0, r0, #128	; 0x80
 80225b4:	f88d 0001 	strb.w	r0, [sp, #1]

080225b8 <??SMP_Add_To_SDB_1>:
 80225b8:	7828      	ldrb	r0, [r5, #0]
 80225ba:	0701      	lsls	r1, r0, #28
 80225bc:	d508      	bpl.n	80225d0 <??SMP_Add_To_SDB_2>
 80225be:	f88d 0002 	strb.w	r0, [sp, #2]
 80225c2:	2210      	movs	r2, #16
 80225c4:	f104 0124 	add.w	r1, r4, #36	; 0x24
 80225c8:	f10d 000e 	add.w	r0, sp, #14
 80225cc:	f00e fc8b 	bl	8030ee6 <__aeabi_memcpy>

080225d0 <??SMP_Add_To_SDB_2>:
 80225d0:	7ee0      	ldrb	r0, [r4, #27]
 80225d2:	f010 0f05 	tst.w	r0, #5
 80225d6:	d00b      	beq.n	80225f0 <??SMP_Add_To_SDB_3>
 80225d8:	2202      	movs	r2, #2
 80225da:	f104 0118 	add.w	r1, r4, #24
 80225de:	a811      	add	r0, sp, #68	; 0x44
 80225e0:	f00e fc81 	bl	8030ee6 <__aeabi_memcpy>
 80225e4:	f89d 0001 	ldrb.w	r0, [sp, #1]
 80225e8:	f040 0010 	orr.w	r0, r0, #16
 80225ec:	f88d 0001 	strb.w	r0, [sp, #1]

080225f0 <??SMP_Add_To_SDB_3>:
 80225f0:	7ea0      	ldrb	r0, [r4, #26]
 80225f2:	0681      	lsls	r1, r0, #26
 80225f4:	d50c      	bpl.n	8022610 <??SMP_Add_To_SDB_4>
 80225f6:	2210      	movs	r2, #16
 80225f8:	f104 014e 	add.w	r1, r4, #78	; 0x4e
 80225fc:	f10d 001e 	add.w	r0, sp, #30
 8022600:	f00e fc71 	bl	8030ee6 <__aeabi_memcpy>
 8022604:	f89d 0001 	ldrb.w	r0, [sp, #1]
 8022608:	f040 0020 	orr.w	r0, r0, #32
 802260c:	f88d 0001 	strb.w	r0, [sp, #1]

08022610 <??SMP_Add_To_SDB_4>:
 8022610:	7ea0      	ldrb	r0, [r4, #26]
 8022612:	0641      	lsls	r1, r0, #25
 8022614:	d50c      	bpl.n	8022630 <??SMP_Add_To_SDB_5>
 8022616:	2210      	movs	r2, #16
 8022618:	f104 015e 	add.w	r1, r4, #94	; 0x5e
 802261c:	f10d 002e 	add.w	r0, sp, #46	; 0x2e
 8022620:	f00e fc61 	bl	8030ee6 <__aeabi_memcpy>
 8022624:	f89d 0001 	ldrb.w	r0, [sp, #1]
 8022628:	f040 0040 	orr.w	r0, r0, #64	; 0x40
 802262c:	f88d 0001 	strb.w	r0, [sp, #1]

08022630 <??SMP_Add_To_SDB_5>:
 8022630:	8ae0      	ldrh	r0, [r4, #22]
 8022632:	0481      	lsls	r1, r0, #18
 8022634:	d504      	bpl.n	8022640 <??SMP_Add_To_SDB_6>
 8022636:	f89d 0001 	ldrb.w	r0, [sp, #1]
 802263a:	f040 0002 	orr.w	r0, r0, #2
 802263e:	e005      	b.n	802264c <??SMP_Add_To_SDB_7>

08022640 <??SMP_Add_To_SDB_6>:
 8022640:	0440      	lsls	r0, r0, #17
 8022642:	d505      	bpl.n	8022650 <??SMP_Add_To_SDB_8>
 8022644:	f89d 0001 	ldrb.w	r0, [sp, #1]
 8022648:	f040 0004 	orr.w	r0, r0, #4

0802264c <??SMP_Add_To_SDB_7>:
 802264c:	f88d 0001 	strb.w	r0, [sp, #1]

08022650 <??SMP_Add_To_SDB_8>:
 8022650:	8ae0      	ldrh	r0, [r4, #22]
 8022652:	0401      	lsls	r1, r0, #16
 8022654:	d505      	bpl.n	8022662 <??SMP_Add_To_SDB_9>
 8022656:	f89d 0001 	ldrb.w	r0, [sp, #1]
 802265a:	f040 0008 	orr.w	r0, r0, #8
 802265e:	f88d 0001 	strb.w	r0, [sp, #1]

08022662 <??SMP_Add_To_SDB_9>:
 8022662:	6820      	ldr	r0, [r4, #0]
 8022664:	9012      	str	r0, [sp, #72]	; 0x48
 8022666:	6860      	ldr	r0, [r4, #4]
 8022668:	9013      	str	r0, [sp, #76]	; 0x4c
 802266a:	4668      	mov	r0, sp
 802266c:	f7fe fdd0 	bl	8021210 <SDB_Write_Sec_Record>

08022670 <??SMP_Add_To_SDB_0>:
 8022670:	b015      	add	sp, #84	; 0x54
 8022672:	bd30      	pop	{r4, r5, pc}

08022674 <smp_Check_Incoming_Pairing_Parameters>:
 8022674:	4601      	mov	r1, r0
 8022676:	6889      	ldr	r1, [r1, #8]
 8022678:	2000      	movs	r0, #0
 802267a:	7b4a      	ldrb	r2, [r1, #13]
 802267c:	2a05      	cmp	r2, #5
 802267e:	bf3c      	itt	cc
 8022680:	7b8a      	ldrbcc	r2, [r1, #14]
 8022682:	2a02      	cmpcc	r2, #2
 8022684:	d202      	bcs.n	802268c <??smp_Check_Incoming_Pairing_Parameters_0>
 8022686:	7bca      	ldrb	r2, [r1, #15]
 8022688:	0793      	lsls	r3, r2, #30
 802268a:	d501      	bpl.n	8022690 <??smp_Check_Incoming_Pairing_Parameters_1>

0802268c <??smp_Check_Incoming_Pairing_Parameters_0>:
 802268c:	200a      	movs	r0, #10
 802268e:	4770      	bx	lr

08022690 <??smp_Check_Incoming_Pairing_Parameters_1>:
 8022690:	f8df 27a4 	ldr.w	r2, [pc, #1956]	; 8022e38 <??DataTable11>
 8022694:	7c09      	ldrb	r1, [r1, #16]
 8022696:	f892 308a 	ldrb.w	r3, [r2, #138]	; 0x8a
 802269a:	4299      	cmp	r1, r3
 802269c:	d301      	bcc.n	80226a2 <??smp_Check_Incoming_Pairing_Parameters_2>
 802269e:	2911      	cmp	r1, #17
 80226a0:	d300      	bcc.n	80226a4 <??smp_Check_Incoming_Pairing_Parameters_3>

080226a2 <??smp_Check_Incoming_Pairing_Parameters_2>:
 80226a2:	2006      	movs	r0, #6

080226a4 <??smp_Check_Incoming_Pairing_Parameters_3>:
 80226a4:	4770      	bx	lr

080226a6 <smp_Get_Pairing_Parameters_From_Peer_Packet>:
 80226a6:	b430      	push	{r4, r5}
 80226a8:	6882      	ldr	r2, [r0, #8]
 80226aa:	7b53      	ldrb	r3, [r2, #13]
 80226ac:	72cb      	strb	r3, [r1, #11]
 80226ae:	6882      	ldr	r2, [r0, #8]
 80226b0:	7b93      	ldrb	r3, [r2, #14]
 80226b2:	2b01      	cmp	r3, #1
 80226b4:	d103      	bne.n	80226be <??smp_Get_Pairing_Parameters_From_Peer_Packet_0>
 80226b6:	7a8a      	ldrb	r2, [r1, #10]
 80226b8:	f042 0202 	orr.w	r2, r2, #2
 80226bc:	728a      	strb	r2, [r1, #10]

080226be <??smp_Get_Pairing_Parameters_From_Peer_Packet_0>:
 80226be:	6882      	ldr	r2, [r0, #8]
 80226c0:	7bd3      	ldrb	r3, [r2, #15]
 80226c2:	f8df 277c 	ldr.w	r2, [pc, #1916]	; 8022e40 <??DataTable11_2>
 80226c6:	7013      	strb	r3, [r2, #0]
 80226c8:	6884      	ldr	r4, [r0, #8]
 80226ca:	7c65      	ldrb	r5, [r4, #17]
 80226cc:	7055      	strb	r5, [r2, #1]
 80226ce:	6884      	ldr	r4, [r0, #8]
 80226d0:	7ca5      	ldrb	r5, [r4, #18]
 80226d2:	7095      	strb	r5, [r2, #2]
 80226d4:	7b0c      	ldrb	r4, [r1, #12]
 80226d6:	f003 0201 	and.w	r2, r3, #1
 80226da:	f003 0304 	and.w	r3, r3, #4
 80226de:	4314      	orrs	r4, r2
 80226e0:	730c      	strb	r4, [r1, #12]
 80226e2:	7b4c      	ldrb	r4, [r1, #13]
 80226e4:	4323      	orrs	r3, r4
 80226e6:	734b      	strb	r3, [r1, #13]
 80226e8:	6882      	ldr	r2, [r0, #8]
 80226ea:	7c13      	ldrb	r3, [r2, #16]
 80226ec:	f891 206e 	ldrb.w	r2, [r1, #110]	; 0x6e
 80226f0:	738b      	strb	r3, [r1, #14]
 80226f2:	07d3      	lsls	r3, r2, #31
 80226f4:	d405      	bmi.n	8022702 <??smp_Get_Pairing_Parameters_From_Peer_Packet_1>
 80226f6:	6883      	ldr	r3, [r0, #8]
 80226f8:	2206      	movs	r2, #6
 80226fa:	7c5b      	ldrb	r3, [r3, #17]
 80226fc:	f003 0307 	and.w	r3, r3, #7
 8022700:	e009      	b.n	8022716 <??smp_Get_Pairing_Parameters_From_Peer_Packet_2>

08022702 <??smp_Get_Pairing_Parameters_From_Peer_Packet_1>:
 8022702:	7ecb      	ldrb	r3, [r1, #27]
 8022704:	2205      	movs	r2, #5
 8022706:	f003 03f8 	and.w	r3, r3, #248	; 0xf8
 802270a:	76cb      	strb	r3, [r1, #27]
 802270c:	6884      	ldr	r4, [r0, #8]
 802270e:	7ca5      	ldrb	r5, [r4, #18]
 8022710:	f005 0507 	and.w	r5, r5, #7
 8022714:	432b      	orrs	r3, r5

08022716 <??smp_Get_Pairing_Parameters_From_Peer_Packet_2>:
 8022716:	76cb      	strb	r3, [r1, #27]
 8022718:	6880      	ldr	r0, [r0, #8]
 802271a:	f100 030c 	add.w	r3, r0, #12
 802271e:	5c9a      	ldrb	r2, [r3, r2]
 8022720:	f002 0207 	and.w	r2, r2, #7
 8022724:	768a      	strb	r2, [r1, #26]
 8022726:	bc30      	pop	{r4, r5}
 8022728:	4770      	bx	lr

0802272a <smp_Build_AuthReq_Field>:
 802272a:	0089      	lsls	r1, r1, #2
 802272c:	f000 0001 	and.w	r0, r0, #1
 8022730:	f001 0104 	and.w	r1, r1, #4
 8022734:	00d2      	lsls	r2, r2, #3
 8022736:	4308      	orrs	r0, r1
 8022738:	f002 0208 	and.w	r2, r2, #8
 802273c:	011b      	lsls	r3, r3, #4
 802273e:	4310      	orrs	r0, r2
 8022740:	f003 0310 	and.w	r3, r3, #16
 8022744:	4318      	orrs	r0, r3
 8022746:	4770      	bx	lr

08022748 <smp_Set_Key_Association_Method>:
 8022748:	a133      	add	r1, pc, #204	; (adr r1, 8022818 <?_0>)
 802274a:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 802274e:	e891 51cc 	ldmia.w	r1, {r2, r3, r6, r7, r8, ip, lr}
 8022752:	b087      	sub	sp, #28
 8022754:	4604      	mov	r4, r0
 8022756:	4668      	mov	r0, sp
 8022758:	e880 51cc 	stmia.w	r0, {r2, r3, r6, r7, r8, ip, lr}
 802275c:	7aa0      	ldrb	r0, [r4, #10]
 802275e:	2500      	movs	r5, #0
 8022760:	f000 0903 	and.w	r9, r0, #3
 8022764:	f1b9 0f03 	cmp.w	r9, #3
 8022768:	d01b      	beq.n	80227a2 <??smp_Set_Key_Association_Method_0>
 802276a:	f894 106e 	ldrb.w	r1, [r4, #110]	; 0x6e
 802276e:	070a      	lsls	r2, r1, #28
 8022770:	d502      	bpl.n	8022778 <??smp_Set_Key_Association_Method_1>
 8022772:	f010 0f03 	tst.w	r0, #3
 8022776:	d114      	bne.n	80227a2 <??smp_Set_Key_Association_Method_0>

08022778 <??smp_Set_Key_Association_Method_1>:
 8022778:	7b60      	ldrb	r0, [r4, #13]
 802277a:	f010 0f05 	tst.w	r0, #5
 802277e:	d019      	beq.n	80227b4 <??smp_Set_Key_Association_Method_2>
 8022780:	7ae0      	ldrb	r0, [r4, #11]
 8022782:	f8df 26b4 	ldr.w	r2, [pc, #1716]	; 8022e38 <??DataTable11>
 8022786:	f892 c0c0 	ldrb.w	ip, [r2, #192]	; 0xc0
 802278a:	eb00 0680 	add.w	r6, r0, r0, lsl #2
 802278e:	eb0d 0706 	add.w	r7, sp, r6
 8022792:	f817 300c 	ldrb.w	r3, [r7, ip]
 8022796:	001e      	movs	r6, r3
 8022798:	d10f      	bne.n	80227ba <??smp_Set_Key_Association_Method_3>
 802279a:	0709      	lsls	r1, r1, #28
 802279c:	d503      	bpl.n	80227a6 <??smp_Set_Key_Association_Method_4>
 802279e:	2304      	movs	r3, #4
 80227a0:	e00b      	b.n	80227ba <??smp_Set_Key_Association_Method_3>

080227a2 <??smp_Set_Key_Association_Method_0>:
 80227a2:	2303      	movs	r3, #3
 80227a4:	e009      	b.n	80227ba <??smp_Set_Key_Association_Method_3>

080227a6 <??smp_Set_Key_Association_Method_4>:
 80227a6:	2801      	cmp	r0, #1
 80227a8:	bf02      	ittt	eq
 80227aa:	7265      	strbeq	r5, [r4, #9]
 80227ac:	f892 10c0 	ldrbeq.w	r1, [r2, #192]	; 0xc0
 80227b0:	2901      	cmpeq	r1, #1
 80227b2:	d101      	bne.n	80227b8 <??smp_Set_Key_Association_Method_5>

080227b4 <??smp_Set_Key_Association_Method_2>:
 80227b4:	2301      	movs	r3, #1
 80227b6:	e000      	b.n	80227ba <??smp_Set_Key_Association_Method_3>

080227b8 <??smp_Set_Key_Association_Method_5>:
 80227b8:	2302      	movs	r3, #2

080227ba <??smp_Set_Key_Association_Method_3>:
 80227ba:	f8df 1c68 	ldr.w	r1, [pc, #3176]	; 8023424 <??DataTable12>
 80227be:	7263      	strb	r3, [r4, #9]
 80227c0:	780a      	ldrb	r2, [r1, #0]
 80227c2:	7a60      	ldrb	r0, [r4, #9]
 80227c4:	07d3      	lsls	r3, r2, #31
 80227c6:	d505      	bpl.n	80227d4 <??smp_Set_Key_Association_Method_6>
 80227c8:	2801      	cmp	r0, #1
 80227ca:	d103      	bne.n	80227d4 <??smp_Set_Key_Association_Method_6>
 80227cc:	2003      	movs	r0, #3
 80227ce:	7260      	strb	r0, [r4, #9]
 80227d0:	2503      	movs	r5, #3
 80227d2:	e01c      	b.n	802280e <??smp_Set_Key_Association_Method_7>

080227d4 <??smp_Set_Key_Association_Method_6>:
 80227d4:	f894 206e 	ldrb.w	r2, [r4, #110]	; 0x6e
 80227d8:	0713      	lsls	r3, r2, #28
 80227da:	d506      	bpl.n	80227ea <??smp_Set_Key_Association_Method_8>
 80227dc:	2802      	cmp	r0, #2
 80227de:	d104      	bne.n	80227ea <??smp_Set_Key_Association_Method_8>
 80227e0:	7be0      	ldrb	r0, [r4, #15]
 80227e2:	f000 0007 	and.w	r0, r0, #7
 80227e6:	73e0      	strb	r0, [r4, #15]
 80227e8:	e001      	b.n	80227ee <??smp_Set_Key_Association_Method_9>

080227ea <??smp_Set_Key_Association_Method_8>:
 80227ea:	2802      	cmp	r0, #2
 80227ec:	d10f      	bne.n	802280e <??smp_Set_Key_Association_Method_7>

080227ee <??smp_Set_Key_Association_Method_9>:
 80227ee:	79c8      	ldrb	r0, [r1, #7]
 80227f0:	b148      	cbz	r0, 8022806 <??smp_Set_Key_Association_Method_10>
 80227f2:	8ae1      	ldrh	r1, [r4, #22]
 80227f4:	2001      	movs	r0, #1
 80227f6:	f3c1 010b 	ubfx	r1, r1, #0, #12
 80227fa:	f7fc fc83 	bl	801f104 <EVT_aci_gap_pass_key_req>
 80227fe:	7b60      	ldrb	r0, [r4, #13]
 8022800:	f000 00ef 	and.w	r0, r0, #239	; 0xef
 8022804:	e002      	b.n	802280c <??smp_Set_Key_Association_Method_11>

08022806 <??smp_Set_Key_Association_Method_10>:
 8022806:	7b60      	ldrb	r0, [r4, #13]
 8022808:	f040 0010 	orr.w	r0, r0, #16

0802280c <??smp_Set_Key_Association_Method_11>:
 802280c:	7360      	strb	r0, [r4, #13]

0802280e <??smp_Set_Key_Association_Method_7>:
 802280e:	4628      	mov	r0, r5
 8022810:	b007      	add	sp, #28
 8022812:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
	...

08022818 <?_0>:
 8022818:	0101 0102 0102 0200 0001 0202 0102 0102     ................
 8022828:	0101 0101 0002 0102 0000 0000               ............

08022834 <SMP_MI_PairingRequest_Send>:
 8022834:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8022838:	460e      	mov	r6, r1
 802283a:	4690      	mov	r8, r2
 802283c:	f7ff fb46 	bl	8021ecc <SMP_Get_Remote_Device>
 8022840:	0004      	movs	r4, r0
 8022842:	bf08      	it	eq
 8022844:	2002      	moveq	r0, #2
 8022846:	f000 80ad 	beq.w	80229a4 <??SMP_MI_PairingRequest_Send_0>
 802284a:	f104 076e 	add.w	r7, r4, #110	; 0x6e
 802284e:	7838      	ldrb	r0, [r7, #0]
 8022850:	07c1      	lsls	r1, r0, #31
 8022852:	d429      	bmi.n	80228a8 <??SMP_MI_PairingRequest_Send_1>
 8022854:	f104 0010 	add.w	r0, r4, #16
 8022858:	f7ff fd64 	bl	8022324 <SMP_Is_In_Blacklist>
 802285c:	b910      	cbnz	r0, 8022864 <??SMP_MI_PairingRequest_Send_2>
 802285e:	2059      	movs	r0, #89	; 0x59
 8022860:	e8bd 8ff2 	ldmia.w	sp!, {r1, r4, r5, r6, r7, r8, r9, sl, fp, pc}

08022864 <??SMP_MI_PairingRequest_Send_2>:
 8022864:	78b8      	ldrb	r0, [r7, #2]
 8022866:	06c1      	lsls	r1, r0, #27
 8022868:	d41e      	bmi.n	80228a8 <??SMP_MI_PairingRequest_Send_1>
 802286a:	f8df 95cc 	ldr.w	r9, [pc, #1484]	; 8022e38 <??DataTable11>
 802286e:	f109 0ab4 	add.w	sl, r9, #180	; 0xb4
 8022872:	f89a 0000 	ldrb.w	r0, [sl]
 8022876:	0741      	lsls	r1, r0, #29
 8022878:	d506      	bpl.n	8022888 <??SMP_MI_PairingRequest_Send_3>
 802287a:	f109 0088 	add.w	r0, r9, #136	; 0x88
 802287e:	7a80      	ldrb	r0, [r0, #10]
 8022880:	ea40 0050 	orr.w	r0, r0, r0, lsr #1
 8022884:	07c0      	lsls	r0, r0, #31
 8022886:	d40f      	bmi.n	80228a8 <??SMP_MI_PairingRequest_Send_1>

08022888 <??SMP_MI_PairingRequest_Send_3>:
 8022888:	f04f 0b00 	mov.w	fp, #0
 802288c:	f887 b002 	strb.w	fp, [r7, #2]
 8022890:	7a20      	ldrb	r0, [r4, #8]
 8022892:	b160      	cbz	r0, 80228ae <??SMP_MI_PairingRequest_Send_4>
 8022894:	28f1      	cmp	r0, #241	; 0xf1
 8022896:	d107      	bne.n	80228a8 <??SMP_MI_PairingRequest_Send_1>
 8022898:	07f0      	lsls	r0, r6, #31
 802289a:	d408      	bmi.n	80228ae <??SMP_MI_PairingRequest_Send_4>
 802289c:	2101      	movs	r1, #1
 802289e:	70b9      	strb	r1, [r7, #2]
 80228a0:	4620      	mov	r0, r4
 80228a2:	e8bd 4ff2 	ldmia.w	sp!, {r1, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80228a6:	e2e0      	b.n	8022e6a <SMP_MI_Start_Encryption>

080228a8 <??SMP_MI_PairingRequest_Send_1>:
 80228a8:	200c      	movs	r0, #12
 80228aa:	e8bd 8ff2 	ldmia.w	sp!, {r1, r4, r5, r6, r7, r8, r9, sl, fp, pc}

080228ae <??SMP_MI_PairingRequest_Send_4>:
 80228ae:	8ae1      	ldrh	r1, [r4, #22]
 80228b0:	2220      	movs	r2, #32
 80228b2:	2000      	movs	r0, #0
 80228b4:	f3c1 010b 	ubfx	r1, r1, #0, #12
 80228b8:	f002 f9fb 	bl	8024cb2 <ACL_PM_New>
 80228bc:	0005      	movs	r5, r0
 80228be:	bf08      	it	eq
 80228c0:	2064      	moveq	r0, #100	; 0x64
 80228c2:	d06f      	beq.n	80229a4 <??SMP_MI_PairingRequest_Send_0>
 80228c4:	f89a 0000 	ldrb.w	r0, [sl]
 80228c8:	f000 0003 	and.w	r0, r0, #3
 80228cc:	2803      	cmp	r0, #3
 80228ce:	bf08      	it	eq
 80228d0:	2038      	moveq	r0, #56	; 0x38
 80228d2:	d067      	beq.n	80229a4 <??SMP_MI_PairingRequest_Send_0>
 80228d4:	20a0      	movs	r0, #160	; 0xa0
 80228d6:	7220      	strb	r0, [r4, #8]
 80228d8:	2156      	movs	r1, #86	; 0x56
 80228da:	f104 0018 	add.w	r0, r4, #24
 80228de:	f00e faff 	bl	8030ee0 <__aeabi_memclr>
 80228e2:	07b0      	lsls	r0, r6, #30
 80228e4:	d503      	bpl.n	80228ee <??SMP_MI_PairingRequest_Send_5>
 80228e6:	78b9      	ldrb	r1, [r7, #2]
 80228e8:	f041 0120 	orr.w	r1, r1, #32
 80228ec:	70b9      	strb	r1, [r7, #2]

080228ee <??SMP_MI_PairingRequest_Send_5>:
 80228ee:	f109 0688 	add.w	r6, r9, #136	; 0x88
 80228f2:	f1b8 0f00 	cmp.w	r8, #0
 80228f6:	bf11      	iteee	ne
 80228f8:	7871      	ldrbne	r1, [r6, #1]
 80228fa:	f209 106b 	addweq	r0, r9, #363	; 0x16b
 80228fe:	7841      	ldrbeq	r1, [r0, #1]
 8022900:	f3c1 0180 	ubfxeq	r1, r1, #2, #1
 8022904:	7ab2      	ldrb	r2, [r6, #10]
 8022906:	7af3      	ldrb	r3, [r6, #11]
 8022908:	7830      	ldrb	r0, [r6, #0]
 802290a:	ea42 0252 	orr.w	r2, r2, r2, lsr #1
 802290e:	f002 0201 	and.w	r2, r2, #1
 8022912:	f7ff ff0a 	bl	802272a <smp_Build_AuthReq_Field>
 8022916:	4680      	mov	r8, r0
 8022918:	4620      	mov	r0, r4
 802291a:	f001 fb72 	bl	8024002 <SMP_Oob_Check_Remote_Data_Presence>
 802291e:	7aa0      	ldrb	r0, [r4, #10]
 8022920:	2107      	movs	r1, #7
 8022922:	80e9      	strh	r1, [r5, #6]
 8022924:	68a9      	ldr	r1, [r5, #8]
 8022926:	2201      	movs	r2, #1
 8022928:	f000 0001 	and.w	r0, r0, #1
 802292c:	730a      	strb	r2, [r1, #12]
 802292e:	f89a 200c 	ldrb.w	r2, [sl, #12]
 8022932:	68a9      	ldr	r1, [r5, #8]
 8022934:	734a      	strb	r2, [r1, #13]
 8022936:	68a9      	ldr	r1, [r5, #8]
 8022938:	7388      	strb	r0, [r1, #14]
 802293a:	68a8      	ldr	r0, [r5, #8]
 802293c:	f880 800f 	strb.w	r8, [r0, #15]
 8022940:	78f1      	ldrb	r1, [r6, #3]
 8022942:	68a8      	ldr	r0, [r5, #8]
 8022944:	7401      	strb	r1, [r0, #16]
 8022946:	68a8      	ldr	r0, [r5, #8]
 8022948:	2107      	movs	r1, #7
 802294a:	7441      	strb	r1, [r0, #17]
 802294c:	68a8      	ldr	r0, [r5, #8]
 802294e:	7481      	strb	r1, [r0, #18]
 8022950:	4621      	mov	r1, r4
 8022952:	4628      	mov	r0, r5
 8022954:	f000 fa76 	bl	8022e44 <SMP_Send_Packet>
 8022958:	bb08      	cbnz	r0, 802299e <??SMP_MI_PairingRequest_Send_6>
 802295a:	f89a 0000 	ldrb.w	r0, [sl]
 802295e:	f000 0103 	and.w	r1, r0, #3
 8022962:	2903      	cmp	r1, #3
 8022964:	bf1c      	itt	ne
 8022966:	1c40      	addne	r0, r0, #1
 8022968:	f88a 0000 	strbne.w	r0, [sl]
 802296c:	7839      	ldrb	r1, [r7, #0]
 802296e:	f008 0018 	and.w	r0, r8, #24
 8022972:	f008 0201 	and.w	r2, r8, #1
 8022976:	f001 0101 	and.w	r1, r1, #1
 802297a:	4301      	orrs	r1, r0
 802297c:	7039      	strb	r1, [r7, #0]
 802297e:	7b21      	ldrb	r1, [r4, #12]
 8022980:	7b60      	ldrb	r0, [r4, #13]
 8022982:	ea41 0142 	orr.w	r1, r1, r2, lsl #1
 8022986:	7321      	strb	r1, [r4, #12]
 8022988:	ea4f 0198 	mov.w	r1, r8, lsr #2
 802298c:	f001 0101 	and.w	r1, r1, #1
 8022990:	4308      	orrs	r0, r1
 8022992:	7360      	strb	r0, [r4, #13]
 8022994:	f889 816b 	strb.w	r8, [r9, #363]	; 0x16b
 8022998:	20a1      	movs	r0, #161	; 0xa1
 802299a:	7220      	strb	r0, [r4, #8]
 802299c:	e001      	b.n	80229a2 <??SMP_MI_PairingRequest_Send_7>

0802299e <??SMP_MI_PairingRequest_Send_6>:
 802299e:	f04f 0b91 	mov.w	fp, #145	; 0x91

080229a2 <??SMP_MI_PairingRequest_Send_7>:
 80229a2:	4658      	mov	r0, fp

080229a4 <??SMP_MI_PairingRequest_Send_0>:
 80229a4:	e8bd 8ff2 	ldmia.w	sp!, {r1, r4, r5, r6, r7, r8, r9, sl, fp, pc}

080229a8 <aci_gap_send_pairing_req>:
 80229a8:	2201      	movs	r2, #1
 80229aa:	e743      	b.n	8022834 <SMP_MI_PairingRequest_Send>

080229ac <aci_gap_slave_security_req>:
 80229ac:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80229ae:	f7ff fa8d 	bl	8021ecc <SMP_Get_Remote_Device>
 80229b2:	0004      	movs	r4, r0
 80229b4:	d101      	bne.n	80229ba <??aci_gap_slave_security_req_0>
 80229b6:	2002      	movs	r0, #2
 80229b8:	bdf2      	pop	{r1, r4, r5, r6, r7, pc}

080229ba <??aci_gap_slave_security_req_0>:
 80229ba:	f104 066e 	add.w	r6, r4, #110	; 0x6e
 80229be:	7830      	ldrb	r0, [r6, #0]
 80229c0:	07c1      	lsls	r1, r0, #31
 80229c2:	d508      	bpl.n	80229d6 <??aci_gap_slave_security_req_1>
 80229c4:	7870      	ldrb	r0, [r6, #1]
 80229c6:	f010 0f03 	tst.w	r0, #3
 80229ca:	d104      	bne.n	80229d6 <??aci_gap_slave_security_req_1>
 80229cc:	7a20      	ldrb	r0, [r4, #8]
 80229ce:	2800      	cmp	r0, #0
 80229d0:	bf18      	it	ne
 80229d2:	28f1      	cmpne	r0, #241	; 0xf1
 80229d4:	d001      	beq.n	80229da <??aci_gap_slave_security_req_2>

080229d6 <??aci_gap_slave_security_req_1>:
 80229d6:	200c      	movs	r0, #12
 80229d8:	bdf2      	pop	{r1, r4, r5, r6, r7, pc}

080229da <??aci_gap_slave_security_req_2>:
 80229da:	f8df 745c 	ldr.w	r7, [pc, #1116]	; 8022e38 <??DataTable11>
 80229de:	f897 00b4 	ldrb.w	r0, [r7, #180]	; 0xb4
 80229e2:	f000 0003 	and.w	r0, r0, #3
 80229e6:	2803      	cmp	r0, #3
 80229e8:	d101      	bne.n	80229ee <??aci_gap_slave_security_req_3>
 80229ea:	2038      	movs	r0, #56	; 0x38
 80229ec:	bdf2      	pop	{r1, r4, r5, r6, r7, pc}

080229ee <??aci_gap_slave_security_req_3>:
 80229ee:	8ae1      	ldrh	r1, [r4, #22]
 80229f0:	2220      	movs	r2, #32
 80229f2:	2000      	movs	r0, #0
 80229f4:	f3c1 010b 	ubfx	r1, r1, #0, #12
 80229f8:	f002 f95b 	bl	8024cb2 <ACL_PM_New>
 80229fc:	0005      	movs	r5, r0
 80229fe:	d101      	bne.n	8022a04 <??aci_gap_slave_security_req_4>
 8022a00:	2064      	movs	r0, #100	; 0x64
 8022a02:	bdf2      	pop	{r1, r4, r5, r6, r7, pc}

08022a04 <??aci_gap_slave_security_req_4>:
 8022a04:	2002      	movs	r0, #2
 8022a06:	80e8      	strh	r0, [r5, #6]
 8022a08:	68a8      	ldr	r0, [r5, #8]
 8022a0a:	210b      	movs	r1, #11
 8022a0c:	f107 0c88 	add.w	ip, r7, #136	; 0x88
 8022a10:	7301      	strb	r1, [r0, #12]
 8022a12:	f89c 200a 	ldrb.w	r2, [ip, #10]
 8022a16:	f89c 300b 	ldrb.w	r3, [ip, #11]
 8022a1a:	f89c 1001 	ldrb.w	r1, [ip, #1]
 8022a1e:	ea42 0252 	orr.w	r2, r2, r2, lsr #1
 8022a22:	f89c 0000 	ldrb.w	r0, [ip]
 8022a26:	f002 0201 	and.w	r2, r2, #1
 8022a2a:	f7ff fe7e 	bl	802272a <smp_Build_AuthReq_Field>
 8022a2e:	f887 016c 	strb.w	r0, [r7, #364]	; 0x16c
 8022a32:	68a9      	ldr	r1, [r5, #8]
 8022a34:	7348      	strb	r0, [r1, #13]
 8022a36:	4621      	mov	r1, r4
 8022a38:	4628      	mov	r0, r5
 8022a3a:	f000 fa03 	bl	8022e44 <SMP_Send_Packet>
 8022a3e:	0001      	movs	r1, r0
 8022a40:	d103      	bne.n	8022a4a <??aci_gap_slave_security_req_5>
 8022a42:	7871      	ldrb	r1, [r6, #1]
 8022a44:	f041 0101 	orr.w	r1, r1, #1
 8022a48:	7071      	strb	r1, [r6, #1]

08022a4a <??aci_gap_slave_security_req_5>:
 8022a4a:	bdf2      	pop	{r1, r4, r5, r6, r7, pc}

08022a4c <smp__MI_PairingConfirm_Send>:
 8022a4c:	b530      	push	{r4, r5, lr}
 8022a4e:	b085      	sub	sp, #20
 8022a50:	4605      	mov	r5, r0
 8022a52:	8ae9      	ldrh	r1, [r5, #22]
 8022a54:	2220      	movs	r2, #32
 8022a56:	2000      	movs	r0, #0
 8022a58:	f3c1 010b 	ubfx	r1, r1, #0, #12
 8022a5c:	f002 f929 	bl	8024cb2 <ACL_PM_New>
 8022a60:	0004      	movs	r4, r0
 8022a62:	bf08      	it	eq
 8022a64:	2064      	moveq	r0, #100	; 0x64
 8022a66:	d035      	beq.n	8022ad4 <??smp__MI_PairingConfirm_Send_0>
 8022a68:	f895 006e 	ldrb.w	r0, [r5, #110]	; 0x6e
 8022a6c:	0701      	lsls	r1, r0, #28
 8022a6e:	d518      	bpl.n	8022aa2 <??smp__MI_PairingConfirm_Send_1>
 8022a70:	7a68      	ldrb	r0, [r5, #9]
 8022a72:	2802      	cmp	r0, #2
 8022a74:	d11b      	bne.n	8022aae <??smp__MI_PairingConfirm_Send_2>
 8022a76:	a901      	add	r1, sp, #4
 8022a78:	9100      	str	r1, [sp, #0]
 8022a7a:	7be9      	ldrb	r1, [r5, #15]
 8022a7c:	f8df 03b8 	ldr.w	r0, [pc, #952]	; 8022e38 <??DataTable11>
 8022a80:	f8d0 308c 	ldr.w	r3, [r0, #140]	; 0x8c
 8022a84:	08c9      	lsrs	r1, r1, #3
 8022a86:	1e4a      	subs	r2, r1, #1
 8022a88:	40d3      	lsrs	r3, r2
 8022a8a:	f003 0301 	and.w	r3, r3, #1
 8022a8e:	f500 7194 	add.w	r1, r0, #296	; 0x128
 8022a92:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 8022a96:	f105 024e 	add.w	r2, r5, #78	; 0x4e
 8022a9a:	30e8      	adds	r0, #232	; 0xe8
 8022a9c:	f7fe fdc4 	bl	8021628 <SMA_SC_Gen_f4_Confirm>
 8022aa0:	e005      	b.n	8022aae <??smp__MI_PairingConfirm_Send_2>

08022aa2 <??smp__MI_PairingConfirm_Send_1>:
 8022aa2:	aa01      	add	r2, sp, #4
 8022aa4:	f105 014e 	add.w	r1, r5, #78	; 0x4e
 8022aa8:	4628      	mov	r0, r5
 8022aaa:	f000 f88f 	bl	8022bcc <smp_LP_MI_Compute_c1_Confirm_Value>

08022aae <??smp__MI_PairingConfirm_Send_2>:
 8022aae:	2011      	movs	r0, #17
 8022ab0:	80e0      	strh	r0, [r4, #6]
 8022ab2:	68a0      	ldr	r0, [r4, #8]
 8022ab4:	2103      	movs	r1, #3
 8022ab6:	ab01      	add	r3, sp, #4
 8022ab8:	7301      	strb	r1, [r0, #12]
 8022aba:	2210      	movs	r2, #16
 8022abc:	2105      	movs	r1, #5
 8022abe:	4620      	mov	r0, r4
 8022ac0:	f002 f99b 	bl	8024dfa <ACL_PM_Set_Data>
 8022ac4:	4629      	mov	r1, r5
 8022ac6:	4620      	mov	r0, r4
 8022ac8:	f000 f9bc 	bl	8022e44 <SMP_Send_Packet>
 8022acc:	0001      	movs	r1, r0
 8022ace:	bf04      	itt	eq
 8022ad0:	21a5      	moveq	r1, #165	; 0xa5
 8022ad2:	7229      	strbeq	r1, [r5, #8]

08022ad4 <??smp__MI_PairingConfirm_Send_0>:
 8022ad4:	b005      	add	sp, #20
 8022ad6:	bd30      	pop	{r4, r5, pc}

08022ad8 <smp__MI_PairingConfirm_Receive>:
 8022ad8:	b570      	push	{r4, r5, r6, lr}
 8022ada:	460e      	mov	r6, r1
 8022adc:	8af1      	ldrh	r1, [r6, #22]
 8022ade:	4605      	mov	r5, r0
 8022ae0:	2220      	movs	r2, #32
 8022ae2:	f3c1 010b 	ubfx	r1, r1, #0, #12
 8022ae6:	2000      	movs	r0, #0
 8022ae8:	f002 f8e3 	bl	8024cb2 <ACL_PM_New>
 8022aec:	0004      	movs	r4, r0
 8022aee:	d101      	bne.n	8022af4 <??smp__MI_PairingConfirm_Receive_0>
 8022af0:	2064      	movs	r0, #100	; 0x64
 8022af2:	bd70      	pop	{r4, r5, r6, pc}

08022af4 <??smp__MI_PairingConfirm_Receive_0>:
 8022af4:	b135      	cbz	r5, 8022b04 <??smp__MI_PairingConfirm_Receive_1>
 8022af6:	f106 0324 	add.w	r3, r6, #36	; 0x24
 8022afa:	2210      	movs	r2, #16
 8022afc:	2105      	movs	r1, #5
 8022afe:	4628      	mov	r0, r5
 8022b00:	f002 f971 	bl	8024de6 <ACL_PM_Get_Data>

08022b04 <??smp__MI_PairingConfirm_Receive_1>:
 8022b04:	2011      	movs	r0, #17
 8022b06:	80e0      	strh	r0, [r4, #6]
 8022b08:	68a0      	ldr	r0, [r4, #8]
 8022b0a:	2104      	movs	r1, #4
 8022b0c:	f106 034e 	add.w	r3, r6, #78	; 0x4e
 8022b10:	7301      	strb	r1, [r0, #12]
 8022b12:	2210      	movs	r2, #16
 8022b14:	2105      	movs	r1, #5
 8022b16:	4620      	mov	r0, r4
 8022b18:	f002 f96f 	bl	8024dfa <ACL_PM_Set_Data>
 8022b1c:	4631      	mov	r1, r6
 8022b1e:	4620      	mov	r0, r4
 8022b20:	f000 f990 	bl	8022e44 <SMP_Send_Packet>
 8022b24:	0001      	movs	r1, r0
 8022b26:	bf04      	itt	eq
 8022b28:	21a6      	moveq	r1, #166	; 0xa6
 8022b2a:	7231      	strbeq	r1, [r6, #8]
 8022b2c:	bd70      	pop	{r4, r5, r6, pc}

08022b2e <smp__SR_PairingConfirm_Receive>:
 8022b2e:	b578      	push	{r3, r4, r5, r6, lr}
 8022b30:	b085      	sub	sp, #20
 8022b32:	460e      	mov	r6, r1
 8022b34:	8af1      	ldrh	r1, [r6, #22]
 8022b36:	4605      	mov	r5, r0
 8022b38:	2220      	movs	r2, #32
 8022b3a:	f3c1 010b 	ubfx	r1, r1, #0, #12
 8022b3e:	2000      	movs	r0, #0
 8022b40:	f002 f8b7 	bl	8024cb2 <ACL_PM_New>
 8022b44:	0004      	movs	r4, r0
 8022b46:	bf08      	it	eq
 8022b48:	2064      	moveq	r0, #100	; 0x64
 8022b4a:	d03d      	beq.n	8022bc8 <??smp__SR_PairingConfirm_Receive_0>
 8022b4c:	b135      	cbz	r5, 8022b5c <??smp__SR_PairingConfirm_Receive_1>
 8022b4e:	f106 0324 	add.w	r3, r6, #36	; 0x24
 8022b52:	2210      	movs	r2, #16
 8022b54:	2105      	movs	r1, #5
 8022b56:	4628      	mov	r0, r5
 8022b58:	f002 f945 	bl	8024de6 <ACL_PM_Get_Data>

08022b5c <??smp__SR_PairingConfirm_Receive_1>:
 8022b5c:	f896 006e 	ldrb.w	r0, [r6, #110]	; 0x6e
 8022b60:	0701      	lsls	r1, r0, #28
 8022b62:	d518      	bpl.n	8022b96 <??smp__SR_PairingConfirm_Receive_2>
 8022b64:	7a71      	ldrb	r1, [r6, #9]
 8022b66:	2300      	movs	r3, #0
 8022b68:	48b3      	ldr	r0, [pc, #716]	; (8022e38 <??DataTable11>)
 8022b6a:	2902      	cmp	r1, #2
 8022b6c:	d109      	bne.n	8022b82 <??smp__SR_PairingConfirm_Receive_3>
 8022b6e:	7bf1      	ldrb	r1, [r6, #15]
 8022b70:	f8d0 308c 	ldr.w	r3, [r0, #140]	; 0x8c
 8022b74:	08c9      	lsrs	r1, r1, #3
 8022b76:	1e4a      	subs	r2, r1, #1
 8022b78:	40d3      	lsrs	r3, r2
 8022b7a:	f003 0301 	and.w	r3, r3, #1
 8022b7e:	f043 0380 	orr.w	r3, r3, #128	; 0x80

08022b82 <??smp__SR_PairingConfirm_Receive_3>:
 8022b82:	a901      	add	r1, sp, #4
 8022b84:	9100      	str	r1, [sp, #0]
 8022b86:	f500 7194 	add.w	r1, r0, #296	; 0x128
 8022b8a:	f106 025e 	add.w	r2, r6, #94	; 0x5e
 8022b8e:	30e8      	adds	r0, #232	; 0xe8
 8022b90:	f7fe fd4a 	bl	8021628 <SMA_SC_Gen_f4_Confirm>
 8022b94:	e005      	b.n	8022ba2 <??smp__SR_PairingConfirm_Receive_4>

08022b96 <??smp__SR_PairingConfirm_Receive_2>:
 8022b96:	aa01      	add	r2, sp, #4
 8022b98:	f106 015e 	add.w	r1, r6, #94	; 0x5e
 8022b9c:	4630      	mov	r0, r6
 8022b9e:	f000 f870 	bl	8022c82 <smp_SR_Compute_c1_Confirm_Value>

08022ba2 <??smp__SR_PairingConfirm_Receive_4>:
 8022ba2:	2011      	movs	r0, #17
 8022ba4:	80e0      	strh	r0, [r4, #6]
 8022ba6:	68a0      	ldr	r0, [r4, #8]
 8022ba8:	2103      	movs	r1, #3
 8022baa:	ab01      	add	r3, sp, #4
 8022bac:	7301      	strb	r1, [r0, #12]
 8022bae:	2210      	movs	r2, #16
 8022bb0:	2105      	movs	r1, #5
 8022bb2:	4620      	mov	r0, r4
 8022bb4:	f002 f921 	bl	8024dfa <ACL_PM_Set_Data>
 8022bb8:	4631      	mov	r1, r6
 8022bba:	4620      	mov	r0, r4
 8022bbc:	f000 f942 	bl	8022e44 <SMP_Send_Packet>
 8022bc0:	0001      	movs	r1, r0
 8022bc2:	bf04      	itt	eq
 8022bc4:	21b6      	moveq	r1, #182	; 0xb6
 8022bc6:	7231      	strbeq	r1, [r6, #8]

08022bc8 <??smp__SR_PairingConfirm_Receive_0>:
 8022bc8:	b006      	add	sp, #24
 8022bca:	bd70      	pop	{r4, r5, r6, pc}

08022bcc <smp_LP_MI_Compute_c1_Confirm_Value>:
 8022bcc:	b5f0      	push	{r4, r5, r6, r7, lr}
 8022bce:	b097      	sub	sp, #92	; 0x5c
 8022bd0:	4605      	mov	r5, r0
 8022bd2:	460e      	mov	r6, r1
 8022bd4:	4614      	mov	r4, r2
 8022bd6:	213c      	movs	r1, #60	; 0x3c
 8022bd8:	a808      	add	r0, sp, #32
 8022bda:	f00e f981 	bl	8030ee0 <__aeabi_memclr>
 8022bde:	2210      	movs	r2, #16
 8022be0:	4631      	mov	r1, r6
 8022be2:	a80c      	add	r0, sp, #48	; 0x30
 8022be4:	f00e f97f 	bl	8030ee6 <__aeabi_memcpy>
 8022be8:	7a68      	ldrb	r0, [r5, #9]
 8022bea:	2802      	cmp	r0, #2
 8022bec:	d106      	bne.n	8022bfc <??smp_LP_MI_Compute_c1_Confirm_Value_0>
 8022bee:	4892      	ldr	r0, [pc, #584]	; (8022e38 <??DataTable11>)
 8022bf0:	f8d0 108c 	ldr.w	r1, [r0, #140]	; 0x8c
 8022bf4:	a808      	add	r0, sp, #32
 8022bf6:	f7ff fc67 	bl	80224c8 <U32_TO_LE4>
 8022bfa:	e008      	b.n	8022c0e <??smp_LP_MI_Compute_c1_Confirm_Value_1>

08022bfc <??smp_LP_MI_Compute_c1_Confirm_Value_0>:
 8022bfc:	2803      	cmp	r0, #3
 8022bfe:	d106      	bne.n	8022c0e <??smp_LP_MI_Compute_c1_Confirm_Value_1>
 8022c00:	f8df 0824 	ldr.w	r0, [pc, #2084]	; 8023428 <??DataTable12_1>
 8022c04:	e890 00cc 	ldmia.w	r0, {r2, r3, r6, r7}
 8022c08:	a908      	add	r1, sp, #32
 8022c0a:	e881 00cc 	stmia.w	r1, {r2, r3, r6, r7}

08022c0e <??smp_LP_MI_Compute_c1_Confirm_Value_1>:
 8022c0e:	498a      	ldr	r1, [pc, #552]	; (8022e38 <??DataTable11>)
 8022c10:	f891 00c0 	ldrb.w	r0, [r1, #192]	; 0xc0
 8022c14:	2201      	movs	r2, #1
 8022c16:	ae10      	add	r6, sp, #64	; 0x40
 8022c18:	f88d 2040 	strb.w	r2, [sp, #64]	; 0x40
 8022c1c:	7070      	strb	r0, [r6, #1]
 8022c1e:	7aaa      	ldrb	r2, [r5, #10]
 8022c20:	f501 70b4 	add.w	r0, r1, #360	; 0x168
 8022c24:	f891 108b 	ldrb.w	r1, [r1, #139]	; 0x8b
 8022c28:	f002 0201 	and.w	r2, r2, #1
 8022c2c:	70b2      	strb	r2, [r6, #2]
 8022c2e:	78c2      	ldrb	r2, [r0, #3]
 8022c30:	7131      	strb	r1, [r6, #4]
 8022c32:	70f2      	strb	r2, [r6, #3]
 8022c34:	2207      	movs	r2, #7
 8022c36:	7172      	strb	r2, [r6, #5]
 8022c38:	71b2      	strb	r2, [r6, #6]
 8022c3a:	2202      	movs	r2, #2
 8022c3c:	71f2      	strb	r2, [r6, #7]
 8022c3e:	7ae9      	ldrb	r1, [r5, #11]
 8022c40:	7802      	ldrb	r2, [r0, #0]
 8022c42:	7231      	strb	r1, [r6, #8]
 8022c44:	7aa9      	ldrb	r1, [r5, #10]
 8022c46:	72b2      	strb	r2, [r6, #10]
 8022c48:	7842      	ldrb	r2, [r0, #1]
 8022c4a:	f3c1 0140 	ubfx	r1, r1, #1, #1
 8022c4e:	7271      	strb	r1, [r6, #9]
 8022c50:	7ba9      	ldrb	r1, [r5, #14]
 8022c52:	7880      	ldrb	r0, [r0, #2]
 8022c54:	7332      	strb	r2, [r6, #12]
 8022c56:	72f1      	strb	r1, [r6, #11]
 8022c58:	7370      	strb	r0, [r6, #13]
 8022c5a:	f895 1071 	ldrb.w	r1, [r5, #113]	; 0x71
 8022c5e:	2206      	movs	r2, #6
 8022c60:	f10d 004f 	add.w	r0, sp, #79	; 0x4f
 8022c64:	73b1      	strb	r1, [r6, #14]
 8022c66:	f105 0172 	add.w	r1, r5, #114	; 0x72
 8022c6a:	f00e f93c 	bl	8030ee6 <__aeabi_memcpy>
 8022c6e:	7be8      	ldrb	r0, [r5, #15]
 8022c70:	2206      	movs	r2, #6
 8022c72:	f105 0110 	add.w	r1, r5, #16
 8022c76:	f000 0001 	and.w	r0, r0, #1
 8022c7a:	7570      	strb	r0, [r6, #21]
 8022c7c:	f10d 0056 	add.w	r0, sp, #86	; 0x56
 8022c80:	e05e      	b.n	8022d40 <?Subroutine0>

08022c82 <smp_SR_Compute_c1_Confirm_Value>:
 8022c82:	b5f0      	push	{r4, r5, r6, r7, lr}
 8022c84:	b097      	sub	sp, #92	; 0x5c
 8022c86:	4605      	mov	r5, r0
 8022c88:	460e      	mov	r6, r1
 8022c8a:	4614      	mov	r4, r2
 8022c8c:	213c      	movs	r1, #60	; 0x3c
 8022c8e:	a808      	add	r0, sp, #32
 8022c90:	f00e f926 	bl	8030ee0 <__aeabi_memclr>
 8022c94:	2210      	movs	r2, #16
 8022c96:	4631      	mov	r1, r6
 8022c98:	a80c      	add	r0, sp, #48	; 0x30
 8022c9a:	f00e f924 	bl	8030ee6 <__aeabi_memcpy>
 8022c9e:	7a68      	ldrb	r0, [r5, #9]
 8022ca0:	2802      	cmp	r0, #2
 8022ca2:	d106      	bne.n	8022cb2 <??smp_SR_Compute_c1_Confirm_Value_0>
 8022ca4:	4864      	ldr	r0, [pc, #400]	; (8022e38 <??DataTable11>)
 8022ca6:	f8d0 108c 	ldr.w	r1, [r0, #140]	; 0x8c
 8022caa:	a808      	add	r0, sp, #32
 8022cac:	f7ff fc0c 	bl	80224c8 <U32_TO_LE4>
 8022cb0:	e008      	b.n	8022cc4 <??smp_SR_Compute_c1_Confirm_Value_1>

08022cb2 <??smp_SR_Compute_c1_Confirm_Value_0>:
 8022cb2:	2803      	cmp	r0, #3
 8022cb4:	d106      	bne.n	8022cc4 <??smp_SR_Compute_c1_Confirm_Value_1>
 8022cb6:	f8df 0770 	ldr.w	r0, [pc, #1904]	; 8023428 <??DataTable12_1>
 8022cba:	e890 00cc 	ldmia.w	r0, {r2, r3, r6, r7}
 8022cbe:	a908      	add	r1, sp, #32
 8022cc0:	e881 00cc 	stmia.w	r1, {r2, r3, r6, r7}

08022cc4 <??smp_SR_Compute_c1_Confirm_Value_1>:
 8022cc4:	2201      	movs	r2, #1
 8022cc6:	f88d 2040 	strb.w	r2, [sp, #64]	; 0x40
 8022cca:	7ae8      	ldrb	r0, [r5, #11]
 8022ccc:	ae10      	add	r6, sp, #64	; 0x40
 8022cce:	7070      	strb	r0, [r6, #1]
 8022cd0:	7aa8      	ldrb	r0, [r5, #10]
 8022cd2:	f3c0 0040 	ubfx	r0, r0, #1, #1
 8022cd6:	70b0      	strb	r0, [r6, #2]
 8022cd8:	4857      	ldr	r0, [pc, #348]	; (8022e38 <??DataTable11>)
 8022cda:	f500 71b4 	add.w	r1, r0, #360	; 0x168
 8022cde:	780a      	ldrb	r2, [r1, #0]
 8022ce0:	70f2      	strb	r2, [r6, #3]
 8022ce2:	7bab      	ldrb	r3, [r5, #14]
 8022ce4:	784a      	ldrb	r2, [r1, #1]
 8022ce6:	7133      	strb	r3, [r6, #4]
 8022ce8:	788b      	ldrb	r3, [r1, #2]
 8022cea:	7172      	strb	r2, [r6, #5]
 8022cec:	2202      	movs	r2, #2
 8022cee:	71b3      	strb	r3, [r6, #6]
 8022cf0:	f890 30c0 	ldrb.w	r3, [r0, #192]	; 0xc0
 8022cf4:	71f2      	strb	r2, [r6, #7]
 8022cf6:	78c9      	ldrb	r1, [r1, #3]
 8022cf8:	7233      	strb	r3, [r6, #8]
 8022cfa:	7aaa      	ldrb	r2, [r5, #10]
 8022cfc:	f890 008b 	ldrb.w	r0, [r0, #139]	; 0x8b
 8022d00:	72b1      	strb	r1, [r6, #10]
 8022d02:	f002 0201 	and.w	r2, r2, #1
 8022d06:	7272      	strb	r2, [r6, #9]
 8022d08:	72f0      	strb	r0, [r6, #11]
 8022d0a:	7ea9      	ldrb	r1, [r5, #26]
 8022d0c:	2206      	movs	r2, #6
 8022d0e:	f001 0107 	and.w	r1, r1, #7
 8022d12:	7331      	strb	r1, [r6, #12]
 8022d14:	7ee8      	ldrb	r0, [r5, #27]
 8022d16:	f105 0172 	add.w	r1, r5, #114	; 0x72
 8022d1a:	f000 0007 	and.w	r0, r0, #7
 8022d1e:	7370      	strb	r0, [r6, #13]
 8022d20:	f895 0071 	ldrb.w	r0, [r5, #113]	; 0x71
 8022d24:	7570      	strb	r0, [r6, #21]
 8022d26:	f10d 0056 	add.w	r0, sp, #86	; 0x56
 8022d2a:	f00e f8dc 	bl	8030ee6 <__aeabi_memcpy>
 8022d2e:	7be8      	ldrb	r0, [r5, #15]
 8022d30:	2206      	movs	r2, #6
 8022d32:	f105 0110 	add.w	r1, r5, #16
 8022d36:	f000 0001 	and.w	r0, r0, #1
 8022d3a:	73b0      	strb	r0, [r6, #14]
 8022d3c:	f10d 004f 	add.w	r0, sp, #79	; 0x4f

08022d40 <?Subroutine0>:
 8022d40:	f00e f8d1 	bl	8030ee6 <__aeabi_memcpy>
 8022d44:	2207      	movs	r2, #7
 8022d46:	f10d 0147 	add.w	r1, sp, #71	; 0x47
 8022d4a:	f10d 0009 	add.w	r0, sp, #9
 8022d4e:	f00e f8ca 	bl	8030ee6 <__aeabi_memcpy>
 8022d52:	2207      	movs	r2, #7
 8022d54:	a910      	add	r1, sp, #64	; 0x40
 8022d56:	f10d 0002 	add.w	r0, sp, #2
 8022d5a:	f00e f8c4 	bl	8030ee6 <__aeabi_memcpy>
 8022d5e:	f10d 0055 	add.w	r0, sp, #85	; 0x55
 8022d62:	7802      	ldrb	r2, [r0, #0]
 8022d64:	f10d 004e 	add.w	r0, sp, #78	; 0x4e
 8022d68:	f10d 0101 	add.w	r1, sp, #1
 8022d6c:	700a      	strb	r2, [r1, #0]
 8022d6e:	7802      	ldrb	r2, [r0, #0]
 8022d70:	4669      	mov	r1, sp
 8022d72:	ab08      	add	r3, sp, #32
 8022d74:	700a      	strb	r2, [r1, #0]
 8022d76:	aa04      	add	r2, sp, #16
 8022d78:	2004      	movs	r0, #4

08022d7a <??Subroutine0_0>:
 8022d7a:	f811 5b01 	ldrb.w	r5, [r1], #1
 8022d7e:	7c1e      	ldrb	r6, [r3, #16]
 8022d80:	4075      	eors	r5, r6
 8022d82:	f802 5b01 	strb.w	r5, [r2], #1
 8022d86:	f811 6b01 	ldrb.w	r6, [r1], #1
 8022d8a:	7c5d      	ldrb	r5, [r3, #17]
 8022d8c:	406e      	eors	r6, r5
 8022d8e:	f802 6b01 	strb.w	r6, [r2], #1
 8022d92:	f811 5b01 	ldrb.w	r5, [r1], #1
 8022d96:	7c9e      	ldrb	r6, [r3, #18]
 8022d98:	4075      	eors	r5, r6
 8022d9a:	f802 5b01 	strb.w	r5, [r2], #1
 8022d9e:	f811 6b01 	ldrb.w	r6, [r1], #1
 8022da2:	7cdd      	ldrb	r5, [r3, #19]
 8022da4:	1d1b      	adds	r3, r3, #4
 8022da6:	406e      	eors	r6, r5
 8022da8:	f802 6b01 	strb.w	r6, [r2], #1
 8022dac:	1e40      	subs	r0, r0, #1
 8022dae:	d1e4      	bne.n	8022d7a <??Subroutine0_0>
 8022db0:	4622      	mov	r2, r4
 8022db2:	a904      	add	r1, sp, #16
 8022db4:	a808      	add	r0, sp, #32
 8022db6:	f004 fdb4 	bl	8027922 <BLEPLAT_AesEcbEncrypt>
 8022dba:	4668      	mov	r0, sp
 8022dbc:	2100      	movs	r1, #0
 8022dbe:	2200      	movs	r2, #0
 8022dc0:	2300      	movs	r3, #0
 8022dc2:	2500      	movs	r5, #0
 8022dc4:	e880 002e 	stmia.w	r0, {r1, r2, r3, r5}
 8022dc8:	2206      	movs	r2, #6
 8022dca:	f10d 014f 	add.w	r1, sp, #79	; 0x4f
 8022dce:	f10d 0006 	add.w	r0, sp, #6
 8022dd2:	f00e f888 	bl	8030ee6 <__aeabi_memcpy>
 8022dd6:	2206      	movs	r2, #6
 8022dd8:	f10d 0156 	add.w	r1, sp, #86	; 0x56
 8022ddc:	4668      	mov	r0, sp
 8022dde:	f00e f882 	bl	8030ee6 <__aeabi_memcpy>
 8022de2:	4622      	mov	r2, r4
 8022de4:	466b      	mov	r3, sp
 8022de6:	ad04      	add	r5, sp, #16
 8022de8:	2004      	movs	r0, #4

08022dea <??Subroutine0_1>:
 8022dea:	f812 7b01 	ldrb.w	r7, [r2], #1
 8022dee:	f813 1b01 	ldrb.w	r1, [r3], #1
 8022df2:	404f      	eors	r7, r1
 8022df4:	f805 7b01 	strb.w	r7, [r5], #1
 8022df8:	f812 cb01 	ldrb.w	ip, [r2], #1
 8022dfc:	f813 6b01 	ldrb.w	r6, [r3], #1
 8022e00:	ea86 0c0c 	eor.w	ip, r6, ip
 8022e04:	f805 cb01 	strb.w	ip, [r5], #1
 8022e08:	f812 7b01 	ldrb.w	r7, [r2], #1
 8022e0c:	f813 1b01 	ldrb.w	r1, [r3], #1
 8022e10:	404f      	eors	r7, r1
 8022e12:	f805 7b01 	strb.w	r7, [r5], #1
 8022e16:	f812 6b01 	ldrb.w	r6, [r2], #1
 8022e1a:	f813 cb01 	ldrb.w	ip, [r3], #1
 8022e1e:	1e40      	subs	r0, r0, #1
 8022e20:	ea8c 0606 	eor.w	r6, ip, r6
 8022e24:	f805 6b01 	strb.w	r6, [r5], #1
 8022e28:	d1df      	bne.n	8022dea <??Subroutine0_1>
 8022e2a:	4622      	mov	r2, r4
 8022e2c:	a904      	add	r1, sp, #16
 8022e2e:	a808      	add	r0, sp, #32
 8022e30:	f004 fd77 	bl	8027922 <BLEPLAT_AesEcbEncrypt>
 8022e34:	b017      	add	sp, #92	; 0x5c
 8022e36:	bdf0      	pop	{r4, r5, r6, r7, pc}

08022e38 <??DataTable11>:
 8022e38:	3710 2000                                   .7. 

08022e3c <??DataTable11_1>:
 8022e3c:	36e8 2000                                   .6. 

08022e40 <??DataTable11_2>:
 8022e40:	3878 2000                                   x8. 

08022e44 <SMP_Send_Packet>:
 8022e44:	b538      	push	{r3, r4, r5, lr}
 8022e46:	460c      	mov	r4, r1
 8022e48:	4601      	mov	r1, r0
 8022e4a:	2006      	movs	r0, #6
 8022e4c:	f7fc fc30 	bl	801f6b0 <L2C_Send_Data>
 8022e50:	0005      	movs	r5, r0
 8022e52:	bf04      	itt	eq
 8022e54:	4620      	moveq	r0, r4
 8022e56:	f7ff fb5e 	bleq	8022516 <SMP_Reset_Timer>
 8022e5a:	4628      	mov	r0, r5
 8022e5c:	bd32      	pop	{r1, r4, r5, pc}

08022e5e <SMP_Get_Ltk_Debug>:
 8022e5e:	b580      	push	{r7, lr}
 8022e60:	f7ff f834 	bl	8021ecc <SMP_Get_Remote_Device>
 8022e64:	b100      	cbz	r0, 8022e68 <??SMP_Get_Ltk_Debug_0>
 8022e66:	3024      	adds	r0, #36	; 0x24

08022e68 <??SMP_Get_Ltk_Debug_0>:
 8022e68:	bd02      	pop	{r1, pc}

08022e6a <SMP_MI_Start_Encryption>:
 8022e6a:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8022e6c:	4604      	mov	r4, r0
 8022e6e:	b084      	sub	sp, #16
 8022e70:	20ac      	movs	r0, #172	; 0xac
 8022e72:	7220      	strb	r0, [r4, #8]
 8022e74:	f104 056e 	add.w	r5, r4, #110	; 0x6e
 8022e78:	78a8      	ldrb	r0, [r5, #2]
 8022e7a:	0781      	lsls	r1, r0, #30
 8022e7c:	d51e      	bpl.n	8022ebc <??SMP_MI_Start_Encryption_0>
 8022e7e:	4668      	mov	r0, sp
 8022e80:	2100      	movs	r1, #0
 8022e82:	2200      	movs	r2, #0
 8022e84:	2300      	movs	r3, #0
 8022e86:	2600      	movs	r6, #0
 8022e88:	e880 004e 	stmia.w	r0, {r1, r2, r3, r6}
 8022e8c:	4669      	mov	r1, sp
 8022e8e:	f104 0324 	add.w	r3, r4, #36	; 0x24
 8022e92:	26ad      	movs	r6, #173	; 0xad

08022e94 <??SMP_MI_Start_Encryption_1>:
 8022e94:	7847      	ldrb	r7, [r0, #1]
 8022e96:	7802      	ldrb	r2, [r0, #0]
 8022e98:	8ae0      	ldrh	r0, [r4, #22]
 8022e9a:	ea42 2207 	orr.w	r2, r2, r7, lsl #8
 8022e9e:	f3c0 000b 	ubfx	r0, r0, #0, #12
 8022ea2:	f7fd fa46 	bl	8020332 <hci_le_enable_encryption>
 8022ea6:	78a9      	ldrb	r1, [r5, #2]
 8022ea8:	b9f0      	cbnz	r0, 8022ee8 <??SMP_MI_Start_Encryption_2>
 8022eaa:	07ca      	lsls	r2, r1, #31
 8022eac:	bf44      	itt	mi
 8022eae:	f041 0110 	orrmi.w	r1, r1, #16
 8022eb2:	26f1      	movmi	r6, #241	; 0xf1
 8022eb4:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 8022eb8:	7226      	strb	r6, [r4, #8]
 8022eba:	e019      	b.n	8022ef0 <??SMP_MI_Start_Encryption_3>

08022ebc <??SMP_MI_Start_Encryption_0>:
 8022ebc:	f010 0f05 	tst.w	r0, #5
 8022ec0:	d00c      	beq.n	8022edc <??SMP_MI_Start_Encryption_4>
 8022ec2:	782a      	ldrb	r2, [r5, #0]
 8022ec4:	f104 0144 	add.w	r1, r4, #68	; 0x44
 8022ec8:	f104 004c 	add.w	r0, r4, #76	; 0x4c
 8022ecc:	0713      	lsls	r3, r2, #28
 8022ece:	bf4c      	ite	mi
 8022ed0:	f104 0324 	addmi.w	r3, r4, #36	; 0x24
 8022ed4:	f104 0334 	addpl.w	r3, r4, #52	; 0x34
 8022ed8:	26ae      	movs	r6, #174	; 0xae
 8022eda:	e7db      	b.n	8022e94 <??SMP_MI_Start_Encryption_1>

08022edc <??SMP_MI_Start_Encryption_4>:
 8022edc:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 8022ee0:	70a8      	strb	r0, [r5, #2]
 8022ee2:	200c      	movs	r0, #12
 8022ee4:	b005      	add	sp, #20
 8022ee6:	bdf0      	pop	{r4, r5, r6, r7, pc}

08022ee8 <??SMP_MI_Start_Encryption_2>:
 8022ee8:	283a      	cmp	r0, #58	; 0x3a
 8022eea:	bf14      	ite	ne
 8022eec:	280c      	cmpne	r0, #12
 8022eee:	2000      	moveq	r0, #0

08022ef0 <??SMP_MI_Start_Encryption_3>:
 8022ef0:	70a9      	strb	r1, [r5, #2]
 8022ef2:	b005      	add	sp, #20
 8022ef4:	bdf0      	pop	{r4, r5, r6, r7, pc}

08022ef6 <SMP_Pairing_Process>:
 8022ef6:	b5f0      	push	{r4, r5, r6, r7, lr}
 8022ef8:	4605      	mov	r5, r0
 8022efa:	b09d      	sub	sp, #116	; 0x74
 8022efc:	f105 066e 	add.w	r6, r5, #110	; 0x6e
 8022f00:	7870      	ldrb	r0, [r6, #1]
 8022f02:	06c1      	lsls	r1, r0, #27
 8022f04:	d56f      	bpl.n	8022fe6 <??SMP_Pairing_Process_0>
 8022f06:	f105 0024 	add.w	r0, r5, #36	; 0x24
 8022f0a:	e890 108c 	ldmia.w	r0, {r2, r3, r7, ip}
 8022f0e:	a905      	add	r1, sp, #20
 8022f10:	f10d 0002 	add.w	r0, sp, #2
 8022f14:	8aec      	ldrh	r4, [r5, #22]
 8022f16:	e881 108c 	stmia.w	r1, {r2, r3, r7, ip}
 8022f1a:	2100      	movs	r1, #0
 8022f1c:	8001      	strh	r1, [r0, #0]
 8022f1e:	7a28      	ldrb	r0, [r5, #8]
 8022f20:	f3c4 040b 	ubfx	r4, r4, #0, #12
 8022f24:	28bc      	cmp	r0, #188	; 0xbc
 8022f26:	d01c      	beq.n	8022f62 <??SMP_Pairing_Process_1>
 8022f28:	28f1      	cmp	r0, #241	; 0xf1
 8022f2a:	d12b      	bne.n	8022f84 <??SMP_Pairing_Process_2>
 8022f2c:	7830      	ldrb	r0, [r6, #0]
 8022f2e:	0703      	lsls	r3, r0, #28
 8022f30:	d417      	bmi.n	8022f62 <??SMP_Pairing_Process_1>
 8022f32:	466a      	mov	r2, sp
 8022f34:	f105 0124 	add.w	r1, r5, #36	; 0x24
 8022f38:	f105 0018 	add.w	r0, r5, #24
 8022f3c:	f7fe faf3 	bl	8021526 <SMA_generate_EDIV_recovery_DIV>
 8022f40:	2202      	movs	r2, #2
 8022f42:	f105 012c 	add.w	r1, r5, #44	; 0x2c
 8022f46:	4668      	mov	r0, sp
 8022f48:	f00d fffa 	bl	8030f40 <memcmp>
 8022f4c:	b9d0      	cbnz	r0, 8022f84 <??SMP_Pairing_Process_2>
 8022f4e:	f105 0324 	add.w	r3, r5, #36	; 0x24
 8022f52:	f10d 0202 	add.w	r2, sp, #2
 8022f56:	f105 0118 	add.w	r1, r5, #24
 8022f5a:	f8df 04d0 	ldr.w	r0, [pc, #1232]	; 802342c <??DataTable12_2>
 8022f5e:	f7fe fac7 	bl	80214f0 <SMA_Diversify>

08022f62 <??SMP_Pairing_Process_1>:
 8022f62:	a801      	add	r0, sp, #4
 8022f64:	2100      	movs	r1, #0
 8022f66:	2200      	movs	r2, #0
 8022f68:	2300      	movs	r3, #0
 8022f6a:	2700      	movs	r7, #0
 8022f6c:	e880 008e 	stmia.w	r0, {r1, r2, r3, r7}
 8022f70:	7baa      	ldrb	r2, [r5, #14]
 8022f72:	f105 0124 	add.w	r1, r5, #36	; 0x24
 8022f76:	f00d ffb6 	bl	8030ee6 <__aeabi_memcpy>
 8022f7a:	a901      	add	r1, sp, #4
 8022f7c:	4620      	mov	r0, r4
 8022f7e:	f7fd f9c5 	bl	802030c <hci_le_long_term_key_request_reply>
 8022f82:	e017      	b.n	8022fb4 <??SMP_Pairing_Process_3>

08022f84 <??SMP_Pairing_Process_2>:
 8022f84:	7870      	ldrb	r0, [r6, #1]
 8022f86:	f010 0f03 	tst.w	r0, #3
 8022f8a:	d010      	beq.n	8022fae <??SMP_Pairing_Process_4>
 8022f8c:	4628      	mov	r0, r5
 8022f8e:	f7ff faa3 	bl	80224d8 <SMP_remDev_Index>
 8022f92:	3008      	adds	r0, #8
 8022f94:	b2c0      	uxtb	r0, r0
 8022f96:	f004 fcd7 	bl	8027948 <BLEPLAT_TimerStop>
 8022f9a:	7870      	ldrb	r0, [r6, #1]
 8022f9c:	2306      	movs	r3, #6
 8022f9e:	2203      	movs	r2, #3
 8022fa0:	f000 00f0 	and.w	r0, r0, #240	; 0xf0
 8022fa4:	7070      	strb	r0, [r6, #1]
 8022fa6:	4621      	mov	r1, r4
 8022fa8:	2001      	movs	r0, #1
 8022faa:	f7fc f8e7 	bl	801f17c <EVT_aci_gap_pairing_complete>

08022fae <??SMP_Pairing_Process_4>:
 8022fae:	4620      	mov	r0, r4
 8022fb0:	f7fd f9a8 	bl	8020304 <hci_le_long_term_key_request_negative_reply>

08022fb4 <??SMP_Pairing_Process_3>:
 8022fb4:	283a      	cmp	r0, #58	; 0x3a
 8022fb6:	d004      	beq.n	8022fc2 <??SMP_Pairing_Process_5>
 8022fb8:	7870      	ldrb	r0, [r6, #1]
 8022fba:	f000 00ef 	and.w	r0, r0, #239	; 0xef
 8022fbe:	7070      	strb	r0, [r6, #1]
 8022fc0:	e011      	b.n	8022fe6 <??SMP_Pairing_Process_0>

08022fc2 <??SMP_Pairing_Process_5>:
 8022fc2:	a805      	add	r0, sp, #20
 8022fc4:	e890 009c 	ldmia.w	r0, {r2, r3, r4, r7}
 8022fc8:	f105 0124 	add.w	r1, r5, #36	; 0x24
 8022fcc:	e881 009c 	stmia.w	r1, {r2, r3, r4, r7}
 8022fd0:	f3ef 8110 	mrs	r1, PRIMASK
 8022fd4:	b672      	cpsid	i
 8022fd6:	f8df 0458 	ldr.w	r0, [pc, #1112]	; 8023430 <??DataTable12_3>
 8022fda:	78c2      	ldrb	r2, [r0, #3]
 8022fdc:	f002 02fb 	and.w	r2, r2, #251	; 0xfb
 8022fe0:	70c2      	strb	r2, [r0, #3]
 8022fe2:	f381 8810 	msr	PRIMASK, r1

08022fe6 <??SMP_Pairing_Process_0>:
 8022fe6:	7a28      	ldrb	r0, [r5, #8]
 8022fe8:	2800      	cmp	r0, #0
 8022fea:	f000 8219 	beq.w	8023420 <??SMP_Pairing_Process_6>
 8022fee:	2810      	cmp	r0, #16
 8022ff0:	f040 809b 	bne.w	802312a <??SMP_Pairing_Process_7>
 8022ff4:	7be9      	ldrb	r1, [r5, #15]
 8022ff6:	aa09      	add	r2, sp, #36	; 0x24
 8022ff8:	f105 0010 	add.w	r0, r5, #16
 8022ffc:	f001 0101 	and.w	r1, r1, #1
 8023000:	f7fe f84d 	bl	802109e <SDB_Read_Sec_Record>
 8023004:	2800      	cmp	r0, #0
 8023006:	d178      	bne.n	80230fa <??SMP_Pairing_Process_8>
 8023008:	2001      	movs	r0, #1
 802300a:	7328      	strb	r0, [r5, #12]
 802300c:	f89d 0027 	ldrb.w	r0, [sp, #39]	; 0x27
 8023010:	73a8      	strb	r0, [r5, #14]
 8023012:	f89d 0025 	ldrb.w	r0, [sp, #37]	; 0x25
 8023016:	0601      	lsls	r1, r0, #24
 8023018:	d503      	bpl.n	8023022 <??SMP_Pairing_Process_9>
 802301a:	7ea8      	ldrb	r0, [r5, #26]
 802301c:	f040 0010 	orr.w	r0, r0, #16
 8023020:	76a8      	strb	r0, [r5, #26]

08023022 <??SMP_Pairing_Process_9>:
 8023022:	f89d 1025 	ldrb.w	r1, [sp, #37]	; 0x25
 8023026:	7ea8      	ldrb	r0, [r5, #26]
 8023028:	f001 0160 	and.w	r1, r1, #96	; 0x60
 802302c:	4308      	orrs	r0, r1
 802302e:	76a8      	strb	r0, [r5, #26]
 8023030:	f89d 0025 	ldrb.w	r0, [sp, #37]	; 0x25
 8023034:	06c1      	lsls	r1, r0, #27
 8023036:	d503      	bpl.n	8023040 <??SMP_Pairing_Process_10>
 8023038:	7ee8      	ldrb	r0, [r5, #27]
 802303a:	f040 0001 	orr.w	r0, r0, #1
 802303e:	76e8      	strb	r0, [r5, #27]

08023040 <??SMP_Pairing_Process_10>:
 8023040:	981c      	ldr	r0, [sp, #112]	; 0x70
 8023042:	2210      	movs	r2, #16
 8023044:	f10d 0132 	add.w	r1, sp, #50	; 0x32
 8023048:	6068      	str	r0, [r5, #4]
 802304a:	981b      	ldr	r0, [sp, #108]	; 0x6c
 802304c:	6028      	str	r0, [r5, #0]
 802304e:	f105 0034 	add.w	r0, r5, #52	; 0x34
 8023052:	f00d ff48 	bl	8030ee6 <__aeabi_memcpy>
 8023056:	2210      	movs	r2, #16
 8023058:	f10d 0142 	add.w	r1, sp, #66	; 0x42
 802305c:	f105 004e 	add.w	r0, r5, #78	; 0x4e
 8023060:	f00d ff41 	bl	8030ee6 <__aeabi_memcpy>
 8023064:	2210      	movs	r2, #16
 8023066:	f10d 0152 	add.w	r1, sp, #82	; 0x52
 802306a:	f105 005e 	add.w	r0, r5, #94	; 0x5e
 802306e:	f00d ff3a 	bl	8030ee6 <__aeabi_memcpy>
 8023072:	2202      	movs	r2, #2
 8023074:	a91a      	add	r1, sp, #104	; 0x68
 8023076:	f105 0018 	add.w	r0, r5, #24
 802307a:	f00d ff34 	bl	8030ee6 <__aeabi_memcpy>
 802307e:	f10d 002a 	add.w	r0, sp, #42	; 0x2a
 8023082:	6802      	ldr	r2, [r0, #0]
 8023084:	f105 0144 	add.w	r1, r5, #68	; 0x44
 8023088:	600a      	str	r2, [r1, #0]
 802308a:	6842      	ldr	r2, [r0, #4]
 802308c:	f105 004c 	add.w	r0, r5, #76	; 0x4c
 8023090:	604a      	str	r2, [r1, #4]
 8023092:	2202      	movs	r2, #2
 8023094:	a90a      	add	r1, sp, #40	; 0x28
 8023096:	f00d ff26 	bl	8030ee6 <__aeabi_memcpy>
 802309a:	f89d 0025 	ldrb.w	r0, [sp, #37]	; 0x25
 802309e:	0781      	lsls	r1, r0, #30
 80230a0:	d503      	bpl.n	80230aa <??SMP_Pairing_Process_11>
 80230a2:	8aea      	ldrh	r2, [r5, #22]
 80230a4:	f442 5200 	orr.w	r2, r2, #8192	; 0x2000
 80230a8:	82ea      	strh	r2, [r5, #22]

080230aa <??SMP_Pairing_Process_11>:
 80230aa:	0741      	lsls	r1, r0, #29
 80230ac:	d503      	bpl.n	80230b6 <??SMP_Pairing_Process_12>
 80230ae:	8aea      	ldrh	r2, [r5, #22]
 80230b0:	f442 4280 	orr.w	r2, r2, #16384	; 0x4000
 80230b4:	82ea      	strh	r2, [r5, #22]

080230b6 <??SMP_Pairing_Process_12>:
 80230b6:	0700      	lsls	r0, r0, #28
 80230b8:	d503      	bpl.n	80230c2 <??SMP_Pairing_Process_13>
 80230ba:	8ae9      	ldrh	r1, [r5, #22]
 80230bc:	f441 4100 	orr.w	r1, r1, #32768	; 0x8000
 80230c0:	82e9      	strh	r1, [r5, #22]

080230c2 <??SMP_Pairing_Process_13>:
 80230c2:	f89d 0026 	ldrb.w	r0, [sp, #38]	; 0x26
 80230c6:	0701      	lsls	r1, r0, #28
 80230c8:	d50b      	bpl.n	80230e2 <??SMP_Pairing_Process_14>
 80230ca:	7832      	ldrb	r2, [r6, #0]
 80230cc:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 80230d0:	f10d 0132 	add.w	r1, sp, #50	; 0x32
 80230d4:	4310      	orrs	r0, r2
 80230d6:	7030      	strb	r0, [r6, #0]
 80230d8:	2210      	movs	r2, #16
 80230da:	f105 0024 	add.w	r0, r5, #36	; 0x24
 80230de:	f00d ff02 	bl	8030ee6 <__aeabi_memcpy>

080230e2 <??SMP_Pairing_Process_14>:
 80230e2:	8ae9      	ldrh	r1, [r5, #22]
 80230e4:	20f1      	movs	r0, #241	; 0xf1
 80230e6:	7228      	strb	r0, [r5, #8]
 80230e8:	0408      	lsls	r0, r1, #16
 80230ea:	f140 8159 	bpl.w	80233a0 <??SMP_Pairing_Process_15>
 80230ee:	f3c1 010b 	ubfx	r1, r1, #0, #12
 80230f2:	2001      	movs	r0, #1
 80230f4:	f7fc f850 	bl	801f198 <EVT_aci_gap_authorization_req>
 80230f8:	e152      	b.n	80233a0 <??SMP_Pairing_Process_15>

080230fa <??SMP_Pairing_Process_8>:
 80230fa:	7830      	ldrb	r0, [r6, #0]
 80230fc:	07c1      	lsls	r1, r0, #31
 80230fe:	d512      	bpl.n	8023126 <??SMP_Pairing_Process_16>
 8023100:	f8df 232c 	ldr.w	r2, [pc, #812]	; 8023430 <??DataTable12_3>
 8023104:	7850      	ldrb	r0, [r2, #1]
 8023106:	b170      	cbz	r0, 8023126 <??SMP_Pairing_Process_16>
 8023108:	f7fd ffff 	bl	802110a <SDB_Get_Number_Of_Sec_Records>
 802310c:	b158      	cbz	r0, 8023126 <??SMP_Pairing_Process_16>
 802310e:	7be8      	ldrb	r0, [r5, #15]
 8023110:	07c1      	lsls	r1, r0, #31
 8023112:	d508      	bpl.n	8023126 <??SMP_Pairing_Process_16>
 8023114:	7d68      	ldrb	r0, [r5, #21]
 8023116:	f000 00c0 	and.w	r0, r0, #192	; 0xc0
 802311a:	2840      	cmp	r0, #64	; 0x40
 802311c:	d103      	bne.n	8023126 <??SMP_Pairing_Process_16>
 802311e:	8ae9      	ldrh	r1, [r5, #22]
 8023120:	2001      	movs	r0, #1
 8023122:	f7fc f812 	bl	801f14a <EVT_aci_gap_addr_not_resolved>

08023126 <??SMP_Pairing_Process_16>:
 8023126:	2000      	movs	r0, #0
 8023128:	e135      	b.n	8023396 <??SMP_Pairing_Process_17>

0802312a <??SMP_Pairing_Process_7>:
 802312a:	28d1      	cmp	r0, #209	; 0xd1
 802312c:	bf18      	it	ne
 802312e:	28d2      	cmpne	r0, #210	; 0xd2
 8023130:	d005      	beq.n	802313e <??SMP_Pairing_Process_18>
 8023132:	28d3      	cmp	r0, #211	; 0xd3
 8023134:	bf1c      	itt	ne
 8023136:	28d4      	cmpne	r0, #212	; 0xd4
 8023138:	28d5      	cmpne	r0, #213	; 0xd5
 802313a:	f040 8085 	bne.w	8023248 <??SMP_Pairing_Process_19>

0802313e <??SMP_Pairing_Process_18>:
 802313e:	2100      	movs	r1, #0
 8023140:	f8ad 1000 	strh.w	r1, [sp]
 8023144:	8ae9      	ldrh	r1, [r5, #22]
 8023146:	2220      	movs	r2, #32
 8023148:	2000      	movs	r0, #0
 802314a:	f3c1 010b 	ubfx	r1, r1, #0, #12
 802314e:	f001 fdb0 	bl	8024cb2 <ACL_PM_New>
 8023152:	0004      	movs	r4, r0
 8023154:	f000 8124 	beq.w	80233a0 <??SMP_Pairing_Process_15>
 8023158:	7870      	ldrb	r0, [r6, #1]
 802315a:	0641      	lsls	r1, r0, #25
 802315c:	d408      	bmi.n	8023170 <??SMP_Pairing_Process_20>
 802315e:	2102      	movs	r1, #2
 8023160:	f105 0018 	add.w	r0, r5, #24
 8023164:	f001 fcd2 	bl	8024b0c <HAL_Generate_Random_Bytes_To>
 8023168:	7870      	ldrb	r0, [r6, #1]
 802316a:	f040 0040 	orr.w	r0, r0, #64	; 0x40
 802316e:	7070      	strb	r0, [r6, #1]

08023170 <??SMP_Pairing_Process_20>:
 8023170:	7a28      	ldrb	r0, [r5, #8]
 8023172:	28d1      	cmp	r0, #209	; 0xd1
 8023174:	d113      	bne.n	802319e <??SMP_Pairing_Process_21>
 8023176:	2108      	movs	r1, #8
 8023178:	f105 001c 	add.w	r0, r5, #28
 802317c:	f001 fcc6 	bl	8024b0c <HAL_Generate_Random_Bytes_To>
 8023180:	ab05      	add	r3, sp, #20
 8023182:	466a      	mov	r2, sp
 8023184:	f105 0118 	add.w	r1, r5, #24
 8023188:	48a8      	ldr	r0, [pc, #672]	; (802342c <??DataTable12_2>)
 802318a:	f7fe f9b1 	bl	80214f0 <SMA_Diversify>
 802318e:	68a1      	ldr	r1, [r4, #8]
 8023190:	2006      	movs	r0, #6
 8023192:	ab05      	add	r3, sp, #20
 8023194:	7308      	strb	r0, [r1, #12]
 8023196:	2011      	movs	r0, #17
 8023198:	80e0      	strh	r0, [r4, #6]
 802319a:	7baa      	ldrb	r2, [r5, #14]
 802319c:	e047      	b.n	802322e <??SMP_Pairing_Process_22>

0802319e <??SMP_Pairing_Process_21>:
 802319e:	28d2      	cmp	r0, #210	; 0xd2
 80231a0:	d116      	bne.n	80231d0 <??SMP_Pairing_Process_23>
 80231a2:	200b      	movs	r0, #11
 80231a4:	80e0      	strh	r0, [r4, #6]
 80231a6:	68a0      	ldr	r0, [r4, #8]
 80231a8:	2107      	movs	r1, #7
 80231aa:	466a      	mov	r2, sp
 80231ac:	7301      	strb	r1, [r0, #12]
 80231ae:	f105 011c 	add.w	r1, r5, #28
 80231b2:	f105 0018 	add.w	r0, r5, #24
 80231b6:	f7fe f9b6 	bl	8021526 <SMA_generate_EDIV_recovery_DIV>
 80231ba:	466b      	mov	r3, sp
 80231bc:	2202      	movs	r2, #2
 80231be:	2105      	movs	r1, #5
 80231c0:	4620      	mov	r0, r4
 80231c2:	f001 fe1a 	bl	8024dfa <ACL_PM_Set_Data>
 80231c6:	f105 031c 	add.w	r3, r5, #28
 80231ca:	2208      	movs	r2, #8
 80231cc:	2107      	movs	r1, #7
 80231ce:	e01c      	b.n	802320a <??SMP_Pairing_Process_24>

080231d0 <??SMP_Pairing_Process_23>:
 80231d0:	28d3      	cmp	r0, #211	; 0xd3
 80231d2:	d108      	bne.n	80231e6 <??SMP_Pairing_Process_25>
 80231d4:	a801      	add	r0, sp, #4
 80231d6:	f7fe fa0f 	bl	80215f8 <SMA_Generate_IRK>
 80231da:	2011      	movs	r0, #17
 80231dc:	80e0      	strh	r0, [r4, #6]
 80231de:	68a0      	ldr	r0, [r4, #8]
 80231e0:	2108      	movs	r1, #8
 80231e2:	7301      	strb	r1, [r0, #12]
 80231e4:	e021      	b.n	802322a <??SMP_Pairing_Process_26>

080231e6 <??SMP_Pairing_Process_25>:
 80231e6:	28d4      	cmp	r0, #212	; 0xd4
 80231e8:	d113      	bne.n	8023212 <??SMP_Pairing_Process_27>
 80231ea:	f8df 3c78 	ldr.w	r3, [pc, #3192]	; 8023e64 <??DataTable15>
 80231ee:	f893 0036 	ldrb.w	r0, [r3, #54]	; 0x36
 80231f2:	0001      	movs	r1, r0
 80231f4:	bf18      	it	ne
 80231f6:	332e      	addne	r3, #46	; 0x2e
 80231f8:	2108      	movs	r1, #8
 80231fa:	80e1      	strh	r1, [r4, #6]
 80231fc:	68a1      	ldr	r1, [r4, #8]
 80231fe:	2209      	movs	r2, #9
 8023200:	730a      	strb	r2, [r1, #12]
 8023202:	68a2      	ldr	r2, [r4, #8]
 8023204:	2106      	movs	r1, #6
 8023206:	7350      	strb	r0, [r2, #13]
 8023208:	2206      	movs	r2, #6

0802320a <??SMP_Pairing_Process_24>:
 802320a:	4620      	mov	r0, r4
 802320c:	f001 fdf5 	bl	8024dfa <ACL_PM_Set_Data>
 8023210:	e011      	b.n	8023236 <??SMP_Pairing_Process_28>

08023212 <??SMP_Pairing_Process_27>:
 8023212:	28d5      	cmp	r0, #213	; 0xd5
 8023214:	d10f      	bne.n	8023236 <??SMP_Pairing_Process_28>
 8023216:	2011      	movs	r0, #17
 8023218:	80e0      	strh	r0, [r4, #6]
 802321a:	68a0      	ldr	r0, [r4, #8]
 802321c:	210a      	movs	r1, #10
 802321e:	7301      	strb	r1, [r0, #12]
 8023220:	a901      	add	r1, sp, #4
 8023222:	f105 0018 	add.w	r0, r5, #24
 8023226:	f7fe f9cc 	bl	80215c2 <SMA_Generate_CSRK>

0802322a <??SMP_Pairing_Process_26>:
 802322a:	ab01      	add	r3, sp, #4
 802322c:	2210      	movs	r2, #16

0802322e <??SMP_Pairing_Process_22>:
 802322e:	2105      	movs	r1, #5
 8023230:	4620      	mov	r0, r4
 8023232:	f001 fde2 	bl	8024dfa <ACL_PM_Set_Data>

08023236 <??SMP_Pairing_Process_28>:
 8023236:	4629      	mov	r1, r5
 8023238:	4620      	mov	r0, r4
 802323a:	f7ff fe03 	bl	8022e44 <SMP_Send_Packet>
 802323e:	2800      	cmp	r0, #0
 8023240:	f040 80ae 	bne.w	80233a0 <??SMP_Pairing_Process_15>
 8023244:	20dd      	movs	r0, #221	; 0xdd
 8023246:	e0a6      	b.n	8023396 <??SMP_Pairing_Process_17>

08023248 <??SMP_Pairing_Process_19>:
 8023248:	28e0      	cmp	r0, #224	; 0xe0
 802324a:	d103      	bne.n	8023254 <??SMP_Pairing_Process_29>
 802324c:	4628      	mov	r0, r5
 802324e:	f000 fdd1 	bl	8023df4 <smp_pairing_completed>
 8023252:	e0a5      	b.n	80233a0 <??SMP_Pairing_Process_15>

08023254 <??SMP_Pairing_Process_29>:
 8023254:	28fe      	cmp	r0, #254	; 0xfe
 8023256:	d108      	bne.n	802326a <??SMP_Pairing_Process_30>
 8023258:	7870      	ldrb	r0, [r6, #1]
 802325a:	0601      	lsls	r1, r0, #24
 802325c:	f140 80a0 	bpl.w	80233a0 <??SMP_Pairing_Process_15>
 8023260:	2180      	movs	r1, #128	; 0x80
 8023262:	4628      	mov	r0, r5
 8023264:	f00d fe3c 	bl	8030ee0 <__aeabi_memclr>
 8023268:	e09a      	b.n	80233a0 <??SMP_Pairing_Process_15>

0802326a <??SMP_Pairing_Process_30>:
 802326a:	28a2      	cmp	r0, #162	; 0xa2
 802326c:	bf18      	it	ne
 802326e:	28b2      	cmpne	r0, #178	; 0xb2
 8023270:	d13e      	bne.n	80232f0 <??SMP_Pairing_Process_31>
 8023272:	7830      	ldrb	r0, [r6, #0]
 8023274:	0701      	lsls	r1, r0, #28
 8023276:	d524      	bpl.n	80232c2 <??SMP_Pairing_Process_32>
 8023278:	f8df 4be8 	ldr.w	r4, [pc, #3048]	; 8023e64 <??DataTable15>
 802327c:	2140      	movs	r1, #64	; 0x40
 802327e:	f104 00e8 	add.w	r0, r4, #232	; 0xe8
 8023282:	f001 fbe7 	bl	8024a54 <Is_Empty>
 8023286:	b9c8      	cbnz	r0, 80232bc <??SMP_Pairing_Process_33>
 8023288:	2120      	movs	r1, #32
 802328a:	f104 0040 	add.w	r0, r4, #64	; 0x40
 802328e:	f001 fbe1 	bl	8024a54 <Is_Empty>
 8023292:	b998      	cbnz	r0, 80232bc <??SMP_Pairing_Process_33>
 8023294:	7830      	ldrb	r0, [r6, #0]
 8023296:	f000 01c0 	and.w	r1, r0, #192	; 0xc0
 802329a:	29c0      	cmp	r1, #192	; 0xc0
 802329c:	d011      	beq.n	80232c2 <??SMP_Pairing_Process_32>
 802329e:	f010 0f41 	tst.w	r0, #65	; 0x41
 80232a2:	d103      	bne.n	80232ac <??SMP_Pairing_Process_34>
 80232a4:	f000 001f 	and.w	r0, r0, #31
 80232a8:	7030      	strb	r0, [r6, #0]
 80232aa:	e003      	b.n	80232b4 <??SMP_Pairing_Process_35>

080232ac <??SMP_Pairing_Process_34>:
 80232ac:	f000 0081 	and.w	r0, r0, #129	; 0x81
 80232b0:	2881      	cmp	r0, #129	; 0x81
 80232b2:	d175      	bne.n	80233a0 <??SMP_Pairing_Process_15>

080232b4 <??SMP_Pairing_Process_35>:
 80232b4:	4628      	mov	r0, r5
 80232b6:	f001 f8ca 	bl	802444e <smp_sc_pairing_public_key_send>
 80232ba:	e071      	b.n	80233a0 <??SMP_Pairing_Process_15>

080232bc <??SMP_Pairing_Process_33>:
 80232bc:	f001 f8a7 	bl	802440e <smp_sc_submit_ecc_pk_generation_request>
 80232c0:	e06e      	b.n	80233a0 <??SMP_Pairing_Process_15>

080232c2 <??SMP_Pairing_Process_32>:
 80232c2:	7a68      	ldrb	r0, [r5, #9]
 80232c4:	2802      	cmp	r0, #2
 80232c6:	d102      	bne.n	80232ce <??SMP_Pairing_Process_36>
 80232c8:	7b68      	ldrb	r0, [r5, #13]
 80232ca:	06c1      	lsls	r1, r0, #27
 80232cc:	d568      	bpl.n	80233a0 <??SMP_Pairing_Process_15>

080232ce <??SMP_Pairing_Process_36>:
 80232ce:	7830      	ldrb	r0, [r6, #0]
 80232d0:	07c1      	lsls	r1, r0, #31
 80232d2:	bf54      	ite	pl
 80232d4:	20a4      	movpl	r0, #164	; 0xa4
 80232d6:	20b4      	movmi	r0, #180	; 0xb4
 80232d8:	7228      	strb	r0, [r5, #8]
 80232da:	f3ef 8110 	mrs	r1, PRIMASK
 80232de:	b672      	cpsid	i
 80232e0:	4853      	ldr	r0, [pc, #332]	; (8023430 <??DataTable12_3>)
 80232e2:	78c2      	ldrb	r2, [r0, #3]
 80232e4:	f002 02fb 	and.w	r2, r2, #251	; 0xfb
 80232e8:	70c2      	strb	r2, [r0, #3]
 80232ea:	f381 8810 	msr	PRIMASK, r1
 80232ee:	e057      	b.n	80233a0 <??SMP_Pairing_Process_15>

080232f0 <??SMP_Pairing_Process_31>:
 80232f0:	28b4      	cmp	r0, #180	; 0xb4
 80232f2:	d11b      	bne.n	802332c <??SMP_Pairing_Process_37>
 80232f4:	2110      	movs	r1, #16
 80232f6:	f105 005e 	add.w	r0, r5, #94	; 0x5e
 80232fa:	f001 fc07 	bl	8024b0c <HAL_Generate_Random_Bytes_To>
 80232fe:	7830      	ldrb	r0, [r6, #0]
 8023300:	0701      	lsls	r1, r0, #28
 8023302:	d511      	bpl.n	8023328 <??SMP_Pairing_Process_38>
 8023304:	7a68      	ldrb	r0, [r5, #9]
 8023306:	2801      	cmp	r0, #1
 8023308:	bf18      	it	ne
 802330a:	2804      	cmpne	r0, #4
 802330c:	d007      	beq.n	802331e <??SMP_Pairing_Process_39>
 802330e:	2802      	cmp	r0, #2
 8023310:	d126      	bne.n	8023360 <??SMP_Pairing_Process_40>
 8023312:	7be8      	ldrb	r0, [r5, #15]
 8023314:	21b5      	movs	r1, #181	; 0xb5
 8023316:	7229      	strb	r1, [r5, #8]
 8023318:	3008      	adds	r0, #8
 802331a:	73e8      	strb	r0, [r5, #15]
 802331c:	e040      	b.n	80233a0 <??SMP_Pairing_Process_15>

0802331e <??SMP_Pairing_Process_39>:
 802331e:	4629      	mov	r1, r5
 8023320:	2000      	movs	r0, #0
 8023322:	f7ff fc04 	bl	8022b2e <smp__SR_PairingConfirm_Receive>
 8023326:	e03b      	b.n	80233a0 <??SMP_Pairing_Process_15>

08023328 <??SMP_Pairing_Process_38>:
 8023328:	20b5      	movs	r0, #181	; 0xb5
 802332a:	e034      	b.n	8023396 <??SMP_Pairing_Process_17>

0802332c <??SMP_Pairing_Process_37>:
 802332c:	28bf      	cmp	r0, #191	; 0xbf
 802332e:	d034      	beq.n	802339a <??SMP_Pairing_Process_41>
 8023330:	7831      	ldrb	r1, [r6, #0]
 8023332:	07ca      	lsls	r2, r1, #31
 8023334:	d434      	bmi.n	80233a0 <??SMP_Pairing_Process_15>
 8023336:	28a4      	cmp	r0, #164	; 0xa4
 8023338:	d11e      	bne.n	8023378 <??SMP_Pairing_Process_42>
 802333a:	2110      	movs	r1, #16
 802333c:	f105 004e 	add.w	r0, r5, #78	; 0x4e
 8023340:	f001 fbe4 	bl	8024b0c <HAL_Generate_Random_Bytes_To>
 8023344:	7830      	ldrb	r0, [r6, #0]
 8023346:	0701      	lsls	r1, r0, #28
 8023348:	d512      	bpl.n	8023370 <??SMP_Pairing_Process_43>
 802334a:	7a68      	ldrb	r0, [r5, #9]
 802334c:	2801      	cmp	r0, #1
 802334e:	bf18      	it	ne
 8023350:	2804      	cmpne	r0, #4
 8023352:	d00b      	beq.n	802336c <??SMP_Pairing_Process_44>
 8023354:	2802      	cmp	r0, #2
 8023356:	d103      	bne.n	8023360 <??SMP_Pairing_Process_40>
 8023358:	7be8      	ldrb	r0, [r5, #15]
 802335a:	3008      	adds	r0, #8
 802335c:	73e8      	strb	r0, [r5, #15]
 802335e:	e007      	b.n	8023370 <??SMP_Pairing_Process_43>

08023360 <??SMP_Pairing_Process_40>:
 8023360:	2803      	cmp	r0, #3
 8023362:	d11d      	bne.n	80233a0 <??SMP_Pairing_Process_15>
 8023364:	4628      	mov	r0, r5
 8023366:	f001 f929 	bl	80245bc <smp_sc_pairing_oob_confirm_receive_verify>
 802336a:	e019      	b.n	80233a0 <??SMP_Pairing_Process_15>

0802336c <??SMP_Pairing_Process_44>:
 802336c:	20a5      	movs	r0, #165	; 0xa5
 802336e:	e012      	b.n	8023396 <??SMP_Pairing_Process_17>

08023370 <??SMP_Pairing_Process_43>:
 8023370:	4628      	mov	r0, r5
 8023372:	f7ff fb6b 	bl	8022a4c <smp__MI_PairingConfirm_Send>
 8023376:	e013      	b.n	80233a0 <??SMP_Pairing_Process_15>

08023378 <??SMP_Pairing_Process_42>:
 8023378:	28ac      	cmp	r0, #172	; 0xac
 802337a:	d103      	bne.n	8023384 <??SMP_Pairing_Process_45>
 802337c:	4628      	mov	r0, r5
 802337e:	f7ff fd74 	bl	8022e6a <SMP_MI_Start_Encryption>
 8023382:	e00d      	b.n	80233a0 <??SMP_Pairing_Process_15>

08023384 <??SMP_Pairing_Process_45>:
 8023384:	28af      	cmp	r0, #175	; 0xaf
 8023386:	d10b      	bne.n	80233a0 <??SMP_Pairing_Process_15>
 8023388:	7ea8      	ldrb	r0, [r5, #26]
 802338a:	0709      	lsls	r1, r1, #28
 802338c:	d400      	bmi.n	8023390 <??SMP_Pairing_Process_46>
 802338e:	b908      	cbnz	r0, 8023394 <??SMP_Pairing_Process_47>

08023390 <??SMP_Pairing_Process_46>:
 8023390:	2802      	cmp	r0, #2
 8023392:	db02      	blt.n	802339a <??SMP_Pairing_Process_41>

08023394 <??SMP_Pairing_Process_47>:
 8023394:	20d0      	movs	r0, #208	; 0xd0

08023396 <??SMP_Pairing_Process_17>:
 8023396:	7228      	strb	r0, [r5, #8]
 8023398:	e002      	b.n	80233a0 <??SMP_Pairing_Process_15>

0802339a <??SMP_Pairing_Process_41>:
 802339a:	4628      	mov	r0, r5
 802339c:	f000 fce1 	bl	8023d62 <smp_keys_distribution_start>

080233a0 <??SMP_Pairing_Process_15>:
 80233a0:	7830      	ldrb	r0, [r6, #0]
 80233a2:	0701      	lsls	r1, r0, #28
 80233a4:	d53c      	bpl.n	8023420 <??SMP_Pairing_Process_6>
 80233a6:	7a29      	ldrb	r1, [r5, #8]
 80233a8:	29aa      	cmp	r1, #170	; 0xaa
 80233aa:	bf18      	it	ne
 80233ac:	29ba      	cmpne	r1, #186	; 0xba
 80233ae:	d029      	beq.n	8023404 <??SMP_Pairing_Process_48>
 80233b0:	29b9      	cmp	r1, #185	; 0xb9
 80233b2:	d11d      	bne.n	80233f0 <??SMP_Pairing_Process_49>
 80233b4:	7a68      	ldrb	r0, [r5, #9]
 80233b6:	2804      	cmp	r0, #4
 80233b8:	d132      	bne.n	8023420 <??SMP_Pairing_Process_6>
 80233ba:	7b68      	ldrb	r0, [r5, #13]
 80233bc:	0641      	lsls	r1, r0, #25
 80233be:	d50d      	bpl.n	80233dc <??SMP_Pairing_Process_50>
 80233c0:	20ba      	movs	r0, #186	; 0xba
 80233c2:	7228      	strb	r0, [r5, #8]
 80233c4:	f3ef 8110 	mrs	r1, PRIMASK
 80233c8:	b672      	cpsid	i
 80233ca:	4819      	ldr	r0, [pc, #100]	; (8023430 <??DataTable12_3>)
 80233cc:	78c2      	ldrb	r2, [r0, #3]
 80233ce:	f002 02fb 	and.w	r2, r2, #251	; 0xfb
 80233d2:	70c2      	strb	r2, [r0, #3]
 80233d4:	f381 8810 	msr	PRIMASK, r1
 80233d8:	b01d      	add	sp, #116	; 0x74
 80233da:	bdf0      	pop	{r4, r5, r6, r7, pc}

080233dc <??SMP_Pairing_Process_50>:
 80233dc:	0600      	lsls	r0, r0, #24
 80233de:	d51f      	bpl.n	8023420 <??SMP_Pairing_Process_6>
 80233e0:	230c      	movs	r3, #12
 80233e2:	2205      	movs	r2, #5
 80233e4:	2100      	movs	r1, #0
 80233e6:	4628      	mov	r0, r5
 80233e8:	f000 fef6 	bl	80241d8 <SMP_Send_2octets_Packet>
 80233ec:	210c      	movs	r1, #12
 80233ee:	e014      	b.n	802341a <??SMP_Pairing_Process_51>

080233f0 <??SMP_Pairing_Process_49>:
 80233f0:	07c0      	lsls	r0, r0, #31
 80233f2:	d415      	bmi.n	8023420 <??SMP_Pairing_Process_6>
 80233f4:	29a9      	cmp	r1, #169	; 0xa9
 80233f6:	d113      	bne.n	8023420 <??SMP_Pairing_Process_6>
 80233f8:	4629      	mov	r1, r5
 80233fa:	2000      	movs	r0, #0
 80233fc:	f7ff fb6c 	bl	8022ad8 <smp__MI_PairingConfirm_Receive>
 8023400:	b01d      	add	sp, #116	; 0x74
 8023402:	bdf0      	pop	{r4, r5, r6, r7, pc}

08023404 <??SMP_Pairing_Process_48>:
 8023404:	4628      	mov	r0, r5
 8023406:	f001 fa23 	bl	8024850 <smp_sc_phase_2as2_start>
 802340a:	b148      	cbz	r0, 8023420 <??SMP_Pairing_Process_6>
 802340c:	230b      	movs	r3, #11
 802340e:	2205      	movs	r2, #5
 8023410:	2100      	movs	r1, #0
 8023412:	4628      	mov	r0, r5
 8023414:	f000 fee0 	bl	80241d8 <SMP_Send_2octets_Packet>
 8023418:	210b      	movs	r1, #11

0802341a <??SMP_Pairing_Process_51>:
 802341a:	4628      	mov	r0, r5
 802341c:	f000 fd34 	bl	8023e88 <smp_pairing_process_abort>

08023420 <??SMP_Pairing_Process_6>:
 8023420:	b01d      	add	sp, #116	; 0x74
 8023422:	bdf0      	pop	{r4, r5, r6, r7, pc}

08023424 <??DataTable12>:
 8023424:	3799 2000                                   .7. 

08023428 <??DataTable12_1>:
 8023428:	37a4 2000                                   .7. 

0802342c <??DataTable12_2>:
 802342c:	3718 2000                                   .7. 

08023430 <??DataTable12_3>:
 8023430:	3746 2000                                   F7. 

08023434 <SMP_Process_Rx_Packet>:
 8023434:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8023438:	b08e      	sub	sp, #56	; 0x38
 802343a:	4606      	mov	r6, r0
 802343c:	68b0      	ldr	r0, [r6, #8]
 802343e:	460f      	mov	r7, r1
 8023440:	7a3a      	ldrb	r2, [r7, #8]
 8023442:	7b01      	ldrb	r1, [r0, #12]
 8023444:	460d      	mov	r5, r1
 8023446:	2d05      	cmp	r5, #5
 8023448:	d107      	bne.n	802345a <??SMP_Process_Rx_Packet_0>
 802344a:	2af0      	cmp	r2, #240	; 0xf0
 802344c:	f000 824b 	beq.w	80238e6 <??SMP_Process_Rx_Packet_1>
 8023450:	7b41      	ldrb	r1, [r0, #13]
 8023452:	4638      	mov	r0, r7
 8023454:	f000 fd18 	bl	8023e88 <smp_pairing_process_abort>
 8023458:	e245      	b.n	80238e6 <??SMP_Process_Rx_Packet_1>

0802345a <??SMP_Process_Rx_Packet_0>:
 802345a:	2ad0      	cmp	r2, #208	; 0xd0
 802345c:	d170      	bne.n	8023540 <??SMP_Process_Rx_Packet_2>
 802345e:	2906      	cmp	r1, #6
 8023460:	bf08      	it	eq
 8023462:	f107 0334 	addeq.w	r3, r7, #52	; 0x34
 8023466:	d020      	beq.n	80234aa <??SMP_Process_Rx_Packet_3>
 8023468:	2907      	cmp	r1, #7
 802346a:	d116      	bne.n	802349a <??SMP_Process_Rx_Packet_4>
 802346c:	7b40      	ldrb	r0, [r0, #13]
 802346e:	f107 014c 	add.w	r1, r7, #76	; 0x4c
 8023472:	f107 0344 	add.w	r3, r7, #68	; 0x44
 8023476:	7008      	strb	r0, [r1, #0]
 8023478:	68b2      	ldr	r2, [r6, #8]
 802347a:	7b90      	ldrb	r0, [r2, #14]
 802347c:	2208      	movs	r2, #8
 802347e:	7048      	strb	r0, [r1, #1]
 8023480:	2107      	movs	r1, #7
 8023482:	4630      	mov	r0, r6
 8023484:	f001 fcaf 	bl	8024de6 <ACL_PM_Get_Data>
 8023488:	7eb8      	ldrb	r0, [r7, #26]
 802348a:	f040 0010 	orr.w	r0, r0, #16
 802348e:	76b8      	strb	r0, [r7, #26]
 8023490:	f010 0f06 	tst.w	r0, #6
 8023494:	f040 8227 	bne.w	80238e6 <??SMP_Process_Rx_Packet_1>
 8023498:	e047      	b.n	802352a <??SMP_Process_Rx_Packet_5>

0802349a <??SMP_Process_Rx_Packet_4>:
 802349a:	2908      	cmp	r1, #8
 802349c:	d10b      	bne.n	80234b6 <??SMP_Process_Rx_Packet_6>
 802349e:	7eb8      	ldrb	r0, [r7, #26]
 80234a0:	0781      	lsls	r1, r0, #30
 80234a2:	f140 8220 	bpl.w	80238e6 <??SMP_Process_Rx_Packet_1>
 80234a6:	f107 034e 	add.w	r3, r7, #78	; 0x4e

080234aa <??SMP_Process_Rx_Packet_3>:
 80234aa:	2210      	movs	r2, #16
 80234ac:	2105      	movs	r1, #5
 80234ae:	4630      	mov	r0, r6
 80234b0:	f001 fc99 	bl	8024de6 <ACL_PM_Get_Data>
 80234b4:	e217      	b.n	80238e6 <??SMP_Process_Rx_Packet_1>

080234b6 <??SMP_Process_Rx_Packet_6>:
 80234b6:	2909      	cmp	r1, #9
 80234b8:	d125      	bne.n	8023506 <??SMP_Process_Rx_Packet_7>
 80234ba:	7eb8      	ldrb	r0, [r7, #26]
 80234bc:	0781      	lsls	r1, r0, #30
 80234be:	f140 8212 	bpl.w	80238e6 <??SMP_Process_Rx_Packet_1>
 80234c2:	2106      	movs	r1, #6
 80234c4:	4668      	mov	r0, sp
 80234c6:	f00d fd0b 	bl	8030ee0 <__aeabi_memclr>
 80234ca:	2306      	movs	r3, #6
 80234cc:	2206      	movs	r2, #6
 80234ce:	4669      	mov	r1, sp
 80234d0:	4630      	mov	r0, r6
 80234d2:	f001 fc85 	bl	8024de0 <ACL_PM_Cmp_Data>
 80234d6:	b188      	cbz	r0, 80234fc <??SMP_Process_Rx_Packet_8>
 80234d8:	68b0      	ldr	r0, [r6, #8]
 80234da:	f107 0378 	add.w	r3, r7, #120	; 0x78
 80234de:	2206      	movs	r2, #6
 80234e0:	7b41      	ldrb	r1, [r0, #13]
 80234e2:	f107 006e 	add.w	r0, r7, #110	; 0x6e
 80234e6:	f001 0101 	and.w	r1, r1, #1
 80234ea:	7401      	strb	r1, [r0, #16]
 80234ec:	2106      	movs	r1, #6
 80234ee:	4630      	mov	r0, r6
 80234f0:	f001 fc79 	bl	8024de6 <ACL_PM_Get_Data>
 80234f4:	7eb8      	ldrb	r0, [r7, #26]
 80234f6:	f040 0020 	orr.w	r0, r0, #32
 80234fa:	76b8      	strb	r0, [r7, #26]

080234fc <??SMP_Process_Rx_Packet_8>:
 80234fc:	7eb8      	ldrb	r0, [r7, #26]
 80234fe:	0741      	lsls	r1, r0, #29
 8023500:	f100 81f1 	bmi.w	80238e6 <??SMP_Process_Rx_Packet_1>
 8023504:	e011      	b.n	802352a <??SMP_Process_Rx_Packet_5>

08023506 <??SMP_Process_Rx_Packet_7>:
 8023506:	290a      	cmp	r1, #10
 8023508:	f040 81ed 	bne.w	80238e6 <??SMP_Process_Rx_Packet_1>
 802350c:	7eb8      	ldrb	r0, [r7, #26]
 802350e:	0741      	lsls	r1, r0, #29
 8023510:	f140 81e9 	bpl.w	80238e6 <??SMP_Process_Rx_Packet_1>
 8023514:	f107 035e 	add.w	r3, r7, #94	; 0x5e
 8023518:	2210      	movs	r2, #16
 802351a:	2105      	movs	r1, #5
 802351c:	4630      	mov	r0, r6
 802351e:	f001 fc62 	bl	8024de6 <ACL_PM_Get_Data>
 8023522:	7eb8      	ldrb	r0, [r7, #26]
 8023524:	f040 0040 	orr.w	r0, r0, #64	; 0x40
 8023528:	76b8      	strb	r0, [r7, #26]

0802352a <??SMP_Process_Rx_Packet_5>:
 802352a:	f897 006e 	ldrb.w	r0, [r7, #110]	; 0x6e
 802352e:	07c1      	lsls	r1, r0, #31
 8023530:	4638      	mov	r0, r7
 8023532:	d402      	bmi.n	802353a <??SMP_Process_Rx_Packet_9>
 8023534:	f000 fc15 	bl	8023d62 <smp_keys_distribution_start>
 8023538:	e1d5      	b.n	80238e6 <??SMP_Process_Rx_Packet_1>

0802353a <??SMP_Process_Rx_Packet_9>:
 802353a:	f000 fc5b 	bl	8023df4 <smp_pairing_completed>
 802353e:	e1d2      	b.n	80238e6 <??SMP_Process_Rx_Packet_1>

08023540 <??SMP_Process_Rx_Packet_2>:
 8023540:	f107 086e 	add.w	r8, r7, #110	; 0x6e
 8023544:	f898 0000 	ldrb.w	r0, [r8]
 8023548:	0703      	lsls	r3, r0, #28
 802354a:	d520      	bpl.n	802358e <??SMP_Process_Rx_Packet_10>
 802354c:	24ff      	movs	r4, #255	; 0xff
 802354e:	2aa2      	cmp	r2, #162	; 0xa2
 8023550:	bf18      	it	ne
 8023552:	2ab2      	cmpne	r2, #178	; 0xb2
 8023554:	d009      	beq.n	802356a <??SMP_Process_Rx_Packet_11>
 8023556:	2aab      	cmp	r2, #171	; 0xab
 8023558:	bf14      	ite	ne
 802355a:	2abb      	cmpne	r2, #187	; 0xbb
 802355c:	290d      	cmpeq	r1, #13
 802355e:	d113      	bne.n	8023588 <??SMP_Process_Rx_Packet_12>
 8023560:	4639      	mov	r1, r7
 8023562:	4630      	mov	r0, r6
 8023564:	f001 f93c 	bl	80247e0 <smp_sc_phase_2as2_dhkey_check_receive>
 8023568:	e00d      	b.n	8023586 <??SMP_Process_Rx_Packet_13>

0802356a <??SMP_Process_Rx_Packet_11>:
 802356a:	290c      	cmp	r1, #12
 802356c:	d10c      	bne.n	8023588 <??SMP_Process_Rx_Packet_12>
 802356e:	f000 0141 	and.w	r1, r0, #65	; 0x41
 8023572:	2940      	cmp	r1, #64	; 0x40
 8023574:	bf1c      	itt	ne
 8023576:	f000 0081 	andne.w	r0, r0, #129	; 0x81
 802357a:	2801      	cmpne	r0, #1
 802357c:	d104      	bne.n	8023588 <??SMP_Process_Rx_Packet_12>
 802357e:	4639      	mov	r1, r7
 8023580:	4630      	mov	r0, r6
 8023582:	f000 ff9c 	bl	80244be <smp_sc_pairing_public_key_receive>

08023586 <??SMP_Process_Rx_Packet_13>:
 8023586:	4604      	mov	r4, r0

08023588 <??SMP_Process_Rx_Packet_12>:
 8023588:	2cff      	cmp	r4, #255	; 0xff
 802358a:	f040 83e6 	bne.w	8023d5a <??SMP_Process_Rx_Packet_14>

0802358e <??SMP_Process_Rx_Packet_10>:
 802358e:	f898 1000 	ldrb.w	r1, [r8]
 8023592:	7a38      	ldrb	r0, [r7, #8]
 8023594:	07ca      	lsls	r2, r1, #31
 8023596:	f100 8187 	bmi.w	80238a8 <??SMP_Process_Rx_Packet_15>
 802359a:	68b1      	ldr	r1, [r6, #8]
 802359c:	24ff      	movs	r4, #255	; 0xff
 802359e:	2800      	cmp	r0, #0
 80235a0:	7b09      	ldrb	r1, [r1, #12]
 80235a2:	bf18      	it	ne
 80235a4:	28f1      	cmpne	r0, #241	; 0xf1
 80235a6:	f000 813a 	beq.w	802381e <??SMP_Process_Rx_Packet_16>
 80235aa:	290b      	cmp	r1, #11
 80235ac:	d07b      	beq.n	80236a6 <??SMP_Process_Rx_Packet_17>
 80235ae:	28a1      	cmp	r0, #161	; 0xa1
 80235b0:	d158      	bne.n	8023664 <??SMP_Process_Rx_Packet_18>
 80235b2:	2902      	cmp	r1, #2
 80235b4:	f040 838c 	bne.w	8023cd0 <??SMP_Process_Rx_Packet_19>
 80235b8:	4630      	mov	r0, r6
 80235ba:	25a4      	movs	r5, #164	; 0xa4
 80235bc:	f7ff f85a 	bl	8022674 <smp_Check_Incoming_Pairing_Parameters>
 80235c0:	0004      	movs	r4, r0
 80235c2:	d11c      	bne.n	80235fe <??SMP_Process_Rx_Packet_20>
 80235c4:	f898 0000 	ldrb.w	r0, [r8]
 80235c8:	0701      	lsls	r1, r0, #28
 80235ca:	d51a      	bpl.n	8023602 <??SMP_Process_Rx_Packet_21>
 80235cc:	68b2      	ldr	r2, [r6, #8]
 80235ce:	7bd1      	ldrb	r1, [r2, #15]
 80235d0:	f8df 2be0 	ldr.w	r2, [pc, #3040]	; 80241b4 <??DataTable22>
 80235d4:	7a93      	ldrb	r3, [r2, #10]
 80235d6:	2b02      	cmp	r3, #2
 80235d8:	d103      	bne.n	80235e2 <??SMP_Process_Rx_Packet_22>
 80235da:	070a      	lsls	r2, r1, #28
 80235dc:	bf58      	it	pl
 80235de:	2403      	movpl	r4, #3
 80235e0:	d531      	bpl.n	8023646 <??SMP_Process_Rx_Packet_23>

080235e2 <??SMP_Process_Rx_Packet_22>:
 80235e2:	f041 01e7 	orr.w	r1, r1, #231	; 0xe7
 80235e6:	4008      	ands	r0, r1
 80235e8:	f888 0000 	strb.w	r0, [r8]
 80235ec:	0700      	lsls	r0, r0, #28
 80235ee:	d508      	bpl.n	8023602 <??SMP_Process_Rx_Packet_21>
 80235f0:	4638      	mov	r0, r7
 80235f2:	f000 fee1 	bl	80243b8 <smp_sc_continue_on_exclusive_sc_pairing>
 80235f6:	0004      	movs	r4, r0
 80235f8:	bf08      	it	eq
 80235fa:	25a2      	moveq	r5, #162	; 0xa2
 80235fc:	d001      	beq.n	8023602 <??SMP_Process_Rx_Packet_21>

080235fe <??SMP_Process_Rx_Packet_20>:
 80235fe:	0020      	movs	r0, r4
 8023600:	d11e      	bne.n	8023640 <??SMP_Process_Rx_Packet_24>

08023602 <??SMP_Process_Rx_Packet_21>:
 8023602:	7b38      	ldrb	r0, [r7, #12]
 8023604:	4639      	mov	r1, r7
 8023606:	f000 00fe 	and.w	r0, r0, #254	; 0xfe
 802360a:	7338      	strb	r0, [r7, #12]
 802360c:	7b78      	ldrb	r0, [r7, #13]
 802360e:	f000 00fb 	and.w	r0, r0, #251	; 0xfb
 8023612:	7378      	strb	r0, [r7, #13]
 8023614:	4630      	mov	r0, r6
 8023616:	f7ff f846 	bl	80226a6 <smp_Get_Pairing_Parameters_From_Peer_Packet>
 802361a:	4638      	mov	r0, r7
 802361c:	f7ff f894 	bl	8022748 <smp_Set_Key_Association_Method>
 8023620:	0004      	movs	r4, r0
 8023622:	d10d      	bne.n	8023640 <??SMP_Process_Rx_Packet_24>
 8023624:	7a78      	ldrb	r0, [r7, #9]
 8023626:	2802      	cmp	r0, #2
 8023628:	d103      	bne.n	8023632 <??SMP_Process_Rx_Packet_25>
 802362a:	7b78      	ldrb	r0, [r7, #13]
 802362c:	06c1      	lsls	r1, r0, #27
 802362e:	bf58      	it	pl
 8023630:	25a2      	movpl	r5, #162	; 0xa2

08023632 <??SMP_Process_Rx_Packet_25>:
 8023632:	723d      	strb	r5, [r7, #8]
 8023634:	f3ef 8110 	mrs	r1, PRIMASK
 8023638:	b672      	cpsid	i
 802363a:	f8df 0828 	ldr.w	r0, [pc, #2088]	; 8023e64 <??DataTable15>
 802363e:	e0a5      	b.n	802378c <??SMP_Process_Rx_Packet_26>

08023640 <??SMP_Process_Rx_Packet_24>:
 8023640:	2c64      	cmp	r4, #100	; 0x64
 8023642:	f000 8345 	beq.w	8023cd0 <??SMP_Process_Rx_Packet_19>

08023646 <??SMP_Process_Rx_Packet_23>:
 8023646:	4623      	mov	r3, r4
 8023648:	2205      	movs	r2, #5
 802364a:	2100      	movs	r1, #0
 802364c:	4638      	mov	r0, r7
 802364e:	f000 fdc3 	bl	80241d8 <SMP_Send_2octets_Packet>
 8023652:	4605      	mov	r5, r0
 8023654:	2864      	cmp	r0, #100	; 0x64
 8023656:	f000 8251 	beq.w	8023afc <??SMP_Process_Rx_Packet_27>
 802365a:	4621      	mov	r1, r4
 802365c:	4638      	mov	r0, r7
 802365e:	f000 fc13 	bl	8023e88 <smp_pairing_process_abort>
 8023662:	e24b      	b.n	8023afc <??SMP_Process_Rx_Packet_27>

08023664 <??SMP_Process_Rx_Packet_18>:
 8023664:	28a5      	cmp	r0, #165	; 0xa5
 8023666:	d107      	bne.n	8023678 <??SMP_Process_Rx_Packet_28>
 8023668:	2903      	cmp	r1, #3
 802366a:	f040 8331 	bne.w	8023cd0 <??SMP_Process_Rx_Packet_19>
 802366e:	4639      	mov	r1, r7
 8023670:	4630      	mov	r0, r6
 8023672:	f7ff fa31 	bl	8022ad8 <smp__MI_PairingConfirm_Receive>
 8023676:	e24c      	b.n	8023b12 <??SMP_Process_Rx_Packet_29>

08023678 <??SMP_Process_Rx_Packet_28>:
 8023678:	28a6      	cmp	r0, #166	; 0xa6
 802367a:	bf08      	it	eq
 802367c:	2904      	cmpeq	r1, #4
 802367e:	f040 8327 	bne.w	8023cd0 <??SMP_Process_Rx_Packet_19>
 8023682:	f107 035e 	add.w	r3, r7, #94	; 0x5e
 8023686:	2210      	movs	r2, #16
 8023688:	2105      	movs	r1, #5
 802368a:	4630      	mov	r0, r6
 802368c:	f001 fbab 	bl	8024de6 <ACL_PM_Get_Data>
 8023690:	f898 0000 	ldrb.w	r0, [r8]
 8023694:	2400      	movs	r4, #0
 8023696:	0701      	lsls	r1, r0, #28
 8023698:	d521      	bpl.n	80236de <??SMP_Process_Rx_Packet_30>
 802369a:	7a79      	ldrb	r1, [r7, #9]
 802369c:	2300      	movs	r3, #0
 802369e:	2903      	cmp	r1, #3
 80236a0:	d103      	bne.n	80236aa <??SMP_Process_Rx_Packet_31>
 80236a2:	20aa      	movs	r0, #170	; 0xaa
 80236a4:	7238      	strb	r0, [r7, #8]

080236a6 <??SMP_Process_Rx_Packet_17>:
 80236a6:	2400      	movs	r4, #0
 80236a8:	e312      	b.n	8023cd0 <??SMP_Process_Rx_Packet_19>

080236aa <??SMP_Process_Rx_Packet_31>:
 80236aa:	f8df 07b8 	ldr.w	r0, [pc, #1976]	; 8023e64 <??DataTable15>
 80236ae:	2902      	cmp	r1, #2
 80236b0:	d10a      	bne.n	80236c8 <??SMP_Process_Rx_Packet_32>
 80236b2:	f100 0188 	add.w	r1, r0, #136	; 0x88
 80236b6:	684b      	ldr	r3, [r1, #4]
 80236b8:	7bf9      	ldrb	r1, [r7, #15]
 80236ba:	08c9      	lsrs	r1, r1, #3
 80236bc:	1e4a      	subs	r2, r1, #1
 80236be:	40d3      	lsrs	r3, r2
 80236c0:	f003 0301 	and.w	r3, r3, #1
 80236c4:	f043 0380 	orr.w	r3, r3, #128	; 0x80

080236c8 <??SMP_Process_Rx_Packet_32>:
 80236c8:	a906      	add	r1, sp, #24
 80236ca:	9100      	str	r1, [sp, #0]
 80236cc:	f100 01e8 	add.w	r1, r0, #232	; 0xe8
 80236d0:	f107 025e 	add.w	r2, r7, #94	; 0x5e
 80236d4:	f500 7094 	add.w	r0, r0, #296	; 0x128
 80236d8:	f7fd ffa6 	bl	8021628 <SMA_SC_Gen_f4_Confirm>
 80236dc:	e005      	b.n	80236ea <??SMP_Process_Rx_Packet_33>

080236de <??SMP_Process_Rx_Packet_30>:
 80236de:	aa06      	add	r2, sp, #24
 80236e0:	f107 015e 	add.w	r1, r7, #94	; 0x5e
 80236e4:	4638      	mov	r0, r7
 80236e6:	f7ff fa71 	bl	8022bcc <smp_LP_MI_Compute_c1_Confirm_Value>

080236ea <??SMP_Process_Rx_Packet_33>:
 80236ea:	2210      	movs	r2, #16
 80236ec:	f107 0124 	add.w	r1, r7, #36	; 0x24
 80236f0:	a806      	add	r0, sp, #24
 80236f2:	f00d fc25 	bl	8030f40 <memcmp>
 80236f6:	2800      	cmp	r0, #0
 80236f8:	f040 8085 	bne.w	8023806 <??SMP_Process_Rx_Packet_34>
 80236fc:	7bba      	ldrb	r2, [r7, #14]
 80236fe:	f8df 0764 	ldr.w	r0, [pc, #1892]	; 8023e64 <??DataTable15>
 8023702:	f890 308b 	ldrb.w	r3, [r0, #139]	; 0x8b
 8023706:	f100 0188 	add.w	r1, r0, #136	; 0x88
 802370a:	4293      	cmp	r3, r2
 802370c:	bf88      	it	hi
 802370e:	4613      	movhi	r3, r2
 8023710:	73bb      	strb	r3, [r7, #14]
 8023712:	f898 3000 	ldrb.w	r3, [r8]
 8023716:	071a      	lsls	r2, r3, #28
 8023718:	d541      	bpl.n	802379e <??SMP_Process_Rx_Packet_35>
 802371a:	7a79      	ldrb	r1, [r7, #9]
 802371c:	2904      	cmp	r1, #4
 802371e:	d124      	bne.n	802376a <??SMP_Process_Rx_Packet_36>
 8023720:	a901      	add	r1, sp, #4
 8023722:	9100      	str	r1, [sp, #0]
 8023724:	f500 7194 	add.w	r1, r0, #296	; 0x128
 8023728:	f107 035e 	add.w	r3, r7, #94	; 0x5e
 802372c:	f107 024e 	add.w	r2, r7, #78	; 0x4e
 8023730:	30e8      	adds	r0, #232	; 0xe8
 8023732:	f7fe f843 	bl	80217bc <SMA_SC_Gen_g2_NumComp_Val>
 8023736:	7b78      	ldrb	r0, [r7, #13]
 8023738:	21b9      	movs	r1, #185	; 0xb9
 802373a:	7239      	strb	r1, [r7, #8]
 802373c:	f000 003f 	and.w	r0, r0, #63	; 0x3f
 8023740:	7378      	strb	r0, [r7, #13]
 8023742:	a801      	add	r0, sp, #4
 8023744:	f7fe feb4 	bl	80224b0 <LE4_TO_U32>
 8023748:	4602      	mov	r2, r0
 802374a:	f8df 3a6c 	ldr.w	r3, [pc, #2668]	; 80241b8 <??DataTable22_1>
 802374e:	fba2 3103 	umull	r3, r1, r2, r3
 8023752:	f8df 0a68 	ldr.w	r0, [pc, #2664]	; 80241bc <??DataTable22_2>
 8023756:	0cc9      	lsrs	r1, r1, #19
 8023758:	fb00 2211 	mls	r2, r0, r1, r2
 802375c:	8af9      	ldrh	r1, [r7, #22]
 802375e:	2001      	movs	r0, #1
 8023760:	f3c1 010b 	ubfx	r1, r1, #0, #12
 8023764:	f7fb fcd7 	bl	801f116 <EVT_aci_gap_numeric_comparison_value>
 8023768:	e2b2      	b.n	8023cd0 <??SMP_Process_Rx_Packet_19>

0802376a <??SMP_Process_Rx_Packet_36>:
 802376a:	2902      	cmp	r1, #2
 802376c:	d106      	bne.n	802377c <??SMP_Process_Rx_Packet_37>
 802376e:	7bf9      	ldrb	r1, [r7, #15]
 8023770:	08c9      	lsrs	r1, r1, #3
 8023772:	2914      	cmp	r1, #20
 8023774:	bf2c      	ite	cs
 8023776:	21aa      	movcs	r1, #170	; 0xaa
 8023778:	21a4      	movcc	r1, #164	; 0xa4
 802377a:	e003      	b.n	8023784 <??SMP_Process_Rx_Packet_38>

0802377c <??SMP_Process_Rx_Packet_37>:
 802377c:	2901      	cmp	r1, #1
 802377e:	f040 82a7 	bne.w	8023cd0 <??SMP_Process_Rx_Packet_19>
 8023782:	21aa      	movs	r1, #170	; 0xaa

08023784 <??SMP_Process_Rx_Packet_38>:
 8023784:	7239      	strb	r1, [r7, #8]
 8023786:	f3ef 8110 	mrs	r1, PRIMASK
 802378a:	b672      	cpsid	i

0802378c <??SMP_Process_Rx_Packet_26>:
 802378c:	f890 2039 	ldrb.w	r2, [r0, #57]	; 0x39
 8023790:	f002 02fb 	and.w	r2, r2, #251	; 0xfb
 8023794:	f880 2039 	strb.w	r2, [r0, #57]	; 0x39
 8023798:	f381 8810 	msr	PRIMASK, r1
 802379c:	e298      	b.n	8023cd0 <??SMP_Process_Rx_Packet_19>

0802379e <??SMP_Process_Rx_Packet_35>:
 802379e:	2300      	movs	r3, #0
 80237a0:	aa02      	add	r2, sp, #8
 80237a2:	2500      	movs	r5, #0
 80237a4:	469c      	mov	ip, r3
 80237a6:	e882 1038 	stmia.w	r2, {r3, r4, r5, ip}
 80237aa:	7a7a      	ldrb	r2, [r7, #9]
 80237ac:	2a02      	cmp	r2, #2
 80237ae:	d104      	bne.n	80237ba <??SMP_Process_Rx_Packet_39>
 80237b0:	6849      	ldr	r1, [r1, #4]
 80237b2:	a802      	add	r0, sp, #8
 80237b4:	f7fe fe88 	bl	80224c8 <U32_TO_LE4>
 80237b8:	e007      	b.n	80237ca <??SMP_Process_Rx_Packet_40>

080237ba <??SMP_Process_Rx_Packet_39>:
 80237ba:	2a03      	cmp	r2, #3
 80237bc:	d105      	bne.n	80237ca <??SMP_Process_Rx_Packet_40>
 80237be:	3094      	adds	r0, #148	; 0x94
 80237c0:	e890 003c 	ldmia.w	r0, {r2, r3, r4, r5}
 80237c4:	a902      	add	r1, sp, #8
 80237c6:	e881 003c 	stmia.w	r1, {r2, r3, r4, r5}

080237ca <??SMP_Process_Rx_Packet_40>:
 80237ca:	ab0a      	add	r3, sp, #40	; 0x28
 80237cc:	f107 024e 	add.w	r2, r7, #78	; 0x4e
 80237d0:	f107 015e 	add.w	r1, r7, #94	; 0x5e
 80237d4:	a802      	add	r0, sp, #8
 80237d6:	f7fd fee6 	bl	80215a6 <SMA_LP_s1_Generate_STK>
 80237da:	f107 0024 	add.w	r0, r7, #36	; 0x24
 80237de:	2100      	movs	r1, #0
 80237e0:	2200      	movs	r2, #0
 80237e2:	2300      	movs	r3, #0
 80237e4:	2400      	movs	r4, #0
 80237e6:	e880 001e 	stmia.w	r0, {r1, r2, r3, r4}
 80237ea:	7bba      	ldrb	r2, [r7, #14]
 80237ec:	a90a      	add	r1, sp, #40	; 0x28
 80237ee:	f00d fb7a 	bl	8030ee6 <__aeabi_memcpy>
 80237f2:	f898 0002 	ldrb.w	r0, [r8, #2]
 80237f6:	f040 0002 	orr.w	r0, r0, #2
 80237fa:	f888 0002 	strb.w	r0, [r8, #2]
 80237fe:	4638      	mov	r0, r7
 8023800:	f7ff fb33 	bl	8022e6a <SMP_MI_Start_Encryption>
 8023804:	e185      	b.n	8023b12 <??SMP_Process_Rx_Packet_29>

08023806 <??SMP_Process_Rx_Packet_34>:
 8023806:	2304      	movs	r3, #4
 8023808:	2205      	movs	r2, #5
 802380a:	2100      	movs	r1, #0
 802380c:	4638      	mov	r0, r7
 802380e:	f000 fce3 	bl	80241d8 <SMP_Send_2octets_Packet>
 8023812:	4604      	mov	r4, r0
 8023814:	2864      	cmp	r0, #100	; 0x64
 8023816:	f000 825b 	beq.w	8023cd0 <??SMP_Process_Rx_Packet_19>
 802381a:	2104      	movs	r1, #4
 802381c:	e255      	b.n	8023cca <??SMP_Process_Rx_Packet_41>

0802381e <??SMP_Process_Rx_Packet_16>:
 802381e:	290b      	cmp	r1, #11
 8023820:	f47f af41 	bne.w	80236a6 <??SMP_Process_Rx_Packet_17>
 8023824:	4638      	mov	r0, r7
 8023826:	f7fe fe76 	bl	8022516 <SMP_Reset_Timer>
 802382a:	f8df 1638 	ldr.w	r1, [pc, #1592]	; 8023e64 <??DataTable15>
 802382e:	f101 0288 	add.w	r2, r1, #136	; 0x88
 8023832:	68b0      	ldr	r0, [r6, #8]
 8023834:	7a93      	ldrb	r3, [r2, #10]
 8023836:	2400      	movs	r4, #0
 8023838:	7b40      	ldrb	r0, [r0, #13]
 802383a:	2b02      	cmp	r3, #2
 802383c:	d103      	bne.n	8023846 <??SMP_Process_Rx_Packet_42>
 802383e:	0702      	lsls	r2, r0, #28
 8023840:	bf58      	it	pl
 8023842:	2403      	movpl	r4, #3
 8023844:	d521      	bpl.n	802388a <??SMP_Process_Rx_Packet_43>

08023846 <??SMP_Process_Rx_Packet_42>:
 8023846:	7a3a      	ldrb	r2, [r7, #8]
 8023848:	2af1      	cmp	r2, #241	; 0xf1
 802384a:	bf04      	itt	eq
 802384c:	8afa      	ldrheq	r2, [r7, #22]
 802384e:	f412 4fc0 	tsteq.w	r2, #24576	; 0x6000
 8023852:	d102      	bne.n	802385a <??SMP_Process_Rx_Packet_44>
 8023854:	0742      	lsls	r2, r0, #29
 8023856:	bf48      	it	mi
 8023858:	2401      	movmi	r4, #1

0802385a <??SMP_Process_Rx_Packet_44>:
 802385a:	f000 001f 	and.w	r0, r0, #31
 802385e:	f201 116b 	addw	r1, r1, #363	; 0x16b
 8023862:	7048      	strb	r0, [r1, #1]
 8023864:	8af8      	ldrh	r0, [r7, #22]
 8023866:	2200      	movs	r2, #0
 8023868:	4621      	mov	r1, r4
 802386a:	f3c0 000b 	ubfx	r0, r0, #0, #12
 802386e:	f7fe ffe1 	bl	8022834 <SMP_MI_PairingRequest_Send>
 8023872:	0004      	movs	r4, r0
 8023874:	d106      	bne.n	8023884 <??SMP_Process_Rx_Packet_45>
 8023876:	f898 0002 	ldrb.w	r0, [r8, #2]
 802387a:	f040 0080 	orr.w	r0, r0, #128	; 0x80
 802387e:	f888 0002 	strb.w	r0, [r8, #2]
 8023882:	e225      	b.n	8023cd0 <??SMP_Process_Rx_Packet_19>

08023884 <??SMP_Process_Rx_Packet_45>:
 8023884:	2864      	cmp	r0, #100	; 0x64
 8023886:	f000 8223 	beq.w	8023cd0 <??SMP_Process_Rx_Packet_19>

0802388a <??SMP_Process_Rx_Packet_43>:
 802388a:	4623      	mov	r3, r4
 802388c:	2205      	movs	r2, #5
 802388e:	2100      	movs	r1, #0
 8023890:	4638      	mov	r0, r7
 8023892:	f000 fca1 	bl	80241d8 <SMP_Send_2octets_Packet>
 8023896:	4605      	mov	r5, r0
 8023898:	2864      	cmp	r0, #100	; 0x64
 802389a:	f000 812f 	beq.w	8023afc <??SMP_Process_Rx_Packet_27>
 802389e:	4621      	mov	r1, r4
 80238a0:	4638      	mov	r0, r7
 80238a2:	f000 faf1 	bl	8023e88 <smp_pairing_process_abort>
 80238a6:	e129      	b.n	8023afc <??SMP_Process_Rx_Packet_27>

080238a8 <??SMP_Process_Rx_Packet_15>:
 80238a8:	2800      	cmp	r0, #0
 80238aa:	bf18      	it	ne
 80238ac:	28f1      	cmpne	r0, #241	; 0xf1
 80238ae:	f040 8127 	bne.w	8023b00 <??SMP_Process_Rx_Packet_46>
 80238b2:	2d01      	cmp	r5, #1
 80238b4:	f040 8250 	bne.w	8023d58 <??SMP_Process_Rx_Packet_47>
 80238b8:	f898 0001 	ldrb.w	r0, [r8, #1]
 80238bc:	0701      	lsls	r1, r0, #28
 80238be:	bf5c      	itt	pl
 80238c0:	4638      	movpl	r0, r7
 80238c2:	f7fe fe28 	blpl	8022516 <SMP_Reset_Timer>
 80238c6:	f898 0001 	ldrb.w	r0, [r8, #1]
 80238ca:	f000 0203 	and.w	r2, r0, #3
 80238ce:	2a03      	cmp	r2, #3
 80238d0:	d10b      	bne.n	80238ea <??SMP_Process_Rx_Packet_48>
 80238d2:	f010 010c 	ands.w	r1, r0, #12
 80238d6:	d006      	beq.n	80238e6 <??SMP_Process_Rx_Packet_1>
 80238d8:	2904      	cmp	r1, #4
 80238da:	d00c      	beq.n	80238f6 <??SMP_Process_Rx_Packet_49>
 80238dc:	2908      	cmp	r1, #8
 80238de:	d019      	beq.n	8023914 <??SMP_Process_Rx_Packet_50>
 80238e0:	290c      	cmp	r1, #12
 80238e2:	d019      	beq.n	8023918 <??SMP_Process_Rx_Packet_51>
 80238e4:	e1f7      	b.n	8023cd6 <??SMP_Process_Rx_Packet_52>

080238e6 <??SMP_Process_Rx_Packet_1>:
 80238e6:	2000      	movs	r0, #0
 80238e8:	e238      	b.n	8023d5c <?Subroutine1>

080238ea <??SMP_Process_Rx_Packet_48>:
 80238ea:	0781      	lsls	r1, r0, #30
 80238ec:	d514      	bpl.n	8023918 <??SMP_Process_Rx_Packet_51>
 80238ee:	f040 0001 	orr.w	r0, r0, #1
 80238f2:	f888 0001 	strb.w	r0, [r8, #1]

080238f6 <??SMP_Process_Rx_Packet_49>:
 80238f6:	f898 0001 	ldrb.w	r0, [r8, #1]
 80238fa:	f000 010c 	and.w	r1, r0, #12
 80238fe:	2904      	cmp	r1, #4
 8023900:	d10a      	bne.n	8023918 <??SMP_Process_Rx_Packet_51>
 8023902:	f000 00fb 	and.w	r0, r0, #251	; 0xfb
 8023906:	f040 0008 	orr.w	r0, r0, #8
 802390a:	f888 0001 	strb.w	r0, [r8, #1]
 802390e:	2001      	movs	r0, #1
 8023910:	f7fb fc2c 	bl	801f16c <EVT_aci_gap_bond_lost>

08023914 <??SMP_Process_Rx_Packet_50>:
 8023914:	2093      	movs	r0, #147	; 0x93
 8023916:	e221      	b.n	8023d5c <?Subroutine1>

08023918 <??SMP_Process_Rx_Packet_51>:
 8023918:	f8df 08a4 	ldr.w	r0, [pc, #2212]	; 80241c0 <??DataTable22_3>
 802391c:	9001      	str	r0, [sp, #4]
 802391e:	7800      	ldrb	r0, [r0, #0]
 8023920:	2400      	movs	r4, #0
 8023922:	2500      	movs	r5, #0
 8023924:	f000 0003 	and.w	r0, r0, #3
 8023928:	46a3      	mov	fp, r4
 802392a:	f04f 09b4 	mov.w	r9, #180	; 0xb4
 802392e:	2803      	cmp	r0, #3
 8023930:	bf08      	it	eq
 8023932:	2508      	moveq	r5, #8
 8023934:	f000 80d4 	beq.w	8023ae0 <??SMP_Process_Rx_Packet_53>
 8023938:	8af9      	ldrh	r1, [r7, #22]
 802393a:	2220      	movs	r2, #32
 802393c:	2000      	movs	r0, #0
 802393e:	f3c1 010b 	ubfx	r1, r1, #0, #12
 8023942:	f001 f9b6 	bl	8024cb2 <ACL_PM_New>
 8023946:	0004      	movs	r4, r0
 8023948:	bf08      	it	eq
 802394a:	2564      	moveq	r5, #100	; 0x64
 802394c:	f000 80d6 	beq.w	8023afc <??SMP_Process_Rx_Packet_27>
 8023950:	f8df 0860 	ldr.w	r0, [pc, #2144]	; 80241b4 <??DataTable22>
 8023954:	9000      	str	r0, [sp, #0]
 8023956:	7a39      	ldrb	r1, [r7, #8]
 8023958:	29f1      	cmp	r1, #241	; 0xf1
 802395a:	d12b      	bne.n	80239b4 <??SMP_Process_Rx_Packet_54>
 802395c:	7b78      	ldrb	r0, [r7, #13]
 802395e:	7bb9      	ldrb	r1, [r7, #14]
 8023960:	f000 002f 	and.w	r0, r0, #47	; 0x2f
 8023964:	7378      	strb	r0, [r7, #13]
 8023966:	9800      	ldr	r0, [sp, #0]
 8023968:	78c0      	ldrb	r0, [r0, #3]
 802396a:	4281      	cmp	r1, r0
 802396c:	d005      	beq.n	802397a <??SMP_Process_Rx_Packet_55>
 802396e:	68b2      	ldr	r2, [r6, #8]
 8023970:	7c13      	ldrb	r3, [r2, #16]
 8023972:	4298      	cmp	r0, r3
 8023974:	d201      	bcs.n	802397a <??SMP_Process_Rx_Packet_55>

08023976 <??SMP_Process_Rx_Packet_56>:
 8023976:	76bd      	strb	r5, [r7, #26]
 8023978:	e01c      	b.n	80239b4 <??SMP_Process_Rx_Packet_54>

0802397a <??SMP_Process_Rx_Packet_55>:
 802397a:	68b2      	ldr	r2, [r6, #8]
 802397c:	7c13      	ldrb	r3, [r2, #16]
 802397e:	428b      	cmp	r3, r1
 8023980:	d001      	beq.n	8023986 <??SMP_Process_Rx_Packet_57>
 8023982:	4298      	cmp	r0, r3
 8023984:	d2f7      	bcs.n	8023976 <??SMP_Process_Rx_Packet_56>

08023986 <??SMP_Process_Rx_Packet_57>:
 8023986:	7eb8      	ldrb	r0, [r7, #26]
 8023988:	0681      	lsls	r1, r0, #26
 802398a:	bf48      	it	mi
 802398c:	2502      	movmi	r5, #2
 802398e:	0640      	lsls	r0, r0, #25
 8023990:	bf48      	it	mi
 8023992:	f045 0504 	orrmi.w	r5, r5, #4
 8023996:	7c50      	ldrb	r0, [r2, #17]
 8023998:	4285      	cmp	r5, r0
 802399a:	bf1c      	itt	ne
 802399c:	f045 0501 	orrne.w	r5, r5, #1
 80239a0:	4285      	cmpne	r5, r0
 80239a2:	d003      	beq.n	80239ac <??SMP_Process_Rx_Packet_58>
 80239a4:	4638      	mov	r0, r7
 80239a6:	f7fe fdc5 	bl	8022534 <SMP_Add_To_SDB>
 80239aa:	e003      	b.n	80239b4 <??SMP_Process_Rx_Packet_54>

080239ac <??SMP_Process_Rx_Packet_58>:
 80239ac:	f887 b01a 	strb.w	fp, [r7, #26]
 80239b0:	f887 b01b 	strb.w	fp, [r7, #27]

080239b4 <??SMP_Process_Rx_Packet_54>:
 80239b4:	4630      	mov	r0, r6
 80239b6:	f7fe fe5d 	bl	8022674 <smp_Check_Incoming_Pairing_Parameters>
 80239ba:	0005      	movs	r5, r0
 80239bc:	68b0      	ldr	r0, [r6, #8]
 80239be:	f890 a00f 	ldrb.w	sl, [r0, #15]
 80239c2:	d12c      	bne.n	8023a1e <??SMP_Process_Rx_Packet_59>
 80239c4:	9800      	ldr	r0, [sp, #0]
 80239c6:	7a82      	ldrb	r2, [r0, #10]
 80239c8:	2a02      	cmp	r2, #2
 80239ca:	d105      	bne.n	80239d8 <??SMP_Process_Rx_Packet_60>
 80239cc:	ea5f 700a 	movs.w	r0, sl, lsl #28
 80239d0:	bf58      	it	pl
 80239d2:	2503      	movpl	r5, #3
 80239d4:	f140 8084 	bpl.w	8023ae0 <??SMP_Process_Rx_Packet_53>

080239d8 <??SMP_Process_Rx_Packet_60>:
 80239d8:	9900      	ldr	r1, [sp, #0]
 80239da:	9800      	ldr	r0, [sp, #0]
 80239dc:	ea42 0252 	orr.w	r2, r2, r2, lsr #1
 80239e0:	7acb      	ldrb	r3, [r1, #11]
 80239e2:	7849      	ldrb	r1, [r1, #1]
 80239e4:	7800      	ldrb	r0, [r0, #0]
 80239e6:	f002 0201 	and.w	r2, r2, #1
 80239ea:	f7fe fe9e 	bl	802272a <smp_Build_AuthReq_Field>
 80239ee:	4683      	mov	fp, r0
 80239f0:	f898 0000 	ldrb.w	r0, [r8]
 80239f4:	ea0b 0a0a 	and.w	sl, fp, sl
 80239f8:	f00a 0a18 	and.w	sl, sl, #24
 80239fc:	f000 0001 	and.w	r0, r0, #1
 8023a00:	ea4a 0a00 	orr.w	sl, sl, r0
 8023a04:	f888 a000 	strb.w	sl, [r8]
 8023a08:	ea5f 700a 	movs.w	r0, sl, lsl #28
 8023a0c:	d509      	bpl.n	8023a22 <??SMP_Process_Rx_Packet_61>
 8023a0e:	4638      	mov	r0, r7
 8023a10:	f000 fcd2 	bl	80243b8 <smp_sc_continue_on_exclusive_sc_pairing>
 8023a14:	0005      	movs	r5, r0
 8023a16:	bf08      	it	eq
 8023a18:	f04f 09b2 	moveq.w	r9, #178	; 0xb2
 8023a1c:	d001      	beq.n	8023a22 <??SMP_Process_Rx_Packet_61>

08023a1e <??SMP_Process_Rx_Packet_59>:
 8023a1e:	0028      	movs	r0, r5
 8023a20:	d11f      	bne.n	8023a62 <??SMP_Process_Rx_Packet_62>

08023a22 <??SMP_Process_Rx_Packet_61>:
 8023a22:	20b0      	movs	r0, #176	; 0xb0
 8023a24:	7238      	strb	r0, [r7, #8]
 8023a26:	4638      	mov	r0, r7
 8023a28:	f000 faeb 	bl	8024002 <SMP_Oob_Check_Remote_Data_Presence>
 8023a2c:	f00b 0001 	and.w	r0, fp, #1
 8023a30:	ea4f 019b 	mov.w	r1, fp, lsr #2
 8023a34:	0040      	lsls	r0, r0, #1
 8023a36:	f001 0101 	and.w	r1, r1, #1
 8023a3a:	7338      	strb	r0, [r7, #12]
 8023a3c:	7379      	strb	r1, [r7, #13]
 8023a3e:	4639      	mov	r1, r7
 8023a40:	4630      	mov	r0, r6
 8023a42:	f7fe fe30 	bl	80226a6 <smp_Get_Pairing_Parameters_From_Peer_Packet>
 8023a46:	4638      	mov	r0, r7
 8023a48:	f7fe fe7e 	bl	8022748 <smp_Set_Key_Association_Method>
 8023a4c:	0005      	movs	r5, r0
 8023a4e:	d108      	bne.n	8023a62 <??SMP_Process_Rx_Packet_62>
 8023a50:	7a78      	ldrb	r0, [r7, #9]
 8023a52:	2802      	cmp	r0, #2
 8023a54:	d107      	bne.n	8023a66 <??SMP_Process_Rx_Packet_63>
 8023a56:	7b78      	ldrb	r0, [r7, #13]
 8023a58:	06c1      	lsls	r1, r0, #27
 8023a5a:	d404      	bmi.n	8023a66 <??SMP_Process_Rx_Packet_63>
 8023a5c:	f04f 09b2 	mov.w	r9, #178	; 0xb2
 8023a60:	e001      	b.n	8023a66 <??SMP_Process_Rx_Packet_63>

08023a62 <??SMP_Process_Rx_Packet_62>:
 8023a62:	0028      	movs	r0, r5
 8023a64:	d128      	bne.n	8023ab8 <??SMP_Process_Rx_Packet_64>

08023a66 <??SMP_Process_Rx_Packet_63>:
 8023a66:	7aba      	ldrb	r2, [r7, #10]
 8023a68:	2307      	movs	r3, #7
 8023a6a:	2502      	movs	r5, #2
 8023a6c:	f002 0201 	and.w	r2, r2, #1
 8023a70:	8af9      	ldrh	r1, [r7, #22]
 8023a72:	f648 70ff 	movw	r0, #36863	; 0x8fff
 8023a76:	4001      	ands	r1, r0
 8023a78:	82f9      	strh	r1, [r7, #22]
 8023a7a:	7eb9      	ldrb	r1, [r7, #26]
 8023a7c:	7ef8      	ldrb	r0, [r7, #27]
 8023a7e:	80e3      	strh	r3, [r4, #6]
 8023a80:	68a3      	ldr	r3, [r4, #8]
 8023a82:	f001 0107 	and.w	r1, r1, #7
 8023a86:	f000 0007 	and.w	r0, r0, #7
 8023a8a:	731d      	strb	r5, [r3, #12]
 8023a8c:	9d01      	ldr	r5, [sp, #4]
 8023a8e:	7b2b      	ldrb	r3, [r5, #12]
 8023a90:	68a5      	ldr	r5, [r4, #8]
 8023a92:	736b      	strb	r3, [r5, #13]
 8023a94:	68a3      	ldr	r3, [r4, #8]
 8023a96:	739a      	strb	r2, [r3, #14]
 8023a98:	68a2      	ldr	r2, [r4, #8]
 8023a9a:	f882 b00f 	strb.w	fp, [r2, #15]
 8023a9e:	9b00      	ldr	r3, [sp, #0]
 8023aa0:	78da      	ldrb	r2, [r3, #3]
 8023aa2:	68a3      	ldr	r3, [r4, #8]
 8023aa4:	741a      	strb	r2, [r3, #16]
 8023aa6:	68a2      	ldr	r2, [r4, #8]
 8023aa8:	7451      	strb	r1, [r2, #17]
 8023aaa:	68a1      	ldr	r1, [r4, #8]
 8023aac:	7488      	strb	r0, [r1, #18]
 8023aae:	4639      	mov	r1, r7
 8023ab0:	4620      	mov	r0, r4
 8023ab2:	f7ff f9c7 	bl	8022e44 <SMP_Send_Packet>
 8023ab6:	4605      	mov	r5, r0

08023ab8 <??SMP_Process_Rx_Packet_64>:
 8023ab8:	0028      	movs	r0, r5
 8023aba:	d10f      	bne.n	8023adc <??SMP_Process_Rx_Packet_65>
 8023abc:	9801      	ldr	r0, [sp, #4]
 8023abe:	7800      	ldrb	r0, [r0, #0]
 8023ac0:	f000 0103 	and.w	r1, r0, #3
 8023ac4:	2903      	cmp	r1, #3
 8023ac6:	d002      	beq.n	8023ace <??SMP_Process_Rx_Packet_66>
 8023ac8:	9901      	ldr	r1, [sp, #4]
 8023aca:	1c40      	adds	r0, r0, #1
 8023acc:	7008      	strb	r0, [r1, #0]

08023ace <??SMP_Process_Rx_Packet_66>:
 8023ace:	f8df 0394 	ldr.w	r0, [pc, #916]	; 8023e64 <??DataTable15>
 8023ad2:	f880 b16b 	strb.w	fp, [r0, #363]	; 0x16b
 8023ad6:	f887 9008 	strb.w	r9, [r7, #8]
 8023ada:	e00f      	b.n	8023afc <??SMP_Process_Rx_Packet_27>

08023adc <??SMP_Process_Rx_Packet_65>:
 8023adc:	2d64      	cmp	r5, #100	; 0x64
 8023ade:	d00d      	beq.n	8023afc <??SMP_Process_Rx_Packet_27>

08023ae0 <??SMP_Process_Rx_Packet_53>:
 8023ae0:	462b      	mov	r3, r5
 8023ae2:	2205      	movs	r2, #5
 8023ae4:	4621      	mov	r1, r4
 8023ae6:	4638      	mov	r0, r7
 8023ae8:	f000 fb76 	bl	80241d8 <SMP_Send_2octets_Packet>
 8023aec:	4604      	mov	r4, r0
 8023aee:	2864      	cmp	r0, #100	; 0x64
 8023af0:	d003      	beq.n	8023afa <??SMP_Process_Rx_Packet_67>
 8023af2:	4629      	mov	r1, r5
 8023af4:	4638      	mov	r0, r7
 8023af6:	f000 f9c7 	bl	8023e88 <smp_pairing_process_abort>

08023afa <??SMP_Process_Rx_Packet_67>:
 8023afa:	4625      	mov	r5, r4

08023afc <??SMP_Process_Rx_Packet_27>:
 8023afc:	462c      	mov	r4, r5
 8023afe:	e0e7      	b.n	8023cd0 <??SMP_Process_Rx_Packet_19>

08023b00 <??SMP_Process_Rx_Packet_46>:
 8023b00:	28b5      	cmp	r0, #181	; 0xb5
 8023b02:	d108      	bne.n	8023b16 <??SMP_Process_Rx_Packet_68>
 8023b04:	2d03      	cmp	r5, #3
 8023b06:	f040 80e6 	bne.w	8023cd6 <??SMP_Process_Rx_Packet_52>
 8023b0a:	4639      	mov	r1, r7
 8023b0c:	4630      	mov	r0, r6
 8023b0e:	f7ff f80e 	bl	8022b2e <smp__SR_PairingConfirm_Receive>

08023b12 <??SMP_Process_Rx_Packet_29>:
 8023b12:	4604      	mov	r4, r0
 8023b14:	e0dc      	b.n	8023cd0 <??SMP_Process_Rx_Packet_19>

08023b16 <??SMP_Process_Rx_Packet_68>:
 8023b16:	28b6      	cmp	r0, #182	; 0xb6
 8023b18:	f040 80cb 	bne.w	8023cb2 <??SMP_Process_Rx_Packet_69>
 8023b1c:	2d04      	cmp	r5, #4
 8023b1e:	f040 80da 	bne.w	8023cd6 <??SMP_Process_Rx_Packet_52>
 8023b22:	8af9      	ldrh	r1, [r7, #22]
 8023b24:	2220      	movs	r2, #32
 8023b26:	2000      	movs	r0, #0
 8023b28:	f3c1 010b 	ubfx	r1, r1, #0, #12
 8023b2c:	2400      	movs	r4, #0
 8023b2e:	f001 f8c0 	bl	8024cb2 <ACL_PM_New>
 8023b32:	0005      	movs	r5, r0
 8023b34:	bf08      	it	eq
 8023b36:	2464      	moveq	r4, #100	; 0x64
 8023b38:	f000 810f 	beq.w	8023d5a <??SMP_Process_Rx_Packet_14>
 8023b3c:	f107 034e 	add.w	r3, r7, #78	; 0x4e
 8023b40:	2210      	movs	r2, #16
 8023b42:	2105      	movs	r1, #5
 8023b44:	4630      	mov	r0, r6
 8023b46:	f001 f94e 	bl	8024de6 <ACL_PM_Get_Data>
 8023b4a:	f898 0000 	ldrb.w	r0, [r8]
 8023b4e:	0701      	lsls	r1, r0, #28
 8023b50:	d550      	bpl.n	8023bf4 <??SMP_Process_Rx_Packet_70>
 8023b52:	7a78      	ldrb	r0, [r7, #9]
 8023b54:	26ba      	movs	r6, #186	; 0xba
 8023b56:	2804      	cmp	r0, #4
 8023b58:	d125      	bne.n	8023ba6 <??SMP_Process_Rx_Packet_71>
 8023b5a:	a901      	add	r1, sp, #4
 8023b5c:	48c1      	ldr	r0, [pc, #772]	; (8023e64 <??DataTable15>)
 8023b5e:	9100      	str	r1, [sp, #0]
 8023b60:	f100 01e8 	add.w	r1, r0, #232	; 0xe8
 8023b64:	f107 035e 	add.w	r3, r7, #94	; 0x5e
 8023b68:	f107 024e 	add.w	r2, r7, #78	; 0x4e
 8023b6c:	f500 7094 	add.w	r0, r0, #296	; 0x128
 8023b70:	f7fd fe24 	bl	80217bc <SMA_SC_Gen_g2_NumComp_Val>
 8023b74:	7b78      	ldrb	r0, [r7, #13]
 8023b76:	26b9      	movs	r6, #185	; 0xb9
 8023b78:	f000 003f 	and.w	r0, r0, #63	; 0x3f
 8023b7c:	7378      	strb	r0, [r7, #13]
 8023b7e:	a801      	add	r0, sp, #4
 8023b80:	f7fe fc96 	bl	80224b0 <LE4_TO_U32>
 8023b84:	f8df 3630 	ldr.w	r3, [pc, #1584]	; 80241b8 <??DataTable22_1>
 8023b88:	fba0 3203 	umull	r3, r2, r0, r3
 8023b8c:	f8df 162c 	ldr.w	r1, [pc, #1580]	; 80241bc <??DataTable22_2>
 8023b90:	0cd2      	lsrs	r2, r2, #19
 8023b92:	fb01 0012 	mls	r0, r1, r2, r0
 8023b96:	8af9      	ldrh	r1, [r7, #22]
 8023b98:	4602      	mov	r2, r0
 8023b9a:	2001      	movs	r0, #1
 8023b9c:	f3c1 010b 	ubfx	r1, r1, #0, #12
 8023ba0:	f7fb fab9 	bl	801f116 <EVT_aci_gap_numeric_comparison_value>
 8023ba4:	e035      	b.n	8023c12 <??SMP_Process_Rx_Packet_72>

08023ba6 <??SMP_Process_Rx_Packet_71>:
 8023ba6:	2802      	cmp	r0, #2
 8023ba8:	d133      	bne.n	8023c12 <??SMP_Process_Rx_Packet_72>
 8023baa:	f897 900f 	ldrb.w	r9, [r7, #15]
 8023bae:	48ad      	ldr	r0, [pc, #692]	; (8023e64 <??DataTable15>)
 8023bb0:	f100 0288 	add.w	r2, r0, #136	; 0x88
 8023bb4:	a902      	add	r1, sp, #8
 8023bb6:	6853      	ldr	r3, [r2, #4]
 8023bb8:	ea4f 09d9 	mov.w	r9, r9, lsr #3
 8023bbc:	9100      	str	r1, [sp, #0]
 8023bbe:	f109 01ff 	add.w	r1, r9, #255	; 0xff
 8023bc2:	40cb      	lsrs	r3, r1
 8023bc4:	f003 0301 	and.w	r3, r3, #1
 8023bc8:	f100 01e8 	add.w	r1, r0, #232	; 0xe8
 8023bcc:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 8023bd0:	f107 024e 	add.w	r2, r7, #78	; 0x4e
 8023bd4:	f500 7094 	add.w	r0, r0, #296	; 0x128
 8023bd8:	f7fd fd26 	bl	8021628 <SMA_SC_Gen_f4_Confirm>
 8023bdc:	2210      	movs	r2, #16
 8023bde:	f107 0124 	add.w	r1, r7, #36	; 0x24
 8023be2:	a802      	add	r0, sp, #8
 8023be4:	f00d f9ac 	bl	8030f40 <memcmp>
 8023be8:	4604      	mov	r4, r0
 8023bea:	f1b9 0f14 	cmp.w	r9, #20
 8023bee:	d20f      	bcs.n	8023c10 <??SMP_Process_Rx_Packet_73>
 8023bf0:	26b4      	movs	r6, #180	; 0xb4
 8023bf2:	e00d      	b.n	8023c10 <??SMP_Process_Rx_Packet_73>

08023bf4 <??SMP_Process_Rx_Packet_70>:
 8023bf4:	aa02      	add	r2, sp, #8
 8023bf6:	f107 014e 	add.w	r1, r7, #78	; 0x4e
 8023bfa:	4638      	mov	r0, r7
 8023bfc:	f7ff f841 	bl	8022c82 <smp_SR_Compute_c1_Confirm_Value>
 8023c00:	2210      	movs	r2, #16
 8023c02:	f107 0124 	add.w	r1, r7, #36	; 0x24
 8023c06:	a802      	add	r0, sp, #8
 8023c08:	f00d f99a 	bl	8030f40 <memcmp>
 8023c0c:	4604      	mov	r4, r0
 8023c0e:	26bc      	movs	r6, #188	; 0xbc

08023c10 <??SMP_Process_Rx_Packet_73>:
 8023c10:	bb8c      	cbnz	r4, 8023c76 <??SMP_Process_Rx_Packet_74>

08023c12 <??SMP_Process_Rx_Packet_72>:
 8023c12:	2011      	movs	r0, #17
 8023c14:	80e8      	strh	r0, [r5, #6]
 8023c16:	68a8      	ldr	r0, [r5, #8]
 8023c18:	2104      	movs	r1, #4
 8023c1a:	f107 035e 	add.w	r3, r7, #94	; 0x5e
 8023c1e:	7301      	strb	r1, [r0, #12]
 8023c20:	2210      	movs	r2, #16
 8023c22:	2105      	movs	r1, #5
 8023c24:	4628      	mov	r0, r5
 8023c26:	f001 f8e8 	bl	8024dfa <ACL_PM_Set_Data>
 8023c2a:	4639      	mov	r1, r7
 8023c2c:	4628      	mov	r0, r5
 8023c2e:	f7ff f909 	bl	8022e44 <SMP_Send_Packet>
 8023c32:	b940      	cbnz	r0, 8023c46 <??SMP_Process_Rx_Packet_75>
 8023c34:	723e      	strb	r6, [r7, #8]
 8023c36:	488b      	ldr	r0, [pc, #556]	; (8023e64 <??DataTable15>)
 8023c38:	f890 108b 	ldrb.w	r1, [r0, #139]	; 0x8b
 8023c3c:	7bb8      	ldrb	r0, [r7, #14]
 8023c3e:	4281      	cmp	r1, r0
 8023c40:	bf88      	it	hi
 8023c42:	4601      	movhi	r1, r0
 8023c44:	73b9      	strb	r1, [r7, #14]

08023c46 <??SMP_Process_Rx_Packet_75>:
 8023c46:	f898 1000 	ldrb.w	r1, [r8]
 8023c4a:	0708      	lsls	r0, r1, #28
 8023c4c:	f100 8084 	bmi.w	8023d58 <??SMP_Process_Rx_Packet_47>
 8023c50:	2c00      	cmp	r4, #0
 8023c52:	f040 8081 	bne.w	8023d58 <??SMP_Process_Rx_Packet_47>
 8023c56:	a806      	add	r0, sp, #24
 8023c58:	2100      	movs	r1, #0
 8023c5a:	2200      	movs	r2, #0
 8023c5c:	2300      	movs	r3, #0
 8023c5e:	e880 001e 	stmia.w	r0, {r1, r2, r3, r4}
 8023c62:	7a78      	ldrb	r0, [r7, #9]
 8023c64:	2802      	cmp	r0, #2
 8023c66:	d111      	bne.n	8023c8c <??SMP_Process_Rx_Packet_76>
 8023c68:	f8df 0548 	ldr.w	r0, [pc, #1352]	; 80241b4 <??DataTable22>
 8023c6c:	6841      	ldr	r1, [r0, #4]
 8023c6e:	a806      	add	r0, sp, #24
 8023c70:	f7fe fc2a 	bl	80224c8 <U32_TO_LE4>
 8023c74:	e013      	b.n	8023c9e <??SMP_Process_Rx_Packet_77>

08023c76 <??SMP_Process_Rx_Packet_74>:
 8023c76:	2304      	movs	r3, #4
 8023c78:	2205      	movs	r2, #5
 8023c7a:	4629      	mov	r1, r5
 8023c7c:	4638      	mov	r0, r7
 8023c7e:	f000 faab 	bl	80241d8 <SMP_Send_2octets_Packet>
 8023c82:	2104      	movs	r1, #4
 8023c84:	4638      	mov	r0, r7
 8023c86:	f000 f8ff 	bl	8023e88 <smp_pairing_process_abort>
 8023c8a:	e065      	b.n	8023d58 <??SMP_Process_Rx_Packet_47>

08023c8c <??SMP_Process_Rx_Packet_76>:
 8023c8c:	2803      	cmp	r0, #3
 8023c8e:	d106      	bne.n	8023c9e <??SMP_Process_Rx_Packet_77>
 8023c90:	f8df 0530 	ldr.w	r0, [pc, #1328]	; 80241c4 <??DataTable22_4>
 8023c94:	e890 003c 	ldmia.w	r0, {r2, r3, r4, r5}
 8023c98:	a906      	add	r1, sp, #24
 8023c9a:	e881 003c 	stmia.w	r1, {r2, r3, r4, r5}

08023c9e <??SMP_Process_Rx_Packet_77>:
 8023c9e:	f107 0324 	add.w	r3, r7, #36	; 0x24
 8023ca2:	f107 024e 	add.w	r2, r7, #78	; 0x4e
 8023ca6:	f107 015e 	add.w	r1, r7, #94	; 0x5e
 8023caa:	a806      	add	r0, sp, #24
 8023cac:	f7fd fc7b 	bl	80215a6 <SMA_LP_s1_Generate_STK>
 8023cb0:	e052      	b.n	8023d58 <??SMP_Process_Rx_Packet_47>

08023cb2 <??SMP_Process_Rx_Packet_69>:
 8023cb2:	28f0      	cmp	r0, #240	; 0xf0
 8023cb4:	bf08      	it	eq
 8023cb6:	2d01      	cmpeq	r5, #1
 8023cb8:	d10d      	bne.n	8023cd6 <??SMP_Process_Rx_Packet_52>
 8023cba:	2309      	movs	r3, #9
 8023cbc:	2205      	movs	r2, #5
 8023cbe:	2100      	movs	r1, #0
 8023cc0:	4638      	mov	r0, r7
 8023cc2:	f000 fa89 	bl	80241d8 <SMP_Send_2octets_Packet>
 8023cc6:	4604      	mov	r4, r0
 8023cc8:	2109      	movs	r1, #9

08023cca <??SMP_Process_Rx_Packet_41>:
 8023cca:	4638      	mov	r0, r7
 8023ccc:	f000 f8dc 	bl	8023e88 <smp_pairing_process_abort>

08023cd0 <??SMP_Process_Rx_Packet_19>:
 8023cd0:	b2e0      	uxtb	r0, r4
 8023cd2:	28ff      	cmp	r0, #255	; 0xff
 8023cd4:	d141      	bne.n	8023d5a <??SMP_Process_Rx_Packet_14>

08023cd6 <??SMP_Process_Rx_Packet_52>:
 8023cd6:	68b1      	ldr	r1, [r6, #8]
 8023cd8:	24ff      	movs	r4, #255	; 0xff
 8023cda:	7b0a      	ldrb	r2, [r1, #12]
 8023cdc:	2a03      	cmp	r2, #3
 8023cde:	d117      	bne.n	8023d10 <??SMP_Process_Rx_Packet_78>
 8023ce0:	7a78      	ldrb	r0, [r7, #9]
 8023ce2:	2802      	cmp	r0, #2
 8023ce4:	d139      	bne.n	8023d5a <??SMP_Process_Rx_Packet_14>
 8023ce6:	f8df 04d8 	ldr.w	r0, [pc, #1240]	; 80241c0 <??DataTable22_3>
 8023cea:	7b00      	ldrb	r0, [r0, #12]
 8023cec:	2802      	cmp	r0, #2
 8023cee:	bf18      	it	ne
 8023cf0:	2804      	cmpne	r0, #4
 8023cf2:	d132      	bne.n	8023d5a <??SMP_Process_Rx_Packet_14>
 8023cf4:	7b78      	ldrb	r0, [r7, #13]
 8023cf6:	06c1      	lsls	r1, r0, #27
 8023cf8:	d42f      	bmi.n	8023d5a <??SMP_Process_Rx_Packet_14>
 8023cfa:	f898 0000 	ldrb.w	r0, [r8]
 8023cfe:	07c1      	lsls	r1, r0, #31
 8023d00:	d52b      	bpl.n	8023d5a <??SMP_Process_Rx_Packet_14>
 8023d02:	7a38      	ldrb	r0, [r7, #8]
 8023d04:	28b2      	cmp	r0, #178	; 0xb2
 8023d06:	bf18      	it	ne
 8023d08:	28b4      	cmpne	r0, #180	; 0xb4
 8023d0a:	d126      	bne.n	8023d5a <??SMP_Process_Rx_Packet_14>
 8023d0c:	2406      	movs	r4, #6
 8023d0e:	e024      	b.n	8023d5a <??SMP_Process_Rx_Packet_14>

08023d10 <??SMP_Process_Rx_Packet_78>:
 8023d10:	f898 3000 	ldrb.w	r3, [r8]
 8023d14:	071d      	lsls	r5, r3, #28
 8023d16:	d520      	bpl.n	8023d5a <??SMP_Process_Rx_Packet_14>
 8023d18:	2a0e      	cmp	r2, #14
 8023d1a:	d11e      	bne.n	8023d5a <??SMP_Process_Rx_Packet_14>
 8023d1c:	06d8      	lsls	r0, r3, #27
 8023d1e:	d51c      	bpl.n	8023d5a <??SMP_Process_Rx_Packet_14>
 8023d20:	7a7a      	ldrb	r2, [r7, #9]
 8023d22:	2a02      	cmp	r2, #2
 8023d24:	bf04      	itt	eq
 8023d26:	7af8      	ldrbeq	r0, [r7, #11]
 8023d28:	2802      	cmpeq	r0, #2
 8023d2a:	d116      	bne.n	8023d5a <??SMP_Process_Rx_Packet_14>
 8023d2c:	07d8      	lsls	r0, r3, #31
 8023d2e:	7a38      	ldrb	r0, [r7, #8]
 8023d30:	d506      	bpl.n	8023d40 <??SMP_Process_Rx_Packet_79>
 8023d32:	28b2      	cmp	r0, #178	; 0xb2
 8023d34:	bf18      	it	ne
 8023d36:	28b4      	cmpne	r0, #180	; 0xb4
 8023d38:	d007      	beq.n	8023d4a <??SMP_Process_Rx_Packet_80>
 8023d3a:	28b5      	cmp	r0, #181	; 0xb5
 8023d3c:	d10d      	bne.n	8023d5a <??SMP_Process_Rx_Packet_14>
 8023d3e:	e004      	b.n	8023d4a <??SMP_Process_Rx_Packet_80>

08023d40 <??SMP_Process_Rx_Packet_79>:
 8023d40:	28a2      	cmp	r0, #162	; 0xa2
 8023d42:	bf1c      	itt	ne
 8023d44:	28a4      	cmpne	r0, #164	; 0xa4
 8023d46:	28a5      	cmpne	r0, #165	; 0xa5
 8023d48:	d107      	bne.n	8023d5a <??SMP_Process_Rx_Packet_14>

08023d4a <??SMP_Process_Rx_Packet_80>:
 8023d4a:	7b4a      	ldrb	r2, [r1, #13]
 8023d4c:	8af9      	ldrh	r1, [r7, #22]
 8023d4e:	2001      	movs	r0, #1
 8023d50:	f3c1 010b 	ubfx	r1, r1, #0, #12
 8023d54:	f7fb f9ec 	bl	801f130 <EVT_aci_gap_keypress_notification>

08023d58 <??SMP_Process_Rx_Packet_47>:
 8023d58:	2400      	movs	r4, #0

08023d5a <??SMP_Process_Rx_Packet_14>:
 8023d5a:	b2e0      	uxtb	r0, r4

08023d5c <?Subroutine1>:
 8023d5c:	b00f      	add	sp, #60	; 0x3c
 8023d5e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08023d62 <smp_keys_distribution_start>:
 8023d62:	b430      	push	{r4, r5}
 8023d64:	f890 306e 	ldrb.w	r3, [r0, #110]	; 0x6e
 8023d68:	2201      	movs	r2, #1
 8023d6a:	7ec4      	ldrb	r4, [r0, #27]
 8023d6c:	f013 0108 	ands.w	r1, r3, #8
 8023d70:	d103      	bne.n	8023d7a <??smp_keys_distribution_start_0>
 8023d72:	07e5      	lsls	r5, r4, #31
 8023d74:	bf48      	it	mi
 8023d76:	21d1      	movmi	r1, #209	; 0xd1
 8023d78:	d413      	bmi.n	8023da2 <??smp_keys_distribution_start_1>

08023d7a <??smp_keys_distribution_start_0>:
 8023d7a:	07a5      	lsls	r5, r4, #30
 8023d7c:	bf48      	it	mi
 8023d7e:	21d3      	movmi	r1, #211	; 0xd3
 8023d80:	d40f      	bmi.n	8023da2 <??smp_keys_distribution_start_1>
 8023d82:	0764      	lsls	r4, r4, #29
 8023d84:	bf48      	it	mi
 8023d86:	21d5      	movmi	r1, #213	; 0xd5
 8023d88:	d40b      	bmi.n	8023da2 <??smp_keys_distribution_start_1>
 8023d8a:	07db      	lsls	r3, r3, #31
 8023d8c:	d508      	bpl.n	8023da0 <??smp_keys_distribution_start_2>
 8023d8e:	7e83      	ldrb	r3, [r0, #26]
 8023d90:	b911      	cbnz	r1, 8023d98 <??smp_keys_distribution_start_3>
 8023d92:	f013 0f07 	tst.w	r3, #7
 8023d96:	d101      	bne.n	8023d9c <??smp_keys_distribution_start_4>

08023d98 <??smp_keys_distribution_start_3>:
 8023d98:	2b01      	cmp	r3, #1
 8023d9a:	dd01      	ble.n	8023da0 <??smp_keys_distribution_start_2>

08023d9c <??smp_keys_distribution_start_4>:
 8023d9c:	21d0      	movs	r1, #208	; 0xd0
 8023d9e:	e001      	b.n	8023da4 <??smp_keys_distribution_start_5>

08023da0 <??smp_keys_distribution_start_2>:
 8023da0:	21e0      	movs	r1, #224	; 0xe0

08023da2 <??smp_keys_distribution_start_1>:
 8023da2:	2200      	movs	r2, #0

08023da4 <??smp_keys_distribution_start_5>:
 8023da4:	7201      	strb	r1, [r0, #8]
 8023da6:	b95a      	cbnz	r2, 8023dc0 <??smp_keys_distribution_start_6>
 8023da8:	f3ef 8010 	mrs	r0, PRIMASK
 8023dac:	b672      	cpsid	i
 8023dae:	492d      	ldr	r1, [pc, #180]	; (8023e64 <??DataTable15>)
 8023db0:	f891 2039 	ldrb.w	r2, [r1, #57]	; 0x39
 8023db4:	f002 02fb 	and.w	r2, r2, #251	; 0xfb
 8023db8:	f881 2039 	strb.w	r2, [r1, #57]	; 0x39
 8023dbc:	f380 8810 	msr	PRIMASK, r0

08023dc0 <??smp_keys_distribution_start_6>:
 8023dc0:	bc30      	pop	{r4, r5}
 8023dc2:	4770      	bx	lr

08023dc4 <SMP_Keys_Distribution_Complete>:
 8023dc4:	f100 026e 	add.w	r2, r0, #110	; 0x6e
 8023dc8:	b418      	push	{r3, r4}
 8023dca:	7813      	ldrb	r3, [r2, #0]
 8023dcc:	7e81      	ldrb	r1, [r0, #26]
 8023dce:	07dc      	lsls	r4, r3, #31
 8023dd0:	d40a      	bmi.n	8023de8 <??SMP_Keys_Distribution_Complete_0>
 8023dd2:	06c9      	lsls	r1, r1, #27
 8023dd4:	d50d      	bpl.n	8023df2 <??SMP_Keys_Distribution_Complete_1>
 8023dd6:	7891      	ldrb	r1, [r2, #2]
 8023dd8:	068b      	lsls	r3, r1, #26
 8023dda:	d50a      	bpl.n	8023df2 <??SMP_Keys_Distribution_Complete_1>
 8023ddc:	f041 0104 	orr.w	r1, r1, #4
 8023de0:	7091      	strb	r1, [r2, #2]
 8023de2:	bc12      	pop	{r1, r4}
 8023de4:	f7ff b841 	b.w	8022e6a <SMP_MI_Start_Encryption>

08023de8 <??SMP_Keys_Distribution_Complete_0>:
 8023de8:	b119      	cbz	r1, 8023df2 <??SMP_Keys_Distribution_Complete_1>
 8023dea:	21d0      	movs	r1, #208	; 0xd0
 8023dec:	7201      	strb	r1, [r0, #8]
 8023dee:	bc11      	pop	{r0, r4}
 8023df0:	4770      	bx	lr

08023df2 <??SMP_Keys_Distribution_Complete_1>:
 8023df2:	bc12      	pop	{r1, r4}

08023df4 <smp_pairing_completed>:
 8023df4:	b538      	push	{r3, r4, r5, lr}
 8023df6:	4604      	mov	r4, r0
 8023df8:	8ae5      	ldrh	r5, [r4, #22]
 8023dfa:	f7fe fb6d 	bl	80224d8 <SMP_remDev_Index>
 8023dfe:	3008      	adds	r0, #8
 8023e00:	b2c0      	uxtb	r0, r0
 8023e02:	f003 fda1 	bl	8027948 <BLEPLAT_TimerStop>
 8023e06:	4620      	mov	r0, r4
 8023e08:	f7fe fb94 	bl	8022534 <SMP_Add_To_SDB>
 8023e0c:	7a60      	ldrb	r0, [r4, #9]
 8023e0e:	f3c5 050b 	ubfx	r5, r5, #0, #12
 8023e12:	2803      	cmp	r0, #3
 8023e14:	d105      	bne.n	8023e22 <??smp_pairing_completed_0>
 8023e16:	4813      	ldr	r0, [pc, #76]	; (8023e64 <??DataTable15>)
 8023e18:	f8d0 00c4 	ldr.w	r0, [r0, #196]	; 0xc4
 8023e1c:	2128      	movs	r1, #40	; 0x28
 8023e1e:	f00d f85f 	bl	8030ee0 <__aeabi_memclr>

08023e22 <??smp_pairing_completed_0>:
 8023e22:	f894 006f 	ldrb.w	r0, [r4, #111]	; 0x6f
 8023e26:	2100      	movs	r1, #0
 8023e28:	f000 0040 	and.w	r0, r0, #64	; 0x40
 8023e2c:	f884 006f 	strb.w	r0, [r4, #111]	; 0x6f
 8023e30:	4620      	mov	r0, r4
 8023e32:	f000 f819 	bl	8023e68 <SMP_Update_Statistics_On_Pairing_Complete>
 8023e36:	20f1      	movs	r0, #241	; 0xf1
 8023e38:	7220      	strb	r0, [r4, #8]
 8023e3a:	2300      	movs	r3, #0
 8023e3c:	2200      	movs	r2, #0
 8023e3e:	4629      	mov	r1, r5
 8023e40:	2001      	movs	r0, #1
 8023e42:	f7fb f99b 	bl	801f17c <EVT_aci_gap_pairing_complete>
 8023e46:	8ae1      	ldrh	r1, [r4, #22]
 8023e48:	0408      	lsls	r0, r1, #16
 8023e4a:	d504      	bpl.n	8023e56 <??smp_pairing_completed_1>
 8023e4c:	f3c1 010b 	ubfx	r1, r1, #0, #12
 8023e50:	2001      	movs	r0, #1
 8023e52:	f7fb f9a1 	bl	801f198 <EVT_aci_gap_authorization_req>

08023e56 <??smp_pairing_completed_1>:
 8023e56:	f104 0010 	add.w	r0, r4, #16
 8023e5a:	e8bd 4032 	ldmia.w	sp!, {r1, r4, r5, lr}
 8023e5e:	f7fe ba77 	b.w	8022350 <SMP_Remove_From_Blacklist>
	...

08023e64 <??DataTable15>:
 8023e64:	3710 2000                                   .7. 

08023e68 <SMP_Update_Statistics_On_Pairing_Complete>:
 8023e68:	7a02      	ldrb	r2, [r0, #8]
 8023e6a:	3aa0      	subs	r2, #160	; 0xa0
 8023e6c:	2a41      	cmp	r2, #65	; 0x41
 8023e6e:	d209      	bcs.n	8023e84 <??SMP_Update_Statistics_On_Pairing_Complete_0>
 8023e70:	f8df 2354 	ldr.w	r2, [pc, #852]	; 80241c8 <??DataTable22_5>
 8023e74:	f892 30b4 	ldrb.w	r3, [r2, #180]	; 0xb4
 8023e78:	f013 0f03 	tst.w	r3, #3
 8023e7c:	bf1c      	itt	ne
 8023e7e:	1e5b      	subne	r3, r3, #1
 8023e80:	f882 30b4 	strbne.w	r3, [r2, #180]	; 0xb4

08023e84 <??SMP_Update_Statistics_On_Pairing_Complete_0>:
 8023e84:	f000 bd91 	b.w	80249aa <smp_sc_update_statistics_on_pairing_complete>

08023e88 <smp_pairing_process_abort>:
 8023e88:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8023e8c:	f8df 6338 	ldr.w	r6, [pc, #824]	; 80241c8 <??DataTable22_5>
 8023e90:	f896 716d 	ldrb.w	r7, [r6, #365]	; 0x16d
 8023e94:	4605      	mov	r5, r0
 8023e96:	7a28      	ldrb	r0, [r5, #8]
 8023e98:	087f      	lsrs	r7, r7, #1
 8023e9a:	f007 0701 	and.w	r7, r7, #1
 8023e9e:	4688      	mov	r8, r1
 8023ea0:	f087 0701 	eor.w	r7, r7, #1
 8023ea4:	28a2      	cmp	r0, #162	; 0xa2
 8023ea6:	bf38      	it	cc
 8023ea8:	2700      	movcc	r7, #0
 8023eaa:	4628      	mov	r0, r5
 8023eac:	f7fe fb14 	bl	80224d8 <SMP_remDev_Index>
 8023eb0:	3008      	adds	r0, #8
 8023eb2:	b2c0      	uxtb	r0, r0
 8023eb4:	f003 fd48 	bl	8027948 <BLEPLAT_TimerStop>
 8023eb8:	8ae8      	ldrh	r0, [r5, #22]
 8023eba:	f3c0 000b 	ubfx	r0, r0, #0, #12
 8023ebe:	f7fd ffa8 	bl	8021e12 <SMP_Flush_Rx_Packets>
 8023ec2:	2102      	movs	r1, #2
 8023ec4:	4628      	mov	r0, r5
 8023ec6:	f7ff ffcf 	bl	8023e68 <SMP_Update_Statistics_On_Pairing_Complete>
 8023eca:	f105 006e 	add.w	r0, r5, #110	; 0x6e
 8023ece:	7801      	ldrb	r1, [r0, #0]
 8023ed0:	f001 0101 	and.w	r1, r1, #1
 8023ed4:	7001      	strb	r1, [r0, #0]
 8023ed6:	7b6a      	ldrb	r2, [r5, #13]
 8023ed8:	2100      	movs	r1, #0
 8023eda:	2f00      	cmp	r7, #0
 8023edc:	f002 022f 	and.w	r2, r2, #47	; 0x2f
 8023ee0:	736a      	strb	r2, [r5, #13]
 8023ee2:	7041      	strb	r1, [r0, #1]
 8023ee4:	d06d      	beq.n	8023fc2 <??smp_pairing_process_abort_0>
 8023ee6:	f8d6 60bc 	ldr.w	r6, [r6, #188]	; 0xbc
 8023eea:	2206      	movs	r2, #6
 8023eec:	f105 0110 	add.w	r1, r5, #16
 8023ef0:	4634      	mov	r4, r6
 8023ef2:	1c60      	adds	r0, r4, #1
 8023ef4:	2700      	movs	r7, #0
 8023ef6:	f00d f823 	bl	8030f40 <memcmp>
 8023efa:	b190      	cbz	r0, 8023f22 <??smp_pairing_process_abort_1>
 8023efc:	1df4      	adds	r4, r6, #7
 8023efe:	2206      	movs	r2, #6
 8023f00:	f105 0110 	add.w	r1, r5, #16
 8023f04:	1c60      	adds	r0, r4, #1
 8023f06:	2701      	movs	r7, #1
 8023f08:	f00d f81a 	bl	8030f40 <memcmp>
 8023f0c:	b148      	cbz	r0, 8023f22 <??smp_pairing_process_abort_1>
 8023f0e:	f106 040e 	add.w	r4, r6, #14
 8023f12:	2206      	movs	r2, #6
 8023f14:	f105 0110 	add.w	r1, r5, #16
 8023f18:	1c60      	adds	r0, r4, #1
 8023f1a:	2702      	movs	r7, #2
 8023f1c:	f00d f810 	bl	8030f40 <memcmp>
 8023f20:	b9e8      	cbnz	r0, 8023f5e <??smp_pairing_process_abort_2>

08023f22 <??smp_pairing_process_abort_1>:
 8023f22:	1c7f      	adds	r7, r7, #1
 8023f24:	4638      	mov	r0, r7
 8023f26:	f003 fd0f 	bl	8027948 <BLEPLAT_TimerStop>
 8023f2a:	7820      	ldrb	r0, [r4, #0]
 8023f2c:	f000 00bf 	and.w	r0, r0, #191	; 0xbf
 8023f30:	f040 0080 	orr.w	r0, r0, #128	; 0x80
 8023f34:	0781      	lsls	r1, r0, #30
 8023f36:	d503      	bpl.n	8023f40 <??smp_pairing_process_abort_3>
 8023f38:	f040 0001 	orr.w	r0, r0, #1
 8023f3c:	49a3      	ldr	r1, [pc, #652]	; (80241cc <??DataTable22_6>)
 8023f3e:	e00c      	b.n	8023f5a <??smp_pairing_process_abort_4>

08023f40 <??smp_pairing_process_abort_3>:
 8023f40:	07c1      	lsls	r1, r0, #31
 8023f42:	d506      	bpl.n	8023f52 <??smp_pairing_process_abort_5>
 8023f44:	f000 00fe 	and.w	r0, r0, #254	; 0xfe
 8023f48:	f040 0002 	orr.w	r0, r0, #2
 8023f4c:	f64a 71c8 	movw	r1, #45000	; 0xafc8
 8023f50:	e003      	b.n	8023f5a <??smp_pairing_process_abort_4>

08023f52 <??smp_pairing_process_abort_5>:
 8023f52:	f040 0001 	orr.w	r0, r0, #1
 8023f56:	f643 2198 	movw	r1, #15000	; 0x3a98

08023f5a <??smp_pairing_process_abort_4>:
 8023f5a:	7020      	strb	r0, [r4, #0]
 8023f5c:	e02c      	b.n	8023fb8 <??smp_pairing_process_abort_6>

08023f5e <??smp_pairing_process_abort_2>:
 8023f5e:	4634      	mov	r4, r6
 8023f60:	7822      	ldrb	r2, [r4, #0]
 8023f62:	2700      	movs	r7, #0
 8023f64:	2a00      	cmp	r2, #0
 8023f66:	bf1f      	itttt	ne
 8023f68:	2701      	movne	r7, #1
 8023f6a:	1df4      	addne	r4, r6, #7
 8023f6c:	7821      	ldrbne	r1, [r4, #0]
 8023f6e:	2900      	cmpne	r1, #0
 8023f70:	d017      	beq.n	8023fa2 <??smp_pairing_process_abort_7>
 8023f72:	f106 040e 	add.w	r4, r6, #14
 8023f76:	7820      	ldrb	r0, [r4, #0]
 8023f78:	2702      	movs	r7, #2
 8023f7a:	b190      	cbz	r0, 8023fa2 <??smp_pairing_process_abort_7>
 8023f7c:	2700      	movs	r7, #0
 8023f7e:	4634      	mov	r4, r6
 8023f80:	0652      	lsls	r2, r2, #25
 8023f82:	d40e      	bmi.n	8023fa2 <??smp_pairing_process_abort_7>
 8023f84:	2701      	movs	r7, #1
 8023f86:	1df4      	adds	r4, r6, #7
 8023f88:	0649      	lsls	r1, r1, #25
 8023f8a:	d40a      	bmi.n	8023fa2 <??smp_pairing_process_abort_7>
 8023f8c:	2702      	movs	r7, #2
 8023f8e:	f106 040e 	add.w	r4, r6, #14
 8023f92:	0640      	lsls	r0, r0, #25
 8023f94:	d405      	bmi.n	8023fa2 <??smp_pairing_process_abort_7>
 8023f96:	2001      	movs	r0, #1
 8023f98:	2701      	movs	r7, #1
 8023f9a:	4634      	mov	r4, r6
 8023f9c:	f003 fcd4 	bl	8027948 <BLEPLAT_TimerStop>
 8023fa0:	e000      	b.n	8023fa4 <??smp_pairing_process_abort_8>

08023fa2 <??smp_pairing_process_abort_7>:
 8023fa2:	1c7f      	adds	r7, r7, #1

08023fa4 <??smp_pairing_process_abort_8>:
 8023fa4:	2206      	movs	r2, #6
 8023fa6:	f105 0110 	add.w	r1, r5, #16
 8023faa:	1c60      	adds	r0, r4, #1
 8023fac:	f00c ff9b 	bl	8030ee6 <__aeabi_memcpy>
 8023fb0:	2080      	movs	r0, #128	; 0x80
 8023fb2:	7020      	strb	r0, [r4, #0]
 8023fb4:	f241 3188 	movw	r1, #5000	; 0x1388

08023fb8 <??smp_pairing_process_abort_6>:
 8023fb8:	4638      	mov	r0, r7
 8023fba:	f003 fcc3 	bl	8027944 <BLEPLAT_TimerStart>
 8023fbe:	20f0      	movs	r0, #240	; 0xf0
 8023fc0:	e000      	b.n	8023fc4 <??smp_pairing_process_abort_9>

08023fc2 <??smp_pairing_process_abort_0>:
 8023fc2:	2000      	movs	r0, #0

08023fc4 <??smp_pairing_process_abort_9>:
 8023fc4:	8ae9      	ldrh	r1, [r5, #22]
 8023fc6:	4643      	mov	r3, r8
 8023fc8:	7228      	strb	r0, [r5, #8]
 8023fca:	2202      	movs	r2, #2
 8023fcc:	f3c1 010b 	ubfx	r1, r1, #0, #12
 8023fd0:	2001      	movs	r0, #1
 8023fd2:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 8023fd6:	f7fb b8d1 	b.w	801f17c <EVT_aci_gap_pairing_complete>

08023fda <SMP_Send_Pairing_Failed>:
 8023fda:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8023fdc:	460d      	mov	r5, r1
 8023fde:	4611      	mov	r1, r2
 8023fe0:	461e      	mov	r6, r3
 8023fe2:	4604      	mov	r4, r0
 8023fe4:	462b      	mov	r3, r5
 8023fe6:	2205      	movs	r2, #5
 8023fe8:	f000 f8f6 	bl	80241d8 <SMP_Send_2octets_Packet>
 8023fec:	4607      	mov	r7, r0
 8023fee:	2864      	cmp	r0, #100	; 0x64
 8023ff0:	bf08      	it	eq
 8023ff2:	2e00      	cmpeq	r6, #0
 8023ff4:	d003      	beq.n	8023ffe <??SMP_Send_Pairing_Failed_0>
 8023ff6:	4629      	mov	r1, r5
 8023ff8:	4620      	mov	r0, r4
 8023ffa:	f7ff ff45 	bl	8023e88 <smp_pairing_process_abort>

08023ffe <??SMP_Send_Pairing_Failed_0>:
 8023ffe:	4638      	mov	r0, r7
 8024000:	bdf2      	pop	{r1, r4, r5, r6, r7, pc}

08024002 <SMP_Oob_Check_Remote_Data_Presence>:
 8024002:	b538      	push	{r3, r4, r5, lr}
 8024004:	4604      	mov	r4, r0
 8024006:	4870      	ldr	r0, [pc, #448]	; (80241c8 <??DataTable22_5>)
 8024008:	f8d0 00c4 	ldr.w	r0, [r0, #196]	; 0xc4
 802400c:	7be3      	ldrb	r3, [r4, #15]
 802400e:	2500      	movs	r5, #0
 8024010:	7841      	ldrb	r1, [r0, #1]
 8024012:	4299      	cmp	r1, r3
 8024014:	d10b      	bne.n	802402e <??SMP_Oob_Check_Remote_Data_Presence_0>
 8024016:	2206      	movs	r2, #6
 8024018:	f104 0110 	add.w	r1, r4, #16
 802401c:	1c80      	adds	r0, r0, #2
 802401e:	f00c ff8f 	bl	8030f40 <memcmp>
 8024022:	b920      	cbnz	r0, 802402e <??SMP_Oob_Check_Remote_Data_Presence_0>
 8024024:	7aa0      	ldrb	r0, [r4, #10]
 8024026:	2501      	movs	r5, #1
 8024028:	f040 0001 	orr.w	r0, r0, #1
 802402c:	72a0      	strb	r0, [r4, #10]

0802402e <??SMP_Oob_Check_Remote_Data_Presence_0>:
 802402e:	4628      	mov	r0, r5
 8024030:	bd32      	pop	{r1, r4, r5, pc}

08024032 <SMP_Oob_Get_Remote_Data_Reference>:
 8024032:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8024034:	4604      	mov	r4, r0
 8024036:	4615      	mov	r5, r2
 8024038:	461e      	mov	r6, r3
 802403a:	2700      	movs	r7, #0
 802403c:	b194      	cbz	r4, 8024064 <??SMP_Oob_Get_Remote_Data_Reference_0>
 802403e:	4862      	ldr	r0, [pc, #392]	; (80241c8 <??DataTable22_5>)
 8024040:	f8d0 00c4 	ldr.w	r0, [r0, #196]	; 0xc4
 8024044:	7be3      	ldrb	r3, [r4, #15]
 8024046:	7841      	ldrb	r1, [r0, #1]
 8024048:	4299      	cmp	r1, r3
 802404a:	d11d      	bne.n	8024088 <??SMP_Oob_Get_Remote_Data_Reference_1>
 802404c:	2206      	movs	r2, #6
 802404e:	f104 0110 	add.w	r1, r4, #16
 8024052:	1c80      	adds	r0, r0, #2
 8024054:	f00c ff74 	bl	8030f40 <memcmp>
 8024058:	b9b0      	cbnz	r0, 8024088 <??SMP_Oob_Get_Remote_Data_Reference_1>
 802405a:	7aa0      	ldrb	r0, [r4, #10]
 802405c:	f040 0001 	orr.w	r0, r0, #1
 8024060:	72a0      	strb	r0, [r4, #10]
 8024062:	e000      	b.n	8024066 <??SMP_Oob_Get_Remote_Data_Reference_2>

08024064 <??SMP_Oob_Get_Remote_Data_Reference_0>:
 8024064:	b981      	cbnz	r1, 8024088 <??SMP_Oob_Get_Remote_Data_Reference_1>

08024066 <??SMP_Oob_Get_Remote_Data_Reference_2>:
 8024066:	b115      	cbz	r5, 802406e <??SMP_Oob_Get_Remote_Data_Reference_3>
 8024068:	2d02      	cmp	r5, #2
 802406a:	d006      	beq.n	802407a <??SMP_Oob_Get_Remote_Data_Reference_4>
 802406c:	d20c      	bcs.n	8024088 <??SMP_Oob_Get_Remote_Data_Reference_1>

0802406e <??SMP_Oob_Get_Remote_Data_Reference_3>:
 802406e:	4856      	ldr	r0, [pc, #344]	; (80241c8 <??DataTable22_5>)
 8024070:	f8d0 10c4 	ldr.w	r1, [r0, #196]	; 0xc4
 8024074:	f101 0208 	add.w	r2, r1, #8
 8024078:	e004      	b.n	8024084 <??SMP_Oob_Get_Remote_Data_Reference_5>

0802407a <??SMP_Oob_Get_Remote_Data_Reference_4>:
 802407a:	4853      	ldr	r0, [pc, #332]	; (80241c8 <??DataTable22_5>)
 802407c:	f8d0 10c4 	ldr.w	r1, [r0, #196]	; 0xc4
 8024080:	f101 0218 	add.w	r2, r1, #24

08024084 <??SMP_Oob_Get_Remote_Data_Reference_5>:
 8024084:	6032      	str	r2, [r6, #0]
 8024086:	e000      	b.n	802408a <??SMP_Oob_Get_Remote_Data_Reference_6>

08024088 <??SMP_Oob_Get_Remote_Data_Reference_1>:
 8024088:	2792      	movs	r7, #146	; 0x92

0802408a <??SMP_Oob_Get_Remote_Data_Reference_6>:
 802408a:	4638      	mov	r0, r7
 802408c:	bdf2      	pop	{r1, r4, r5, r6, r7, pc}

0802408e <aci_gap_set_oob_data>:
 802408e:	e92d 4bfc 	stmdb	sp!, {r2, r3, r4, r5, r6, r7, r8, r9, fp, lr}
 8024092:	2600      	movs	r6, #0
 8024094:	4605      	mov	r5, r0
 8024096:	4690      	mov	r8, r2
 8024098:	469b      	mov	fp, r3
 802409a:	46b1      	mov	r9, r6
 802409c:	2802      	cmp	r0, #2
 802409e:	bf3c      	itt	cc
 80240a0:	9c0a      	ldrcc	r4, [sp, #40]	; 0x28
 80240a2:	2c11      	cmpcc	r4, #17
 80240a4:	d204      	bcs.n	80240b0 <??aci_gap_set_oob_data_0>
 80240a6:	460f      	mov	r7, r1
 80240a8:	2f01      	cmp	r7, #1
 80240aa:	bf18      	it	ne
 80240ac:	2f00      	cmpne	r7, #0
 80240ae:	d002      	beq.n	80240b6 <??aci_gap_set_oob_data_1>

080240b0 <??aci_gap_set_oob_data_0>:
 80240b0:	2092      	movs	r0, #146	; 0x92
 80240b2:	e8bd 8bf6 	ldmia.w	sp!, {r1, r2, r4, r5, r6, r7, r8, r9, fp, pc}

080240b6 <??aci_gap_set_oob_data_1>:
 80240b6:	f000 f867 	bl	8024188 <SMP_Is_Any_Pairing_Ongoing>
 80240ba:	b110      	cbz	r0, 80240c2 <??aci_gap_set_oob_data_2>
 80240bc:	200c      	movs	r0, #12
 80240be:	e8bd 8bf6 	ldmia.w	sp!, {r1, r2, r4, r5, r6, r7, r8, r9, fp, pc}

080240c2 <??aci_gap_set_oob_data_2>:
 80240c2:	4658      	mov	r0, fp
 80240c4:	f8dd b02c 	ldr.w	fp, [sp, #44]	; 0x2c
 80240c8:	b98d      	cbnz	r5, 80240ee <??aci_gap_set_oob_data_3>
 80240ca:	b91c      	cbnz	r4, 80240d4 <??aci_gap_set_oob_data_4>
 80240cc:	f000 fa52 	bl	8024574 <smp_sc_generate_new_local_oob_data>
 80240d0:	4606      	mov	r6, r0
 80240d2:	e02f      	b.n	8024134 <??aci_gap_set_oob_data_5>

080240d4 <??aci_gap_set_oob_data_4>:
 80240d4:	b110      	cbz	r0, 80240dc <??aci_gap_set_oob_data_6>
 80240d6:	2802      	cmp	r0, #2
 80240d8:	d005      	beq.n	80240e6 <??aci_gap_set_oob_data_7>
 80240da:	d206      	bcs.n	80240ea <??aci_gap_set_oob_data_8>

080240dc <??aci_gap_set_oob_data_6>:
 80240dc:	4839      	ldr	r0, [pc, #228]	; (80241c4 <??DataTable22_4>)

080240de <??aci_gap_set_oob_data_9>:
 80240de:	b348      	cbz	r0, 8024134 <??aci_gap_set_oob_data_5>
 80240e0:	4622      	mov	r2, r4
 80240e2:	4659      	mov	r1, fp
 80240e4:	e024      	b.n	8024130 <??aci_gap_set_oob_data_10>

080240e6 <??aci_gap_set_oob_data_7>:
 80240e6:	483a      	ldr	r0, [pc, #232]	; (80241d0 <??DataTable22_7>)
 80240e8:	e7f9      	b.n	80240de <??aci_gap_set_oob_data_9>

080240ea <??aci_gap_set_oob_data_8>:
 80240ea:	2692      	movs	r6, #146	; 0x92
 80240ec:	e022      	b.n	8024134 <??aci_gap_set_oob_data_5>

080240ee <??aci_gap_set_oob_data_3>:
 80240ee:	b148      	cbz	r0, 8024104 <??aci_gap_set_oob_data_11>
 80240f0:	2802      	cmp	r0, #2
 80240f2:	d001      	beq.n	80240f8 <??aci_gap_set_oob_data_12>
 80240f4:	d306      	bcc.n	8024104 <??aci_gap_set_oob_data_11>
 80240f6:	e00b      	b.n	8024110 <??aci_gap_set_oob_data_13>

080240f8 <??aci_gap_set_oob_data_12>:
 80240f8:	4833      	ldr	r0, [pc, #204]	; (80241c8 <??DataTable22_5>)
 80240fa:	f8d0 10c4 	ldr.w	r1, [r0, #196]	; 0xc4
 80240fe:	f101 0918 	add.w	r9, r1, #24
 8024102:	e006      	b.n	8024112 <??aci_gap_set_oob_data_14>

08024104 <??aci_gap_set_oob_data_11>:
 8024104:	4830      	ldr	r0, [pc, #192]	; (80241c8 <??DataTable22_5>)
 8024106:	f8d0 10c4 	ldr.w	r1, [r0, #196]	; 0xc4
 802410a:	f101 0908 	add.w	r9, r1, #8
 802410e:	e000      	b.n	8024112 <??aci_gap_set_oob_data_14>

08024110 <??aci_gap_set_oob_data_13>:
 8024110:	2692      	movs	r6, #146	; 0x92

08024112 <??aci_gap_set_oob_data_14>:
 8024112:	b97e      	cbnz	r6, 8024134 <??aci_gap_set_oob_data_5>
 8024114:	482c      	ldr	r0, [pc, #176]	; (80241c8 <??DataTable22_5>)
 8024116:	f8d0 20c4 	ldr.w	r2, [r0, #196]	; 0xc4
 802411a:	4641      	mov	r1, r8
 802411c:	7057      	strb	r7, [r2, #1]
 802411e:	f8d0 00c4 	ldr.w	r0, [r0, #196]	; 0xc4
 8024122:	2206      	movs	r2, #6
 8024124:	1c80      	adds	r0, r0, #2
 8024126:	f00c fede 	bl	8030ee6 <__aeabi_memcpy>
 802412a:	4622      	mov	r2, r4
 802412c:	4659      	mov	r1, fp
 802412e:	4648      	mov	r0, r9

08024130 <??aci_gap_set_oob_data_10>:
 8024130:	f00c fed9 	bl	8030ee6 <__aeabi_memcpy>

08024134 <??aci_gap_set_oob_data_5>:
 8024134:	4630      	mov	r0, r6
 8024136:	e8bd 8bf6 	ldmia.w	sp!, {r1, r2, r4, r5, r6, r7, r8, r9, fp, pc}

0802413a <aci_gap_get_oob_data>:
 802413a:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 802413c:	4614      	mov	r4, r2
 802413e:	461d      	mov	r5, r3
 8024140:	2600      	movs	r6, #0
 8024142:	4b21      	ldr	r3, [pc, #132]	; (80241c8 <??DataTable22_5>)
 8024144:	0002      	movs	r2, r0
 8024146:	d107      	bne.n	8024158 <??aci_gap_get_oob_data_0>

08024148 <??aci_gap_get_oob_data_1>:
 8024148:	f103 0794 	add.w	r7, r3, #148	; 0x94

0802414c <??aci_gap_get_oob_data_2>:
 802414c:	f893 0091 	ldrb.w	r0, [r3, #145]	; 0x91
 8024150:	0002      	movs	r2, r0
 8024152:	bf18      	it	ne
 8024154:	332e      	addne	r3, #46	; 0x2e
 8024156:	e008      	b.n	802416a <??aci_gap_get_oob_data_3>

08024158 <??aci_gap_get_oob_data_0>:
 8024158:	2801      	cmp	r0, #1
 802415a:	d0f5      	beq.n	8024148 <??aci_gap_get_oob_data_1>
 802415c:	2802      	cmp	r0, #2
 802415e:	bf08      	it	eq
 8024160:	f103 07a4 	addeq.w	r7, r3, #164	; 0xa4
 8024164:	d0f2      	beq.n	802414c <??aci_gap_get_oob_data_2>
 8024166:	2692      	movs	r6, #146	; 0x92
 8024168:	e00c      	b.n	8024184 <??aci_gap_get_oob_data_4>

0802416a <??aci_gap_get_oob_data_3>:
 802416a:	7008      	strb	r0, [r1, #0]
 802416c:	2206      	movs	r2, #6
 802416e:	4619      	mov	r1, r3
 8024170:	4620      	mov	r0, r4
 8024172:	f00c feb8 	bl	8030ee6 <__aeabi_memcpy>
 8024176:	2310      	movs	r3, #16
 8024178:	702b      	strb	r3, [r5, #0]
 802417a:	9806      	ldr	r0, [sp, #24]
 802417c:	2210      	movs	r2, #16
 802417e:	4639      	mov	r1, r7
 8024180:	f00c feb1 	bl	8030ee6 <__aeabi_memcpy>

08024184 <??aci_gap_get_oob_data_4>:
 8024184:	4630      	mov	r0, r6
 8024186:	bdf2      	pop	{r1, r4, r5, r6, r7, pc}

08024188 <SMP_Is_Any_Pairing_Ongoing>:
 8024188:	b410      	push	{r4}
 802418a:	4a0f      	ldr	r2, [pc, #60]	; (80241c8 <??DataTable22_5>)
 802418c:	4b11      	ldr	r3, [pc, #68]	; (80241d4 <??DataTable22_8>)
 802418e:	2000      	movs	r0, #0
 8024190:	2100      	movs	r1, #0
 8024192:	f8d2 20b8 	ldr.w	r2, [r2, #184]	; 0xb8
 8024196:	7d9b      	ldrb	r3, [r3, #22]
 8024198:	e001      	b.n	802419e <??SMP_Is_Any_Pairing_Ongoing_0>

0802419a <??SMP_Is_Any_Pairing_Ongoing_1>:
 802419a:	1c49      	adds	r1, r1, #1
 802419c:	3280      	adds	r2, #128	; 0x80

0802419e <??SMP_Is_Any_Pairing_Ongoing_0>:
 802419e:	b2cc      	uxtb	r4, r1
 80241a0:	429c      	cmp	r4, r3
 80241a2:	d204      	bcs.n	80241ae <??SMP_Is_Any_Pairing_Ongoing_2>
 80241a4:	7a14      	ldrb	r4, [r2, #8]
 80241a6:	3ca0      	subs	r4, #160	; 0xa0
 80241a8:	2c41      	cmp	r4, #65	; 0x41
 80241aa:	d2f6      	bcs.n	802419a <??SMP_Is_Any_Pairing_Ongoing_1>
 80241ac:	2001      	movs	r0, #1

080241ae <??SMP_Is_Any_Pairing_Ongoing_2>:
 80241ae:	bc10      	pop	{r4}
 80241b0:	4770      	bx	lr
	...

080241b4 <??DataTable22>:
 80241b4:	3798 2000                                   .7. 

080241b8 <??DataTable22_1>:
 80241b8:	bd06 8637                                   ..7.

080241bc <??DataTable22_2>:
 80241bc:	4240 000f                                   @B..

080241c0 <??DataTable22_3>:
 80241c0:	37c4 2000                                   .7. 

080241c4 <??DataTable22_4>:
 80241c4:	37a4 2000                                   .7. 

080241c8 <??DataTable22_5>:
 80241c8:	3710 2000                                   .7. 

080241cc <??DataTable22_6>:
 80241cc:	0f58 0002                                   X...

080241d0 <??DataTable22_7>:
 80241d0:	37b4 2000                                   .7. 

080241d4 <??DataTable22_8>:
 80241d4:	36e8 2000                                   .6. 

080241d8 <SMP_Send_2octets_Packet>:
 80241d8:	b570      	push	{r4, r5, r6, lr}
 80241da:	4604      	mov	r4, r0
 80241dc:	0008      	movs	r0, r1
 80241de:	4615      	mov	r5, r2
 80241e0:	461e      	mov	r6, r3
 80241e2:	d108      	bne.n	80241f6 <??SMP_Send_2octets_Packet_0>
 80241e4:	8ae1      	ldrh	r1, [r4, #22]
 80241e6:	2220      	movs	r2, #32
 80241e8:	f3c1 010b 	ubfx	r1, r1, #0, #12
 80241ec:	f000 fd61 	bl	8024cb2 <ACL_PM_New>
 80241f0:	b908      	cbnz	r0, 80241f6 <??SMP_Send_2octets_Packet_0>
 80241f2:	2064      	movs	r0, #100	; 0x64
 80241f4:	bd70      	pop	{r4, r5, r6, pc}

080241f6 <??SMP_Send_2octets_Packet_0>:
 80241f6:	6882      	ldr	r2, [r0, #8]
 80241f8:	2102      	movs	r1, #2
 80241fa:	80c1      	strh	r1, [r0, #6]
 80241fc:	7315      	strb	r5, [r2, #12]
 80241fe:	6881      	ldr	r1, [r0, #8]
 8024200:	734e      	strb	r6, [r1, #13]
 8024202:	4601      	mov	r1, r0
 8024204:	2006      	movs	r0, #6
 8024206:	f7fb fa53 	bl	801f6b0 <L2C_Send_Data>
 802420a:	2000      	movs	r0, #0
 802420c:	bd70      	pop	{r4, r5, r6, pc}

0802420e <SMP_New_PDU>:
 802420e:	8ac1      	ldrh	r1, [r0, #22]
 8024210:	2220      	movs	r2, #32
 8024212:	2000      	movs	r0, #0
 8024214:	f3c1 010b 	ubfx	r1, r1, #0, #12
 8024218:	f000 bd4b 	b.w	8024cb2 <ACL_PM_New>

0802421c <aci_gap_passkey_input>:
 802421c:	b510      	push	{r4, lr}
 802421e:	460c      	mov	r4, r1
 8024220:	2905      	cmp	r1, #5
 8024222:	d301      	bcc.n	8024228 <??aci_gap_passkey_input_0>
 8024224:	2092      	movs	r0, #146	; 0x92
 8024226:	bd10      	pop	{r4, pc}

08024228 <??aci_gap_passkey_input_0>:
 8024228:	f7fd fe50 	bl	8021ecc <SMP_Get_Remote_Device>
 802422c:	b908      	cbnz	r0, 8024232 <??aci_gap_passkey_input_1>
 802422e:	2002      	movs	r0, #2
 8024230:	bd10      	pop	{r4, pc}

08024232 <??aci_gap_passkey_input_1>:
 8024232:	7a41      	ldrb	r1, [r0, #9]
 8024234:	2902      	cmp	r1, #2
 8024236:	d109      	bne.n	802424c <??aci_gap_passkey_input_2>
 8024238:	f890 106e 	ldrb.w	r1, [r0, #110]	; 0x6e
 802423c:	06ca      	lsls	r2, r1, #27
 802423e:	d505      	bpl.n	802424c <??aci_gap_passkey_input_2>
 8024240:	f8df 17f0 	ldr.w	r1, [pc, #2032]	; 8024a34 <??DataTable17>
 8024244:	f891 20c0 	ldrb.w	r2, [r1, #192]	; 0xc0
 8024248:	2a02      	cmp	r2, #2
 802424a:	d001      	beq.n	8024250 <??aci_gap_passkey_input_3>

0802424c <??aci_gap_passkey_input_2>:
 802424c:	200c      	movs	r0, #12
 802424e:	bd10      	pop	{r4, pc}

08024250 <??aci_gap_passkey_input_3>:
 8024250:	4623      	mov	r3, r4
 8024252:	220e      	movs	r2, #14
 8024254:	2100      	movs	r1, #0
 8024256:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 802425a:	f7ff bfbd 	b.w	80241d8 <SMP_Send_2octets_Packet>

0802425e <aci_gap_numeric_comparison_value_confirm_yesno>:
 802425e:	b510      	push	{r4, lr}
 8024260:	460c      	mov	r4, r1
 8024262:	2902      	cmp	r1, #2
 8024264:	d301      	bcc.n	802426a <??aci_gap_numeric_comparison_value_confirm_yesn_0>
 8024266:	2092      	movs	r0, #146	; 0x92
 8024268:	bd10      	pop	{r4, pc}

0802426a <??aci_gap_numeric_comparison_value_confirm_yesn_0>:
 802426a:	f7fd fe2f 	bl	8021ecc <SMP_Get_Remote_Device>
 802426e:	b908      	cbnz	r0, 8024274 <??aci_gap_numeric_comparison_value_confirm_yesn_1>
 8024270:	2002      	movs	r0, #2
 8024272:	bd10      	pop	{r4, pc}

08024274 <??aci_gap_numeric_comparison_value_confirm_yesn_1>:
 8024274:	7a01      	ldrb	r1, [r0, #8]
 8024276:	29b9      	cmp	r1, #185	; 0xb9
 8024278:	bf04      	itt	eq
 802427a:	7a41      	ldrbeq	r1, [r0, #9]
 802427c:	2904      	cmpeq	r1, #4
 802427e:	d001      	beq.n	8024284 <??aci_gap_numeric_comparison_value_confirm_yesn_2>
 8024280:	200c      	movs	r0, #12
 8024282:	bd10      	pop	{r4, pc}

08024284 <??aci_gap_numeric_comparison_value_confirm_yesn_2>:
 8024284:	7b41      	ldrb	r1, [r0, #13]
 8024286:	2c00      	cmp	r4, #0
 8024288:	bf14      	ite	ne
 802428a:	f041 0140 	orrne.w	r1, r1, #64	; 0x40
 802428e:	f041 0180 	orreq.w	r1, r1, #128	; 0x80
 8024292:	7341      	strb	r1, [r0, #13]
 8024294:	2000      	movs	r0, #0
 8024296:	bd10      	pop	{r4, pc}

08024298 <SMP_sc_force_debug_key_usage>:
 8024298:	b510      	push	{r4, lr}
 802429a:	4604      	mov	r4, r0
 802429c:	2000      	movs	r0, #0
 802429e:	f000 f86f 	bl	8024380 <smp_sc_is_another_sc_pairing_ongoing>
 80242a2:	b108      	cbz	r0, 80242a8 <??SMP_sc_force_debug_key_usage_0>
 80242a4:	200c      	movs	r0, #12
 80242a6:	bd10      	pop	{r4, pc}

080242a8 <??SMP_sc_force_debug_key_usage_0>:
 80242a8:	2c01      	cmp	r4, #1
 80242aa:	d10c      	bne.n	80242c6 <??SMP_sc_force_debug_key_usage_1>
 80242ac:	f8df 0784 	ldr.w	r0, [pc, #1924]	; 8024a34 <??DataTable17>
 80242b0:	f890 10b4 	ldrb.w	r1, [r0, #180]	; 0xb4
 80242b4:	f041 0108 	orr.w	r1, r1, #8
 80242b8:	f880 10b4 	strb.w	r1, [r0, #180]	; 0xb4
 80242bc:	30e8      	adds	r0, #232	; 0xe8
 80242be:	f7fc fc5d 	bl	8020b7c <PKA_Get_Debug_Public_Key>
 80242c2:	f7fc fc55 	bl	8020b70 <PKA_Force_Debug_Private_Key>

080242c6 <??SMP_sc_force_debug_key_usage_1>:
 80242c6:	2000      	movs	r0, #0
 80242c8:	bd10      	pop	{r4, pc}

080242ca <SMP_Read_Local_P256key_Complete_Handler>:
 80242ca:	b510      	push	{r4, lr}
 80242cc:	f8df 4764 	ldr.w	r4, [pc, #1892]	; 8024a34 <??DataTable17>
 80242d0:	f894 20b4 	ldrb.w	r2, [r4, #180]	; 0xb4
 80242d4:	f002 027f 	and.w	r2, r2, #127	; 0x7f
 80242d8:	f884 20b4 	strb.w	r2, [r4, #180]	; 0xb4
 80242dc:	b950      	cbnz	r0, 80242f4 <??SMP_Read_Local_P256key_Complete_Handler_0>
 80242de:	0713      	lsls	r3, r2, #28
 80242e0:	d405      	bmi.n	80242ee <??SMP_Read_Local_P256key_Complete_Handler_1>
 80242e2:	2240      	movs	r2, #64	; 0x40
 80242e4:	f104 00e8 	add.w	r0, r4, #232	; 0xe8
 80242e8:	f00c fdfd 	bl	8030ee6 <__aeabi_memcpy>
 80242ec:	e004      	b.n	80242f8 <??SMP_Read_Local_P256key_Complete_Handler_2>

080242ee <??SMP_Read_Local_P256key_Complete_Handler_1>:
 80242ee:	f7fc fc3f 	bl	8020b70 <PKA_Force_Debug_Private_Key>
 80242f2:	e001      	b.n	80242f8 <??SMP_Read_Local_P256key_Complete_Handler_2>

080242f4 <??SMP_Read_Local_P256key_Complete_Handler_0>:
 80242f4:	f000 f88b 	bl	802440e <smp_sc_submit_ecc_pk_generation_request>

080242f8 <??SMP_Read_Local_P256key_Complete_Handler_2>:
 80242f8:	f3ef 8010 	mrs	r0, PRIMASK
 80242fc:	b672      	cpsid	i
 80242fe:	f894 1039 	ldrb.w	r1, [r4, #57]	; 0x39
 8024302:	f001 01fb 	and.w	r1, r1, #251	; 0xfb
 8024306:	f884 1039 	strb.w	r1, [r4, #57]	; 0x39
 802430a:	f380 8810 	msr	PRIMASK, r0
 802430e:	bd10      	pop	{r4, pc}

08024310 <SMP_Generate_DHkey_Complete_Handler>:
 8024310:	b538      	push	{r3, r4, r5, lr}
 8024312:	f8df 4720 	ldr.w	r4, [pc, #1824]	; 8024a34 <??DataTable17>
 8024316:	f104 05b4 	add.w	r5, r4, #180	; 0xb4
 802431a:	782a      	ldrb	r2, [r5, #0]
 802431c:	06d3      	lsls	r3, r2, #27
 802431e:	d52e      	bpl.n	802437e <??SMP_Generate_DHkey_Complete_Handler_0>
 8024320:	b9a0      	cbnz	r0, 802434c <??SMP_Generate_DHkey_Complete_Handler_1>
 8024322:	2220      	movs	r2, #32
 8024324:	f104 00c8 	add.w	r0, r4, #200	; 0xc8
 8024328:	f00c fddd 	bl	8030ee6 <__aeabi_memcpy>
 802432c:	782b      	ldrb	r3, [r5, #0]
 802432e:	f043 0320 	orr.w	r3, r3, #32
 8024332:	702b      	strb	r3, [r5, #0]
 8024334:	f3ef 8010 	mrs	r0, PRIMASK
 8024338:	b672      	cpsid	i
 802433a:	f894 1039 	ldrb.w	r1, [r4, #57]	; 0x39
 802433e:	f001 01fb 	and.w	r1, r1, #251	; 0xfb
 8024342:	f884 1039 	strb.w	r1, [r4, #57]	; 0x39
 8024346:	f380 8810 	msr	PRIMASK, r0
 802434a:	bd31      	pop	{r0, r4, r5, pc}

0802434c <??SMP_Generate_DHkey_Complete_Handler_1>:
 802434c:	f8df 06e8 	ldr.w	r0, [pc, #1768]	; 8024a38 <??DataTable17_1>
 8024350:	7d81      	ldrb	r1, [r0, #22]
 8024352:	b1a1      	cbz	r1, 802437e <??SMP_Generate_DHkey_Complete_Handler_0>
 8024354:	686c      	ldr	r4, [r5, #4]

08024356 <??SMP_Generate_DHkey_Complete_Handler_2>:
 8024356:	8ae0      	ldrh	r0, [r4, #22]
 8024358:	b118      	cbz	r0, 8024362 <??SMP_Generate_DHkey_Complete_Handler_3>
 802435a:	f894 006f 	ldrb.w	r0, [r4, #111]	; 0x6f
 802435e:	0682      	lsls	r2, r0, #26
 8024360:	d403      	bmi.n	802436a <??SMP_Generate_DHkey_Complete_Handler_4>

08024362 <??SMP_Generate_DHkey_Complete_Handler_3>:
 8024362:	3480      	adds	r4, #128	; 0x80
 8024364:	1e49      	subs	r1, r1, #1
 8024366:	d1f6      	bne.n	8024356 <??SMP_Generate_DHkey_Complete_Handler_2>
 8024368:	bd31      	pop	{r0, r4, r5, pc}

0802436a <??SMP_Generate_DHkey_Complete_Handler_4>:
 802436a:	2301      	movs	r3, #1
 802436c:	2200      	movs	r2, #0
 802436e:	210b      	movs	r1, #11
 8024370:	4620      	mov	r0, r4
 8024372:	f7ff fe32 	bl	8023fda <SMP_Send_Pairing_Failed>
 8024376:	7828      	ldrb	r0, [r5, #0]
 8024378:	f000 00cf 	and.w	r0, r0, #207	; 0xcf
 802437c:	7028      	strb	r0, [r5, #0]

0802437e <??SMP_Generate_DHkey_Complete_Handler_0>:
 802437e:	bd31      	pop	{r0, r4, r5, pc}

08024380 <smp_sc_is_another_sc_pairing_ongoing>:
 8024380:	f8df 16b4 	ldr.w	r1, [pc, #1716]	; 8024a38 <??DataTable17_1>
 8024384:	7d89      	ldrb	r1, [r1, #22]
 8024386:	4602      	mov	r2, r0
 8024388:	2000      	movs	r0, #0
 802438a:	2900      	cmp	r1, #0
 802438c:	d100      	bne.n	8024390 <??smp_sc_is_another_sc_pairing_ongoing_0>
 802438e:	4770      	bx	lr

08024390 <??smp_sc_is_another_sc_pairing_ongoing_0>:
 8024390:	b430      	push	{r4, r5}
 8024392:	f8df 36a0 	ldr.w	r3, [pc, #1696]	; 8024a34 <??DataTable17>
 8024396:	f8d3 30b8 	ldr.w	r3, [r3, #184]	; 0xb8

0802439a <??smp_sc_is_another_sc_pairing_ongoing_1>:
 802439a:	f893 406e 	ldrb.w	r4, [r3, #110]	; 0x6e
 802439e:	07a5      	lsls	r5, r4, #30
 80243a0:	d502      	bpl.n	80243a8 <??smp_sc_is_another_sc_pairing_ongoing_2>
 80243a2:	8adc      	ldrh	r4, [r3, #22]
 80243a4:	4294      	cmp	r4, r2
 80243a6:	d104      	bne.n	80243b2 <??smp_sc_is_another_sc_pairing_ongoing_3>

080243a8 <??smp_sc_is_another_sc_pairing_ongoing_2>:
 80243a8:	3380      	adds	r3, #128	; 0x80
 80243aa:	1e49      	subs	r1, r1, #1
 80243ac:	d1f5      	bne.n	802439a <??smp_sc_is_another_sc_pairing_ongoing_1>
 80243ae:	bc30      	pop	{r4, r5}
 80243b0:	4770      	bx	lr

080243b2 <??smp_sc_is_another_sc_pairing_ongoing_3>:
 80243b2:	2001      	movs	r0, #1
 80243b4:	bc30      	pop	{r4, r5}
 80243b6:	4770      	bx	lr

080243b8 <smp_sc_continue_on_exclusive_sc_pairing>:
 80243b8:	f8df 167c 	ldr.w	r1, [pc, #1660]	; 8024a38 <??DataTable17_1>
 80243bc:	b470      	push	{r4, r5, r6}
 80243be:	7d89      	ldrb	r1, [r1, #22]
 80243c0:	8ac2      	ldrh	r2, [r0, #22]
 80243c2:	f8df 3678 	ldr.w	r3, [pc, #1656]	; 8024a3c <??DataTable17_2>
 80243c6:	b151      	cbz	r1, 80243de <??smp_sc_continue_on_exclusive_sc_pairing_0>
 80243c8:	685c      	ldr	r4, [r3, #4]

080243ca <??smp_sc_continue_on_exclusive_sc_pairing_1>:
 80243ca:	f894 506e 	ldrb.w	r5, [r4, #110]	; 0x6e
 80243ce:	07ae      	lsls	r6, r5, #30
 80243d0:	d502      	bpl.n	80243d8 <??smp_sc_continue_on_exclusive_sc_pairing_2>
 80243d2:	8ae5      	ldrh	r5, [r4, #22]
 80243d4:	4295      	cmp	r5, r2
 80243d6:	d10f      	bne.n	80243f8 <??smp_sc_continue_on_exclusive_sc_pairing_3>

080243d8 <??smp_sc_continue_on_exclusive_sc_pairing_2>:
 80243d8:	3480      	adds	r4, #128	; 0x80
 80243da:	1e49      	subs	r1, r1, #1
 80243dc:	d1f5      	bne.n	80243ca <??smp_sc_continue_on_exclusive_sc_pairing_1>

080243de <??smp_sc_continue_on_exclusive_sc_pairing_0>:
 80243de:	f890 106e 	ldrb.w	r1, [r0, #110]	; 0x6e
 80243e2:	f041 0102 	orr.w	r1, r1, #2
 80243e6:	f880 106e 	strb.w	r1, [r0, #110]	; 0x6e
 80243ea:	7818      	ldrb	r0, [r3, #0]
 80243ec:	f040 0004 	orr.w	r0, r0, #4
 80243f0:	7018      	strb	r0, [r3, #0]
 80243f2:	2000      	movs	r0, #0
 80243f4:	bc70      	pop	{r4, r5, r6}
 80243f6:	4770      	bx	lr

080243f8 <??smp_sc_continue_on_exclusive_sc_pairing_3>:
 80243f8:	2008      	movs	r0, #8
 80243fa:	bc70      	pop	{r4, r5, r6}
 80243fc:	4770      	bx	lr

080243fe <smp_sc_is_debug_key_usage_forced>:
 80243fe:	f8df 0634 	ldr.w	r0, [pc, #1588]	; 8024a34 <??DataTable17>
 8024402:	f890 00b4 	ldrb.w	r0, [r0, #180]	; 0xb4
 8024406:	08c0      	lsrs	r0, r0, #3
 8024408:	f000 0001 	and.w	r0, r0, #1
 802440c:	4770      	bx	lr

0802440e <smp_sc_submit_ecc_pk_generation_request>:
 802440e:	f8df 0624 	ldr.w	r0, [pc, #1572]	; 8024a34 <??DataTable17>
 8024412:	f890 10b4 	ldrb.w	r1, [r0, #180]	; 0xb4
 8024416:	060a      	lsls	r2, r1, #24
 8024418:	bf5c      	itt	pl
 802441a:	f041 0140 	orrpl.w	r1, r1, #64	; 0x40
 802441e:	f880 10b4 	strbpl.w	r1, [r0, #180]	; 0xb4
 8024422:	4770      	bx	lr

08024424 <smp_sc_check_for_ecc_pk_generation>:
 8024424:	b510      	push	{r4, lr}
 8024426:	f8df 460c 	ldr.w	r4, [pc, #1548]	; 8024a34 <??DataTable17>
 802442a:	f894 00b4 	ldrb.w	r0, [r4, #180]	; 0xb4
 802442e:	f000 00d0 	and.w	r0, r0, #208	; 0xd0
 8024432:	2840      	cmp	r0, #64	; 0x40
 8024434:	d10a      	bne.n	802444c <??smp_sc_check_for_ecc_pk_generation_0>
 8024436:	f7fc fad9 	bl	80209ec <hci_le_read_local_p256_public_key>
 802443a:	b938      	cbnz	r0, 802444c <??smp_sc_check_for_ecc_pk_generation_0>
 802443c:	f894 00b4 	ldrb.w	r0, [r4, #180]	; 0xb4
 8024440:	f000 00bf 	and.w	r0, r0, #191	; 0xbf
 8024444:	f040 0080 	orr.w	r0, r0, #128	; 0x80
 8024448:	f884 00b4 	strb.w	r0, [r4, #180]	; 0xb4

0802444c <??smp_sc_check_for_ecc_pk_generation_0>:
 802444c:	bd10      	pop	{r4, pc}

0802444e <smp_sc_pairing_public_key_send>:
 802444e:	b570      	push	{r4, r5, r6, lr}
 8024450:	4605      	mov	r5, r0
 8024452:	2691      	movs	r6, #145	; 0x91
 8024454:	f7ff fedb 	bl	802420e <SMP_New_PDU>
 8024458:	0004      	movs	r4, r0
 802445a:	d029      	beq.n	80244b0 <??smp_sc_pairing_public_key_send_0>
 802445c:	68a0      	ldr	r0, [r4, #8]
 802445e:	2245      	movs	r2, #69	; 0x45
 8024460:	2100      	movs	r1, #0
 8024462:	f000 fc78 	bl	8024d56 <ACL_PM_Resize>
 8024466:	0006      	movs	r6, r0
 8024468:	d110      	bne.n	802448c <??smp_sc_pairing_public_key_send_1>
 802446a:	2041      	movs	r0, #65	; 0x41
 802446c:	80e0      	strh	r0, [r4, #6]
 802446e:	68a0      	ldr	r0, [r4, #8]
 8024470:	210c      	movs	r1, #12
 8024472:	f8df 35cc 	ldr.w	r3, [pc, #1484]	; 8024a40 <??DataTable17_3>
 8024476:	7301      	strb	r1, [r0, #12]
 8024478:	2240      	movs	r2, #64	; 0x40
 802447a:	2105      	movs	r1, #5
 802447c:	4620      	mov	r0, r4
 802447e:	f000 fcbc 	bl	8024dfa <ACL_PM_Set_Data>
 8024482:	4629      	mov	r1, r5
 8024484:	4620      	mov	r0, r4
 8024486:	f7fe fcdd 	bl	8022e44 <SMP_Send_Packet>
 802448a:	4606      	mov	r6, r0

0802448c <??smp_sc_pairing_public_key_send_1>:
 802448c:	0030      	movs	r0, r6
 802448e:	d111      	bne.n	80244b4 <??smp_sc_pairing_public_key_send_2>
 8024490:	f895 006e 	ldrb.w	r0, [r5, #110]	; 0x6e
 8024494:	f8df 159c 	ldr.w	r1, [pc, #1436]	; 8024a34 <??DataTable17>
 8024498:	f040 0040 	orr.w	r0, r0, #64	; 0x40
 802449c:	f885 006e 	strb.w	r0, [r5, #110]	; 0x6e
 80244a0:	f891 20b4 	ldrb.w	r2, [r1, #180]	; 0xb4
 80244a4:	0711      	lsls	r1, r2, #28
 80244a6:	bf48      	it	mi
 80244a8:	f040 0020 	orrmi.w	r0, r0, #32
 80244ac:	f885 006e 	strb.w	r0, [r5, #110]	; 0x6e

080244b0 <??smp_sc_pairing_public_key_send_0>:
 80244b0:	4630      	mov	r0, r6
 80244b2:	bd70      	pop	{r4, r5, r6, pc}

080244b4 <??smp_sc_pairing_public_key_send_2>:
 80244b4:	2100      	movs	r1, #0
 80244b6:	4620      	mov	r0, r4
 80244b8:	f000 fc13 	bl	8024ce2 <ACL_PM_Release>
 80244bc:	e7f8      	b.n	80244b0 <??smp_sc_pairing_public_key_send_0>

080244be <smp_sc_pairing_public_key_receive>:
 80244be:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80244c0:	460d      	mov	r5, r1
 80244c2:	f8df 4570 	ldr.w	r4, [pc, #1392]	; 8024a34 <??DataTable17>
 80244c6:	f894 10b4 	ldrb.w	r1, [r4, #180]	; 0xb4
 80244ca:	060a      	lsls	r2, r1, #24
 80244cc:	bf48      	it	mi
 80244ce:	273a      	movmi	r7, #58	; 0x3a
 80244d0:	d449      	bmi.n	8024566 <??smp_sc_pairing_public_key_receive_0>
 80244d2:	f504 7694 	add.w	r6, r4, #296	; 0x128
 80244d6:	4633      	mov	r3, r6
 80244d8:	2240      	movs	r2, #64	; 0x40
 80244da:	2105      	movs	r1, #5
 80244dc:	f000 fc83 	bl	8024de6 <ACL_PM_Get_Data>
 80244e0:	f894 00b4 	ldrb.w	r0, [r4, #180]	; 0xb4
 80244e4:	f010 0f90 	tst.w	r0, #144	; 0x90
 80244e8:	bf08      	it	eq
 80244ea:	f010 0f30 	tsteq.w	r0, #48	; 0x30
 80244ee:	d10b      	bne.n	8024508 <??smp_sc_pairing_public_key_receive_1>
 80244f0:	4630      	mov	r0, r6
 80244f2:	f7fc faa1 	bl	8020a38 <hci_le_generate_dhkey>
 80244f6:	0007      	movs	r7, r0
 80244f8:	d107      	bne.n	802450a <??smp_sc_pairing_public_key_receive_2>
 80244fa:	f894 00b4 	ldrb.w	r0, [r4, #180]	; 0xb4
 80244fe:	f040 0010 	orr.w	r0, r0, #16
 8024502:	f884 00b4 	strb.w	r0, [r4, #180]	; 0xb4
 8024506:	e000      	b.n	802450a <??smp_sc_pairing_public_key_receive_2>

08024508 <??smp_sc_pairing_public_key_receive_1>:
 8024508:	2738      	movs	r7, #56	; 0x38

0802450a <??smp_sc_pairing_public_key_receive_2>:
 802450a:	0038      	movs	r0, r7
 802450c:	d11c      	bne.n	8024548 <??smp_sc_pairing_public_key_receive_3>
 802450e:	f815 0f6e 	ldrb.w	r0, [r5, #110]!
 8024512:	7869      	ldrb	r1, [r5, #1]
 8024514:	f040 0080 	orr.w	r0, r0, #128	; 0x80
 8024518:	7028      	strb	r0, [r5, #0]
 802451a:	f041 0120 	orr.w	r1, r1, #32
 802451e:	7069      	strb	r1, [r5, #1]
 8024520:	4630      	mov	r0, r6
 8024522:	f7fc fb2f 	bl	8020b84 <PKA_Is_Debug_Public_Key>
 8024526:	b118      	cbz	r0, 8024530 <??smp_sc_pairing_public_key_receive_4>
 8024528:	7828      	ldrb	r0, [r5, #0]
 802452a:	f040 0020 	orr.w	r0, r0, #32
 802452e:	7028      	strb	r0, [r5, #0]

08024530 <??smp_sc_pairing_public_key_receive_4>:
 8024530:	f3ef 8010 	mrs	r0, PRIMASK
 8024534:	b672      	cpsid	i
 8024536:	f894 1039 	ldrb.w	r1, [r4, #57]	; 0x39
 802453a:	f001 01fb 	and.w	r1, r1, #251	; 0xfb
 802453e:	f884 1039 	strb.w	r1, [r4, #57]	; 0x39
 8024542:	f380 8810 	msr	PRIMASK, r0
 8024546:	e00e      	b.n	8024566 <??smp_sc_pairing_public_key_receive_0>

08024548 <??smp_sc_pairing_public_key_receive_3>:
 8024548:	2f12      	cmp	r7, #18
 802454a:	d103      	bne.n	8024554 <??smp_sc_pairing_public_key_receive_5>
 802454c:	2301      	movs	r3, #1
 802454e:	2200      	movs	r2, #0
 8024550:	210b      	movs	r1, #11
 8024552:	e004      	b.n	802455e <??smp_sc_pairing_public_key_receive_6>

08024554 <??smp_sc_pairing_public_key_receive_5>:
 8024554:	2f1f      	cmp	r7, #31
 8024556:	d106      	bne.n	8024566 <??smp_sc_pairing_public_key_receive_0>
 8024558:	2301      	movs	r3, #1
 802455a:	2200      	movs	r2, #0
 802455c:	2108      	movs	r1, #8

0802455e <??smp_sc_pairing_public_key_receive_6>:
 802455e:	4628      	mov	r0, r5
 8024560:	f7ff fd3b 	bl	8023fda <SMP_Send_Pairing_Failed>
 8024564:	2700      	movs	r7, #0

08024566 <??smp_sc_pairing_public_key_receive_0>:
 8024566:	4638      	mov	r0, r7
 8024568:	bdf2      	pop	{r1, r4, r5, r6, r7, pc}

0802456a <smp_sc_init_local_oob_random>:
 802456a:	2110      	movs	r1, #16
 802456c:	f8df 04d4 	ldr.w	r0, [pc, #1236]	; 8024a44 <??DataTable17_4>
 8024570:	f000 bacc 	b.w	8024b0c <HAL_Generate_Random_Bytes_To>

08024574 <smp_sc_generate_new_local_oob_data>:
 8024574:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8024576:	f8df 54bc 	ldr.w	r5, [pc, #1212]	; 8024a34 <??DataTable17>
 802457a:	f105 06e8 	add.w	r6, r5, #232	; 0xe8
 802457e:	2140      	movs	r1, #64	; 0x40
 8024580:	4630      	mov	r0, r6
 8024582:	2400      	movs	r4, #0
 8024584:	f000 fa66 	bl	8024a54 <Is_Empty>
 8024588:	b928      	cbnz	r0, 8024596 <??smp_sc_generate_new_local_oob_data_0>
 802458a:	2120      	movs	r1, #32
 802458c:	f105 0040 	add.w	r0, r5, #64	; 0x40
 8024590:	f000 fa60 	bl	8024a54 <Is_Empty>
 8024594:	b108      	cbz	r0, 802459a <??smp_sc_generate_new_local_oob_data_1>

08024596 <??smp_sc_generate_new_local_oob_data_0>:
 8024596:	2406      	movs	r4, #6
 8024598:	e00e      	b.n	80245b8 <??smp_sc_generate_new_local_oob_data_2>

0802459a <??smp_sc_generate_new_local_oob_data_1>:
 802459a:	f105 0794 	add.w	r7, r5, #148	; 0x94
 802459e:	2110      	movs	r1, #16
 80245a0:	4638      	mov	r0, r7
 80245a2:	f000 fab3 	bl	8024b0c <HAL_Generate_Random_Bytes_To>
 80245a6:	f105 00a4 	add.w	r0, r5, #164	; 0xa4
 80245aa:	9000      	str	r0, [sp, #0]
 80245ac:	2300      	movs	r3, #0
 80245ae:	463a      	mov	r2, r7
 80245b0:	4631      	mov	r1, r6
 80245b2:	4630      	mov	r0, r6
 80245b4:	f7fd f838 	bl	8021628 <SMA_SC_Gen_f4_Confirm>

080245b8 <??smp_sc_generate_new_local_oob_data_2>:
 80245b8:	4620      	mov	r0, r4
 80245ba:	bdf2      	pop	{r1, r4, r5, r6, r7, pc}

080245bc <smp_sc_pairing_oob_confirm_receive_verify>:
 80245bc:	b578      	push	{r3, r4, r5, r6, lr}
 80245be:	b087      	sub	sp, #28
 80245c0:	4605      	mov	r5, r0
 80245c2:	2400      	movs	r4, #0
 80245c4:	f7ff fd1d 	bl	8024002 <SMP_Oob_Check_Remote_Data_Presence>
 80245c8:	2801      	cmp	r0, #1
 80245ca:	d122      	bne.n	8024612 <??smp_sc_pairing_oob_confirm_receive_verify_0>
 80245cc:	ab02      	add	r3, sp, #8
 80245ce:	2201      	movs	r2, #1
 80245d0:	2100      	movs	r1, #0
 80245d2:	4628      	mov	r0, r5
 80245d4:	f7ff fd2d 	bl	8024032 <SMP_Oob_Get_Remote_Data_Reference>
 80245d8:	ab01      	add	r3, sp, #4
 80245da:	2202      	movs	r2, #2
 80245dc:	2100      	movs	r1, #0
 80245de:	4628      	mov	r0, r5
 80245e0:	f7ff fd27 	bl	8024032 <SMP_Oob_Get_Remote_Data_Reference>
 80245e4:	a803      	add	r0, sp, #12
 80245e6:	9a02      	ldr	r2, [sp, #8]
 80245e8:	f8df 145c 	ldr.w	r1, [pc, #1116]	; 8024a48 <??DataTable17_5>
 80245ec:	9000      	str	r0, [sp, #0]
 80245ee:	2300      	movs	r3, #0
 80245f0:	4608      	mov	r0, r1
 80245f2:	f7fd f819 	bl	8021628 <SMA_SC_Gen_f4_Confirm>
 80245f6:	9801      	ldr	r0, [sp, #4]
 80245f8:	2210      	movs	r2, #16
 80245fa:	a903      	add	r1, sp, #12
 80245fc:	f00c fca0 	bl	8030f40 <memcmp>
 8024600:	b138      	cbz	r0, 8024612 <??smp_sc_pairing_oob_confirm_receive_verify_0>
 8024602:	2301      	movs	r3, #1
 8024604:	2200      	movs	r2, #0
 8024606:	2104      	movs	r1, #4
 8024608:	4628      	mov	r0, r5
 802460a:	f7ff fce6 	bl	8023fda <SMP_Send_Pairing_Failed>
 802460e:	4604      	mov	r4, r0
 8024610:	e013      	b.n	802463a <??smp_sc_pairing_oob_confirm_receive_verify_1>

08024612 <??smp_sc_pairing_oob_confirm_receive_verify_0>:
 8024612:	7aa8      	ldrb	r0, [r5, #10]
 8024614:	f000 0003 	and.w	r0, r0, #3
 8024618:	2801      	cmp	r0, #1
 802461a:	d107      	bne.n	802462c <??smp_sc_pairing_oob_confirm_receive_verify_2>
 802461c:	f8df 0424 	ldr.w	r0, [pc, #1060]	; 8024a44 <??DataTable17_4>
 8024620:	2100      	movs	r1, #0
 8024622:	2200      	movs	r2, #0
 8024624:	2300      	movs	r3, #0
 8024626:	2600      	movs	r6, #0
 8024628:	e880 004e 	stmia.w	r0, {r1, r2, r3, r6}

0802462c <??smp_sc_pairing_oob_confirm_receive_verify_2>:
 802462c:	f895 106e 	ldrb.w	r1, [r5, #110]	; 0x6e
 8024630:	07c8      	lsls	r0, r1, #31
 8024632:	bf54      	ite	pl
 8024634:	20a9      	movpl	r0, #169	; 0xa9
 8024636:	20b6      	movmi	r0, #182	; 0xb6
 8024638:	7228      	strb	r0, [r5, #8]

0802463a <??smp_sc_pairing_oob_confirm_receive_verify_1>:
 802463a:	4620      	mov	r0, r4
 802463c:	b008      	add	sp, #32
 802463e:	bd70      	pop	{r4, r5, r6, pc}

08024640 <smp____SC_Phase_2AS2__Set_Addresses>:
 8024640:	b538      	push	{r3, r4, r5, lr}
 8024642:	461d      	mov	r5, r3
 8024644:	4604      	mov	r4, r0
 8024646:	f894 3071 	ldrb.w	r3, [r4, #113]	; 0x71
 802464a:	4610      	mov	r0, r2
 802464c:	2206      	movs	r2, #6
 802464e:	700b      	strb	r3, [r1, #0]
 8024650:	f104 0172 	add.w	r1, r4, #114	; 0x72
 8024654:	f00c fc47 	bl	8030ee6 <__aeabi_memcpy>
 8024658:	7be2      	ldrb	r2, [r4, #15]
 802465a:	f104 0110 	add.w	r1, r4, #16
 802465e:	f002 0201 	and.w	r2, r2, #1
 8024662:	702a      	strb	r2, [r5, #0]
 8024664:	9804      	ldr	r0, [sp, #16]
 8024666:	2206      	movs	r2, #6
 8024668:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 802466c:	f00c bc3b 	b.w	8030ee6 <__aeabi_memcpy>

08024670 <smp____SC_Phase_2AS2_Generate_DHKeyCheck>:
 8024670:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8024674:	460f      	mov	r7, r1
 8024676:	4604      	mov	r4, r0
 8024678:	4615      	mov	r5, r2
 802467a:	2100      	movs	r1, #0
 802467c:	b090      	sub	sp, #64	; 0x40
 802467e:	2200      	movs	r2, #0
 8024680:	a80c      	add	r0, sp, #48	; 0x30
 8024682:	2300      	movs	r3, #0
 8024684:	468c      	mov	ip, r1
 8024686:	f8ad 2018 	strh.w	r2, [sp, #24]
 802468a:	e880 100e 	stmia.w	r0, {r1, r2, r3, ip}
 802468e:	7a60      	ldrb	r0, [r4, #9]
 8024690:	2600      	movs	r6, #0
 8024692:	f8df 83a0 	ldr.w	r8, [pc, #928]	; 8024a34 <??DataTable17>
 8024696:	2802      	cmp	r0, #2
 8024698:	d10b      	bne.n	80246b2 <??smp____SC_Phase_2AS2_Generate_DHKeyCheck_0>
 802469a:	f8d8 008c 	ldr.w	r0, [r8, #140]	; 0x8c
 802469e:	4601      	mov	r1, r0
 80246a0:	f88d 1030 	strb.w	r1, [sp, #48]	; 0x30
 80246a4:	a90c      	add	r1, sp, #48	; 0x30
 80246a6:	0a02      	lsrs	r2, r0, #8
 80246a8:	704a      	strb	r2, [r1, #1]
 80246aa:	0c03      	lsrs	r3, r0, #16
 80246ac:	708b      	strb	r3, [r1, #2]
 80246ae:	0e00      	lsrs	r0, r0, #24
 80246b0:	70c8      	strb	r0, [r1, #3]

080246b2 <??smp____SC_Phase_2AS2_Generate_DHKeyCheck_0>:
 80246b2:	f508 70b4 	add.w	r0, r8, #360	; 0x168
 80246b6:	2f01      	cmp	r7, #1
 80246b8:	d127      	bne.n	802470a <??smp____SC_Phase_2AS2_Generate_DHKeyCheck_1>
 80246ba:	f898 10c0 	ldrb.w	r1, [r8, #192]	; 0xc0
 80246be:	7041      	strb	r1, [r0, #1]
 80246c0:	7aa2      	ldrb	r2, [r4, #10]
 80246c2:	f002 0201 	and.w	r2, r2, #1
 80246c6:	7082      	strb	r2, [r0, #2]
 80246c8:	7a60      	ldrb	r0, [r4, #9]
 80246ca:	2803      	cmp	r0, #3
 80246cc:	d10e      	bne.n	80246ec <??smp____SC_Phase_2AS2_Generate_DHKeyCheck_2>
 80246ce:	4620      	mov	r0, r4
 80246d0:	f7ff fc97 	bl	8024002 <SMP_Oob_Check_Remote_Data_Presence>
 80246d4:	b150      	cbz	r0, 80246ec <??smp____SC_Phase_2AS2_Generate_DHKeyCheck_2>
 80246d6:	ab07      	add	r3, sp, #28
 80246d8:	2201      	movs	r2, #1
 80246da:	2100      	movs	r1, #0
 80246dc:	4620      	mov	r0, r4
 80246de:	f7ff fca8 	bl	8024032 <SMP_Oob_Get_Remote_Data_Reference>
 80246e2:	9907      	ldr	r1, [sp, #28]
 80246e4:	2210      	movs	r2, #16
 80246e6:	a80c      	add	r0, sp, #48	; 0x30
 80246e8:	f00c fbfd 	bl	8030ee6 <__aeabi_memcpy>

080246ec <??smp____SC_Phase_2AS2_Generate_DHKeyCheck_2>:
 80246ec:	f894 006e 	ldrb.w	r0, [r4, #110]	; 0x6e
 80246f0:	07c1      	lsls	r1, r0, #31
 80246f2:	d505      	bpl.n	8024700 <??smp____SC_Phase_2AS2_Generate_DHKeyCheck_3>

080246f4 <??smp____SC_Phase_2AS2_Generate_DHKeyCheck_4>:
 80246f4:	f894 006e 	ldrb.w	r0, [r4, #110]	; 0x6e
 80246f8:	07c1      	lsls	r1, r0, #31
 80246fa:	d519      	bpl.n	8024730 <??smp____SC_Phase_2AS2_Generate_DHKeyCheck_5>
 80246fc:	0038      	movs	r0, r7
 80246fe:	d11b      	bne.n	8024738 <??smp____SC_Phase_2AS2_Generate_DHKeyCheck_6>

08024700 <??smp____SC_Phase_2AS2_Generate_DHKeyCheck_3>:
 8024700:	f104 094e 	add.w	r9, r4, #78	; 0x4e
 8024704:	f104 0a5e 	add.w	sl, r4, #94	; 0x5e
 8024708:	e01c      	b.n	8024744 <??smp____SC_Phase_2AS2_Generate_DHKeyCheck_7>

0802470a <??smp____SC_Phase_2AS2_Generate_DHKeyCheck_1>:
 802470a:	7ae1      	ldrb	r1, [r4, #11]
 802470c:	7802      	ldrb	r2, [r0, #0]
 802470e:	7041      	strb	r1, [r0, #1]
 8024710:	7aa1      	ldrb	r1, [r4, #10]
 8024712:	70c2      	strb	r2, [r0, #3]
 8024714:	f3c1 0140 	ubfx	r1, r1, #1, #1
 8024718:	7081      	strb	r1, [r0, #2]
 802471a:	7a60      	ldrb	r0, [r4, #9]
 802471c:	2803      	cmp	r0, #3
 802471e:	d1e9      	bne.n	80246f4 <??smp____SC_Phase_2AS2_Generate_DHKeyCheck_4>
 8024720:	f108 0094 	add.w	r0, r8, #148	; 0x94
 8024724:	e890 500c 	ldmia.w	r0, {r2, r3, ip, lr}
 8024728:	a90c      	add	r1, sp, #48	; 0x30
 802472a:	e881 500c 	stmia.w	r1, {r2, r3, ip, lr}
 802472e:	e7e1      	b.n	80246f4 <??smp____SC_Phase_2AS2_Generate_DHKeyCheck_4>

08024730 <??smp____SC_Phase_2AS2_Generate_DHKeyCheck_5>:
 8024730:	0038      	movs	r0, r7
 8024732:	d003      	beq.n	802473c <??smp____SC_Phase_2AS2_Generate_DHKeyCheck_8>

08024734 <??smp____SC_Phase_2AS2_Generate_DHKeyCheck_9>:
 8024734:	2697      	movs	r6, #151	; 0x97
 8024736:	e02e      	b.n	8024796 <??smp____SC_Phase_2AS2_Generate_DHKeyCheck_10>

08024738 <??smp____SC_Phase_2AS2_Generate_DHKeyCheck_6>:
 8024738:	2f01      	cmp	r7, #1
 802473a:	d1fb      	bne.n	8024734 <??smp____SC_Phase_2AS2_Generate_DHKeyCheck_9>

0802473c <??smp____SC_Phase_2AS2_Generate_DHKeyCheck_8>:
 802473c:	f104 095e 	add.w	r9, r4, #94	; 0x5e
 8024740:	f104 0a4e 	add.w	sl, r4, #78	; 0x4e

08024744 <??smp____SC_Phase_2AS2_Generate_DHKeyCheck_7>:
 8024744:	2f01      	cmp	r7, #1
 8024746:	d106      	bne.n	8024756 <??smp____SC_Phase_2AS2_Generate_DHKeyCheck_11>
 8024748:	a808      	add	r0, sp, #32
 802474a:	9000      	str	r0, [sp, #0]
 802474c:	ab06      	add	r3, sp, #24
 802474e:	aa0a      	add	r2, sp, #40	; 0x28
 8024750:	f10d 0119 	add.w	r1, sp, #25
 8024754:	e007      	b.n	8024766 <??smp____SC_Phase_2AS2_Generate_DHKeyCheck_12>

08024756 <??smp____SC_Phase_2AS2_Generate_DHKeyCheck_11>:
 8024756:	2f00      	cmp	r7, #0
 8024758:	d1ec      	bne.n	8024734 <??smp____SC_Phase_2AS2_Generate_DHKeyCheck_9>
 802475a:	a80a      	add	r0, sp, #40	; 0x28
 802475c:	9000      	str	r0, [sp, #0]
 802475e:	f10d 0319 	add.w	r3, sp, #25
 8024762:	aa08      	add	r2, sp, #32
 8024764:	a906      	add	r1, sp, #24

08024766 <??smp____SC_Phase_2AS2_Generate_DHKeyCheck_12>:
 8024766:	4620      	mov	r0, r4
 8024768:	f7ff ff6a 	bl	8024640 <smp____SC_Phase_2AS2__Set_Addresses>
 802476c:	a808      	add	r0, sp, #32
 802476e:	f89d 1018 	ldrb.w	r1, [sp, #24]
 8024772:	9004      	str	r0, [sp, #16]
 8024774:	f89d 0019 	ldrb.w	r0, [sp, #25]
 8024778:	9103      	str	r1, [sp, #12]
 802477a:	aa0a      	add	r2, sp, #40	; 0x28
 802477c:	f208 1169 	addw	r1, r8, #361	; 0x169
 8024780:	9202      	str	r2, [sp, #8]
 8024782:	9001      	str	r0, [sp, #4]
 8024784:	9100      	str	r1, [sp, #0]
 8024786:	9505      	str	r5, [sp, #20]
 8024788:	ab0c      	add	r3, sp, #48	; 0x30
 802478a:	4652      	mov	r2, sl
 802478c:	4649      	mov	r1, r9
 802478e:	f108 00c8 	add.w	r0, r8, #200	; 0xc8
 8024792:	f7fc ffcf 	bl	8021734 <SMA_SC_Gen_f6_Check_Val>

08024796 <??smp____SC_Phase_2AS2_Generate_DHKeyCheck_10>:
 8024796:	4630      	mov	r0, r6
 8024798:	b010      	add	sp, #64	; 0x40
 802479a:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}

0802479e <smp____SC_Phase_2AS2_DHKeyCheck_Send>:
 802479e:	b570      	push	{r4, r5, r6, lr}
 80247a0:	4605      	mov	r5, r0
 80247a2:	f7ff fd34 	bl	802420e <SMP_New_PDU>
 80247a6:	0004      	movs	r4, r0
 80247a8:	d101      	bne.n	80247ae <??smp____SC_Phase_2AS2_DHKeyCheck_Send_0>
 80247aa:	2064      	movs	r0, #100	; 0x64
 80247ac:	bd70      	pop	{r4, r5, r6, pc}

080247ae <??smp____SC_Phase_2AS2_DHKeyCheck_Send_0>:
 80247ae:	2011      	movs	r0, #17
 80247b0:	80e0      	strh	r0, [r4, #6]
 80247b2:	68a0      	ldr	r0, [r4, #8]
 80247b4:	210d      	movs	r1, #13
 80247b6:	4ba5      	ldr	r3, [pc, #660]	; (8024a4c <??DataTable17_6>)
 80247b8:	7301      	strb	r1, [r0, #12]
 80247ba:	2210      	movs	r2, #16
 80247bc:	2105      	movs	r1, #5
 80247be:	4620      	mov	r0, r4
 80247c0:	f000 fb1b 	bl	8024dfa <ACL_PM_Set_Data>
 80247c4:	f895 006e 	ldrb.w	r0, [r5, #110]	; 0x6e
 80247c8:	07c1      	lsls	r1, r0, #31
 80247ca:	bf54      	ite	pl
 80247cc:	26ab      	movpl	r6, #171	; 0xab
 80247ce:	26bc      	movmi	r6, #188	; 0xbc
 80247d0:	4629      	mov	r1, r5
 80247d2:	4620      	mov	r0, r4
 80247d4:	f7fe fb36 	bl	8022e44 <SMP_Send_Packet>
 80247d8:	b900      	cbnz	r0, 80247dc <??smp____SC_Phase_2AS2_DHKeyCheck_Send_1>
 80247da:	722e      	strb	r6, [r5, #8]

080247dc <??smp____SC_Phase_2AS2_DHKeyCheck_Send_1>:
 80247dc:	2000      	movs	r0, #0
 80247de:	bd70      	pop	{r4, r5, r6, pc}

080247e0 <smp_sc_phase_2as2_dhkey_check_receive>:
 80247e0:	b570      	push	{r4, r5, r6, lr}
 80247e2:	b088      	sub	sp, #32
 80247e4:	460c      	mov	r4, r1
 80247e6:	ab04      	add	r3, sp, #16
 80247e8:	2210      	movs	r2, #16
 80247ea:	2105      	movs	r1, #5
 80247ec:	f000 fafb 	bl	8024de6 <ACL_PM_Get_Data>
 80247f0:	466a      	mov	r2, sp
 80247f2:	2100      	movs	r1, #0
 80247f4:	4620      	mov	r0, r4
 80247f6:	f7ff ff3b 	bl	8024670 <smp____SC_Phase_2AS2_Generate_DHKeyCheck>
 80247fa:	0005      	movs	r5, r0
 80247fc:	d11e      	bne.n	802483c <??smp_sc_phase_2as2_dhkey_check_receive_0>
 80247fe:	2210      	movs	r2, #16
 8024800:	4669      	mov	r1, sp
 8024802:	a804      	add	r0, sp, #16
 8024804:	f00c fb9c 	bl	8030f40 <memcmp>
 8024808:	b9c0      	cbnz	r0, 802483c <??smp_sc_phase_2as2_dhkey_check_receive_0>
 802480a:	f104 066e 	add.w	r6, r4, #110	; 0x6e
 802480e:	7830      	ldrb	r0, [r6, #0]
 8024810:	07c1      	lsls	r1, r0, #31
 8024812:	d40f      	bmi.n	8024834 <??smp_sc_phase_2as2_dhkey_check_receive_1>
 8024814:	7ba0      	ldrb	r0, [r4, #14]
 8024816:	4601      	mov	r1, r0
 8024818:	4420      	add	r0, r4
 802481a:	f1c1 0110 	rsb	r1, r1, #16
 802481e:	3024      	adds	r0, #36	; 0x24
 8024820:	f00c fb5e 	bl	8030ee0 <__aeabi_memclr>
 8024824:	78b0      	ldrb	r0, [r6, #2]
 8024826:	f040 0002 	orr.w	r0, r0, #2
 802482a:	70b0      	strb	r0, [r6, #2]
 802482c:	4620      	mov	r0, r4
 802482e:	f7fe fb1c 	bl	8022e6a <SMP_MI_Start_Encryption>
 8024832:	e009      	b.n	8024848 <??smp_sc_phase_2as2_dhkey_check_receive_2>

08024834 <??smp_sc_phase_2as2_dhkey_check_receive_1>:
 8024834:	4620      	mov	r0, r4
 8024836:	f7ff ffb2 	bl	802479e <smp____SC_Phase_2AS2_DHKeyCheck_Send>
 802483a:	e006      	b.n	802484a <??smp_sc_phase_2as2_dhkey_check_receive_3>

0802483c <??smp_sc_phase_2as2_dhkey_check_receive_0>:
 802483c:	2301      	movs	r3, #1
 802483e:	2200      	movs	r2, #0
 8024840:	210b      	movs	r1, #11
 8024842:	4620      	mov	r0, r4
 8024844:	f7ff fbc9 	bl	8023fda <SMP_Send_Pairing_Failed>

08024848 <??smp_sc_phase_2as2_dhkey_check_receive_2>:
 8024848:	4605      	mov	r5, r0

0802484a <??smp_sc_phase_2as2_dhkey_check_receive_3>:
 802484a:	4628      	mov	r0, r5
 802484c:	b008      	add	sp, #32
 802484e:	bd70      	pop	{r4, r5, r6, pc}

08024850 <smp_sc_phase_2as2_start>:
 8024850:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8024854:	f8df 91dc 	ldr.w	r9, [pc, #476]	; 8024a34 <??DataTable17>
 8024858:	b09c      	sub	sp, #112	; 0x70
 802485a:	f109 07b4 	add.w	r7, r9, #180	; 0xb4
 802485e:	783e      	ldrb	r6, [r7, #0]
 8024860:	2500      	movs	r5, #0
 8024862:	f006 0130 	and.w	r1, r6, #48	; 0x30
 8024866:	2930      	cmp	r1, #48	; 0x30
 8024868:	f040 809b 	bne.w	80249a2 <??smp_sc_phase_2as2_start_0>
 802486c:	4604      	mov	r4, r0
 802486e:	f109 08c8 	add.w	r8, r9, #200	; 0xc8
 8024872:	2220      	movs	r2, #32
 8024874:	4641      	mov	r1, r8
 8024876:	a814      	add	r0, sp, #80	; 0x50
 8024878:	f00c fb35 	bl	8030ee6 <__aeabi_memcpy>
 802487c:	f006 06cf 	and.w	r6, r6, #207	; 0xcf
 8024880:	703e      	strb	r6, [r7, #0]
 8024882:	f894 006e 	ldrb.w	r0, [r4, #110]	; 0x6e
 8024886:	07c1      	lsls	r1, r0, #31
 8024888:	d406      	bmi.n	8024898 <??smp_sc_phase_2as2_start_1>
 802488a:	a808      	add	r0, sp, #32
 802488c:	9000      	str	r0, [sp, #0]
 802488e:	ab06      	add	r3, sp, #24
 8024890:	aa0a      	add	r2, sp, #40	; 0x28
 8024892:	f10d 0119 	add.w	r1, sp, #25
 8024896:	e005      	b.n	80248a4 <??smp_sc_phase_2as2_start_2>

08024898 <??smp_sc_phase_2as2_start_1>:
 8024898:	a80a      	add	r0, sp, #40	; 0x28
 802489a:	9000      	str	r0, [sp, #0]
 802489c:	f10d 0319 	add.w	r3, sp, #25
 80248a0:	aa08      	add	r2, sp, #32
 80248a2:	a906      	add	r1, sp, #24

080248a4 <??smp_sc_phase_2as2_start_2>:
 80248a4:	4620      	mov	r0, r4
 80248a6:	f7ff fecb 	bl	8024640 <smp____SC_Phase_2AS2__Set_Addresses>
 80248aa:	f104 0024 	add.w	r0, r4, #36	; 0x24
 80248ae:	f89d 2018 	ldrb.w	r2, [sp, #24]
 80248b2:	9004      	str	r0, [sp, #16]
 80248b4:	a908      	add	r1, sp, #32
 80248b6:	a80a      	add	r0, sp, #40	; 0x28
 80248b8:	f89d 3019 	ldrb.w	r3, [sp, #25]
 80248bc:	9102      	str	r1, [sp, #8]
 80248be:	9201      	str	r2, [sp, #4]
 80248c0:	9000      	str	r0, [sp, #0]
 80248c2:	f8cd 800c 	str.w	r8, [sp, #12]
 80248c6:	f104 025e 	add.w	r2, r4, #94	; 0x5e
 80248ca:	f104 014e 	add.w	r1, r4, #78	; 0x4e
 80248ce:	a814      	add	r0, sp, #80	; 0x50
 80248d0:	f7fc fed0 	bl	8021674 <SMA_SC_Gen_f5_Keys>
 80248d4:	2100      	movs	r1, #0
 80248d6:	2200      	movs	r2, #0
 80248d8:	a80c      	add	r0, sp, #48	; 0x30
 80248da:	2300      	movs	r3, #0
 80248dc:	468c      	mov	ip, r1
 80248de:	f8ad 201a 	strh.w	r2, [sp, #26]
 80248e2:	e880 100e 	stmia.w	r0, {r1, r2, r3, ip}
 80248e6:	7a61      	ldrb	r1, [r4, #9]
 80248e8:	2902      	cmp	r1, #2
 80248ea:	d10b      	bne.n	8024904 <??smp_sc_phase_2as2_start_3>
 80248ec:	f8d9 008c 	ldr.w	r0, [r9, #140]	; 0x8c
 80248f0:	4601      	mov	r1, r0
 80248f2:	f88d 1030 	strb.w	r1, [sp, #48]	; 0x30
 80248f6:	a90c      	add	r1, sp, #48	; 0x30
 80248f8:	0a02      	lsrs	r2, r0, #8
 80248fa:	704a      	strb	r2, [r1, #1]
 80248fc:	0c03      	lsrs	r3, r0, #16
 80248fe:	708b      	strb	r3, [r1, #2]
 8024900:	0e00      	lsrs	r0, r0, #24
 8024902:	70c8      	strb	r0, [r1, #3]

08024904 <??smp_sc_phase_2as2_start_3>:
 8024904:	7b38      	ldrb	r0, [r7, #12]
 8024906:	f209 1669 	addw	r6, r9, #361	; 0x169
 802490a:	7030      	strb	r0, [r6, #0]
 802490c:	7aa1      	ldrb	r1, [r4, #10]
 802490e:	f001 0101 	and.w	r1, r1, #1
 8024912:	7071      	strb	r1, [r6, #1]
 8024914:	7a60      	ldrb	r0, [r4, #9]
 8024916:	2803      	cmp	r0, #3
 8024918:	d10e      	bne.n	8024938 <??smp_sc_phase_2as2_start_4>
 802491a:	4620      	mov	r0, r4
 802491c:	f7ff fb71 	bl	8024002 <SMP_Oob_Check_Remote_Data_Presence>
 8024920:	b150      	cbz	r0, 8024938 <??smp_sc_phase_2as2_start_4>
 8024922:	ab07      	add	r3, sp, #28
 8024924:	2201      	movs	r2, #1
 8024926:	2100      	movs	r1, #0
 8024928:	4620      	mov	r0, r4
 802492a:	f7ff fb82 	bl	8024032 <SMP_Oob_Get_Remote_Data_Reference>
 802492e:	9907      	ldr	r1, [sp, #28]
 8024930:	2210      	movs	r2, #16
 8024932:	a80c      	add	r0, sp, #48	; 0x30
 8024934:	f00c fad7 	bl	8030ee6 <__aeabi_memcpy>

08024938 <??smp_sc_phase_2as2_start_4>:
 8024938:	f894 006e 	ldrb.w	r0, [r4, #110]	; 0x6e
 802493c:	07c1      	lsls	r1, r0, #31
 802493e:	bf59      	ittee	pl
 8024940:	f104 074e 	addpl.w	r7, r4, #78	; 0x4e
 8024944:	f104 0a5e 	addpl.w	sl, r4, #94	; 0x5e
 8024948:	f104 075e 	addmi.w	r7, r4, #94	; 0x5e
 802494c:	f104 0a4e 	addmi.w	sl, r4, #78	; 0x4e
 8024950:	a810      	add	r0, sp, #64	; 0x40
 8024952:	9000      	str	r0, [sp, #0]
 8024954:	f10d 031a 	add.w	r3, sp, #26
 8024958:	aa12      	add	r2, sp, #72	; 0x48
 802495a:	f10d 011b 	add.w	r1, sp, #27
 802495e:	4620      	mov	r0, r4
 8024960:	f7ff fe6e 	bl	8024640 <smp____SC_Phase_2AS2__Set_Addresses>
 8024964:	a910      	add	r1, sp, #64	; 0x40
 8024966:	9104      	str	r1, [sp, #16]
 8024968:	f109 00d8 	add.w	r0, r9, #216	; 0xd8
 802496c:	f89d 201a 	ldrb.w	r2, [sp, #26]
 8024970:	f89d 101b 	ldrb.w	r1, [sp, #27]
 8024974:	9005      	str	r0, [sp, #20]
 8024976:	a812      	add	r0, sp, #72	; 0x48
 8024978:	9203      	str	r2, [sp, #12]
 802497a:	9002      	str	r0, [sp, #8]
 802497c:	9101      	str	r1, [sp, #4]
 802497e:	9600      	str	r6, [sp, #0]
 8024980:	ab0c      	add	r3, sp, #48	; 0x30
 8024982:	4652      	mov	r2, sl
 8024984:	4639      	mov	r1, r7
 8024986:	4640      	mov	r0, r8
 8024988:	f7fc fed4 	bl	8021734 <SMA_SC_Gen_f6_Check_Val>
 802498c:	f894 006e 	ldrb.w	r0, [r4, #110]	; 0x6e
 8024990:	07c1      	lsls	r1, r0, #31
 8024992:	d404      	bmi.n	802499e <??smp_sc_phase_2as2_start_5>
 8024994:	4620      	mov	r0, r4
 8024996:	f7ff ff02 	bl	802479e <smp____SC_Phase_2AS2_DHKeyCheck_Send>
 802499a:	4605      	mov	r5, r0
 802499c:	e001      	b.n	80249a2 <??smp_sc_phase_2as2_start_0>

0802499e <??smp_sc_phase_2as2_start_5>:
 802499e:	20bb      	movs	r0, #187	; 0xbb
 80249a0:	7220      	strb	r0, [r4, #8]

080249a2 <??smp_sc_phase_2as2_start_0>:
 80249a2:	4628      	mov	r0, r5
 80249a4:	b01c      	add	sp, #112	; 0x70
 80249a6:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}

080249aa <smp_sc_update_statistics_on_pairing_complete>:
 80249aa:	b5f0      	push	{r4, r5, r6, r7, lr}
 80249ac:	4602      	mov	r2, r0
 80249ae:	f892 406e 	ldrb.w	r4, [r2, #110]	; 0x6e
 80249b2:	460b      	mov	r3, r1
 80249b4:	0720      	lsls	r0, r4, #28
 80249b6:	d53c      	bpl.n	8024a32 <??smp_sc_update_statistics_on_pairing_complete_0>
 80249b8:	481f      	ldr	r0, [pc, #124]	; (8024a38 <??DataTable17_1>)
 80249ba:	7d80      	ldrb	r0, [r0, #22]
 80249bc:	8ad6      	ldrh	r6, [r2, #22]
 80249be:	2100      	movs	r1, #0
 80249c0:	4d1e      	ldr	r5, [pc, #120]	; (8024a3c <??DataTable17_2>)
 80249c2:	b160      	cbz	r0, 80249de <??smp_sc_update_statistics_on_pairing_complete_1>
 80249c4:	686f      	ldr	r7, [r5, #4]

080249c6 <??smp_sc_update_statistics_on_pairing_complete_2>:
 80249c6:	f897 c06e 	ldrb.w	ip, [r7, #110]	; 0x6e
 80249ca:	ea5f 7e8c 	movs.w	lr, ip, lsl #30
 80249ce:	d503      	bpl.n	80249d8 <??smp_sc_update_statistics_on_pairing_complete_3>
 80249d0:	f8b7 c016 	ldrh.w	ip, [r7, #22]
 80249d4:	45b4      	cmp	ip, r6
 80249d6:	d10f      	bne.n	80249f8 <??smp_sc_update_statistics_on_pairing_complete_4>

080249d8 <??smp_sc_update_statistics_on_pairing_complete_3>:
 80249d8:	3780      	adds	r7, #128	; 0x80
 80249da:	1e40      	subs	r0, r0, #1
 80249dc:	d1f3      	bne.n	80249c6 <??smp_sc_update_statistics_on_pairing_complete_2>

080249de <??smp_sc_update_statistics_on_pairing_complete_1>:
 80249de:	f004 04fd 	and.w	r4, r4, #253	; 0xfd
 80249e2:	f882 406e 	strb.w	r4, [r2, #110]	; 0x6e
 80249e6:	b919      	cbnz	r1, 80249f0 <??smp_sc_update_statistics_on_pairing_complete_5>
 80249e8:	7828      	ldrb	r0, [r5, #0]
 80249ea:	f000 00fb 	and.w	r0, r0, #251	; 0xfb
 80249ee:	7028      	strb	r0, [r5, #0]

080249f0 <??smp_sc_update_statistics_on_pairing_complete_5>:
 80249f0:	7868      	ldrb	r0, [r5, #1]
 80249f2:	b91b      	cbnz	r3, 80249fc <??smp_sc_update_statistics_on_pairing_complete_6>
 80249f4:	1c40      	adds	r0, r0, #1
 80249f6:	e007      	b.n	8024a08 <??smp_sc_update_statistics_on_pairing_complete_7>

080249f8 <??smp_sc_update_statistics_on_pairing_complete_4>:
 80249f8:	2101      	movs	r1, #1
 80249fa:	e7f0      	b.n	80249de <??smp_sc_update_statistics_on_pairing_complete_1>

080249fc <??smp_sc_update_statistics_on_pairing_complete_6>:
 80249fc:	3010      	adds	r0, #16
 80249fe:	b919      	cbnz	r1, 8024a08 <??smp_sc_update_statistics_on_pairing_complete_7>
 8024a00:	7829      	ldrb	r1, [r5, #0]
 8024a02:	f001 01cf 	and.w	r1, r1, #207	; 0xcf
 8024a06:	7029      	strb	r1, [r5, #0]

08024a08 <??smp_sc_update_statistics_on_pairing_complete_7>:
 8024a08:	f000 060f 	and.w	r6, r0, #15
 8024a0c:	4f10      	ldr	r7, [pc, #64]	; (8024a50 <??DataTable17_7>)
 8024a0e:	fb86 c707 	smull	ip, r7, r6, r7
 8024a12:	b2c1      	uxtb	r1, r0
 8024a14:	eb07 77d7 	add.w	r7, r7, r7, lsr #31
 8024a18:	b2ff      	uxtb	r7, r7
 8024a1a:	eb07 1711 	add.w	r7, r7, r1, lsr #4
 8024a1e:	2f03      	cmp	r7, #3
 8024a20:	d306      	bcc.n	8024a30 <??smp_sc_update_statistics_on_pairing_complete_8>
 8024a22:	7828      	ldrb	r0, [r5, #0]
 8024a24:	0601      	lsls	r1, r0, #24
 8024a26:	bf5c      	itt	pl
 8024a28:	f040 0040 	orrpl.w	r0, r0, #64	; 0x40
 8024a2c:	7028      	strbpl	r0, [r5, #0]
 8024a2e:	2000      	movs	r0, #0

08024a30 <??smp_sc_update_statistics_on_pairing_complete_8>:
 8024a30:	7068      	strb	r0, [r5, #1]

08024a32 <??smp_sc_update_statistics_on_pairing_complete_0>:
 8024a32:	bdf0      	pop	{r4, r5, r6, r7, pc}

08024a34 <??DataTable17>:
 8024a34:	3710 2000                                   .7. 

08024a38 <??DataTable17_1>:
 8024a38:	36e8 2000                                   .6. 

08024a3c <??DataTable17_2>:
 8024a3c:	37c4 2000                                   .7. 

08024a40 <??DataTable17_3>:
 8024a40:	37f8 2000                                   .7. 

08024a44 <??DataTable17_4>:
 8024a44:	37a4 2000                                   .7. 

08024a48 <??DataTable17_5>:
 8024a48:	3838 2000                                   88. 

08024a4c <??DataTable17_6>:
 8024a4c:	37e8 2000                                   .7. 

08024a50 <??DataTable17_7>:
 8024a50:	5556 5555                                   VUUU

08024a54 <Is_Empty>:
 8024a54:	2200      	movs	r2, #0
 8024a56:	e000      	b.n	8024a5a <??Is_Empty_0>

08024a58 <??Is_Empty_1>:
 8024a58:	1c52      	adds	r2, r2, #1

08024a5a <??Is_Empty_0>:
 8024a5a:	428a      	cmp	r2, r1
 8024a5c:	d205      	bcs.n	8024a6a <??Is_Empty_2>
 8024a5e:	f810 3b01 	ldrb.w	r3, [r0], #1
 8024a62:	2b00      	cmp	r3, #0
 8024a64:	d0f8      	beq.n	8024a58 <??Is_Empty_1>
 8024a66:	2000      	movs	r0, #0
 8024a68:	4770      	bx	lr

08024a6a <??Is_Empty_2>:
 8024a6a:	2001      	movs	r0, #1
 8024a6c:	4770      	bx	lr

08024a6e <Rev_Memcpy>:
 8024a6e:	b13a      	cbz	r2, 8024a80 <??Rev_Memcpy_0>
 8024a70:	4410      	add	r0, r2
 8024a72:	1e40      	subs	r0, r0, #1

08024a74 <??Rev_Memcpy_1>:
 8024a74:	f811 3b01 	ldrb.w	r3, [r1], #1
 8024a78:	1e52      	subs	r2, r2, #1
 8024a7a:	f800 3901 	strb.w	r3, [r0], #-1
 8024a7e:	d1f9      	bne.n	8024a74 <??Rev_Memcpy_1>

08024a80 <??Rev_Memcpy_0>:
 8024a80:	4770      	bx	lr

08024a82 <Rev_Memcmp>:
 8024a82:	4410      	add	r0, r2
 8024a84:	1e43      	subs	r3, r0, #1
 8024a86:	1888      	adds	r0, r1, r2
 8024a88:	1e41      	subs	r1, r0, #1

08024a8a <??Rev_Memcmp_0>:
 8024a8a:	f813 c901 	ldrb.w	ip, [r3], #-1
 8024a8e:	f811 0901 	ldrb.w	r0, [r1], #-1
 8024a92:	1e52      	subs	r2, r2, #1
 8024a94:	ebbc 0000 	subs.w	r0, ip, r0
 8024a98:	d101      	bne.n	8024a9e <??Rev_Memcmp_1>
 8024a9a:	2a00      	cmp	r2, #0
 8024a9c:	d1f5      	bne.n	8024a8a <??Rev_Memcmp_0>

08024a9e <??Rev_Memcmp_1>:
 8024a9e:	4770      	bx	lr

08024aa0 <Copy_U8>:
 8024aa0:	b12a      	cbz	r2, 8024aae <??Copy_U8_0>

08024aa2 <??Copy_U8_1>:
 8024aa2:	f810 3b01 	ldrb.w	r3, [r0], #1
 8024aa6:	1e52      	subs	r2, r2, #1
 8024aa8:	f801 3b01 	strb.w	r3, [r1], #1
 8024aac:	d1f9      	bne.n	8024aa2 <??Copy_U8_1>

08024aae <??Copy_U8_0>:
 8024aae:	4770      	bx	lr

08024ab0 <Store_U24>:
 8024ab0:	7008      	strb	r0, [r1, #0]
 8024ab2:	0a00      	lsrs	r0, r0, #8
 8024ab4:	7048      	strb	r0, [r1, #1]
 8024ab6:	0a00      	lsrs	r0, r0, #8
 8024ab8:	7088      	strb	r0, [r1, #2]
 8024aba:	4770      	bx	lr

08024abc <Mem_Assign>:
 8024abc:	4351      	muls	r1, r2
 8024abe:	4603      	mov	r3, r0
 8024ac0:	6818      	ldr	r0, [r3, #0]
 8024ac2:	1cc9      	adds	r1, r1, #3
 8024ac4:	0889      	lsrs	r1, r1, #2
 8024ac6:	eb00 0181 	add.w	r1, r0, r1, lsl #2
 8024aca:	6019      	str	r1, [r3, #0]
 8024acc:	4770      	bx	lr

08024ace <Mod_37>:
 8024ace:	f240 62eb 	movw	r2, #1771	; 0x6eb
 8024ad2:	4342      	muls	r2, r0
 8024ad4:	f06f 0124 	mvn.w	r1, #36	; 0x24
 8024ad8:	0c12      	lsrs	r2, r2, #16
 8024ada:	fb01 0002 	mla	r0, r1, r2, r0
 8024ade:	2825      	cmp	r0, #37	; 0x25
 8024ae0:	bf28      	it	cs
 8024ae2:	3825      	subcs	r0, #37	; 0x25
 8024ae4:	b2c0      	uxtb	r0, r0
 8024ae6:	4770      	bx	lr

08024ae8 <PrevMod37>:
 8024ae8:	b900      	cbnz	r0, 8024aec <??PrevMod37_0>
 8024aea:	2025      	movs	r0, #37	; 0x25

08024aec <??PrevMod37_0>:
 8024aec:	1e40      	subs	r0, r0, #1
 8024aee:	b2c0      	uxtb	r0, r0
 8024af0:	4770      	bx	lr

08024af2 <NextMod37>:
 8024af2:	1c40      	adds	r0, r0, #1
 8024af4:	2825      	cmp	r0, #37	; 0x25
 8024af6:	bf08      	it	eq
 8024af8:	2000      	moveq	r0, #0
 8024afa:	b2c0      	uxtb	r0, r0
 8024afc:	4770      	bx	lr

08024afe <Hal_Get_Random_Number32>:
 8024afe:	b580      	push	{r7, lr}
 8024b00:	4669      	mov	r1, sp
 8024b02:	2001      	movs	r0, #1
 8024b04:	f002 ff0b 	bl	802791e <BLEPLAT_RngGet>
 8024b08:	9800      	ldr	r0, [sp, #0]
 8024b0a:	bd02      	pop	{r1, pc}

08024b0c <HAL_Generate_Random_Bytes_To>:
 8024b0c:	b57c      	push	{r2, r3, r4, r5, r6, lr}
 8024b0e:	460d      	mov	r5, r1
 8024b10:	2600      	movs	r6, #0
 8024b12:	4604      	mov	r4, r0
 8024b14:	0029      	movs	r1, r5
 8024b16:	d00d      	beq.n	8024b34 <??HAL_Generate_Random_Bytes_To_0>

08024b18 <??HAL_Generate_Random_Bytes_To_1>:
 8024b18:	f016 0f03 	tst.w	r6, #3
 8024b1c:	d104      	bne.n	8024b28 <??HAL_Generate_Random_Bytes_To_2>
 8024b1e:	4669      	mov	r1, sp
 8024b20:	2001      	movs	r0, #1
 8024b22:	f002 fefc 	bl	802791e <BLEPLAT_RngGet>
 8024b26:	9800      	ldr	r0, [sp, #0]

08024b28 <??HAL_Generate_Random_Bytes_To_2>:
 8024b28:	f804 0b01 	strb.w	r0, [r4], #1
 8024b2c:	0a00      	lsrs	r0, r0, #8
 8024b2e:	1c76      	adds	r6, r6, #1
 8024b30:	42ae      	cmp	r6, r5
 8024b32:	d3f1      	bcc.n	8024b18 <??HAL_Generate_Random_Bytes_To_1>

08024b34 <??HAL_Generate_Random_Bytes_To_0>:
 8024b34:	bd73      	pop	{r0, r1, r4, r5, r6, pc}
	...

08024b38 <ACL_MemAlloc>:
 8024b38:	b570      	push	{r4, r5, r6, lr}
 8024b3a:	4e08      	ldr	r6, [pc, #32]	; (8024b5c <??DataTable0>)
 8024b3c:	7e31      	ldrb	r1, [r6, #24]
 8024b3e:	4604      	mov	r4, r0
 8024b40:	2228      	movs	r2, #40	; 0x28
 8024b42:	4d07      	ldr	r5, [pc, #28]	; (8024b60 <??DataTable0_1>)
 8024b44:	f7ff ffba 	bl	8024abc <Mem_Assign>
 8024b48:	6768      	str	r0, [r5, #116]	; 0x74
 8024b4a:	7e31      	ldrb	r1, [r6, #24]
 8024b4c:	2204      	movs	r2, #4
 8024b4e:	4620      	mov	r0, r4
 8024b50:	1c49      	adds	r1, r1, #1
 8024b52:	f7ff ffb3 	bl	8024abc <Mem_Assign>
 8024b56:	6728      	str	r0, [r5, #112]	; 0x70
 8024b58:	bd70      	pop	{r4, r5, r6, pc}
	...

08024b5c <??DataTable0>:
 8024b5c:	36e8 2000                                   .6. 

08024b60 <??DataTable0_1>:
 8024b60:	3710 2000                                   .7. 

08024b64 <ACL_Init>:
 8024b64:	f000 b860 	b.w	8024c28 <ACL_PM_Init>

08024b68 <ACL_List_Init>:
 8024b68:	2200      	movs	r2, #0
 8024b6a:	6002      	str	r2, [r0, #0]
 8024b6c:	6042      	str	r2, [r0, #4]
 8024b6e:	7201      	strb	r1, [r0, #8]
 8024b70:	7242      	strb	r2, [r0, #9]
 8024b72:	4770      	bx	lr

08024b74 <ACL_List_Insert_Tail>:
 8024b74:	b510      	push	{r4, lr}
 8024b76:	4604      	mov	r4, r0
 8024b78:	4608      	mov	r0, r1
 8024b7a:	2200      	movs	r2, #0
 8024b7c:	6002      	str	r2, [r0, #0]
 8024b7e:	6821      	ldr	r1, [r4, #0]
 8024b80:	2900      	cmp	r1, #0
 8024b82:	bf0e      	itee	eq
 8024b84:	6020      	streq	r0, [r4, #0]
 8024b86:	6861      	ldrne	r1, [r4, #4]
 8024b88:	6008      	strne	r0, [r1, #0]
 8024b8a:	6060      	str	r0, [r4, #4]
 8024b8c:	e008      	b.n	8024ba0 <?Subroutine0>

08024b8e <ACL_List_Insert_Head>:
 8024b8e:	b510      	push	{r4, lr}
 8024b90:	4604      	mov	r4, r0
 8024b92:	6822      	ldr	r2, [r4, #0]
 8024b94:	4608      	mov	r0, r1
 8024b96:	6002      	str	r2, [r0, #0]
 8024b98:	6821      	ldr	r1, [r4, #0]
 8024b9a:	b901      	cbnz	r1, 8024b9e <??ACL_List_Insert_Head_0>
 8024b9c:	6060      	str	r0, [r4, #4]

08024b9e <??ACL_List_Insert_Head_0>:
 8024b9e:	6020      	str	r0, [r4, #0]

08024ba0 <?Subroutine0>:
 8024ba0:	f000 f8d6 	bl	8024d50 <ACL_PM_Get_Mem_Buff_Count>
 8024ba4:	7a61      	ldrb	r1, [r4, #9]
 8024ba6:	1840      	adds	r0, r0, r1
 8024ba8:	7260      	strb	r0, [r4, #9]
 8024baa:	bd10      	pop	{r4, pc}

08024bac <ACL_List_Remove>:
 8024bac:	b510      	push	{r4, lr}
 8024bae:	4604      	mov	r4, r0
 8024bb0:	6820      	ldr	r0, [r4, #0]
 8024bb2:	4288      	cmp	r0, r1
 8024bb4:	d108      	bne.n	8024bc8 <??ACL_List_Remove_0>
 8024bb6:	6802      	ldr	r2, [r0, #0]
 8024bb8:	2300      	movs	r3, #0
 8024bba:	6022      	str	r2, [r4, #0]
 8024bbc:	6003      	str	r3, [r0, #0]
 8024bbe:	6820      	ldr	r0, [r4, #0]
 8024bc0:	b958      	cbnz	r0, 8024bda <??ACL_List_Remove_1>
 8024bc2:	6063      	str	r3, [r4, #4]
 8024bc4:	e009      	b.n	8024bda <??ACL_List_Remove_1>

08024bc6 <??ACL_List_Remove_2>:
 8024bc6:	4610      	mov	r0, r2

08024bc8 <??ACL_List_Remove_0>:
 8024bc8:	6802      	ldr	r2, [r0, #0]
 8024bca:	428a      	cmp	r2, r1
 8024bcc:	d1fb      	bne.n	8024bc6 <??ACL_List_Remove_2>
 8024bce:	680a      	ldr	r2, [r1, #0]
 8024bd0:	6002      	str	r2, [r0, #0]
 8024bd2:	6863      	ldr	r3, [r4, #4]
 8024bd4:	428b      	cmp	r3, r1
 8024bd6:	bf08      	it	eq
 8024bd8:	6060      	streq	r0, [r4, #4]

08024bda <??ACL_List_Remove_1>:
 8024bda:	4608      	mov	r0, r1
 8024bdc:	e00c      	b.n	8024bf8 <?Subroutine1>

08024bde <ACL_List_Remove_Head>:
 8024bde:	b510      	push	{r4, lr}
 8024be0:	4604      	mov	r4, r0
 8024be2:	6820      	ldr	r0, [r4, #0]
 8024be4:	2300      	movs	r3, #0
 8024be6:	6008      	str	r0, [r1, #0]
 8024be8:	6820      	ldr	r0, [r4, #0]
 8024bea:	6802      	ldr	r2, [r0, #0]
 8024bec:	6022      	str	r2, [r4, #0]
 8024bee:	6003      	str	r3, [r0, #0]
 8024bf0:	6820      	ldr	r0, [r4, #0]
 8024bf2:	b900      	cbnz	r0, 8024bf6 <??ACL_List_Remove_Head_0>
 8024bf4:	6063      	str	r3, [r4, #4]

08024bf6 <??ACL_List_Remove_Head_0>:
 8024bf6:	6808      	ldr	r0, [r1, #0]

08024bf8 <?Subroutine1>:
 8024bf8:	f000 f8aa 	bl	8024d50 <ACL_PM_Get_Mem_Buff_Count>
 8024bfc:	7a61      	ldrb	r1, [r4, #9]
 8024bfe:	1a08      	subs	r0, r1, r0
 8024c00:	7260      	strb	r0, [r4, #9]
 8024c02:	bd10      	pop	{r4, pc}

08024c04 <ACL_List_Full_On_Packet>:
 8024c04:	b510      	push	{r4, lr}
 8024c06:	4604      	mov	r4, r0
 8024c08:	4608      	mov	r0, r1
 8024c0a:	7a21      	ldrb	r1, [r4, #8]
 8024c0c:	29ff      	cmp	r1, #255	; 0xff
 8024c0e:	d008      	beq.n	8024c22 <??ACL_List_Full_On_Packet_0>
 8024c10:	f000 f89e 	bl	8024d50 <ACL_PM_Get_Mem_Buff_Count>
 8024c14:	7a62      	ldrb	r2, [r4, #9]
 8024c16:	7a21      	ldrb	r1, [r4, #8]
 8024c18:	1880      	adds	r0, r0, r2
 8024c1a:	4281      	cmp	r1, r0
 8024c1c:	da01      	bge.n	8024c22 <??ACL_List_Full_On_Packet_0>
 8024c1e:	2001      	movs	r0, #1
 8024c20:	bd10      	pop	{r4, pc}

08024c22 <??ACL_List_Full_On_Packet_0>:
 8024c22:	2000      	movs	r0, #0
 8024c24:	bd10      	pop	{r4, pc}
	...

08024c28 <ACL_PM_Init>:
 8024c28:	b510      	push	{r4, lr}
 8024c2a:	49a2      	ldr	r1, [pc, #648]	; (8024eb4 <??DataTable7>)
 8024c2c:	8b4a      	ldrh	r2, [r1, #26]
 8024c2e:	4ba2      	ldr	r3, [pc, #648]	; (8024eb8 <??DataTable7_1>)
 8024c30:	f103 0466 	add.w	r4, r3, #102	; 0x66
 8024c34:	3223      	adds	r2, #35	; 0x23
 8024c36:	0952      	lsrs	r2, r2, #5
 8024c38:	1c50      	adds	r0, r2, #1
 8024c3a:	7060      	strb	r0, [r4, #1]
 8024c3c:	7d88      	ldrb	r0, [r1, #22]
 8024c3e:	1c92      	adds	r2, r2, #2
 8024c40:	4342      	muls	r2, r0
 8024c42:	f103 006c 	add.w	r0, r3, #108	; 0x6c
 8024c46:	1c52      	adds	r2, r2, #1
 8024c48:	70a2      	strb	r2, [r4, #2]
 8024c4a:	7e09      	ldrb	r1, [r1, #24]
 8024c4c:	71e1      	strb	r1, [r4, #7]
 8024c4e:	f7fb ffbd 	bl	8020bcc <MBuff_Init>
 8024c52:	79a0      	ldrb	r0, [r4, #6]
 8024c54:	7020      	strb	r0, [r4, #0]
 8024c56:	bd10      	pop	{r4, pc}

08024c58 <ACL_PM_Check_And_Set>:
 8024c58:	1e49      	subs	r1, r1, #1
 8024c5a:	0949      	lsrs	r1, r1, #5
 8024c5c:	1c43      	adds	r3, r0, #1
 8024c5e:	1c49      	adds	r1, r1, #1
 8024c60:	b4f0      	push	{r4, r5, r6, r7}
 8024c62:	2291      	movs	r2, #145	; 0x91
 8024c64:	f003 0301 	and.w	r3, r3, #1
 8024c68:	b2c9      	uxtb	r1, r1
 8024c6a:	f3ef 8410 	mrs	r4, PRIMASK
 8024c6e:	b672      	cpsid	i
 8024c70:	4d91      	ldr	r5, [pc, #580]	; (8024eb8 <??DataTable7_1>)
 8024c72:	f895 6066 	ldrb.w	r6, [r5, #102]	; 0x66
 8024c76:	428e      	cmp	r6, r1
 8024c78:	db16      	blt.n	8024ca8 <??ACL_PM_Check_And_Set_0>
 8024c7a:	442b      	add	r3, r5
 8024c7c:	f103 0767 	add.w	r7, r3, #103	; 0x67
 8024c80:	78bb      	ldrb	r3, [r7, #2]
 8024c82:	783f      	ldrb	r7, [r7, #0]
 8024c84:	199e      	adds	r6, r3, r6
 8024c86:	b2f6      	uxtb	r6, r6
 8024c88:	19cf      	adds	r7, r1, r7
 8024c8a:	42be      	cmp	r6, r7
 8024c8c:	db0c      	blt.n	8024ca8 <??ACL_PM_Check_And_Set_0>
 8024c8e:	f105 0369 	add.w	r3, r5, #105	; 0x69
 8024c92:	5c1e      	ldrb	r6, [r3, r0]
 8024c94:	f105 0769 	add.w	r7, r5, #105	; 0x69
 8024c98:	2200      	movs	r2, #0
 8024c9a:	198e      	adds	r6, r1, r6
 8024c9c:	543e      	strb	r6, [r7, r0]
 8024c9e:	f895 0066 	ldrb.w	r0, [r5, #102]	; 0x66
 8024ca2:	1a41      	subs	r1, r0, r1
 8024ca4:	f885 1066 	strb.w	r1, [r5, #102]	; 0x66

08024ca8 <??ACL_PM_Check_And_Set_0>:
 8024ca8:	f384 8810 	msr	PRIMASK, r4
 8024cac:	4610      	mov	r0, r2
 8024cae:	bcf0      	pop	{r4, r5, r6, r7}
 8024cb0:	4770      	bx	lr

08024cb2 <ACL_PM_New>:
 8024cb2:	b570      	push	{r4, r5, r6, lr}
 8024cb4:	1e55      	subs	r5, r2, #1
 8024cb6:	f045 051f 	orr.w	r5, r5, #31
 8024cba:	460c      	mov	r4, r1
 8024cbc:	351d      	adds	r5, #29
 8024cbe:	b2a9      	uxth	r1, r5
 8024cc0:	2600      	movs	r6, #0
 8024cc2:	f7ff ffc9 	bl	8024c58 <ACL_PM_Check_And_Set>
 8024cc6:	b950      	cbnz	r0, 8024cde <??ACL_PM_New_0>
 8024cc8:	b2a9      	uxth	r1, r5
 8024cca:	487c      	ldr	r0, [pc, #496]	; (8024ebc <??DataTable7_2>)
 8024ccc:	f7fb ffb4 	bl	8020c38 <MBuff_Get>
 8024cd0:	f100 0608 	add.w	r6, r0, #8
 8024cd4:	6800      	ldr	r0, [r0, #0]
 8024cd6:	2100      	movs	r1, #0
 8024cd8:	74f1      	strb	r1, [r6, #19]
 8024cda:	60b0      	str	r0, [r6, #8]
 8024cdc:	80b4      	strh	r4, [r6, #4]

08024cde <??ACL_PM_New_0>:
 8024cde:	4630      	mov	r0, r6
 8024ce0:	bd70      	pop	{r4, r5, r6, pc}

08024ce2 <ACL_PM_Release>:
 8024ce2:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8024ce4:	f1a0 0408 	sub.w	r4, r0, #8
 8024ce8:	460d      	mov	r5, r1
 8024cea:	4620      	mov	r0, r4
 8024cec:	f7fb ffdc 	bl	8020ca8 <MBuff_Get_Chain_Count>
 8024cf0:	4606      	mov	r6, r0
 8024cf2:	4f71      	ldr	r7, [pc, #452]	; (8024eb8 <??DataTable7_1>)
 8024cf4:	4621      	mov	r1, r4
 8024cf6:	f107 006c 	add.w	r0, r7, #108	; 0x6c
 8024cfa:	f7fb ffb9 	bl	8020c70 <MBuff_Release>
 8024cfe:	f3ef 8010 	mrs	r0, PRIMASK
 8024d02:	b672      	cpsid	i
 8024d04:	1979      	adds	r1, r7, r5
 8024d06:	f891 2069 	ldrb.w	r2, [r1, #105]	; 0x69
 8024d0a:	1b92      	subs	r2, r2, r6
 8024d0c:	f881 2069 	strb.w	r2, [r1, #105]	; 0x69
 8024d10:	f897 1066 	ldrb.w	r1, [r7, #102]	; 0x66
 8024d14:	1876      	adds	r6, r6, r1
 8024d16:	f887 6066 	strb.w	r6, [r7, #102]	; 0x66
 8024d1a:	f380 8810 	msr	PRIMASK, r0
 8024d1e:	bdf1      	pop	{r0, r4, r5, r6, r7, pc}

08024d20 <ACL_PM_Get_Available_Buffer>:
 8024d20:	1c40      	adds	r0, r0, #1
 8024d22:	f000 0001 	and.w	r0, r0, #1
 8024d26:	f3ef 8210 	mrs	r2, PRIMASK
 8024d2a:	b672      	cpsid	i
 8024d2c:	4962      	ldr	r1, [pc, #392]	; (8024eb8 <??DataTable7_1>)
 8024d2e:	4408      	add	r0, r1
 8024d30:	f100 0367 	add.w	r3, r0, #103	; 0x67
 8024d34:	7818      	ldrb	r0, [r3, #0]
 8024d36:	f893 c002 	ldrb.w	ip, [r3, #2]
 8024d3a:	f891 1066 	ldrb.w	r1, [r1, #102]	; 0x66
 8024d3e:	4584      	cmp	ip, r0
 8024d40:	bf3a      	itte	cc
 8024d42:	1a08      	subcc	r0, r1, r0
 8024d44:	4460      	addcc	r0, ip
 8024d46:	4608      	movcs	r0, r1
 8024d48:	f382 8810 	msr	PRIMASK, r2
 8024d4c:	b2c0      	uxtb	r0, r0
 8024d4e:	4770      	bx	lr

08024d50 <ACL_PM_Get_Mem_Buff_Count>:
 8024d50:	6880      	ldr	r0, [r0, #8]
 8024d52:	f7fb bfa9 	b.w	8020ca8 <MBuff_Get_Chain_Count>

08024d56 <ACL_PM_Resize>:
 8024d56:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8024d5a:	4604      	mov	r4, r0
 8024d5c:	2091      	movs	r0, #145	; 0x91
 8024d5e:	460f      	mov	r7, r1
 8024d60:	4615      	mov	r5, r2
 8024d62:	2c00      	cmp	r4, #0
 8024d64:	d03a      	beq.n	8024ddc <??ACL_PM_Resize_0>
 8024d66:	4620      	mov	r0, r4
 8024d68:	f7fb ffa7 	bl	8020cba <MBuff_Get_Chain_Size>
 8024d6c:	4680      	mov	r8, r0
 8024d6e:	45a8      	cmp	r8, r5
 8024d70:	da0f      	bge.n	8024d92 <??ACL_PM_Resize_1>
 8024d72:	eba5 0808 	sub.w	r8, r5, r8
 8024d76:	fa1f f188 	uxth.w	r1, r8
 8024d7a:	4638      	mov	r0, r7
 8024d7c:	f7ff ff6c 	bl	8024c58 <ACL_PM_Check_And_Set>
 8024d80:	0001      	movs	r1, r0
 8024d82:	d12b      	bne.n	8024ddc <??ACL_PM_Resize_0>
 8024d84:	462a      	mov	r2, r5
 8024d86:	4621      	mov	r1, r4
 8024d88:	484c      	ldr	r0, [pc, #304]	; (8024ebc <??DataTable7_2>)
 8024d8a:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 8024d8e:	f7fb bf9e 	b.w	8020cce <MBuff_Resize>

08024d92 <??ACL_PM_Resize_1>:
 8024d92:	f1a8 0801 	sub.w	r8, r8, #1
 8024d96:	ea4f 1858 	mov.w	r8, r8, lsr #5
 8024d9a:	4e47      	ldr	r6, [pc, #284]	; (8024eb8 <??DataTable7_1>)
 8024d9c:	f108 0801 	add.w	r8, r8, #1
 8024da0:	462a      	mov	r2, r5
 8024da2:	1e6d      	subs	r5, r5, #1
 8024da4:	096d      	lsrs	r5, r5, #5
 8024da6:	1c6d      	adds	r5, r5, #1
 8024da8:	4621      	mov	r1, r4
 8024daa:	f106 006c 	add.w	r0, r6, #108	; 0x6c
 8024dae:	fa5f f888 	uxtb.w	r8, r8
 8024db2:	b2ed      	uxtb	r5, r5
 8024db4:	f7fb ff8b 	bl	8020cce <MBuff_Resize>
 8024db8:	eba8 0505 	sub.w	r5, r8, r5
 8024dbc:	f3ef 8110 	mrs	r1, PRIMASK
 8024dc0:	b672      	cpsid	i
 8024dc2:	19f2      	adds	r2, r6, r7
 8024dc4:	f892 3069 	ldrb.w	r3, [r2, #105]	; 0x69
 8024dc8:	1b5b      	subs	r3, r3, r5
 8024dca:	f882 3069 	strb.w	r3, [r2, #105]	; 0x69
 8024dce:	f896 2066 	ldrb.w	r2, [r6, #102]	; 0x66
 8024dd2:	18ad      	adds	r5, r5, r2
 8024dd4:	f886 5066 	strb.w	r5, [r6, #102]	; 0x66
 8024dd8:	f381 8810 	msr	PRIMASK, r1

08024ddc <??ACL_PM_Resize_0>:
 8024ddc:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

08024de0 <ACL_PM_Cmp_Data>:
 8024de0:	6880      	ldr	r0, [r0, #8]
 8024de2:	f7fb bfed 	b.w	8020dc0 <MBuff_Cmp>

08024de6 <ACL_PM_Get_Data>:
 8024de6:	b418      	push	{r3, r4}
 8024de8:	461c      	mov	r4, r3
 8024dea:	4613      	mov	r3, r2
 8024dec:	460a      	mov	r2, r1
 8024dee:	6880      	ldr	r0, [r0, #8]
 8024df0:	4621      	mov	r1, r4
 8024df2:	b001      	add	sp, #4
 8024df4:	bc10      	pop	{r4}
 8024df6:	f7fb bfb7 	b.w	8020d68 <MBuff_Read>

08024dfa <ACL_PM_Set_Data>:
 8024dfa:	b418      	push	{r3, r4}
 8024dfc:	461c      	mov	r4, r3
 8024dfe:	4613      	mov	r3, r2
 8024e00:	460a      	mov	r2, r1
 8024e02:	6880      	ldr	r0, [r0, #8]
 8024e04:	4621      	mov	r1, r4
 8024e06:	b001      	add	sp, #4
 8024e08:	bc10      	pop	{r4}
 8024e0a:	f7fb bf7d 	b.w	8020d08 <MBuff_Write>

08024e0e <ACL_PM_Clone>:
 8024e0e:	b538      	push	{r3, r4, r5, lr}
 8024e10:	4605      	mov	r5, r0
 8024e12:	000c      	movs	r4, r1
 8024e14:	bf18      	it	ne
 8024e16:	2d00      	cmpne	r5, #0
 8024e18:	d101      	bne.n	8024e1e <??ACL_PM_Clone_0>
 8024e1a:	2091      	movs	r0, #145	; 0x91
 8024e1c:	bd32      	pop	{r1, r4, r5, pc}

08024e1e <??ACL_PM_Clone_0>:
 8024e1e:	68a1      	ldr	r1, [r4, #8]
 8024e20:	68a8      	ldr	r0, [r5, #8]
 8024e22:	f7fc f806 	bl	8020e32 <MBuff_Clone>
 8024e26:	0001      	movs	r1, r0
 8024e28:	bf04      	itt	eq
 8024e2a:	88e1      	ldrheq	r1, [r4, #6]
 8024e2c:	80e9      	strheq	r1, [r5, #6]
 8024e2e:	bd32      	pop	{r1, r4, r5, pc}

08024e30 <ACL_PM_Extract_Pdu_MBuff>:
 8024e30:	4601      	mov	r1, r0
 8024e32:	6888      	ldr	r0, [r1, #8]
 8024e34:	2200      	movs	r2, #0
 8024e36:	f841 2d08 	str.w	r2, [r1, #-8]!
 8024e3a:	4770      	bx	lr

08024e3c <aci_hal_get_pm_debug_info>:
 8024e3c:	b430      	push	{r4, r5}
 8024e3e:	f3ef 8310 	mrs	r3, PRIMASK
 8024e42:	b672      	cpsid	i
 8024e44:	4c1e      	ldr	r4, [pc, #120]	; (8024ec0 <??DataTable7_3>)
 8024e46:	7825      	ldrb	r5, [r4, #0]
 8024e48:	7005      	strb	r5, [r0, #0]
 8024e4a:	7860      	ldrb	r0, [r4, #1]
 8024e4c:	7008      	strb	r0, [r1, #0]
 8024e4e:	7921      	ldrb	r1, [r4, #4]
 8024e50:	78e0      	ldrb	r0, [r4, #3]
 8024e52:	1a09      	subs	r1, r1, r0
 8024e54:	7011      	strb	r1, [r2, #0]
 8024e56:	f383 8810 	msr	PRIMASK, r3
 8024e5a:	2000      	movs	r0, #0
 8024e5c:	bc30      	pop	{r4, r5}
 8024e5e:	4770      	bx	lr

08024e60 <ACL_PM_Compact>:
 8024e60:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8024e62:	460e      	mov	r6, r1
 8024e64:	68b7      	ldr	r7, [r6, #8]
 8024e66:	4605      	mov	r5, r0
 8024e68:	4638      	mov	r0, r7
 8024e6a:	f7fb ff1d 	bl	8020ca8 <MBuff_Get_Chain_Count>
 8024e6e:	4604      	mov	r4, r0
 8024e70:	88f0      	ldrh	r0, [r6, #6]
 8024e72:	1e40      	subs	r0, r0, #1
 8024e74:	0940      	lsrs	r0, r0, #5
 8024e76:	1c40      	adds	r0, r0, #1
 8024e78:	b2c0      	uxtb	r0, r0
 8024e7a:	42a0      	cmp	r0, r4
 8024e7c:	d219      	bcs.n	8024eb2 <??ACL_PM_Compact_0>
 8024e7e:	4e0e      	ldr	r6, [pc, #56]	; (8024eb8 <??DataTable7_1>)
 8024e80:	4639      	mov	r1, r7
 8024e82:	f106 006c 	add.w	r0, r6, #108	; 0x6c
 8024e86:	f7fc f840 	bl	8020f0a <MBuff_Compact>
 8024e8a:	4638      	mov	r0, r7
 8024e8c:	f7fb ff0c 	bl	8020ca8 <MBuff_Get_Chain_Count>
 8024e90:	1a24      	subs	r4, r4, r0
 8024e92:	f3ef 8010 	mrs	r0, PRIMASK
 8024e96:	b672      	cpsid	i
 8024e98:	1971      	adds	r1, r6, r5
 8024e9a:	f891 2069 	ldrb.w	r2, [r1, #105]	; 0x69
 8024e9e:	1b12      	subs	r2, r2, r4
 8024ea0:	f881 2069 	strb.w	r2, [r1, #105]	; 0x69
 8024ea4:	f896 1066 	ldrb.w	r1, [r6, #102]	; 0x66
 8024ea8:	1864      	adds	r4, r4, r1
 8024eaa:	f886 4066 	strb.w	r4, [r6, #102]	; 0x66
 8024eae:	f380 8810 	msr	PRIMASK, r0

08024eb2 <??ACL_PM_Compact_0>:
 8024eb2:	bdf1      	pop	{r0, r4, r5, r6, r7, pc}

08024eb4 <??DataTable7>:
 8024eb4:	36e8 2000                                   .6. 

08024eb8 <??DataTable7_1>:
 8024eb8:	3710 2000                                   .7. 

08024ebc <??DataTable7_2>:
 8024ebc:	377c 2000                                   |7. 

08024ec0 <??DataTable7_3>:
 8024ec0:	3779 2000                                   y7. 

08024ec4 <CList_Insert>:
 8024ec4:	6008      	str	r0, [r1, #0]
 8024ec6:	6842      	ldr	r2, [r0, #4]
 8024ec8:	604a      	str	r2, [r1, #4]
 8024eca:	6843      	ldr	r3, [r0, #4]
 8024ecc:	6019      	str	r1, [r3, #0]
 8024ece:	6041      	str	r1, [r0, #4]
 8024ed0:	4770      	bx	lr

08024ed2 <CList_Remove_Head>:
 8024ed2:	6802      	ldr	r2, [r0, #0]
 8024ed4:	600a      	str	r2, [r1, #0]
 8024ed6:	6812      	ldr	r2, [r2, #0]
 8024ed8:	6002      	str	r2, [r0, #0]
 8024eda:	680b      	ldr	r3, [r1, #0]
 8024edc:	f8d3 c000 	ldr.w	ip, [r3]
 8024ee0:	f8cc 0004 	str.w	r0, [ip, #4]
 8024ee4:	680a      	ldr	r2, [r1, #0]
 8024ee6:	2000      	movs	r0, #0
 8024ee8:	6010      	str	r0, [r2, #0]
 8024eea:	6809      	ldr	r1, [r1, #0]
 8024eec:	6048      	str	r0, [r1, #4]
 8024eee:	4770      	bx	lr

08024ef0 <CList_Get_Head>:
 8024ef0:	b100      	cbz	r0, 8024ef4 <??CList_Get_Head_0>
 8024ef2:	6800      	ldr	r0, [r0, #0]

08024ef4 <??CList_Get_Head_0>:
 8024ef4:	4770      	bx	lr

08024ef6 <CList_Node_Present>:
 8024ef6:	6802      	ldr	r2, [r0, #0]
 8024ef8:	e000      	b.n	8024efc <??CList_Node_Present_0>

08024efa <??CList_Node_Present_1>:
 8024efa:	6812      	ldr	r2, [r2, #0]

08024efc <??CList_Node_Present_0>:
 8024efc:	4282      	cmp	r2, r0
 8024efe:	d003      	beq.n	8024f08 <??CList_Node_Present_2>
 8024f00:	428a      	cmp	r2, r1
 8024f02:	d1fa      	bne.n	8024efa <??CList_Node_Present_1>
 8024f04:	2001      	movs	r0, #1
 8024f06:	4770      	bx	lr

08024f08 <??CList_Node_Present_2>:
 8024f08:	2000      	movs	r0, #0
 8024f0a:	4770      	bx	lr

08024f0c <CList_Remove_Node>:
 8024f0c:	6802      	ldr	r2, [r0, #0]
 8024f0e:	e000      	b.n	8024f12 <??CList_Remove_Node_0>

08024f10 <??CList_Remove_Node_1>:
 8024f10:	6812      	ldr	r2, [r2, #0]

08024f12 <??CList_Remove_Node_0>:
 8024f12:	4282      	cmp	r2, r0
 8024f14:	d00a      	beq.n	8024f2c <??CList_Remove_Node_2>
 8024f16:	428a      	cmp	r2, r1
 8024f18:	d1fa      	bne.n	8024f10 <??CList_Remove_Node_1>
 8024f1a:	6808      	ldr	r0, [r1, #0]
 8024f1c:	684a      	ldr	r2, [r1, #4]
 8024f1e:	6010      	str	r0, [r2, #0]
 8024f20:	6848      	ldr	r0, [r1, #4]
 8024f22:	680b      	ldr	r3, [r1, #0]
 8024f24:	2200      	movs	r2, #0
 8024f26:	6058      	str	r0, [r3, #4]
 8024f28:	600a      	str	r2, [r1, #0]
 8024f2a:	604a      	str	r2, [r1, #4]

08024f2c <??CList_Remove_Node_2>:
 8024f2c:	4770      	bx	lr

08024f2e <CList_Get_Size>:
 8024f2e:	6802      	ldr	r2, [r0, #0]
 8024f30:	2300      	movs	r3, #0
 8024f32:	e001      	b.n	8024f38 <??CList_Get_Size_0>

08024f34 <??CList_Get_Size_1>:
 8024f34:	6812      	ldr	r2, [r2, #0]
 8024f36:	1c5b      	adds	r3, r3, #1

08024f38 <??CList_Get_Size_0>:
 8024f38:	4282      	cmp	r2, r0
 8024f3a:	d1fb      	bne.n	8024f34 <??CList_Get_Size_1>
 8024f3c:	800b      	strh	r3, [r1, #0]
 8024f3e:	4770      	bx	lr

08024f40 <GAP_Advertising_Report_Handler>:
 8024f40:	b430      	push	{r4, r5}
 8024f42:	4b17      	ldr	r3, [pc, #92]	; (8024fa0 <??GAP_Advertising_Report_Handler_0>)
 8024f44:	f893 3172 	ldrb.w	r3, [r3, #370]	; 0x172
 8024f48:	f013 0fb3 	tst.w	r3, #179	; 0xb3
 8024f4c:	d021      	beq.n	8024f92 <??GAP_Advertising_Report_Handler_1>
 8024f4e:	f013 0f03 	tst.w	r3, #3
 8024f52:	bf18      	it	ne
 8024f54:	2804      	cmpne	r0, #4
 8024f56:	d01f      	beq.n	8024f98 <??GAP_Advertising_Report_Handler_2>
 8024f58:	2400      	movs	r4, #0
 8024f5a:	e000      	b.n	8024f5e <??GAP_Advertising_Report_Handler_3>

08024f5c <??GAP_Advertising_Report_Handler_4>:
 8024f5c:	1904      	adds	r4, r0, r4

08024f5e <??GAP_Advertising_Report_Handler_3>:
 8024f5e:	428c      	cmp	r4, r1
 8024f60:	d217      	bcs.n	8024f92 <??GAP_Advertising_Report_Handler_1>
 8024f62:	5d10      	ldrb	r0, [r2, r4]
 8024f64:	b1a8      	cbz	r0, 8024f92 <??GAP_Advertising_Report_Handler_1>
 8024f66:	1c64      	adds	r4, r4, #1
 8024f68:	5d15      	ldrb	r5, [r2, r4]
 8024f6a:	2d01      	cmp	r5, #1
 8024f6c:	d1f6      	bne.n	8024f5c <??GAP_Advertising_Report_Handler_4>
 8024f6e:	1c64      	adds	r4, r4, #1
 8024f70:	07d8      	lsls	r0, r3, #31
 8024f72:	d503      	bpl.n	8024f7c <??GAP_Advertising_Report_Handler_5>
 8024f74:	5d11      	ldrb	r1, [r2, r4]
 8024f76:	f001 0101 	and.w	r1, r1, #1
 8024f7a:	e004      	b.n	8024f86 <??GAP_Advertising_Report_Handler_6>

08024f7c <??GAP_Advertising_Report_Handler_5>:
 8024f7c:	0798      	lsls	r0, r3, #30
 8024f7e:	d508      	bpl.n	8024f92 <??GAP_Advertising_Report_Handler_1>
 8024f80:	5d11      	ldrb	r1, [r2, r4]
 8024f82:	f001 0103 	and.w	r1, r1, #3

08024f86 <??GAP_Advertising_Report_Handler_6>:
 8024f86:	1e48      	subs	r0, r1, #1
 8024f88:	4180      	sbcs	r0, r0
 8024f8a:	43c0      	mvns	r0, r0
 8024f8c:	0fc0      	lsrs	r0, r0, #31
 8024f8e:	bc30      	pop	{r4, r5}
 8024f90:	4770      	bx	lr

08024f92 <??GAP_Advertising_Report_Handler_1>:
 8024f92:	2000      	movs	r0, #0
 8024f94:	bc30      	pop	{r4, r5}
 8024f96:	4770      	bx	lr

08024f98 <??GAP_Advertising_Report_Handler_2>:
 8024f98:	2001      	movs	r0, #1
 8024f9a:	bc30      	pop	{r4, r5}
 8024f9c:	4770      	bx	lr
 8024f9e:	bf00      	nop

08024fa0 <??GAP_Advertising_Report_Handler_0>:
 8024fa0:	3710 2000                                   .7. 

08024fa4 <__aeabi_memset>:
 8024fa4:	b470      	push	{r4, r5, r6}
 8024fa6:	0784      	lsls	r4, r0, #30
 8024fa8:	d046      	beq.n	8025038 <__aeabi_memset+0x94>
 8024faa:	1e4c      	subs	r4, r1, #1
 8024fac:	2900      	cmp	r1, #0
 8024fae:	d041      	beq.n	8025034 <__aeabi_memset+0x90>
 8024fb0:	b2d5      	uxtb	r5, r2
 8024fb2:	4603      	mov	r3, r0
 8024fb4:	e002      	b.n	8024fbc <__aeabi_memset+0x18>
 8024fb6:	1e61      	subs	r1, r4, #1
 8024fb8:	b3e4      	cbz	r4, 8025034 <__aeabi_memset+0x90>
 8024fba:	460c      	mov	r4, r1
 8024fbc:	f803 5b01 	strb.w	r5, [r3], #1
 8024fc0:	0799      	lsls	r1, r3, #30
 8024fc2:	d1f8      	bne.n	8024fb6 <__aeabi_memset+0x12>
 8024fc4:	2c03      	cmp	r4, #3
 8024fc6:	d92e      	bls.n	8025026 <__aeabi_memset+0x82>
 8024fc8:	b2d5      	uxtb	r5, r2
 8024fca:	ea45 2505 	orr.w	r5, r5, r5, lsl #8
 8024fce:	2c0f      	cmp	r4, #15
 8024fd0:	ea45 4505 	orr.w	r5, r5, r5, lsl #16
 8024fd4:	d919      	bls.n	802500a <__aeabi_memset+0x66>
 8024fd6:	4626      	mov	r6, r4
 8024fd8:	f103 0110 	add.w	r1, r3, #16
 8024fdc:	3e10      	subs	r6, #16
 8024fde:	2e0f      	cmp	r6, #15
 8024fe0:	f841 5c10 	str.w	r5, [r1, #-16]
 8024fe4:	f841 5c0c 	str.w	r5, [r1, #-12]
 8024fe8:	f841 5c08 	str.w	r5, [r1, #-8]
 8024fec:	f841 5c04 	str.w	r5, [r1, #-4]
 8024ff0:	f101 0110 	add.w	r1, r1, #16
 8024ff4:	d8f2      	bhi.n	8024fdc <__aeabi_memset+0x38>
 8024ff6:	f1a4 0110 	sub.w	r1, r4, #16
 8024ffa:	f021 010f 	bic.w	r1, r1, #15
 8024ffe:	f004 040f 	and.w	r4, r4, #15
 8025002:	3110      	adds	r1, #16
 8025004:	2c03      	cmp	r4, #3
 8025006:	440b      	add	r3, r1
 8025008:	d90d      	bls.n	8025026 <__aeabi_memset+0x82>
 802500a:	461e      	mov	r6, r3
 802500c:	4621      	mov	r1, r4
 802500e:	3904      	subs	r1, #4
 8025010:	2903      	cmp	r1, #3
 8025012:	f846 5b04 	str.w	r5, [r6], #4
 8025016:	d8fa      	bhi.n	802500e <__aeabi_memset+0x6a>
 8025018:	1f21      	subs	r1, r4, #4
 802501a:	f021 0103 	bic.w	r1, r1, #3
 802501e:	3104      	adds	r1, #4
 8025020:	440b      	add	r3, r1
 8025022:	f004 0403 	and.w	r4, r4, #3
 8025026:	b12c      	cbz	r4, 8025034 <__aeabi_memset+0x90>
 8025028:	b2d2      	uxtb	r2, r2
 802502a:	441c      	add	r4, r3
 802502c:	f803 2b01 	strb.w	r2, [r3], #1
 8025030:	42a3      	cmp	r3, r4
 8025032:	d1fb      	bne.n	802502c <__aeabi_memset+0x88>
 8025034:	bc70      	pop	{r4, r5, r6}
 8025036:	4770      	bx	lr
 8025038:	460c      	mov	r4, r1
 802503a:	4603      	mov	r3, r0
 802503c:	e7c2      	b.n	8024fc4 <__aeabi_memset+0x20>

0802503e <strcmp>:
 802503e:	f810 2b01 	ldrb.w	r2, [r0], #1
 8025042:	f811 3b01 	ldrb.w	r3, [r1], #1
 8025046:	2a01      	cmp	r2, #1
 8025048:	bf28      	it	cs
 802504a:	429a      	cmpcs	r2, r3
 802504c:	d0f7      	beq.n	802503e <strcmp>
 802504e:	1ad0      	subs	r0, r2, r3
 8025050:	4770      	bx	lr
	...

08025054 <__aeabi_dmul>:
 8025054:	b570      	push	{r4, r5, r6, lr}
 8025056:	f04f 0cff 	mov.w	ip, #255	; 0xff
 802505a:	f44c 6ce0 	orr.w	ip, ip, #1792	; 0x700
 802505e:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
 8025062:	bf1d      	ittte	ne
 8025064:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
 8025068:	ea94 0f0c 	teqne	r4, ip
 802506c:	ea95 0f0c 	teqne	r5, ip
 8025070:	f000 f8de 	bleq	8025230 <__aeabi_dmul+0x1dc>
 8025074:	442c      	add	r4, r5
 8025076:	ea81 0603 	eor.w	r6, r1, r3
 802507a:	ea21 514c 	bic.w	r1, r1, ip, lsl #21
 802507e:	ea23 534c 	bic.w	r3, r3, ip, lsl #21
 8025082:	ea50 3501 	orrs.w	r5, r0, r1, lsl #12
 8025086:	bf18      	it	ne
 8025088:	ea52 3503 	orrsne.w	r5, r2, r3, lsl #12
 802508c:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
 8025090:	f443 1380 	orr.w	r3, r3, #1048576	; 0x100000
 8025094:	d038      	beq.n	8025108 <__aeabi_dmul+0xb4>
 8025096:	fba0 ce02 	umull	ip, lr, r0, r2
 802509a:	f04f 0500 	mov.w	r5, #0
 802509e:	fbe1 e502 	umlal	lr, r5, r1, r2
 80250a2:	f006 4200 	and.w	r2, r6, #2147483648	; 0x80000000
 80250a6:	fbe0 e503 	umlal	lr, r5, r0, r3
 80250aa:	f04f 0600 	mov.w	r6, #0
 80250ae:	fbe1 5603 	umlal	r5, r6, r1, r3
 80250b2:	f09c 0f00 	teq	ip, #0
 80250b6:	bf18      	it	ne
 80250b8:	f04e 0e01 	orrne.w	lr, lr, #1
 80250bc:	f1a4 04ff 	sub.w	r4, r4, #255	; 0xff
 80250c0:	f5b6 7f00 	cmp.w	r6, #512	; 0x200
 80250c4:	f564 7440 	sbc.w	r4, r4, #768	; 0x300
 80250c8:	d204      	bcs.n	80250d4 <__aeabi_dmul+0x80>
 80250ca:	ea5f 0e4e 	movs.w	lr, lr, lsl #1
 80250ce:	416d      	adcs	r5, r5
 80250d0:	eb46 0606 	adc.w	r6, r6, r6
 80250d4:	ea42 21c6 	orr.w	r1, r2, r6, lsl #11
 80250d8:	ea41 5155 	orr.w	r1, r1, r5, lsr #21
 80250dc:	ea4f 20c5 	mov.w	r0, r5, lsl #11
 80250e0:	ea40 505e 	orr.w	r0, r0, lr, lsr #21
 80250e4:	ea4f 2ece 	mov.w	lr, lr, lsl #11
 80250e8:	f1b4 0cfd 	subs.w	ip, r4, #253	; 0xfd
 80250ec:	bf88      	it	hi
 80250ee:	f5bc 6fe0 	cmphi.w	ip, #1792	; 0x700
 80250f2:	d81e      	bhi.n	8025132 <__aeabi_dmul+0xde>
 80250f4:	f1be 4f00 	cmp.w	lr, #2147483648	; 0x80000000
 80250f8:	bf08      	it	eq
 80250fa:	ea5f 0e50 	movseq.w	lr, r0, lsr #1
 80250fe:	f150 0000 	adcs.w	r0, r0, #0
 8025102:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 8025106:	bd70      	pop	{r4, r5, r6, pc}
 8025108:	f006 4600 	and.w	r6, r6, #2147483648	; 0x80000000
 802510c:	ea46 0101 	orr.w	r1, r6, r1
 8025110:	ea40 0002 	orr.w	r0, r0, r2
 8025114:	ea81 0103 	eor.w	r1, r1, r3
 8025118:	ebb4 045c 	subs.w	r4, r4, ip, lsr #1
 802511c:	bfc2      	ittt	gt
 802511e:	ebd4 050c 	rsbsgt	r5, r4, ip
 8025122:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
 8025126:	bd70      	popgt	{r4, r5, r6, pc}
 8025128:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
 802512c:	f04f 0e00 	mov.w	lr, #0
 8025130:	3c01      	subs	r4, #1
 8025132:	f300 80ab 	bgt.w	802528c <__aeabi_dmul+0x238>
 8025136:	f114 0f36 	cmn.w	r4, #54	; 0x36
 802513a:	bfde      	ittt	le
 802513c:	2000      	movle	r0, #0
 802513e:	f001 4100 	andle.w	r1, r1, #2147483648	; 0x80000000
 8025142:	bd70      	pople	{r4, r5, r6, pc}
 8025144:	f1c4 0400 	rsb	r4, r4, #0
 8025148:	3c20      	subs	r4, #32
 802514a:	da35      	bge.n	80251b8 <__aeabi_dmul+0x164>
 802514c:	340c      	adds	r4, #12
 802514e:	dc1b      	bgt.n	8025188 <__aeabi_dmul+0x134>
 8025150:	f104 0414 	add.w	r4, r4, #20
 8025154:	f1c4 0520 	rsb	r5, r4, #32
 8025158:	fa00 f305 	lsl.w	r3, r0, r5
 802515c:	fa20 f004 	lsr.w	r0, r0, r4
 8025160:	fa01 f205 	lsl.w	r2, r1, r5
 8025164:	ea40 0002 	orr.w	r0, r0, r2
 8025168:	f001 4200 	and.w	r2, r1, #2147483648	; 0x80000000
 802516c:	f021 4100 	bic.w	r1, r1, #2147483648	; 0x80000000
 8025170:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
 8025174:	fa21 f604 	lsr.w	r6, r1, r4
 8025178:	eb42 0106 	adc.w	r1, r2, r6
 802517c:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 8025180:	bf08      	it	eq
 8025182:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 8025186:	bd70      	pop	{r4, r5, r6, pc}
 8025188:	f1c4 040c 	rsb	r4, r4, #12
 802518c:	f1c4 0520 	rsb	r5, r4, #32
 8025190:	fa00 f304 	lsl.w	r3, r0, r4
 8025194:	fa20 f005 	lsr.w	r0, r0, r5
 8025198:	fa01 f204 	lsl.w	r2, r1, r4
 802519c:	ea40 0002 	orr.w	r0, r0, r2
 80251a0:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 80251a4:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
 80251a8:	f141 0100 	adc.w	r1, r1, #0
 80251ac:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 80251b0:	bf08      	it	eq
 80251b2:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 80251b6:	bd70      	pop	{r4, r5, r6, pc}
 80251b8:	f1c4 0520 	rsb	r5, r4, #32
 80251bc:	fa00 f205 	lsl.w	r2, r0, r5
 80251c0:	ea4e 0e02 	orr.w	lr, lr, r2
 80251c4:	fa20 f304 	lsr.w	r3, r0, r4
 80251c8:	fa01 f205 	lsl.w	r2, r1, r5
 80251cc:	ea43 0302 	orr.w	r3, r3, r2
 80251d0:	fa21 f004 	lsr.w	r0, r1, r4
 80251d4:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 80251d8:	fa21 f204 	lsr.w	r2, r1, r4
 80251dc:	ea20 0002 	bic.w	r0, r0, r2
 80251e0:	eb00 70d3 	add.w	r0, r0, r3, lsr #31
 80251e4:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 80251e8:	bf08      	it	eq
 80251ea:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 80251ee:	bd70      	pop	{r4, r5, r6, pc}
 80251f0:	f094 0f00 	teq	r4, #0
 80251f4:	d10f      	bne.n	8025216 <__aeabi_dmul+0x1c2>
 80251f6:	f001 4600 	and.w	r6, r1, #2147483648	; 0x80000000
 80251fa:	0040      	lsls	r0, r0, #1
 80251fc:	eb41 0101 	adc.w	r1, r1, r1
 8025200:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
 8025204:	bf08      	it	eq
 8025206:	3c01      	subeq	r4, #1
 8025208:	d0f7      	beq.n	80251fa <__aeabi_dmul+0x1a6>
 802520a:	ea41 0106 	orr.w	r1, r1, r6
 802520e:	f095 0f00 	teq	r5, #0
 8025212:	bf18      	it	ne
 8025214:	4770      	bxne	lr
 8025216:	f003 4600 	and.w	r6, r3, #2147483648	; 0x80000000
 802521a:	0052      	lsls	r2, r2, #1
 802521c:	eb43 0303 	adc.w	r3, r3, r3
 8025220:	f413 1f80 	tst.w	r3, #1048576	; 0x100000
 8025224:	bf08      	it	eq
 8025226:	3d01      	subeq	r5, #1
 8025228:	d0f7      	beq.n	802521a <__aeabi_dmul+0x1c6>
 802522a:	ea43 0306 	orr.w	r3, r3, r6
 802522e:	4770      	bx	lr
 8025230:	ea94 0f0c 	teq	r4, ip
 8025234:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
 8025238:	bf18      	it	ne
 802523a:	ea95 0f0c 	teqne	r5, ip
 802523e:	d00c      	beq.n	802525a <__aeabi_dmul+0x206>
 8025240:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 8025244:	bf18      	it	ne
 8025246:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 802524a:	d1d1      	bne.n	80251f0 <__aeabi_dmul+0x19c>
 802524c:	ea81 0103 	eor.w	r1, r1, r3
 8025250:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 8025254:	f04f 0000 	mov.w	r0, #0
 8025258:	bd70      	pop	{r4, r5, r6, pc}
 802525a:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 802525e:	bf06      	itte	eq
 8025260:	4610      	moveq	r0, r2
 8025262:	4619      	moveq	r1, r3
 8025264:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 8025268:	d019      	beq.n	802529e <__aeabi_dmul+0x24a>
 802526a:	ea94 0f0c 	teq	r4, ip
 802526e:	d102      	bne.n	8025276 <__aeabi_dmul+0x222>
 8025270:	ea50 3601 	orrs.w	r6, r0, r1, lsl #12
 8025274:	d113      	bne.n	802529e <__aeabi_dmul+0x24a>
 8025276:	ea95 0f0c 	teq	r5, ip
 802527a:	d105      	bne.n	8025288 <__aeabi_dmul+0x234>
 802527c:	ea52 3603 	orrs.w	r6, r2, r3, lsl #12
 8025280:	bf1c      	itt	ne
 8025282:	4610      	movne	r0, r2
 8025284:	4619      	movne	r1, r3
 8025286:	d10a      	bne.n	802529e <__aeabi_dmul+0x24a>
 8025288:	ea81 0103 	eor.w	r1, r1, r3
 802528c:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 8025290:	f041 41fe 	orr.w	r1, r1, #2130706432	; 0x7f000000
 8025294:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
 8025298:	f04f 0000 	mov.w	r0, #0
 802529c:	bd70      	pop	{r4, r5, r6, pc}
 802529e:	f041 41fe 	orr.w	r1, r1, #2130706432	; 0x7f000000
 80252a2:	f441 0178 	orr.w	r1, r1, #16252928	; 0xf80000
 80252a6:	bd70      	pop	{r4, r5, r6, pc}

080252a8 <__aeabi_llsl>:
 80252a8:	4091      	lsls	r1, r2
 80252aa:	0003      	movs	r3, r0
 80252ac:	4090      	lsls	r0, r2
 80252ae:	469c      	mov	ip, r3
 80252b0:	3a20      	subs	r2, #32
 80252b2:	4093      	lsls	r3, r2
 80252b4:	4319      	orrs	r1, r3
 80252b6:	4252      	negs	r2, r2
 80252b8:	4663      	mov	r3, ip
 80252ba:	40d3      	lsrs	r3, r2
 80252bc:	4319      	orrs	r1, r3
 80252be:	4770      	bx	lr

080252c0 <__aeabi_drsub>:
 80252c0:	f081 4100 	eor.w	r1, r1, #2147483648	; 0x80000000
 80252c4:	e002      	b.n	80252cc <__adddf3>
 80252c6:	bf00      	nop

080252c8 <__aeabi_dsub>:
 80252c8:	f083 4300 	eor.w	r3, r3, #2147483648	; 0x80000000

080252cc <__adddf3>:
 80252cc:	b530      	push	{r4, r5, lr}
 80252ce:	ea4f 0441 	mov.w	r4, r1, lsl #1
 80252d2:	ea4f 0543 	mov.w	r5, r3, lsl #1
 80252d6:	ea94 0f05 	teq	r4, r5
 80252da:	bf08      	it	eq
 80252dc:	ea90 0f02 	teqeq	r0, r2
 80252e0:	bf1f      	itttt	ne
 80252e2:	ea54 0c00 	orrsne.w	ip, r4, r0
 80252e6:	ea55 0c02 	orrsne.w	ip, r5, r2
 80252ea:	ea7f 5c64 	mvnsne.w	ip, r4, asr #21
 80252ee:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
 80252f2:	f000 80e2 	beq.w	80254ba <__adddf3+0x1ee>
 80252f6:	ea4f 5454 	mov.w	r4, r4, lsr #21
 80252fa:	ebd4 5555 	rsbs	r5, r4, r5, lsr #21
 80252fe:	bfb8      	it	lt
 8025300:	426d      	neglt	r5, r5
 8025302:	dd0c      	ble.n	802531e <__adddf3+0x52>
 8025304:	442c      	add	r4, r5
 8025306:	ea80 0202 	eor.w	r2, r0, r2
 802530a:	ea81 0303 	eor.w	r3, r1, r3
 802530e:	ea82 0000 	eor.w	r0, r2, r0
 8025312:	ea83 0101 	eor.w	r1, r3, r1
 8025316:	ea80 0202 	eor.w	r2, r0, r2
 802531a:	ea81 0303 	eor.w	r3, r1, r3
 802531e:	2d36      	cmp	r5, #54	; 0x36
 8025320:	bf88      	it	hi
 8025322:	bd30      	pophi	{r4, r5, pc}
 8025324:	f011 4f00 	tst.w	r1, #2147483648	; 0x80000000
 8025328:	ea4f 3101 	mov.w	r1, r1, lsl #12
 802532c:	f44f 1c80 	mov.w	ip, #1048576	; 0x100000
 8025330:	ea4c 3111 	orr.w	r1, ip, r1, lsr #12
 8025334:	d002      	beq.n	802533c <__adddf3+0x70>
 8025336:	4240      	negs	r0, r0
 8025338:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 802533c:	f013 4f00 	tst.w	r3, #2147483648	; 0x80000000
 8025340:	ea4f 3303 	mov.w	r3, r3, lsl #12
 8025344:	ea4c 3313 	orr.w	r3, ip, r3, lsr #12
 8025348:	d002      	beq.n	8025350 <__adddf3+0x84>
 802534a:	4252      	negs	r2, r2
 802534c:	eb63 0343 	sbc.w	r3, r3, r3, lsl #1
 8025350:	ea94 0f05 	teq	r4, r5
 8025354:	f000 80a7 	beq.w	80254a6 <__adddf3+0x1da>
 8025358:	f1a4 0401 	sub.w	r4, r4, #1
 802535c:	f1d5 0e20 	rsbs	lr, r5, #32
 8025360:	db0d      	blt.n	802537e <__adddf3+0xb2>
 8025362:	fa02 fc0e 	lsl.w	ip, r2, lr
 8025366:	fa22 f205 	lsr.w	r2, r2, r5
 802536a:	1880      	adds	r0, r0, r2
 802536c:	f141 0100 	adc.w	r1, r1, #0
 8025370:	fa03 f20e 	lsl.w	r2, r3, lr
 8025374:	1880      	adds	r0, r0, r2
 8025376:	fa43 f305 	asr.w	r3, r3, r5
 802537a:	4159      	adcs	r1, r3
 802537c:	e00e      	b.n	802539c <__adddf3+0xd0>
 802537e:	f1a5 0520 	sub.w	r5, r5, #32
 8025382:	f10e 0e20 	add.w	lr, lr, #32
 8025386:	2a01      	cmp	r2, #1
 8025388:	fa03 fc0e 	lsl.w	ip, r3, lr
 802538c:	bf28      	it	cs
 802538e:	f04c 0c02 	orrcs.w	ip, ip, #2
 8025392:	fa43 f305 	asr.w	r3, r3, r5
 8025396:	18c0      	adds	r0, r0, r3
 8025398:	eb51 71e3 	adcs.w	r1, r1, r3, asr #31
 802539c:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
 80253a0:	d507      	bpl.n	80253b2 <__adddf3+0xe6>
 80253a2:	f04f 0e00 	mov.w	lr, #0
 80253a6:	f1dc 0c00 	rsbs	ip, ip, #0
 80253aa:	eb7e 0000 	sbcs.w	r0, lr, r0
 80253ae:	eb6e 0101 	sbc.w	r1, lr, r1
 80253b2:	f5b1 1f80 	cmp.w	r1, #1048576	; 0x100000
 80253b6:	d31b      	bcc.n	80253f0 <__adddf3+0x124>
 80253b8:	f5b1 1f00 	cmp.w	r1, #2097152	; 0x200000
 80253bc:	d30c      	bcc.n	80253d8 <__adddf3+0x10c>
 80253be:	0849      	lsrs	r1, r1, #1
 80253c0:	ea5f 0030 	movs.w	r0, r0, rrx
 80253c4:	ea4f 0c3c 	mov.w	ip, ip, rrx
 80253c8:	f104 0401 	add.w	r4, r4, #1
 80253cc:	ea4f 5244 	mov.w	r2, r4, lsl #21
 80253d0:	f512 0f80 	cmn.w	r2, #4194304	; 0x400000
 80253d4:	f080 809a 	bcs.w	802550c <__adddf3+0x240>
 80253d8:	f1bc 4f00 	cmp.w	ip, #2147483648	; 0x80000000
 80253dc:	bf08      	it	eq
 80253de:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
 80253e2:	f150 0000 	adcs.w	r0, r0, #0
 80253e6:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 80253ea:	ea41 0105 	orr.w	r1, r1, r5
 80253ee:	bd30      	pop	{r4, r5, pc}
 80253f0:	ea5f 0c4c 	movs.w	ip, ip, lsl #1
 80253f4:	4140      	adcs	r0, r0
 80253f6:	eb41 0101 	adc.w	r1, r1, r1
 80253fa:	3c01      	subs	r4, #1
 80253fc:	bf28      	it	cs
 80253fe:	f5b1 1f80 	cmpcs.w	r1, #1048576	; 0x100000
 8025402:	d2e9      	bcs.n	80253d8 <__adddf3+0x10c>
 8025404:	f091 0f00 	teq	r1, #0
 8025408:	bf04      	itt	eq
 802540a:	4601      	moveq	r1, r0
 802540c:	2000      	moveq	r0, #0
 802540e:	fab1 f381 	clz	r3, r1
 8025412:	bf08      	it	eq
 8025414:	3320      	addeq	r3, #32
 8025416:	f1a3 030b 	sub.w	r3, r3, #11
 802541a:	f1b3 0220 	subs.w	r2, r3, #32
 802541e:	da0c      	bge.n	802543a <__adddf3+0x16e>
 8025420:	320c      	adds	r2, #12
 8025422:	dd08      	ble.n	8025436 <__adddf3+0x16a>
 8025424:	f102 0c14 	add.w	ip, r2, #20
 8025428:	f1c2 020c 	rsb	r2, r2, #12
 802542c:	fa01 f00c 	lsl.w	r0, r1, ip
 8025430:	fa21 f102 	lsr.w	r1, r1, r2
 8025434:	e00c      	b.n	8025450 <__adddf3+0x184>
 8025436:	f102 0214 	add.w	r2, r2, #20
 802543a:	bfd8      	it	le
 802543c:	f1c2 0c20 	rsble	ip, r2, #32
 8025440:	fa01 f102 	lsl.w	r1, r1, r2
 8025444:	fa20 fc0c 	lsr.w	ip, r0, ip
 8025448:	bfdc      	itt	le
 802544a:	ea41 010c 	orrle.w	r1, r1, ip
 802544e:	4090      	lslle	r0, r2
 8025450:	1ae4      	subs	r4, r4, r3
 8025452:	bfa2      	ittt	ge
 8025454:	eb01 5104 	addge.w	r1, r1, r4, lsl #20
 8025458:	4329      	orrge	r1, r5
 802545a:	bd30      	popge	{r4, r5, pc}
 802545c:	ea6f 0404 	mvn.w	r4, r4
 8025460:	3c1f      	subs	r4, #31
 8025462:	da1c      	bge.n	802549e <__adddf3+0x1d2>
 8025464:	340c      	adds	r4, #12
 8025466:	dc0e      	bgt.n	8025486 <__adddf3+0x1ba>
 8025468:	f104 0414 	add.w	r4, r4, #20
 802546c:	f1c4 0220 	rsb	r2, r4, #32
 8025470:	fa20 f004 	lsr.w	r0, r0, r4
 8025474:	fa01 f302 	lsl.w	r3, r1, r2
 8025478:	ea40 0003 	orr.w	r0, r0, r3
 802547c:	fa21 f304 	lsr.w	r3, r1, r4
 8025480:	ea45 0103 	orr.w	r1, r5, r3
 8025484:	bd30      	pop	{r4, r5, pc}
 8025486:	f1c4 040c 	rsb	r4, r4, #12
 802548a:	f1c4 0220 	rsb	r2, r4, #32
 802548e:	fa20 f002 	lsr.w	r0, r0, r2
 8025492:	fa01 f304 	lsl.w	r3, r1, r4
 8025496:	ea40 0003 	orr.w	r0, r0, r3
 802549a:	4629      	mov	r1, r5
 802549c:	bd30      	pop	{r4, r5, pc}
 802549e:	fa21 f004 	lsr.w	r0, r1, r4
 80254a2:	4629      	mov	r1, r5
 80254a4:	bd30      	pop	{r4, r5, pc}
 80254a6:	f094 0f00 	teq	r4, #0
 80254aa:	f483 1380 	eor.w	r3, r3, #1048576	; 0x100000
 80254ae:	bf06      	itte	eq
 80254b0:	f481 1180 	eoreq.w	r1, r1, #1048576	; 0x100000
 80254b4:	3401      	addeq	r4, #1
 80254b6:	3d01      	subne	r5, #1
 80254b8:	e74e      	b.n	8025358 <__adddf3+0x8c>
 80254ba:	ea7f 5c64 	mvns.w	ip, r4, asr #21
 80254be:	bf18      	it	ne
 80254c0:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
 80254c4:	d029      	beq.n	802551a <__adddf3+0x24e>
 80254c6:	ea94 0f05 	teq	r4, r5
 80254ca:	bf08      	it	eq
 80254cc:	ea90 0f02 	teqeq	r0, r2
 80254d0:	d005      	beq.n	80254de <__adddf3+0x212>
 80254d2:	ea54 0c00 	orrs.w	ip, r4, r0
 80254d6:	bf04      	itt	eq
 80254d8:	4619      	moveq	r1, r3
 80254da:	4610      	moveq	r0, r2
 80254dc:	bd30      	pop	{r4, r5, pc}
 80254de:	ea91 0f03 	teq	r1, r3
 80254e2:	bf1e      	ittt	ne
 80254e4:	2100      	movne	r1, #0
 80254e6:	2000      	movne	r0, #0
 80254e8:	bd30      	popne	{r4, r5, pc}
 80254ea:	ea5f 5c54 	movs.w	ip, r4, lsr #21
 80254ee:	d105      	bne.n	80254fc <__adddf3+0x230>
 80254f0:	0040      	lsls	r0, r0, #1
 80254f2:	4149      	adcs	r1, r1
 80254f4:	bf28      	it	cs
 80254f6:	f041 4100 	orrcs.w	r1, r1, #2147483648	; 0x80000000
 80254fa:	bd30      	pop	{r4, r5, pc}
 80254fc:	f514 0480 	adds.w	r4, r4, #4194304	; 0x400000
 8025500:	bf3c      	itt	cc
 8025502:	f501 1180 	addcc.w	r1, r1, #1048576	; 0x100000
 8025506:	bd30      	popcc	{r4, r5, pc}
 8025508:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
 802550c:	f045 41fe 	orr.w	r1, r5, #2130706432	; 0x7f000000
 8025510:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
 8025514:	f04f 0000 	mov.w	r0, #0
 8025518:	bd30      	pop	{r4, r5, pc}
 802551a:	ea7f 5c64 	mvns.w	ip, r4, asr #21
 802551e:	bf1a      	itte	ne
 8025520:	4619      	movne	r1, r3
 8025522:	4610      	movne	r0, r2
 8025524:	ea7f 5c65 	mvnseq.w	ip, r5, asr #21
 8025528:	bf1c      	itt	ne
 802552a:	460b      	movne	r3, r1
 802552c:	4602      	movne	r2, r0
 802552e:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
 8025532:	bf06      	itte	eq
 8025534:	ea52 3503 	orrseq.w	r5, r2, r3, lsl #12
 8025538:	ea91 0f03 	teqeq	r1, r3
 802553c:	f441 2100 	orrne.w	r1, r1, #524288	; 0x80000
 8025540:	bd30      	pop	{r4, r5, pc}
 8025542:	bf00      	nop

08025544 <__aeabi_ui2d>:
 8025544:	f090 0f00 	teq	r0, #0
 8025548:	bf04      	itt	eq
 802554a:	2100      	moveq	r1, #0
 802554c:	4770      	bxeq	lr
 802554e:	b530      	push	{r4, r5, lr}
 8025550:	f44f 6480 	mov.w	r4, #1024	; 0x400
 8025554:	f104 0432 	add.w	r4, r4, #50	; 0x32
 8025558:	f04f 0500 	mov.w	r5, #0
 802555c:	f04f 0100 	mov.w	r1, #0
 8025560:	e750      	b.n	8025404 <__adddf3+0x138>
 8025562:	bf00      	nop

08025564 <__aeabi_i2d>:
 8025564:	f090 0f00 	teq	r0, #0
 8025568:	bf04      	itt	eq
 802556a:	2100      	moveq	r1, #0
 802556c:	4770      	bxeq	lr
 802556e:	b530      	push	{r4, r5, lr}
 8025570:	f44f 6480 	mov.w	r4, #1024	; 0x400
 8025574:	f104 0432 	add.w	r4, r4, #50	; 0x32
 8025578:	f010 4500 	ands.w	r5, r0, #2147483648	; 0x80000000
 802557c:	bf48      	it	mi
 802557e:	4240      	negmi	r0, r0
 8025580:	f04f 0100 	mov.w	r1, #0
 8025584:	e73e      	b.n	8025404 <__adddf3+0x138>
 8025586:	bf00      	nop

08025588 <__aeabi_f2d>:
 8025588:	0042      	lsls	r2, r0, #1
 802558a:	ea4f 01e2 	mov.w	r1, r2, asr #3
 802558e:	ea4f 0131 	mov.w	r1, r1, rrx
 8025592:	ea4f 7002 	mov.w	r0, r2, lsl #28
 8025596:	bf1f      	itttt	ne
 8025598:	f012 437f 	andsne.w	r3, r2, #4278190080	; 0xff000000
 802559c:	f093 4f7f 	teqne	r3, #4278190080	; 0xff000000
 80255a0:	f081 5160 	eorne.w	r1, r1, #939524096	; 0x38000000
 80255a4:	4770      	bxne	lr
 80255a6:	f032 427f 	bics.w	r2, r2, #4278190080	; 0xff000000
 80255aa:	bf08      	it	eq
 80255ac:	4770      	bxeq	lr
 80255ae:	f093 4f7f 	teq	r3, #4278190080	; 0xff000000
 80255b2:	bf04      	itt	eq
 80255b4:	f441 2100 	orreq.w	r1, r1, #524288	; 0x80000
 80255b8:	4770      	bxeq	lr
 80255ba:	b530      	push	{r4, r5, lr}
 80255bc:	f44f 7460 	mov.w	r4, #896	; 0x380
 80255c0:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
 80255c4:	f021 4100 	bic.w	r1, r1, #2147483648	; 0x80000000
 80255c8:	e71c      	b.n	8025404 <__adddf3+0x138>
 80255ca:	bf00      	nop

080255cc <__aeabi_ul2d>:
 80255cc:	ea50 0201 	orrs.w	r2, r0, r1
 80255d0:	bf08      	it	eq
 80255d2:	4770      	bxeq	lr
 80255d4:	b530      	push	{r4, r5, lr}
 80255d6:	f04f 0500 	mov.w	r5, #0
 80255da:	e00a      	b.n	80255f2 <__aeabi_l2d+0x16>

080255dc <__aeabi_l2d>:
 80255dc:	ea50 0201 	orrs.w	r2, r0, r1
 80255e0:	bf08      	it	eq
 80255e2:	4770      	bxeq	lr
 80255e4:	b530      	push	{r4, r5, lr}
 80255e6:	f011 4500 	ands.w	r5, r1, #2147483648	; 0x80000000
 80255ea:	d502      	bpl.n	80255f2 <__aeabi_l2d+0x16>
 80255ec:	4240      	negs	r0, r0
 80255ee:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 80255f2:	f44f 6480 	mov.w	r4, #1024	; 0x400
 80255f6:	f104 0432 	add.w	r4, r4, #50	; 0x32
 80255fa:	ea5f 5c91 	movs.w	ip, r1, lsr #22
 80255fe:	f43f aed8 	beq.w	80253b2 <__adddf3+0xe6>
 8025602:	f04f 0203 	mov.w	r2, #3
 8025606:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
 802560a:	bf18      	it	ne
 802560c:	3203      	addne	r2, #3
 802560e:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
 8025612:	bf18      	it	ne
 8025614:	3203      	addne	r2, #3
 8025616:	eb02 02dc 	add.w	r2, r2, ip, lsr #3
 802561a:	f1c2 0320 	rsb	r3, r2, #32
 802561e:	fa00 fc03 	lsl.w	ip, r0, r3
 8025622:	fa20 f002 	lsr.w	r0, r0, r2
 8025626:	fa01 fe03 	lsl.w	lr, r1, r3
 802562a:	ea40 000e 	orr.w	r0, r0, lr
 802562e:	fa21 f102 	lsr.w	r1, r1, r2
 8025632:	4414      	add	r4, r2
 8025634:	e6bd      	b.n	80253b2 <__adddf3+0xe6>
 8025636:	bf00      	nop

08025638 <__aeabi_uldivmod>:
 8025638:	b953      	cbnz	r3, 8025650 <__aeabi_uldivmod+0x18>
 802563a:	b94a      	cbnz	r2, 8025650 <__aeabi_uldivmod+0x18>
 802563c:	2900      	cmp	r1, #0
 802563e:	bf08      	it	eq
 8025640:	2800      	cmpeq	r0, #0
 8025642:	bf1c      	itt	ne
 8025644:	f04f 31ff 	movne.w	r1, #4294967295	; 0xffffffff
 8025648:	f04f 30ff 	movne.w	r0, #4294967295	; 0xffffffff
 802564c:	f000 b982 	b.w	8025954 <__aeabi_idiv0>
 8025650:	f1ad 0c08 	sub.w	ip, sp, #8
 8025654:	e96d ce04 	strd	ip, lr, [sp, #-16]!
 8025658:	f000 f806 	bl	8025668 <__udivmoddi4>
 802565c:	f8dd e004 	ldr.w	lr, [sp, #4]
 8025660:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 8025664:	b004      	add	sp, #16
 8025666:	4770      	bx	lr

08025668 <__udivmoddi4>:
 8025668:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 802566c:	9d09      	ldr	r5, [sp, #36]	; 0x24
 802566e:	4604      	mov	r4, r0
 8025670:	460f      	mov	r7, r1
 8025672:	2b00      	cmp	r3, #0
 8025674:	d148      	bne.n	8025708 <__udivmoddi4+0xa0>
 8025676:	428a      	cmp	r2, r1
 8025678:	4694      	mov	ip, r2
 802567a:	d961      	bls.n	8025740 <__udivmoddi4+0xd8>
 802567c:	fab2 f382 	clz	r3, r2
 8025680:	b143      	cbz	r3, 8025694 <__udivmoddi4+0x2c>
 8025682:	f1c3 0120 	rsb	r1, r3, #32
 8025686:	409f      	lsls	r7, r3
 8025688:	fa02 fc03 	lsl.w	ip, r2, r3
 802568c:	409c      	lsls	r4, r3
 802568e:	fa20 f101 	lsr.w	r1, r0, r1
 8025692:	430f      	orrs	r7, r1
 8025694:	ea4f 411c 	mov.w	r1, ip, lsr #16
 8025698:	fa1f fe8c 	uxth.w	lr, ip
 802569c:	0c22      	lsrs	r2, r4, #16
 802569e:	fbb7 f6f1 	udiv	r6, r7, r1
 80256a2:	fb01 7716 	mls	r7, r1, r6, r7
 80256a6:	fb06 f00e 	mul.w	r0, r6, lr
 80256aa:	ea42 4207 	orr.w	r2, r2, r7, lsl #16
 80256ae:	4290      	cmp	r0, r2
 80256b0:	d908      	bls.n	80256c4 <__udivmoddi4+0x5c>
 80256b2:	eb1c 0202 	adds.w	r2, ip, r2
 80256b6:	f106 37ff 	add.w	r7, r6, #4294967295	; 0xffffffff
 80256ba:	d202      	bcs.n	80256c2 <__udivmoddi4+0x5a>
 80256bc:	4290      	cmp	r0, r2
 80256be:	f200 8137 	bhi.w	8025930 <__udivmoddi4+0x2c8>
 80256c2:	463e      	mov	r6, r7
 80256c4:	1a12      	subs	r2, r2, r0
 80256c6:	b2a4      	uxth	r4, r4
 80256c8:	fbb2 f0f1 	udiv	r0, r2, r1
 80256cc:	fb01 2210 	mls	r2, r1, r0, r2
 80256d0:	fb00 fe0e 	mul.w	lr, r0, lr
 80256d4:	ea44 4402 	orr.w	r4, r4, r2, lsl #16
 80256d8:	45a6      	cmp	lr, r4
 80256da:	d908      	bls.n	80256ee <__udivmoddi4+0x86>
 80256dc:	eb1c 0404 	adds.w	r4, ip, r4
 80256e0:	f100 32ff 	add.w	r2, r0, #4294967295	; 0xffffffff
 80256e4:	d202      	bcs.n	80256ec <__udivmoddi4+0x84>
 80256e6:	45a6      	cmp	lr, r4
 80256e8:	f200 811c 	bhi.w	8025924 <__udivmoddi4+0x2bc>
 80256ec:	4610      	mov	r0, r2
 80256ee:	ea40 4006 	orr.w	r0, r0, r6, lsl #16
 80256f2:	eba4 040e 	sub.w	r4, r4, lr
 80256f6:	2600      	movs	r6, #0
 80256f8:	b11d      	cbz	r5, 8025702 <__udivmoddi4+0x9a>
 80256fa:	40dc      	lsrs	r4, r3
 80256fc:	2300      	movs	r3, #0
 80256fe:	e9c5 4300 	strd	r4, r3, [r5]
 8025702:	4631      	mov	r1, r6
 8025704:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8025708:	428b      	cmp	r3, r1
 802570a:	d909      	bls.n	8025720 <__udivmoddi4+0xb8>
 802570c:	2d00      	cmp	r5, #0
 802570e:	f000 80fd 	beq.w	802590c <__udivmoddi4+0x2a4>
 8025712:	2600      	movs	r6, #0
 8025714:	e9c5 0100 	strd	r0, r1, [r5]
 8025718:	4630      	mov	r0, r6
 802571a:	4631      	mov	r1, r6
 802571c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8025720:	fab3 f683 	clz	r6, r3
 8025724:	2e00      	cmp	r6, #0
 8025726:	d14b      	bne.n	80257c0 <__udivmoddi4+0x158>
 8025728:	428b      	cmp	r3, r1
 802572a:	f0c0 80f2 	bcc.w	8025912 <__udivmoddi4+0x2aa>
 802572e:	4282      	cmp	r2, r0
 8025730:	f240 80ef 	bls.w	8025912 <__udivmoddi4+0x2aa>
 8025734:	4630      	mov	r0, r6
 8025736:	2d00      	cmp	r5, #0
 8025738:	d0e3      	beq.n	8025702 <__udivmoddi4+0x9a>
 802573a:	e9c5 4700 	strd	r4, r7, [r5]
 802573e:	e7e0      	b.n	8025702 <__udivmoddi4+0x9a>
 8025740:	b902      	cbnz	r2, 8025744 <__udivmoddi4+0xdc>
 8025742:	deff      	udf	#255	; 0xff
 8025744:	fab2 f382 	clz	r3, r2
 8025748:	2b00      	cmp	r3, #0
 802574a:	f040 809d 	bne.w	8025888 <__udivmoddi4+0x220>
 802574e:	1a89      	subs	r1, r1, r2
 8025750:	ea4f 4e12 	mov.w	lr, r2, lsr #16
 8025754:	b297      	uxth	r7, r2
 8025756:	2601      	movs	r6, #1
 8025758:	0c20      	lsrs	r0, r4, #16
 802575a:	fbb1 f2fe 	udiv	r2, r1, lr
 802575e:	fb0e 1112 	mls	r1, lr, r2, r1
 8025762:	ea40 4101 	orr.w	r1, r0, r1, lsl #16
 8025766:	fb07 f002 	mul.w	r0, r7, r2
 802576a:	4288      	cmp	r0, r1
 802576c:	d90f      	bls.n	802578e <__udivmoddi4+0x126>
 802576e:	eb1c 0101 	adds.w	r1, ip, r1
 8025772:	f102 38ff 	add.w	r8, r2, #4294967295	; 0xffffffff
 8025776:	bf2c      	ite	cs
 8025778:	f04f 0901 	movcs.w	r9, #1
 802577c:	f04f 0900 	movcc.w	r9, #0
 8025780:	4288      	cmp	r0, r1
 8025782:	d903      	bls.n	802578c <__udivmoddi4+0x124>
 8025784:	f1b9 0f00 	cmp.w	r9, #0
 8025788:	f000 80cf 	beq.w	802592a <__udivmoddi4+0x2c2>
 802578c:	4642      	mov	r2, r8
 802578e:	1a09      	subs	r1, r1, r0
 8025790:	b2a4      	uxth	r4, r4
 8025792:	fbb1 f0fe 	udiv	r0, r1, lr
 8025796:	fb0e 1110 	mls	r1, lr, r0, r1
 802579a:	fb00 f707 	mul.w	r7, r0, r7
 802579e:	ea44 4401 	orr.w	r4, r4, r1, lsl #16
 80257a2:	42a7      	cmp	r7, r4
 80257a4:	d908      	bls.n	80257b8 <__udivmoddi4+0x150>
 80257a6:	eb1c 0404 	adds.w	r4, ip, r4
 80257aa:	f100 31ff 	add.w	r1, r0, #4294967295	; 0xffffffff
 80257ae:	d202      	bcs.n	80257b6 <__udivmoddi4+0x14e>
 80257b0:	42a7      	cmp	r7, r4
 80257b2:	f200 80b4 	bhi.w	802591e <__udivmoddi4+0x2b6>
 80257b6:	4608      	mov	r0, r1
 80257b8:	1be4      	subs	r4, r4, r7
 80257ba:	ea40 4002 	orr.w	r0, r0, r2, lsl #16
 80257be:	e79b      	b.n	80256f8 <__udivmoddi4+0x90>
 80257c0:	f1c6 0720 	rsb	r7, r6, #32
 80257c4:	40b3      	lsls	r3, r6
 80257c6:	fa01 f406 	lsl.w	r4, r1, r6
 80257ca:	fa22 fc07 	lsr.w	ip, r2, r7
 80257ce:	40f9      	lsrs	r1, r7
 80257d0:	40b2      	lsls	r2, r6
 80257d2:	ea4c 0c03 	orr.w	ip, ip, r3
 80257d6:	fa20 f307 	lsr.w	r3, r0, r7
 80257da:	ea4f 491c 	mov.w	r9, ip, lsr #16
 80257de:	431c      	orrs	r4, r3
 80257e0:	fa1f fe8c 	uxth.w	lr, ip
 80257e4:	fa00 f306 	lsl.w	r3, r0, r6
 80257e8:	0c20      	lsrs	r0, r4, #16
 80257ea:	fbb1 f8f9 	udiv	r8, r1, r9
 80257ee:	fb09 1118 	mls	r1, r9, r8, r1
 80257f2:	ea40 4101 	orr.w	r1, r0, r1, lsl #16
 80257f6:	fb08 f00e 	mul.w	r0, r8, lr
 80257fa:	4288      	cmp	r0, r1
 80257fc:	d90f      	bls.n	802581e <__udivmoddi4+0x1b6>
 80257fe:	eb1c 0101 	adds.w	r1, ip, r1
 8025802:	f108 3aff 	add.w	sl, r8, #4294967295	; 0xffffffff
 8025806:	bf2c      	ite	cs
 8025808:	f04f 0b01 	movcs.w	fp, #1
 802580c:	f04f 0b00 	movcc.w	fp, #0
 8025810:	4288      	cmp	r0, r1
 8025812:	d903      	bls.n	802581c <__udivmoddi4+0x1b4>
 8025814:	f1bb 0f00 	cmp.w	fp, #0
 8025818:	f000 808d 	beq.w	8025936 <__udivmoddi4+0x2ce>
 802581c:	46d0      	mov	r8, sl
 802581e:	1a09      	subs	r1, r1, r0
 8025820:	b2a4      	uxth	r4, r4
 8025822:	fbb1 f0f9 	udiv	r0, r1, r9
 8025826:	fb09 1110 	mls	r1, r9, r0, r1
 802582a:	fb00 fe0e 	mul.w	lr, r0, lr
 802582e:	ea44 4101 	orr.w	r1, r4, r1, lsl #16
 8025832:	458e      	cmp	lr, r1
 8025834:	d907      	bls.n	8025846 <__udivmoddi4+0x1de>
 8025836:	eb1c 0101 	adds.w	r1, ip, r1
 802583a:	f100 34ff 	add.w	r4, r0, #4294967295	; 0xffffffff
 802583e:	d201      	bcs.n	8025844 <__udivmoddi4+0x1dc>
 8025840:	458e      	cmp	lr, r1
 8025842:	d87f      	bhi.n	8025944 <__udivmoddi4+0x2dc>
 8025844:	4620      	mov	r0, r4
 8025846:	ea40 4008 	orr.w	r0, r0, r8, lsl #16
 802584a:	eba1 010e 	sub.w	r1, r1, lr
 802584e:	fba0 9802 	umull	r9, r8, r0, r2
 8025852:	4541      	cmp	r1, r8
 8025854:	464c      	mov	r4, r9
 8025856:	46c6      	mov	lr, r8
 8025858:	d302      	bcc.n	8025860 <__udivmoddi4+0x1f8>
 802585a:	d106      	bne.n	802586a <__udivmoddi4+0x202>
 802585c:	454b      	cmp	r3, r9
 802585e:	d204      	bcs.n	802586a <__udivmoddi4+0x202>
 8025860:	3801      	subs	r0, #1
 8025862:	ebb9 0402 	subs.w	r4, r9, r2
 8025866:	eb68 0e0c 	sbc.w	lr, r8, ip
 802586a:	2d00      	cmp	r5, #0
 802586c:	d070      	beq.n	8025950 <__udivmoddi4+0x2e8>
 802586e:	1b1a      	subs	r2, r3, r4
 8025870:	eb61 010e 	sbc.w	r1, r1, lr
 8025874:	fa22 f306 	lsr.w	r3, r2, r6
 8025878:	fa01 f707 	lsl.w	r7, r1, r7
 802587c:	40f1      	lsrs	r1, r6
 802587e:	2600      	movs	r6, #0
 8025880:	431f      	orrs	r7, r3
 8025882:	e9c5 7100 	strd	r7, r1, [r5]
 8025886:	e73c      	b.n	8025702 <__udivmoddi4+0x9a>
 8025888:	fa02 fc03 	lsl.w	ip, r2, r3
 802588c:	f1c3 0020 	rsb	r0, r3, #32
 8025890:	fa01 f203 	lsl.w	r2, r1, r3
 8025894:	fa21 f600 	lsr.w	r6, r1, r0
 8025898:	ea4f 4e1c 	mov.w	lr, ip, lsr #16
 802589c:	fa24 f100 	lsr.w	r1, r4, r0
 80258a0:	fa1f f78c 	uxth.w	r7, ip
 80258a4:	409c      	lsls	r4, r3
 80258a6:	4311      	orrs	r1, r2
 80258a8:	fbb6 f0fe 	udiv	r0, r6, lr
 80258ac:	0c0a      	lsrs	r2, r1, #16
 80258ae:	fb0e 6610 	mls	r6, lr, r0, r6
 80258b2:	ea42 4206 	orr.w	r2, r2, r6, lsl #16
 80258b6:	fb00 f607 	mul.w	r6, r0, r7
 80258ba:	4296      	cmp	r6, r2
 80258bc:	d90e      	bls.n	80258dc <__udivmoddi4+0x274>
 80258be:	eb1c 0202 	adds.w	r2, ip, r2
 80258c2:	f100 38ff 	add.w	r8, r0, #4294967295	; 0xffffffff
 80258c6:	bf2c      	ite	cs
 80258c8:	f04f 0901 	movcs.w	r9, #1
 80258cc:	f04f 0900 	movcc.w	r9, #0
 80258d0:	4296      	cmp	r6, r2
 80258d2:	d902      	bls.n	80258da <__udivmoddi4+0x272>
 80258d4:	f1b9 0f00 	cmp.w	r9, #0
 80258d8:	d031      	beq.n	802593e <__udivmoddi4+0x2d6>
 80258da:	4640      	mov	r0, r8
 80258dc:	1b92      	subs	r2, r2, r6
 80258de:	b289      	uxth	r1, r1
 80258e0:	fbb2 f6fe 	udiv	r6, r2, lr
 80258e4:	fb0e 2216 	mls	r2, lr, r6, r2
 80258e8:	ea41 4102 	orr.w	r1, r1, r2, lsl #16
 80258ec:	fb06 f207 	mul.w	r2, r6, r7
 80258f0:	428a      	cmp	r2, r1
 80258f2:	d907      	bls.n	8025904 <__udivmoddi4+0x29c>
 80258f4:	eb1c 0101 	adds.w	r1, ip, r1
 80258f8:	f106 38ff 	add.w	r8, r6, #4294967295	; 0xffffffff
 80258fc:	d201      	bcs.n	8025902 <__udivmoddi4+0x29a>
 80258fe:	428a      	cmp	r2, r1
 8025900:	d823      	bhi.n	802594a <__udivmoddi4+0x2e2>
 8025902:	4646      	mov	r6, r8
 8025904:	1a89      	subs	r1, r1, r2
 8025906:	ea46 4600 	orr.w	r6, r6, r0, lsl #16
 802590a:	e725      	b.n	8025758 <__udivmoddi4+0xf0>
 802590c:	462e      	mov	r6, r5
 802590e:	4628      	mov	r0, r5
 8025910:	e6f7      	b.n	8025702 <__udivmoddi4+0x9a>
 8025912:	1a84      	subs	r4, r0, r2
 8025914:	eb61 0303 	sbc.w	r3, r1, r3
 8025918:	2001      	movs	r0, #1
 802591a:	461f      	mov	r7, r3
 802591c:	e70b      	b.n	8025736 <__udivmoddi4+0xce>
 802591e:	4464      	add	r4, ip
 8025920:	3802      	subs	r0, #2
 8025922:	e749      	b.n	80257b8 <__udivmoddi4+0x150>
 8025924:	4464      	add	r4, ip
 8025926:	3802      	subs	r0, #2
 8025928:	e6e1      	b.n	80256ee <__udivmoddi4+0x86>
 802592a:	3a02      	subs	r2, #2
 802592c:	4461      	add	r1, ip
 802592e:	e72e      	b.n	802578e <__udivmoddi4+0x126>
 8025930:	3e02      	subs	r6, #2
 8025932:	4462      	add	r2, ip
 8025934:	e6c6      	b.n	80256c4 <__udivmoddi4+0x5c>
 8025936:	f1a8 0802 	sub.w	r8, r8, #2
 802593a:	4461      	add	r1, ip
 802593c:	e76f      	b.n	802581e <__udivmoddi4+0x1b6>
 802593e:	3802      	subs	r0, #2
 8025940:	4462      	add	r2, ip
 8025942:	e7cb      	b.n	80258dc <__udivmoddi4+0x274>
 8025944:	3802      	subs	r0, #2
 8025946:	4461      	add	r1, ip
 8025948:	e77d      	b.n	8025846 <__udivmoddi4+0x1de>
 802594a:	3e02      	subs	r6, #2
 802594c:	4461      	add	r1, ip
 802594e:	e7d9      	b.n	8025904 <__udivmoddi4+0x29c>
 8025950:	462e      	mov	r6, r5
 8025952:	e6d6      	b.n	8025702 <__udivmoddi4+0x9a>

08025954 <__aeabi_idiv0>:
 8025954:	4770      	bx	lr
 8025956:	bf00      	nop

08025958 <RxCpltCallback>:
{
  UART_StartRx(RxCpltCallback);
}

static void RxCpltCallback(uint8_t *pdata, uint16_t size, uint8_t error)
{
 8025958:	b537      	push	{r0, r1, r2, r4, r5, lr}
  /* Filling buffer and wait for '\r' char */
  if (indexReceiveChar < C_SIZE_CMD_STRING)
 802595a:	4d2d      	ldr	r5, [pc, #180]	; (8025a10 <RxCpltCallback+0xb8>)
 802595c:	882b      	ldrh	r3, [r5, #0]
 802595e:	2bff      	cmp	r3, #255	; 0xff
 8025960:	d824      	bhi.n	80259ac <RxCpltCallback+0x54>
  {
    if (charRx == '\r')
 8025962:	4a2c      	ldr	r2, [pc, #176]	; (8025a14 <RxCpltCallback+0xbc>)
 8025964:	4c2c      	ldr	r4, [pc, #176]	; (8025a18 <RxCpltCallback+0xc0>)
 8025966:	7812      	ldrb	r2, [r2, #0]
 8025968:	2a0d      	cmp	r2, #13
 802596a:	d14c      	bne.n	8025a06 <RxCpltCallback+0xae>
    {
      APP_DBG_MSG("received %s\n", CommandString);
 802596c:	2200      	movs	r2, #0
 802596e:	f04f 31ff 	mov.w	r1, #4294967295	; 0xffffffff
 8025972:	4b2a      	ldr	r3, [pc, #168]	; (8025a1c <RxCpltCallback+0xc4>)
 8025974:	2001      	movs	r0, #1
 8025976:	9400      	str	r4, [sp, #0]
 8025978:	f00a ffc2 	bl	8030900 <UTIL_ADV_TRACE_COND_FSend>
}

static void UartCmdExecute(void)
{
  /* Parse received CommandString */
  if(strcmp((char const*)CommandString, "SW1") == 0)
 802597c:	4620      	mov	r0, r4
 802597e:	4928      	ldr	r1, [pc, #160]	; (8025a20 <RxCpltCallback+0xc8>)
 8025980:	f7ff fb5d 	bl	802503e <strcmp>
 8025984:	4602      	mov	r2, r0
 8025986:	b9b8      	cbnz	r0, 80259b8 <RxCpltCallback+0x60>
  {
    APP_DBG_MSG("SW1 OK\n");
 8025988:	4b26      	ldr	r3, [pc, #152]	; (8025a24 <RxCpltCallback+0xcc>)
 802598a:	f04f 31ff 	mov.w	r1, #4294967295	; 0xffffffff
 802598e:	2001      	movs	r0, #1
 8025990:	f00a ffb6 	bl	8030900 <UTIL_ADV_TRACE_COND_FSend>
    exti_handle.Line = B1_EXTI_LINE;
 8025994:	4824      	ldr	r0, [pc, #144]	; (8025a28 <RxCpltCallback+0xd0>)
 8025996:	4b25      	ldr	r3, [pc, #148]	; (8025a2c <RxCpltCallback+0xd4>)
    HAL_EXTI_GenerateSWI(&exti_handle);
  }
  else if (strcmp((char const*)CommandString, "SW2") == 0)
  {
    APP_DBG_MSG("SW2 OK\n");
    exti_handle.Line = B2_EXTI_LINE;
 8025998:	6003      	str	r3, [r0, #0]
    HAL_EXTI_GenerateSWI(&exti_handle);
 802599a:	f006 fcab 	bl	802c2f4 <HAL_EXTI_GenerateSWI>
      indexReceiveChar = 0;
 802599e:	2100      	movs	r1, #0
      memset(CommandString, 0, C_SIZE_CMD_STRING);
 80259a0:	f44f 7280 	mov.w	r2, #256	; 0x100
 80259a4:	481c      	ldr	r0, [pc, #112]	; (8025a18 <RxCpltCallback+0xc0>)
      indexReceiveChar = 0;
 80259a6:	8029      	strh	r1, [r5, #0]
      memset(CommandString, 0, C_SIZE_CMD_STRING);
 80259a8:	f00b fb01 	bl	8030fae <memset>
  UART_StartRx(RxCpltCallback);
 80259ac:	4820      	ldr	r0, [pc, #128]	; (8025a30 <RxCpltCallback+0xd8>)
}
 80259ae:	b003      	add	sp, #12
 80259b0:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
  UART_StartRx(RxCpltCallback);
 80259b4:	f002 beda 	b.w	802876c <UART_StartRx>
  else if (strcmp((char const*)CommandString, "SW2") == 0)
 80259b8:	4620      	mov	r0, r4
 80259ba:	491e      	ldr	r1, [pc, #120]	; (8025a34 <RxCpltCallback+0xdc>)
 80259bc:	f7ff fb3f 	bl	802503e <strcmp>
 80259c0:	4602      	mov	r2, r0
 80259c2:	b940      	cbnz	r0, 80259d6 <RxCpltCallback+0x7e>
    APP_DBG_MSG("SW2 OK\n");
 80259c4:	4b1c      	ldr	r3, [pc, #112]	; (8025a38 <RxCpltCallback+0xe0>)
 80259c6:	f04f 31ff 	mov.w	r1, #4294967295	; 0xffffffff
 80259ca:	2001      	movs	r0, #1
 80259cc:	f00a ff98 	bl	8030900 <UTIL_ADV_TRACE_COND_FSend>
    exti_handle.Line = B2_EXTI_LINE;
 80259d0:	4815      	ldr	r0, [pc, #84]	; (8025a28 <RxCpltCallback+0xd0>)
 80259d2:	4b1a      	ldr	r3, [pc, #104]	; (8025a3c <RxCpltCallback+0xe4>)
 80259d4:	e7e0      	b.n	8025998 <RxCpltCallback+0x40>
  }
  else if (strcmp((char const*)CommandString, "SW3") == 0)
 80259d6:	4620      	mov	r0, r4
 80259d8:	4919      	ldr	r1, [pc, #100]	; (8025a40 <RxCpltCallback+0xe8>)
 80259da:	f7ff fb30 	bl	802503e <strcmp>
 80259de:	4602      	mov	r2, r0
 80259e0:	b940      	cbnz	r0, 80259f4 <RxCpltCallback+0x9c>
  {
    APP_DBG_MSG("SW3 OK\n");
 80259e2:	4b18      	ldr	r3, [pc, #96]	; (8025a44 <RxCpltCallback+0xec>)
 80259e4:	f04f 31ff 	mov.w	r1, #4294967295	; 0xffffffff
 80259e8:	2001      	movs	r0, #1
 80259ea:	f00a ff89 	bl	8030900 <UTIL_ADV_TRACE_COND_FSend>
    exti_handle.Line = B3_EXTI_LINE;
 80259ee:	480e      	ldr	r0, [pc, #56]	; (8025a28 <RxCpltCallback+0xd0>)
 80259f0:	4b15      	ldr	r3, [pc, #84]	; (8025a48 <RxCpltCallback+0xf0>)
 80259f2:	e7d1      	b.n	8025998 <RxCpltCallback+0x40>
    HAL_EXTI_GenerateSWI(&exti_handle);
  }
  else
  {
    APP_DBG_MSG("NOT RECOGNIZED COMMAND : %s\n", CommandString);
 80259f4:	2200      	movs	r2, #0
 80259f6:	f04f 31ff 	mov.w	r1, #4294967295	; 0xffffffff
 80259fa:	4b14      	ldr	r3, [pc, #80]	; (8025a4c <RxCpltCallback+0xf4>)
 80259fc:	9400      	str	r4, [sp, #0]
 80259fe:	2001      	movs	r0, #1
 8025a00:	f00a ff7e 	bl	8030900 <UTIL_ADV_TRACE_COND_FSend>
 8025a04:	e7cb      	b.n	802599e <RxCpltCallback+0x46>
      CommandString[indexReceiveChar++] = charRx;
 8025a06:	1c59      	adds	r1, r3, #1
 8025a08:	8029      	strh	r1, [r5, #0]
 8025a0a:	54e2      	strb	r2, [r4, r3]
 8025a0c:	e7ce      	b.n	80259ac <RxCpltCallback+0x54>
 8025a0e:	bf00      	nop
 8025a10:	20004b58 	.word	0x20004b58
 8025a14:	20008f68 	.word	0x20008f68
 8025a18:	20004a4c 	.word	0x20004a4c
 8025a1c:	08032344 	.word	0x08032344
 8025a20:	08032351 	.word	0x08032351
 8025a24:	08032355 	.word	0x08032355
 8025a28:	20004b4c 	.word	0x20004b4c
 8025a2c:	0600000d 	.word	0x0600000d
 8025a30:	08025959 	.word	0x08025959
 8025a34:	0803235d 	.word	0x0803235d
 8025a38:	08032361 	.word	0x08032361
 8025a3c:	06000006 	.word	0x06000006
 8025a40:	08032369 	.word	0x08032369
 8025a44:	0803236d 	.word	0x0803236d
 8025a48:	06000007 	.word	0x06000007
 8025a4c:	08032375 	.word	0x08032375

08025a50 <AMM_WrapperFree>:
  UTIL_MM_ReleaseBuffer ((void *)p_BufferAddr);
 8025a50:	f004 b96c 	b.w	8029d2c <UTIL_MM_ReleaseBuffer>

08025a54 <AMM_WrapperAllocate>:
  return (uint32_t *)UTIL_MM_GetBuffer (((size_t)BufferSize * sizeof(uint32_t)));
 8025a54:	0080      	lsls	r0, r0, #2
 8025a56:	f004 b913 	b.w	8029c80 <UTIL_MM_GetBuffer>

08025a5a <AMM_WrapperInit>:
  UTIL_MM_Init ((uint8_t *)p_PoolAddr, ((size_t)PoolSize * sizeof(uint32_t)));
 8025a5a:	0089      	lsls	r1, r1, #2
 8025a5c:	f004 b988 	b.w	8029d70 <UTIL_MM_Init>

08025a60 <MX_APPE_Config>:
{
 8025a60:	b507      	push	{r0, r1, r2, lr}
  OTP_Data_s* otp_ptr = NULL;
 8025a62:	2000      	movs	r0, #0
  if (OTP_Read(DEFAULT_OTP_IDX, &otp_ptr) != HAL_OK) {
 8025a64:	a901      	add	r1, sp, #4
  OTP_Data_s* otp_ptr = NULL;
 8025a66:	9001      	str	r0, [sp, #4]
  if (OTP_Read(DEFAULT_OTP_IDX, &otp_ptr) != HAL_OK) {
 8025a68:	f004 fcaa 	bl	802a3c0 <OTP_Read>
 8025a6c:	b128      	cbz	r0, 8025a7a <MX_APPE_Config+0x1a>
    HAL_RCCEx_HSESetTrimming(0x0C);
 8025a6e:	200c      	movs	r0, #12
    HAL_RCCEx_HSESetTrimming(otp_ptr->hsetune);
 8025a70:	f008 f83e 	bl	802daf0 <HAL_RCCEx_HSESetTrimming>
}
 8025a74:	b003      	add	sp, #12
 8025a76:	f85d fb04 	ldr.w	pc, [sp], #4
    HAL_RCCEx_HSESetTrimming(otp_ptr->hsetune);
 8025a7a:	9b01      	ldr	r3, [sp, #4]
 8025a7c:	7b98      	ldrb	r0, [r3, #14]
 8025a7e:	e7f7      	b.n	8025a70 <MX_APPE_Config+0x10>

08025a80 <MX_APPE_Init>:
{
 8025a80:	b508      	push	{r3, lr}
  APP_DEBUG_SIGNAL_SET(APP_APPE_INIT);
 8025a82:	2000      	movs	r0, #0
 8025a84:	f002 f9c7 	bl	8027e16 <APP_DEBUG_SIGNAL_SET>
  * @rmtoll CSR          RMVF          LL_RCC_ClearResetFlags
  * @retval None
  */
__STATIC_INLINE void LL_RCC_ClearResetFlags(void)
{
  SET_BIT(RCC->CSR, RCC_CSR_RMVF);
 8025a88:	4a48      	ldr	r2, [pc, #288]	; (8025bac <MX_APPE_Init+0x12c>)
 8025a8a:	f8d2 30f4 	ldr.w	r3, [r2, #244]	; 0xf4
 8025a8e:	f443 0300 	orr.w	r3, r3, #8388608	; 0x800000
 8025a92:	f8c2 30f4 	str.w	r3, [r2, #244]	; 0xf4
  UTIL_TIMER_Init();
 8025a96:	f00b f8ef 	bl	8030c78 <UTIL_TIMER_Init>
  HAL_PWR_EnableWakeUpPin(PWR_WAKEUP_PIN7_HIGH_3);
 8025a9a:	4845      	ldr	r0, [pc, #276]	; (8025bb0 <MX_APPE_Init+0x130>)
 8025a9c:	f006 ffbe 	bl	802ca1c <HAL_PWR_EnableWakeUpPin>
  UTIL_ADV_TRACE_Init();
 8025aa0:	f00a fec0 	bl	8030824 <UTIL_ADV_TRACE_Init>
  UTIL_ADV_TRACE_SetVerboseLevel(VLEVEL_L); /*!< functional traces*/
 8025aa4:	2001      	movs	r0, #1
 8025aa6:	f00a fed7 	bl	8030858 <UTIL_ADV_TRACE_SetVerboseLevel>
  UTIL_ADV_TRACE_SetRegion(~0x0);
 8025aaa:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 8025aae:	f00a fed9 	bl	8030864 <UTIL_ADV_TRACE_SetRegion>
  adc_ctrl_init();
 8025ab2:	f004 fb45 	bl	802a140 <adc_ctrl_init>
  scm_init();
 8025ab6:	f004 fe71 	bl	802a79c <scm_init>
  UTIL_LPM_Init();
 8025aba:	f00a ffd5 	bl	8030a68 <UTIL_LPM_Init>
  UTIL_LPM_SetOffMode(1 << CFG_LPM_APP, UTIL_LPM_DISABLE);
 8025abe:	2101      	movs	r1, #1
 8025ac0:	4608      	mov	r0, r1
 8025ac2:	f00a ffdb 	bl	8030a7c <UTIL_LPM_SetOffMode>
  AMM_Init (&ammInitConfig);
 8025ac6:	483b      	ldr	r0, [pc, #236]	; (8025bb4 <MX_APPE_Init+0x134>)
 8025ac8:	f003 fec8 	bl	802985c <AMM_Init>
  UTIL_SEQ_RegTask( 1U << CFG_TASK_AMM_BCKGND, UTIL_SEQ_RFU, AMM_BackgroundProcess);
 8025acc:	f44f 6000 	mov.w	r0, #2048	; 0x800
 8025ad0:	2100      	movs	r1, #0
 8025ad2:	4a39      	ldr	r2, [pc, #228]	; (8025bb8 <MX_APPE_Init+0x138>)
 8025ad4:	f00b f8c0 	bl	8030c58 <UTIL_SEQ_RegTask>
  SNVMA_Init ((uint32_t *)CFG_SNVMA_START_ADDRESS);
 8025ad8:	f64f 71fd 	movw	r1, #65533	; 0xfffd
 8025adc:	4b37      	ldr	r3, [pc, #220]	; (8025bbc <MX_APPE_Init+0x13c>)
 8025ade:	f8b3 20a0 	ldrh.w	r2, [r3, #160]	; 0xa0
 8025ae2:	1e53      	subs	r3, r2, #1
 8025ae4:	b29b      	uxth	r3, r3
 8025ae6:	428b      	cmp	r3, r1
 8025ae8:	bf9b      	ittet	ls
 8025aea:	f643 70fe 	movwls	r0, #16382	; 0x3ffe
 8025aee:	eb00 00d2 	addls.w	r0, r0, r2, lsr #3
 8025af2:	4833      	ldrhi	r0, [pc, #204]	; (8025bc0 <MX_APPE_Init+0x140>)
 8025af4:	0340      	lslls	r0, r0, #13
 8025af6:	f003 fc2d 	bl	8029354 <SNVMA_Init>
  UTIL_SEQ_RegTask(1U << CFG_TASK_FLASH_MANAGER_BCKGND, UTIL_SEQ_RFU, FM_BackgroundProcess);
 8025afa:	4a32      	ldr	r2, [pc, #200]	; (8025bc4 <MX_APPE_Init+0x144>)
 8025afc:	2100      	movs	r1, #0
 8025afe:	f44f 5080 	mov.w	r0, #4096	; 0x1000
 8025b02:	f00b f8a9 	bl	8030c58 <UTIL_SEQ_RegTask>
  BSP_LED_Init(LED_BLUE);
 8025b06:	2000      	movs	r0, #0
 8025b08:	f005 f89e 	bl	802ac48 <BSP_LED_Init>
  BSP_LED_Init(LED_GREEN);
 8025b0c:	2001      	movs	r0, #1
 8025b0e:	f005 f89b 	bl	802ac48 <BSP_LED_Init>
  BSP_LED_Init(LED_RED);
 8025b12:	2002      	movs	r0, #2
 8025b14:	f005 f898 	bl	802ac48 <BSP_LED_Init>
  BSP_LED_On(LED_GREEN);
 8025b18:	2001      	movs	r0, #1
 8025b1a:	f005 f8cb 	bl	802acb4 <BSP_LED_On>
  BSP_PB_Init(B1, BUTTON_MODE_EXTI);
 8025b1e:	2101      	movs	r1, #1
 8025b20:	2000      	movs	r0, #0
 8025b22:	f005 f8e7 	bl	802acf4 <BSP_PB_Init>
  BSP_PB_Init(B2, BUTTON_MODE_EXTI);
 8025b26:	2101      	movs	r1, #1
 8025b28:	4608      	mov	r0, r1
 8025b2a:	f005 f8e3 	bl	802acf4 <BSP_PB_Init>
  BSP_PB_Init(B3, BUTTON_MODE_EXTI);
 8025b2e:	2101      	movs	r1, #1
 8025b30:	2002      	movs	r0, #2
 8025b32:	f005 f8df 	bl	802acf4 <BSP_PB_Init>
  UART_StartRx(RxCpltCallback);
 8025b36:	4824      	ldr	r0, [pc, #144]	; (8025bc8 <MX_APPE_Init+0x148>)
 8025b38:	f002 fe18 	bl	802876c <UART_StartRx>
  UTIL_SEQ_RegTask( 1U << CFG_TASK_BPKA, UTIL_SEQ_RFU, BPKA_BG_Process);
 8025b3c:	2100      	movs	r1, #0
 8025b3e:	f44f 7000 	mov.w	r0, #512	; 0x200
 8025b42:	4a22      	ldr	r2, [pc, #136]	; (8025bcc <MX_APPE_Init+0x14c>)
 8025b44:	f00b f888 	bl	8030c58 <UTIL_SEQ_RegTask>
  BPKA_Reset( );
 8025b48:	f001 ff00 	bl	802794c <BPKA_Reset>
  UTIL_SEQ_RegTask( 1U << CFG_TASK_HW_RNG, UTIL_SEQ_RFU, (void (*)(void))HW_RNG_Process);
 8025b4c:	4a20      	ldr	r2, [pc, #128]	; (8025bd0 <MX_APPE_Init+0x150>)
 8025b4e:	2100      	movs	r1, #0
 8025b50:	f44f 6080 	mov.w	r0, #1024	; 0x400
 8025b54:	f00b f880 	bl	8030c58 <UTIL_SEQ_RegTask>
  HW_RNG_Start( );
 8025b58:	f002 fb80 	bl	802825c <HW_RNG_Start>
  FD_SetStatus (FD_FLASHACCESS_RFTS, LL_FLASH_DISABLE);
 8025b5c:	2101      	movs	r1, #1
 8025b5e:	4608      	mov	r0, r1
 8025b60:	f002 fe64 	bl	802882c <FD_SetStatus>
  FD_SetStatus (FD_FLASHACCESS_RFTS_BYPASS, LL_FLASH_ENABLE);
 8025b64:	2100      	movs	r1, #0
 8025b66:	2002      	movs	r0, #2
 8025b68:	f002 fe60 	bl	802882c <FD_SetStatus>
  FD_SetStatus (FD_FLASHACCESS_SYSTEM, LL_FLASH_ENABLE);
 8025b6c:	2100      	movs	r1, #0
 8025b6e:	4608      	mov	r0, r1
 8025b70:	f002 fe5c 	bl	802882c <FD_SetStatus>
  APP_BLE_Init();
 8025b74:	f000 fec6 	bl	8026904 <APP_BLE_Init>
  ll_sys_config_params();
 8025b78:	f002 f936 	bl	8027de8 <ll_sys_config_params>
  FD_SetStatus (FD_FLASHACCESS_RFTS_BYPASS, LL_FLASH_DISABLE);
 8025b7c:	2101      	movs	r1, #1
 8025b7e:	2002      	movs	r0, #2
 8025b80:	f002 fe54 	bl	802882c <FD_SetStatus>
  UTIL_SEQ_RegTask(1U << CFG_TASK_PB1_BUTTON_PUSHED_ID, UTIL_SEQ_RFU, APP_BLE_Key_Button1_Action);
 8025b84:	2100      	movs	r1, #0
 8025b86:	2002      	movs	r0, #2
 8025b88:	4a12      	ldr	r2, [pc, #72]	; (8025bd4 <MX_APPE_Init+0x154>)
 8025b8a:	f00b f865 	bl	8030c58 <UTIL_SEQ_RegTask>
  UTIL_SEQ_RegTask(1U << CFG_TASK_PB2_BUTTON_PUSHED_ID, UTIL_SEQ_RFU, APP_BLE_Key_Button2_Action);
 8025b8e:	2100      	movs	r1, #0
 8025b90:	2004      	movs	r0, #4
 8025b92:	4a11      	ldr	r2, [pc, #68]	; (8025bd8 <MX_APPE_Init+0x158>)
 8025b94:	f00b f860 	bl	8030c58 <UTIL_SEQ_RegTask>
  UTIL_SEQ_RegTask(1U << CFG_TASK_PB3_BUTTON_PUSHED_ID, UTIL_SEQ_RFU, APP_BLE_Key_Button3_Action);
 8025b98:	2100      	movs	r1, #0
 8025b9a:	4a10      	ldr	r2, [pc, #64]	; (8025bdc <MX_APPE_Init+0x15c>)
 8025b9c:	2008      	movs	r0, #8
 8025b9e:	f00b f85b 	bl	8030c58 <UTIL_SEQ_RegTask>
   APP_DEBUG_SIGNAL_RESET(APP_APPE_INIT);
 8025ba2:	2000      	movs	r0, #0
 8025ba4:	f002 f938 	bl	8027e18 <APP_DEBUG_SIGNAL_RESET>
}
 8025ba8:	2000      	movs	r0, #0
 8025baa:	bd08      	pop	{r3, pc}
 8025bac:	46020c00 	.word	0x46020c00
 8025bb0:	30000040 	.word	0x30000040
 8025bb4:	20000440 	.word	0x20000440
 8025bb8:	08029c0d 	.word	0x08029c0d
 8025bbc:	0bf90700 	.word	0x0bf90700
 8025bc0:	080fc000 	.word	0x080fc000
 8025bc4:	08028a3d 	.word	0x08028a3d
 8025bc8:	08025959 	.word	0x08025959
 8025bcc:	08027af5 	.word	0x08027af5
 8025bd0:	080282d9 	.word	0x080282d9
 8025bd4:	08027301 	.word	0x08027301
 8025bd8:	08027331 	.word	0x08027331
 8025bdc:	0802738d 	.word	0x0802738d

08025be0 <MX_APPE_Process>:
  UTIL_SEQ_Run(UTIL_SEQ_DEFAULT);
 8025be0:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 8025be4:	f00a bfa4 	b.w	8030b30 <UTIL_SEQ_Run>

08025be8 <UTIL_SEQ_Idle>:
 8025be8:	4770      	bx	lr

08025bea <UTIL_SEQ_PreIdle>:
 8025bea:	4770      	bx	lr

08025bec <UTIL_SEQ_PostIdle>:
 8025bec:	4770      	bx	lr

08025bee <BPKACB_Process>:
  UTIL_SEQ_SetTask(1U << CFG_TASK_BPKA, CFG_SCH_PRIO_0);
 8025bee:	2100      	movs	r1, #0
 8025bf0:	f44f 7000 	mov.w	r0, #512	; 0x200
 8025bf4:	f00a bf5a 	b.w	8030aac <UTIL_SEQ_SetTask>

08025bf8 <HWCB_RNG_Process>:
  UTIL_SEQ_SetTask(1U << CFG_TASK_HW_RNG, CFG_SCH_PRIO_0);
 8025bf8:	2100      	movs	r1, #0
 8025bfa:	f44f 6080 	mov.w	r0, #1024	; 0x400
 8025bfe:	f00a bf55 	b.w	8030aac <UTIL_SEQ_SetTask>
	...

08025c04 <AMM_RegisterBasicMemoryManager>:
  p_BasicMemoryManagerFunctions->Init = AMM_WrapperInit;
 8025c04:	4b03      	ldr	r3, [pc, #12]	; (8025c14 <AMM_RegisterBasicMemoryManager+0x10>)
 8025c06:	6003      	str	r3, [r0, #0]
  p_BasicMemoryManagerFunctions->Allocate = AMM_WrapperAllocate;
 8025c08:	4b03      	ldr	r3, [pc, #12]	; (8025c18 <AMM_RegisterBasicMemoryManager+0x14>)
 8025c0a:	6043      	str	r3, [r0, #4]
  p_BasicMemoryManagerFunctions->Free = AMM_WrapperFree;
 8025c0c:	4b03      	ldr	r3, [pc, #12]	; (8025c1c <AMM_RegisterBasicMemoryManager+0x18>)
 8025c0e:	6083      	str	r3, [r0, #8]
}
 8025c10:	4770      	bx	lr
 8025c12:	bf00      	nop
 8025c14:	08025a5b 	.word	0x08025a5b
 8025c18:	08025a55 	.word	0x08025a55
 8025c1c:	08025a51 	.word	0x08025a51

08025c20 <AMM_ProcessRequest>:
  UTIL_SEQ_SetTask(1U << CFG_TASK_AMM_BCKGND, CFG_SCH_PRIO_0);
 8025c20:	2100      	movs	r1, #0
 8025c22:	f44f 6000 	mov.w	r0, #2048	; 0x800
 8025c26:	f00a bf41 	b.w	8030aac <UTIL_SEQ_SetTask>

08025c2a <FM_ProcessRequest>:
  UTIL_SEQ_SetTask(1U << CFG_TASK_FLASH_MANAGER_BCKGND, CFG_SCH_PRIO_0);
 8025c2a:	2100      	movs	r1, #0
 8025c2c:	f44f 5080 	mov.w	r0, #4096	; 0x1000
 8025c30:	f00a bf3c 	b.w	8030aac <UTIL_SEQ_SetTask>

08025c34 <BSP_PB_Callback>:
  switch (Button)
 8025c34:	2801      	cmp	r0, #1
{
 8025c36:	4601      	mov	r1, r0
  switch (Button)
 8025c38:	d005      	beq.n	8025c46 <BSP_PB_Callback+0x12>
 8025c3a:	2802      	cmp	r0, #2
 8025c3c:	d006      	beq.n	8025c4c <BSP_PB_Callback+0x18>
 8025c3e:	b940      	cbnz	r0, 8025c52 <BSP_PB_Callback+0x1e>
      UTIL_SEQ_SetTask(1U << CFG_TASK_PB1_BUTTON_PUSHED_ID, CFG_SCH_PRIO_0);
 8025c40:	2002      	movs	r0, #2
      UTIL_SEQ_SetTask(1U << CFG_TASK_PB3_BUTTON_PUSHED_ID, CFG_SCH_PRIO_0);
 8025c42:	f00a bf33 	b.w	8030aac <UTIL_SEQ_SetTask>
      UTIL_SEQ_SetTask(1U << CFG_TASK_PB2_BUTTON_PUSHED_ID, CFG_SCH_PRIO_0);
 8025c46:	2100      	movs	r1, #0
 8025c48:	2004      	movs	r0, #4
 8025c4a:	e7fa      	b.n	8025c42 <BSP_PB_Callback+0xe>
      UTIL_SEQ_SetTask(1U << CFG_TASK_PB3_BUTTON_PUSHED_ID, CFG_SCH_PRIO_0);
 8025c4c:	2100      	movs	r1, #0
 8025c4e:	2008      	movs	r0, #8
 8025c50:	e7f7      	b.n	8025c42 <BSP_PB_Callback+0xe>
}
 8025c52:	4770      	bx	lr

08025c54 <HAL_GPIO_EXTI_Rising_Callback>:
  if (GPIO_Pin == B1_PIN)
 8025c54:	f5b0 5f00 	cmp.w	r0, #8192	; 0x2000
 8025c58:	d103      	bne.n	8025c62 <HAL_GPIO_EXTI_Rising_Callback+0xe>
      UTIL_SEQ_SetTask(1U << CFG_TASK_PB1_BUTTON_PUSHED_ID, CFG_SCH_PRIO_0);
 8025c5a:	2100      	movs	r1, #0
 8025c5c:	2002      	movs	r0, #2
 8025c5e:	f00a bf25 	b.w	8030aac <UTIL_SEQ_SetTask>
  if (GPIO_Pin == B2_PIN)
 8025c62:	2840      	cmp	r0, #64	; 0x40
 8025c64:	d003      	beq.n	8025c6e <HAL_GPIO_EXTI_Rising_Callback+0x1a>
  if (GPIO_Pin == B3_PIN)
 8025c66:	2880      	cmp	r0, #128	; 0x80
 8025c68:	d104      	bne.n	8025c74 <HAL_GPIO_EXTI_Rising_Callback+0x20>
    BSP_PB_Callback(B3);
 8025c6a:	2002      	movs	r0, #2
 8025c6c:	e000      	b.n	8025c70 <HAL_GPIO_EXTI_Rising_Callback+0x1c>
    BSP_PB_Callback(B2);
 8025c6e:	2001      	movs	r0, #1
    BSP_PB_Callback(B3);
 8025c70:	f7ff bfe0 	b.w	8025c34 <BSP_PB_Callback>
}
 8025c74:	4770      	bx	lr

08025c76 <HAL_GPIO_EXTI_Falling_Callback>:
  HAL_GPIO_EXTI_Rising_Callback(GPIO_Pin);
 8025c76:	f7ff bfed 	b.w	8025c54 <HAL_GPIO_EXTI_Rising_Callback>

08025c7a <RNG_KERNEL_CLK_OFF>:

#if (CFG_DEBUG_APP_TRACE != 0)
void RNG_KERNEL_CLK_OFF(void)
{
  /* Do not switch off HSI clock as it is used for traces */
}
 8025c7a:	4770      	bx	lr

08025c7c <SystemClock_Config>:

/**
 * @brief System Clock Configuration
 * @retval None
 */
void SystemClock_Config(void) {
 8025c7c:	b530      	push	{r4, r5, lr}
	RCC_OscInitTypeDef RCC_OscInitStruct = { 0 };
 8025c7e:	2540      	movs	r5, #64	; 0x40
void SystemClock_Config(void) {
 8025c80:	b099      	sub	sp, #100	; 0x64
	RCC_OscInitTypeDef RCC_OscInitStruct = { 0 };
 8025c82:	462a      	mov	r2, r5
 8025c84:	2100      	movs	r1, #0
 8025c86:	a808      	add	r0, sp, #32
 8025c88:	f00b f991 	bl	8030fae <memset>
	RCC_ClkInitTypeDef RCC_ClkInitStruct = { 0 };
 8025c8c:	2220      	movs	r2, #32
 8025c8e:	2100      	movs	r1, #0
 8025c90:	4668      	mov	r0, sp
 8025c92:	f00b f98c 	bl	8030fae <memset>

	/** Configure the main internal regulator output voltage
	 */
	if (HAL_PWREx_ControlVoltageScaling(PWR_REGULATOR_VOLTAGE_SCALE2)
 8025c96:	2000      	movs	r0, #0
 8025c98:	f006 ff54 	bl	802cb44 <HAL_PWREx_ControlVoltageScaling>
 8025c9c:	4604      	mov	r4, r0
 8025c9e:	b108      	cbz	r0, 8025ca4 <SystemClock_Config+0x28>
  \details Disables IRQ interrupts by setting the I-bit in the CPSR.
           Can only be executed in Privileged modes.
 */
__STATIC_FORCEINLINE void __disable_irq(void)
{
  __ASM volatile ("cpsid i" : : : "memory");
 8025ca0:	b672      	cpsid	i
 */
void Error_Handler(void) {
	/* USER CODE BEGIN Error_Handler_Debug */
	/* User can add his own implementation to report the HAL error return state */
	__disable_irq();
	while (1) {
 8025ca2:	e7fe      	b.n	8025ca2 <SystemClock_Config+0x26>
	HAL_PWR_EnableBkUpAccess();
 8025ca4:	f006 feb2 	bl	802ca0c <HAL_PWR_EnableBkUpAccess>
	__HAL_RCC_LSEDRIVE_CONFIG(RCC_LSEDRIVE_MEDIUMLOW);
 8025ca8:	4a18      	ldr	r2, [pc, #96]	; (8025d0c <SystemClock_Config+0x90>)
	RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 8025caa:	2107      	movs	r1, #7
	__HAL_RCC_LSEDRIVE_CONFIG(RCC_LSEDRIVE_MEDIUMLOW);
 8025cac:	f8d2 30f0 	ldr.w	r3, [r2, #240]	; 0xf0
	RCC_OscInitStruct.LSEState = RCC_LSE_ON;
 8025cb0:	f44f 1080 	mov.w	r0, #1048576	; 0x100000
	__HAL_RCC_LSEDRIVE_CONFIG(RCC_LSEDRIVE_MEDIUMLOW);
 8025cb4:	f023 0318 	bic.w	r3, r3, #24
 8025cb8:	f043 0308 	orr.w	r3, r3, #8
 8025cbc:	f8c2 30f0 	str.w	r3, [r2, #240]	; 0xf0
	RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 8025cc0:	f44f 3380 	mov.w	r3, #65536	; 0x10000
 8025cc4:	e9cd 1308 	strd	r1, r3, [sp, #32]
	RCC_OscInitStruct.LSEState = RCC_LSE_ON;
 8025cc8:	2381      	movs	r3, #129	; 0x81
	RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 8025cca:	f44f 7c80 	mov.w	ip, #256	; 0x100
	RCC_OscInitStruct.LSEState = RCC_LSE_ON;
 8025cce:	e9cd 030a 	strd	r0, r3, [sp, #40]	; 0x28
	RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 8025cd2:	2310      	movs	r3, #16
	if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK) {
 8025cd4:	a808      	add	r0, sp, #32
	RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 8025cd6:	e9cd c30c 	strd	ip, r3, [sp, #48]	; 0x30
	RCC_OscInitStruct.PLL1.PLLState = RCC_PLL_NONE;
 8025cda:	9410      	str	r4, [sp, #64]	; 0x40
	if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK) {
 8025cdc:	f007 f824 	bl	802cd28 <HAL_RCC_OscConfig>
 8025ce0:	b108      	cbz	r0, 8025ce6 <SystemClock_Config+0x6a>
 8025ce2:	b672      	cpsid	i
	while (1) {
 8025ce4:	e7fe      	b.n	8025ce4 <SystemClock_Config+0x68>
	RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_HSE;
 8025ce6:	223f      	movs	r2, #63	; 0x3f
 8025ce8:	2302      	movs	r3, #2
	RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 8025cea:	e9cd 0002 	strd	r0, r0, [sp, #8]
	RCC_ClkInitStruct.APB7CLKDivider = RCC_HCLK_DIV1;
 8025cee:	e9cd 5004 	strd	r5, r0, [sp, #16]
	RCC_ClkInitStruct.AHB5_HSEHSI_CLKDivider = RCC_SYSCLK_HSEHSI_DIV1;
 8025cf2:	e9cd 0006 	strd	r0, r0, [sp, #24]
	if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_1) != HAL_OK) {
 8025cf6:	2101      	movs	r1, #1
 8025cf8:	4668      	mov	r0, sp
	RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_HSE;
 8025cfa:	e9cd 2300 	strd	r2, r3, [sp]
	if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_1) != HAL_OK) {
 8025cfe:	f007 fba1 	bl	802d444 <HAL_RCC_ClockConfig>
 8025d02:	b108      	cbz	r0, 8025d08 <SystemClock_Config+0x8c>
 8025d04:	b672      	cpsid	i
	while (1) {
 8025d06:	e7fe      	b.n	8025d06 <SystemClock_Config+0x8a>
}
 8025d08:	b019      	add	sp, #100	; 0x64
 8025d0a:	bd30      	pop	{r4, r5, pc}
 8025d0c:	46020c00 	.word	0x46020c00

08025d10 <PeriphCommonClock_Config>:
void PeriphCommonClock_Config(void) {
 8025d10:	b500      	push	{lr}
 8025d12:	b091      	sub	sp, #68	; 0x44
	RCC_PeriphCLKInitTypeDef PeriphClkInit = { 0 };
 8025d14:	2238      	movs	r2, #56	; 0x38
 8025d16:	2100      	movs	r1, #0
 8025d18:	a801      	add	r0, sp, #4
 8025d1a:	f00b f948 	bl	8030fae <memset>
	PeriphClkInit.PeriphClockSelection = RCC_PERIPHCLK_RADIOST;
 8025d1e:	f44f 4300 	mov.w	r3, #32768	; 0x8000
 8025d22:	9300      	str	r3, [sp, #0]
	PeriphClkInit.RadioSlpTimClockSelection = RCC_RADIOSTCLKSOURCE_LSE;
 8025d24:	f44f 2380 	mov.w	r3, #262144	; 0x40000
	if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInit) != HAL_OK) {
 8025d28:	4668      	mov	r0, sp
	PeriphClkInit.RadioSlpTimClockSelection = RCC_RADIOSTCLKSOURCE_LSE;
 8025d2a:	930f      	str	r3, [sp, #60]	; 0x3c
	if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInit) != HAL_OK) {
 8025d2c:	f007 fd12 	bl	802d754 <HAL_RCCEx_PeriphCLKConfig>
 8025d30:	b108      	cbz	r0, 8025d36 <PeriphCommonClock_Config+0x26>
 8025d32:	b672      	cpsid	i
	while (1) {
 8025d34:	e7fe      	b.n	8025d34 <PeriphCommonClock_Config+0x24>
}
 8025d36:	b011      	add	sp, #68	; 0x44
 8025d38:	f85d fb04 	ldr.w	pc, [sp], #4

08025d3c <MX_ICACHE_Init>:
  *         @arg @ref LL_PWR_ICACHERAM_STOP_FULL_RETENTION
  * @retval None
  */
__STATIC_INLINE void LL_PWR_SetICacheRAMStopRetention(uint32_t ICRAMPageRetention)
{
  MODIFY_REG(PWR->CR2, PWR_CR2_ICRAMPDS,
 8025d3c:	4a08      	ldr	r2, [pc, #32]	; (8025d60 <MX_ICACHE_Init+0x24>)
void MX_ICACHE_Init(void) {
 8025d3e:	b508      	push	{r3, lr}
 8025d40:	6853      	ldr	r3, [r2, #4]
	if (HAL_ICACHE_ConfigAssociativityMode(ICACHE_1WAY) != HAL_OK) {
 8025d42:	2000      	movs	r0, #0
 8025d44:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 8025d48:	6053      	str	r3, [r2, #4]
 8025d4a:	f006 fe39 	bl	802c9c0 <HAL_ICACHE_ConfigAssociativityMode>
 8025d4e:	b108      	cbz	r0, 8025d54 <MX_ICACHE_Init+0x18>
 8025d50:	b672      	cpsid	i
	while (1) {
 8025d52:	e7fe      	b.n	8025d52 <MX_ICACHE_Init+0x16>
	if (HAL_ICACHE_Enable() != HAL_OK) {
 8025d54:	f006 fe50 	bl	802c9f8 <HAL_ICACHE_Enable>
 8025d58:	b108      	cbz	r0, 8025d5e <MX_ICACHE_Init+0x22>
 8025d5a:	b672      	cpsid	i
	while (1) {
 8025d5c:	e7fe      	b.n	8025d5c <MX_ICACHE_Init+0x20>
}
 8025d5e:	bd08      	pop	{r3, pc}
 8025d60:	46020800 	.word	0x46020800

08025d64 <MX_RAMCFG_Init>:
void MX_RAMCFG_Init(void) {
 8025d64:	b508      	push	{r3, lr}
	hramcfg_SRAM1.Instance = RAMCFG_SRAM1;
 8025d66:	4804      	ldr	r0, [pc, #16]	; (8025d78 <MX_RAMCFG_Init+0x14>)
 8025d68:	4b04      	ldr	r3, [pc, #16]	; (8025d7c <MX_RAMCFG_Init+0x18>)
 8025d6a:	6003      	str	r3, [r0, #0]
	if (HAL_RAMCFG_Init(&hramcfg_SRAM1) != HAL_OK) {
 8025d6c:	f006 ff26 	bl	802cbbc <HAL_RAMCFG_Init>
 8025d70:	b108      	cbz	r0, 8025d76 <MX_RAMCFG_Init+0x12>
 8025d72:	b672      	cpsid	i
	while (1) {
 8025d74:	e7fe      	b.n	8025d74 <MX_RAMCFG_Init+0x10>
}
 8025d76:	bd08      	pop	{r3, pc}
 8025d78:	20004cb8 	.word	0x20004cb8
 8025d7c:	40026000 	.word	0x40026000

08025d80 <MX_RNG_Init>:
void MX_RNG_Init(void) {
 8025d80:	b508      	push	{r3, lr}
	memset(&hrng, 0, sizeof(hrng));
 8025d82:	2300      	movs	r3, #0
 8025d84:	4808      	ldr	r0, [pc, #32]	; (8025da8 <MX_RNG_Init+0x28>)
	hrng.Init.ClockErrorDetection = RNG_CED_DISABLE;
 8025d86:	4a09      	ldr	r2, [pc, #36]	; (8025dac <MX_RNG_Init+0x2c>)
	memset(&hrng, 0, sizeof(hrng));
 8025d88:	e9c0 3302 	strd	r3, r3, [r0, #8]
 8025d8c:	6103      	str	r3, [r0, #16]
	hrng.Init.ClockErrorDetection = RNG_CED_DISABLE;
 8025d8e:	2320      	movs	r3, #32
 8025d90:	e9c0 2300 	strd	r2, r3, [r0]
	if (HAL_RNG_Init(&hrng) != HAL_OK) {
 8025d94:	f007 fee0 	bl	802db58 <HAL_RNG_Init>
 8025d98:	b108      	cbz	r0, 8025d9e <MX_RNG_Init+0x1e>
 8025d9a:	b672      	cpsid	i
	while (1) {
 8025d9c:	e7fe      	b.n	8025d9c <MX_RNG_Init+0x1c>
}
 8025d9e:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
	HW_RNG_Disable();
 8025da2:	f002 b9e9 	b.w	8028178 <HW_RNG_Disable>
 8025da6:	bf00      	nop
 8025da8:	20004cc4 	.word	0x20004cc4
 8025dac:	420c0800 	.word	0x420c0800

08025db0 <MX_RTC_Init>:
void MX_RTC_Init(void) {
 8025db0:	b530      	push	{r4, r5, lr}
 8025db2:	b095      	sub	sp, #84	; 0x54
	RTC_PrivilegeStateTypeDef privilegeState = { 0 };
 8025db4:	221c      	movs	r2, #28
 8025db6:	2100      	movs	r1, #0
 8025db8:	a801      	add	r0, sp, #4
 8025dba:	f00b f8f8 	bl	8030fae <memset>
	RTC_AlarmTypeDef sAlarm = { 0 };
 8025dbe:	2230      	movs	r2, #48	; 0x30
 8025dc0:	2100      	movs	r1, #0
 8025dc2:	a808      	add	r0, sp, #32
 8025dc4:	f00b f8f3 	bl	8030fae <memset>
	hrtc.Instance = RTC;
 8025dc8:	4c1b      	ldr	r4, [pc, #108]	; (8025e38 <MX_RTC_Init+0x88>)
 8025dca:	4b1c      	ldr	r3, [pc, #112]	; (8025e3c <MX_RTC_Init+0x8c>)
	hrtc.Init.OutPutType = RTC_OUTPUT_TYPE_OPENDRAIN;
 8025dcc:	f04f 4280 	mov.w	r2, #1073741824	; 0x40000000
	hrtc.Instance = RTC;
 8025dd0:	6023      	str	r3, [r4, #0]
	hrtc.Init.AsynchPrediv = 31;
 8025dd2:	231f      	movs	r3, #31
	hrtc.Init.BinMode = RTC_BINARY_ONLY;
 8025dd4:	f44f 7580 	mov.w	r5, #256	; 0x100
	hrtc.Init.AsynchPrediv = 31;
 8025dd8:	60a3      	str	r3, [r4, #8]
	hrtc.Init.OutPut = RTC_OUTPUT_DISABLE;
 8025dda:	2300      	movs	r3, #0
	if (HAL_RTC_Init(&hrtc) != HAL_OK) {
 8025ddc:	4620      	mov	r0, r4
	hrtc.Init.OutPutRemap = RTC_OUTPUT_REMAP_NONE;
 8025dde:	e9c4 3304 	strd	r3, r3, [r4, #16]
	hrtc.Init.OutPutPullUp = RTC_OUTPUT_PULLUP_NONE;
 8025de2:	e9c4 2307 	strd	r2, r3, [r4, #28]
	hrtc.Init.OutPutPolarity = RTC_OUTPUT_POLARITY_HIGH;
 8025de6:	61a3      	str	r3, [r4, #24]
	hrtc.Init.BinMode = RTC_BINARY_ONLY;
 8025de8:	6265      	str	r5, [r4, #36]	; 0x24
	if (HAL_RTC_Init(&hrtc) != HAL_OK) {
 8025dea:	f008 f827 	bl	802de3c <HAL_RTC_Init>
 8025dee:	b108      	cbz	r0, 8025df4 <MX_RTC_Init+0x44>
 8025df0:	b672      	cpsid	i
	while (1) {
 8025df2:	e7fe      	b.n	8025df2 <MX_RTC_Init+0x42>
	privilegeState.backupRegisterStartZone2 = RTC_BKP_DR0;
 8025df4:	e9cd 0004 	strd	r0, r0, [sp, #16]
	privilegeState.rtcPrivilegeFull = RTC_PRIVILEGE_FULL_NO;
 8025df8:	9001      	str	r0, [sp, #4]
	privilegeState.backupRegisterStartZone3 = RTC_BKP_DR0;
 8025dfa:	9006      	str	r0, [sp, #24]
	if (HAL_RTCEx_PrivilegeModeSet(&hrtc, &privilegeState) != HAL_OK) {
 8025dfc:	a901      	add	r1, sp, #4
 8025dfe:	4620      	mov	r0, r4
 8025e00:	f008 fb02 	bl	802e408 <HAL_RTCEx_PrivilegeModeSet>
 8025e04:	b108      	cbz	r0, 8025e0a <MX_RTC_Init+0x5a>
 8025e06:	b672      	cpsid	i
	while (1) {
 8025e08:	e7fe      	b.n	8025e08 <MX_RTC_Init+0x58>
	if (HAL_RTCEx_SetSSRU_IT(&hrtc) != HAL_OK) {
 8025e0a:	4620      	mov	r0, r4
 8025e0c:	f008 fac8 	bl	802e3a0 <HAL_RTCEx_SetSSRU_IT>
 8025e10:	b108      	cbz	r0, 8025e16 <MX_RTC_Init+0x66>
 8025e12:	b672      	cpsid	i
	while (1) {
 8025e14:	e7fe      	b.n	8025e14 <MX_RTC_Init+0x64>
	sAlarm.AlarmSubSecondMask = RTC_ALARMSUBSECONDBINMASK_NONE;
 8025e16:	f04f 537c 	mov.w	r3, #1056964608	; 0x3f000000
	sAlarm.BinaryAutoClr = RTC_ALARMSUBSECONDBIN_AUTOCLR_NO;
 8025e1a:	900f      	str	r0, [sp, #60]	; 0x3c
	sAlarm.AlarmTime.SubSeconds = 0x0;
 8025e1c:	9009      	str	r0, [sp, #36]	; 0x24
	sAlarm.AlarmMask = RTC_ALARMMASK_NONE;
 8025e1e:	900d      	str	r0, [sp, #52]	; 0x34
	if (HAL_RTC_SetAlarm_IT(&hrtc, &sAlarm, RTC_FORMAT_BCD) != HAL_OK) {
 8025e20:	2201      	movs	r2, #1
 8025e22:	4620      	mov	r0, r4
 8025e24:	a908      	add	r1, sp, #32
	sAlarm.AlarmSubSecondMask = RTC_ALARMSUBSECONDBINMASK_NONE;
 8025e26:	930e      	str	r3, [sp, #56]	; 0x38
	sAlarm.Alarm = RTC_ALARM_A;
 8025e28:	9513      	str	r5, [sp, #76]	; 0x4c
	if (HAL_RTC_SetAlarm_IT(&hrtc, &sAlarm, RTC_FORMAT_BCD) != HAL_OK) {
 8025e2a:	f008 f8df 	bl	802dfec <HAL_RTC_SetAlarm_IT>
 8025e2e:	b108      	cbz	r0, 8025e34 <MX_RTC_Init+0x84>
 8025e30:	b672      	cpsid	i
	while (1) {
 8025e32:	e7fe      	b.n	8025e32 <MX_RTC_Init+0x82>
}
 8025e34:	b015      	add	sp, #84	; 0x54
 8025e36:	bd30      	pop	{r4, r5, pc}
 8025e38:	20004cd8 	.word	0x20004cd8
 8025e3c:	46007800 	.word	0x46007800

08025e40 <MX_USART1_UART_Init>:
	huart1.Init.BaudRate = 115200;
 8025e40:	f44f 33e1 	mov.w	r3, #115200	; 0x1c200
void MX_USART1_UART_Init(void) {
 8025e44:	b510      	push	{r4, lr}
	huart1.Init.BaudRate = 115200;
 8025e46:	4a16      	ldr	r2, [pc, #88]	; (8025ea0 <MX_USART1_UART_Init+0x60>)
	huart1.Instance = USART1;
 8025e48:	4c16      	ldr	r4, [pc, #88]	; (8025ea4 <MX_USART1_UART_Init+0x64>)
	huart1.Init.BaudRate = 115200;
 8025e4a:	e9c4 2300 	strd	r2, r3, [r4]
	huart1.Init.WordLength = UART_WORDLENGTH_8B;
 8025e4e:	2300      	movs	r3, #0
	huart1.Init.Mode = UART_MODE_TX_RX;
 8025e50:	220c      	movs	r2, #12
	huart1.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 8025e52:	e9c4 2305 	strd	r2, r3, [r4, #20]
	huart1.Init.OverSampling = UART_OVERSAMPLING_8;
 8025e56:	f44f 4200 	mov.w	r2, #32768	; 0x8000
	if (HAL_UART_Init(&huart1) != HAL_OK) {
 8025e5a:	4620      	mov	r0, r4
	huart1.Init.StopBits = UART_STOPBITS_1;
 8025e5c:	e9c4 3302 	strd	r3, r3, [r4, #8]
	huart1.Init.OneBitSampling = UART_ONE_BIT_SAMPLE_DISABLE;
 8025e60:	e9c4 2307 	strd	r2, r3, [r4, #28]
	huart1.AdvancedInit.AdvFeatureInit = UART_ADVFEATURE_NO_INIT;
 8025e64:	e9c4 3309 	strd	r3, r3, [r4, #36]	; 0x24
	huart1.Init.Parity = UART_PARITY_NONE;
 8025e68:	6123      	str	r3, [r4, #16]
	if (HAL_UART_Init(&huart1) != HAL_OK) {
 8025e6a:	f00a f98b 	bl	8030184 <HAL_UART_Init>
 8025e6e:	4601      	mov	r1, r0
 8025e70:	b108      	cbz	r0, 8025e76 <MX_USART1_UART_Init+0x36>
 8025e72:	b672      	cpsid	i
	while (1) {
 8025e74:	e7fe      	b.n	8025e74 <MX_USART1_UART_Init+0x34>
	if (HAL_UARTEx_SetTxFifoThreshold(&huart1, UART_TXFIFO_THRESHOLD_1_8)
 8025e76:	4620      	mov	r0, r4
 8025e78:	f00a faf4 	bl	8030464 <HAL_UARTEx_SetTxFifoThreshold>
 8025e7c:	4601      	mov	r1, r0
 8025e7e:	b108      	cbz	r0, 8025e84 <MX_USART1_UART_Init+0x44>
 8025e80:	b672      	cpsid	i
	while (1) {
 8025e82:	e7fe      	b.n	8025e82 <MX_USART1_UART_Init+0x42>
	if (HAL_UARTEx_SetRxFifoThreshold(&huart1, UART_RXFIFO_THRESHOLD_1_8)
 8025e84:	4620      	mov	r0, r4
 8025e86:	f00a fb37 	bl	80304f8 <HAL_UARTEx_SetRxFifoThreshold>
 8025e8a:	b108      	cbz	r0, 8025e90 <MX_USART1_UART_Init+0x50>
 8025e8c:	b672      	cpsid	i
	while (1) {
 8025e8e:	e7fe      	b.n	8025e8e <MX_USART1_UART_Init+0x4e>
	if (HAL_UARTEx_EnableFifoMode(&huart1) != HAL_OK) {
 8025e90:	4620      	mov	r0, r4
 8025e92:	f00a faab 	bl	80303ec <HAL_UARTEx_EnableFifoMode>
 8025e96:	b108      	cbz	r0, 8025e9c <MX_USART1_UART_Init+0x5c>
 8025e98:	b672      	cpsid	i
	while (1) {
 8025e9a:	e7fe      	b.n	8025e9a <MX_USART1_UART_Init+0x5a>
}
 8025e9c:	bd10      	pop	{r4, pc}
 8025e9e:	bf00      	nop
 8025ea0:	40013800 	.word	0x40013800
 8025ea4:	20004d54 	.word	0x20004d54

08025ea8 <MX_GPIO_Init>:
void MX_GPIO_Init(void) {
 8025ea8:	b530      	push	{r4, r5, lr}
 8025eaa:	b089      	sub	sp, #36	; 0x24
	GPIO_InitTypeDef GPIO_InitStruct = { 0 };
 8025eac:	2100      	movs	r1, #0
 8025eae:	2214      	movs	r2, #20
 8025eb0:	a803      	add	r0, sp, #12
 8025eb2:	f00b f87c 	bl	8030fae <memset>
	__HAL_RCC_GPIOB_CLK_ENABLE();
 8025eb6:	4b2a      	ldr	r3, [pc, #168]	; (8025f60 <MX_GPIO_Init+0xb8>)
	GPIO_InitStruct.Pull = GPIO_NOPULL;
 8025eb8:	2400      	movs	r4, #0
	__HAL_RCC_GPIOB_CLK_ENABLE();
 8025eba:	f8d3 208c 	ldr.w	r2, [r3, #140]	; 0x8c
	GPIO_InitStruct.Mode = GPIO_MODE_IT_RISING;
 8025ebe:	f44f 1588 	mov.w	r5, #1114112	; 0x110000
	__HAL_RCC_GPIOB_CLK_ENABLE();
 8025ec2:	f042 0202 	orr.w	r2, r2, #2
 8025ec6:	f8c3 208c 	str.w	r2, [r3, #140]	; 0x8c
 8025eca:	f8d3 208c 	ldr.w	r2, [r3, #140]	; 0x8c
 8025ece:	f002 0202 	and.w	r2, r2, #2
 8025ed2:	9200      	str	r2, [sp, #0]
 8025ed4:	9a00      	ldr	r2, [sp, #0]
	__HAL_RCC_GPIOA_CLK_ENABLE();
 8025ed6:	f8d3 208c 	ldr.w	r2, [r3, #140]	; 0x8c
 8025eda:	f042 0201 	orr.w	r2, r2, #1
 8025ede:	f8c3 208c 	str.w	r2, [r3, #140]	; 0x8c
 8025ee2:	f8d3 208c 	ldr.w	r2, [r3, #140]	; 0x8c
 8025ee6:	f002 0201 	and.w	r2, r2, #1
 8025eea:	9201      	str	r2, [sp, #4]
 8025eec:	9a01      	ldr	r2, [sp, #4]
	__HAL_RCC_GPIOC_CLK_ENABLE();
 8025eee:	f8d3 208c 	ldr.w	r2, [r3, #140]	; 0x8c
 8025ef2:	f042 0204 	orr.w	r2, r2, #4
 8025ef6:	f8c3 208c 	str.w	r2, [r3, #140]	; 0x8c
 8025efa:	f8d3 308c 	ldr.w	r3, [r3, #140]	; 0x8c
 8025efe:	f003 0304 	and.w	r3, r3, #4
 8025f02:	9302      	str	r3, [sp, #8]
 8025f04:	9b02      	ldr	r3, [sp, #8]
	RT_DEBUG_GPIO_Init();
 8025f06:	f001 ff88 	bl	8027e1a <RT_DEBUG_GPIO_Init>
	GPIO_InitStruct.Mode = GPIO_MODE_IT_RISING;
 8025f0a:	f44f 5300 	mov.w	r3, #8192	; 0x2000
	HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8025f0e:	a903      	add	r1, sp, #12
 8025f10:	4814      	ldr	r0, [pc, #80]	; (8025f64 <MX_GPIO_Init+0xbc>)
	GPIO_InitStruct.Mode = GPIO_MODE_IT_RISING;
 8025f12:	e9cd 3503 	strd	r3, r5, [sp, #12]
	GPIO_InitStruct.Pull = GPIO_NOPULL;
 8025f16:	9405      	str	r4, [sp, #20]
	HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8025f18:	f006 fb92 	bl	802c640 <HAL_GPIO_Init>
	GPIO_InitStruct.Pin = GPIO_PIN_7 | GPIO_PIN_6;
 8025f1c:	23c0      	movs	r3, #192	; 0xc0
	HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8025f1e:	a903      	add	r1, sp, #12
 8025f20:	4811      	ldr	r0, [pc, #68]	; (8025f68 <MX_GPIO_Init+0xc0>)
	GPIO_InitStruct.Mode = GPIO_MODE_IT_RISING;
 8025f22:	e9cd 3503 	strd	r3, r5, [sp, #12]
	GPIO_InitStruct.Pull = GPIO_NOPULL;
 8025f26:	9405      	str	r4, [sp, #20]
	HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8025f28:	f006 fb8a 	bl	802c640 <HAL_GPIO_Init>
	HAL_NVIC_SetPriority(EXTI6_IRQn, 9, 0);
 8025f2c:	4622      	mov	r2, r4
 8025f2e:	2109      	movs	r1, #9
 8025f30:	2011      	movs	r0, #17
 8025f32:	f005 fc09 	bl	802b748 <HAL_NVIC_SetPriority>
	HAL_NVIC_EnableIRQ(EXTI6_IRQn);
 8025f36:	2011      	movs	r0, #17
 8025f38:	f005 fc4a 	bl	802b7d0 <HAL_NVIC_EnableIRQ>
	HAL_NVIC_SetPriority(EXTI7_IRQn, 9, 0);
 8025f3c:	4622      	mov	r2, r4
 8025f3e:	2109      	movs	r1, #9
 8025f40:	2012      	movs	r0, #18
 8025f42:	f005 fc01 	bl	802b748 <HAL_NVIC_SetPriority>
	HAL_NVIC_EnableIRQ(EXTI7_IRQn);
 8025f46:	2012      	movs	r0, #18
 8025f48:	f005 fc42 	bl	802b7d0 <HAL_NVIC_EnableIRQ>
	HAL_NVIC_SetPriority(EXTI13_IRQn, 9, 0);
 8025f4c:	4622      	mov	r2, r4
 8025f4e:	2109      	movs	r1, #9
 8025f50:	2018      	movs	r0, #24
 8025f52:	f005 fbf9 	bl	802b748 <HAL_NVIC_SetPriority>
	HAL_NVIC_EnableIRQ(EXTI13_IRQn);
 8025f56:	2018      	movs	r0, #24
 8025f58:	f005 fc3a 	bl	802b7d0 <HAL_NVIC_EnableIRQ>
}
 8025f5c:	b009      	add	sp, #36	; 0x24
 8025f5e:	bd30      	pop	{r4, r5, pc}
 8025f60:	46020c00 	.word	0x46020c00
 8025f64:	42020800 	.word	0x42020800
 8025f68:	42020400 	.word	0x42020400

08025f6c <UserButton_Callback>:
  iDutyCycle = (iDutyCycle + 1) % TIM_DUTY_CYCLES_NB;
 8025f6c:	210b      	movs	r1, #11
 8025f6e:	4a0a      	ldr	r2, [pc, #40]	; (8025f98 <UserButton_Callback+0x2c>)
 8025f70:	7813      	ldrb	r3, [r2, #0]
 8025f72:	3301      	adds	r3, #1
 8025f74:	fbb3 f0f1 	udiv	r0, r3, r1
 8025f78:	fb01 3310 	mls	r3, r1, r0, r3
  P = (D*T)/100;
 8025f7c:	4807      	ldr	r0, [pc, #28]	; (8025f9c <UserButton_Callback+0x30>)
  iDutyCycle = (iDutyCycle + 1) % TIM_DUTY_CYCLES_NB;
 8025f7e:	7013      	strb	r3, [r2, #0]
  * @param  TIMx Timer instance
  * @retval Auto-reload value
  */
__STATIC_INLINE uint32_t LL_TIM_GetAutoReload(const TIM_TypeDef *TIMx)
{
  return (uint32_t)(READ_REG(TIMx->ARR));
 8025f80:	4a07      	ldr	r2, [pc, #28]	; (8025fa0 <UserButton_Callback+0x34>)
  P = (D*T)/100;
 8025f82:	f850 3023 	ldr.w	r3, [r0, r3, lsl #2]
 8025f86:	6ad1      	ldr	r1, [r2, #44]	; 0x2c
 8025f88:	fb01 3303 	mla	r3, r1, r3, r3
 8025f8c:	2164      	movs	r1, #100	; 0x64
 8025f8e:	fbb3 f3f1 	udiv	r3, r3, r1
  * @param  CompareValue between Min_Data=0 and Max_Data=65535
  * @retval None
  */
__STATIC_INLINE void LL_TIM_OC_SetCompareCH1(TIM_TypeDef *TIMx, uint32_t CompareValue)
{
  WRITE_REG(TIMx->CCR1, CompareValue);
 8025f92:	6353      	str	r3, [r2, #52]	; 0x34
}
 8025f94:	4770      	bx	lr
 8025f96:	bf00      	nop
 8025f98:	20004e1c 	.word	0x20004e1c
 8025f9c:	08032394 	.word	0x08032394
 8025fa0:	40000400 	.word	0x40000400

08025fa4 <main>:
int main(void) {
 8025fa4:	b580      	push	{r7, lr}
 8025fa6:	b08c      	sub	sp, #48	; 0x30
	HAL_Init();
 8025fa8:	f005 f81e 	bl	802afe8 <HAL_Init>
	MX_APPE_Config();
 8025fac:	f7ff fd58 	bl	8025a60 <MX_APPE_Config>
	SystemClock_Config();
 8025fb0:	f7ff fe64 	bl	8025c7c <SystemClock_Config>
	PeriphCommonClock_Config();
 8025fb4:	f7ff feac 	bl	8025d10 <PeriphCommonClock_Config>
	TimOutClock = SystemCoreClock / 1;
 8025fb8:	4b6e      	ldr	r3, [pc, #440]	; (8026174 <main+0x1d0>)
	timxPrescaler = __LL_TIM_CALC_PSC(SystemCoreClock, 10000);
 8025fba:	4e6f      	ldr	r6, [pc, #444]	; (8026178 <main+0x1d4>)
	TimOutClock = SystemCoreClock / 1;
 8025fbc:	681a      	ldr	r2, [r3, #0]
	timxPrescaler = __LL_TIM_CALC_PSC(SystemCoreClock, 10000);
 8025fbe:	f242 730f 	movw	r3, #9999	; 0x270f
 8025fc2:	429a      	cmp	r2, r3
 8025fc4:	bf81      	itttt	hi
 8025fc6:	f242 7110 	movwhi	r1, #10000	; 0x2710
 8025fca:	f502 539c 	addhi.w	r3, r2, #4992	; 0x1380
 8025fce:	3308      	addhi	r3, #8
 8025fd0:	fbb3 f3f1 	udivhi	r3, r3, r1
 8025fd4:	bf94      	ite	ls
 8025fd6:	2300      	movls	r3, #0
 8025fd8:	f103 33ff 	addhi.w	r3, r3, #4294967295	; 0xffffffff
 8025fdc:	6033      	str	r3, [r6, #0]
	timxPeriod = __LL_TIM_CALC_ARR(TimOutClock, timxPrescaler, 200);
 8025fde:	3301      	adds	r3, #1
 8025fe0:	fbb2 f1f3 	udiv	r1, r2, r3
 8025fe4:	29c7      	cmp	r1, #199	; 0xc7
 8025fe6:	bf83      	ittte	hi
 8025fe8:	21c8      	movhi	r1, #200	; 0xc8
 8025fea:	434b      	mulhi	r3, r1
 8025fec:	fbb2 f3f3 	udivhi	r3, r2, r3
 8025ff0:	2300      	movls	r3, #0
 8025ff2:	f8df 81a0 	ldr.w	r8, [pc, #416]	; 8026194 <main+0x1f0>
 8025ff6:	bf88      	it	hi
 8025ff8:	f103 33ff 	addhi.w	r3, r3, #4294967295	; 0xffffffff
 8025ffc:	f8c8 3000 	str.w	r3, [r8]
	MX_GPIO_Init();
 8026000:	f7ff ff52 	bl	8025ea8 <MX_GPIO_Init>
	__HAL_RCC_GPDMA1_CLK_ENABLE();
 8026004:	4b5d      	ldr	r3, [pc, #372]	; (802617c <main+0x1d8>)
	HAL_NVIC_SetPriority(GPDMA1_Channel0_IRQn, 6, 0);
 8026006:	2106      	movs	r1, #6
	__HAL_RCC_GPDMA1_CLK_ENABLE();
 8026008:	f8d3 2088 	ldr.w	r2, [r3, #136]	; 0x88
	HAL_NVIC_SetPriority(GPDMA1_Channel0_IRQn, 6, 0);
 802600c:	201d      	movs	r0, #29
	__HAL_RCC_GPDMA1_CLK_ENABLE();
 802600e:	f042 0201 	orr.w	r2, r2, #1
 8026012:	f8c3 2088 	str.w	r2, [r3, #136]	; 0x88
 8026016:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
	HAL_NVIC_SetPriority(GPDMA1_Channel0_IRQn, 6, 0);
 802601a:	2200      	movs	r2, #0
	__HAL_RCC_GPDMA1_CLK_ENABLE();
 802601c:	f003 0301 	and.w	r3, r3, #1
 8026020:	9301      	str	r3, [sp, #4]
 8026022:	9b01      	ldr	r3, [sp, #4]
	HAL_NVIC_SetPriority(GPDMA1_Channel0_IRQn, 6, 0);
 8026024:	f005 fb90 	bl	802b748 <HAL_NVIC_SetPriority>
	HAL_NVIC_EnableIRQ(GPDMA1_Channel0_IRQn);
 8026028:	201d      	movs	r0, #29
 802602a:	f005 fbd1 	bl	802b7d0 <HAL_NVIC_EnableIRQ>
	HAL_NVIC_SetPriority(GPDMA1_Channel1_IRQn, 5, 0);
 802602e:	2200      	movs	r2, #0
 8026030:	2105      	movs	r1, #5
 8026032:	201e      	movs	r0, #30
 8026034:	f005 fb88 	bl	802b748 <HAL_NVIC_SetPriority>
	HAL_NVIC_EnableIRQ(GPDMA1_Channel1_IRQn);
 8026038:	201e      	movs	r0, #30
 802603a:	f005 fbc9 	bl	802b7d0 <HAL_NVIC_EnableIRQ>
	MX_ICACHE_Init();
 802603e:	f7ff fe7d 	bl	8025d3c <MX_ICACHE_Init>
	MX_RAMCFG_Init();
 8026042:	f7ff fe8f 	bl	8025d64 <MX_RAMCFG_Init>
	MX_RTC_Init();
 8026046:	f7ff feb3 	bl	8025db0 <MX_RTC_Init>
	MX_USART1_UART_Init();
 802604a:	f7ff fef9 	bl	8025e40 <MX_USART1_UART_Init>
	ADC_ChannelConfTypeDef sConfig = { 0 };
 802604e:	2300      	movs	r3, #0
	hadc4.Init.LowPowerAutonomousDPD = ADC_LP_AUTONOMOUS_DPD_DISABLE;
 8026050:	4c4b      	ldr	r4, [pc, #300]	; (8026180 <main+0x1dc>)
	hadc4.Instance = ADC4;
 8026052:	4a4c      	ldr	r2, [pc, #304]	; (8026184 <main+0x1e0>)
	hadc4.Init.SamplingTimeCommon1 = ADC_SAMPLETIME_814CYCLES_5;
 8026054:	f44f 5080 	mov.w	r0, #4096	; 0x1000
	hadc4.Init.ClockPrescaler = ADC_CLOCK_ASYNC_DIV1;
 8026058:	e9c4 2300 	strd	r2, r3, [r4]
	hadc4.Init.EOCSelection = ADC_EOC_SINGLE_CONV;
 802605c:	2204      	movs	r2, #4
 802605e:	6162      	str	r2, [r4, #20]
	hadc4.Init.NbrOfConversion = 1;
 8026060:	2201      	movs	r2, #1
 8026062:	6262      	str	r2, [r4, #36]	; 0x24
	hadc4.Init.TriggerFrequencyMode = ADC_TRIGGER_FREQ_LOW;
 8026064:	f04f 5200 	mov.w	r2, #536870912	; 0x20000000
 8026068:	6562      	str	r2, [r4, #84]	; 0x54
	hadc4.Init.SamplingTimeCommon1 = ADC_SAMPLETIME_814CYCLES_5;
 802606a:	2207      	movs	r2, #7
	hadc4.Init.LowPowerAutoWait = DISABLE;
 802606c:	8323      	strh	r3, [r4, #24]
	hadc4.Init.SamplingTimeCommon1 = ADC_SAMPLETIME_814CYCLES_5;
 802606e:	e9c4 020e 	strd	r0, r2, [r4, #56]	; 0x38
	if (HAL_ADC_Init(&hadc4) != HAL_OK) {
 8026072:	4620      	mov	r0, r4
	ADC_ChannelConfTypeDef sConfig = { 0 };
 8026074:	e9cd 3305 	strd	r3, r3, [sp, #20]
	hadc4.Init.DataAlign = ADC_DATAALIGN_RIGHT;
 8026078:	e9c4 3302 	strd	r3, r3, [r4, #8]
	hadc4.Init.ExternalTrigConvEdge = ADC_EXTERNALTRIGCONVEDGE_NONE;
 802607c:	e9c4 330b 	strd	r3, r3, [r4, #44]	; 0x2c
	ADC_ChannelConfTypeDef sConfig = { 0 };
 8026080:	9307      	str	r3, [sp, #28]
	hadc4.Init.LowPowerAutonomousDPD = ADC_LP_AUTONOMOUS_DPD_DISABLE;
 8026082:	61e3      	str	r3, [r4, #28]
	hadc4.Init.ScanConvMode = ADC_SCAN_DISABLE;
 8026084:	6123      	str	r3, [r4, #16]
	hadc4.Init.ContinuousConvMode = DISABLE;
 8026086:	f884 3020 	strb.w	r3, [r4, #32]
	hadc4.Init.DMAContinuousRequests = DISABLE;
 802608a:	f884 3034 	strb.w	r3, [r4, #52]	; 0x34
	hadc4.Init.SamplingTimeCommon2 = ADC_SAMPLETIME_1CYCLE_5;
 802608e:	6423      	str	r3, [r4, #64]	; 0x40
	hadc4.Init.OversamplingMode = DISABLE;
 8026090:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
	if (HAL_ADC_Init(&hadc4) != HAL_OK) {
 8026094:	f004 ffe8 	bl	802b068 <HAL_ADC_Init>
 8026098:	b108      	cbz	r0, 802609e <main+0xfa>
 802609a:	b672      	cpsid	i
	while (1) {
 802609c:	e7fe      	b.n	802609c <main+0xf8>
	sConfig.Channel = ADC_CHANNEL_TEMPSENSOR;
 802609e:	4b3a      	ldr	r3, [pc, #232]	; (8026188 <main+0x1e4>)
	sConfig.SamplingTime = ADC_SAMPLINGTIME_COMMON_1;
 80260a0:	9007      	str	r0, [sp, #28]
	sConfig.Rank = ADC_REGULAR_RANK_1;
 80260a2:	e9cd 3005 	strd	r3, r0, [sp, #20]
	if (HAL_ADC_ConfigChannel(&hadc4, &sConfig) != HAL_OK) {
 80260a6:	a905      	add	r1, sp, #20
 80260a8:	4620      	mov	r0, r4
 80260aa:	f005 f9e5 	bl	802b478 <HAL_ADC_ConfigChannel>
 80260ae:	4607      	mov	r7, r0
 80260b0:	b108      	cbz	r0, 80260b6 <main+0x112>
 80260b2:	b672      	cpsid	i
	while (1) {
 80260b4:	e7fe      	b.n	80260b4 <main+0x110>
	MX_RNG_Init();
 80260b6:	f7ff fe63 	bl	8025d80 <MX_RNG_Init>
	TIM_OC_InitTypeDef sConfigOC = { 0 };
 80260ba:	221c      	movs	r2, #28
 80260bc:	4639      	mov	r1, r7
 80260be:	a805      	add	r0, sp, #20
	htim3.Instance = TIM3;
 80260c0:	4c32      	ldr	r4, [pc, #200]	; (802618c <main+0x1e8>)
	TIM_MasterConfigTypeDef sMasterConfig = { 0 };
 80260c2:	e9cd 7702 	strd	r7, r7, [sp, #8]
 80260c6:	9704      	str	r7, [sp, #16]
	TIM_OC_InitTypeDef sConfigOC = { 0 };
 80260c8:	f00a ff71 	bl	8030fae <memset>
	htim3.Init.Prescaler = timxPrescaler;
 80260cc:	6833      	ldr	r3, [r6, #0]
	htim3.Instance = TIM3;
 80260ce:	4d30      	ldr	r5, [pc, #192]	; (8026190 <main+0x1ec>)
	htim3.Init.CounterMode = TIM_COUNTERMODE_UP;
 80260d0:	e9c4 3701 	strd	r3, r7, [r4, #4]
	htim3.Init.Period = timxPeriod;
 80260d4:	f8d8 3000 	ldr.w	r3, [r8]
	if (HAL_TIM_PWM_Init(&htim3) != HAL_OK) {
 80260d8:	4620      	mov	r0, r4
	htim3.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 80260da:	e9c4 3703 	strd	r3, r7, [r4, #12]
	htim3.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_ENABLE;
 80260de:	2380      	movs	r3, #128	; 0x80
	htim3.Instance = TIM3;
 80260e0:	6025      	str	r5, [r4, #0]
	htim3.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_ENABLE;
 80260e2:	61a3      	str	r3, [r4, #24]
	if (HAL_TIM_PWM_Init(&htim3) != HAL_OK) {
 80260e4:	f008 fb9e 	bl	802e824 <HAL_TIM_PWM_Init>
 80260e8:	b108      	cbz	r0, 80260ee <main+0x14a>
 80260ea:	b672      	cpsid	i
	while (1) {
 80260ec:	e7fe      	b.n	80260ec <main+0x148>
	sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 80260ee:	9002      	str	r0, [sp, #8]
	sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 80260f0:	9004      	str	r0, [sp, #16]
	if (HAL_TIMEx_MasterConfigSynchronization(&htim3, &sMasterConfig)
 80260f2:	a902      	add	r1, sp, #8
 80260f4:	4620      	mov	r0, r4
 80260f6:	f008 fe81 	bl	802edfc <HAL_TIMEx_MasterConfigSynchronization>
 80260fa:	4602      	mov	r2, r0
 80260fc:	b108      	cbz	r0, 8026102 <main+0x15e>
 80260fe:	b672      	cpsid	i
	while (1) {
 8026100:	e7fe      	b.n	8026100 <main+0x15c>
	sConfigOC.OCMode = TIM_OCMODE_PWM1;
 8026102:	2360      	movs	r3, #96	; 0x60
 8026104:	9305      	str	r3, [sp, #20]
	sConfigOC.Pulse = ((timxPeriod + 1) / 2);
 8026106:	f8d8 3000 	ldr.w	r3, [r8]
	sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 802610a:	9009      	str	r0, [sp, #36]	; 0x24
	sConfigOC.Pulse = ((timxPeriod + 1) / 2);
 802610c:	3301      	adds	r3, #1
 802610e:	085b      	lsrs	r3, r3, #1
	sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 8026110:	e9cd 3006 	strd	r3, r0, [sp, #24]
	if (HAL_TIM_PWM_ConfigChannel(&htim3, &sConfigOC, TIM_CHANNEL_1)
 8026114:	a905      	add	r1, sp, #20
 8026116:	4620      	mov	r0, r4
 8026118:	f008 fc68 	bl	802e9ec <HAL_TIM_PWM_ConfigChannel>
 802611c:	4606      	mov	r6, r0
 802611e:	b108      	cbz	r0, 8026124 <main+0x180>
 8026120:	b672      	cpsid	i
	while (1) {
 8026122:	e7fe      	b.n	8026122 <main+0x17e>
	HAL_TIM_MspPostInit(&htim3);
 8026124:	4620      	mov	r0, r4
 8026126:	f000 f931 	bl	802638c <HAL_TIM_MspPostInit>
	if (HAL_TIM_PWM_Start(&htim3, TIM_CHANNEL_1) != HAL_OK) {
 802612a:	4631      	mov	r1, r6
 802612c:	4620      	mov	r0, r4
 802612e:	f008 fdbb 	bl	802eca8 <HAL_TIM_PWM_Start>
 8026132:	b108      	cbz	r0, 8026138 <main+0x194>
 8026134:	b672      	cpsid	i
	while (1) {
 8026136:	e7fe      	b.n	8026136 <main+0x192>
  * @param  TIMx Timer instance
  * @retval None
  */
__STATIC_INLINE void LL_TIM_EnableIT_CC1(TIM_TypeDef *TIMx)
{
  SET_BIT(TIMx->DIER, TIM_DIER_CC1IE);
 8026138:	68eb      	ldr	r3, [r5, #12]
 802613a:	f043 0302 	orr.w	r3, r3, #2
 802613e:	60eb      	str	r3, [r5, #12]
  SET_BIT(TIMx->CCER, Channels);
 8026140:	6a2b      	ldr	r3, [r5, #32]
 8026142:	f043 0301 	orr.w	r3, r3, #1
 8026146:	622b      	str	r3, [r5, #32]
  SET_BIT(TIMx->CR1, TIM_CR1_CEN);
 8026148:	682b      	ldr	r3, [r5, #0]
 802614a:	f043 0301 	orr.w	r3, r3, #1
 802614e:	602b      	str	r3, [r5, #0]
  * @param  TIMx Timer instance
  * @retval None
  */
__STATIC_INLINE void LL_TIM_GenerateEvent_UPDATE(TIM_TypeDef *TIMx)
{
  SET_BIT(TIMx->EGR, TIM_EGR_UG);
 8026150:	696b      	ldr	r3, [r5, #20]
 8026152:	f043 0301 	orr.w	r3, r3, #1
 8026156:	616b      	str	r3, [r5, #20]
	MX_APPE_Init(NULL);
 8026158:	f7ff fc92 	bl	8025a80 <MX_APPE_Init>
	__HAL_TIM_SET_COMPARE(&htim3, TIM_CHANNEL_1, 50);
 802615c:	2232      	movs	r2, #50	; 0x32
 802615e:	6823      	ldr	r3, [r4, #0]
 8026160:	635a      	str	r2, [r3, #52]	; 0x34
		MX_APPE_Process();
 8026162:	f7ff fd3d 	bl	8025be0 <MX_APPE_Process>
		UserButton_Callback();
 8026166:	f7ff ff01 	bl	8025f6c <UserButton_Callback>
		HAL_Delay(5000);
 802616a:	f241 3088 	movw	r0, #5000	; 0x1388
 802616e:	f004 ff65 	bl	802b03c <HAL_Delay>
	while (1) {
 8026172:	e7f6      	b.n	8026162 <main+0x1be>
 8026174:	200004d0 	.word	0x200004d0
 8026178:	20004e24 	.word	0x20004e24
 802617c:	46020c00 	.word	0x46020c00
 8026180:	20004b5c 	.word	0x20004b5c
 8026184:	46021000 	.word	0x46021000
 8026188:	b4002000 	.word	0xb4002000
 802618c:	20004d08 	.word	0x20004d08
 8026190:	40000400 	.word	0x40000400
 8026194:	20004e20 	.word	0x20004e20

08026198 <Error_Handler>:
 8026198:	b672      	cpsid	i
	while (1) {
 802619a:	e7fe      	b.n	802619a <Error_Handler+0x2>

0802619c <assert_failed>:
 802619c:	b672      	cpsid	i
 802619e:	e7fe      	b.n	802619e <assert_failed+0x2>

080261a0 <HAL_MspInit>:
{
  /* USER CODE BEGIN MspInit 0 */

  /* USER CODE END MspInit 0 */

  __HAL_RCC_PWR_CLK_ENABLE();
 80261a0:	4b10      	ldr	r3, [pc, #64]	; (80261e4 <HAL_MspInit+0x44>)
{
 80261a2:	b507      	push	{r0, r1, r2, lr}
  __HAL_RCC_PWR_CLK_ENABLE();
 80261a4:	f8d3 2094 	ldr.w	r2, [r3, #148]	; 0x94

  /* System interrupt init*/

  /* Peripheral interrupt init */
  /* RCC_IRQn interrupt configuration */
  HAL_NVIC_SetPriority(RCC_IRQn, 1, 0);
 80261a8:	2101      	movs	r1, #1
  __HAL_RCC_PWR_CLK_ENABLE();
 80261aa:	f042 0204 	orr.w	r2, r2, #4
 80261ae:	f8c3 2094 	str.w	r2, [r3, #148]	; 0x94
 80261b2:	f8d3 3094 	ldr.w	r3, [r3, #148]	; 0x94
  HAL_NVIC_SetPriority(RCC_IRQn, 1, 0);
 80261b6:	2200      	movs	r2, #0
  __HAL_RCC_PWR_CLK_ENABLE();
 80261b8:	f003 0304 	and.w	r3, r3, #4
 80261bc:	9301      	str	r3, [sp, #4]
  HAL_NVIC_SetPriority(RCC_IRQn, 1, 0);
 80261be:	2009      	movs	r0, #9
  __HAL_RCC_PWR_CLK_ENABLE();
 80261c0:	9b01      	ldr	r3, [sp, #4]
  HAL_NVIC_SetPriority(RCC_IRQn, 1, 0);
 80261c2:	f005 fac1 	bl	802b748 <HAL_NVIC_SetPriority>
  HAL_NVIC_EnableIRQ(RCC_IRQn);
 80261c6:	2009      	movs	r0, #9
 80261c8:	f005 fb02 	bl	802b7d0 <HAL_NVIC_EnableIRQ>
  /* RADIO_IRQn interrupt configuration */
  HAL_NVIC_SetPriority(RADIO_IRQn, 0, 0);
 80261cc:	2200      	movs	r2, #0
 80261ce:	2042      	movs	r0, #66	; 0x42
 80261d0:	4611      	mov	r1, r2
 80261d2:	f005 fab9 	bl	802b748 <HAL_NVIC_SetPriority>
  HAL_NVIC_EnableIRQ(RADIO_IRQn);
 80261d6:	2042      	movs	r0, #66	; 0x42

  /* USER CODE BEGIN MspInit 1 */

  /* USER CODE END MspInit 1 */
}
 80261d8:	b003      	add	sp, #12
 80261da:	f85d eb04 	ldr.w	lr, [sp], #4
  HAL_NVIC_EnableIRQ(RADIO_IRQn);
 80261de:	f005 baf7 	b.w	802b7d0 <HAL_NVIC_EnableIRQ>
 80261e2:	bf00      	nop
 80261e4:	46020c00 	.word	0x46020c00

080261e8 <HAL_ADC_MspInit>:
* This function configures the hardware resources used in this example
* @param hadc: ADC handle pointer
* @retval None
*/
void HAL_ADC_MspInit(ADC_HandleTypeDef* hadc)
{
 80261e8:	b510      	push	{r4, lr}
 80261ea:	4604      	mov	r4, r0
 80261ec:	b092      	sub	sp, #72	; 0x48
  RCC_PeriphCLKInitTypeDef PeriphClkInit = {0};
 80261ee:	2240      	movs	r2, #64	; 0x40
 80261f0:	2100      	movs	r1, #0
 80261f2:	a802      	add	r0, sp, #8
 80261f4:	f00a fedb 	bl	8030fae <memset>
  if(hadc->Instance==ADC4)
 80261f8:	6822      	ldr	r2, [r4, #0]
 80261fa:	4b0d      	ldr	r3, [pc, #52]	; (8026230 <HAL_ADC_MspInit+0x48>)
 80261fc:	429a      	cmp	r2, r3
 80261fe:	d115      	bne.n	802622c <HAL_ADC_MspInit+0x44>

  /* USER CODE END ADC4_MspInit 0 */

  /** Initializes the peripherals clock
  */
    PeriphClkInit.PeriphClockSelection = RCC_PERIPHCLK_ADC;
 8026200:	f44f 5300 	mov.w	r3, #8192	; 0x2000
    PeriphClkInit.AdcClockSelection = RCC_ADCCLKSOURCE_HCLK;
    if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInit) != HAL_OK)
 8026204:	a802      	add	r0, sp, #8
    PeriphClkInit.PeriphClockSelection = RCC_PERIPHCLK_ADC;
 8026206:	9302      	str	r3, [sp, #8]
    if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInit) != HAL_OK)
 8026208:	f007 faa4 	bl	802d754 <HAL_RCCEx_PeriphCLKConfig>
 802620c:	b108      	cbz	r0, 8026212 <HAL_ADC_MspInit+0x2a>
    {
      Error_Handler();
 802620e:	f7ff ffc3 	bl	8026198 <Error_Handler>
    }

    /* Peripheral clock enable */
    __HAL_RCC_ADC4_CLK_ENABLE();
 8026212:	4b08      	ldr	r3, [pc, #32]	; (8026234 <HAL_ADC_MspInit+0x4c>)
 8026214:	f8d3 2094 	ldr.w	r2, [r3, #148]	; 0x94
 8026218:	f042 0220 	orr.w	r2, r2, #32
 802621c:	f8c3 2094 	str.w	r2, [r3, #148]	; 0x94
 8026220:	f8d3 3094 	ldr.w	r3, [r3, #148]	; 0x94
 8026224:	f003 0320 	and.w	r3, r3, #32
 8026228:	9301      	str	r3, [sp, #4]
 802622a:	9b01      	ldr	r3, [sp, #4]
  /* USER CODE BEGIN ADC4_MspInit 1 */

  /* USER CODE END ADC4_MspInit 1 */
  }

}
 802622c:	b012      	add	sp, #72	; 0x48
 802622e:	bd10      	pop	{r4, pc}
 8026230:	46021000 	.word	0x46021000
 8026234:	46020c00 	.word	0x46020c00

08026238 <HAL_CRC_MspInit>:
* @param hcrc: CRC handle pointer
* @retval None
*/
void HAL_CRC_MspInit(CRC_HandleTypeDef* hcrc)
{
  if(hcrc->Instance==CRC)
 8026238:	6802      	ldr	r2, [r0, #0]
 802623a:	4b09      	ldr	r3, [pc, #36]	; (8026260 <HAL_CRC_MspInit+0x28>)
{
 802623c:	b082      	sub	sp, #8
  if(hcrc->Instance==CRC)
 802623e:	429a      	cmp	r2, r3
 8026240:	d10c      	bne.n	802625c <HAL_CRC_MspInit+0x24>
  {
  /* USER CODE BEGIN CRC_MspInit 0 */

  /* USER CODE END CRC_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_CRC_CLK_ENABLE();
 8026242:	4b08      	ldr	r3, [pc, #32]	; (8026264 <HAL_CRC_MspInit+0x2c>)
 8026244:	f8d3 2088 	ldr.w	r2, [r3, #136]	; 0x88
 8026248:	f442 5280 	orr.w	r2, r2, #4096	; 0x1000
 802624c:	f8c3 2088 	str.w	r2, [r3, #136]	; 0x88
 8026250:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
 8026254:	f403 5380 	and.w	r3, r3, #4096	; 0x1000
 8026258:	9301      	str	r3, [sp, #4]
 802625a:	9b01      	ldr	r3, [sp, #4]
  /* USER CODE BEGIN CRC_MspInit 1 */

  /* USER CODE END CRC_MspInit 1 */
  }

}
 802625c:	b002      	add	sp, #8
 802625e:	4770      	bx	lr
 8026260:	40023000 	.word	0x40023000
 8026264:	46020c00 	.word	0x46020c00

08026268 <HAL_RAMCFG_MspInit>:
{
  /* USER CODE BEGIN RAMCFG_MspInit 0 */

  /* USER CODE END RAMCFG_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_RAMCFG_CLK_ENABLE();
 8026268:	4b07      	ldr	r3, [pc, #28]	; (8026288 <HAL_RAMCFG_MspInit+0x20>)
{
 802626a:	b082      	sub	sp, #8
    __HAL_RCC_RAMCFG_CLK_ENABLE();
 802626c:	f8d3 2088 	ldr.w	r2, [r3, #136]	; 0x88
 8026270:	f442 3200 	orr.w	r2, r2, #131072	; 0x20000
 8026274:	f8c3 2088 	str.w	r2, [r3, #136]	; 0x88
 8026278:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
 802627c:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 8026280:	9301      	str	r3, [sp, #4]
 8026282:	9b01      	ldr	r3, [sp, #4]
  /* USER CODE BEGIN RAMCFG_MspInit 1 */

  /* USER CODE END RAMCFG_MspInit 1 */

}
 8026284:	b002      	add	sp, #8
 8026286:	4770      	bx	lr
 8026288:	46020c00 	.word	0x46020c00

0802628c <HAL_RNG_MspInit>:
* This function configures the hardware resources used in this example
* @param hrng: RNG handle pointer
* @retval None
*/
void HAL_RNG_MspInit(RNG_HandleTypeDef* hrng)
{
 802628c:	b510      	push	{r4, lr}
 802628e:	4604      	mov	r4, r0
 8026290:	b092      	sub	sp, #72	; 0x48
  RCC_PeriphCLKInitTypeDef PeriphClkInit = {0};
 8026292:	2240      	movs	r2, #64	; 0x40
 8026294:	2100      	movs	r1, #0
 8026296:	a802      	add	r0, sp, #8
 8026298:	f00a fe89 	bl	8030fae <memset>
  if(hrng->Instance==RNG)
 802629c:	6822      	ldr	r2, [r4, #0]
 802629e:	4b13      	ldr	r3, [pc, #76]	; (80262ec <HAL_RNG_MspInit+0x60>)
 80262a0:	429a      	cmp	r2, r3
 80262a2:	d120      	bne.n	80262e6 <HAL_RNG_MspInit+0x5a>

  /* USER CODE END RNG_MspInit 0 */

  /** Initializes the peripherals clock
  */
    PeriphClkInit.PeriphClockSelection = RCC_PERIPHCLK_RNG;
 80262a4:	f44f 7380 	mov.w	r3, #256	; 0x100
 80262a8:	9302      	str	r3, [sp, #8]
    PeriphClkInit.RngClockSelection = RCC_RNGCLKSOURCE_HSI;
 80262aa:	f44f 5300 	mov.w	r3, #8192	; 0x2000
    if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInit) != HAL_OK)
 80262ae:	a802      	add	r0, sp, #8
    PeriphClkInit.RngClockSelection = RCC_RNGCLKSOURCE_HSI;
 80262b0:	930a      	str	r3, [sp, #40]	; 0x28
    if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInit) != HAL_OK)
 80262b2:	f007 fa4f 	bl	802d754 <HAL_RCCEx_PeriphCLKConfig>
 80262b6:	b108      	cbz	r0, 80262bc <HAL_RNG_MspInit+0x30>
    {
      Error_Handler();
 80262b8:	f7ff ff6e 	bl	8026198 <Error_Handler>
    }

    /* Peripheral clock enable */
    __HAL_RCC_RNG_CLK_ENABLE();
 80262bc:	4b0c      	ldr	r3, [pc, #48]	; (80262f0 <HAL_RNG_MspInit+0x64>)
    /* RNG interrupt Init */
    HAL_NVIC_SetPriority(RNG_IRQn, 0, 0);
 80262be:	203b      	movs	r0, #59	; 0x3b
    __HAL_RCC_RNG_CLK_ENABLE();
 80262c0:	f8d3 208c 	ldr.w	r2, [r3, #140]	; 0x8c
 80262c4:	f442 2280 	orr.w	r2, r2, #262144	; 0x40000
 80262c8:	f8c3 208c 	str.w	r2, [r3, #140]	; 0x8c
    HAL_NVIC_SetPriority(RNG_IRQn, 0, 0);
 80262cc:	2200      	movs	r2, #0
    __HAL_RCC_RNG_CLK_ENABLE();
 80262ce:	f8d3 308c 	ldr.w	r3, [r3, #140]	; 0x8c
    HAL_NVIC_SetPriority(RNG_IRQn, 0, 0);
 80262d2:	4611      	mov	r1, r2
    __HAL_RCC_RNG_CLK_ENABLE();
 80262d4:	f403 2380 	and.w	r3, r3, #262144	; 0x40000
 80262d8:	9301      	str	r3, [sp, #4]
 80262da:	9b01      	ldr	r3, [sp, #4]
    HAL_NVIC_SetPriority(RNG_IRQn, 0, 0);
 80262dc:	f005 fa34 	bl	802b748 <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(RNG_IRQn);
 80262e0:	203b      	movs	r0, #59	; 0x3b
 80262e2:	f005 fa75 	bl	802b7d0 <HAL_NVIC_EnableIRQ>
  /* USER CODE BEGIN RNG_MspInit 1 */

  /* USER CODE END RNG_MspInit 1 */
  }

}
 80262e6:	b012      	add	sp, #72	; 0x48
 80262e8:	bd10      	pop	{r4, pc}
 80262ea:	bf00      	nop
 80262ec:	420c0800 	.word	0x420c0800
 80262f0:	46020c00 	.word	0x46020c00

080262f4 <HAL_RTC_MspInit>:
* This function configures the hardware resources used in this example
* @param hrtc: RTC handle pointer
* @retval None
*/
void HAL_RTC_MspInit(RTC_HandleTypeDef* hrtc)
{
 80262f4:	b510      	push	{r4, lr}
 80262f6:	4604      	mov	r4, r0
 80262f8:	b092      	sub	sp, #72	; 0x48
  RCC_PeriphCLKInitTypeDef PeriphClkInit = {0};
 80262fa:	2240      	movs	r2, #64	; 0x40
 80262fc:	2100      	movs	r1, #0
 80262fe:	a802      	add	r0, sp, #8
 8026300:	f00a fe55 	bl	8030fae <memset>
  if(hrtc->Instance==RTC)
 8026304:	6822      	ldr	r2, [r4, #0]
 8026306:	4b13      	ldr	r3, [pc, #76]	; (8026354 <HAL_RTC_MspInit+0x60>)
 8026308:	429a      	cmp	r2, r3
 802630a:	d120      	bne.n	802634e <HAL_RTC_MspInit+0x5a>

  /* USER CODE END RTC_MspInit 0 */

  /** Initializes the peripherals clock
  */
    PeriphClkInit.PeriphClockSelection = RCC_PERIPHCLK_RTC;
 802630c:	f44f 4380 	mov.w	r3, #16384	; 0x4000
 8026310:	9302      	str	r3, [sp, #8]
    PeriphClkInit.RTCClockSelection = RCC_RTCCLKSOURCE_LSE;
 8026312:	f44f 7380 	mov.w	r3, #256	; 0x100
    if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInit) != HAL_OK)
 8026316:	a802      	add	r0, sp, #8
    PeriphClkInit.RTCClockSelection = RCC_RTCCLKSOURCE_LSE;
 8026318:	9310      	str	r3, [sp, #64]	; 0x40
    if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInit) != HAL_OK)
 802631a:	f007 fa1b 	bl	802d754 <HAL_RCCEx_PeriphCLKConfig>
 802631e:	b108      	cbz	r0, 8026324 <HAL_RTC_MspInit+0x30>
    {
      Error_Handler();
 8026320:	f7ff ff3a 	bl	8026198 <Error_Handler>
    }

    /* Peripheral clock enable */
    __HAL_RCC_RTCAPB_CLK_ENABLE();
 8026324:	4b0c      	ldr	r3, [pc, #48]	; (8026358 <HAL_RTC_MspInit+0x64>)
    /* RTC interrupt Init */
    HAL_NVIC_SetPriority(RTC_IRQn, 4, 0);
 8026326:	2002      	movs	r0, #2
    __HAL_RCC_RTCAPB_CLK_ENABLE();
 8026328:	f8d3 20a8 	ldr.w	r2, [r3, #168]	; 0xa8
    HAL_NVIC_SetPriority(RTC_IRQn, 4, 0);
 802632c:	2104      	movs	r1, #4
    __HAL_RCC_RTCAPB_CLK_ENABLE();
 802632e:	f442 1200 	orr.w	r2, r2, #2097152	; 0x200000
 8026332:	f8c3 20a8 	str.w	r2, [r3, #168]	; 0xa8
 8026336:	f8d3 30a8 	ldr.w	r3, [r3, #168]	; 0xa8
    HAL_NVIC_SetPriority(RTC_IRQn, 4, 0);
 802633a:	2200      	movs	r2, #0
    __HAL_RCC_RTCAPB_CLK_ENABLE();
 802633c:	f403 1300 	and.w	r3, r3, #2097152	; 0x200000
 8026340:	9301      	str	r3, [sp, #4]
 8026342:	9b01      	ldr	r3, [sp, #4]
    HAL_NVIC_SetPriority(RTC_IRQn, 4, 0);
 8026344:	f005 fa00 	bl	802b748 <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(RTC_IRQn);
 8026348:	2002      	movs	r0, #2
 802634a:	f005 fa41 	bl	802b7d0 <HAL_NVIC_EnableIRQ>
  /* USER CODE BEGIN RTC_MspInit 1 */

  /* USER CODE END RTC_MspInit 1 */
  }

}
 802634e:	b012      	add	sp, #72	; 0x48
 8026350:	bd10      	pop	{r4, pc}
 8026352:	bf00      	nop
 8026354:	46007800 	.word	0x46007800
 8026358:	46020c00 	.word	0x46020c00

0802635c <HAL_TIM_PWM_MspInit>:
* @param htim_pwm: TIM_PWM handle pointer
* @retval None
*/
void HAL_TIM_PWM_MspInit(TIM_HandleTypeDef* htim_pwm)
{
  if(htim_pwm->Instance==TIM3)
 802635c:	6802      	ldr	r2, [r0, #0]
 802635e:	4b09      	ldr	r3, [pc, #36]	; (8026384 <HAL_TIM_PWM_MspInit+0x28>)
{
 8026360:	b082      	sub	sp, #8
  if(htim_pwm->Instance==TIM3)
 8026362:	429a      	cmp	r2, r3
 8026364:	d10c      	bne.n	8026380 <HAL_TIM_PWM_MspInit+0x24>
  {
  /* USER CODE BEGIN TIM3_MspInit 0 */

  /* USER CODE END TIM3_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_TIM3_CLK_ENABLE();
 8026366:	4b08      	ldr	r3, [pc, #32]	; (8026388 <HAL_TIM_PWM_MspInit+0x2c>)
 8026368:	f8d3 209c 	ldr.w	r2, [r3, #156]	; 0x9c
 802636c:	f042 0202 	orr.w	r2, r2, #2
 8026370:	f8c3 209c 	str.w	r2, [r3, #156]	; 0x9c
 8026374:	f8d3 309c 	ldr.w	r3, [r3, #156]	; 0x9c
 8026378:	f003 0302 	and.w	r3, r3, #2
 802637c:	9301      	str	r3, [sp, #4]
 802637e:	9b01      	ldr	r3, [sp, #4]
  /* USER CODE BEGIN TIM3_MspInit 1 */

  /* USER CODE END TIM3_MspInit 1 */
  }

}
 8026380:	b002      	add	sp, #8
 8026382:	4770      	bx	lr
 8026384:	40000400 	.word	0x40000400
 8026388:	46020c00 	.word	0x46020c00

0802638c <HAL_TIM_MspPostInit>:

void HAL_TIM_MspPostInit(TIM_HandleTypeDef* htim)
{
 802638c:	b510      	push	{r4, lr}
 802638e:	4604      	mov	r4, r0
 8026390:	b086      	sub	sp, #24
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8026392:	2214      	movs	r2, #20
 8026394:	2100      	movs	r1, #0
 8026396:	a801      	add	r0, sp, #4
 8026398:	f00a fe09 	bl	8030fae <memset>
  if(htim->Instance==TIM3)
 802639c:	6822      	ldr	r2, [r4, #0]
 802639e:	4b0d      	ldr	r3, [pc, #52]	; (80263d4 <HAL_TIM_MspPostInit+0x48>)
 80263a0:	429a      	cmp	r2, r3
 80263a2:	d115      	bne.n	80263d0 <HAL_TIM_MspPostInit+0x44>
  {
  /* USER CODE BEGIN TIM3_MspPostInit 0 */

  /* USER CODE END TIM3_MspPostInit 0 */

    __HAL_RCC_GPIOA_CLK_ENABLE();
 80263a4:	4b0c      	ldr	r3, [pc, #48]	; (80263d8 <HAL_TIM_MspPostInit+0x4c>)
    GPIO_InitStruct.Pin = GPIO_PIN_2;
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
    GPIO_InitStruct.Alternate = GPIO_AF2_TIM3;
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 80263a6:	480d      	ldr	r0, [pc, #52]	; (80263dc <HAL_TIM_MspPostInit+0x50>)
    __HAL_RCC_GPIOA_CLK_ENABLE();
 80263a8:	f8d3 208c 	ldr.w	r2, [r3, #140]	; 0x8c
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 80263ac:	a901      	add	r1, sp, #4
    __HAL_RCC_GPIOA_CLK_ENABLE();
 80263ae:	f042 0201 	orr.w	r2, r2, #1
 80263b2:	f8c3 208c 	str.w	r2, [r3, #140]	; 0x8c
 80263b6:	f8d3 308c 	ldr.w	r3, [r3, #140]	; 0x8c
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 80263ba:	2204      	movs	r2, #4
    __HAL_RCC_GPIOA_CLK_ENABLE();
 80263bc:	f003 0301 	and.w	r3, r3, #1
 80263c0:	9300      	str	r3, [sp, #0]
 80263c2:	9b00      	ldr	r3, [sp, #0]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 80263c4:	2302      	movs	r3, #2
 80263c6:	e9cd 2301 	strd	r2, r3, [sp, #4]
    GPIO_InitStruct.Alternate = GPIO_AF2_TIM3;
 80263ca:	9305      	str	r3, [sp, #20]
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 80263cc:	f006 f938 	bl	802c640 <HAL_GPIO_Init>
  /* USER CODE BEGIN TIM3_MspPostInit 1 */

  /* USER CODE END TIM3_MspPostInit 1 */
  }

}
 80263d0:	b006      	add	sp, #24
 80263d2:	bd10      	pop	{r4, pc}
 80263d4:	40000400 	.word	0x40000400
 80263d8:	46020c00 	.word	0x46020c00
 80263dc:	42020000 	.word	0x42020000

080263e0 <HAL_UART_MspInit>:
* This function configures the hardware resources used in this example
* @param huart: UART handle pointer
* @retval None
*/
void HAL_UART_MspInit(UART_HandleTypeDef* huart)
{
 80263e0:	b5f0      	push	{r4, r5, r6, r7, lr}
 80263e2:	4606      	mov	r6, r0
 80263e4:	b099      	sub	sp, #100	; 0x64
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 80263e6:	2214      	movs	r2, #20
 80263e8:	2100      	movs	r1, #0
 80263ea:	a803      	add	r0, sp, #12
 80263ec:	f00a fddf 	bl	8030fae <memset>
  RCC_PeriphCLKInitTypeDef PeriphClkInit = {0};
 80263f0:	2240      	movs	r2, #64	; 0x40
 80263f2:	2100      	movs	r1, #0
 80263f4:	a808      	add	r0, sp, #32
 80263f6:	f00a fdda 	bl	8030fae <memset>
  if(huart->Instance==USART1)
 80263fa:	6832      	ldr	r2, [r6, #0]
 80263fc:	4b4f      	ldr	r3, [pc, #316]	; (802653c <HAL_UART_MspInit+0x15c>)
 80263fe:	429a      	cmp	r2, r3
 8026400:	f040 8099 	bne.w	8026536 <HAL_UART_MspInit+0x156>
  /* USER CODE END USART1_MspInit 0 */

  /** Initializes the peripherals clock
  */
    PeriphClkInit.PeriphClockSelection = RCC_PERIPHCLK_USART1;
    PeriphClkInit.Usart1ClockSelection = RCC_USART1CLKSOURCE_HSI;
 8026404:	2001      	movs	r0, #1
 8026406:	2302      	movs	r3, #2
 8026408:	e9cd 0308 	strd	r0, r3, [sp, #32]
    if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInit) != HAL_OK)
 802640c:	a808      	add	r0, sp, #32
 802640e:	f007 f9a1 	bl	802d754 <HAL_RCCEx_PeriphCLKConfig>
 8026412:	b108      	cbz	r0, 8026418 <HAL_UART_MspInit+0x38>
    {
      Error_Handler();
 8026414:	f7ff fec0 	bl	8026198 <Error_Handler>
    }

    /* Peripheral clock enable */
    __HAL_RCC_USART1_CLK_ENABLE();
 8026418:	4b49      	ldr	r3, [pc, #292]	; (8026540 <HAL_UART_MspInit+0x160>)
    PB12     ------> USART1_TX
    PA8     ------> USART1_RX
    */
    GPIO_InitStruct.Pin = GPIO_PIN_12;
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 802641a:	2500      	movs	r5, #0
    __HAL_RCC_USART1_CLK_ENABLE();
 802641c:	f8d3 20a4 	ldr.w	r2, [r3, #164]	; 0xa4
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
    GPIO_InitStruct.Alternate = GPIO_AF7_USART1;
 8026420:	2407      	movs	r4, #7
    __HAL_RCC_USART1_CLK_ENABLE();
 8026422:	f442 4280 	orr.w	r2, r2, #16384	; 0x4000
 8026426:	f8c3 20a4 	str.w	r2, [r3, #164]	; 0xa4
 802642a:	f8d3 20a4 	ldr.w	r2, [r3, #164]	; 0xa4
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 802642e:	2702      	movs	r7, #2
    __HAL_RCC_USART1_CLK_ENABLE();
 8026430:	f402 4280 	and.w	r2, r2, #16384	; 0x4000
 8026434:	9200      	str	r2, [sp, #0]
 8026436:	9a00      	ldr	r2, [sp, #0]
    __HAL_RCC_GPIOB_CLK_ENABLE();
 8026438:	f8d3 208c 	ldr.w	r2, [r3, #140]	; 0x8c
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 802643c:	4841      	ldr	r0, [pc, #260]	; (8026544 <HAL_UART_MspInit+0x164>)
    __HAL_RCC_GPIOB_CLK_ENABLE();
 802643e:	f042 0202 	orr.w	r2, r2, #2
 8026442:	f8c3 208c 	str.w	r2, [r3, #140]	; 0x8c
 8026446:	f8d3 208c 	ldr.w	r2, [r3, #140]	; 0x8c
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 802644a:	a903      	add	r1, sp, #12
    __HAL_RCC_GPIOB_CLK_ENABLE();
 802644c:	f002 0202 	and.w	r2, r2, #2
 8026450:	9201      	str	r2, [sp, #4]
 8026452:	9a01      	ldr	r2, [sp, #4]
    __HAL_RCC_GPIOA_CLK_ENABLE();
 8026454:	f8d3 208c 	ldr.w	r2, [r3, #140]	; 0x8c
 8026458:	f042 0201 	orr.w	r2, r2, #1
 802645c:	f8c3 208c 	str.w	r2, [r3, #140]	; 0x8c
 8026460:	f8d3 308c 	ldr.w	r3, [r3, #140]	; 0x8c
    GPIO_InitStruct.Alternate = GPIO_AF7_USART1;
 8026464:	9407      	str	r4, [sp, #28]
    __HAL_RCC_GPIOA_CLK_ENABLE();
 8026466:	f003 0301 	and.w	r3, r3, #1
 802646a:	9302      	str	r3, [sp, #8]
 802646c:	9b02      	ldr	r3, [sp, #8]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 802646e:	f44f 5380 	mov.w	r3, #4096	; 0x1000
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8026472:	e9cd 5505 	strd	r5, r5, [sp, #20]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8026476:	e9cd 3703 	strd	r3, r7, [sp, #12]
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 802647a:	f006 f8e1 	bl	802c640 <HAL_GPIO_Init>

    GPIO_InitStruct.Pin = GPIO_PIN_8;
 802647e:	f44f 7380 	mov.w	r3, #256	; 0x100
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
    GPIO_InitStruct.Alternate = GPIO_AF7_USART1;
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8026482:	4831      	ldr	r0, [pc, #196]	; (8026548 <HAL_UART_MspInit+0x168>)
 8026484:	a903      	add	r1, sp, #12
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8026486:	e9cd 3703 	strd	r3, r7, [sp, #12]
    GPIO_InitStruct.Alternate = GPIO_AF7_USART1;
 802648a:	9407      	str	r4, [sp, #28]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 802648c:	e9cd 5505 	strd	r5, r5, [sp, #20]
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8026490:	f006 f8d6 	bl	802c640 <HAL_GPIO_Init>

    /* USART1 DMA Init */
    /* GPDMA1_REQUEST_USART1_RX Init */
    handle_GPDMA1_Channel1.Instance = GPDMA1_Channel1;
    handle_GPDMA1_Channel1.Init.Request = GPDMA1_REQUEST_USART1_RX;
 8026494:	230b      	movs	r3, #11
    handle_GPDMA1_Channel1.Instance = GPDMA1_Channel1;
 8026496:	4c2d      	ldr	r4, [pc, #180]	; (802654c <HAL_UART_MspInit+0x16c>)
    handle_GPDMA1_Channel1.Init.Request = GPDMA1_REQUEST_USART1_RX;
 8026498:	492d      	ldr	r1, [pc, #180]	; (8026550 <HAL_UART_MspInit+0x170>)
    handle_GPDMA1_Channel1.Init.SrcBurstLength = 1;
    handle_GPDMA1_Channel1.Init.DestBurstLength = 1;
    handle_GPDMA1_Channel1.Init.TransferAllocatedPort = DMA_SRC_ALLOCATED_PORT0|DMA_DEST_ALLOCATED_PORT0;
    handle_GPDMA1_Channel1.Init.TransferEventMode = DMA_TCEM_BLOCK_TRANSFER;
    handle_GPDMA1_Channel1.Init.Mode = DMA_NORMAL;
    if (HAL_DMA_Init(&handle_GPDMA1_Channel1) != HAL_OK)
 802649a:	4620      	mov	r0, r4
    handle_GPDMA1_Channel1.Init.Request = GPDMA1_REQUEST_USART1_RX;
 802649c:	e9c4 1300 	strd	r1, r3, [r4]
    handle_GPDMA1_Channel1.Init.DestInc = DMA_DINC_INCREMENTED;
 80264a0:	f44f 2300 	mov.w	r3, #524288	; 0x80000
    handle_GPDMA1_Channel1.Init.SrcDataWidth = DMA_SRC_DATAWIDTH_BYTE;
 80264a4:	e9c4 3505 	strd	r3, r5, [r4, #20]
    handle_GPDMA1_Channel1.Init.SrcBurstLength = 1;
 80264a8:	2301      	movs	r3, #1
    handle_GPDMA1_Channel1.Init.Direction = DMA_PERIPH_TO_MEMORY;
 80264aa:	e9c4 5502 	strd	r5, r5, [r4, #8]
    handle_GPDMA1_Channel1.Init.Priority = DMA_LOW_PRIORITY_LOW_WEIGHT;
 80264ae:	e9c4 5507 	strd	r5, r5, [r4, #28]
    handle_GPDMA1_Channel1.Init.DestBurstLength = 1;
 80264b2:	e9c4 3309 	strd	r3, r3, [r4, #36]	; 0x24
    handle_GPDMA1_Channel1.Init.TransferEventMode = DMA_TCEM_BLOCK_TRANSFER;
 80264b6:	e9c4 550b 	strd	r5, r5, [r4, #44]	; 0x2c
    handle_GPDMA1_Channel1.Init.SrcInc = DMA_SINC_FIXED;
 80264ba:	6125      	str	r5, [r4, #16]
    handle_GPDMA1_Channel1.Init.Mode = DMA_NORMAL;
 80264bc:	6365      	str	r5, [r4, #52]	; 0x34
    if (HAL_DMA_Init(&handle_GPDMA1_Channel1) != HAL_OK)
 80264be:	f005 fb07 	bl	802bad0 <HAL_DMA_Init>
 80264c2:	b108      	cbz	r0, 80264c8 <HAL_UART_MspInit+0xe8>
    {
      Error_Handler();
 80264c4:	f7ff fe68 	bl	8026198 <Error_Handler>
    }

    __HAL_LINKDMA(huart, hdmarx, handle_GPDMA1_Channel1);

    if (HAL_DMA_ConfigChannelAttributes(&handle_GPDMA1_Channel1, DMA_CHANNEL_NPRIV) != HAL_OK)
 80264c8:	2110      	movs	r1, #16
 80264ca:	4820      	ldr	r0, [pc, #128]	; (802654c <HAL_UART_MspInit+0x16c>)
    __HAL_LINKDMA(huart, hdmarx, handle_GPDMA1_Channel1);
 80264cc:	f8c6 4080 	str.w	r4, [r6, #128]	; 0x80
 80264d0:	65e6      	str	r6, [r4, #92]	; 0x5c
    if (HAL_DMA_ConfigChannelAttributes(&handle_GPDMA1_Channel1, DMA_CHANNEL_NPRIV) != HAL_OK)
 80264d2:	f005 fe39 	bl	802c148 <HAL_DMA_ConfigChannelAttributes>
 80264d6:	b108      	cbz	r0, 80264dc <HAL_UART_MspInit+0xfc>
    {
      Error_Handler();
 80264d8:	f7ff fe5e 	bl	8026198 <Error_Handler>
    }

    /* GPDMA1_REQUEST_USART1_TX Init */
    handle_GPDMA1_Channel0.Instance = GPDMA1_Channel0;
    handle_GPDMA1_Channel0.Init.Request = GPDMA1_REQUEST_USART1_TX;
 80264dc:	230c      	movs	r3, #12
    handle_GPDMA1_Channel0.Instance = GPDMA1_Channel0;
 80264de:	4c1d      	ldr	r4, [pc, #116]	; (8026554 <HAL_UART_MspInit+0x174>)
    handle_GPDMA1_Channel0.Init.Request = GPDMA1_REQUEST_USART1_TX;
 80264e0:	4a1d      	ldr	r2, [pc, #116]	; (8026558 <HAL_UART_MspInit+0x178>)
    handle_GPDMA1_Channel0.Init.SrcBurstLength = 1;
    handle_GPDMA1_Channel0.Init.DestBurstLength = 1;
    handle_GPDMA1_Channel0.Init.TransferAllocatedPort = DMA_SRC_ALLOCATED_PORT0|DMA_DEST_ALLOCATED_PORT0;
    handle_GPDMA1_Channel0.Init.TransferEventMode = DMA_TCEM_BLOCK_TRANSFER;
    handle_GPDMA1_Channel0.Init.Mode = DMA_NORMAL;
    if (HAL_DMA_Init(&handle_GPDMA1_Channel0) != HAL_OK)
 80264e2:	4620      	mov	r0, r4
    handle_GPDMA1_Channel0.Init.Request = GPDMA1_REQUEST_USART1_TX;
 80264e4:	e9c4 2300 	strd	r2, r3, [r4]
    handle_GPDMA1_Channel0.Init.Direction = DMA_MEMORY_TO_PERIPH;
 80264e8:	2300      	movs	r3, #0
 80264ea:	f44f 6280 	mov.w	r2, #1024	; 0x400
 80264ee:	e9c4 3202 	strd	r3, r2, [r4, #8]
    handle_GPDMA1_Channel0.Init.SrcInc = DMA_SINC_INCREMENTED;
 80264f2:	2208      	movs	r2, #8
    handle_GPDMA1_Channel0.Init.DestInc = DMA_DINC_FIXED;
 80264f4:	e9c4 2304 	strd	r2, r3, [r4, #16]
    handle_GPDMA1_Channel0.Init.SrcBurstLength = 1;
 80264f8:	2201      	movs	r2, #1
    handle_GPDMA1_Channel0.Init.DestDataWidth = DMA_DEST_DATAWIDTH_BYTE;
 80264fa:	e9c4 3306 	strd	r3, r3, [r4, #24]
    handle_GPDMA1_Channel0.Init.DestBurstLength = 1;
 80264fe:	e9c4 2209 	strd	r2, r2, [r4, #36]	; 0x24
    handle_GPDMA1_Channel0.Init.TransferEventMode = DMA_TCEM_BLOCK_TRANSFER;
 8026502:	e9c4 330b 	strd	r3, r3, [r4, #44]	; 0x2c
    handle_GPDMA1_Channel0.Init.Priority = DMA_LOW_PRIORITY_LOW_WEIGHT;
 8026506:	6223      	str	r3, [r4, #32]
    handle_GPDMA1_Channel0.Init.Mode = DMA_NORMAL;
 8026508:	6363      	str	r3, [r4, #52]	; 0x34
    if (HAL_DMA_Init(&handle_GPDMA1_Channel0) != HAL_OK)
 802650a:	f005 fae1 	bl	802bad0 <HAL_DMA_Init>
 802650e:	b108      	cbz	r0, 8026514 <HAL_UART_MspInit+0x134>
    {
      Error_Handler();
 8026510:	f7ff fe42 	bl	8026198 <Error_Handler>
    }

    __HAL_LINKDMA(huart, hdmatx, handle_GPDMA1_Channel0);

    if (HAL_DMA_ConfigChannelAttributes(&handle_GPDMA1_Channel0, DMA_CHANNEL_NPRIV) != HAL_OK)
 8026514:	2110      	movs	r1, #16
 8026516:	480f      	ldr	r0, [pc, #60]	; (8026554 <HAL_UART_MspInit+0x174>)
    __HAL_LINKDMA(huart, hdmatx, handle_GPDMA1_Channel0);
 8026518:	67f4      	str	r4, [r6, #124]	; 0x7c
 802651a:	65e6      	str	r6, [r4, #92]	; 0x5c
    if (HAL_DMA_ConfigChannelAttributes(&handle_GPDMA1_Channel0, DMA_CHANNEL_NPRIV) != HAL_OK)
 802651c:	f005 fe14 	bl	802c148 <HAL_DMA_ConfigChannelAttributes>
 8026520:	b108      	cbz	r0, 8026526 <HAL_UART_MspInit+0x146>
    {
      Error_Handler();
 8026522:	f7ff fe39 	bl	8026198 <Error_Handler>
    }

    /* USART1 interrupt Init */
    HAL_NVIC_SetPriority(USART1_IRQn, 7, 0);
 8026526:	202e      	movs	r0, #46	; 0x2e
 8026528:	2200      	movs	r2, #0
 802652a:	2107      	movs	r1, #7
 802652c:	f005 f90c 	bl	802b748 <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(USART1_IRQn);
 8026530:	202e      	movs	r0, #46	; 0x2e
 8026532:	f005 f94d 	bl	802b7d0 <HAL_NVIC_EnableIRQ>
  /* USER CODE BEGIN USART1_MspInit 1 */

  /* USER CODE END USART1_MspInit 1 */
  }

}
 8026536:	b019      	add	sp, #100	; 0x64
 8026538:	bdf0      	pop	{r4, r5, r6, r7, pc}
 802653a:	bf00      	nop
 802653c:	40013800 	.word	0x40013800
 8026540:	46020c00 	.word	0x46020c00
 8026544:	42020400 	.word	0x42020400
 8026548:	42020000 	.word	0x42020000
 802654c:	20004c40 	.word	0x20004c40
 8026550:	400200d0 	.word	0x400200d0
 8026554:	20004bc8 	.word	0x20004bc8
 8026558:	40020050 	.word	0x40020050

0802655c <HAL_UART_MspDeInit>:
* @param huart: UART handle pointer
* @retval None
*/
void HAL_UART_MspDeInit(UART_HandleTypeDef* huart)
{
  if(huart->Instance==USART1)
 802655c:	6802      	ldr	r2, [r0, #0]
 802655e:	4b11      	ldr	r3, [pc, #68]	; (80265a4 <HAL_UART_MspDeInit+0x48>)
{
 8026560:	b510      	push	{r4, lr}
  if(huart->Instance==USART1)
 8026562:	429a      	cmp	r2, r3
{
 8026564:	4604      	mov	r4, r0
  if(huart->Instance==USART1)
 8026566:	d11c      	bne.n	80265a2 <HAL_UART_MspDeInit+0x46>
  {
  /* USER CODE BEGIN USART1_MspDeInit 0 */

  /* USER CODE END USART1_MspDeInit 0 */
    /* Peripheral clock disable */
    __HAL_RCC_USART1_CLK_DISABLE();
 8026568:	4a0f      	ldr	r2, [pc, #60]	; (80265a8 <HAL_UART_MspDeInit+0x4c>)

    /**USART1 GPIO Configuration
    PB12     ------> USART1_TX
    PA8     ------> USART1_RX
    */
    HAL_GPIO_DeInit(GPIOB, GPIO_PIN_12);
 802656a:	f44f 5180 	mov.w	r1, #4096	; 0x1000
    __HAL_RCC_USART1_CLK_DISABLE();
 802656e:	f8d2 30a4 	ldr.w	r3, [r2, #164]	; 0xa4
    HAL_GPIO_DeInit(GPIOB, GPIO_PIN_12);
 8026572:	480e      	ldr	r0, [pc, #56]	; (80265ac <HAL_UART_MspDeInit+0x50>)
    __HAL_RCC_USART1_CLK_DISABLE();
 8026574:	f423 4380 	bic.w	r3, r3, #16384	; 0x4000
 8026578:	f8c2 30a4 	str.w	r3, [r2, #164]	; 0xa4
    HAL_GPIO_DeInit(GPIOB, GPIO_PIN_12);
 802657c:	f006 f966 	bl	802c84c <HAL_GPIO_DeInit>

    HAL_GPIO_DeInit(GPIOA, GPIO_PIN_8);
 8026580:	f44f 7180 	mov.w	r1, #256	; 0x100
 8026584:	480a      	ldr	r0, [pc, #40]	; (80265b0 <HAL_UART_MspDeInit+0x54>)
 8026586:	f006 f961 	bl	802c84c <HAL_GPIO_DeInit>

    /* USART1 DMA DeInit */
    HAL_DMA_DeInit(huart->hdmarx);
 802658a:	f8d4 0080 	ldr.w	r0, [r4, #128]	; 0x80
 802658e:	f005 fbf5 	bl	802bd7c <HAL_DMA_DeInit>
    HAL_DMA_DeInit(huart->hdmatx);
 8026592:	6fe0      	ldr	r0, [r4, #124]	; 0x7c
 8026594:	f005 fbf2 	bl	802bd7c <HAL_DMA_DeInit>
  /* USER CODE BEGIN USART1_MspDeInit 1 */

  /* USER CODE END USART1_MspDeInit 1 */
  }

}
 8026598:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
    HAL_NVIC_DisableIRQ(USART1_IRQn);
 802659c:	202e      	movs	r0, #46	; 0x2e
 802659e:	f005 b92b 	b.w	802b7f8 <HAL_NVIC_DisableIRQ>
}
 80265a2:	bd10      	pop	{r4, pc}
 80265a4:	40013800 	.word	0x40013800
 80265a8:	46020c00 	.word	0x46020c00
 80265ac:	42020400 	.word	0x42020400
 80265b0:	42020000 	.word	0x42020000

080265b4 <NMI_Handler>:
{
  /* USER CODE BEGIN NonMaskableInt_IRQn 0 */

  /* USER CODE END NonMaskableInt_IRQn 0 */
  /* USER CODE BEGIN NonMaskableInt_IRQn 1 */
  while (1)
 80265b4:	e7fe      	b.n	80265b4 <NMI_Handler>

080265b6 <HardFault_Handler>:
void HardFault_Handler(void)
{
  /* USER CODE BEGIN HardFault_IRQn 0 */

  /* USER CODE END HardFault_IRQn 0 */
  while (1)
 80265b6:	e7fe      	b.n	80265b6 <HardFault_Handler>

080265b8 <MemManage_Handler>:
void MemManage_Handler(void)
{
  /* USER CODE BEGIN MemoryManagement_IRQn 0 */

  /* USER CODE END MemoryManagement_IRQn 0 */
  while (1)
 80265b8:	e7fe      	b.n	80265b8 <MemManage_Handler>

080265ba <BusFault_Handler>:
void BusFault_Handler(void)
{
  /* USER CODE BEGIN BusFault_IRQn 0 */

  /* USER CODE END BusFault_IRQn 0 */
  while (1)
 80265ba:	e7fe      	b.n	80265ba <BusFault_Handler>

080265bc <UsageFault_Handler>:
void UsageFault_Handler(void)
{
  /* USER CODE BEGIN UsageFault_IRQn 0 */

  /* USER CODE END UsageFault_IRQn 0 */
  while (1)
 80265bc:	e7fe      	b.n	80265bc <UsageFault_Handler>

080265be <SVC_Handler>:

  /* USER CODE END SVCall_IRQn 0 */
  /* USER CODE BEGIN SVCall_IRQn 1 */

  /* USER CODE END SVCall_IRQn 1 */
}
 80265be:	4770      	bx	lr

080265c0 <DebugMon_Handler>:
 80265c0:	4770      	bx	lr

080265c2 <PendSV_Handler>:
 80265c2:	4770      	bx	lr

080265c4 <SysTick_Handler>:
void SysTick_Handler(void)
{
  /* USER CODE BEGIN SysTick_IRQn 0 */

  /* USER CODE END SysTick_IRQn 0 */
  HAL_IncTick();
 80265c4:	f004 bd28 	b.w	802b018 <HAL_IncTick>

080265c8 <RTC_IRQHandler>:
void RTC_IRQHandler(void)
{
  /* USER CODE BEGIN RTC_IRQn 0 */

  /* USER CODE END RTC_IRQn 0 */
  HAL_RTC_AlarmIRQHandler(&hrtc);
 80265c8:	4801      	ldr	r0, [pc, #4]	; (80265d0 <RTC_IRQHandler+0x8>)
 80265ca:	f007 bbb1 	b.w	802dd30 <HAL_RTC_AlarmIRQHandler>
 80265ce:	bf00      	nop
 80265d0:	20004cd8 	.word	0x20004cd8

080265d4 <RCC_IRQHandler>:
{
  /* USER CODE BEGIN RCC_IRQn 0 */

  /* USER CODE END RCC_IRQn 0 */
  /* Check the RCC interrupt source */
  if(__HAL_RCC_GET_IT(RCC_IT_HSERDY))
 80265d4:	4b07      	ldr	r3, [pc, #28]	; (80265f4 <RCC_IRQHandler+0x20>)
 80265d6:	6d5a      	ldr	r2, [r3, #84]	; 0x54
 80265d8:	06d1      	lsls	r1, r2, #27
 80265da:	d503      	bpl.n	80265e4 <RCC_IRQHandler+0x10>
  {
    __HAL_RCC_CLEAR_IT(RCC_IT_HSERDY);
 80265dc:	2210      	movs	r2, #16
 80265de:	659a      	str	r2, [r3, #88]	; 0x58
    scm_hserdy_isr();
 80265e0:	f004 b848 	b.w	802a674 <scm_hserdy_isr>
  }
  else if(__HAL_RCC_GET_IT(RCC_IT_PLL1RDY))
 80265e4:	6d5a      	ldr	r2, [r3, #84]	; 0x54
 80265e6:	0652      	lsls	r2, r2, #25
 80265e8:	d503      	bpl.n	80265f2 <RCC_IRQHandler+0x1e>
  {
    __HAL_RCC_CLEAR_IT(RCC_IT_PLL1RDY);
 80265ea:	2240      	movs	r2, #64	; 0x40
 80265ec:	659a      	str	r2, [r3, #88]	; 0x58
    scm_pllrdy_isr();
 80265ee:	f004 b951 	b.w	802a894 <scm_pllrdy_isr>
  }
  /* USER CODE BEGIN RCC_IRQn 1 */

  /* USER CODE END RCC_IRQn 1 */
}
 80265f2:	4770      	bx	lr
 80265f4:	46020c00 	.word	0x46020c00

080265f8 <EXTI6_IRQHandler>:

/**
  * @brief This function handles EXTI Line6 interrupt.
  */
void EXTI6_IRQHandler(void)
{
 80265f8:	b508      	push	{r3, lr}
  /* USER CODE BEGIN EXTI6_IRQn 0 */

  /* USER CODE END EXTI6_IRQn 0 */
  HAL_GPIO_EXTI_IRQHandler(GPIO_PIN_6);
 80265fa:	2040      	movs	r0, #64	; 0x40
 80265fc:	f006 f9cc 	bl	802c998 <HAL_GPIO_EXTI_IRQHandler>
  /* USER CODE BEGIN EXTI6_IRQn 1 */
  BSP_PB_IRQHandler(B2);
  /* USER CODE END EXTI6_IRQn 1 */
}
 8026600:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
  BSP_PB_IRQHandler(B2);
 8026604:	2001      	movs	r0, #1
 8026606:	f004 bc07 	b.w	802ae18 <BSP_PB_IRQHandler>

0802660a <EXTI7_IRQHandler>:

/**
  * @brief This function handles EXTI Line7 interrupt.
  */
void EXTI7_IRQHandler(void)
{
 802660a:	b508      	push	{r3, lr}
  /* USER CODE BEGIN EXTI7_IRQn 0 */

  /* USER CODE END EXTI7_IRQn 0 */
  HAL_GPIO_EXTI_IRQHandler(GPIO_PIN_7);
 802660c:	2080      	movs	r0, #128	; 0x80
 802660e:	f006 f9c3 	bl	802c998 <HAL_GPIO_EXTI_IRQHandler>
  /* USER CODE BEGIN EXTI7_IRQn 1 */
  BSP_PB_IRQHandler(B3);
  /* USER CODE END EXTI7_IRQn 1 */
}
 8026612:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
  BSP_PB_IRQHandler(B3);
 8026616:	2002      	movs	r0, #2
 8026618:	f004 bbfe 	b.w	802ae18 <BSP_PB_IRQHandler>

0802661c <EXTI13_IRQHandler>:

/**
  * @brief This function handles EXTI Line13 interrupt.
  */
void EXTI13_IRQHandler(void)
{
 802661c:	b508      	push	{r3, lr}
  /* USER CODE BEGIN EXTI13_IRQn 0 */

  /* USER CODE END EXTI13_IRQn 0 */
  HAL_GPIO_EXTI_IRQHandler(GPIO_PIN_13);
 802661e:	f44f 5000 	mov.w	r0, #8192	; 0x2000
 8026622:	f006 f9b9 	bl	802c998 <HAL_GPIO_EXTI_IRQHandler>
  /* USER CODE BEGIN EXTI13_IRQn 1 */
  BSP_PB_IRQHandler(B1);
  /* USER CODE END EXTI13_IRQn 1 */
}
 8026626:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
  BSP_PB_IRQHandler(B1);
 802662a:	2000      	movs	r0, #0
 802662c:	f004 bbf4 	b.w	802ae18 <BSP_PB_IRQHandler>

08026630 <GPDMA1_Channel0_IRQHandler>:
void GPDMA1_Channel0_IRQHandler(void)
{
  /* USER CODE BEGIN GPDMA1_Channel0_IRQn 0 */

  /* USER CODE END GPDMA1_Channel0_IRQn 0 */
  HAL_DMA_IRQHandler(&handle_GPDMA1_Channel0);
 8026630:	4801      	ldr	r0, [pc, #4]	; (8026638 <GPDMA1_Channel0_IRQHandler+0x8>)
 8026632:	f005 bcc2 	b.w	802bfba <HAL_DMA_IRQHandler>
 8026636:	bf00      	nop
 8026638:	20004bc8 	.word	0x20004bc8

0802663c <GPDMA1_Channel1_IRQHandler>:
void GPDMA1_Channel1_IRQHandler(void)
{
  /* USER CODE BEGIN GPDMA1_Channel1_IRQn 0 */

  /* USER CODE END GPDMA1_Channel1_IRQn 0 */
  HAL_DMA_IRQHandler(&handle_GPDMA1_Channel1);
 802663c:	4801      	ldr	r0, [pc, #4]	; (8026644 <GPDMA1_Channel1_IRQHandler+0x8>)
 802663e:	f005 bcbc 	b.w	802bfba <HAL_DMA_IRQHandler>
 8026642:	bf00      	nop
 8026644:	20004c40 	.word	0x20004c40

08026648 <USART1_IRQHandler>:
void USART1_IRQHandler(void)
{
  /* USER CODE BEGIN USART1_IRQn 0 */

  /* USER CODE END USART1_IRQn 0 */
  HAL_UART_IRQHandler(&huart1);
 8026648:	4801      	ldr	r0, [pc, #4]	; (8026650 <USART1_IRQHandler+0x8>)
 802664a:	f009 b8f7 	b.w	802f83c <HAL_UART_IRQHandler>
 802664e:	bf00      	nop
 8026650:	20004d54 	.word	0x20004d54

08026654 <RNG_IRQHandler>:
void RNG_IRQHandler(void)
{
  /* USER CODE BEGIN RNG_IRQn 0 */

  /* USER CODE END RNG_IRQn 0 */
  HAL_RNG_IRQHandler(&hrng);
 8026654:	4801      	ldr	r0, [pc, #4]	; (802665c <RNG_IRQHandler+0x8>)
 8026656:	f007 baf3 	b.w	802dc40 <HAL_RNG_IRQHandler>
 802665a:	bf00      	nop
 802665c:	20004cc4 	.word	0x20004cc4

08026660 <RADIO_IRQHandler>:

/**
  * @brief This function handles 2.4GHz RADIO global interrupt.
  */
void RADIO_IRQHandler(void)
{
 8026660:	b508      	push	{r3, lr}
  /* USER CODE BEGIN RADIO_IRQn 0 */

  /* USER CODE END RADIO_IRQn 0 */

  ll_sys_radio_hclk_ctrl_req(LL_SYS_RADIO_HCLK_RADIO_ISR, LL_SYS_RADIO_HCLK_ON);
 8026662:	2101      	movs	r1, #1
 8026664:	2000      	movs	r0, #0
 8026666:	f009 ffe1 	bl	803062c <ll_sys_radio_hclk_ctrl_req>

  if(NULL != radio_callback)
 802666a:	4b09      	ldr	r3, [pc, #36]	; (8026690 <RADIO_IRQHandler+0x30>)
 802666c:	681b      	ldr	r3, [r3, #0]
 802666e:	b103      	cbz	r3, 8026672 <RADIO_IRQHandler+0x12>
  {
    radio_callback();
 8026670:	4798      	blx	r3
  CLEAR_BIT(RCC->RADIOENR, RCC_RADIOENR_STRADIOCLKON);
 8026672:	4a08      	ldr	r2, [pc, #32]	; (8026694 <RADIO_IRQHandler+0x34>)
 8026674:	f8d2 3208 	ldr.w	r3, [r2, #520]	; 0x208
 8026678:	f423 3380 	bic.w	r3, r3, #65536	; 0x10000
 802667c:	f8c2 3208 	str.w	r3, [r2, #520]	; 0x208
           so that all instructions following the ISB are fetched from cache or memory,
           after the instruction has been completed.
 */
__STATIC_FORCEINLINE void __ISB(void)
{
  __ASM volatile ("isb 0xF":::"memory");
 8026680:	f3bf 8f6f 	isb	sy
  }

  LL_RCC_RADIO_DisableSleepTimerClock();
  __ISB();
  ll_sys_radio_hclk_ctrl_req(LL_SYS_RADIO_HCLK_RADIO_ISR, LL_SYS_RADIO_HCLK_OFF);
 8026684:	2100      	movs	r1, #0
  /* USER CODE BEGIN RADIO_IRQn 1 */

  /* USER CODE END RADIO_IRQn 1 */
}
 8026686:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
  ll_sys_radio_hclk_ctrl_req(LL_SYS_RADIO_HCLK_RADIO_ISR, LL_SYS_RADIO_HCLK_OFF);
 802668a:	4608      	mov	r0, r1
 802668c:	f009 bfce 	b.w	803062c <ll_sys_radio_hclk_ctrl_req>
 8026690:	20008ebc 	.word	0x20008ebc
 8026694:	46020c00 	.word	0x46020c00

08026698 <HASH_IRQHandler>:
 */
__STATIC_INLINE void __NVIC_DisableIRQ(IRQn_Type IRQn)
{
  if ((int32_t)(IRQn) >= 0)
  {
    NVIC->ICER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 8026698:	f04f 5200 	mov.w	r2, #536870912	; 0x20000000
 802669c:	4b0d      	ldr	r3, [pc, #52]	; (80266d4 <HASH_IRQHandler+0x3c>)

/**
  * @brief This function handles HASH global interrupt.
  */
void HASH_IRQHandler(void)
{
 802669e:	b510      	push	{r4, lr}
 80266a0:	f8c3 2084 	str.w	r2, [r3, #132]	; 0x84
  \details Acts as a special kind of Data Memory Barrier.
           It completes when all explicit memory accesses before this instruction complete.
 */
__STATIC_FORCEINLINE void __DSB(void)
{
  __ASM volatile ("dsb 0xF":::"memory");
 80266a4:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
 80266a8:	f3bf 8f6f 	isb	sy
  /* USER CODE END HASH_IRQn 0 */

  /* Disable SW radio low interrupt to prevent nested calls */
  NVIC_DisableIRQ(RADIO_SW_LOW_INTR_NUM);

  if(NULL != low_isr_callback) {
 80266ac:	4b0a      	ldr	r3, [pc, #40]	; (80266d8 <HASH_IRQHandler+0x40>)
 80266ae:	681b      	ldr	r3, [r3, #0]
 80266b0:	b103      	cbz	r3, 80266b4 <HASH_IRQHandler+0x1c>
    low_isr_callback();
 80266b2:	4798      	blx	r3
  }

  /* Check if nested SW radio low interrupt has been requested*/
  if(radio_sw_low_isr_is_running_high_prio != 0) {
 80266b4:	4c09      	ldr	r4, [pc, #36]	; (80266dc <HASH_IRQHandler+0x44>)
 80266b6:	7823      	ldrb	r3, [r4, #0]
 80266b8:	b133      	cbz	r3, 80266c8 <HASH_IRQHandler+0x30>
    HAL_NVIC_SetPriority((IRQn_Type) RADIO_SW_LOW_INTR_NUM, RADIO_INTR_PRIO_LOW, 0);
 80266ba:	2200      	movs	r2, #0
 80266bc:	2103      	movs	r1, #3
 80266be:	203d      	movs	r0, #61	; 0x3d
 80266c0:	f005 f842 	bl	802b748 <HAL_NVIC_SetPriority>
    radio_sw_low_isr_is_running_high_prio = 0;
 80266c4:	2300      	movs	r3, #0
 80266c6:	7023      	strb	r3, [r4, #0]
    NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 80266c8:	f04f 5200 	mov.w	r2, #536870912	; 0x20000000
 80266cc:	4b01      	ldr	r3, [pc, #4]	; (80266d4 <HASH_IRQHandler+0x3c>)
 80266ce:	605a      	str	r2, [r3, #4]
  NVIC_EnableIRQ(RADIO_SW_LOW_INTR_NUM);

  /* USER CODE BEGIN HASH_IRQn 1 */

  /* USER CODE END HASH_IRQn 1 */
}
 80266d0:	bd10      	pop	{r4, pc}
 80266d2:	bf00      	nop
 80266d4:	e000e100 	.word	0xe000e100
 80266d8:	20008eac 	.word	0x20008eac
 80266dc:	20008ec0 	.word	0x20008ec0

080266e0 <_sbrk>:
  const uint32_t stack_limit = (uint32_t)&_estack - (uint32_t)&_Min_Stack_Size;
  const uint8_t *max_heap = (uint8_t *)stack_limit;
  uint8_t *prev_heap_end;

  /* Initialize heap end at first call */
  if (NULL == __sbrk_heap_end)
 80266e0:	4a0b      	ldr	r2, [pc, #44]	; (8026710 <_sbrk+0x30>)
{
 80266e2:	4603      	mov	r3, r0
  if (NULL == __sbrk_heap_end)
 80266e4:	6811      	ldr	r1, [r2, #0]
{
 80266e6:	b510      	push	{r4, lr}
  if (NULL == __sbrk_heap_end)
 80266e8:	b909      	cbnz	r1, 80266ee <_sbrk+0xe>
  {
    __sbrk_heap_end = &_end;
 80266ea:	490a      	ldr	r1, [pc, #40]	; (8026714 <_sbrk+0x34>)
 80266ec:	6011      	str	r1, [r2, #0]
  }

  /* Protect heap from growing into the reserved MSP stack */
  if (__sbrk_heap_end + incr > max_heap)
 80266ee:	6810      	ldr	r0, [r2, #0]
 80266f0:	4909      	ldr	r1, [pc, #36]	; (8026718 <_sbrk+0x38>)
 80266f2:	4c0a      	ldr	r4, [pc, #40]	; (802671c <_sbrk+0x3c>)
 80266f4:	4403      	add	r3, r0
 80266f6:	1b09      	subs	r1, r1, r4
 80266f8:	428b      	cmp	r3, r1
 80266fa:	d906      	bls.n	802670a <_sbrk+0x2a>
  {
    errno = ENOMEM;
 80266fc:	f00a fbf6 	bl	8030eec <__errno>
 8026700:	230c      	movs	r3, #12
 8026702:	6003      	str	r3, [r0, #0]
    return (void *)-1;
 8026704:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff

  prev_heap_end = __sbrk_heap_end;
  __sbrk_heap_end += incr;

  return (void *)prev_heap_end;
}
 8026708:	bd10      	pop	{r4, pc}
  __sbrk_heap_end += incr;
 802670a:	6013      	str	r3, [r2, #0]
  return (void *)prev_heap_end;
 802670c:	e7fc      	b.n	8026708 <_sbrk+0x28>
 802670e:	bf00      	nop
 8026710:	20004e28 	.word	0x20004e28
 8026714:	2000a348 	.word	0x2000a348
 8026718:	20020000 	.word	0x20020000
 802671c:	00001000 	.word	0x00001000

08026720 <Switch_OFF_GPIO>:
  return;
}

static void Switch_OFF_GPIO(void *arg)
{
  BSP_LED_Off(LED_GREEN);
 8026720:	2001      	movs	r0, #1
 8026722:	f004 bad7 	b.w	802acd4 <BSP_LED_Off>

08026726 <Adv_Cancel_Req>:
  UTIL_SEQ_SetTask(1 << CFG_TASK_ADV_CANCEL_ID, CFG_SCH_PRIO_0);
 8026726:	2100      	movs	r1, #0
 8026728:	2010      	movs	r0, #16
 802672a:	f00a b9bf 	b.w	8030aac <UTIL_SEQ_SetTask>
	...

08026730 <Ble_UserEvtRx>:
{
 8026730:	b513      	push	{r0, r1, r4, lr}
  LST_remove_head ( &BleAsynchEventQueue, (tListNode **)&phcievt );
 8026732:	4811      	ldr	r0, [pc, #68]	; (8026778 <Ble_UserEvtRx+0x48>)
 8026734:	a901      	add	r1, sp, #4
 8026736:	f004 f907 	bl	802a948 <LST_remove_head>
  svctl_return_status = SVCCTL_UserEvtRx((void *)&(phcievt->evtserial));
 802673a:	9801      	ldr	r0, [sp, #4]
 802673c:	3008      	adds	r0, #8
 802673e:	f00a f805 	bl	803074c <SVCCTL_UserEvtRx>
  if (svctl_return_status != SVCCTL_UserEvtFlowDisable)
 8026742:	4604      	mov	r4, r0
 8026744:	b190      	cbz	r0, 802676c <Ble_UserEvtRx+0x3c>
    AMM_Free((uint32_t *)phcievt);
 8026746:	9801      	ldr	r0, [sp, #4]
 8026748:	f003 fa10 	bl	8029b6c <AMM_Free>
  if ((LST_is_empty(&BleAsynchEventQueue) == FALSE) && (svctl_return_status != SVCCTL_UserEvtFlowDisable) )
 802674c:	480a      	ldr	r0, [pc, #40]	; (8026778 <Ble_UserEvtRx+0x48>)
 802674e:	f004 f8ce 	bl	802a8ee <LST_is_empty>
 8026752:	4601      	mov	r1, r0
 8026754:	b918      	cbnz	r0, 802675e <Ble_UserEvtRx+0x2e>
 8026756:	b114      	cbz	r4, 802675e <Ble_UserEvtRx+0x2e>
    UTIL_SEQ_SetTask(1 << CFG_TASK_HCI_ASYNCH_EVT_ID, CFG_SCH_PRIO_0);
 8026758:	2001      	movs	r0, #1
 802675a:	f00a f9a7 	bl	8030aac <UTIL_SEQ_SetTask>
  UTIL_SEQ_SetTask( 1U << CFG_TASK_BLE_HOST, CFG_SCH_PRIO_0);
 802675e:	2100      	movs	r1, #0
 8026760:	f44f 7080 	mov.w	r0, #256	; 0x100
 8026764:	f00a f9a2 	bl	8030aac <UTIL_SEQ_SetTask>
}
 8026768:	b002      	add	sp, #8
 802676a:	bd10      	pop	{r4, pc}
    LST_insert_head ( &BleAsynchEventQueue, (tListNode *)phcievt );
 802676c:	9901      	ldr	r1, [sp, #4]
 802676e:	4802      	ldr	r0, [pc, #8]	; (8026778 <Ble_UserEvtRx+0x48>)
 8026770:	f004 f8c7 	bl	802a902 <LST_insert_head>
 8026774:	e7ea      	b.n	802674c <Ble_UserEvtRx+0x1c>
 8026776:	bf00      	nop
 8026778:	20004e38 	.word	0x20004e38

0802677c <BleStack_Process_BG>:
{
 802677c:	b508      	push	{r3, lr}
  if (BleStack_Process( ) == 0x0)
 802677e:	f7f2 f88b 	bl	8018898 <BleStack_Process>
 8026782:	b918      	cbnz	r0, 802678c <BleStack_Process_BG+0x10>
}
 8026784:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
    BleStackCB_Process( );
 8026788:	f001 b9bb 	b.w	8027b02 <BleStackCB_Process>
}
 802678c:	bd08      	pop	{r3, pc}

0802678e <BLE_ResumeFlowProcessCallback>:
  ll_intf_chng_evnt_hndlr_state( notify_options );
 802678e:	f04f 000f 	mov.w	r0, #15
 8026792:	f7de bcfc 	b.w	800518e <ll_intf_chng_evnt_hndlr_state>
	...

08026798 <BLE_NvmCallback>:
  if (CbkStatus != SNVMA_OPERATION_COMPLETE)
 8026798:	b118      	cbz	r0, 80267a2 <BLE_NvmCallback+0xa>
    SNVMA_Write (APP_BLE_NvmBuffer,
 802679a:	2000      	movs	r0, #0
 802679c:	4901      	ldr	r1, [pc, #4]	; (80267a4 <BLE_NvmCallback+0xc>)
 802679e:	f002 bfef 	b.w	8029780 <SNVMA_Write>
}
 80267a2:	4770      	bx	lr
 80267a4:	08026799 	.word	0x08026799

080267a8 <APP_BLE_Procedure_Gap_Peripheral>:
{
 80267a8:	b530      	push	{r4, r5, lr}
 80267aa:	b089      	sub	sp, #36	; 0x24
  switch(ProcGapPeripheralId)
 80267ac:	2804      	cmp	r0, #4
 80267ae:	d81f      	bhi.n	80267f0 <APP_BLE_Procedure_Gap_Peripheral+0x48>
 80267b0:	e8df f000 	tbb	[pc, r0]
 80267b4:	1e6b5524 	.word	0x1e6b5524
 80267b8:	03          	.byte	0x03
 80267b9:	00          	.byte	0x00
      if (bleAppContext.connIntervalFlag != 0)
 80267ba:	4b45      	ldr	r3, [pc, #276]	; (80268d0 <APP_BLE_Procedure_Gap_Peripheral+0x128>)
 80267bc:	f893 204c 	ldrb.w	r2, [r3, #76]	; 0x4c
        bleAppContext.connIntervalFlag = 1;
 80267c0:	2a00      	cmp	r2, #0
 80267c2:	bf15      	itete	ne
 80267c4:	2200      	movne	r2, #0
 80267c6:	2201      	moveq	r2, #1
 80267c8:	2128      	movne	r1, #40	; 0x28
 80267ca:	f44f 7148 	moveq.w	r1, #800	; 0x320
 80267ce:	f883 204c 	strb.w	r2, [r3, #76]	; 0x4c
  switch(ProcGapPeripheralId)
 80267d2:	460a      	mov	r2, r1
       status = aci_l2cap_connection_parameter_update_req(
 80267d4:	f44f 73fa 	mov.w	r3, #500	; 0x1f4
 80267d8:	483d      	ldr	r0, [pc, #244]	; (80268d0 <APP_BLE_Procedure_Gap_Peripheral+0x128>)
 80267da:	9300      	str	r3, [sp, #0]
 80267dc:	8ac0      	ldrh	r0, [r0, #22]
 80267de:	2300      	movs	r3, #0
 80267e0:	f7f9 f936 	bl	801fa50 <aci_l2cap_connection_parameter_update_req>
      if (status != BLE_STATUS_SUCCESS)
 80267e4:	4602      	mov	r2, r0
 80267e6:	2800      	cmp	r0, #0
 80267e8:	d06f      	beq.n	80268ca <APP_BLE_Procedure_Gap_Peripheral+0x122>
        APP_DBG_MSG("aci_l2cap_connection_parameter_update_req - fail, result: 0x%02X\n",status);
 80267ea:	4b3a      	ldr	r3, [pc, #232]	; (80268d4 <APP_BLE_Procedure_Gap_Peripheral+0x12c>)
 80267ec:	9000      	str	r0, [sp, #0]
 80267ee:	e034      	b.n	802685a <APP_BLE_Procedure_Gap_Peripheral+0xb2>
  switch(ProcGapPeripheralId)
 80267f0:	3803      	subs	r0, #3
 80267f2:	2801      	cmp	r0, #1
 80267f4:	d856      	bhi.n	80268a4 <APP_BLE_Procedure_Gap_Peripheral+0xfc>
 80267f6:	e8df f000 	tbb	[pc, r0]
 80267fa:	655a      	.short	0x655a
  switch(ProcGapPeripheralId)
 80267fc:	2505      	movs	r5, #5
 80267fe:	f44f 627a 	mov.w	r2, #4000	; 0xfa0
 8026802:	f44f 61c8 	mov.w	r1, #1600	; 0x640
      status = aci_gap_set_discoverable(ADV_TYPE,
 8026806:	2400      	movs	r4, #0
 8026808:	4623      	mov	r3, r4
 802680a:	4620      	mov	r0, r4
 802680c:	e9cd 4405 	strd	r4, r4, [sp, #20]
 8026810:	e9cd 4403 	strd	r4, r4, [sp, #12]
 8026814:	e9cd 4401 	strd	r4, r4, [sp, #4]
 8026818:	9400      	str	r4, [sp, #0]
 802681a:	f7f2 f9e2 	bl	8018be2 <aci_gap_set_discoverable>
      if (status != BLE_STATUS_SUCCESS)
 802681e:	4602      	mov	r2, r0
 8026820:	b308      	cbz	r0, 8026866 <APP_BLE_Procedure_Gap_Peripheral+0xbe>
        APP_DBG_MSG("==>> aci_gap_set_discoverable - fail, result: 0x%02X\n", status);
 8026822:	9000      	str	r0, [sp, #0]
 8026824:	4622      	mov	r2, r4
 8026826:	f04f 31ff 	mov.w	r1, #4294967295	; 0xffffffff
 802682a:	2001      	movs	r0, #1
 802682c:	4b2a      	ldr	r3, [pc, #168]	; (80268d8 <APP_BLE_Procedure_Gap_Peripheral+0x130>)
 802682e:	f00a f867 	bl	8030900 <UTIL_ADV_TRACE_COND_FSend>
      status = aci_gap_delete_ad_type(AD_TYPE_TX_POWER_LEVEL);
 8026832:	200a      	movs	r0, #10
 8026834:	f7f2 fa86 	bl	8018d44 <aci_gap_delete_ad_type>
      if (status != BLE_STATUS_SUCCESS)
 8026838:	b138      	cbz	r0, 802684a <APP_BLE_Procedure_Gap_Peripheral+0xa2>
        APP_DBG_MSG("==>> delete tx power level - fail, result: 0x%02X\n", status);
 802683a:	9000      	str	r0, [sp, #0]
 802683c:	2200      	movs	r2, #0
 802683e:	f04f 31ff 	mov.w	r1, #4294967295	; 0xffffffff
 8026842:	2001      	movs	r0, #1
 8026844:	4b25      	ldr	r3, [pc, #148]	; (80268dc <APP_BLE_Procedure_Gap_Peripheral+0x134>)
 8026846:	f00a f85b 	bl	8030900 <UTIL_ADV_TRACE_COND_FSend>
      status = aci_gap_update_adv_data(sizeof(a_AdvData), (uint8_t*) a_AdvData);
 802684a:	2019      	movs	r0, #25
 802684c:	4924      	ldr	r1, [pc, #144]	; (80268e0 <APP_BLE_Procedure_Gap_Peripheral+0x138>)
 802684e:	f7f2 fa10 	bl	8018c72 <aci_gap_update_adv_data>
      if (status != BLE_STATUS_SUCCESS)
 8026852:	4602      	mov	r2, r0
 8026854:	b180      	cbz	r0, 8026878 <APP_BLE_Procedure_Gap_Peripheral+0xd0>
        APP_DBG_MSG("==>> Start Advertising Failed, result: 0x%02X\n", status);
 8026856:	4b23      	ldr	r3, [pc, #140]	; (80268e4 <APP_BLE_Procedure_Gap_Peripheral+0x13c>)
 8026858:	9000      	str	r0, [sp, #0]
        APP_DBG_MSG("aci_l2cap_connection_parameter_update_req - fail, result: 0x%02X\n",status);
 802685a:	2200      	movs	r2, #0
 802685c:	e01d      	b.n	802689a <APP_BLE_Procedure_Gap_Peripheral+0xf2>
      paramC = APP_BLE_ADV_FAST;
 802685e:	2504      	movs	r5, #4
      paramB = ADV_INTERVAL_MAX;
 8026860:	22a0      	movs	r2, #160	; 0xa0
      paramA = ADV_INTERVAL_MIN;
 8026862:	2180      	movs	r1, #128	; 0x80
 8026864:	e7cf      	b.n	8026806 <APP_BLE_Procedure_Gap_Peripheral+0x5e>
        bleAppContext.Device_Connection_Status = (APP_BLE_ConnStatus_t)paramC;
 8026866:	4b1a      	ldr	r3, [pc, #104]	; (80268d0 <APP_BLE_Procedure_Gap_Peripheral+0x128>)
        APP_DBG_MSG("==>> aci_gap_set_discoverable - Success\n");
 8026868:	f04f 31ff 	mov.w	r1, #4294967295	; 0xffffffff
        bleAppContext.Device_Connection_Status = (APP_BLE_ConnStatus_t)paramC;
 802686c:	761d      	strb	r5, [r3, #24]
        APP_DBG_MSG("==>> aci_gap_set_discoverable - Success\n");
 802686e:	2001      	movs	r0, #1
 8026870:	4b1d      	ldr	r3, [pc, #116]	; (80268e8 <APP_BLE_Procedure_Gap_Peripheral+0x140>)
 8026872:	f00a f845 	bl	8030900 <UTIL_ADV_TRACE_COND_FSend>
 8026876:	e7dc      	b.n	8026832 <APP_BLE_Procedure_Gap_Peripheral+0x8a>
        APP_DBG_MSG("==>> Success: Start Advertising\n");
 8026878:	4b1c      	ldr	r3, [pc, #112]	; (80268ec <APP_BLE_Procedure_Gap_Peripheral+0x144>)
        APP_DBG_MSG("==>> aci_l2cap_connection_parameter_update_req - Success\n");
 802687a:	f04f 31ff 	mov.w	r1, #4294967295	; 0xffffffff
 802687e:	2001      	movs	r0, #1
}
 8026880:	b009      	add	sp, #36	; 0x24
 8026882:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
        APP_DBG_MSG("==>> aci_l2cap_connection_parameter_update_req - Success\n");
 8026886:	f00a b83b 	b.w	8030900 <UTIL_ADV_TRACE_COND_FSend>
      status = aci_gap_set_non_discoverable();
 802688a:	f7f2 fa8c 	bl	8018da6 <aci_gap_set_non_discoverable>
      if (status != BLE_STATUS_SUCCESS)
 802688e:	b158      	cbz	r0, 80268a8 <APP_BLE_Procedure_Gap_Peripheral+0x100>
        bleAppContext.Device_Connection_Status = (APP_BLE_ConnStatus_t)paramC;
 8026890:	2200      	movs	r2, #0
 8026892:	4b0f      	ldr	r3, [pc, #60]	; (80268d0 <APP_BLE_Procedure_Gap_Peripheral+0x128>)
 8026894:	761a      	strb	r2, [r3, #24]
        APP_DBG_MSG("aci_gap_set_non_discoverable - fail, result: 0x%02X\n",status);
 8026896:	4b16      	ldr	r3, [pc, #88]	; (80268f0 <APP_BLE_Procedure_Gap_Peripheral+0x148>)
 8026898:	9000      	str	r0, [sp, #0]
        APP_DBG_MSG("aci_l2cap_connection_parameter_update_req - fail, result: 0x%02X\n",status);
 802689a:	f04f 31ff 	mov.w	r1, #4294967295	; 0xffffffff
 802689e:	2001      	movs	r0, #1
 80268a0:	f00a f82e 	bl	8030900 <UTIL_ADV_TRACE_COND_FSend>
}
 80268a4:	b009      	add	sp, #36	; 0x24
 80268a6:	bd30      	pop	{r4, r5, pc}
        APP_DBG_MSG("==>> aci_gap_set_non_discoverable - Success\n");
 80268a8:	4602      	mov	r2, r0
 80268aa:	4b12      	ldr	r3, [pc, #72]	; (80268f4 <APP_BLE_Procedure_Gap_Peripheral+0x14c>)
 80268ac:	e7e5      	b.n	802687a <APP_BLE_Procedure_Gap_Peripheral+0xd2>
      status = aci_gap_update_adv_data(sizeof(a_AdvData), (uint8_t*) a_AdvData);
 80268ae:	2019      	movs	r0, #25
 80268b0:	490b      	ldr	r1, [pc, #44]	; (80268e0 <APP_BLE_Procedure_Gap_Peripheral+0x138>)
 80268b2:	f7f2 f9de 	bl	8018c72 <aci_gap_update_adv_data>
      if (status != BLE_STATUS_SUCCESS)
 80268b6:	4602      	mov	r2, r0
 80268b8:	b110      	cbz	r0, 80268c0 <APP_BLE_Procedure_Gap_Peripheral+0x118>
        APP_DBG_MSG("aci_gap_update_adv_data - fail, result: 0x%02X\n",status);
 80268ba:	4b0f      	ldr	r3, [pc, #60]	; (80268f8 <APP_BLE_Procedure_Gap_Peripheral+0x150>)
 80268bc:	9000      	str	r0, [sp, #0]
 80268be:	e7cc      	b.n	802685a <APP_BLE_Procedure_Gap_Peripheral+0xb2>
        APP_DBG_MSG("==>> aci_gap_update_adv_data - Success\n");
 80268c0:	4b0e      	ldr	r3, [pc, #56]	; (80268fc <APP_BLE_Procedure_Gap_Peripheral+0x154>)
 80268c2:	e7da      	b.n	802687a <APP_BLE_Procedure_Gap_Peripheral+0xd2>
  switch(ProcGapPeripheralId)
 80268c4:	22a0      	movs	r2, #160	; 0xa0
 80268c6:	2180      	movs	r1, #128	; 0x80
 80268c8:	e784      	b.n	80267d4 <APP_BLE_Procedure_Gap_Peripheral+0x2c>
        APP_DBG_MSG("==>> aci_l2cap_connection_parameter_update_req - Success\n");
 80268ca:	4b0d      	ldr	r3, [pc, #52]	; (8026900 <APP_BLE_Procedure_Gap_Peripheral+0x158>)
 80268cc:	e7d5      	b.n	802687a <APP_BLE_Procedure_Gap_Peripheral+0xd2>
 80268ce:	bf00      	nop
 80268d0:	20004e4c 	.word	0x20004e4c
 80268d4:	0803255c 	.word	0x0803255c
 80268d8:	080323c0 	.word	0x080323c0
 80268dc:	0803241f 	.word	0x0803241f
 80268e0:	2000045c 	.word	0x2000045c
 80268e4:	08032452 	.word	0x08032452
 80268e8:	080323f6 	.word	0x080323f6
 80268ec:	08032481 	.word	0x08032481
 80268f0:	080324a2 	.word	0x080324a2
 80268f4:	080324d7 	.word	0x080324d7
 80268f8:	08032504 	.word	0x08032504
 80268fc:	08032534 	.word	0x08032534
 8026900:	0803259e 	.word	0x0803259e

08026904 <APP_BLE_Init>:
{
 8026904:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  LST_init_head(&BleAsynchEventQueue);
 8026908:	48c9      	ldr	r0, [pc, #804]	; (8026c30 <APP_BLE_Init+0x32c>)
{
 802690a:	b08b      	sub	sp, #44	; 0x2c
  LST_init_head(&BleAsynchEventQueue);
 802690c:	f003 ffec 	bl	802a8e8 <LST_init_head>
  UTIL_SEQ_RegTask(1U << CFG_TASK_BLE_HOST, UTIL_SEQ_RFU, BleStack_Process_BG);
 8026910:	2100      	movs	r1, #0
 8026912:	f44f 7080 	mov.w	r0, #256	; 0x100
 8026916:	4ac7      	ldr	r2, [pc, #796]	; (8026c34 <APP_BLE_Init+0x330>)
 8026918:	f00a f99e 	bl	8030c58 <UTIL_SEQ_RegTask>
  UTIL_SEQ_RegTask(1U << CFG_TASK_HCI_ASYNCH_EVT_ID, UTIL_SEQ_RFU, Ble_UserEvtRx);
 802691c:	2100      	movs	r1, #0
 802691e:	2001      	movs	r0, #1
 8026920:	4ac5      	ldr	r2, [pc, #788]	; (8026c38 <APP_BLE_Init+0x334>)
 8026922:	f00a f999 	bl	8030c58 <UTIL_SEQ_RegTask>
  NVM_Init(buffer_nvm, 0, CFG_BLEPLAT_NVM_MAX_SIZE);
 8026926:	22fc      	movs	r2, #252	; 0xfc
 8026928:	2100      	movs	r1, #0
 802692a:	48c4      	ldr	r0, [pc, #784]	; (8026c3c <APP_BLE_Init+0x338>)
 802692c:	f003 fa4a 	bl	8029dc4 <NVM_Init>
  SNVMA_Register (APP_BLE_NvmBuffer,
 8026930:	f44f 72fc 	mov.w	r2, #504	; 0x1f8
 8026934:	49c1      	ldr	r1, [pc, #772]	; (8026c3c <APP_BLE_Init+0x338>)
 8026936:	2000      	movs	r0, #0
 8026938:	f002 fe00 	bl	802953c <SNVMA_Register>
  SNVMA_Restore (APP_BLE_NvmBuffer);
 802693c:	2000      	movs	r0, #0
 802693e:	f002 fe7b 	bl	8029638 <SNVMA_Restore>
  if (NVM_Get (NVM_FIRST, 0xFF, 0, 0, 0) != NVM_EOF)
 8026942:	2300      	movs	r3, #0
 8026944:	21ff      	movs	r1, #255	; 0xff
 8026946:	461a      	mov	r2, r3
 8026948:	4618      	mov	r0, r3
 802694a:	9300      	str	r3, [sp, #0]
 802694c:	f003 fa52 	bl	8029df4 <NVM_Get>
 8026950:	3003      	adds	r0, #3
 8026952:	d002      	beq.n	802695a <APP_BLE_Init+0x56>
    NVM_Discard (NVM_ALL);
 8026954:	2003      	movs	r0, #3
 8026956:	f003 fb71 	bl	802a03c <NVM_Discard>
  pInitParams.bleStartRamAddress      = (uint8_t*)buffer;
 802695a:	48b9      	ldr	r0, [pc, #740]	; (8026c40 <APP_BLE_Init+0x33c>)
 802695c:	4bb9      	ldr	r3, [pc, #740]	; (8026c44 <APP_BLE_Init+0x340>)
  pInitParams.numAttrRecord           = CFG_BLE_NUM_GATT_ATTRIBUTES;
 802695e:	f44f 548b 	mov.w	r4, #4448	; 0x1160
  pInitParams.bleStartRamAddress      = (uint8_t*)buffer;
 8026962:	6003      	str	r3, [r0, #0]
  pInitParams.total_buffer_size       = BLE_DYN_ALLOC_SIZE;
 8026964:	f242 5330 	movw	r3, #9520	; 0x2530
 8026968:	6043      	str	r3, [r0, #4]
  pInitParams.bleStartRamAddress_GATT = (uint8_t*)gatt_buffer;
 802696a:	4bb7      	ldr	r3, [pc, #732]	; (8026c48 <APP_BLE_Init+0x344>)
 802696c:	4db7      	ldr	r5, [pc, #732]	; (8026c4c <APP_BLE_Init+0x348>)
 802696e:	6083      	str	r3, [r0, #8]
  pInitParams.numAttrRecord           = CFG_BLE_NUM_GATT_ATTRIBUTES;
 8026970:	4bb7      	ldr	r3, [pc, #732]	; (8026c50 <APP_BLE_Init+0x34c>)
 8026972:	e9c0 4303 	strd	r4, r3, [r0, #12]
  pInitParams.attrValueArrSize        = CFG_BLE_ATT_VALUE_ARRAY_SIZE;
 8026976:	f103 53f0 	add.w	r3, r3, #503316480	; 0x1e000000
 802697a:	f203 43fc 	addw	r3, r3, #1276	; 0x4fc
 802697e:	6143      	str	r3, [r0, #20]
  pInitParams.mblockCount             = CFG_BLE_MBLOCK_COUNT;
 8026980:	23a9      	movs	r3, #169	; 0xa9
 8026982:	7603      	strb	r3, [r0, #24]
  pInitParams.debug                   = 0x10;/*static random address generation*/
 8026984:	2310      	movs	r3, #16
 8026986:	6243      	str	r3, [r0, #36]	; 0x24
  pInitParams.attMtu                  = CFG_BLE_MAX_ATT_MTU;
 8026988:	23f7      	movs	r3, #247	; 0xf7
 802698a:	8343      	strh	r3, [r0, #26]
  pInitParams.max_coc_mps             = CFG_BLE_MAX_COC_MPS;
 802698c:	4bb1      	ldr	r3, [pc, #708]	; (8026c54 <APP_BLE_Init+0x350>)
 802698e:	61c3      	str	r3, [r0, #28]
  pInitParams.options                 = 0x0000;
 8026990:	2300      	movs	r3, #0
 8026992:	8403      	strh	r3, [r0, #32]
  return_status = BleStack_Init(&pInitParams);
 8026994:	f7f1 ff28 	bl	80187e8 <BleStack_Init>
  if (HOST_BLE_Init() == 0u)
 8026998:	4604      	mov	r4, r0
 802699a:	2800      	cmp	r0, #0
 802699c:	f040 81ca 	bne.w	8026d34 <APP_BLE_Init+0x430>
  APP_DBG_MSG("==>> Start Ble_Hci_Gap_Gatt_Init function\n");
 80269a0:	4602      	mov	r2, r0
 80269a2:	f04f 31ff 	mov.w	r1, #4294967295	; 0xffffffff
 80269a6:	4bac      	ldr	r3, [pc, #688]	; (8026c58 <APP_BLE_Init+0x354>)
  uint16_t a_appearance[1] = {BLE_CFG_GAP_APPEARANCE};
 80269a8:	f8ad 001c 	strh.w	r0, [sp, #28]
  APP_DBG_MSG("==>> Start Ble_Hci_Gap_Gatt_Init function\n");
 80269ac:	2001      	movs	r0, #1
 80269ae:	f009 ffa7 	bl	8030900 <UTIL_ADV_TRACE_COND_FSend>
  ret = hci_reset();
 80269b2:	f7f1 ff23 	bl	80187fc <hci_reset>
  if (ret != BLE_STATUS_SUCCESS)
 80269b6:	4602      	mov	r2, r0
 80269b8:	2800      	cmp	r0, #0
 80269ba:	f000 81c1 	beq.w	8026d40 <APP_BLE_Init+0x43c>
    APP_DBG_MSG("  Fail   : hci_reset command, result: 0x%02X\n", ret);
 80269be:	9000      	str	r0, [sp, #0]
 80269c0:	4622      	mov	r2, r4
 80269c2:	f04f 31ff 	mov.w	r1, #4294967295	; 0xffffffff
 80269c6:	2001      	movs	r0, #1
 80269c8:	4ba4      	ldr	r3, [pc, #656]	; (8026c5c <APP_BLE_Init+0x358>)
 80269ca:	f009 ff99 	bl	8030900 <UTIL_ADV_TRACE_COND_FSend>
  OTP_Data_s *p_otp_addr = NULL;
 80269ce:	2000      	movs	r0, #0
  * @brief  Return the Unique Device Number
  * @retval Values between Min_Data=0x00000000 and Max_Data=0xFFFFFFFF
  */
__STATIC_INLINE uint32_t LL_FLASH_GetUDN(void)
{
  return (READ_REG(*((uint32_t *)UID64_BASE)));
 80269d0:	4ba3      	ldr	r3, [pc, #652]	; (8026c60 <APP_BLE_Init+0x35c>)
 80269d2:	9009      	str	r0, [sp, #36]	; 0x24
 80269d4:	f8d3 2a00 	ldr.w	r2, [r3, #2560]	; 0xa00
  if (udn != 0xFFFFFFFF)
 80269d8:	af09      	add	r7, sp, #36	; 0x24
 80269da:	1c51      	adds	r1, r2, #1
 80269dc:	f000 81b7 	beq.w	8026d4e <APP_BLE_Init+0x44a>
    a_BdAddrUdn[0] = (uint8_t)(udn & 0x000000FF);
 80269e0:	4ca0      	ldr	r4, [pc, #640]	; (8026c64 <APP_BLE_Init+0x360>)
  * @note   For STM32WBAxxxx devices, the ST Company ID is 0x0080E1
  * @retval Values between Min_Data=0x00 and Max_Data=0xFFFFFF (ex: ST Company ID is 0x0080E1)
  */
__STATIC_INLINE uint32_t LL_FLASH_GetSTCompanyID(void)
{
  return (((READ_REG(*((uint32_t *)UID64_BASE + 1U))) >> 8U) & 0x00FFFFFFU);
 80269e2:	f8d3 3a04 	ldr.w	r3, [r3, #2564]	; 0xa04
 80269e6:	7022      	strb	r2, [r4, #0]
    a_BdAddrUdn[1] = (uint8_t)((udn & 0x0000FF00) >> 8);
 80269e8:	0a12      	lsrs	r2, r2, #8
 80269ea:	7062      	strb	r2, [r4, #1]
 80269ec:	0a1a      	lsrs	r2, r3, #8
    a_BdAddrUdn[2] = (uint8_t)device_id;
 80269ee:	70a3      	strb	r3, [r4, #2]
    a_BdAddrUdn[3] = (uint8_t)(company_id & 0x000000FF);
 80269f0:	70e2      	strb	r2, [r4, #3]
    a_BdAddrUdn[4] = (uint8_t)((company_id & 0x0000FF00) >> 8);
 80269f2:	0c1a      	lsrs	r2, r3, #16
    a_BdAddrUdn[5] = (uint8_t)((company_id & 0x00FF0000) >> 16);
 80269f4:	0e1b      	lsrs	r3, r3, #24
    a_BdAddrUdn[4] = (uint8_t)((company_id & 0x0000FF00) >> 8);
 80269f6:	7122      	strb	r2, [r4, #4]
    a_BdAddrUdn[5] = (uint8_t)((company_id & 0x00FF0000) >> 16);
 80269f8:	7163      	strb	r3, [r4, #5]
  ret = aci_hal_write_config_data(CONFIG_DATA_PUBADDR_OFFSET,
 80269fa:	4622      	mov	r2, r4
 80269fc:	2106      	movs	r1, #6
 80269fe:	2000      	movs	r0, #0
 8026a00:	f7f9 fcb6 	bl	8020370 <aci_hal_write_config_data>
  if (ret != BLE_STATUS_SUCCESS)
 8026a04:	4606      	mov	r6, r0
 8026a06:	2800      	cmp	r0, #0
 8026a08:	f000 81aa 	beq.w	8026d60 <APP_BLE_Init+0x45c>
    APP_DBG_MSG("  Fail   : aci_hal_write_config_data command - CONFIG_DATA_PUBADDR_OFFSET, result: 0x%02X\n", ret);
 8026a0c:	9000      	str	r0, [sp, #0]
 8026a0e:	2200      	movs	r2, #0
 8026a10:	f04f 31ff 	mov.w	r1, #4294967295	; 0xffffffff
 8026a14:	2001      	movs	r0, #1
 8026a16:	4b94      	ldr	r3, [pc, #592]	; (8026c68 <APP_BLE_Init+0x364>)
 8026a18:	f009 ff72 	bl	8030900 <UTIL_ADV_TRACE_COND_FSend>
  ret = aci_hal_write_config_data(CONFIG_DATA_IR_OFFSET, CONFIG_DATA_IR_LEN, (uint8_t*)a_BLE_CfgIrValue);
 8026a1c:	4a93      	ldr	r2, [pc, #588]	; (8026c6c <APP_BLE_Init+0x368>)
 8026a1e:	2110      	movs	r1, #16
 8026a20:	2018      	movs	r0, #24
 8026a22:	f7f9 fca5 	bl	8020370 <aci_hal_write_config_data>
  if (ret != BLE_STATUS_SUCCESS)
 8026a26:	4602      	mov	r2, r0
 8026a28:	2800      	cmp	r0, #0
 8026a2a:	f000 81b4 	beq.w	8026d96 <APP_BLE_Init+0x492>
    APP_DBG_MSG("  Fail   : aci_hal_write_config_data command - CONFIG_DATA_IR_OFFSET, result: 0x%02X\n", ret);
 8026a2e:	9000      	str	r0, [sp, #0]
 8026a30:	2200      	movs	r2, #0
 8026a32:	f04f 31ff 	mov.w	r1, #4294967295	; 0xffffffff
 8026a36:	2001      	movs	r0, #1
 8026a38:	4b8d      	ldr	r3, [pc, #564]	; (8026c70 <APP_BLE_Init+0x36c>)
 8026a3a:	f009 ff61 	bl	8030900 <UTIL_ADV_TRACE_COND_FSend>
  ret = aci_hal_write_config_data(CONFIG_DATA_ER_OFFSET, CONFIG_DATA_ER_LEN, (uint8_t*)a_BLE_CfgErValue);
 8026a3e:	4a8d      	ldr	r2, [pc, #564]	; (8026c74 <APP_BLE_Init+0x370>)
 8026a40:	2110      	movs	r1, #16
 8026a42:	2008      	movs	r0, #8
 8026a44:	f7f9 fc94 	bl	8020370 <aci_hal_write_config_data>
  if (ret != BLE_STATUS_SUCCESS)
 8026a48:	4602      	mov	r2, r0
 8026a4a:	2800      	cmp	r0, #0
 8026a4c:	f000 81aa 	beq.w	8026da4 <APP_BLE_Init+0x4a0>
    APP_DBG_MSG("  Fail   : aci_hal_write_config_data command - CONFIG_DATA_ER_OFFSET, result: 0x%02X\n", ret);
 8026a50:	9000      	str	r0, [sp, #0]
 8026a52:	2200      	movs	r2, #0
 8026a54:	f04f 31ff 	mov.w	r1, #4294967295	; 0xffffffff
 8026a58:	2001      	movs	r0, #1
 8026a5a:	4b87      	ldr	r3, [pc, #540]	; (8026c78 <APP_BLE_Init+0x374>)
 8026a5c:	f009 ff50 	bl	8030900 <UTIL_ADV_TRACE_COND_FSend>
  ret = aci_hal_set_tx_power_level(1, CFG_TX_POWER);
 8026a60:	2119      	movs	r1, #25
 8026a62:	2001      	movs	r0, #1
 8026a64:	f7f9 fc96 	bl	8020394 <aci_hal_set_tx_power_level>
  if (ret != BLE_STATUS_SUCCESS)
 8026a68:	4602      	mov	r2, r0
 8026a6a:	2800      	cmp	r0, #0
 8026a6c:	f000 81a1 	beq.w	8026db2 <APP_BLE_Init+0x4ae>
    APP_DBG_MSG("  Fail   : aci_hal_set_tx_power_level command, result: 0x%02X\n", ret);
 8026a70:	9000      	str	r0, [sp, #0]
 8026a72:	2200      	movs	r2, #0
 8026a74:	f04f 31ff 	mov.w	r1, #4294967295	; 0xffffffff
 8026a78:	2001      	movs	r0, #1
 8026a7a:	4b80      	ldr	r3, [pc, #512]	; (8026c7c <APP_BLE_Init+0x378>)
 8026a7c:	f009 ff40 	bl	8030900 <UTIL_ADV_TRACE_COND_FSend>
  ret = aci_gatt_init();
 8026a80:	f7f4 fcea 	bl	801b458 <aci_gatt_init>
  if (ret != BLE_STATUS_SUCCESS)
 8026a84:	4602      	mov	r2, r0
 8026a86:	2800      	cmp	r0, #0
 8026a88:	f000 819a 	beq.w	8026dc0 <APP_BLE_Init+0x4bc>
    APP_DBG_MSG("  Fail   : aci_gatt_init command, result: 0x%02X\n", ret);
 8026a8c:	9000      	str	r0, [sp, #0]
 8026a8e:	2200      	movs	r2, #0
 8026a90:	f04f 31ff 	mov.w	r1, #4294967295	; 0xffffffff
 8026a94:	2001      	movs	r0, #1
 8026a96:	4b7a      	ldr	r3, [pc, #488]	; (8026c80 <APP_BLE_Init+0x37c>)
 8026a98:	f009 ff32 	bl	8030900 <UTIL_ADV_TRACE_COND_FSend>
    ret = aci_gap_init(role,
 8026a9c:	f10d 0322 	add.w	r3, sp, #34	; 0x22
 8026aa0:	2213      	movs	r2, #19
 8026aa2:	9300      	str	r3, [sp, #0]
 8026aa4:	2100      	movs	r1, #0
 8026aa6:	2001      	movs	r0, #1
 8026aa8:	9701      	str	r7, [sp, #4]
 8026aaa:	ab08      	add	r3, sp, #32
 8026aac:	f7f1 ff83 	bl	80189b6 <aci_gap_init>
    if (ret != BLE_STATUS_SUCCESS)
 8026ab0:	4602      	mov	r2, r0
 8026ab2:	2800      	cmp	r0, #0
 8026ab4:	f000 818b 	beq.w	8026dce <APP_BLE_Init+0x4ca>
      APP_DBG_MSG("  Fail   : aci_gap_init command, result: 0x%02X\n", ret);
 8026ab8:	9000      	str	r0, [sp, #0]
 8026aba:	2200      	movs	r2, #0
 8026abc:	f04f 31ff 	mov.w	r1, #4294967295	; 0xffffffff
 8026ac0:	2001      	movs	r0, #1
 8026ac2:	4b70      	ldr	r3, [pc, #448]	; (8026c84 <APP_BLE_Init+0x380>)
 8026ac4:	f009 ff1c 	bl	8030900 <UTIL_ADV_TRACE_COND_FSend>
    ret = aci_gatt_update_char_value(gap_service_handle,
 8026ac8:	4b6f      	ldr	r3, [pc, #444]	; (8026c88 <APP_BLE_Init+0x384>)
 8026aca:	2200      	movs	r2, #0
 8026acc:	9300      	str	r3, [sp, #0]
 8026ace:	f8bd 1022 	ldrh.w	r1, [sp, #34]	; 0x22
 8026ad2:	2313      	movs	r3, #19
 8026ad4:	f8bd 0020 	ldrh.w	r0, [sp, #32]
 8026ad8:	f7f5 fb4b 	bl	801c172 <aci_gatt_update_char_value>
    if (ret != BLE_STATUS_SUCCESS)
 8026adc:	4602      	mov	r2, r0
 8026ade:	2800      	cmp	r0, #0
 8026ae0:	f000 817c 	beq.w	8026ddc <APP_BLE_Init+0x4d8>
      APP_DBG_MSG("  Fail   : aci_gatt_update_char_value - Device Name, result: 0x%02X\n", ret);
 8026ae4:	9000      	str	r0, [sp, #0]
 8026ae6:	2200      	movs	r2, #0
 8026ae8:	f04f 31ff 	mov.w	r1, #4294967295	; 0xffffffff
 8026aec:	2001      	movs	r0, #1
 8026aee:	4b67      	ldr	r3, [pc, #412]	; (8026c8c <APP_BLE_Init+0x388>)
 8026af0:	f009 ff06 	bl	8030900 <UTIL_ADV_TRACE_COND_FSend>
  ret = aci_gatt_update_char_value(gap_service_handle,
 8026af4:	ab07      	add	r3, sp, #28
 8026af6:	2200      	movs	r2, #0
 8026af8:	9300      	str	r3, [sp, #0]
 8026afa:	f8bd 1024 	ldrh.w	r1, [sp, #36]	; 0x24
 8026afe:	2302      	movs	r3, #2
 8026b00:	f8bd 0020 	ldrh.w	r0, [sp, #32]
 8026b04:	f7f5 fb35 	bl	801c172 <aci_gatt_update_char_value>
  if (ret != BLE_STATUS_SUCCESS)
 8026b08:	4602      	mov	r2, r0
 8026b0a:	2800      	cmp	r0, #0
 8026b0c:	f000 816d 	beq.w	8026dea <APP_BLE_Init+0x4e6>
    APP_DBG_MSG("  Fail   : aci_gatt_update_char_value - Appearance, result: 0x%02X\n", ret)
 8026b10:	9000      	str	r0, [sp, #0]
 8026b12:	2200      	movs	r2, #0
 8026b14:	f04f 31ff 	mov.w	r1, #4294967295	; 0xffffffff
 8026b18:	2001      	movs	r0, #1
 8026b1a:	4b5d      	ldr	r3, [pc, #372]	; (8026c90 <APP_BLE_Init+0x38c>)
 8026b1c:	f009 fef0 	bl	8030900 <UTIL_ADV_TRACE_COND_FSend>
  ret = hci_le_set_default_phy(0x00, HCI_TX_PHYS_LE_2M_PREF, HCI_RX_PHYS_LE_2M_PREF);
 8026b20:	2202      	movs	r2, #2
 8026b22:	2000      	movs	r0, #0
 8026b24:	4611      	mov	r1, r2
 8026b26:	f7f9 fbb7 	bl	8020298 <hci_le_set_default_phy>
  if (ret != BLE_STATUS_SUCCESS)
 8026b2a:	4602      	mov	r2, r0
 8026b2c:	2800      	cmp	r0, #0
 8026b2e:	f000 8163 	beq.w	8026df8 <APP_BLE_Init+0x4f4>
    APP_DBG_MSG("  Fail   : hci_le_set_default_phy command, result: 0x%02X\n", ret);
 8026b32:	9000      	str	r0, [sp, #0]
 8026b34:	2200      	movs	r2, #0
 8026b36:	f04f 31ff 	mov.w	r1, #4294967295	; 0xffffffff
 8026b3a:	2001      	movs	r0, #1
 8026b3c:	4b55      	ldr	r3, [pc, #340]	; (8026c94 <APP_BLE_Init+0x390>)
 8026b3e:	f009 fedf 	bl	8030900 <UTIL_ADV_TRACE_COND_FSend>
  bleAppContext.BleApplicationContext_legacy.bleSecurityParam.ioCapability = CFG_IO_CAPABILITY;
 8026b42:	2601      	movs	r6, #1
  ret = aci_gap_set_io_capability(bleAppContext.BleApplicationContext_legacy.bleSecurityParam.ioCapability);
 8026b44:	4630      	mov	r0, r6
  bleAppContext.BleApplicationContext_legacy.bleSecurityParam.ioCapability = CFG_IO_CAPABILITY;
 8026b46:	702e      	strb	r6, [r5, #0]
  ret = aci_gap_set_io_capability(bleAppContext.BleApplicationContext_legacy.bleSecurityParam.ioCapability);
 8026b48:	f7fb fad3 	bl	80220f2 <aci_gap_set_io_capability>
  if (ret != BLE_STATUS_SUCCESS)
 8026b4c:	4602      	mov	r2, r0
 8026b4e:	2800      	cmp	r0, #0
 8026b50:	f000 8159 	beq.w	8026e06 <APP_BLE_Init+0x502>
    APP_DBG_MSG("  Fail   : aci_gap_set_io_capability command, result: 0x%02X\n", ret);
 8026b54:	9000      	str	r0, [sp, #0]
 8026b56:	2200      	movs	r2, #0
 8026b58:	f04f 31ff 	mov.w	r1, #4294967295	; 0xffffffff
 8026b5c:	4630      	mov	r0, r6
 8026b5e:	4b4e      	ldr	r3, [pc, #312]	; (8026c98 <APP_BLE_Init+0x394>)
 8026b60:	f009 fece 	bl	8030900 <UTIL_ADV_TRACE_COND_FSend>
  bleAppContext.BleApplicationContext_legacy.bleSecurityParam.Fixed_Pin             = CFG_FIXED_PIN;
 8026b64:	4b4d      	ldr	r3, [pc, #308]	; (8026c9c <APP_BLE_Init+0x398>)
      }
    case AD_TYPE_MANUFACTURER_SPECIFIC_DATA:
      {
        p_adv_data[i+2] = 0x30;
        p_adv_data[i+3] = 0x00;
        p_adv_data[i+4] = 0x02; /* blueST SDK version */
 8026b66:	f04f 0902 	mov.w	r9, #2
  bleAppContext.BleApplicationContext_legacy.bleSecurityParam.Fixed_Pin             = CFG_FIXED_PIN;
 8026b6a:	60ab      	str	r3, [r5, #8]
  bleAppContext.BleApplicationContext_legacy.bleSecurityParam.mitm_mode             = CFG_MITM_PROTECTION;
 8026b6c:	2301      	movs	r3, #1
 8026b6e:	706b      	strb	r3, [r5, #1]
  bleAppContext.BleApplicationContext_legacy.bleSecurityParam.bonding_mode          = CFG_BONDING_MODE;
 8026b70:	806b      	strh	r3, [r5, #2]
  bleAppContext.BleApplicationContext_legacy.bleSecurityParam.encryptionKeySizeMin  = CFG_ENCRYPTION_KEY_SIZE_MIN;
 8026b72:	f241 0308 	movw	r3, #4104	; 0x1008
 8026b76:	80ab      	strh	r3, [r5, #4]
  uint16_t i =0;
 8026b78:	2300      	movs	r3, #0
        p_adv_data[i+5] = 0x8B; /* Board ID */
 8026b7a:	f04f 0a8b 	mov.w	sl, #139	; 0x8b
        p_adv_data[i+3] = 0x00;
 8026b7e:	461f      	mov	r7, r3
        p_adv_data[i+6] = 0x83; /* FW ID */
 8026b80:	f04f 0b83 	mov.w	fp, #131	; 0x83
    ad_length = p_adv_data[i];
 8026b84:	4a46      	ldr	r2, [pc, #280]	; (8026ca0 <APP_BLE_Init+0x39c>)
    ad_type = p_adv_data[i + 1];
 8026b86:	1c59      	adds	r1, r3, #1
 8026b88:	b289      	uxth	r1, r1
 8026b8a:	5c51      	ldrb	r1, [r2, r1]
    ad_length = p_adv_data[i];
 8026b8c:	5cd0      	ldrb	r0, [r2, r3]
    switch (ad_type)
 8026b8e:	2909      	cmp	r1, #9
 8026b90:	f000 8140 	beq.w	8026e14 <APP_BLE_Init+0x510>
 8026b94:	29ff      	cmp	r1, #255	; 0xff
 8026b96:	f000 815f 	beq.w	8026e58 <APP_BLE_Init+0x554>
        break;
      }
    default:
      break;
    }
    i += ad_length + 1; /* increment the iterator to go on next element*/
 8026b9a:	3001      	adds	r0, #1
 8026b9c:	4403      	add	r3, r0
 8026b9e:	b29b      	uxth	r3, r3
  while(i < tab_size)
 8026ba0:	2b18      	cmp	r3, #24
 8026ba2:	d9f0      	bls.n	8026b86 <APP_BLE_Init+0x282>
  ret = aci_gap_set_authentication_requirement(bleAppContext.BleApplicationContext_legacy.bleSecurityParam.bonding_mode,
 8026ba4:	2400      	movs	r4, #0
 8026ba6:	4b3d      	ldr	r3, [pc, #244]	; (8026c9c <APP_BLE_Init+0x398>)
 8026ba8:	2210      	movs	r2, #16
 8026baa:	e9cd 3403 	strd	r3, r4, [sp, #12]
 8026bae:	2308      	movs	r3, #8
 8026bb0:	e9cd 3200 	strd	r3, r2, [sp]
 8026bb4:	2201      	movs	r2, #1
 8026bb6:	4623      	mov	r3, r4
 8026bb8:	4611      	mov	r1, r2
 8026bba:	4610      	mov	r0, r2
 8026bbc:	9402      	str	r4, [sp, #8]
 8026bbe:	f7fb fab3 	bl	8022128 <aci_gap_set_authentication_requirement>
  if (ret != BLE_STATUS_SUCCESS)
 8026bc2:	4602      	mov	r2, r0
 8026bc4:	2800      	cmp	r0, #0
 8026bc6:	f000 8185 	beq.w	8026ed4 <APP_BLE_Init+0x5d0>
    APP_DBG_MSG("  Fail   : aci_gap_set_authentication_requirement command, result: 0x%02X\n", ret);
 8026bca:	9000      	str	r0, [sp, #0]
 8026bcc:	4622      	mov	r2, r4
 8026bce:	f04f 31ff 	mov.w	r1, #4294967295	; 0xffffffff
 8026bd2:	2001      	movs	r0, #1
 8026bd4:	4b33      	ldr	r3, [pc, #204]	; (8026ca4 <APP_BLE_Init+0x3a0>)
 8026bd6:	f009 fe93 	bl	8030900 <UTIL_ADV_TRACE_COND_FSend>
  if (bleAppContext.BleApplicationContext_legacy.bleSecurityParam.bonding_mode)
 8026bda:	78ab      	ldrb	r3, [r5, #2]
 8026bdc:	b16b      	cbz	r3, 8026bfa <APP_BLE_Init+0x2f6>
    ret = aci_gap_configure_whitelist();
 8026bde:	f7f2 faa9 	bl	8019134 <aci_gap_configure_whitelist>
    if (ret != BLE_STATUS_SUCCESS)
 8026be2:	4602      	mov	r2, r0
 8026be4:	2800      	cmp	r0, #0
 8026be6:	f000 817c 	beq.w	8026ee2 <APP_BLE_Init+0x5de>
      APP_DBG_MSG("  Fail   : aci_gap_configure_whitelist command, result: 0x%02X\n", ret);
 8026bea:	9000      	str	r0, [sp, #0]
 8026bec:	2200      	movs	r2, #0
 8026bee:	f04f 31ff 	mov.w	r1, #4294967295	; 0xffffffff
 8026bf2:	2001      	movs	r0, #1
 8026bf4:	4b2c      	ldr	r3, [pc, #176]	; (8026ca8 <APP_BLE_Init+0x3a4>)
 8026bf6:	f009 fe83 	bl	8030900 <UTIL_ADV_TRACE_COND_FSend>
    bleAppContext.Device_Connection_Status = APP_BLE_IDLE;
 8026bfa:	2400      	movs	r4, #0
  APP_DBG_MSG("==>> End Ble_Hci_Gap_Gatt_Init function\n");
 8026bfc:	2200      	movs	r2, #0
 8026bfe:	f04f 31ff 	mov.w	r1, #4294967295	; 0xffffffff
 8026c02:	4b2a      	ldr	r3, [pc, #168]	; (8026cac <APP_BLE_Init+0x3a8>)
 8026c04:	2001      	movs	r0, #1
 8026c06:	f009 fe7b 	bl	8030900 <UTIL_ADV_TRACE_COND_FSend>
    SVCCTL_Init();
 8026c0a:	f009 fd8b 	bl	8030724 <SVCCTL_Init>
    bleAppContext.BleApplicationContext_legacy.connectionHandle = 0xFFFF;
 8026c0e:	f64f 73ff 	movw	r3, #65535	; 0xffff
    UTIL_SEQ_RegTask(1<<CFG_TASK_ADV_CANCEL_ID, UTIL_SEQ_RFU, Adv_Cancel);
 8026c12:	4621      	mov	r1, r4
 8026c14:	2010      	movs	r0, #16
 8026c16:	4a26      	ldr	r2, [pc, #152]	; (8026cb0 <APP_BLE_Init+0x3ac>)
    bleAppContext.BleApplicationContext_legacy.connectionHandle = 0xFFFF;
 8026c18:	82eb      	strh	r3, [r5, #22]
    bleAppContext.Device_Connection_Status = APP_BLE_IDLE;
 8026c1a:	762c      	strb	r4, [r5, #24]
    UTIL_SEQ_RegTask(1<<CFG_TASK_ADV_CANCEL_ID, UTIL_SEQ_RFU, Adv_Cancel);
 8026c1c:	f00a f81c 	bl	8030c58 <UTIL_SEQ_RegTask>
    UTIL_TIMER_Create(&(bleAppContext.Advertising_mgr_timer_Id),
 8026c20:	4622      	mov	r2, r4
 8026c22:	4621      	mov	r1, r4
 8026c24:	4b23      	ldr	r3, [pc, #140]	; (8026cb4 <APP_BLE_Init+0x3b0>)
 8026c26:	4824      	ldr	r0, [pc, #144]	; (8026cb8 <APP_BLE_Init+0x3b4>)
 8026c28:	9400      	str	r4, [sp, #0]
 8026c2a:	f00a f82f 	bl	8030c8c <UTIL_TIMER_Create>
 8026c2e:	e045      	b.n	8026cbc <APP_BLE_Init+0x3b8>
 8026c30:	20004e38 	.word	0x20004e38
 8026c34:	0802677d 	.word	0x0802677d
 8026c38:	08026731 	.word	0x08026731
 8026c3c:	200073d0 	.word	0x200073d0
 8026c40:	20008d10 	.word	0x20008d10
 8026c44:	20004e9c 	.word	0x20004e9c
 8026c48:	20007bb0 	.word	0x20007bb0
 8026c4c:	20004e4c 	.word	0x20004e4c
 8026c50:	00080044 	.word	0x00080044
 8026c54:	204000f8 	.word	0x204000f8
 8026c58:	080325d8 	.word	0x080325d8
 8026c5c:	08032603 	.word	0x08032603
 8026c60:	0bf90000 	.word	0x0bf90000
 8026c64:	20004e44 	.word	0x20004e44
 8026c68:	0803264f 	.word	0x0803264f
 8026c6c:	0803329c 	.word	0x0803329c
 8026c70:	08032730 	.word	0x08032730
 8026c74:	0803328c 	.word	0x0803328c
 8026c78:	080327cc 	.word	0x080327cc
 8026c7c:	08032868 	.word	0x08032868
 8026c80:	080328d6 	.word	0x080328d6
 8026c84:	0803292a 	.word	0x0803292a
 8026c88:	080332ac 	.word	0x080332ac
 8026c8c:	0803297c 	.word	0x0803297c
 8026c90:	080329f6 	.word	0x080329f6
 8026c94:	08032a6e 	.word	0x08032a6e
 8026c98:	08032ad4 	.word	0x08032ad4
 8026c9c:	0001b207 	.word	0x0001b207
 8026ca0:	2000045c 	.word	0x2000045c
 8026ca4:	08032b40 	.word	0x08032b40
 8026ca8:	08032bc6 	.word	0x08032bc6
 8026cac:	08032c36 	.word	0x08032c36
 8026cb0:	08026f5d 	.word	0x08026f5d
 8026cb4:	08026727 	.word	0x08026727
 8026cb8:	20004e68 	.word	0x20004e68
    UTIL_TIMER_Create(&(bleAppContext.SwitchOffGPIO_timer_Id),
 8026cbc:	4622      	mov	r2, r4
 8026cbe:	4621      	mov	r1, r4
 8026cc0:	4b8f      	ldr	r3, [pc, #572]	; (8026f00 <APP_BLE_Init+0x5fc>)
 8026cc2:	4890      	ldr	r0, [pc, #576]	; (8026f04 <APP_BLE_Init+0x600>)
 8026cc4:	9400      	str	r4, [sp, #0]
 8026cc6:	f009 ffe1 	bl	8030c8c <UTIL_TIMER_Create>
    APP_DBG_MSG("\n");
 8026cca:	4622      	mov	r2, r4
 8026ccc:	f04f 31ff 	mov.w	r1, #4294967295	; 0xffffffff
 8026cd0:	4b8d      	ldr	r3, [pc, #564]	; (8026f08 <APP_BLE_Init+0x604>)
 8026cd2:	2001      	movs	r0, #1
 8026cd4:	f009 fe14 	bl	8030900 <UTIL_ADV_TRACE_COND_FSend>
    APP_DBG_MSG("Services and Characteristics creation\n");
 8026cd8:	4622      	mov	r2, r4
 8026cda:	f04f 31ff 	mov.w	r1, #4294967295	; 0xffffffff
 8026cde:	4b8b      	ldr	r3, [pc, #556]	; (8026f0c <APP_BLE_Init+0x608>)
 8026ce0:	2001      	movs	r0, #1
 8026ce2:	f009 fe0d 	bl	8030900 <UTIL_ADV_TRACE_COND_FSend>
    P2P_SERVER_APP_Init();
 8026ce6:	f000 fde9 	bl	80278bc <P2P_SERVER_APP_Init>
    APP_DBG_MSG("End of Services and Characteristics creation\n");
 8026cea:	4622      	mov	r2, r4
 8026cec:	f04f 31ff 	mov.w	r1, #4294967295	; 0xffffffff
 8026cf0:	4b87      	ldr	r3, [pc, #540]	; (8026f10 <APP_BLE_Init+0x60c>)
 8026cf2:	2001      	movs	r0, #1
 8026cf4:	f009 fe04 	bl	8030900 <UTIL_ADV_TRACE_COND_FSend>
    APP_DBG_MSG("\n");
 8026cf8:	4622      	mov	r2, r4
 8026cfa:	f04f 31ff 	mov.w	r1, #4294967295	; 0xffffffff
 8026cfe:	4b82      	ldr	r3, [pc, #520]	; (8026f08 <APP_BLE_Init+0x604>)
 8026d00:	2001      	movs	r0, #1
 8026d02:	f009 fdfd 	bl	8030900 <UTIL_ADV_TRACE_COND_FSend>
    ret = aci_hal_set_radio_activity_mask(0x0006);
 8026d06:	2006      	movs	r0, #6
 8026d08:	f7f9 fba7 	bl	802045a <aci_hal_set_radio_activity_mask>
    if (ret != BLE_STATUS_SUCCESS)
 8026d0c:	4602      	mov	r2, r0
 8026d0e:	2800      	cmp	r0, #0
 8026d10:	f000 80ee 	beq.w	8026ef0 <APP_BLE_Init+0x5ec>
      APP_DBG_MSG("  Fail   : aci_hal_set_radio_activity_mask command, result: 0x%2X\n", ret);
 8026d14:	9000      	str	r0, [sp, #0]
 8026d16:	4622      	mov	r2, r4
 8026d18:	f04f 31ff 	mov.w	r1, #4294967295	; 0xffffffff
 8026d1c:	2001      	movs	r0, #1
 8026d1e:	4b7d      	ldr	r3, [pc, #500]	; (8026f14 <APP_BLE_Init+0x610>)
 8026d20:	f009 fdee 	bl	8030900 <UTIL_ADV_TRACE_COND_FSend>
    APP_BLE_Procedure_Gap_Peripheral(PROC_GAP_PERIPH_ADVERTISE_START_FAST);
 8026d24:	2001      	movs	r0, #1
 8026d26:	f7ff fd3f 	bl	80267a8 <APP_BLE_Procedure_Gap_Peripheral>
    UTIL_TIMER_StartWithPeriod(&bleAppContext.Advertising_mgr_timer_Id, INITIAL_ADV_TIMEOUT);
 8026d2a:	f64e 2160 	movw	r1, #60000	; 0xea60
 8026d2e:	487a      	ldr	r0, [pc, #488]	; (8026f18 <APP_BLE_Init+0x614>)
 8026d30:	f00a f87a 	bl	8030e28 <UTIL_TIMER_StartWithPeriod>
  bleAppContext.connIntervalFlag = 0;
 8026d34:	2300      	movs	r3, #0
 8026d36:	f885 304c 	strb.w	r3, [r5, #76]	; 0x4c
}
 8026d3a:	b00b      	add	sp, #44	; 0x2c
 8026d3c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
    APP_DBG_MSG("  Success: hci_reset command\n");
 8026d40:	f04f 31ff 	mov.w	r1, #4294967295	; 0xffffffff
 8026d44:	4b75      	ldr	r3, [pc, #468]	; (8026f1c <APP_BLE_Init+0x618>)
 8026d46:	2001      	movs	r0, #1
 8026d48:	f009 fdda 	bl	8030900 <UTIL_ADV_TRACE_COND_FSend>
 8026d4c:	e63f      	b.n	80269ce <APP_BLE_Init+0xca>
    OTP_Read(0, &p_otp_addr);
 8026d4e:	4639      	mov	r1, r7
 8026d50:	f003 fb36 	bl	802a3c0 <OTP_Read>
    if (p_otp_addr)
 8026d54:	9c09      	ldr	r4, [sp, #36]	; 0x24
 8026d56:	b10c      	cbz	r4, 8026d5c <APP_BLE_Init+0x458>
      p_bd_addr = (uint8_t*)(p_otp_addr->bd_address);
 8026d58:	3408      	adds	r4, #8
 8026d5a:	e64e      	b.n	80269fa <APP_BLE_Init+0xf6>
      p_bd_addr = a_MBdAddr;
 8026d5c:	4c70      	ldr	r4, [pc, #448]	; (8026f20 <APP_BLE_Init+0x61c>)
 8026d5e:	e64c      	b.n	80269fa <APP_BLE_Init+0xf6>
    APP_DBG_MSG("  Success: aci_hal_write_config_data command - CONFIG_DATA_PUBADDR_OFFSET\n");
 8026d60:	4602      	mov	r2, r0
 8026d62:	f04f 31ff 	mov.w	r1, #4294967295	; 0xffffffff
 8026d66:	4b6f      	ldr	r3, [pc, #444]	; (8026f24 <APP_BLE_Init+0x620>)
 8026d68:	2001      	movs	r0, #1
 8026d6a:	f009 fdc9 	bl	8030900 <UTIL_ADV_TRACE_COND_FSend>
    APP_DBG_MSG("  Public Bluetooth Address: %02x:%02x:%02x:%02x:%02x:%02x\n",p_bd_addr[5],p_bd_addr[4],p_bd_addr[3],p_bd_addr[2],p_bd_addr[1],p_bd_addr[0]);
 8026d6e:	7823      	ldrb	r3, [r4, #0]
 8026d70:	4632      	mov	r2, r6
 8026d72:	9305      	str	r3, [sp, #20]
 8026d74:	7863      	ldrb	r3, [r4, #1]
 8026d76:	f04f 31ff 	mov.w	r1, #4294967295	; 0xffffffff
 8026d7a:	9304      	str	r3, [sp, #16]
 8026d7c:	78a3      	ldrb	r3, [r4, #2]
 8026d7e:	2001      	movs	r0, #1
 8026d80:	9303      	str	r3, [sp, #12]
 8026d82:	78e3      	ldrb	r3, [r4, #3]
 8026d84:	9302      	str	r3, [sp, #8]
 8026d86:	7923      	ldrb	r3, [r4, #4]
 8026d88:	9301      	str	r3, [sp, #4]
 8026d8a:	7963      	ldrb	r3, [r4, #5]
 8026d8c:	9300      	str	r3, [sp, #0]
 8026d8e:	4b66      	ldr	r3, [pc, #408]	; (8026f28 <APP_BLE_Init+0x624>)
 8026d90:	f009 fdb6 	bl	8030900 <UTIL_ADV_TRACE_COND_FSend>
 8026d94:	e642      	b.n	8026a1c <APP_BLE_Init+0x118>
    APP_DBG_MSG("  Success: aci_hal_write_config_data command - CONFIG_DATA_IR_OFFSET\n");
 8026d96:	f04f 31ff 	mov.w	r1, #4294967295	; 0xffffffff
 8026d9a:	4b64      	ldr	r3, [pc, #400]	; (8026f2c <APP_BLE_Init+0x628>)
 8026d9c:	2001      	movs	r0, #1
 8026d9e:	f009 fdaf 	bl	8030900 <UTIL_ADV_TRACE_COND_FSend>
 8026da2:	e64c      	b.n	8026a3e <APP_BLE_Init+0x13a>
    APP_DBG_MSG("  Success: aci_hal_write_config_data command - CONFIG_DATA_ER_OFFSET\n");
 8026da4:	f04f 31ff 	mov.w	r1, #4294967295	; 0xffffffff
 8026da8:	4b61      	ldr	r3, [pc, #388]	; (8026f30 <APP_BLE_Init+0x62c>)
 8026daa:	2001      	movs	r0, #1
 8026dac:	f009 fda8 	bl	8030900 <UTIL_ADV_TRACE_COND_FSend>
 8026db0:	e656      	b.n	8026a60 <APP_BLE_Init+0x15c>
    APP_DBG_MSG("  Success: aci_hal_set_tx_power_level command\n");
 8026db2:	f04f 31ff 	mov.w	r1, #4294967295	; 0xffffffff
 8026db6:	4b5f      	ldr	r3, [pc, #380]	; (8026f34 <APP_BLE_Init+0x630>)
 8026db8:	2001      	movs	r0, #1
 8026dba:	f009 fda1 	bl	8030900 <UTIL_ADV_TRACE_COND_FSend>
 8026dbe:	e65f      	b.n	8026a80 <APP_BLE_Init+0x17c>
    APP_DBG_MSG("  Success: aci_gatt_init command\n");
 8026dc0:	f04f 31ff 	mov.w	r1, #4294967295	; 0xffffffff
 8026dc4:	4b5c      	ldr	r3, [pc, #368]	; (8026f38 <APP_BLE_Init+0x634>)
 8026dc6:	2001      	movs	r0, #1
 8026dc8:	f009 fd9a 	bl	8030900 <UTIL_ADV_TRACE_COND_FSend>
 8026dcc:	e666      	b.n	8026a9c <APP_BLE_Init+0x198>
      APP_DBG_MSG("  Success: aci_gap_init command\n");
 8026dce:	f04f 31ff 	mov.w	r1, #4294967295	; 0xffffffff
 8026dd2:	4b5a      	ldr	r3, [pc, #360]	; (8026f3c <APP_BLE_Init+0x638>)
 8026dd4:	2001      	movs	r0, #1
 8026dd6:	f009 fd93 	bl	8030900 <UTIL_ADV_TRACE_COND_FSend>
 8026dda:	e675      	b.n	8026ac8 <APP_BLE_Init+0x1c4>
      APP_DBG_MSG("  Success: aci_gatt_update_char_value - Device Name\n");
 8026ddc:	f04f 31ff 	mov.w	r1, #4294967295	; 0xffffffff
 8026de0:	4b57      	ldr	r3, [pc, #348]	; (8026f40 <APP_BLE_Init+0x63c>)
 8026de2:	2001      	movs	r0, #1
 8026de4:	f009 fd8c 	bl	8030900 <UTIL_ADV_TRACE_COND_FSend>
 8026de8:	e684      	b.n	8026af4 <APP_BLE_Init+0x1f0>
    APP_DBG_MSG("  Success: aci_gatt_update_char_value - Appearance\n");
 8026dea:	f04f 31ff 	mov.w	r1, #4294967295	; 0xffffffff
 8026dee:	4b55      	ldr	r3, [pc, #340]	; (8026f44 <APP_BLE_Init+0x640>)
 8026df0:	2001      	movs	r0, #1
 8026df2:	f009 fd85 	bl	8030900 <UTIL_ADV_TRACE_COND_FSend>
 8026df6:	e693      	b.n	8026b20 <APP_BLE_Init+0x21c>
    APP_DBG_MSG("  Success: hci_le_set_default_phy command\n");
 8026df8:	f04f 31ff 	mov.w	r1, #4294967295	; 0xffffffff
 8026dfc:	4b52      	ldr	r3, [pc, #328]	; (8026f48 <APP_BLE_Init+0x644>)
 8026dfe:	2001      	movs	r0, #1
 8026e00:	f009 fd7e 	bl	8030900 <UTIL_ADV_TRACE_COND_FSend>
 8026e04:	e69d      	b.n	8026b42 <APP_BLE_Init+0x23e>
    APP_DBG_MSG("  Success: aci_gap_set_io_capability command\n");
 8026e06:	f04f 31ff 	mov.w	r1, #4294967295	; 0xffffffff
 8026e0a:	4630      	mov	r0, r6
 8026e0c:	4b4f      	ldr	r3, [pc, #316]	; (8026f4c <APP_BLE_Init+0x648>)
 8026e0e:	f009 fd77 	bl	8030900 <UTIL_ADV_TRACE_COND_FSend>
 8026e12:	e6a7      	b.n	8026b64 <APP_BLE_Init+0x260>
        if((p_adv_data[i + ad_length] == 'X') && (p_adv_data[i + ad_length - 1] == 'X'))
 8026e14:	eb03 0c00 	add.w	ip, r3, r0
 8026e18:	f812 100c 	ldrb.w	r1, [r2, ip]
 8026e1c:	2958      	cmp	r1, #88	; 0x58
 8026e1e:	f47f aebc 	bne.w	8026b9a <APP_BLE_Init+0x296>
 8026e22:	f10c 38ff 	add.w	r8, ip, #4294967295	; 0xffffffff
 8026e26:	f812 1008 	ldrb.w	r1, [r2, r8]
 8026e2a:	2958      	cmp	r1, #88	; 0x58
 8026e2c:	f47f aeb5 	bne.w	8026b9a <APP_BLE_Init+0x296>
          bd_addr_1 = ((p_bd_addr[0] & 0xF0)>>4);
 8026e30:	f894 e000 	ldrb.w	lr, [r4]
          bd_addr_0 = (p_bd_addr[0] & 0xF);
 8026e34:	f00e 010f 	and.w	r1, lr, #15
          bd_addr_1 = ((p_bd_addr[0] & 0xF0)>>4);
 8026e38:	ea4f 161e 	mov.w	r6, lr, lsr #4
          if(bd_addr_1 > 0x09)
 8026e3c:	f1be 0f9f 	cmp.w	lr, #159	; 0x9f
            p_adv_data[i + ad_length - 1] = bd_addr_1 + '7';
 8026e40:	bf8c      	ite	hi
 8026e42:	3637      	addhi	r6, #55	; 0x37
            p_adv_data[i + ad_length - 1] = bd_addr_1 + '0';
 8026e44:	3630      	addls	r6, #48	; 0x30
          if(bd_addr_0 > 0x09)
 8026e46:	2909      	cmp	r1, #9
            p_adv_data[i + ad_length] = bd_addr_0 + '7';
 8026e48:	bf8c      	ite	hi
 8026e4a:	3137      	addhi	r1, #55	; 0x37
            p_adv_data[i + ad_length] = bd_addr_0 + '0';
 8026e4c:	3130      	addls	r1, #48	; 0x30
 8026e4e:	f802 6008 	strb.w	r6, [r2, r8]
 8026e52:	f802 100c 	strb.w	r1, [r2, ip]
 8026e56:	e6a0      	b.n	8026b9a <APP_BLE_Init+0x296>
        p_adv_data[i+2] = 0x30;
 8026e58:	f04f 0630 	mov.w	r6, #48	; 0x30
 8026e5c:	1c99      	adds	r1, r3, #2
 8026e5e:	b289      	uxth	r1, r1
 8026e60:	5456      	strb	r6, [r2, r1]
        p_adv_data[i+3] = 0x00;
 8026e62:	1cd9      	adds	r1, r3, #3
 8026e64:	b289      	uxth	r1, r1
 8026e66:	5457      	strb	r7, [r2, r1]
        p_adv_data[i+4] = 0x02; /* blueST SDK version */
 8026e68:	1d19      	adds	r1, r3, #4
 8026e6a:	b289      	uxth	r1, r1
 8026e6c:	f802 9001 	strb.w	r9, [r2, r1]
        p_adv_data[i+5] = 0x8B; /* Board ID */
 8026e70:	1d59      	adds	r1, r3, #5
 8026e72:	b289      	uxth	r1, r1
 8026e74:	f802 a001 	strb.w	sl, [r2, r1]
        p_adv_data[i+6] = 0x83; /* FW ID */
 8026e78:	1d99      	adds	r1, r3, #6
 8026e7a:	b289      	uxth	r1, r1
 8026e7c:	f802 b001 	strb.w	fp, [r2, r1]
        p_adv_data[i+7] = 0x00; /* FW data 1 */
 8026e80:	1dd9      	adds	r1, r3, #7
 8026e82:	b289      	uxth	r1, r1
 8026e84:	5457      	strb	r7, [r2, r1]
        p_adv_data[i+8] = 0x00; /* FW data 2 */
 8026e86:	f103 0108 	add.w	r1, r3, #8
 8026e8a:	b289      	uxth	r1, r1
 8026e8c:	5457      	strb	r7, [r2, r1]
        p_adv_data[i+9] = 0x00; /* FW data 3 */
 8026e8e:	f103 0109 	add.w	r1, r3, #9
 8026e92:	b289      	uxth	r1, r1
 8026e94:	5457      	strb	r7, [r2, r1]
        p_adv_data[i+10] = p_bd_addr[5]; /* MSB BD address */
 8026e96:	7966      	ldrb	r6, [r4, #5]
 8026e98:	f103 010a 	add.w	r1, r3, #10
 8026e9c:	b289      	uxth	r1, r1
 8026e9e:	5456      	strb	r6, [r2, r1]
        p_adv_data[i+11] = p_bd_addr[4];
 8026ea0:	7926      	ldrb	r6, [r4, #4]
 8026ea2:	f103 010b 	add.w	r1, r3, #11
 8026ea6:	b289      	uxth	r1, r1
 8026ea8:	5456      	strb	r6, [r2, r1]
        p_adv_data[i+12] = p_bd_addr[3];
 8026eaa:	78e6      	ldrb	r6, [r4, #3]
 8026eac:	f103 010c 	add.w	r1, r3, #12
 8026eb0:	b289      	uxth	r1, r1
 8026eb2:	5456      	strb	r6, [r2, r1]
        p_adv_data[i+13] = p_bd_addr[2];
 8026eb4:	78a6      	ldrb	r6, [r4, #2]
 8026eb6:	f103 010d 	add.w	r1, r3, #13
 8026eba:	b289      	uxth	r1, r1
 8026ebc:	5456      	strb	r6, [r2, r1]
        p_adv_data[i+14] = p_bd_addr[1];
 8026ebe:	7866      	ldrb	r6, [r4, #1]
 8026ec0:	f103 010e 	add.w	r1, r3, #14
 8026ec4:	b289      	uxth	r1, r1
 8026ec6:	5456      	strb	r6, [r2, r1]
        p_adv_data[i+15] = p_bd_addr[0]; /* LSB BD address */
 8026ec8:	7826      	ldrb	r6, [r4, #0]
 8026eca:	f103 010f 	add.w	r1, r3, #15
 8026ece:	b289      	uxth	r1, r1
 8026ed0:	5456      	strb	r6, [r2, r1]
        break;
 8026ed2:	e662      	b.n	8026b9a <APP_BLE_Init+0x296>
    APP_DBG_MSG("  Success: aci_gap_set_authentication_requirement command\n");
 8026ed4:	f04f 31ff 	mov.w	r1, #4294967295	; 0xffffffff
 8026ed8:	4b1d      	ldr	r3, [pc, #116]	; (8026f50 <APP_BLE_Init+0x64c>)
 8026eda:	2001      	movs	r0, #1
 8026edc:	f009 fd10 	bl	8030900 <UTIL_ADV_TRACE_COND_FSend>
 8026ee0:	e67b      	b.n	8026bda <APP_BLE_Init+0x2d6>
      APP_DBG_MSG("  Success: aci_gap_configure_whitelist command\n");
 8026ee2:	f04f 31ff 	mov.w	r1, #4294967295	; 0xffffffff
 8026ee6:	4b1b      	ldr	r3, [pc, #108]	; (8026f54 <APP_BLE_Init+0x650>)
 8026ee8:	2001      	movs	r0, #1
 8026eea:	f009 fd09 	bl	8030900 <UTIL_ADV_TRACE_COND_FSend>
 8026eee:	e684      	b.n	8026bfa <APP_BLE_Init+0x2f6>
      APP_DBG_MSG("  Success: aci_hal_set_radio_activity_mask command\n\r");
 8026ef0:	f04f 31ff 	mov.w	r1, #4294967295	; 0xffffffff
 8026ef4:	4b18      	ldr	r3, [pc, #96]	; (8026f58 <APP_BLE_Init+0x654>)
 8026ef6:	2001      	movs	r0, #1
 8026ef8:	f009 fd02 	bl	8030900 <UTIL_ADV_TRACE_COND_FSend>
 8026efc:	e712      	b.n	8026d24 <APP_BLE_Init+0x420>
 8026efe:	bf00      	nop
 8026f00:	08026721 	.word	0x08026721
 8026f04:	20004e80 	.word	0x20004e80
 8026f08:	08033328 	.word	0x08033328
 8026f0c:	08032c66 	.word	0x08032c66
 8026f10:	08032c5f 	.word	0x08032c5f
 8026f14:	08032c8d 	.word	0x08032c8d
 8026f18:	20004e68 	.word	0x20004e68
 8026f1c:	08032631 	.word	0x08032631
 8026f20:	080332bf 	.word	0x080332bf
 8026f24:	080326aa 	.word	0x080326aa
 8026f28:	080326f5 	.word	0x080326f5
 8026f2c:	08032786 	.word	0x08032786
 8026f30:	08032822 	.word	0x08032822
 8026f34:	080328a7 	.word	0x080328a7
 8026f38:	08032908 	.word	0x08032908
 8026f3c:	0803295b 	.word	0x0803295b
 8026f40:	080329c1 	.word	0x080329c1
 8026f44:	08032a3a 	.word	0x08032a3a
 8026f48:	08032aa9 	.word	0x08032aa9
 8026f4c:	08032b12 	.word	0x08032b12
 8026f50:	08032b8b 	.word	0x08032b8b
 8026f54:	08032c06 	.word	0x08032c06
 8026f58:	08032cd0 	.word	0x08032cd0

08026f5c <Adv_Cancel>:
{
 8026f5c:	b508      	push	{r3, lr}
  BSP_LED_Off(LED_GREEN);
 8026f5e:	2001      	movs	r0, #1
 8026f60:	f003 feb8 	bl	802acd4 <BSP_LED_Off>
  APP_BLE_Procedure_Gap_Peripheral(PROC_GAP_PERIPH_ADVERTISE_STOP);
 8026f64:	2002      	movs	r0, #2
 8026f66:	f7ff fc1f 	bl	80267a8 <APP_BLE_Procedure_Gap_Peripheral>
  bleAppContext.Device_Connection_Status = APP_BLE_IDLE;
 8026f6a:	2200      	movs	r2, #0
 8026f6c:	4b01      	ldr	r3, [pc, #4]	; (8026f74 <Adv_Cancel+0x18>)
 8026f6e:	761a      	strb	r2, [r3, #24]
}
 8026f70:	bd08      	pop	{r3, pc}
 8026f72:	bf00      	nop
 8026f74:	20004e4c 	.word	0x20004e4c

08026f78 <SVCCTL_App_Notification>:
{
 8026f78:	b530      	push	{r4, r5, lr}
  switch (p_event_pckt->evt)
 8026f7a:	7843      	ldrb	r3, [r0, #1]
{
 8026f7c:	4604      	mov	r4, r0
  switch (p_event_pckt->evt)
 8026f7e:	2b3e      	cmp	r3, #62	; 0x3e
{
 8026f80:	b087      	sub	sp, #28
  switch (p_event_pckt->evt)
 8026f82:	d034      	beq.n	8026fee <SVCCTL_App_Notification+0x76>
 8026f84:	2bff      	cmp	r3, #255	; 0xff
 8026f86:	f000 80d8 	beq.w	802713a <SVCCTL_App_Notification+0x1c2>
 8026f8a:	2b05      	cmp	r3, #5
 8026f8c:	d15b      	bne.n	8027046 <SVCCTL_App_Notification+0xce>
      if (p_disconnection_complete_event->Connection_Handle == bleAppContext.BleApplicationContext_legacy.connectionHandle)
 8026f8e:	4bb3      	ldr	r3, [pc, #716]	; (802725c <SVCCTL_App_Notification+0x2e4>)
 8026f90:	8881      	ldrh	r1, [r0, #4]
 8026f92:	8ada      	ldrh	r2, [r3, #22]
 8026f94:	4291      	cmp	r1, r2
 8026f96:	d114      	bne.n	8026fc2 <SVCCTL_App_Notification+0x4a>
        bleAppContext.BleApplicationContext_legacy.connectionHandle = 0;
 8026f98:	2500      	movs	r5, #0
        APP_DBG_MSG(">>== HCI_DISCONNECTION_COMPLETE_EVT_CODE\n");
 8026f9a:	f04f 31ff 	mov.w	r1, #4294967295	; 0xffffffff
 8026f9e:	462a      	mov	r2, r5
        bleAppContext.BleApplicationContext_legacy.connectionHandle = 0;
 8026fa0:	82dd      	strh	r5, [r3, #22]
        bleAppContext.Device_Connection_Status = APP_BLE_IDLE;
 8026fa2:	761d      	strb	r5, [r3, #24]
        APP_DBG_MSG(">>== HCI_DISCONNECTION_COMPLETE_EVT_CODE\n");
 8026fa4:	2001      	movs	r0, #1
 8026fa6:	4bae      	ldr	r3, [pc, #696]	; (8027260 <SVCCTL_App_Notification+0x2e8>)
 8026fa8:	f009 fcaa 	bl	8030900 <UTIL_ADV_TRACE_COND_FSend>
        APP_DBG_MSG("     - Connection Handle:   0x%02X\n     - Reason:    0x%02X\n",
 8026fac:	79a3      	ldrb	r3, [r4, #6]
 8026fae:	462a      	mov	r2, r5
 8026fb0:	9301      	str	r3, [sp, #4]
 8026fb2:	88a3      	ldrh	r3, [r4, #4]
 8026fb4:	f04f 31ff 	mov.w	r1, #4294967295	; 0xffffffff
 8026fb8:	9300      	str	r3, [sp, #0]
 8026fba:	2001      	movs	r0, #1
 8026fbc:	4ba9      	ldr	r3, [pc, #676]	; (8027264 <SVCCTL_App_Notification+0x2ec>)
 8026fbe:	f009 fc9f 	bl	8030900 <UTIL_ADV_TRACE_COND_FSend>
      P2P_SERVERHandleNotification.EvtOpcode = P2P_SERVER_DISCON_HANDLE_EVT;
 8026fc2:	2501      	movs	r5, #1
  UTIL_SEQ_SetEvt(1 << CFG_IDLEEVT_PROC_GAP_COMPLETE);
 8026fc4:	2001      	movs	r0, #1
 8026fc6:	f009 fd87 	bl	8030ad8 <UTIL_SEQ_SetEvt>
      P2P_SERVERHandleNotification.EvtOpcode = P2P_SERVER_DISCON_HANDLE_EVT;
 8026fca:	48a7      	ldr	r0, [pc, #668]	; (8027268 <SVCCTL_App_Notification+0x2f0>)
      P2P_SERVERHandleNotification.ConnectionHandle = p_disconnection_complete_event->Connection_Handle;
 8026fcc:	7923      	ldrb	r3, [r4, #4]
      P2P_SERVERHandleNotification.EvtOpcode = P2P_SERVER_DISCON_HANDLE_EVT;
 8026fce:	7005      	strb	r5, [r0, #0]
      P2P_SERVERHandleNotification.ConnectionHandle = p_disconnection_complete_event->Connection_Handle;
 8026fd0:	7962      	ldrb	r2, [r4, #5]
 8026fd2:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
 8026fd6:	8043      	strh	r3, [r0, #2]
      P2P_SERVER_APP_EvtRx(&P2P_SERVERHandleNotification);
 8026fd8:	f000 fc6a 	bl	80278b0 <P2P_SERVER_APP_EvtRx>
      APP_BLE_Procedure_Gap_Peripheral(PROC_GAP_PERIPH_ADVERTISE_START_FAST);
 8026fdc:	4628      	mov	r0, r5
 8026fde:	f7ff fbe3 	bl	80267a8 <APP_BLE_Procedure_Gap_Peripheral>
      UTIL_TIMER_StartWithPeriod(&bleAppContext.Advertising_mgr_timer_Id, INITIAL_ADV_TIMEOUT);
 8026fe2:	f64e 2160 	movw	r1, #60000	; 0xea60
 8026fe6:	48a1      	ldr	r0, [pc, #644]	; (802726c <SVCCTL_App_Notification+0x2f4>)
          UTIL_TIMER_StartWithPeriod(&bleAppContext.SwitchOffGPIO_timer_Id, LED_ON_TIMEOUT);
 8026fe8:	f009 ff1e 	bl	8030e28 <UTIL_TIMER_StartWithPeriod>
          break; /* ACI_HAL_END_OF_RADIO_ACTIVITY_VSEVT_CODE */
 8026fec:	e02b      	b.n	8027046 <SVCCTL_App_Notification+0xce>
      switch (p_meta_evt->subevent)
 8026fee:	78c3      	ldrb	r3, [r0, #3]
 8026ff0:	3b01      	subs	r3, #1
 8026ff2:	2b0b      	cmp	r3, #11
 8026ff4:	d827      	bhi.n	8027046 <SVCCTL_App_Notification+0xce>
 8026ff6:	e8df f003 	tbb	[pc, r3]
 8026ffa:	2678      	.short	0x2678
 8026ffc:	26262606 	.word	0x26262606
 8027000:	2d262626 	.word	0x2d262626
 8027004:	2926      	.short	0x2926
          APP_DBG_MSG(">>== HCI_LE_CONNECTION_UPDATE_COMPLETE_SUBEVT_CODE\n");
 8027006:	2200      	movs	r2, #0
 8027008:	f04f 31ff 	mov.w	r1, #4294967295	; 0xffffffff
 802700c:	4b98      	ldr	r3, [pc, #608]	; (8027270 <SVCCTL_App_Notification+0x2f8>)
 802700e:	2001      	movs	r0, #1
 8027010:	f009 fc76 	bl	8030900 <UTIL_ADV_TRACE_COND_FSend>
          APP_DBG_MSG("     - Connection Interval:   %.2f ms\n     - Connection latency:    %d\n     - Supervision Timeout:   %d ms\n",
 8027014:	220a      	movs	r2, #10
 8027016:	f8b4 300b 	ldrh.w	r3, [r4, #11]
 802701a:	f8b4 0007 	ldrh.w	r0, [r4, #7]
 802701e:	4353      	muls	r3, r2
 8027020:	9303      	str	r3, [sp, #12]
 8027022:	f8b4 3009 	ldrh.w	r3, [r4, #9]
 8027026:	9302      	str	r3, [sp, #8]
 8027028:	f7fe fa9c 	bl	8025564 <__aeabi_i2d>
 802702c:	2200      	movs	r2, #0
 802702e:	4b91      	ldr	r3, [pc, #580]	; (8027274 <SVCCTL_App_Notification+0x2fc>)
 8027030:	f7fe f810 	bl	8025054 <__aeabi_dmul>
 8027034:	2200      	movs	r2, #0
 8027036:	e9cd 0100 	strd	r0, r1, [sp]
 802703a:	4b8f      	ldr	r3, [pc, #572]	; (8027278 <SVCCTL_App_Notification+0x300>)
 802703c:	f04f 31ff 	mov.w	r1, #4294967295	; 0xffffffff
 8027040:	2001      	movs	r0, #1
 8027042:	f009 fc5d 	bl	8030900 <UTIL_ADV_TRACE_COND_FSend>
}
 8027046:	2001      	movs	r0, #1
 8027048:	b007      	add	sp, #28
 802704a:	bd30      	pop	{r4, r5, pc}
  UTIL_SEQ_SetEvt(1 << CFG_IDLEEVT_PROC_GAP_COMPLETE);
 802704c:	2001      	movs	r0, #1
 802704e:	f009 fd43 	bl	8030ad8 <UTIL_SEQ_SetEvt>
  return;
 8027052:	e7f8      	b.n	8027046 <SVCCTL_App_Notification+0xce>
          APP_DBG_MSG(">>== HCI_LE_ENHANCED_CONNECTION_COMPLETE_SUBEVT_CODE - Connection handle: 0x%04X\n", p_enhanced_conn_complete->Connection_Handle);
 8027054:	f8b0 3005 	ldrh.w	r3, [r0, #5]
 8027058:	2200      	movs	r2, #0
 802705a:	f04f 31ff 	mov.w	r1, #4294967295	; 0xffffffff
 802705e:	9300      	str	r3, [sp, #0]
 8027060:	2001      	movs	r0, #1
 8027062:	4b86      	ldr	r3, [pc, #536]	; (802727c <SVCCTL_App_Notification+0x304>)
 8027064:	f009 fc4c 	bl	8030900 <UTIL_ADV_TRACE_COND_FSend>
          APP_DBG_MSG("     - Connection established with @:%02x:%02x:%02x:%02x:%02x:%02x\n",
 8027068:	7a63      	ldrb	r3, [r4, #9]
 802706a:	2200      	movs	r2, #0
 802706c:	9305      	str	r3, [sp, #20]
 802706e:	7aa3      	ldrb	r3, [r4, #10]
 8027070:	f04f 31ff 	mov.w	r1, #4294967295	; 0xffffffff
 8027074:	9304      	str	r3, [sp, #16]
 8027076:	7ae3      	ldrb	r3, [r4, #11]
 8027078:	2001      	movs	r0, #1
 802707a:	9303      	str	r3, [sp, #12]
 802707c:	7b23      	ldrb	r3, [r4, #12]
 802707e:	9302      	str	r3, [sp, #8]
 8027080:	7b63      	ldrb	r3, [r4, #13]
 8027082:	9301      	str	r3, [sp, #4]
 8027084:	7ba3      	ldrb	r3, [r4, #14]
 8027086:	9300      	str	r3, [sp, #0]
 8027088:	4b7d      	ldr	r3, [pc, #500]	; (8027280 <SVCCTL_App_Notification+0x308>)
 802708a:	f009 fc39 	bl	8030900 <UTIL_ADV_TRACE_COND_FSend>
          APP_DBG_MSG("     - Connection Interval:   %.2f ms\n     - Connection latency:    %d\n     - Supervision Timeout: %d ms\n",
 802708e:	220a      	movs	r2, #10
 8027090:	f8b4 301f 	ldrh.w	r3, [r4, #31]
 8027094:	f8b4 001b 	ldrh.w	r0, [r4, #27]
 8027098:	4353      	muls	r3, r2
 802709a:	9303      	str	r3, [sp, #12]
 802709c:	f8b4 301d 	ldrh.w	r3, [r4, #29]
 80270a0:	9302      	str	r3, [sp, #8]
          APP_DBG_MSG("     - Connection Interval:   %.2f ms\n     - Connection latency:    %d\n     - Supervision Timeout: %d ms\n",
 80270a2:	f7fe fa5f 	bl	8025564 <__aeabi_i2d>
 80270a6:	2200      	movs	r2, #0
 80270a8:	4b72      	ldr	r3, [pc, #456]	; (8027274 <SVCCTL_App_Notification+0x2fc>)
 80270aa:	f7fd ffd3 	bl	8025054 <__aeabi_dmul>
          if (bleAppContext.Device_Connection_Status == APP_BLE_LP_CONNECTING)
 80270ae:	4d6b      	ldr	r5, [pc, #428]	; (802725c <SVCCTL_App_Notification+0x2e4>)
          APP_DBG_MSG("     - Connection Interval:   %.2f ms\n     - Connection latency:    %d\n     - Supervision Timeout: %d ms\n",
 80270b0:	e9cd 0100 	strd	r0, r1, [sp]
 80270b4:	2200      	movs	r2, #0
 80270b6:	f04f 31ff 	mov.w	r1, #4294967295	; 0xffffffff
 80270ba:	4b72      	ldr	r3, [pc, #456]	; (8027284 <SVCCTL_App_Notification+0x30c>)
 80270bc:	2001      	movs	r0, #1
 80270be:	f009 fc1f 	bl	8030900 <UTIL_ADV_TRACE_COND_FSend>
          if (bleAppContext.Device_Connection_Status == APP_BLE_LP_CONNECTING)
 80270c2:	7e2b      	ldrb	r3, [r5, #24]
          P2P_SERVERHandleNotification.EvtOpcode = P2P_SERVER_CONN_HANDLE_EVT;
 80270c4:	2200      	movs	r2, #0
            bleAppContext.Device_Connection_Status = APP_BLE_CONNECTED_SERVER;
 80270c6:	2b01      	cmp	r3, #1
 80270c8:	bf0c      	ite	eq
 80270ca:	2303      	moveq	r3, #3
 80270cc:	2302      	movne	r3, #2
 80270ce:	762b      	strb	r3, [r5, #24]
          bleAppContext.BleApplicationContext_legacy.connectionHandle = p_conn_complete->Connection_Handle;
 80270d0:	f8b4 3005 	ldrh.w	r3, [r4, #5]
          P2P_SERVERHandleNotification.EvtOpcode = P2P_SERVER_CONN_HANDLE_EVT;
 80270d4:	4864      	ldr	r0, [pc, #400]	; (8027268 <SVCCTL_App_Notification+0x2f0>)
          bleAppContext.BleApplicationContext_legacy.connectionHandle = p_conn_complete->Connection_Handle;
 80270d6:	82eb      	strh	r3, [r5, #22]
          P2P_SERVERHandleNotification.EvtOpcode = P2P_SERVER_CONN_HANDLE_EVT;
 80270d8:	7002      	strb	r2, [r0, #0]
          P2P_SERVERHandleNotification.ConnectionHandle = p_conn_complete->Connection_Handle;
 80270da:	8043      	strh	r3, [r0, #2]
          P2P_SERVER_APP_EvtRx(&P2P_SERVERHandleNotification);
 80270dc:	f000 fbe8 	bl	80278b0 <P2P_SERVER_APP_EvtRx>
          UTIL_TIMER_Stop(&(bleAppContext.Advertising_mgr_timer_Id));
 80270e0:	f105 001c 	add.w	r0, r5, #28
 80270e4:	f009 fe16 	bl	8030d14 <UTIL_TIMER_Stop>
          break; /* HCI_LE_CONNECTION_COMPLETE_SUBEVT_CODE */
 80270e8:	e7ad      	b.n	8027046 <SVCCTL_App_Notification+0xce>
          APP_DBG_MSG(">>== HCI_LE_CONNECTION_COMPLETE_SUBEVT_CODE - Connection handle: 0x%04X\n", p_conn_complete->Connection_Handle);
 80270ea:	f8b0 3005 	ldrh.w	r3, [r0, #5]
 80270ee:	2200      	movs	r2, #0
 80270f0:	f04f 31ff 	mov.w	r1, #4294967295	; 0xffffffff
 80270f4:	9300      	str	r3, [sp, #0]
 80270f6:	2001      	movs	r0, #1
 80270f8:	4b63      	ldr	r3, [pc, #396]	; (8027288 <SVCCTL_App_Notification+0x310>)
 80270fa:	f009 fc01 	bl	8030900 <UTIL_ADV_TRACE_COND_FSend>
          APP_DBG_MSG("     - Connection established with @:%02x:%02x:%02x:%02x:%02x:%02x\n",
 80270fe:	7a63      	ldrb	r3, [r4, #9]
 8027100:	2200      	movs	r2, #0
 8027102:	9305      	str	r3, [sp, #20]
 8027104:	7aa3      	ldrb	r3, [r4, #10]
 8027106:	f04f 31ff 	mov.w	r1, #4294967295	; 0xffffffff
 802710a:	9304      	str	r3, [sp, #16]
 802710c:	7ae3      	ldrb	r3, [r4, #11]
 802710e:	2001      	movs	r0, #1
 8027110:	9303      	str	r3, [sp, #12]
 8027112:	7b23      	ldrb	r3, [r4, #12]
 8027114:	9302      	str	r3, [sp, #8]
 8027116:	7b63      	ldrb	r3, [r4, #13]
 8027118:	9301      	str	r3, [sp, #4]
 802711a:	7ba3      	ldrb	r3, [r4, #14]
 802711c:	9300      	str	r3, [sp, #0]
 802711e:	4b58      	ldr	r3, [pc, #352]	; (8027280 <SVCCTL_App_Notification+0x308>)
 8027120:	f009 fbee 	bl	8030900 <UTIL_ADV_TRACE_COND_FSend>
          APP_DBG_MSG("     - Connection Interval:   %.2f ms\n     - Connection latency:    %d\n     - Supervision Timeout: %d ms\n",
 8027124:	220a      	movs	r2, #10
 8027126:	f8b4 3013 	ldrh.w	r3, [r4, #19]
 802712a:	f8b4 000f 	ldrh.w	r0, [r4, #15]
 802712e:	4353      	muls	r3, r2
 8027130:	9303      	str	r3, [sp, #12]
 8027132:	f8b4 3011 	ldrh.w	r3, [r4, #17]
 8027136:	9302      	str	r3, [sp, #8]
 8027138:	e7b3      	b.n	80270a2 <SVCCTL_App_Notification+0x12a>
      switch (p_blecore_evt->ecode)
 802713a:	f8b0 3003 	ldrh.w	r3, [r0, #3]
 802713e:	2b04      	cmp	r3, #4
 8027140:	d023      	beq.n	802718a <SVCCTL_App_Notification+0x212>
 8027142:	f46f 6280 	mvn.w	r2, #1024	; 0x400
 8027146:	4413      	add	r3, r2
 8027148:	b29a      	uxth	r2, r3
 802714a:	2a09      	cmp	r2, #9
 802714c:	f63f af7b 	bhi.w	8027046 <SVCCTL_App_Notification+0xce>
 8027150:	2b09      	cmp	r3, #9
 8027152:	f63f af78 	bhi.w	8027046 <SVCCTL_App_Notification+0xce>
 8027156:	a201      	add	r2, pc, #4	; (adr r2, 802715c <SVCCTL_App_Notification+0x1e4>)
 8027158:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 802715c:	08027225 	.word	0x08027225
 8027160:	0802719b 	.word	0x0802719b
 8027164:	08027047 	.word	0x08027047
 8027168:	08027047 	.word	0x08027047
 802716c:	080272cd 	.word	0x080272cd
 8027170:	08027047 	.word	0x08027047
 8027174:	08027185 	.word	0x08027185
 8027178:	08027047 	.word	0x08027047
 802717c:	080271d7 	.word	0x080271d7
 8027180:	08027197 	.word	0x08027197
          APP_DBG_MSG(">>== ACI_GAP_PROC_COMPLETE_VSEVT_CODE\n");
 8027184:	4b41      	ldr	r3, [pc, #260]	; (802728c <SVCCTL_App_Notification+0x314>)
          APP_DBG_MSG("\n");
 8027186:	2200      	movs	r2, #0
 8027188:	e01f      	b.n	80271ca <SVCCTL_App_Notification+0x252>
          BSP_LED_On(LED_GREEN);
 802718a:	2001      	movs	r0, #1
 802718c:	f003 fd92 	bl	802acb4 <BSP_LED_On>
          UTIL_TIMER_StartWithPeriod(&bleAppContext.SwitchOffGPIO_timer_Id, LED_ON_TIMEOUT);
 8027190:	2105      	movs	r1, #5
 8027192:	483f      	ldr	r0, [pc, #252]	; (8027290 <SVCCTL_App_Notification+0x318>)
 8027194:	e728      	b.n	8026fe8 <SVCCTL_App_Notification+0x70>
          APP_DBG_MSG(">>== ACI_GAP_KEYPRESS_NOTIFICATION_VSEVT_CODE\n");
 8027196:	4b3f      	ldr	r3, [pc, #252]	; (8027294 <SVCCTL_App_Notification+0x31c>)
 8027198:	e7f5      	b.n	8027186 <SVCCTL_App_Notification+0x20e>
          APP_DBG_MSG(">>== ACI_GAP_PASS_KEY_REQ_VSEVT_CODE\n");
 802719a:	2200      	movs	r2, #0
 802719c:	f04f 31ff 	mov.w	r1, #4294967295	; 0xffffffff
 80271a0:	4b3d      	ldr	r3, [pc, #244]	; (8027298 <SVCCTL_App_Notification+0x320>)
 80271a2:	2001      	movs	r0, #1
 80271a4:	f009 fbac 	bl	8030900 <UTIL_ADV_TRACE_COND_FSend>
          ret = aci_gap_pass_key_resp(bleAppContext.BleApplicationContext_legacy.connectionHandle, CFG_FIXED_PIN);
 80271a8:	4b2c      	ldr	r3, [pc, #176]	; (802725c <SVCCTL_App_Notification+0x2e4>)
 80271aa:	493c      	ldr	r1, [pc, #240]	; (802729c <SVCCTL_App_Notification+0x324>)
 80271ac:	8ad8      	ldrh	r0, [r3, #22]
 80271ae:	f7fb f880 	bl	80222b2 <aci_gap_pass_key_resp>
          if (ret != BLE_STATUS_SUCCESS)
 80271b2:	4602      	mov	r2, r0
 80271b4:	b140      	cbz	r0, 80271c8 <SVCCTL_App_Notification+0x250>
            APP_DBG_MSG("==>> aci_gap_pass_key_resp : Fail, reason: 0x%02X\n", ret);
 80271b6:	4b3a      	ldr	r3, [pc, #232]	; (80272a0 <SVCCTL_App_Notification+0x328>)
 80271b8:	9000      	str	r0, [sp, #0]
            APP_DBG_MSG("==>> aci_gap_allow_rebond : Fail, reason: 0x%02X\n", ret);
 80271ba:	2200      	movs	r2, #0
 80271bc:	f04f 31ff 	mov.w	r1, #4294967295	; 0xffffffff
 80271c0:	2001      	movs	r0, #1
 80271c2:	f009 fb9d 	bl	8030900 <UTIL_ADV_TRACE_COND_FSend>
 80271c6:	e73e      	b.n	8027046 <SVCCTL_App_Notification+0xce>
            APP_DBG_MSG("==>> aci_gap_pass_key_resp : Success\n");
 80271c8:	4b36      	ldr	r3, [pc, #216]	; (80272a4 <SVCCTL_App_Notification+0x32c>)
            APP_DBG_MSG("==>> aci_gap_allow_rebond : Success\n");
 80271ca:	f04f 31ff 	mov.w	r1, #4294967295	; 0xffffffff
 80271ce:	2001      	movs	r0, #1
 80271d0:	f009 fb96 	bl	8030900 <UTIL_ADV_TRACE_COND_FSend>
 80271d4:	e737      	b.n	8027046 <SVCCTL_App_Notification+0xce>
          APP_DBG_MSG(">>== ACI_GAP_NUMERIC_COMPARISON_VALUE_VSEVT_CODE\n");
 80271d6:	2200      	movs	r2, #0
 80271d8:	f04f 31ff 	mov.w	r1, #4294967295	; 0xffffffff
 80271dc:	4b32      	ldr	r3, [pc, #200]	; (80272a8 <SVCCTL_App_Notification+0x330>)
 80271de:	2001      	movs	r0, #1
 80271e0:	f009 fb8e 	bl	8030900 <UTIL_ADV_TRACE_COND_FSend>
          APP_DBG_MSG("     - numeric_value = %ld\n",
 80271e4:	f8d4 3007 	ldr.w	r3, [r4, #7]
 80271e8:	2200      	movs	r2, #0
 80271ea:	f04f 31ff 	mov.w	r1, #4294967295	; 0xffffffff
 80271ee:	9300      	str	r3, [sp, #0]
 80271f0:	2001      	movs	r0, #1
 80271f2:	4b2e      	ldr	r3, [pc, #184]	; (80272ac <SVCCTL_App_Notification+0x334>)
 80271f4:	f009 fb84 	bl	8030900 <UTIL_ADV_TRACE_COND_FSend>
          APP_DBG_MSG("     - Hex_value = %lx\n",
 80271f8:	f8d4 3007 	ldr.w	r3, [r4, #7]
 80271fc:	2200      	movs	r2, #0
 80271fe:	f04f 31ff 	mov.w	r1, #4294967295	; 0xffffffff
 8027202:	9300      	str	r3, [sp, #0]
 8027204:	2001      	movs	r0, #1
 8027206:	4b2a      	ldr	r3, [pc, #168]	; (80272b0 <SVCCTL_App_Notification+0x338>)
 8027208:	f009 fb7a 	bl	8030900 <UTIL_ADV_TRACE_COND_FSend>
          ret = aci_gap_numeric_comparison_value_confirm_yesno(bleAppContext.BleApplicationContext_legacy.connectionHandle, YES);
 802720c:	4b13      	ldr	r3, [pc, #76]	; (802725c <SVCCTL_App_Notification+0x2e4>)
 802720e:	2101      	movs	r1, #1
 8027210:	8ad8      	ldrh	r0, [r3, #22]
 8027212:	f7fd f824 	bl	802425e <aci_gap_numeric_comparison_value_confirm_yesno>
          if (ret != BLE_STATUS_SUCCESS)
 8027216:	4602      	mov	r2, r0
 8027218:	b110      	cbz	r0, 8027220 <SVCCTL_App_Notification+0x2a8>
            APP_DBG_MSG("==>> aci_gap_numeric_comparison_value_confirm_yesno-->YES : Fail, reason: 0x%02X\n", ret);
 802721a:	4b26      	ldr	r3, [pc, #152]	; (80272b4 <SVCCTL_App_Notification+0x33c>)
 802721c:	9000      	str	r0, [sp, #0]
 802721e:	e7cc      	b.n	80271ba <SVCCTL_App_Notification+0x242>
            APP_DBG_MSG("==>> aci_gap_numeric_comparison_value_confirm_yesno-->YES : Success\n");
 8027220:	4b25      	ldr	r3, [pc, #148]	; (80272b8 <SVCCTL_App_Notification+0x340>)
 8027222:	e7d2      	b.n	80271ca <SVCCTL_App_Notification+0x252>
          APP_DBG_MSG(">>== ACI_GAP_PAIRING_COMPLETE_VSEVT_CODE\n");
 8027224:	2200      	movs	r2, #0
 8027226:	f04f 31ff 	mov.w	r1, #4294967295	; 0xffffffff
 802722a:	2001      	movs	r0, #1
 802722c:	4b23      	ldr	r3, [pc, #140]	; (80272bc <SVCCTL_App_Notification+0x344>)
 802722e:	f009 fb67 	bl	8030900 <UTIL_ADV_TRACE_COND_FSend>
          if (p_pairing_complete->Status != 0)
 8027232:	79e2      	ldrb	r2, [r4, #7]
 8027234:	b15a      	cbz	r2, 802724e <SVCCTL_App_Notification+0x2d6>
            APP_DBG_MSG("     - Pairing KO\n     - Status: 0x%02X\n     - Reason: 0x%02X\n",
 8027236:	7a23      	ldrb	r3, [r4, #8]
 8027238:	f04f 31ff 	mov.w	r1, #4294967295	; 0xffffffff
 802723c:	e9cd 2300 	strd	r2, r3, [sp]
 8027240:	2001      	movs	r0, #1
 8027242:	2200      	movs	r2, #0
 8027244:	4b1e      	ldr	r3, [pc, #120]	; (80272c0 <SVCCTL_App_Notification+0x348>)
 8027246:	f009 fb5b 	bl	8030900 <UTIL_ADV_TRACE_COND_FSend>
          APP_DBG_MSG("\n");
 802724a:	4b1e      	ldr	r3, [pc, #120]	; (80272c4 <SVCCTL_App_Notification+0x34c>)
 802724c:	e79b      	b.n	8027186 <SVCCTL_App_Notification+0x20e>
            APP_DBG_MSG("     - Pairing Success\n");
 802724e:	f04f 31ff 	mov.w	r1, #4294967295	; 0xffffffff
 8027252:	4b1d      	ldr	r3, [pc, #116]	; (80272c8 <SVCCTL_App_Notification+0x350>)
 8027254:	2001      	movs	r0, #1
 8027256:	f009 fb53 	bl	8030900 <UTIL_ADV_TRACE_COND_FSend>
 802725a:	e7f6      	b.n	802724a <SVCCTL_App_Notification+0x2d2>
 802725c:	20004e4c 	.word	0x20004e4c
 8027260:	08032d05 	.word	0x08032d05
 8027264:	08032d2f 	.word	0x08032d2f
 8027268:	20004e40 	.word	0x20004e40
 802726c:	20004e68 	.word	0x20004e68
 8027270:	08032d6c 	.word	0x08032d6c
 8027274:	3ff40000 	.word	0x3ff40000
 8027278:	08032da0 	.word	0x08032da0
 802727c:	08032e0c 	.word	0x08032e0c
 8027280:	08032e5e 	.word	0x08032e5e
 8027284:	08032ea2 	.word	0x08032ea2
 8027288:	08032f0c 	.word	0x08032f0c
 802728c:	08032f55 	.word	0x08032f55
 8027290:	20004e80 	.word	0x20004e80
 8027294:	08032f7c 	.word	0x08032f7c
 8027298:	08032fab 	.word	0x08032fab
 802729c:	0001b207 	.word	0x0001b207
 80272a0:	08032fd1 	.word	0x08032fd1
 80272a4:	08033004 	.word	0x08033004
 80272a8:	0803302a 	.word	0x0803302a
 80272ac:	0803305c 	.word	0x0803305c
 80272b0:	08033078 	.word	0x08033078
 80272b4:	08033090 	.word	0x08033090
 80272b8:	080330e2 	.word	0x080330e2
 80272bc:	08033127 	.word	0x08033127
 80272c0:	08033151 	.word	0x08033151
 80272c4:	08033328 	.word	0x08033328
 80272c8:	08033190 	.word	0x08033190
          APP_DBG_MSG(">>== ACI_GAP_BOND_LOST_EVENT\n");
 80272cc:	2200      	movs	r2, #0
 80272ce:	f04f 31ff 	mov.w	r1, #4294967295	; 0xffffffff
 80272d2:	4b07      	ldr	r3, [pc, #28]	; (80272f0 <SVCCTL_App_Notification+0x378>)
 80272d4:	2001      	movs	r0, #1
 80272d6:	f009 fb13 	bl	8030900 <UTIL_ADV_TRACE_COND_FSend>
          ret = aci_gap_allow_rebond(bleAppContext.BleApplicationContext_legacy.connectionHandle);
 80272da:	4b06      	ldr	r3, [pc, #24]	; (80272f4 <SVCCTL_App_Notification+0x37c>)
 80272dc:	8ad8      	ldrh	r0, [r3, #22]
 80272de:	f7fa ff83 	bl	80221e8 <aci_gap_allow_rebond>
          if (ret != BLE_STATUS_SUCCESS)
 80272e2:	4602      	mov	r2, r0
 80272e4:	b110      	cbz	r0, 80272ec <SVCCTL_App_Notification+0x374>
            APP_DBG_MSG("==>> aci_gap_allow_rebond : Fail, reason: 0x%02X\n", ret);
 80272e6:	4b04      	ldr	r3, [pc, #16]	; (80272f8 <SVCCTL_App_Notification+0x380>)
 80272e8:	9000      	str	r0, [sp, #0]
 80272ea:	e766      	b.n	80271ba <SVCCTL_App_Notification+0x242>
            APP_DBG_MSG("==>> aci_gap_allow_rebond : Success\n");
 80272ec:	4b03      	ldr	r3, [pc, #12]	; (80272fc <SVCCTL_App_Notification+0x384>)
 80272ee:	e76c      	b.n	80271ca <SVCCTL_App_Notification+0x252>
 80272f0:	080331a8 	.word	0x080331a8
 80272f4:	20004e4c 	.word	0x20004e4c
 80272f8:	080331c6 	.word	0x080331c6
 80272fc:	080331f8 	.word	0x080331f8

08027300 <APP_BLE_Key_Button1_Action>:
{
 8027300:	b510      	push	{r4, lr}
  if (bleAppContext.Device_Connection_Status == APP_BLE_IDLE)
 8027302:	4c0a      	ldr	r4, [pc, #40]	; (802732c <APP_BLE_Key_Button1_Action+0x2c>)
 8027304:	7e23      	ldrb	r3, [r4, #24]
 8027306:	b953      	cbnz	r3, 802731e <APP_BLE_Key_Button1_Action+0x1e>
    APP_BLE_Procedure_Gap_Peripheral(PROC_GAP_PERIPH_ADVERTISE_START_FAST);
 8027308:	2001      	movs	r0, #1
 802730a:	f7ff fa4d 	bl	80267a8 <APP_BLE_Procedure_Gap_Peripheral>
    UTIL_TIMER_StartWithPeriod(&bleAppContext.Advertising_mgr_timer_Id, INITIAL_ADV_TIMEOUT);
 802730e:	f104 001c 	add.w	r0, r4, #28
 8027312:	f64e 2160 	movw	r1, #60000	; 0xea60
}
 8027316:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
    UTIL_TIMER_StartWithPeriod(&bleAppContext.Advertising_mgr_timer_Id, INITIAL_ADV_TIMEOUT);
 802731a:	f009 bd85 	b.w	8030e28 <UTIL_TIMER_StartWithPeriod>
    UTIL_SEQ_SetTask( 1<<CFG_TASK_SEND_NOTIF_ID, CFG_SCH_PRIO_0);
 802731e:	2100      	movs	r1, #0
}
 8027320:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
    UTIL_SEQ_SetTask( 1<<CFG_TASK_SEND_NOTIF_ID, CFG_SCH_PRIO_0);
 8027324:	2020      	movs	r0, #32
 8027326:	f009 bbc1 	b.w	8030aac <UTIL_SEQ_SetTask>
 802732a:	bf00      	nop
 802732c:	20004e4c 	.word	0x20004e4c

08027330 <APP_BLE_Key_Button2_Action>:
{
 8027330:	b513      	push	{r0, r1, r4, lr}
  if (bleAppContext.Device_Connection_Status != APP_BLE_CONNECTED_SERVER)
 8027332:	4c13      	ldr	r4, [pc, #76]	; (8027380 <APP_BLE_Key_Button2_Action+0x50>)
 8027334:	7e23      	ldrb	r3, [r4, #24]
 8027336:	2b02      	cmp	r3, #2
 8027338:	d016      	beq.n	8027368 <APP_BLE_Key_Button2_Action+0x38>
    ret = aci_gap_clear_security_db();
 802733a:	f7f9 fef9 	bl	8021130 <aci_gap_clear_security_db>
    if (ret != BLE_STATUS_SUCCESS)
 802733e:	4602      	mov	r2, r0
 8027340:	b148      	cbz	r0, 8027356 <APP_BLE_Key_Button2_Action+0x26>
      APP_DBG_MSG("==>> aci_gap_clear_security_db - Fail, result: 0x%02X\n", ret);
 8027342:	9000      	str	r0, [sp, #0]
 8027344:	2200      	movs	r2, #0
 8027346:	f04f 31ff 	mov.w	r1, #4294967295	; 0xffffffff
 802734a:	4b0e      	ldr	r3, [pc, #56]	; (8027384 <APP_BLE_Key_Button2_Action+0x54>)
 802734c:	2001      	movs	r0, #1
 802734e:	f009 fad7 	bl	8030900 <UTIL_ADV_TRACE_COND_FSend>
}
 8027352:	b002      	add	sp, #8
 8027354:	bd10      	pop	{r4, pc}
      APP_DBG_MSG("==>> aci_gap_clear_security_db - Success\n");
 8027356:	f04f 31ff 	mov.w	r1, #4294967295	; 0xffffffff
 802735a:	2001      	movs	r0, #1
 802735c:	4b0a      	ldr	r3, [pc, #40]	; (8027388 <APP_BLE_Key_Button2_Action+0x58>)
}
 802735e:	b002      	add	sp, #8
 8027360:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
      APP_DBG_MSG("==>> aci_gap_clear_security_db - Success\n");
 8027364:	f009 bacc 	b.w	8030900 <UTIL_ADV_TRACE_COND_FSend>
    APP_BLE_Procedure_Gap_Peripheral(PROC_GAP_PERIPH_ADVERTISE_START_FAST);
 8027368:	2001      	movs	r0, #1
 802736a:	f7ff fa1d 	bl	80267a8 <APP_BLE_Procedure_Gap_Peripheral>
    UTIL_TIMER_StartWithPeriod(&bleAppContext.Advertising_mgr_timer_Id, INITIAL_ADV_TIMEOUT);
 802736e:	f64e 2160 	movw	r1, #60000	; 0xea60
 8027372:	f104 001c 	add.w	r0, r4, #28
}
 8027376:	b002      	add	sp, #8
 8027378:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
    UTIL_TIMER_StartWithPeriod(&bleAppContext.Advertising_mgr_timer_Id, INITIAL_ADV_TIMEOUT);
 802737c:	f009 bd54 	b.w	8030e28 <UTIL_TIMER_StartWithPeriod>
 8027380:	20004e4c 	.word	0x20004e4c
 8027384:	0803321d 	.word	0x0803321d
 8027388:	08033254 	.word	0x08033254

0802738c <APP_BLE_Key_Button3_Action>:
  if (bleAppContext.Device_Connection_Status != APP_BLE_CONNECTED_SERVER)
 802738c:	4b03      	ldr	r3, [pc, #12]	; (802739c <APP_BLE_Key_Button3_Action+0x10>)
 802738e:	7e1b      	ldrb	r3, [r3, #24]
 8027390:	2b02      	cmp	r3, #2
 8027392:	d102      	bne.n	802739a <APP_BLE_Key_Button3_Action+0xe>
    APP_BLE_Procedure_Gap_Peripheral(PROC_GAP_PERIPH_CONN_PARAM_UPDATE);
 8027394:	2004      	movs	r0, #4
 8027396:	f7ff ba07 	b.w	80267a8 <APP_BLE_Procedure_Gap_Peripheral>
}
 802739a:	4770      	bx	lr
 802739c:	20004e4c 	.word	0x20004e4c

080273a0 <BLECB_Indication>:

uint8_t BLECB_Indication( const uint8_t* data,
                          uint16_t length,
                          const uint8_t* ext_data,
                          uint16_t ext_length )
{
 80273a0:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
  BleEvtPacket_t *phcievt;
  uint16_t total_length = (length+ext_length);
  /* Unused parameter */
  (void)ext_data;

  if (data[0] == HCI_EVENT_PKT_TYPE)
 80273a2:	7806      	ldrb	r6, [r0, #0]
{
 80273a4:	4605      	mov	r5, r0
  if (data[0] == HCI_EVENT_PKT_TYPE)
 80273a6:	2e04      	cmp	r6, #4
 80273a8:	d12e      	bne.n	8027408 <BLECB_Indication+0x68>
  uint16_t total_length = (length+ext_length);
 80273aa:	4419      	add	r1, r3
  {
    APP_BLE_ResumeFlowProcessCb.Callback = BLE_ResumeFlowProcessCallback;
 80273ac:	4a18      	ldr	r2, [pc, #96]	; (8027410 <BLECB_Indication+0x70>)
 80273ae:	4819      	ldr	r0, [pc, #100]	; (8027414 <BLECB_Indication+0x74>)
    if (AMM_Alloc (CFG_AMM_VIRTUAL_APP_BLE,
                   DIVC((sizeof(BleEvtPacketHeader_t) + total_length), sizeof (uint32_t)),
 80273b0:	b289      	uxth	r1, r1
 80273b2:	310b      	adds	r1, #11
    APP_BLE_ResumeFlowProcessCb.Callback = BLE_ResumeFlowProcessCallback;
 80273b4:	6090      	str	r0, [r2, #8]
    if (AMM_Alloc (CFG_AMM_VIRTUAL_APP_BLE,
 80273b6:	4613      	mov	r3, r2
 80273b8:	2002      	movs	r0, #2
 80273ba:	aa01      	add	r2, sp, #4
 80273bc:	0889      	lsrs	r1, r1, #2
 80273be:	f002 fb1f 	bl	8029a00 <AMM_Alloc>
 80273c2:	4604      	mov	r4, r0
 80273c4:	b140      	cbz	r0, 80273d8 <BLECB_Indication+0x38>
                   (uint32_t **)&phcievt,
                   &APP_BLE_ResumeFlowProcessCb) != AMM_ERROR_OK)
    {
      APP_DBG_MSG("Alloc failed\n");
 80273c6:	2200      	movs	r2, #0
 80273c8:	f04f 31ff 	mov.w	r1, #4294967295	; 0xffffffff
 80273cc:	2001      	movs	r0, #1
 80273ce:	4b12      	ldr	r3, [pc, #72]	; (8027418 <BLECB_Indication+0x78>)
 80273d0:	f009 fa96 	bl	8030900 <UTIL_ADV_TRACE_COND_FSend>
  uint8_t status = 1;
 80273d4:	2401      	movs	r4, #1
 80273d6:	e014      	b.n	8027402 <BLECB_Indication+0x62>
      status = 1;
    }
    else if (phcievt != (BleEvtPacket_t *)0 )
 80273d8:	9f01      	ldr	r7, [sp, #4]
 80273da:	2f00      	cmp	r7, #0
 80273dc:	d0fa      	beq.n	80273d4 <BLECB_Indication+0x34>
    {
      phcievt->evtserial.type = HCI_EVENT_PKT_TYPE;
 80273de:	723e      	strb	r6, [r7, #8]
      phcievt->evtserial.evt.evtcode = data[1];
 80273e0:	786b      	ldrb	r3, [r5, #1]
      phcievt->evtserial.evt.plen  = data[2];
      memcpy( (void*)&phcievt->evtserial.evt.payload, &data[3], data[2]);
 80273e2:	1ce9      	adds	r1, r5, #3
      phcievt->evtserial.evt.evtcode = data[1];
 80273e4:	727b      	strb	r3, [r7, #9]
      phcievt->evtserial.evt.plen  = data[2];
 80273e6:	78aa      	ldrb	r2, [r5, #2]
      memcpy( (void*)&phcievt->evtserial.evt.payload, &data[3], data[2]);
 80273e8:	f107 000b 	add.w	r0, r7, #11
      phcievt->evtserial.evt.plen  = data[2];
 80273ec:	72ba      	strb	r2, [r7, #10]
      memcpy( (void*)&phcievt->evtserial.evt.payload, &data[3], data[2]);
 80273ee:	f009 fdb7 	bl	8030f60 <memcpy>
      LST_insert_tail(&BleAsynchEventQueue, (tListNode *)phcievt);
 80273f2:	4639      	mov	r1, r7
 80273f4:	4809      	ldr	r0, [pc, #36]	; (802741c <BLECB_Indication+0x7c>)
 80273f6:	f003 fa90 	bl	802a91a <LST_insert_tail>
      UTIL_SEQ_SetTask(1 << CFG_TASK_HCI_ASYNCH_EVT_ID, CFG_SCH_PRIO_0);
 80273fa:	4621      	mov	r1, r4
 80273fc:	2001      	movs	r0, #1
 80273fe:	f009 fb55 	bl	8030aac <UTIL_SEQ_SetTask>
  else if (data[0] == HCI_ACLDATA_PKT_TYPE)
  {
    status = 0;
  }
  return status;
}
 8027402:	4620      	mov	r0, r4
 8027404:	b003      	add	sp, #12
 8027406:	bdf0      	pop	{r4, r5, r6, r7, pc}
  uint8_t status = 1;
 8027408:	1eb4      	subs	r4, r6, #2
 802740a:	bf18      	it	ne
 802740c:	2401      	movne	r4, #1
 802740e:	e7f8      	b.n	8027402 <BLECB_Indication+0x62>
 8027410:	20004e2c 	.word	0x20004e2c
 8027414:	0802678f 	.word	0x0802678f
 8027418:	0803327e 	.word	0x0803327e
 802741c:	20004e38 	.word	0x20004e38

08027420 <NVMCB_Store>:
{
  (void)ptr;
  (void)size;

  /* Call SNVMA for storing - Without callback */
  SNVMA_Write (APP_BLE_NvmBuffer,
 8027420:	2000      	movs	r0, #0
 8027422:	4901      	ldr	r1, [pc, #4]	; (8027428 <NVMCB_Store+0x8>)
 8027424:	f002 b9ac 	b.w	8029780 <SNVMA_Write>
 8027428:	08026799 	.word	0x08026799

0802742c <P2P_SERVER_EventHandler>:
 * @brief  Event handler
 * @param  p_Event: Address of the buffer holding the p_Event
 * @retval Ack: Return whether the p_Event has been managed or not
 */
static SVCCTL_EvtAckStatus_t P2P_SERVER_EventHandler(void *p_Event)
{
 802742c:	b510      	push	{r4, lr}
  /* USER CODE END Service1_EventHandler_1 */

  return_value = SVCCTL_EvtNotAck;
  p_event_pckt = (hci_event_pckt *)(((hci_uart_pckt*)p_Event)->data);

  switch(p_event_pckt->evt)
 802742e:	7843      	ldrb	r3, [r0, #1]
{
 8027430:	4604      	mov	r4, r0
  switch(p_event_pckt->evt)
 8027432:	2bff      	cmp	r3, #255	; 0xff
{
 8027434:	b086      	sub	sp, #24
  switch(p_event_pckt->evt)
 8027436:	d109      	bne.n	802744c <P2P_SERVER_EventHandler+0x20>
  {
    case HCI_VENDOR_SPECIFIC_DEBUG_EVT_CODE:
      p_blecore_evt = (evt_blecore_aci*)p_event_pckt->data;
      switch(p_blecore_evt->ecode)
 8027438:	f640 4201 	movw	r2, #3073	; 0xc01
 802743c:	f8b0 3003 	ldrh.w	r3, [r0, #3]
 8027440:	4293      	cmp	r3, r2
 8027442:	d005      	beq.n	8027450 <P2P_SERVER_EventHandler+0x24>
 8027444:	f640 420e 	movw	r2, #3086	; 0xc0e
 8027448:	4293      	cmp	r3, r2
 802744a:	d033      	beq.n	80274b4 <P2P_SERVER_EventHandler+0x88>
  return_value = SVCCTL_EvtNotAck;
 802744c:	2400      	movs	r4, #0
 802744e:	e00b      	b.n	8027468 <P2P_SERVER_EventHandler+0x3c>
        case ACI_GATT_ATTRIBUTE_MODIFIED_VSEVT_CODE:
          /* USER CODE BEGIN EVT_BLUE_GATT_ATTRIBUTE_MODIFIED_BEGIN */

          /* USER CODE END EVT_BLUE_GATT_ATTRIBUTE_MODIFIED_BEGIN */
          p_attribute_modified = (aci_gatt_attribute_modified_event_rp0*)p_blecore_evt->data;
          if(p_attribute_modified->Attr_Handle == (P2P_SERVER_Context.Switch_CCharHdle + CHARACTERISTIC_DESCRIPTOR_ATTRIBUTE_OFFSET))
 8027450:	4924      	ldr	r1, [pc, #144]	; (80274e4 <P2P_SERVER_EventHandler+0xb8>)
 8027452:	f8b0 2007 	ldrh.w	r2, [r0, #7]
 8027456:	888b      	ldrh	r3, [r1, #4]
 8027458:	3302      	adds	r3, #2
 802745a:	429a      	cmp	r2, r3
 802745c:	d115      	bne.n	802748a <P2P_SERVER_EventHandler+0x5e>
          {
            return_value = SVCCTL_EvtAckFlowEnable;
            /* USER CODE BEGIN Service1_Char_2 */

            /* USER CODE END Service1_Char_2 */
            switch(p_attribute_modified->Attr_Data[0])
 802745e:	7b44      	ldrb	r4, [r0, #13]
 8027460:	b12c      	cbz	r4, 802746e <P2P_SERVER_EventHandler+0x42>
 8027462:	2c01      	cmp	r4, #1
 8027464:	d00a      	beq.n	802747c <P2P_SERVER_EventHandler+0x50>
            return_value = SVCCTL_EvtAckFlowEnable;
 8027466:	2401      	movs	r4, #1
  /* USER CODE BEGIN Service1_EventHandler_2 */

  /* USER CODE END Service1_EventHandler_2 */

  return(return_value);
}/* end P2P_SERVER_EventHandler */
 8027468:	4620      	mov	r0, r4
 802746a:	b006      	add	sp, #24
 802746c:	bd10      	pop	{r4, pc}
                notification.EvtOpcode = P2P_SERVER_SWITCH_C_NOTIFY_DISABLED_EVT;
 802746e:	2303      	movs	r3, #3
                P2P_SERVER_Notification(&notification);
 8027470:	a802      	add	r0, sp, #8
                notification.EvtOpcode = P2P_SERVER_SWITCH_C_NOTIFY_DISABLED_EVT;
 8027472:	f88d 3008 	strb.w	r3, [sp, #8]
                P2P_SERVER_Notification(&notification);
 8027476:	f000 f9c1 	bl	80277fc <P2P_SERVER_Notification>
 802747a:	e7f4      	b.n	8027466 <P2P_SERVER_EventHandler+0x3a>
                notification.EvtOpcode = P2P_SERVER_SWITCH_C_NOTIFY_ENABLED_EVT;
 802747c:	2302      	movs	r3, #2
 802747e:	f88d 3008 	strb.w	r3, [sp, #8]
            P2P_SERVER_Notification(&notification);
 8027482:	a802      	add	r0, sp, #8
 8027484:	f000 f9ba 	bl	80277fc <P2P_SERVER_Notification>
 8027488:	e7ee      	b.n	8027468 <P2P_SERVER_EventHandler+0x3c>
          else if(p_attribute_modified->Attr_Handle == (P2P_SERVER_Context.Led_CCharHdle + CHARACTERISTIC_VALUE_ATTRIBUTE_OFFSET))
 802748a:	884b      	ldrh	r3, [r1, #2]
 802748c:	3301      	adds	r3, #1
 802748e:	429a      	cmp	r2, r3
 8027490:	d1dc      	bne.n	802744c <P2P_SERVER_EventHandler+0x20>
            APP_DBG_MSG("-- GATT : LED CONFIGURATION RECEIVED\n");
 8027492:	4b15      	ldr	r3, [pc, #84]	; (80274e8 <P2P_SERVER_EventHandler+0xbc>)
 8027494:	2200      	movs	r2, #0
 8027496:	f04f 31ff 	mov.w	r1, #4294967295	; 0xffffffff
 802749a:	2001      	movs	r0, #1
 802749c:	f009 fa30 	bl	8030900 <UTIL_ADV_TRACE_COND_FSend>
            notification.DataTransfered.p_Payload = p_attribute_modified->Attr_Data;
 80274a0:	340d      	adds	r4, #13
            notification.DataTransfered.Length = p_attribute_modified->Attr_Data_Length;
 80274a2:	f834 3c02 	ldrh.w	r3, [r4, #-2]
            notification.DataTransfered.p_Payload = p_attribute_modified->Attr_Data;
 80274a6:	9403      	str	r4, [sp, #12]
            notification.EvtOpcode = P2P_SERVER_LED_C_WRITE_NO_RESP_EVT;
 80274a8:	2401      	movs	r4, #1
            notification.DataTransfered.Length = p_attribute_modified->Attr_Data_Length;
 80274aa:	f88d 3010 	strb.w	r3, [sp, #16]
            notification.EvtOpcode = P2P_SERVER_LED_C_WRITE_NO_RESP_EVT;
 80274ae:	f88d 4008 	strb.w	r4, [sp, #8]
 80274b2:	e7e6      	b.n	8027482 <P2P_SERVER_EventHandler+0x56>
            status = aci_gatt_confirm_indication(pr->Connection_Handle);
 80274b4:	f8b0 0005 	ldrh.w	r0, [r0, #5]
 80274b8:	f7f2 fde4 	bl	801a084 <aci_gatt_confirm_indication>
            if (status != BLE_STATUS_SUCCESS)
 80274bc:	4604      	mov	r4, r0
 80274be:	b140      	cbz	r0, 80274d2 <P2P_SERVER_EventHandler+0xa6>
              APP_DBG_MSG("  Fail   : aci_gatt_confirm_indication command, result: 0x%x \n", status);
 80274c0:	9000      	str	r0, [sp, #0]
 80274c2:	2200      	movs	r2, #0
 80274c4:	f04f 31ff 	mov.w	r1, #4294967295	; 0xffffffff
 80274c8:	4b08      	ldr	r3, [pc, #32]	; (80274ec <P2P_SERVER_EventHandler+0xc0>)
 80274ca:	2001      	movs	r0, #1
 80274cc:	f009 fa18 	bl	8030900 <UTIL_ADV_TRACE_COND_FSend>
 80274d0:	e7bc      	b.n	802744c <P2P_SERVER_EventHandler+0x20>
              APP_DBG_MSG("  Success: aci_gatt_confirm_indication command\n");
 80274d2:	4602      	mov	r2, r0
 80274d4:	f04f 31ff 	mov.w	r1, #4294967295	; 0xffffffff
 80274d8:	4b05      	ldr	r3, [pc, #20]	; (80274f0 <P2P_SERVER_EventHandler+0xc4>)
 80274da:	2001      	movs	r0, #1
 80274dc:	f009 fa10 	bl	8030900 <UTIL_ADV_TRACE_COND_FSend>
 80274e0:	e7c2      	b.n	8027468 <P2P_SERVER_EventHandler+0x3c>
 80274e2:	bf00      	nop
 80274e4:	20008d38 	.word	0x20008d38
 80274e8:	080332c5 	.word	0x080332c5
 80274ec:	080332eb 	.word	0x080332eb
 80274f0:	0803332a 	.word	0x0803332a

080274f4 <P2P_SERVER_Init>:
 * @brief  Service initialization
 * @param  None
 * @retval None
 */
void P2P_SERVER_Init(void)
{
 80274f4:	b570      	push	{r4, r5, r6, lr}
  /* USER CODE END SVCCTL_InitService1Svc_1 */

  /**
   *  Register the event handler to the BLE controller
   */
  SVCCTL_RegisterSvcHandler(P2P_SERVER_EventHandler);
 80274f6:	4876      	ldr	r0, [pc, #472]	; (80276d0 <P2P_SERVER_Init+0x1dc>)
{
 80274f8:	b08a      	sub	sp, #40	; 0x28
  SVCCTL_RegisterSvcHandler(P2P_SERVER_EventHandler);
 80274fa:	f009 f91d 	bl	8030738 <SVCCTL_RegisterSvcHandler>
   *                                2 for LED_C +
   *                                2 for SWITCH_C +
   *                                1 for SWITCH_C configuration descriptor +
   *                              = 6
   */
  COPY_P2P_SERVER_UUID(uuid.Char_UUID_128);
 80274fe:	238f      	movs	r3, #143	; 0x8f
 8027500:	f88d 3018 	strb.w	r3, [sp, #24]
 8027504:	23e5      	movs	r3, #229	; 0xe5
 8027506:	f88d 3019 	strb.w	r3, [sp, #25]
 802750a:	23b3      	movs	r3, #179	; 0xb3
 802750c:	f88d 301a 	strb.w	r3, [sp, #26]
 8027510:	23d5      	movs	r3, #213	; 0xd5
 8027512:	f88d 301b 	strb.w	r3, [sp, #27]
 8027516:	232e      	movs	r3, #46	; 0x2e
 8027518:	f88d 301c 	strb.w	r3, [sp, #28]
 802751c:	237f      	movs	r3, #127	; 0x7f
 802751e:	f88d 301d 	strb.w	r3, [sp, #29]
 8027522:	234a      	movs	r3, #74	; 0x4a
 8027524:	f88d 301e 	strb.w	r3, [sp, #30]
 8027528:	2398      	movs	r3, #152	; 0x98
 802752a:	f88d 301f 	strb.w	r3, [sp, #31]
 802752e:	232a      	movs	r3, #42	; 0x2a
 8027530:	f88d 3020 	strb.w	r3, [sp, #32]
 8027534:	2348      	movs	r3, #72	; 0x48
 8027536:	f88d 3021 	strb.w	r3, [sp, #33]	; 0x21
 802753a:	237a      	movs	r3, #122	; 0x7a
 802753c:	f88d 3022 	strb.w	r3, [sp, #34]	; 0x22
 8027540:	23cc      	movs	r3, #204	; 0xcc
 8027542:	f88d 3023 	strb.w	r3, [sp, #35]	; 0x23
 8027546:	2340      	movs	r3, #64	; 0x40
 8027548:	f88d 3024 	strb.w	r3, [sp, #36]	; 0x24
 802754c:	23fe      	movs	r3, #254	; 0xfe
 802754e:	2400      	movs	r4, #0
  ret = aci_gatt_add_service(UUID_TYPE_128,
 8027550:	4e60      	ldr	r6, [pc, #384]	; (80276d4 <P2P_SERVER_Init+0x1e0>)
 8027552:	2201      	movs	r2, #1
  COPY_P2P_SERVER_UUID(uuid.Char_UUID_128);
 8027554:	f88d 3025 	strb.w	r3, [sp, #37]	; 0x25
  ret = aci_gatt_add_service(UUID_TYPE_128,
 8027558:	2002      	movs	r0, #2
 802755a:	2306      	movs	r3, #6
 802755c:	9600      	str	r6, [sp, #0]
 802755e:	a906      	add	r1, sp, #24
  COPY_P2P_SERVER_UUID(uuid.Char_UUID_128);
 8027560:	f88d 4026 	strb.w	r4, [sp, #38]	; 0x26
 8027564:	f88d 4027 	strb.w	r4, [sp, #39]	; 0x27
  ret = aci_gatt_add_service(UUID_TYPE_128,
 8027568:	f7f4 f919 	bl	801b79e <aci_gatt_add_service>
                             (Service_UUID_t *) &uuid,
                             PRIMARY_SERVICE,
                             6,
                             &(P2P_SERVER_Context.P2p_serverSvcHdle));
  if (ret != BLE_STATUS_SUCCESS)
 802756c:	4602      	mov	r2, r0
 802756e:	2800      	cmp	r0, #0
 8027570:	f000 8099 	beq.w	80276a6 <P2P_SERVER_Init+0x1b2>
  {
    APP_DBG_MSG("  Fail   : aci_gatt_add_service command: P2P_Server, error code: 0x%x \n\r", ret);
 8027574:	9000      	str	r0, [sp, #0]
 8027576:	4622      	mov	r2, r4
 8027578:	f04f 31ff 	mov.w	r1, #4294967295	; 0xffffffff
 802757c:	2001      	movs	r0, #1
 802757e:	4b56      	ldr	r3, [pc, #344]	; (80276d8 <P2P_SERVER_Init+0x1e4>)
 8027580:	f009 f9be 	bl	8030900 <UTIL_ADV_TRACE_COND_FSend>
  }

  /**
   * LED_C
   */
  COPY_LED_C_UUID(uuid.Char_UUID_128);
 8027584:	2319      	movs	r3, #25
 8027586:	f88d 3018 	strb.w	r3, [sp, #24]
 802758a:	23ed      	movs	r3, #237	; 0xed
 802758c:	f88d 3019 	strb.w	r3, [sp, #25]
 8027590:	f88d 301c 	strb.w	r3, [sp, #28]
 8027594:	2321      	movs	r3, #33	; 0x21
 8027596:	f88d 301d 	strb.w	r3, [sp, #29]
 802759a:	234c      	movs	r3, #76	; 0x4c
 802759c:	f88d 301e 	strb.w	r3, [sp, #30]
 80275a0:	239d      	movs	r3, #157	; 0x9d
 80275a2:	f88d 301f 	strb.w	r3, [sp, #31]
 80275a6:	2341      	movs	r3, #65	; 0x41
 80275a8:	2282      	movs	r2, #130	; 0x82
 80275aa:	f88d 3020 	strb.w	r3, [sp, #32]
 80275ae:	f88d 3024 	strb.w	r3, [sp, #36]	; 0x24
 80275b2:	23fe      	movs	r3, #254	; 0xfe
 80275b4:	f88d 201a 	strb.w	r2, [sp, #26]
 80275b8:	22ae      	movs	r2, #174	; 0xae
 80275ba:	f88d 3025 	strb.w	r3, [sp, #37]	; 0x25
  ret = aci_gatt_add_char(P2P_SERVER_Context.P2p_serverSvcHdle,
 80275be:	4b47      	ldr	r3, [pc, #284]	; (80276dc <P2P_SERVER_Init+0x1e8>)
 80275c0:	2401      	movs	r4, #1
  COPY_LED_C_UUID(uuid.Char_UUID_128);
 80275c2:	f88d 201b 	strb.w	r2, [sp, #27]
  ret = aci_gatt_add_char(P2P_SERVER_Context.P2p_serverSvcHdle,
 80275c6:	9305      	str	r3, [sp, #20]
  COPY_LED_C_UUID(uuid.Char_UUID_128);
 80275c8:	2245      	movs	r2, #69	; 0x45
  ret = aci_gatt_add_char(P2P_SERVER_Context.P2p_serverSvcHdle,
 80275ca:	2310      	movs	r3, #16
  COPY_LED_C_UUID(uuid.Char_UUID_128);
 80275cc:	f88d 2021 	strb.w	r2, [sp, #33]	; 0x21
  ret = aci_gatt_add_char(P2P_SERVER_Context.P2p_serverSvcHdle,
 80275d0:	e9cd 3403 	strd	r3, r4, [sp, #12]
  COPY_LED_C_UUID(uuid.Char_UUID_128);
 80275d4:	2222      	movs	r2, #34	; 0x22
  ret = aci_gatt_add_char(P2P_SERVER_Context.P2p_serverSvcHdle,
 80275d6:	2306      	movs	r3, #6
  COPY_LED_C_UUID(uuid.Char_UUID_128);
 80275d8:	2500      	movs	r5, #0
 80275da:	f88d 2022 	strb.w	r2, [sp, #34]	; 0x22
  ret = aci_gatt_add_char(P2P_SERVER_Context.P2p_serverSvcHdle,
 80275de:	9300      	str	r3, [sp, #0]
  COPY_LED_C_UUID(uuid.Char_UUID_128);
 80275e0:	228e      	movs	r2, #142	; 0x8e
  ret = aci_gatt_add_char(P2P_SERVER_Context.P2p_serverSvcHdle,
 80275e2:	2302      	movs	r3, #2
  COPY_LED_C_UUID(uuid.Char_UUID_128);
 80275e4:	f88d 2023 	strb.w	r2, [sp, #35]	; 0x23
  ret = aci_gatt_add_char(P2P_SERVER_Context.P2p_serverSvcHdle,
 80275e8:	4619      	mov	r1, r3
 80275ea:	aa06      	add	r2, sp, #24
 80275ec:	e9cd 5401 	strd	r5, r4, [sp, #4]
 80275f0:	8830      	ldrh	r0, [r6, #0]
  COPY_LED_C_UUID(uuid.Char_UUID_128);
 80275f2:	f88d 5026 	strb.w	r5, [sp, #38]	; 0x26
 80275f6:	f88d 5027 	strb.w	r5, [sp, #39]	; 0x27
  ret = aci_gatt_add_char(P2P_SERVER_Context.P2p_serverSvcHdle,
 80275fa:	f7f4 fb76 	bl	801bcea <aci_gatt_add_char>
                          ATTR_PERMISSION_NONE,
                          GATT_NOTIFY_ATTRIBUTE_WRITE,
                          0x10,
                          CHAR_VALUE_LEN_VARIABLE,
                          &(P2P_SERVER_Context.Led_CCharHdle));
  if (ret != BLE_STATUS_SUCCESS)
 80275fe:	4602      	mov	r2, r0
 8027600:	2800      	cmp	r0, #0
 8027602:	d057      	beq.n	80276b4 <P2P_SERVER_Init+0x1c0>
  {
    APP_DBG_MSG("  Fail   : aci_gatt_add_char command   : LED_C, error code: 0x%2X\n", ret);
 8027604:	9000      	str	r0, [sp, #0]
 8027606:	462a      	mov	r2, r5
 8027608:	f04f 31ff 	mov.w	r1, #4294967295	; 0xffffffff
 802760c:	4620      	mov	r0, r4
 802760e:	4b34      	ldr	r3, [pc, #208]	; (80276e0 <P2P_SERVER_Init+0x1ec>)
 8027610:	f009 f976 	bl	8030900 <UTIL_ADV_TRACE_COND_FSend>
  }

  /**
   * SWITCH_C
   */
  COPY_SWITCH_C_UUID(uuid.Char_UUID_128);
 8027614:	2319      	movs	r3, #25
 8027616:	f88d 3018 	strb.w	r3, [sp, #24]
 802761a:	23ed      	movs	r3, #237	; 0xed
 802761c:	f88d 3019 	strb.w	r3, [sp, #25]
 8027620:	f88d 301c 	strb.w	r3, [sp, #28]
 8027624:	2321      	movs	r3, #33	; 0x21
 8027626:	f88d 301d 	strb.w	r3, [sp, #29]
 802762a:	234c      	movs	r3, #76	; 0x4c
 802762c:	f88d 301e 	strb.w	r3, [sp, #30]
 8027630:	239d      	movs	r3, #157	; 0x9d
 8027632:	f88d 301f 	strb.w	r3, [sp, #31]
 8027636:	2341      	movs	r3, #65	; 0x41
 8027638:	f88d 3020 	strb.w	r3, [sp, #32]
 802763c:	2345      	movs	r3, #69	; 0x45
 802763e:	f88d 3021 	strb.w	r3, [sp, #33]	; 0x21
 8027642:	2322      	movs	r3, #34	; 0x22
 8027644:	f88d 3022 	strb.w	r3, [sp, #34]	; 0x22
 8027648:	238e      	movs	r3, #142	; 0x8e
 802764a:	f88d 3023 	strb.w	r3, [sp, #35]	; 0x23
 802764e:	2342      	movs	r3, #66	; 0x42
 8027650:	f88d 3024 	strb.w	r3, [sp, #36]	; 0x24
 8027654:	23fe      	movs	r3, #254	; 0xfe
 8027656:	f88d 3025 	strb.w	r3, [sp, #37]	; 0x25
  ret = aci_gatt_add_char(P2P_SERVER_Context.P2p_serverSvcHdle,
 802765a:	4b22      	ldr	r3, [pc, #136]	; (80276e4 <P2P_SERVER_Init+0x1f0>)
  COPY_SWITCH_C_UUID(uuid.Char_UUID_128);
 802765c:	2282      	movs	r2, #130	; 0x82
  ret = aci_gatt_add_char(P2P_SERVER_Context.P2p_serverSvcHdle,
 802765e:	2401      	movs	r4, #1
 8027660:	9305      	str	r3, [sp, #20]
 8027662:	2310      	movs	r3, #16
  COPY_SWITCH_C_UUID(uuid.Char_UUID_128);
 8027664:	2500      	movs	r5, #0
  ret = aci_gatt_add_char(P2P_SERVER_Context.P2p_serverSvcHdle,
 8027666:	e9cd 3403 	strd	r3, r4, [sp, #12]
  COPY_SWITCH_C_UUID(uuid.Char_UUID_128);
 802766a:	f88d 201a 	strb.w	r2, [sp, #26]
  ret = aci_gatt_add_char(P2P_SERVER_Context.P2p_serverSvcHdle,
 802766e:	9300      	str	r3, [sp, #0]
  COPY_SWITCH_C_UUID(uuid.Char_UUID_128);
 8027670:	22ae      	movs	r2, #174	; 0xae
  ret = aci_gatt_add_char(P2P_SERVER_Context.P2p_serverSvcHdle,
 8027672:	2302      	movs	r3, #2
  COPY_SWITCH_C_UUID(uuid.Char_UUID_128);
 8027674:	f88d 201b 	strb.w	r2, [sp, #27]
  ret = aci_gatt_add_char(P2P_SERVER_Context.P2p_serverSvcHdle,
 8027678:	4619      	mov	r1, r3
 802767a:	aa06      	add	r2, sp, #24
 802767c:	e9cd 5401 	strd	r5, r4, [sp, #4]
 8027680:	8830      	ldrh	r0, [r6, #0]
  COPY_SWITCH_C_UUID(uuid.Char_UUID_128);
 8027682:	f88d 5026 	strb.w	r5, [sp, #38]	; 0x26
 8027686:	f88d 5027 	strb.w	r5, [sp, #39]	; 0x27
  ret = aci_gatt_add_char(P2P_SERVER_Context.P2p_serverSvcHdle,
 802768a:	f7f4 fb2e 	bl	801bcea <aci_gatt_add_char>
                          ATTR_PERMISSION_NONE,
                          GATT_NOTIFY_ATTRIBUTE_WRITE,
                          0x10,
                          CHAR_VALUE_LEN_VARIABLE,
                          &(P2P_SERVER_Context.Switch_CCharHdle));
  if (ret != BLE_STATUS_SUCCESS)
 802768e:	4602      	mov	r2, r0
 8027690:	b1b8      	cbz	r0, 80276c2 <P2P_SERVER_Init+0x1ce>
  {
    APP_DBG_MSG("  Fail   : aci_gatt_add_char command   : SWITCH_C, error code: 0x%2X\n", ret);
 8027692:	9000      	str	r0, [sp, #0]
 8027694:	462a      	mov	r2, r5
 8027696:	f04f 31ff 	mov.w	r1, #4294967295	; 0xffffffff
 802769a:	4620      	mov	r0, r4
 802769c:	4b12      	ldr	r3, [pc, #72]	; (80276e8 <P2P_SERVER_Init+0x1f4>)
 802769e:	f009 f92f 	bl	8030900 <UTIL_ADV_TRACE_COND_FSend>
  /* USER CODE BEGIN SVCCTL_InitService1Svc_2 */

  /* USER CODE END SVCCTL_InitService1Svc_2 */

  return;
}
 80276a2:	b00a      	add	sp, #40	; 0x28
 80276a4:	bd70      	pop	{r4, r5, r6, pc}
    APP_DBG_MSG("  Success: aci_gatt_add_service command: P2P_Server \n\r");
 80276a6:	f04f 31ff 	mov.w	r1, #4294967295	; 0xffffffff
 80276aa:	4b10      	ldr	r3, [pc, #64]	; (80276ec <P2P_SERVER_Init+0x1f8>)
 80276ac:	2001      	movs	r0, #1
 80276ae:	f009 f927 	bl	8030900 <UTIL_ADV_TRACE_COND_FSend>
 80276b2:	e767      	b.n	8027584 <P2P_SERVER_Init+0x90>
    APP_DBG_MSG("  Success: aci_gatt_add_char command   : LED_C\n");
 80276b4:	f04f 31ff 	mov.w	r1, #4294967295	; 0xffffffff
 80276b8:	4620      	mov	r0, r4
 80276ba:	4b0d      	ldr	r3, [pc, #52]	; (80276f0 <P2P_SERVER_Init+0x1fc>)
 80276bc:	f009 f920 	bl	8030900 <UTIL_ADV_TRACE_COND_FSend>
 80276c0:	e7a8      	b.n	8027614 <P2P_SERVER_Init+0x120>
    APP_DBG_MSG("  Success: aci_gatt_add_char command   : SWITCH_C\n");
 80276c2:	f04f 31ff 	mov.w	r1, #4294967295	; 0xffffffff
 80276c6:	4620      	mov	r0, r4
 80276c8:	4b0a      	ldr	r3, [pc, #40]	; (80276f4 <P2P_SERVER_Init+0x200>)
 80276ca:	f009 f919 	bl	8030900 <UTIL_ADV_TRACE_COND_FSend>
  return;
 80276ce:	e7e8      	b.n	80276a2 <P2P_SERVER_Init+0x1ae>
 80276d0:	0802742d 	.word	0x0802742d
 80276d4:	20008d38 	.word	0x20008d38
 80276d8:	0803335a 	.word	0x0803335a
 80276dc:	20008d3a 	.word	0x20008d3a
 80276e0:	080333da 	.word	0x080333da
 80276e4:	20008d3c 	.word	0x20008d3c
 80276e8:	0803344d 	.word	0x0803344d
 80276ec:	080333a3 	.word	0x080333a3
 80276f0:	0803341d 	.word	0x0803341d
 80276f4:	08033493 	.word	0x08033493

080276f8 <P2P_SERVER_UpdateValue>:
 * @param  CharOpcode: Characteristic identifier
 * @param  Service_Instance: Instance of the service to which the characteristic belongs
 *
 */
tBleStatus P2P_SERVER_UpdateValue(P2P_SERVER_CharOpcode_t CharOpcode, P2P_SERVER_Data_t *pData)
{
 80276f8:	b537      	push	{r0, r1, r2, r4, r5, lr}
  tBleStatus ret = BLE_STATUS_INVALID_PARAMS;
  /* USER CODE BEGIN Service1_App_Update_Char_1 */

  /* USER CODE END Service1_App_Update_Char_1 */

  switch(CharOpcode)
 80276fa:	4605      	mov	r5, r0
 80276fc:	b128      	cbz	r0, 802770a <P2P_SERVER_UpdateValue+0x12>
 80276fe:	2801      	cmp	r0, #1
 8027700:	d01f      	beq.n	8027742 <P2P_SERVER_UpdateValue+0x4a>
 8027702:	2492      	movs	r4, #146	; 0x92
  /* USER CODE BEGIN Service1_App_Update_Char_2 */

  /* USER CODE END Service1_App_Update_Char_2 */

  return ret;
}
 8027704:	4620      	mov	r0, r4
 8027706:	b003      	add	sp, #12
 8027708:	bd30      	pop	{r4, r5, pc}
      ret = aci_gatt_update_char_value(P2P_SERVER_Context.P2p_serverSvcHdle,
 802770a:	680b      	ldr	r3, [r1, #0]
 802770c:	4817      	ldr	r0, [pc, #92]	; (802776c <P2P_SERVER_UpdateValue+0x74>)
 802770e:	9300      	str	r3, [sp, #0]
 8027710:	790b      	ldrb	r3, [r1, #4]
 8027712:	462a      	mov	r2, r5
 8027714:	8841      	ldrh	r1, [r0, #2]
 8027716:	8800      	ldrh	r0, [r0, #0]
 8027718:	f7f4 fd2b 	bl	801c172 <aci_gatt_update_char_value>
      if (ret != BLE_STATUS_SUCCESS)
 802771c:	4604      	mov	r4, r0
 802771e:	b140      	cbz	r0, 8027732 <P2P_SERVER_UpdateValue+0x3a>
        APP_DBG_MSG("  Fail   : aci_gatt_update_char_value LED_C command, error code: 0x%2X\n", ret);
 8027720:	462a      	mov	r2, r5
 8027722:	4b13      	ldr	r3, [pc, #76]	; (8027770 <P2P_SERVER_UpdateValue+0x78>)
 8027724:	9000      	str	r0, [sp, #0]
 8027726:	f04f 31ff 	mov.w	r1, #4294967295	; 0xffffffff
 802772a:	2001      	movs	r0, #1
 802772c:	f009 f8e8 	bl	8030900 <UTIL_ADV_TRACE_COND_FSend>
 8027730:	e7e8      	b.n	8027704 <P2P_SERVER_UpdateValue+0xc>
        APP_DBG_MSG("  Success: aci_gatt_update_char_value LED_C command\n");
 8027732:	4602      	mov	r2, r0
 8027734:	f04f 31ff 	mov.w	r1, #4294967295	; 0xffffffff
 8027738:	2001      	movs	r0, #1
 802773a:	4b0e      	ldr	r3, [pc, #56]	; (8027774 <P2P_SERVER_UpdateValue+0x7c>)
        APP_DBG_MSG("  Success: aci_gatt_update_char_value SWITCH_C command\n");
 802773c:	f009 f8e0 	bl	8030900 <UTIL_ADV_TRACE_COND_FSend>
 8027740:	e7e0      	b.n	8027704 <P2P_SERVER_UpdateValue+0xc>
      ret = aci_gatt_update_char_value(P2P_SERVER_Context.P2p_serverSvcHdle,
 8027742:	680b      	ldr	r3, [r1, #0]
 8027744:	4809      	ldr	r0, [pc, #36]	; (802776c <P2P_SERVER_UpdateValue+0x74>)
 8027746:	9300      	str	r3, [sp, #0]
 8027748:	790b      	ldrb	r3, [r1, #4]
 802774a:	2200      	movs	r2, #0
 802774c:	8881      	ldrh	r1, [r0, #4]
 802774e:	8800      	ldrh	r0, [r0, #0]
 8027750:	f7f4 fd0f 	bl	801c172 <aci_gatt_update_char_value>
      if (ret != BLE_STATUS_SUCCESS)
 8027754:	4604      	mov	r4, r0
 8027756:	b118      	cbz	r0, 8027760 <P2P_SERVER_UpdateValue+0x68>
        APP_DBG_MSG("  Fail   : aci_gatt_update_char_value SWITCH_C command, error code: 0x%2X\n", ret);
 8027758:	2200      	movs	r2, #0
 802775a:	4b07      	ldr	r3, [pc, #28]	; (8027778 <P2P_SERVER_UpdateValue+0x80>)
 802775c:	9000      	str	r0, [sp, #0]
 802775e:	e7e2      	b.n	8027726 <P2P_SERVER_UpdateValue+0x2e>
        APP_DBG_MSG("  Success: aci_gatt_update_char_value SWITCH_C command\n");
 8027760:	4602      	mov	r2, r0
 8027762:	f04f 31ff 	mov.w	r1, #4294967295	; 0xffffffff
 8027766:	4628      	mov	r0, r5
 8027768:	4b04      	ldr	r3, [pc, #16]	; (802777c <P2P_SERVER_UpdateValue+0x84>)
 802776a:	e7e7      	b.n	802773c <P2P_SERVER_UpdateValue+0x44>
 802776c:	20008d38 	.word	0x20008d38
 8027770:	080334c6 	.word	0x080334c6
 8027774:	0803350e 	.word	0x0803350e
 8027778:	08033543 	.word	0x08033543
 802777c:	0803358e 	.word	0x0803358e

08027780 <P2P_SERVER_APP_LED_BUTTON_context_Init>:
  return;
}

/* USER CODE BEGIN FD */
void P2P_SERVER_APP_LED_BUTTON_context_Init(void)
{  
 8027780:	b508      	push	{r3, lr}
  BSP_LED_Off(LED_BLUE);
 8027782:	2000      	movs	r0, #0
 8027784:	f003 faa6 	bl	802acd4 <BSP_LED_Off>
  P2P_SERVER_APP_Context.LedControl.Device_Led_Selection=0x01; /* Device1 */
 8027788:	2201      	movs	r2, #1
 802778a:	4b04      	ldr	r3, [pc, #16]	; (802779c <P2P_SERVER_APP_LED_BUTTON_context_Init+0x1c>)
 802778c:	705a      	strb	r2, [r3, #1]
  P2P_SERVER_APP_Context.LedControl.Led1=0x00; /* led OFF */
 802778e:	f44f 7280 	mov.w	r2, #256	; 0x100
 8027792:	805a      	strh	r2, [r3, #2]
  P2P_SERVER_APP_Context.ButtonControl.Device_Button_Selection=0x01;/* Device1 */
  P2P_SERVER_APP_Context.ButtonControl.ButtonStatus=0x00;
 8027794:	2200      	movs	r2, #0
 8027796:	711a      	strb	r2, [r3, #4]

  return;
}
 8027798:	bd08      	pop	{r3, pc}
 802779a:	bf00      	nop
 802779c:	20008d3e 	.word	0x20008d3e

080277a0 <P2P_SERVER_Switch_c_SendNotification>:
 *
 * LOCAL FUNCTIONS
 *
 *************************************************************/
__USED void P2P_SERVER_Switch_c_SendNotification(void) /* Property Notification */
{
 80277a0:	b513      	push	{r0, r1, r4, lr}
  p2p_server_notification_data.p_Payload = (uint8_t*)a_P2P_SERVER_UpdateCharData;
  p2p_server_notification_data.Length = 0;

  /* USER CODE BEGIN Service1Char2_NS_1*/

  if(P2P_SERVER_APP_Context.ButtonControl.ButtonStatus == 0x00)
 80277a2:	4a12      	ldr	r2, [pc, #72]	; (80277ec <P2P_SERVER_Switch_c_SendNotification+0x4c>)
  p2p_server_notification_data.p_Payload = (uint8_t*)a_P2P_SERVER_UpdateCharData;
 80277a4:	4912      	ldr	r1, [pc, #72]	; (80277f0 <P2P_SERVER_Switch_c_SendNotification+0x50>)
  if(P2P_SERVER_APP_Context.ButtonControl.ButtonStatus == 0x00)
 80277a6:	7913      	ldrb	r3, [r2, #4]
  } 
  else
  {
    P2P_SERVER_APP_Context.ButtonControl.ButtonStatus = 0x00;
  }
  a_P2P_SERVER_UpdateCharData[0] = 0x01; /* Device Led selection */
 80277a8:	2001      	movs	r0, #1
    P2P_SERVER_APP_Context.ButtonControl.ButtonStatus = 0x01;
 80277aa:	fab3 f383 	clz	r3, r3
 80277ae:	095b      	lsrs	r3, r3, #5
 80277b0:	7113      	strb	r3, [r2, #4]
  a_P2P_SERVER_UpdateCharData[1] = P2P_SERVER_APP_Context.ButtonControl.ButtonStatus;
 80277b2:	704b      	strb	r3, [r1, #1]
  /* Update notification data length */
  p2p_server_notification_data.Length = (p2p_server_notification_data.Length) + 2; 
 80277b4:	2302      	movs	r3, #2
  
  if(P2P_SERVER_APP_Context.Switch_c_Notification_Status == Switch_c_NOTIFICATION_ON)
 80277b6:	7814      	ldrb	r4, [r2, #0]
  p2p_server_notification_data.p_Payload = (uint8_t*)a_P2P_SERVER_UpdateCharData;
 80277b8:	9100      	str	r1, [sp, #0]
  if(P2P_SERVER_APP_Context.Switch_c_Notification_Status == Switch_c_NOTIFICATION_ON)
 80277ba:	4284      	cmp	r4, r0
  a_P2P_SERVER_UpdateCharData[0] = 0x01; /* Device Led selection */
 80277bc:	7008      	strb	r0, [r1, #0]
  p2p_server_notification_data.Length = (p2p_server_notification_data.Length) + 2; 
 80277be:	f88d 3004 	strb.w	r3, [sp, #4]
  if(P2P_SERVER_APP_Context.Switch_c_Notification_Status == Switch_c_NOTIFICATION_ON)
 80277c2:	d10c      	bne.n	80277de <P2P_SERVER_Switch_c_SendNotification+0x3e>
  { 
    APP_DBG_MSG("-- P2P APPLICATION SERVER : INFORM CLIENT BUTTON 1 PUSHED\n");
 80277c4:	f04f 31ff 	mov.w	r1, #4294967295	; 0xffffffff
 80277c8:	2200      	movs	r2, #0
 80277ca:	4620      	mov	r0, r4
 80277cc:	4b09      	ldr	r3, [pc, #36]	; (80277f4 <P2P_SERVER_Switch_c_SendNotification+0x54>)
 80277ce:	f009 f897 	bl	8030900 <UTIL_ADV_TRACE_COND_FSend>
  }
  /* USER CODE END Service1Char2_NS_1*/

  if (notification_on_off != Switch_c_NOTIFICATION_OFF)
  {
    P2P_SERVER_UpdateValue(P2P_SERVER_SWITCH_C, &p2p_server_notification_data);
 80277d2:	4669      	mov	r1, sp
 80277d4:	4620      	mov	r0, r4
 80277d6:	f7ff ff8f 	bl	80276f8 <P2P_SERVER_UpdateValue>
  /* USER CODE BEGIN Service1Char2_NS_Last*/

  /* USER CODE END Service1Char2_NS_Last*/

  return;
}
 80277da:	b002      	add	sp, #8
 80277dc:	bd10      	pop	{r4, pc}
    APP_DBG_MSG("-- P2P APPLICATION SERVER : CAN'T INFORM CLIENT - NOTIFICATION DISABLED\n"); 
 80277de:	2200      	movs	r2, #0
 80277e0:	f04f 31ff 	mov.w	r1, #4294967295	; 0xffffffff
 80277e4:	4b04      	ldr	r3, [pc, #16]	; (80277f8 <P2P_SERVER_Switch_c_SendNotification+0x58>)
 80277e6:	f009 f88b 	bl	8030900 <UTIL_ADV_TRACE_COND_FSend>
  return;
 80277ea:	e7f6      	b.n	80277da <P2P_SERVER_Switch_c_SendNotification+0x3a>
 80277ec:	20008d3e 	.word	0x20008d3e
 80277f0:	20008d46 	.word	0x20008d46
 80277f4:	080335c6 	.word	0x080335c6
 80277f8:	08033601 	.word	0x08033601

080277fc <P2P_SERVER_Notification>:
{
 80277fc:	b570      	push	{r4, r5, r6, lr}
  switch(p_Notification->EvtOpcode)
 80277fe:	7803      	ldrb	r3, [r0, #0]
{
 8027800:	4604      	mov	r4, r0
  switch(p_Notification->EvtOpcode)
 8027802:	2b03      	cmp	r3, #3
 8027804:	d827      	bhi.n	8027856 <P2P_SERVER_Notification+0x5a>
 8027806:	e8df f003 	tbb	[pc, r3]
 802780a:	0702      	.short	0x0702
 802780c:	3a27      	.short	0x3a27
    	BSP_LED_On(LED_RED);
 802780e:	2002      	movs	r0, #2
}
 8027810:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
    	BSP_LED_On(LED_RED);
 8027814:	f003 ba4e 	b.w	802acb4 <BSP_LED_On>
      if(p_Notification->DataTransfered.p_Payload[1] == 0x01)
 8027818:	6843      	ldr	r3, [r0, #4]
 802781a:	785d      	ldrb	r5, [r3, #1]
 802781c:	2d01      	cmp	r5, #1
 802781e:	d10b      	bne.n	8027838 <P2P_SERVER_Notification+0x3c>
        BSP_LED_On(LED_BLUE);
 8027820:	2000      	movs	r0, #0
 8027822:	f003 fa47 	bl	802acb4 <BSP_LED_On>
        APP_DBG_MSG("-- P2P APPLICATION SERVER : LED1 ON\n"); 
 8027826:	4b1c      	ldr	r3, [pc, #112]	; (8027898 <P2P_SERVER_Notification+0x9c>)
 8027828:	2200      	movs	r2, #0
 802782a:	f04f 31ff 	mov.w	r1, #4294967295	; 0xffffffff
 802782e:	4628      	mov	r0, r5
 8027830:	f009 f866 	bl	8030900 <UTIL_ADV_TRACE_COND_FSend>
        P2P_SERVER_APP_Context.LedControl.Led1 = 0x01; /* LED1 ON */
 8027834:	4b19      	ldr	r3, [pc, #100]	; (802789c <P2P_SERVER_Notification+0xa0>)
 8027836:	709d      	strb	r5, [r3, #2]
      if(p_Notification->DataTransfered.p_Payload[1] == 0x00)
 8027838:	6863      	ldr	r3, [r4, #4]
 802783a:	785c      	ldrb	r4, [r3, #1]
 802783c:	b95c      	cbnz	r4, 8027856 <P2P_SERVER_Notification+0x5a>
        BSP_LED_Off(LED_BLUE);
 802783e:	4620      	mov	r0, r4
 8027840:	f003 fa48 	bl	802acd4 <BSP_LED_Off>
        APP_DBG_MSG("-- P2P APPLICATION SERVER : LED1 OFF\n"); 
 8027844:	4b16      	ldr	r3, [pc, #88]	; (80278a0 <P2P_SERVER_Notification+0xa4>)
 8027846:	4622      	mov	r2, r4
 8027848:	f04f 31ff 	mov.w	r1, #4294967295	; 0xffffffff
 802784c:	2001      	movs	r0, #1
 802784e:	f009 f857 	bl	8030900 <UTIL_ADV_TRACE_COND_FSend>
        P2P_SERVER_APP_Context.LedControl.Led1 = 0x00; /* LED1 OFF */
 8027852:	4b12      	ldr	r3, [pc, #72]	; (802789c <P2P_SERVER_Notification+0xa0>)
 8027854:	709c      	strb	r4, [r3, #2]
}
 8027856:	bd70      	pop	{r4, r5, r6, pc}
      P2P_SERVER_APP_Context.Switch_c_Notification_Status = Switch_c_NOTIFICATION_ON;
 8027858:	2401      	movs	r4, #1
 802785a:	4b10      	ldr	r3, [pc, #64]	; (802789c <P2P_SERVER_Notification+0xa0>)
      APP_DBG_MSG("-- P2P APPLICATION SERVER : NOTIFICATION ENABLED\n"); 
 802785c:	2200      	movs	r2, #0
      P2P_SERVER_APP_Context.Switch_c_Notification_Status = Switch_c_NOTIFICATION_ON;
 802785e:	701c      	strb	r4, [r3, #0]
      APP_DBG_MSG("-- P2P APPLICATION SERVER : NOTIFICATION ENABLED\n"); 
 8027860:	f04f 31ff 	mov.w	r1, #4294967295	; 0xffffffff
 8027864:	4b0f      	ldr	r3, [pc, #60]	; (80278a4 <P2P_SERVER_Notification+0xa8>)
 8027866:	4620      	mov	r0, r4
 8027868:	f009 f84a 	bl	8030900 <UTIL_ADV_TRACE_COND_FSend>
      APP_DBG_MSG(" \n\r");
 802786c:	2200      	movs	r2, #0
 802786e:	4b0e      	ldr	r3, [pc, #56]	; (80278a8 <P2P_SERVER_Notification+0xac>)
      APP_DBG_MSG(" \n\r");
 8027870:	f04f 31ff 	mov.w	r1, #4294967295	; 0xffffffff
}
 8027874:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
      APP_DBG_MSG(" \n\r");
 8027878:	2001      	movs	r0, #1
 802787a:	f009 b841 	b.w	8030900 <UTIL_ADV_TRACE_COND_FSend>
      P2P_SERVER_APP_Context.Switch_c_Notification_Status = Switch_c_NOTIFICATION_OFF;
 802787e:	2400      	movs	r4, #0
 8027880:	4b06      	ldr	r3, [pc, #24]	; (802789c <P2P_SERVER_Notification+0xa0>)
      APP_DBG_MSG("-- P2P APPLICATION SERVER : NOTIFICATION DISABLED\n"); 
 8027882:	4622      	mov	r2, r4
      P2P_SERVER_APP_Context.Switch_c_Notification_Status = Switch_c_NOTIFICATION_OFF;
 8027884:	701c      	strb	r4, [r3, #0]
      APP_DBG_MSG("-- P2P APPLICATION SERVER : NOTIFICATION DISABLED\n"); 
 8027886:	f04f 31ff 	mov.w	r1, #4294967295	; 0xffffffff
 802788a:	4b08      	ldr	r3, [pc, #32]	; (80278ac <P2P_SERVER_Notification+0xb0>)
 802788c:	2001      	movs	r0, #1
 802788e:	f009 f837 	bl	8030900 <UTIL_ADV_TRACE_COND_FSend>
      APP_DBG_MSG(" \n\r");
 8027892:	4622      	mov	r2, r4
 8027894:	4b04      	ldr	r3, [pc, #16]	; (80278a8 <P2P_SERVER_Notification+0xac>)
 8027896:	e7eb      	b.n	8027870 <P2P_SERVER_Notification+0x74>
 8027898:	0803364a 	.word	0x0803364a
 802789c:	20008d3e 	.word	0x20008d3e
 80278a0:	0803366f 	.word	0x0803366f
 80278a4:	08033695 	.word	0x08033695
 80278a8:	080333d6 	.word	0x080333d6
 80278ac:	080336c7 	.word	0x080336c7

080278b0 <P2P_SERVER_APP_EvtRx>:
  switch(p_Notification->EvtOpcode)
 80278b0:	7803      	ldrb	r3, [r0, #0]
 80278b2:	2b01      	cmp	r3, #1
 80278b4:	d101      	bne.n	80278ba <P2P_SERVER_APP_EvtRx+0xa>
      P2P_SERVER_APP_LED_BUTTON_context_Init();
 80278b6:	f7ff bf63 	b.w	8027780 <P2P_SERVER_APP_LED_BUTTON_context_Init>
}
 80278ba:	4770      	bx	lr

080278bc <P2P_SERVER_APP_Init>:
{
 80278bc:	b508      	push	{r3, lr}
  P2P_SERVER_Init();
 80278be:	f7ff fe19 	bl	80274f4 <P2P_SERVER_Init>
  UTIL_SEQ_RegTask( 1U << CFG_TASK_SEND_NOTIF_ID, UTIL_SEQ_RFU, P2P_SERVER_Switch_c_SendNotification);
 80278c2:	4a06      	ldr	r2, [pc, #24]	; (80278dc <P2P_SERVER_APP_Init+0x20>)
 80278c4:	2100      	movs	r1, #0
 80278c6:	2020      	movs	r0, #32
 80278c8:	f009 f9c6 	bl	8030c58 <UTIL_SEQ_RegTask>
  P2P_SERVER_APP_Context.Switch_c_Notification_Status= Switch_c_NOTIFICATION_OFF;
 80278cc:	2200      	movs	r2, #0
 80278ce:	4b04      	ldr	r3, [pc, #16]	; (80278e0 <P2P_SERVER_APP_Init+0x24>)
 80278d0:	701a      	strb	r2, [r3, #0]
}
 80278d2:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
  P2P_SERVER_APP_LED_BUTTON_context_Init();
 80278d6:	f7ff bf53 	b.w	8027780 <P2P_SERVER_APP_LED_BUTTON_context_Init>
 80278da:	bf00      	nop
 80278dc:	080277a1 	.word	0x080277a1
 80278e0:	20008d3e 	.word	0x20008d3e

080278e4 <BLEPLAT_Init>:
#include "ble_timer.h"

/*****************************************************************************/

void BLEPLAT_Init( void )
{
 80278e4:	b508      	push	{r3, lr}
  BAES_Reset( );
 80278e6:	f003 f91f 	bl	802ab28 <BAES_Reset>
  BPKA_Reset( );
 80278ea:	f000 f82f 	bl	802794c <BPKA_Reset>
  BLE_TIMER_Init();
}
 80278ee:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
  BLE_TIMER_Init();
 80278f2:	f002 bd07 	b.w	802a304 <BLE_TIMER_Init>

080278f6 <BLEPLAT_NvmAdd>:
int BLEPLAT_NvmAdd( uint8_t type,
                    const uint8_t* data,
                    uint16_t size,
                    const uint8_t* extra_data,
                    uint16_t extra_size )
{
 80278f6:	b410      	push	{r4}
 80278f8:	f8bd 4004 	ldrh.w	r4, [sp, #4]
  return NVM_Add( type, data, size, extra_data, extra_size );
 80278fc:	9401      	str	r4, [sp, #4]
}
 80278fe:	f85d 4b04 	ldr.w	r4, [sp], #4
  return NVM_Add( type, data, size, extra_data, extra_size );
 8027902:	f002 baf9 	b.w	8029ef8 <NVM_Add>

08027906 <BLEPLAT_NvmGet>:
int BLEPLAT_NvmGet( uint8_t mode,
                    uint8_t type,
                    uint16_t offset,
                    uint8_t* data,
                    uint16_t size )
{
 8027906:	b410      	push	{r4}
 8027908:	f8bd 4004 	ldrh.w	r4, [sp, #4]
  return NVM_Get( mode, type, offset, data, size );
 802790c:	9401      	str	r4, [sp, #4]
}
 802790e:	f85d 4b04 	ldr.w	r4, [sp], #4
  return NVM_Get( mode, type, offset, data, size );
 8027912:	f002 ba6f 	b.w	8029df4 <NVM_Get>

08027916 <BLEPLAT_NvmCompare>:

int BLEPLAT_NvmCompare( uint16_t offset,
                        const uint8_t* data,
                        uint16_t size )
{
  return NVM_Compare( offset, data, size );
 8027916:	f002 bac7 	b.w	8029ea8 <NVM_Compare>

0802791a <BLEPLAT_NvmDiscard>:

/*****************************************************************************/

void BLEPLAT_NvmDiscard( uint8_t mode )
{
  NVM_Discard( mode );
 802791a:	f002 bb8f 	b.w	802a03c <NVM_Discard>

0802791e <BLEPLAT_RngGet>:

void BLEPLAT_RngGet( uint8_t n,
                     uint32_t* val )
{
  /* Read 32-bit random values from HW driver */
  HW_RNG_Get( n, val );
 802791e:	f000 bcb3 	b.w	8028288 <HW_RNG_Get>

08027922 <BLEPLAT_AesEcbEncrypt>:

void BLEPLAT_AesEcbEncrypt( const uint8_t* key,
                            const uint8_t* input,
                            uint8_t* output )
{
  BAES_EcbCrypt( key, input, output, 1 );
 8027922:	2301      	movs	r3, #1
 8027924:	f003 b902 	b.w	802ab2c <BAES_EcbCrypt>

08027928 <BLEPLAT_AesCmacSetKey>:

/*****************************************************************************/

void BLEPLAT_AesCmacSetKey( const uint8_t* key )
{
  BAES_CmacSetKey( key );
 8027928:	f003 b83a 	b.w	802a9a0 <BAES_CmacSetKey>

0802792c <BLEPLAT_AesCmacCompute>:

void BLEPLAT_AesCmacCompute( const uint8_t* input,
                             uint32_t input_length,
                             uint8_t* output_tag )
{
  BAES_CmacCompute( input, input_length, output_tag );
 802792c:	f003 b84c 	b.w	802a9c8 <BAES_CmacCompute>

08027930 <BLEPLAT_PkaStartP256Key>:

/*****************************************************************************/

int BLEPLAT_PkaStartP256Key( const uint32_t* local_private_key )
{
  return BPKA_StartP256Key( local_private_key );
 8027930:	f000 b842 	b.w	80279b8 <BPKA_StartP256Key>

08027934 <BLEPLAT_PkaReadP256Key>:

/*****************************************************************************/

void BLEPLAT_PkaReadP256Key( uint32_t* local_public_key )
{
  BPKA_ReadP256Key( local_public_key );
 8027934:	f000 b814 	b.w	8027960 <BPKA_ReadP256Key>

08027938 <BLEPLAT_PkaStartDhKey>:
/*****************************************************************************/

int BLEPLAT_PkaStartDhKey( const uint32_t* local_private_key,
                           const uint32_t* remote_public_key )
{
  return BPKA_StartDhKey( local_private_key, remote_public_key );
 8027938:	f000 b854 	b.w	80279e4 <BPKA_StartDhKey>

0802793c <BLEPLAT_PkaReadDhKey>:

/*****************************************************************************/

int BLEPLAT_PkaReadDhKey( uint32_t* dh_key )
{
  return BPKA_ReadDhKey( dh_key );
 802793c:	f000 b822 	b.w	8027984 <BPKA_ReadDhKey>

08027940 <BPKACB_Complete>:

/*****************************************************************************/

void BPKACB_Complete( void )
{
  BLEPLATCB_PkaComplete( );
 8027940:	f7f9 b8d7 	b.w	8020af2 <BLEPLATCB_PkaComplete>

08027944 <BLEPLAT_TimerStart>:
/*****************************************************************************/

uint8_t BLEPLAT_TimerStart( uint8_t layer,
                            uint32_t timeout )
{
  return BLE_TIMER_Start( (uint16_t)layer, timeout );
 8027944:	f002 bd0a 	b.w	802a35c <BLE_TIMER_Start>

08027948 <BLEPLAT_TimerStop>:

/*****************************************************************************/

void BLEPLAT_TimerStop( uint8_t layer )
{
  BLE_TIMER_Stop( (uint16_t)layer );
 8027948:	f002 bce6 	b.w	802a318 <BLE_TIMER_Stop>

0802794c <BPKA_Reset>:
static uint32_t BPKA_buffer[24];

/*****************************************************************************/

void BPKA_Reset( void )
{
 802794c:	b508      	push	{r3, lr}
  /* Disable PKA hardware */
  HW_PKA_Disable( );
 802794e:	f000 fb95 	bl	802807c <HW_PKA_Disable>

  BPKA_state = BPKA_IDLE;
 8027952:	2200      	movs	r2, #0
 8027954:	4b01      	ldr	r3, [pc, #4]	; (802795c <BPKA_Reset+0x10>)
 8027956:	701a      	strb	r2, [r3, #0]
}
 8027958:	bd08      	pop	{r3, pc}
 802795a:	bf00      	nop
 802795c:	20008ea1 	.word	0x20008ea1

08027960 <BPKA_ReadP256Key>:
/*****************************************************************************/

void BPKA_ReadP256Key( uint32_t* local_public_key )
{
  /* Get local public key from buffer */
  memcpy( local_public_key, BPKA_buffer, 64 );
 8027960:	4603      	mov	r3, r0
{
 8027962:	b530      	push	{r4, r5, lr}
  memcpy( local_public_key, BPKA_buffer, 64 );
 8027964:	4c06      	ldr	r4, [pc, #24]	; (8027980 <BPKA_ReadP256Key+0x20>)
 8027966:	f104 0540 	add.w	r5, r4, #64	; 0x40
 802796a:	4622      	mov	r2, r4
 802796c:	ca03      	ldmia	r2!, {r0, r1}
 802796e:	42aa      	cmp	r2, r5
 8027970:	6018      	str	r0, [r3, #0]
 8027972:	6059      	str	r1, [r3, #4]
 8027974:	4614      	mov	r4, r2
 8027976:	f103 0308 	add.w	r3, r3, #8
 802797a:	d1f6      	bne.n	802796a <BPKA_ReadP256Key+0xa>
}
 802797c:	bd30      	pop	{r4, r5, pc}
 802797e:	bf00      	nop
 8027980:	20008e40 	.word	0x20008e40

08027984 <BPKA_ReadDhKey>:
}

/*****************************************************************************/

int BPKA_ReadDhKey( uint32_t* dh_key )
{
 8027984:	b530      	push	{r4, r5, lr}
  if ( BPKA_error )
 8027986:	4b0a      	ldr	r3, [pc, #40]	; (80279b0 <BPKA_ReadDhKey+0x2c>)
 8027988:	781b      	ldrb	r3, [r3, #0]
 802798a:	b973      	cbnz	r3, 80279aa <BPKA_ReadDhKey+0x26>
    return BPKA_EOF;

  /* Get DH key from buffer */
  memcpy( dh_key, BPKA_buffer, 32 );
 802798c:	4603      	mov	r3, r0
 802798e:	4c09      	ldr	r4, [pc, #36]	; (80279b4 <BPKA_ReadDhKey+0x30>)
 8027990:	f104 0520 	add.w	r5, r4, #32
 8027994:	4622      	mov	r2, r4
 8027996:	ca03      	ldmia	r2!, {r0, r1}
 8027998:	42aa      	cmp	r2, r5
 802799a:	6018      	str	r0, [r3, #0]
 802799c:	6059      	str	r1, [r3, #4]
 802799e:	4614      	mov	r4, r2
 80279a0:	f103 0308 	add.w	r3, r3, #8
 80279a4:	d1f6      	bne.n	8027994 <BPKA_ReadDhKey+0x10>

  return BPKA_OK;
 80279a6:	2000      	movs	r0, #0
}
 80279a8:	bd30      	pop	{r4, r5, pc}
    return BPKA_EOF;
 80279aa:	f06f 0002 	mvn.w	r0, #2
 80279ae:	e7fb      	b.n	80279a8 <BPKA_ReadDhKey+0x24>
 80279b0:	20008ea0 	.word	0x20008ea0
 80279b4:	20008e40 	.word	0x20008e40

080279b8 <BPKA_StartP256Key>:
{
 80279b8:	b510      	push	{r4, lr}
 80279ba:	4604      	mov	r4, r0
  if ( ! HW_PKA_Enable( ) )
 80279bc:	f000 fad8 	bl	8027f70 <HW_PKA_Enable>
 80279c0:	b158      	cbz	r0, 80279da <BPKA_StartP256Key+0x22>
  HW_PKA_P256_StartEccScalarMul( local_private_key, NULL, NULL );
 80279c2:	2200      	movs	r2, #0
 80279c4:	4620      	mov	r0, r4
 80279c6:	4611      	mov	r1, r2
 80279c8:	f000 fd16 	bl	80283f8 <HW_PKA_P256_StartEccScalarMul>
  BPKA_state = BPKA_P256_KEY_GEN;
 80279cc:	2201      	movs	r2, #1
 80279ce:	4b04      	ldr	r3, [pc, #16]	; (80279e0 <BPKA_StartP256Key+0x28>)
 80279d0:	701a      	strb	r2, [r3, #0]
  BPKACB_Process( );
 80279d2:	f7fe f90c 	bl	8025bee <BPKACB_Process>
  return BPKA_OK;
 80279d6:	2000      	movs	r0, #0
}
 80279d8:	bd10      	pop	{r4, pc}
    return BPKA_BUSY;
 80279da:	f06f 0001 	mvn.w	r0, #1
 80279de:	e7fb      	b.n	80279d8 <BPKA_StartP256Key+0x20>
 80279e0:	20008ea1 	.word	0x20008ea1

080279e4 <BPKA_StartDhKey>:
{
 80279e4:	b570      	push	{r4, r5, r6, lr}
 80279e6:	4605      	mov	r5, r0
 80279e8:	460c      	mov	r4, r1
  if ( ! HW_PKA_Enable( ) )
 80279ea:	f000 fac1 	bl	8027f70 <HW_PKA_Enable>
 80279ee:	b320      	cbz	r0, 8027a3a <BPKA_StartDhKey+0x56>
  HW_PKA_P256_StartRangeCheck( remote_public_key );
 80279f0:	4620      	mov	r0, r4
 80279f2:	f000 fc97 	bl	8028324 <HW_PKA_P256_StartRangeCheck>
  memcpy( BPKA_buffer, local_private_key, 32 );
 80279f6:	462b      	mov	r3, r5
 80279f8:	4d11      	ldr	r5, [pc, #68]	; (8027a40 <BPKA_StartDhKey+0x5c>)
 80279fa:	f103 0620 	add.w	r6, r3, #32
 80279fe:	462a      	mov	r2, r5
 8027a00:	6818      	ldr	r0, [r3, #0]
 8027a02:	6859      	ldr	r1, [r3, #4]
 8027a04:	3308      	adds	r3, #8
 8027a06:	c203      	stmia	r2!, {r0, r1}
 8027a08:	42b3      	cmp	r3, r6
 8027a0a:	4615      	mov	r5, r2
 8027a0c:	d1f7      	bne.n	80279fe <BPKA_StartDhKey+0x1a>
  memcpy( BPKA_buffer + 8, remote_public_key, 64 );
 8027a0e:	4623      	mov	r3, r4
 8027a10:	4c0c      	ldr	r4, [pc, #48]	; (8027a44 <BPKA_StartDhKey+0x60>)
 8027a12:	f103 0540 	add.w	r5, r3, #64	; 0x40
 8027a16:	4622      	mov	r2, r4
 8027a18:	6818      	ldr	r0, [r3, #0]
 8027a1a:	6859      	ldr	r1, [r3, #4]
 8027a1c:	3308      	adds	r3, #8
 8027a1e:	c203      	stmia	r2!, {r0, r1}
 8027a20:	42ab      	cmp	r3, r5
 8027a22:	4614      	mov	r4, r2
 8027a24:	d1f7      	bne.n	8027a16 <BPKA_StartDhKey+0x32>
  BPKA_state = BPKA_RANGE_X_CHECK;
 8027a26:	2202      	movs	r2, #2
 8027a28:	4b07      	ldr	r3, [pc, #28]	; (8027a48 <BPKA_StartDhKey+0x64>)
 8027a2a:	701a      	strb	r2, [r3, #0]
  BPKA_error = 1;
 8027a2c:	2201      	movs	r2, #1
 8027a2e:	4b07      	ldr	r3, [pc, #28]	; (8027a4c <BPKA_StartDhKey+0x68>)
 8027a30:	701a      	strb	r2, [r3, #0]
  BPKACB_Process( );
 8027a32:	f7fe f8dc 	bl	8025bee <BPKACB_Process>
  return BPKA_OK;
 8027a36:	2000      	movs	r0, #0
}
 8027a38:	bd70      	pop	{r4, r5, r6, pc}
    return BPKA_BUSY;
 8027a3a:	f06f 0001 	mvn.w	r0, #1
 8027a3e:	e7fb      	b.n	8027a38 <BPKA_StartDhKey+0x54>
 8027a40:	20008e40 	.word	0x20008e40
 8027a44:	20008e60 	.word	0x20008e60
 8027a48:	20008ea1 	.word	0x20008ea1
 8027a4c:	20008ea0 	.word	0x20008ea0

08027a50 <BPKA_Process>:
}

/*****************************************************************************/

int BPKA_Process( void )
{
 8027a50:	b510      	push	{r4, lr}
  /* This function implements the offline key computation using the PKA
   */
  if ( BPKA_state == BPKA_IDLE )
 8027a52:	4c23      	ldr	r4, [pc, #140]	; (8027ae0 <BPKA_Process+0x90>)
 8027a54:	7820      	ldrb	r0, [r4, #0]
 8027a56:	b1a8      	cbz	r0, 8027a84 <BPKA_Process+0x34>
  {
    return BPKA_OK;
  }

  /* Check if the current operation is finished */
  if ( ! HW_PKA_EndOfOperation( ) )
 8027a58:	f000 faf0 	bl	802803c <HW_PKA_EndOfOperation>
 8027a5c:	b1e0      	cbz	r0, 8027a98 <BPKA_Process+0x48>
    return BPKA_BUSY;

  switch ( BPKA_state )
 8027a5e:	7823      	ldrb	r3, [r4, #0]
 8027a60:	3b01      	subs	r3, #1
 8027a62:	2b04      	cmp	r3, #4
 8027a64:	d809      	bhi.n	8027a7a <BPKA_Process+0x2a>
 8027a66:	e8df f003 	tbb	[pc, r3]
 8027a6a:	0e03      	.short	0x0e03
 8027a6c:	251a      	.short	0x251a
 8027a6e:	32          	.byte	0x32
 8027a6f:	00          	.byte	0x00
  {
  case BPKA_P256_KEY_GEN:

    /* Read the PKA scalar multiplication result which is the local public
       key */
    HW_PKA_P256_ReadEccScalarMul( BPKA_buffer, BPKA_buffer + 8 );
 8027a70:	491c      	ldr	r1, [pc, #112]	; (8027ae4 <BPKA_Process+0x94>)
 8027a72:	f1a1 0020 	sub.w	r0, r1, #32
 8027a76:	f000 fd0f 	bl	8028498 <HW_PKA_P256_ReadEccScalarMul>

    break;
  }

  /* Callback to inform the BLE stack of the completion of PKA operation */
  BPKACB_Complete( );
 8027a7a:	f7ff ff61 	bl	8027940 <BPKACB_Complete>

  /* End of process: reset the PKA module */
  BPKA_Reset( );
 8027a7e:	f7ff ff65 	bl	802794c <BPKA_Reset>

  return BPKA_OK;
 8027a82:	2000      	movs	r0, #0
}
 8027a84:	bd10      	pop	{r4, pc}
    if ( ! HW_PKA_P256_IsRangeCheckOk( ) )
 8027a86:	f000 fc69 	bl	802835c <HW_PKA_P256_IsRangeCheckOk>
 8027a8a:	2800      	cmp	r0, #0
 8027a8c:	d0f5      	beq.n	8027a7a <BPKA_Process+0x2a>
    HW_PKA_P256_StartRangeCheck( BPKA_buffer + 16 );
 8027a8e:	4816      	ldr	r0, [pc, #88]	; (8027ae8 <BPKA_Process+0x98>)
 8027a90:	f000 fc48 	bl	8028324 <HW_PKA_P256_StartRangeCheck>
    BPKA_state = BPKA_RANGE_Y_CHECK;
 8027a94:	2303      	movs	r3, #3
    BPKA_state = BPKA_POINT_CHECK;
 8027a96:	7023      	strb	r3, [r4, #0]
    return BPKA_BUSY;
 8027a98:	f06f 0001 	mvn.w	r0, #1
 8027a9c:	e7f2      	b.n	8027a84 <BPKA_Process+0x34>
    if ( ! HW_PKA_P256_IsRangeCheckOk( ) )
 8027a9e:	f000 fc5d 	bl	802835c <HW_PKA_P256_IsRangeCheckOk>
 8027aa2:	2800      	cmp	r0, #0
 8027aa4:	d0e9      	beq.n	8027a7a <BPKA_Process+0x2a>
    HW_PKA_P256_StartPointCheck( BPKA_buffer + 8,
 8027aa6:	4910      	ldr	r1, [pc, #64]	; (8027ae8 <BPKA_Process+0x98>)
 8027aa8:	f1a1 0020 	sub.w	r0, r1, #32
 8027aac:	f000 fc62 	bl	8028374 <HW_PKA_P256_StartPointCheck>
    BPKA_state = BPKA_POINT_CHECK;
 8027ab0:	2304      	movs	r3, #4
 8027ab2:	e7f0      	b.n	8027a96 <BPKA_Process+0x46>
    if ( ! HW_PKA_P256_IsPointCheckOk( ) )
 8027ab4:	f000 fc96 	bl	80283e4 <HW_PKA_P256_IsPointCheckOk>
 8027ab8:	2800      	cmp	r0, #0
 8027aba:	d0de      	beq.n	8027a7a <BPKA_Process+0x2a>
    HW_PKA_P256_StartEccScalarMul( BPKA_buffer,
 8027abc:	4a0a      	ldr	r2, [pc, #40]	; (8027ae8 <BPKA_Process+0x98>)
 8027abe:	f1a2 0120 	sub.w	r1, r2, #32
 8027ac2:	f1a2 0040 	sub.w	r0, r2, #64	; 0x40
 8027ac6:	f000 fc97 	bl	80283f8 <HW_PKA_P256_StartEccScalarMul>
    BPKA_state = BPKA_DH_KEY_GEN;
 8027aca:	2305      	movs	r3, #5
 8027acc:	e7e3      	b.n	8027a96 <BPKA_Process+0x46>
    HW_PKA_P256_ReadEccScalarMul( BPKA_buffer, NULL );
 8027ace:	2100      	movs	r1, #0
 8027ad0:	4806      	ldr	r0, [pc, #24]	; (8027aec <BPKA_Process+0x9c>)
 8027ad2:	f000 fce1 	bl	8028498 <HW_PKA_P256_ReadEccScalarMul>
    BPKA_error = 0;
 8027ad6:	2200      	movs	r2, #0
 8027ad8:	4b05      	ldr	r3, [pc, #20]	; (8027af0 <BPKA_Process+0xa0>)
 8027ada:	701a      	strb	r2, [r3, #0]
    break;
 8027adc:	e7cd      	b.n	8027a7a <BPKA_Process+0x2a>
 8027ade:	bf00      	nop
 8027ae0:	20008ea1 	.word	0x20008ea1
 8027ae4:	20008e60 	.word	0x20008e60
 8027ae8:	20008e80 	.word	0x20008e80
 8027aec:	20008e40 	.word	0x20008e40
 8027af0:	20008ea0 	.word	0x20008ea0

08027af4 <BPKA_BG_Process>:

void BPKA_BG_Process( void )
{
 8027af4:	b508      	push	{r3, lr}
  if( BPKA_Process( ) != 0)
 8027af6:	f7ff ffab 	bl	8027a50 <BPKA_Process>
 8027afa:	b108      	cbz	r0, 8027b00 <BPKA_BG_Process+0xc>
  {
    BPKACB_Process( );
 8027afc:	f7fe f877 	bl	8025bee <BPKACB_Process>
  }
}
 8027b00:	bd08      	pop	{r3, pc}

08027b02 <BleStackCB_Process>:
void BleStackCB_Process(void)
{
  /* USER CODE BEGIN BleStackCB_Process 0 */

  /* USER CODE END BleStackCB_Process 0 */
  UTIL_SEQ_SetTask( 1U << CFG_TASK_BLE_HOST, CFG_SCH_PRIO_0);
 8027b02:	2100      	movs	r1, #0
 8027b04:	f44f 7080 	mov.w	r0, #256	; 0x100
 8027b08:	f008 bfd0 	b.w	8030aac <UTIL_SEQ_SetTask>

08027b0c <HostStack_Process>:
  BleStackCB_Process();
 8027b0c:	f7ff bff9 	b.w	8027b02 <BleStackCB_Process>

08027b10 <LINKLAYER_PLAT_ClockInit>:
  * @retval None
  */
void LINKLAYER_PLAT_ClockInit()
{
  /* Select LSE as Sleep CLK */
  __HAL_RCC_RADIOSLPTIM_CONFIG(RCC_RADIOSTCLKSOURCE_LSE);
 8027b10:	4b0b      	ldr	r3, [pc, #44]	; (8027b40 <LINKLAYER_PLAT_ClockInit+0x30>)
{
 8027b12:	b082      	sub	sp, #8
  __HAL_RCC_RADIOSLPTIM_CONFIG(RCC_RADIOSTCLKSOURCE_LSE);
 8027b14:	f8d3 20f0 	ldr.w	r2, [r3, #240]	; 0xf0
 8027b18:	f422 2240 	bic.w	r2, r2, #786432	; 0xc0000
 8027b1c:	f442 2280 	orr.w	r2, r2, #262144	; 0x40000
 8027b20:	f8c3 20f0 	str.w	r2, [r3, #240]	; 0xf0

  /* Enable AHB5ENR peripheral clock (bus CLK) */
  __HAL_RCC_RADIO_CLK_ENABLE();
 8027b24:	f8d3 2098 	ldr.w	r2, [r3, #152]	; 0x98
 8027b28:	f042 0201 	orr.w	r2, r2, #1
 8027b2c:	f8c3 2098 	str.w	r2, [r3, #152]	; 0x98
 8027b30:	f8d3 3098 	ldr.w	r3, [r3, #152]	; 0x98
 8027b34:	f003 0301 	and.w	r3, r3, #1
 8027b38:	9301      	str	r3, [sp, #4]
 8027b3a:	9b01      	ldr	r3, [sp, #4]
}
 8027b3c:	b002      	add	sp, #8
 8027b3e:	4770      	bx	lr
 8027b40:	46020c00 	.word	0x46020c00

08027b44 <LINKLAYER_PLAT_DelayUs>:

void LINKLAYER_PLAT_DelayUs(uint32_t delay)
{
__IO register uint32_t Delay = delay * (SystemCoreClock / 1000000U);
 8027b44:	4b07      	ldr	r3, [pc, #28]	; (8027b64 <LINKLAYER_PLAT_DelayUs+0x20>)
 8027b46:	4a08      	ldr	r2, [pc, #32]	; (8027b68 <LINKLAYER_PLAT_DelayUs+0x24>)
 8027b48:	681b      	ldr	r3, [r3, #0]
{
 8027b4a:	b082      	sub	sp, #8
__IO register uint32_t Delay = delay * (SystemCoreClock / 1000000U);
 8027b4c:	fbb3 f3f2 	udiv	r3, r3, r2
 8027b50:	4358      	muls	r0, r3
 8027b52:	9001      	str	r0, [sp, #4]
	do
	{
		__NOP();
 8027b54:	bf00      	nop
	}
	while (Delay --);
 8027b56:	9b01      	ldr	r3, [sp, #4]
 8027b58:	1e5a      	subs	r2, r3, #1
 8027b5a:	9201      	str	r2, [sp, #4]
 8027b5c:	2b00      	cmp	r3, #0
 8027b5e:	d1f9      	bne.n	8027b54 <LINKLAYER_PLAT_DelayUs+0x10>
}
 8027b60:	b002      	add	sp, #8
 8027b62:	4770      	bx	lr
 8027b64:	200004d0 	.word	0x200004d0
 8027b68:	000f4240 	.word	0x000f4240

08027b6c <LINKLAYER_PLAT_Assert>:

void LINKLAYER_PLAT_Assert(uint8_t condition)
{
  assert_param(condition);
 8027b6c:	b918      	cbnz	r0, 8027b76 <LINKLAYER_PLAT_Assert+0xa>
 8027b6e:	2150      	movs	r1, #80	; 0x50
 8027b70:	4801      	ldr	r0, [pc, #4]	; (8027b78 <LINKLAYER_PLAT_Assert+0xc>)
 8027b72:	f7fe bb13 	b.w	802619c <assert_failed>
}
 8027b76:	4770      	bx	lr
 8027b78:	080336fa 	.word	0x080336fa

08027b7c <LINKLAYER_PLAT_HclkEnable>:

void LINKLAYER_PLAT_HclkEnable()
{
  __HAL_RCC_RADIO_CLK_ENABLE();
 8027b7c:	4b07      	ldr	r3, [pc, #28]	; (8027b9c <LINKLAYER_PLAT_HclkEnable+0x20>)
{
 8027b7e:	b082      	sub	sp, #8
  __HAL_RCC_RADIO_CLK_ENABLE();
 8027b80:	f8d3 2098 	ldr.w	r2, [r3, #152]	; 0x98
 8027b84:	f042 0201 	orr.w	r2, r2, #1
 8027b88:	f8c3 2098 	str.w	r2, [r3, #152]	; 0x98
 8027b8c:	f8d3 3098 	ldr.w	r3, [r3, #152]	; 0x98
 8027b90:	f003 0301 	and.w	r3, r3, #1
 8027b94:	9301      	str	r3, [sp, #4]
 8027b96:	9b01      	ldr	r3, [sp, #4]
}
 8027b98:	b002      	add	sp, #8
 8027b9a:	4770      	bx	lr
 8027b9c:	46020c00 	.word	0x46020c00

08027ba0 <LINKLAYER_PLAT_HclkDisable>:

void LINKLAYER_PLAT_HclkDisable()
{

}
 8027ba0:	4770      	bx	lr

08027ba2 <LINKLAYER_PLAT_WaitHclkRdy>:

void LINKLAYER_PLAT_WaitHclkRdy(void)
{
 8027ba2:	b508      	push	{r3, lr}
  while(HAL_RCCEx_GetRadioBusClockReadiness() != RCC_RADIO_BUS_CLOCK_READY);
 8027ba4:	f005 ffd0 	bl	802db48 <HAL_RCCEx_GetRadioBusClockReadiness>
 8027ba8:	f5b0 3f00 	cmp.w	r0, #131072	; 0x20000
 8027bac:	d1fa      	bne.n	8027ba4 <LINKLAYER_PLAT_WaitHclkRdy+0x2>
}
 8027bae:	bd08      	pop	{r3, pc}

08027bb0 <LINKLAYER_PLAT_AclkCtrl>:

void LINKLAYER_PLAT_AclkCtrl(uint8_t enable)
{
 8027bb0:	b508      	push	{r3, lr}
  if(enable){
 8027bb2:	b130      	cbz	r0, 8027bc2 <LINKLAYER_PLAT_AclkCtrl+0x12>
    /* Enable RADIO baseband clock (active CLK) */
    HAL_RCCEx_EnableRadioBBClock();
 8027bb4:	f005 ffb4 	bl	802db20 <HAL_RCCEx_EnableRadioBBClock>
  return ((READ_BIT(RCC->CR, RCC_CR_HSERDY) == RCC_CR_HSERDY) ? 1UL : 0UL);
 8027bb8:	4b04      	ldr	r3, [pc, #16]	; (8027bcc <LINKLAYER_PLAT_AclkCtrl+0x1c>)
 8027bba:	681a      	ldr	r2, [r3, #0]
 8027bbc:	0392      	lsls	r2, r2, #14
 8027bbe:	d5fc      	bpl.n	8027bba <LINKLAYER_PLAT_AclkCtrl+0xa>
  else
  {
    /* Disable RADIO baseband clock (active CLK) */
    HAL_RCCEx_DisableRadioBBClock();
  }
}
 8027bc0:	bd08      	pop	{r3, pc}
 8027bc2:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
    HAL_RCCEx_DisableRadioBBClock();
 8027bc6:	f005 bfb5 	b.w	802db34 <HAL_RCCEx_DisableRadioBBClock>
 8027bca:	bf00      	nop
 8027bcc:	46020c00 	.word	0x46020c00

08027bd0 <LINKLAYER_PLAT_GetRNG>:

void LINKLAYER_PLAT_GetRNG(uint8_t *ptr_rnd, uint32_t len)
{
  HAL_Generate_Random_Bytes_To( ptr_rnd, (uint8_t)len );
 8027bd0:	b2c9      	uxtb	r1, r1
 8027bd2:	f7fc bf9b 	b.w	8024b0c <HAL_Generate_Random_Bytes_To>
	...

08027bd8 <LINKLAYER_PLAT_SetupRadioIT>:
}

void LINKLAYER_PLAT_SetupRadioIT(void (*intr_cb)())
{
  radio_callback = intr_cb;
  HAL_NVIC_SetPriority((IRQn_Type) RADIO_INTR_NUM, RADIO_INTR_PRIO_HIGH, 0);
 8027bd8:	2200      	movs	r2, #0
{
 8027bda:	b508      	push	{r3, lr}
  radio_callback = intr_cb;
 8027bdc:	4b05      	ldr	r3, [pc, #20]	; (8027bf4 <LINKLAYER_PLAT_SetupRadioIT+0x1c>)
  HAL_NVIC_SetPriority((IRQn_Type) RADIO_INTR_NUM, RADIO_INTR_PRIO_HIGH, 0);
 8027bde:	4611      	mov	r1, r2
  radio_callback = intr_cb;
 8027be0:	6018      	str	r0, [r3, #0]
  HAL_NVIC_SetPriority((IRQn_Type) RADIO_INTR_NUM, RADIO_INTR_PRIO_HIGH, 0);
 8027be2:	2042      	movs	r0, #66	; 0x42
 8027be4:	f003 fdb0 	bl	802b748 <HAL_NVIC_SetPriority>
  HAL_NVIC_EnableIRQ((IRQn_Type) RADIO_INTR_NUM);
}
 8027be8:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
  HAL_NVIC_EnableIRQ((IRQn_Type) RADIO_INTR_NUM);
 8027bec:	2042      	movs	r0, #66	; 0x42
 8027bee:	f003 bdef 	b.w	802b7d0 <HAL_NVIC_EnableIRQ>
 8027bf2:	bf00      	nop
 8027bf4:	20008ebc 	.word	0x20008ebc

08027bf8 <LINKLAYER_PLAT_SetupSwLowIT>:

void LINKLAYER_PLAT_SetupSwLowIT(void (*intr_cb)())
{
 8027bf8:	b508      	push	{r3, lr}
  low_isr_callback = intr_cb;
 8027bfa:	4b06      	ldr	r3, [pc, #24]	; (8027c14 <LINKLAYER_PLAT_SetupSwLowIT+0x1c>)

  HAL_NVIC_SetPriority((IRQn_Type) RADIO_SW_LOW_INTR_NUM, RADIO_SW_LOW_INTR_PRIO, 0);
 8027bfc:	2200      	movs	r2, #0
  low_isr_callback = intr_cb;
 8027bfe:	6018      	str	r0, [r3, #0]
  HAL_NVIC_SetPriority((IRQn_Type) RADIO_SW_LOW_INTR_NUM, RADIO_SW_LOW_INTR_PRIO, 0);
 8027c00:	210f      	movs	r1, #15
 8027c02:	203d      	movs	r0, #61	; 0x3d
 8027c04:	f003 fda0 	bl	802b748 <HAL_NVIC_SetPriority>
  HAL_NVIC_EnableIRQ((IRQn_Type) RADIO_SW_LOW_INTR_NUM);
}
 8027c08:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
  HAL_NVIC_EnableIRQ((IRQn_Type) RADIO_SW_LOW_INTR_NUM);
 8027c0c:	203d      	movs	r0, #61	; 0x3d
 8027c0e:	f003 bddf 	b.w	802b7d0 <HAL_NVIC_EnableIRQ>
 8027c12:	bf00      	nop
 8027c14:	20008eac 	.word	0x20008eac

08027c18 <LINKLAYER_PLAT_TriggerSwLowIT>:

void LINKLAYER_PLAT_TriggerSwLowIT(uint8_t priority)
{
 8027c18:	b508      	push	{r3, lr}
 */
__STATIC_INLINE uint32_t __NVIC_GetActive(IRQn_Type IRQn)
{
  if ((int32_t)(IRQn) >= 0)
  {
    return((uint32_t)(((NVIC->IABR[(((uint32_t)IRQn) >> 5UL)] & (1UL << (((uint32_t)IRQn) & 0x1FUL))) != 0UL) ? 1UL : 0UL));
 8027c1a:	4b0c      	ldr	r3, [pc, #48]	; (8027c4c <LINKLAYER_PLAT_TriggerSwLowIT+0x34>)
 8027c1c:	f8d3 3204 	ldr.w	r3, [r3, #516]	; 0x204
 8027c20:	f3c3 7240 	ubfx	r2, r3, #29, #1

  /* Check if a SW low interrupt as already been raised.
   * Nested call far radio low isr are not supported
   **/

  if(NVIC_GetActive(RADIO_SW_LOW_INTR_NUM) == 0)
 8027c24:	009b      	lsls	r3, r3, #2
 8027c26:	d40b      	bmi.n	8027c40 <LINKLAYER_PLAT_TriggerSwLowIT+0x28>
  {
    /* No nested SW low ISR, default behavior */

    if(priority == 0)
    {
      low_isr_priority = RADIO_SW_LOW_INTR_PRIO;
 8027c28:	2800      	cmp	r0, #0
    }

    HAL_NVIC_SetPriority((IRQn_Type) RADIO_SW_LOW_INTR_NUM, low_isr_priority, 0);
 8027c2a:	bf14      	ite	ne
 8027c2c:	2103      	movne	r1, #3
 8027c2e:	210f      	moveq	r1, #15
 8027c30:	203d      	movs	r0, #61	; 0x3d
 8027c32:	f003 fd89 	bl	802b748 <HAL_NVIC_SetPriority>
      radio_sw_low_isr_is_running_high_prio = 1;
    }
  }

  HAL_NVIC_SetPendingIRQ((IRQn_Type) RADIO_SW_LOW_INTR_NUM);
}
 8027c36:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
  HAL_NVIC_SetPendingIRQ((IRQn_Type) RADIO_SW_LOW_INTR_NUM);
 8027c3a:	203d      	movs	r0, #61	; 0x3d
 8027c3c:	f003 be0a 	b.w	802b854 <HAL_NVIC_SetPendingIRQ>
    if(priority != 0)
 8027c40:	2800      	cmp	r0, #0
 8027c42:	d0f8      	beq.n	8027c36 <LINKLAYER_PLAT_TriggerSwLowIT+0x1e>
      radio_sw_low_isr_is_running_high_prio = 1;
 8027c44:	2201      	movs	r2, #1
 8027c46:	4b02      	ldr	r3, [pc, #8]	; (8027c50 <LINKLAYER_PLAT_TriggerSwLowIT+0x38>)
 8027c48:	701a      	strb	r2, [r3, #0]
 8027c4a:	e7f4      	b.n	8027c36 <LINKLAYER_PLAT_TriggerSwLowIT+0x1e>
 8027c4c:	e000e100 	.word	0xe000e100
 8027c50:	20008ec0 	.word	0x20008ec0

08027c54 <LINKLAYER_PLAT_EnableIRQ>:

void LINKLAYER_PLAT_EnableIRQ(void)
{
  irq_counter = max(0,irq_counter-1);
 8027c54:	4b06      	ldr	r3, [pc, #24]	; (8027c70 <LINKLAYER_PLAT_EnableIRQ+0x1c>)
 8027c56:	681a      	ldr	r2, [r3, #0]
 8027c58:	2a00      	cmp	r2, #0
 8027c5a:	bfd2      	itee	le
 8027c5c:	2200      	movle	r2, #0
 8027c5e:	681a      	ldrgt	r2, [r3, #0]
 8027c60:	f102 32ff 	addgt.w	r2, r2, #4294967295	; 0xffffffff
 8027c64:	601a      	str	r2, [r3, #0]

  if(irq_counter == 0)
 8027c66:	681b      	ldr	r3, [r3, #0]
 8027c68:	b903      	cbnz	r3, 8027c6c <LINKLAYER_PLAT_EnableIRQ+0x18>
  __ASM volatile ("cpsie i" : : : "memory");
 8027c6a:	b662      	cpsie	i
  {
    __enable_irq();
  }
}
 8027c6c:	4770      	bx	lr
 8027c6e:	bf00      	nop
 8027c70:	20008ea4 	.word	0x20008ea4

08027c74 <LINKLAYER_PLAT_DisableIRQ>:
  __ASM volatile ("cpsid i" : : : "memory");
 8027c74:	b672      	cpsid	i

void LINKLAYER_PLAT_DisableIRQ(void)
{
  __disable_irq();
  irq_counter ++;
 8027c76:	4a02      	ldr	r2, [pc, #8]	; (8027c80 <LINKLAYER_PLAT_DisableIRQ+0xc>)
 8027c78:	6813      	ldr	r3, [r2, #0]
 8027c7a:	3301      	adds	r3, #1
 8027c7c:	6013      	str	r3, [r2, #0]
}
 8027c7e:	4770      	bx	lr
 8027c80:	20008ea4 	.word	0x20008ea4

08027c84 <LINKLAYER_PLAT_EnableSpecificIRQ>:

void LINKLAYER_PLAT_EnableSpecificIRQ(uint8_t isr_type)
{
  if( (isr_type & LL_HIGH_ISR_ONLY) != 0 )
 8027c84:	07c1      	lsls	r1, r0, #31
{
 8027c86:	b510      	push	{r4, lr}
 8027c88:	4604      	mov	r4, r0
  if( (isr_type & LL_HIGH_ISR_ONLY) != 0 )
 8027c8a:	d508      	bpl.n	8027c9e <LINKLAYER_PLAT_EnableSpecificIRQ+0x1a>
  {
    prio_high_isr_counter--;
 8027c8c:	4b10      	ldr	r3, [pc, #64]	; (8027cd0 <LINKLAYER_PLAT_EnableSpecificIRQ+0x4c>)
 8027c8e:	681a      	ldr	r2, [r3, #0]
 8027c90:	3a01      	subs	r2, #1
 8027c92:	601a      	str	r2, [r3, #0]
    if(prio_high_isr_counter == 0)
 8027c94:	681b      	ldr	r3, [r3, #0]
 8027c96:	b913      	cbnz	r3, 8027c9e <LINKLAYER_PLAT_EnableSpecificIRQ+0x1a>
    {
      HAL_NVIC_EnableIRQ(RADIO_INTR_NUM);
 8027c98:	2042      	movs	r0, #66	; 0x42
 8027c9a:	f003 fd99 	bl	802b7d0 <HAL_NVIC_EnableIRQ>
    }
  }

  if( (isr_type & LL_LOW_ISR_ONLY) != 0 )
 8027c9e:	07a2      	lsls	r2, r4, #30
 8027ca0:	d508      	bpl.n	8027cb4 <LINKLAYER_PLAT_EnableSpecificIRQ+0x30>
  {
    prio_low_isr_counter--;
 8027ca2:	4b0c      	ldr	r3, [pc, #48]	; (8027cd4 <LINKLAYER_PLAT_EnableSpecificIRQ+0x50>)
 8027ca4:	681a      	ldr	r2, [r3, #0]
 8027ca6:	3a01      	subs	r2, #1
 8027ca8:	601a      	str	r2, [r3, #0]
    if(prio_low_isr_counter == 0)
 8027caa:	681b      	ldr	r3, [r3, #0]
 8027cac:	b913      	cbnz	r3, 8027cb4 <LINKLAYER_PLAT_EnableSpecificIRQ+0x30>
    {
      HAL_NVIC_EnableIRQ(RADIO_SW_LOW_INTR_NUM);
 8027cae:	203d      	movs	r0, #61	; 0x3d
 8027cb0:	f003 fd8e 	bl	802b7d0 <HAL_NVIC_EnableIRQ>
    }

  }

  if( (isr_type & SYS_LOW_ISR) != 0 )
 8027cb4:	0763      	lsls	r3, r4, #29
 8027cb6:	d509      	bpl.n	8027ccc <LINKLAYER_PLAT_EnableSpecificIRQ+0x48>
  {
    prio_sys_isr_counter--;
 8027cb8:	4b07      	ldr	r3, [pc, #28]	; (8027cd8 <LINKLAYER_PLAT_EnableSpecificIRQ+0x54>)
 8027cba:	681a      	ldr	r2, [r3, #0]
 8027cbc:	3a01      	subs	r2, #1
 8027cbe:	601a      	str	r2, [r3, #0]
    if(prio_sys_isr_counter == 0)
 8027cc0:	681b      	ldr	r3, [r3, #0]
 8027cc2:	b91b      	cbnz	r3, 8027ccc <LINKLAYER_PLAT_EnableSpecificIRQ+0x48>
    {
      __set_BASEPRI(local_basepri_value);
 8027cc4:	4b05      	ldr	r3, [pc, #20]	; (8027cdc <LINKLAYER_PLAT_EnableSpecificIRQ+0x58>)
 8027cc6:	681b      	ldr	r3, [r3, #0]
  __ASM volatile ("MSR basepri, %0" : : "r" (basePri) : "memory");
 8027cc8:	f383 8811 	msr	BASEPRI, r3
    }
  }
}
 8027ccc:	bd10      	pop	{r4, pc}
 8027cce:	bf00      	nop
 8027cd0:	20008eb0 	.word	0x20008eb0
 8027cd4:	20008eb4 	.word	0x20008eb4
 8027cd8:	20008eb8 	.word	0x20008eb8
 8027cdc:	20008ea8 	.word	0x20008ea8

08027ce0 <LINKLAYER_PLAT_DisableSpecificIRQ>:

void LINKLAYER_PLAT_DisableSpecificIRQ(uint8_t isr_type)
{
  if( (isr_type & LL_HIGH_ISR_ONLY) != 0 )
 8027ce0:	07c1      	lsls	r1, r0, #31
{
 8027ce2:	b510      	push	{r4, lr}
 8027ce4:	4604      	mov	r4, r0
  if( (isr_type & LL_HIGH_ISR_ONLY) != 0 )
 8027ce6:	d509      	bpl.n	8027cfc <LINKLAYER_PLAT_DisableSpecificIRQ+0x1c>
  {
    prio_high_isr_counter++;
 8027ce8:	4b13      	ldr	r3, [pc, #76]	; (8027d38 <LINKLAYER_PLAT_DisableSpecificIRQ+0x58>)
 8027cea:	681a      	ldr	r2, [r3, #0]
 8027cec:	3201      	adds	r2, #1
 8027cee:	601a      	str	r2, [r3, #0]
    if(prio_high_isr_counter == 1)
 8027cf0:	681b      	ldr	r3, [r3, #0]
 8027cf2:	2b01      	cmp	r3, #1
 8027cf4:	d102      	bne.n	8027cfc <LINKLAYER_PLAT_DisableSpecificIRQ+0x1c>
    {
      HAL_NVIC_DisableIRQ(RADIO_INTR_NUM);
 8027cf6:	2042      	movs	r0, #66	; 0x42
 8027cf8:	f003 fd7e 	bl	802b7f8 <HAL_NVIC_DisableIRQ>
    }
  }

  if( (isr_type & LL_LOW_ISR_ONLY) != 0 )
 8027cfc:	07a2      	lsls	r2, r4, #30
 8027cfe:	d509      	bpl.n	8027d14 <LINKLAYER_PLAT_DisableSpecificIRQ+0x34>
  {
    prio_low_isr_counter++;
 8027d00:	4b0e      	ldr	r3, [pc, #56]	; (8027d3c <LINKLAYER_PLAT_DisableSpecificIRQ+0x5c>)
 8027d02:	681a      	ldr	r2, [r3, #0]
 8027d04:	3201      	adds	r2, #1
 8027d06:	601a      	str	r2, [r3, #0]
    if(prio_low_isr_counter == 1)
 8027d08:	681b      	ldr	r3, [r3, #0]
 8027d0a:	2b01      	cmp	r3, #1
 8027d0c:	d102      	bne.n	8027d14 <LINKLAYER_PLAT_DisableSpecificIRQ+0x34>
    {
      HAL_NVIC_DisableIRQ(RADIO_SW_LOW_INTR_NUM);
 8027d0e:	203d      	movs	r0, #61	; 0x3d
 8027d10:	f003 fd72 	bl	802b7f8 <HAL_NVIC_DisableIRQ>
    }
  }

  if( (isr_type & SYS_LOW_ISR) != 0 )
 8027d14:	0763      	lsls	r3, r4, #29
 8027d16:	d50d      	bpl.n	8027d34 <LINKLAYER_PLAT_DisableSpecificIRQ+0x54>
  {
    prio_sys_isr_counter++;
 8027d18:	4b09      	ldr	r3, [pc, #36]	; (8027d40 <LINKLAYER_PLAT_DisableSpecificIRQ+0x60>)
 8027d1a:	681a      	ldr	r2, [r3, #0]
 8027d1c:	3201      	adds	r2, #1
 8027d1e:	601a      	str	r2, [r3, #0]
    if(prio_sys_isr_counter == 1)
 8027d20:	681b      	ldr	r3, [r3, #0]
 8027d22:	2b01      	cmp	r3, #1
 8027d24:	d106      	bne.n	8027d34 <LINKLAYER_PLAT_DisableSpecificIRQ+0x54>
  __ASM volatile ("MRS %0, basepri" : "=r" (result) );
 8027d26:	f3ef 8211 	mrs	r2, BASEPRI
    {
      local_basepri_value = __get_BASEPRI();
 8027d2a:	4b06      	ldr	r3, [pc, #24]	; (8027d44 <LINKLAYER_PLAT_DisableSpecificIRQ+0x64>)
 8027d2c:	601a      	str	r2, [r3, #0]
  __ASM volatile ("MSR basepri_max, %0" : : "r" (basePri) : "memory");
 8027d2e:	2330      	movs	r3, #48	; 0x30
 8027d30:	f383 8812 	msr	BASEPRI_MAX, r3
      __set_BASEPRI_MAX(RADIO_INTR_PRIO_LOW<<4);
    }
  }
}
 8027d34:	bd10      	pop	{r4, pc}
 8027d36:	bf00      	nop
 8027d38:	20008eb0 	.word	0x20008eb0
 8027d3c:	20008eb4 	.word	0x20008eb4
 8027d40:	20008eb8 	.word	0x20008eb8
 8027d44:	20008ea8 	.word	0x20008ea8

08027d48 <LINKLAYER_PLAT_EnableRadioIT>:

void LINKLAYER_PLAT_EnableRadioIT(void)
{
  HAL_NVIC_EnableIRQ((IRQn_Type) RADIO_INTR_NUM);
 8027d48:	2042      	movs	r0, #66	; 0x42
 8027d4a:	f003 bd41 	b.w	802b7d0 <HAL_NVIC_EnableIRQ>

08027d4e <LINKLAYER_PLAT_DisableRadioIT>:
}

void LINKLAYER_PLAT_DisableRadioIT(void)
{
  HAL_NVIC_DisableIRQ((IRQn_Type) RADIO_INTR_NUM);
 8027d4e:	2042      	movs	r0, #66	; 0x42
 8027d50:	f003 bd52 	b.w	802b7f8 <HAL_NVIC_DisableIRQ>

08027d54 <LINKLAYER_PLAT_StartRadioEvt>:
}

void LINKLAYER_PLAT_StartRadioEvt(void)
{
  __HAL_RCC_RADIO_CLK_SLEEP_ENABLE();
 8027d54:	4a06      	ldr	r2, [pc, #24]	; (8027d70 <LINKLAYER_PLAT_StartRadioEvt+0x1c>)
  NVIC_SetPriority(RADIO_INTR_NUM, RADIO_INTR_PRIO_HIGH);
  scm_notifyradiostate(SCM_RADIO_ACTIVE);
 8027d56:	2001      	movs	r0, #1
  __HAL_RCC_RADIO_CLK_SLEEP_ENABLE();
 8027d58:	f8d2 30c0 	ldr.w	r3, [r2, #192]	; 0xc0
 8027d5c:	f043 0301 	orr.w	r3, r3, #1
 8027d60:	f8c2 30c0 	str.w	r3, [r2, #192]	; 0xc0
 */
__STATIC_INLINE void __NVIC_SetPriority(IRQn_Type IRQn, uint32_t priority)
{
  if ((int32_t)(IRQn) >= 0)
  {
    NVIC->IPR[((uint32_t)IRQn)]               = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 8027d64:	2200      	movs	r2, #0
 8027d66:	4b03      	ldr	r3, [pc, #12]	; (8027d74 <LINKLAYER_PLAT_StartRadioEvt+0x20>)
 8027d68:	f883 2342 	strb.w	r2, [r3, #834]	; 0x342
  scm_notifyradiostate(SCM_RADIO_ACTIVE);
 8027d6c:	f002 bdae 	b.w	802a8cc <scm_notifyradiostate>
 8027d70:	46020c00 	.word	0x46020c00
 8027d74:	e000e100 	.word	0xe000e100

08027d78 <LINKLAYER_PLAT_StopRadioEvt>:
}

void LINKLAYER_PLAT_StopRadioEvt(void)
{
  __HAL_RCC_RADIO_CLK_SLEEP_DISABLE();
 8027d78:	4a06      	ldr	r2, [pc, #24]	; (8027d94 <LINKLAYER_PLAT_StopRadioEvt+0x1c>)
  NVIC_SetPriority(RADIO_INTR_NUM, RADIO_INTR_PRIO_LOW);
  scm_notifyradiostate(SCM_RADIO_NOT_ACTIVE);
 8027d7a:	2000      	movs	r0, #0
  __HAL_RCC_RADIO_CLK_SLEEP_DISABLE();
 8027d7c:	f8d2 30c0 	ldr.w	r3, [r2, #192]	; 0xc0
 8027d80:	f023 0301 	bic.w	r3, r3, #1
 8027d84:	f8c2 30c0 	str.w	r3, [r2, #192]	; 0xc0
 8027d88:	2230      	movs	r2, #48	; 0x30
 8027d8a:	4b03      	ldr	r3, [pc, #12]	; (8027d98 <LINKLAYER_PLAT_StopRadioEvt+0x20>)
 8027d8c:	f883 2342 	strb.w	r2, [r3, #834]	; 0x342
  scm_notifyradiostate(SCM_RADIO_NOT_ACTIVE);
 8027d90:	f002 bd9c 	b.w	802a8cc <scm_notifyradiostate>
 8027d94:	46020c00 	.word	0x46020c00
 8027d98:	e000e100 	.word	0xe000e100

08027d9c <LINKLAYER_PLAT_RequestTemperature>:
}

void LINKLAYER_PLAT_RequestTemperature(void)
{
#if (USE_TEMPERATURE_BASED_RADIO_CALIBRATION == 1)
  ll_sys_bg_temperature_measurement();
 8027d9c:	f000 b834 	b.w	8027e08 <ll_sys_bg_temperature_measurement>

08027da0 <request_temperature_measurement>:
{
  UTIL_SEQ_SetTask(1U << CFG_TASK_LINK_LAYER_TEMP_MEAS, CFG_SCH_PRIO_0);
}

void request_temperature_measurement(void)
{
 8027da0:	b538      	push	{r3, r4, r5, lr}
  __ASM volatile ("MRS %0, basepri" : "=r" (result) );
 8027da2:	f3ef 8511 	mrs	r5, BASEPRI
  __ASM volatile ("MSR basepri_max, %0" : : "r" (basePri) : "memory");
 8027da6:	2310      	movs	r3, #16
 8027da8:	f383 8812 	msr	BASEPRI_MAX, r3
  int16_t temperature_value = 0;

  UTILS_ENTER_LIMITED_CRITICAL_SECTION(RCC_INTR_PRIO<<4);
  adc_ctrl_req(SYS_ADC_LL_EVT, ADC_ON);
 8027dac:	2101      	movs	r1, #1
 8027dae:	2000      	movs	r0, #0
 8027db0:	f002 f9ce 	bl	802a150 <adc_ctrl_req>
  temperature_value = adc_ctrl_request_temperature();
 8027db4:	f002 fa36 	bl	802a224 <adc_ctrl_request_temperature>
  adc_ctrl_req(SYS_ADC_LL_EVT, ADC_OFF);
 8027db8:	2100      	movs	r1, #0
  temperature_value = adc_ctrl_request_temperature();
 8027dba:	4604      	mov	r4, r0
  adc_ctrl_req(SYS_ADC_LL_EVT, ADC_OFF);
 8027dbc:	4608      	mov	r0, r1
 8027dbe:	f002 f9c7 	bl	802a150 <adc_ctrl_req>
  ll_intf_set_temperature_value(temperature_value);
 8027dc2:	b220      	sxth	r0, r4
 8027dc4:	f7dd f97d 	bl	80050c2 <ll_intf_set_temperature_value>
  __ASM volatile ("MSR basepri, %0" : : "r" (basePri) : "memory");
 8027dc8:	f385 8811 	msr	BASEPRI, r5
  UTILS_EXIT_LIMITED_CRITICAL_SECTION();
}
 8027dcc:	bd38      	pop	{r3, r4, r5, pc}
	...

08027dd0 <ll_sys_bg_process_init>:
  UTIL_SEQ_RegTask( 1U << CFG_TASK_LINK_LAYER, UTIL_SEQ_RFU, ll_sys_bg_process);
 8027dd0:	2100      	movs	r1, #0
 8027dd2:	2040      	movs	r0, #64	; 0x40
 8027dd4:	4a01      	ldr	r2, [pc, #4]	; (8027ddc <ll_sys_bg_process_init+0xc>)
 8027dd6:	f008 bf3f 	b.w	8030c58 <UTIL_SEQ_RegTask>
 8027dda:	bf00      	nop
 8027ddc:	080306b3 	.word	0x080306b3

08027de0 <ll_sys_schedule_bg_process>:
  UTIL_SEQ_SetTask(1U << CFG_TASK_LINK_LAYER, CFG_SCH_PRIO_0);
 8027de0:	2100      	movs	r1, #0
 8027de2:	2040      	movs	r0, #64	; 0x40
 8027de4:	f008 be62 	b.w	8030aac <UTIL_SEQ_SetTask>

08027de8 <ll_sys_config_params>:
  ll_intf_config_ll_ctx_params(USE_RADIO_LOW_ISR, NEXT_EVENT_SCHEDULING_FROM_ISR);
 8027de8:	2101      	movs	r1, #1
{
 8027dea:	b508      	push	{r3, lr}
  ll_intf_config_ll_ctx_params(USE_RADIO_LOW_ISR, NEXT_EVENT_SCHEDULING_FROM_ISR);
 8027dec:	4608      	mov	r0, r1
 8027dee:	f7dd f8aa 	bl	8004f46 <ll_intf_config_ll_ctx_params>
  UTIL_SEQ_RegTask( 1U << CFG_TASK_LINK_LAYER_TEMP_MEAS, UTIL_SEQ_RFU, request_temperature_measurement);
 8027df2:	2100      	movs	r1, #0
 8027df4:	2080      	movs	r0, #128	; 0x80
 8027df6:	4a03      	ldr	r2, [pc, #12]	; (8027e04 <ll_sys_config_params+0x1c>)
 8027df8:	f008 ff2e 	bl	8030c58 <UTIL_SEQ_RegTask>
}
 8027dfc:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
  ll_intf_set_temperature_sensor_state();
 8027e00:	f7dd b95d 	b.w	80050be <ll_intf_set_temperature_sensor_state>
 8027e04:	08027da1 	.word	0x08027da1

08027e08 <ll_sys_bg_temperature_measurement>:
  UTIL_SEQ_SetTask(1U << CFG_TASK_LINK_LAYER_TEMP_MEAS, CFG_SCH_PRIO_0);
 8027e08:	2100      	movs	r1, #0
 8027e0a:	2080      	movs	r0, #128	; 0x80
 8027e0c:	f008 be4e 	b.w	8030aac <UTIL_SEQ_SetTask>

08027e10 <LINKLAYER_PLAT_EnableOSContextSwitch>:
#endif /* USE_TEMPERATURE_BASED_RADIO_CALIBRATION */

void LINKLAYER_PLAT_EnableOSContextSwitch(void)
{

}
 8027e10:	4770      	bx	lr

08027e12 <LINKLAYER_PLAT_DisableOSContextSwitch>:
 8027e12:	4770      	bx	lr

08027e14 <ADC4_IRQHandler>:
 * @retval : None
*/
    .section	.text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
	b	Infinite_Loop
 8027e14:	e7fe      	b.n	8027e14 <ADC4_IRQHandler>

08027e16 <APP_DEBUG_SIGNAL_SET>:
void APP_DEBUG_SIGNAL_SET(app_debug_signal_t signal)
{
#if(RT_DEBUG_GPIO_MODULE == 1)
  GENERIC_DEBUG_GPIO_SET(signal, app_debug_table);
#endif /* RT_DEBUG_GPIO_MODULE */
}
 8027e16:	4770      	bx	lr

08027e18 <APP_DEBUG_SIGNAL_RESET>:
 8027e18:	4770      	bx	lr

08027e1a <RT_DEBUG_GPIO_Init>:
      HAL_GPIO_Init(general_debug_table[cpt].GPIO_port, &GPIO_InitStruct);
      HAL_PWREx_EnableStandbyIORetention(pwr_gpio_port, general_debug_table[cpt].GPIO_pin);
    }
  }
#endif /* RT_DEBUG_GPIO_MODULE */
}
 8027e1a:	4770      	bx	lr

08027e1c <HW_AES_Enable>:
{
  HW_AES_VAR_T* av = &HW_AES_var;

  /* Test if the driver is not already in use */

  if ( av->run )
 8027e1c:	4b0d      	ldr	r3, [pc, #52]	; (8027e54 <HW_AES_Enable+0x38>)
{
 8027e1e:	b082      	sub	sp, #8
  if ( av->run )
 8027e20:	781a      	ldrb	r2, [r3, #0]
 8027e22:	b9aa      	cbnz	r2, 8027e50 <HW_AES_Enable+0x34>
  {
    return FALSE;
  }
  av->run = TRUE;
 8027e24:	2001      	movs	r0, #1
 8027e26:	7018      	strb	r0, [r3, #0]
  __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
 8027e28:	f3ef 8110 	mrs	r1, PRIMASK
  __ASM volatile ("cpsid i" : : : "memory");
 8027e2c:	b672      	cpsid	i
  * @retval None
  */
__STATIC_INLINE void LL_AHB2_GRP1_EnableClock(uint32_t Periphs)
{
  __IO uint32_t tmpreg;
  SET_BIT(RCC->AHB2ENR, Periphs);
 8027e2e:	4b0a      	ldr	r3, [pc, #40]	; (8027e58 <HW_AES_Enable+0x3c>)
 8027e30:	f8d3 208c 	ldr.w	r2, [r3, #140]	; 0x8c
 8027e34:	f442 3280 	orr.w	r2, r2, #65536	; 0x10000
 8027e38:	f8c3 208c 	str.w	r2, [r3, #140]	; 0x8c
  /* Delay after an RCC peripheral clock enabling */
  tmpreg = READ_BIT(RCC->AHB2ENR, Periphs);
 8027e3c:	f8d3 308c 	ldr.w	r3, [r3, #140]	; 0x8c
 8027e40:	f403 3380 	and.w	r3, r3, #65536	; 0x10000
 8027e44:	9301      	str	r3, [sp, #4]
  (void)tmpreg;
 8027e46:	9b01      	ldr	r3, [sp, #4]
  __ASM volatile ("MSR primask, %0" : : "r" (priMask) : "memory");
 8027e48:	f381 8810 	msr	PRIMASK, r1
  HW_AES_CLOCK_ENABLE( );

  UTILS_EXIT_CRITICAL_SECTION( );

  return TRUE;
}
 8027e4c:	b002      	add	sp, #8
 8027e4e:	4770      	bx	lr
    return FALSE;
 8027e50:	2000      	movs	r0, #0
 8027e52:	e7fb      	b.n	8027e4c <HW_AES_Enable+0x30>
 8027e54:	20008ec1 	.word	0x20008ec1
 8027e58:	46020c00 	.word	0x46020c00

08027e5c <HW_AES_SetKey>:

/*****************************************************************************/

void HW_AES_SetKey( uint32_t mode,
                    const uint8_t* key )
{
 8027e5c:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 8027e5e:	4602      	mov	r2, r0
  uint32_t tmp[4];

  /* Retrieve all bytes of key */
  memcpy( tmp, key, 16 );
 8027e60:	460b      	mov	r3, r1
 8027e62:	466d      	mov	r5, sp
 8027e64:	f101 0610 	add.w	r6, r1, #16
 8027e68:	462c      	mov	r4, r5
 8027e6a:	6818      	ldr	r0, [r3, #0]
 8027e6c:	6859      	ldr	r1, [r3, #4]
 8027e6e:	3308      	adds	r3, #8
 8027e70:	c403      	stmia	r4!, {r0, r1}
 8027e72:	42b3      	cmp	r3, r6
 8027e74:	4625      	mov	r5, r4
 8027e76:	d1f7      	bne.n	8027e68 <HW_AES_SetKey+0xc>
     - Data type:      32-bit
     - Operating mode: encryption
     - Chaining mode:  ECB
     - Key size:       128-bit
  */
  HW_AESX->CR = 0;
 8027e78:	2100      	movs	r1, #0
 8027e7a:	4b1f      	ldr	r3, [pc, #124]	; (8027ef8 <HW_AES_SetKey+0x9c>)

  /* Copy key bytes to the AES registers */

  if ( mode & HW_AES_REV )
 8027e7c:	f012 0f02 	tst.w	r2, #2
  HW_AESX->CR = 0;
 8027e80:	6019      	str	r1, [r3, #0]
  if ( mode & HW_AES_REV )
 8027e82:	9900      	ldr	r1, [sp, #0]
 8027e84:	d02b      	beq.n	8027ede <HW_AES_SetKey+0x82>
  {
    HW_AESX->KEYR0 = tmp[0];
 8027e86:	6119      	str	r1, [r3, #16]
    HW_AESX->KEYR1 = tmp[1];
 8027e88:	9901      	ldr	r1, [sp, #4]
 8027e8a:	6159      	str	r1, [r3, #20]
    HW_AESX->KEYR2 = tmp[2];
 8027e8c:	9902      	ldr	r1, [sp, #8]
 8027e8e:	6199      	str	r1, [r3, #24]
    HW_AESX->KEYR3 = tmp[3];
 8027e90:	9903      	ldr	r1, [sp, #12]
 8027e92:	61d9      	str	r1, [r3, #28]
    HW_AESX->KEYR2 = __REV( tmp[1] );
    HW_AESX->KEYR1 = __REV( tmp[2] );
    HW_AESX->KEYR0 = __REV( tmp[3] );
  }

  if ( !(mode & HW_AES_ENC) )
 8027e94:	07d0      	lsls	r0, r2, #31
 8027e96:	d411      	bmi.n	8027ebc <HW_AES_SetKey+0x60>
  {
    /* Set key preparation mode */
    HW_AESX->CR = AES_CR_MODE_0;
 8027e98:	2108      	movs	r1, #8
 8027e9a:	4b17      	ldr	r3, [pc, #92]	; (8027ef8 <HW_AES_SetKey+0x9c>)
 8027e9c:	6019      	str	r1, [r3, #0]

    /* Enable AES processing */
    HW_AESX->CR |= AES_CR_EN;
 8027e9e:	6819      	ldr	r1, [r3, #0]
 8027ea0:	f041 0101 	orr.w	r1, r1, #1
 8027ea4:	6019      	str	r1, [r3, #0]

    /* Wait for CCF flag to be raised */
    while ( ! (HW_AESX->SR & AES_SR_CCF) );
 8027ea6:	6859      	ldr	r1, [r3, #4]
 8027ea8:	07c9      	lsls	r1, r1, #31
 8027eaa:	d5fc      	bpl.n	8027ea6 <HW_AES_SetKey+0x4a>

    /* Clear CCF Flag */
    HW_AESX->ICR |= AES_ICR_CCF;
 8027eac:	f8d3 1308 	ldr.w	r1, [r3, #776]	; 0x308
 8027eb0:	f041 0101 	orr.w	r1, r1, #1
 8027eb4:	f8c3 1308 	str.w	r1, [r3, #776]	; 0x308

    /* Set decryption mode */
    HW_AESX->CR = AES_CR_MODE_1;
 8027eb8:	2110      	movs	r1, #16
 8027eba:	6019      	str	r1, [r3, #0]
  }

  /* Enable byte swapping if needed */
  if ( mode & HW_AES_SWAP )
 8027ebc:	4b0e      	ldr	r3, [pc, #56]	; (8027ef8 <HW_AES_SetKey+0x9c>)
 8027ebe:	f012 0f04 	tst.w	r2, #4
    HW_AESX->CR |= AES_CR_DATATYPE_1;
 8027ec2:	bf1e      	ittt	ne
 8027ec4:	681a      	ldrne	r2, [r3, #0]
 8027ec6:	f042 0204 	orrne.w	r2, r2, #4
 8027eca:	601a      	strne	r2, [r3, #0]

  /* Wait until KEYVALID is set */
  while ( !(HW_AESX->SR & AES_SR_KEYVALID) );
 8027ecc:	685a      	ldr	r2, [r3, #4]
 8027ece:	0612      	lsls	r2, r2, #24
 8027ed0:	d5fc      	bpl.n	8027ecc <HW_AES_SetKey+0x70>

  /* Enable AES processing */
  HW_AESX->CR |= AES_CR_EN;
 8027ed2:	681a      	ldr	r2, [r3, #0]
 8027ed4:	f042 0201 	orr.w	r2, r2, #1
 8027ed8:	601a      	str	r2, [r3, #0]
}
 8027eda:	b004      	add	sp, #16
 8027edc:	bd70      	pop	{r4, r5, r6, pc}
  \return               Reversed value
 */
__STATIC_FORCEINLINE uint32_t __REV(uint32_t value)
{
#if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 5)
  return __builtin_bswap32(value);
 8027ede:	ba09      	rev	r1, r1
    HW_AESX->KEYR3 = __REV( tmp[0] );
 8027ee0:	61d9      	str	r1, [r3, #28]
 8027ee2:	9901      	ldr	r1, [sp, #4]
 8027ee4:	ba09      	rev	r1, r1
    HW_AESX->KEYR2 = __REV( tmp[1] );
 8027ee6:	6199      	str	r1, [r3, #24]
 8027ee8:	9902      	ldr	r1, [sp, #8]
 8027eea:	ba09      	rev	r1, r1
    HW_AESX->KEYR1 = __REV( tmp[2] );
 8027eec:	6159      	str	r1, [r3, #20]
 8027eee:	9903      	ldr	r1, [sp, #12]
 8027ef0:	ba09      	rev	r1, r1
    HW_AESX->KEYR0 = __REV( tmp[3] );
 8027ef2:	6119      	str	r1, [r3, #16]
 8027ef4:	e7ce      	b.n	8027e94 <HW_AES_SetKey+0x38>
 8027ef6:	bf00      	nop
 8027ef8:	420c0000 	.word	0x420c0000

08027efc <HW_AES_Crypt>:

void HW_AES_Crypt( const uint32_t* input,
                   uint32_t* output )
{
  /* Write the input block into the input FIFO */
  HW_AESX->DINR = input[0];
 8027efc:	6802      	ldr	r2, [r0, #0]
 8027efe:	4b0d      	ldr	r3, [pc, #52]	; (8027f34 <HW_AES_Crypt+0x38>)
 8027f00:	609a      	str	r2, [r3, #8]
  HW_AESX->DINR = input[1];
 8027f02:	6842      	ldr	r2, [r0, #4]
 8027f04:	609a      	str	r2, [r3, #8]
  HW_AESX->DINR = input[2];
 8027f06:	6882      	ldr	r2, [r0, #8]
 8027f08:	609a      	str	r2, [r3, #8]
  HW_AESX->DINR = input[3];
 8027f0a:	68c2      	ldr	r2, [r0, #12]
 8027f0c:	609a      	str	r2, [r3, #8]

  /* Wait for CCF flag to be raised */
  while ( !(HW_AESX->SR & AES_SR_CCF) );
 8027f0e:	685a      	ldr	r2, [r3, #4]
 8027f10:	07d2      	lsls	r2, r2, #31
 8027f12:	d5fc      	bpl.n	8027f0e <HW_AES_Crypt+0x12>

  /* Read the output block from the output FIFO */
  output[0] = HW_AESX->DOUTR;
 8027f14:	68da      	ldr	r2, [r3, #12]
 8027f16:	600a      	str	r2, [r1, #0]
  output[1] = HW_AESX->DOUTR;
 8027f18:	68da      	ldr	r2, [r3, #12]
 8027f1a:	604a      	str	r2, [r1, #4]
  output[2] = HW_AESX->DOUTR;
 8027f1c:	68da      	ldr	r2, [r3, #12]
 8027f1e:	608a      	str	r2, [r1, #8]
  output[3] = HW_AESX->DOUTR;
 8027f20:	68da      	ldr	r2, [r3, #12]
 8027f22:	60ca      	str	r2, [r1, #12]

  /* Clear CCF Flag */
  HW_AESX->ICR |= AES_ICR_CCF;
 8027f24:	f8d3 2308 	ldr.w	r2, [r3, #776]	; 0x308
 8027f28:	f042 0201 	orr.w	r2, r2, #1
 8027f2c:	f8c3 2308 	str.w	r2, [r3, #776]	; 0x308
}
 8027f30:	4770      	bx	lr
 8027f32:	bf00      	nop
 8027f34:	420c0000 	.word	0x420c0000

08027f38 <HW_AES_Disable>:

/*****************************************************************************/

void HW_AES_Disable( void )
{
 8027f38:	b510      	push	{r4, lr}
  HW_AES_VAR_T* av = &HW_AES_var;

  if ( av->run )
 8027f3a:	4a0a      	ldr	r2, [pc, #40]	; (8027f64 <HW_AES_Disable+0x2c>)
 8027f3c:	7813      	ldrb	r3, [r2, #0]
 8027f3e:	b17b      	cbz	r3, 8027f60 <HW_AES_Disable+0x28>
  {
    /* Disable AES processing */
    HW_AESX->CR = 0;
 8027f40:	2100      	movs	r1, #0
 8027f42:	4b09      	ldr	r3, [pc, #36]	; (8027f68 <HW_AES_Disable+0x30>)
 8027f44:	6019      	str	r1, [r3, #0]
  __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
 8027f46:	f3ef 8410 	mrs	r4, PRIMASK
  __ASM volatile ("cpsid i" : : : "memory");
 8027f4a:	b672      	cpsid	i
  *         (*) value not defined in all devices.
  * @retval None
  */
__STATIC_INLINE void LL_AHB2_GRP1_DisableClock(uint32_t Periphs)
{
  CLEAR_BIT(RCC->AHB2ENR, Periphs);
 8027f4c:	4807      	ldr	r0, [pc, #28]	; (8027f6c <HW_AES_Disable+0x34>)
 8027f4e:	f8d0 308c 	ldr.w	r3, [r0, #140]	; 0x8c
 8027f52:	f423 3380 	bic.w	r3, r3, #65536	; 0x10000
 8027f56:	f8c0 308c 	str.w	r3, [r0, #140]	; 0x8c
  __ASM volatile ("MSR primask, %0" : : "r" (priMask) : "memory");
 8027f5a:	f384 8810 	msr	PRIMASK, r4
    /* Disable AES clock */
    HW_AES_CLOCK_DISABLE( );

    UTILS_EXIT_CRITICAL_SECTION( );

    av->run = FALSE;
 8027f5e:	7011      	strb	r1, [r2, #0]
  }
}
 8027f60:	bd10      	pop	{r4, pc}
 8027f62:	bf00      	nop
 8027f64:	20008ec1 	.word	0x20008ec1
 8027f68:	420c0000 	.word	0x420c0000
 8027f6c:	46020c00 	.word	0x46020c00

08027f70 <HW_PKA_Enable>:
static HW_PKA_VAR_T HW_PKA_var;

/*****************************************************************************/

int HW_PKA_Enable( void )
{
 8027f70:	b507      	push	{r0, r1, r2, lr}
  HW_PKA_VAR_T* pv = &HW_PKA_var;

  /* Test if the driver is not already in use */

  if ( pv->run )
 8027f72:	4b17      	ldr	r3, [pc, #92]	; (8027fd0 <HW_PKA_Enable+0x60>)
 8027f74:	781a      	ldrb	r2, [r3, #0]
 8027f76:	bb4a      	cbnz	r2, 8027fcc <HW_PKA_Enable+0x5c>
  {
    return FALSE;
  }

  pv->run = TRUE;
 8027f78:	2201      	movs	r2, #1

  /* Enable the RNG clock as it is needed.
   * See PKA chapter in IUM: the RNG peripheral must be clocked.
   */
  HW_RNG_EnableClock( 2 );
 8027f7a:	2002      	movs	r0, #2
  pv->run = TRUE;
 8027f7c:	701a      	strb	r2, [r3, #0]
  HW_RNG_EnableClock( 2 );
 8027f7e:	f000 f8a7 	bl	80280d0 <HW_RNG_EnableClock>
  __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
 8027f82:	f3ef 8110 	mrs	r1, PRIMASK
  __ASM volatile ("cpsid i" : : : "memory");
 8027f86:	b672      	cpsid	i
  SET_BIT(RCC->AHB2ENR, Periphs);
 8027f88:	4b12      	ldr	r3, [pc, #72]	; (8027fd4 <HW_PKA_Enable+0x64>)
 8027f8a:	f8d3 208c 	ldr.w	r2, [r3, #140]	; 0x8c
 8027f8e:	f442 1200 	orr.w	r2, r2, #2097152	; 0x200000
 8027f92:	f8c3 208c 	str.w	r2, [r3, #140]	; 0x8c
  tmpreg = READ_BIT(RCC->AHB2ENR, Periphs);
 8027f96:	f8d3 308c 	ldr.w	r3, [r3, #140]	; 0x8c
 8027f9a:	f403 1300 	and.w	r3, r3, #2097152	; 0x200000
 8027f9e:	9301      	str	r3, [sp, #4]
  (void)tmpreg;
 8027fa0:	9b01      	ldr	r3, [sp, #4]
  __ASM volatile ("MSR primask, %0" : : "r" (priMask) : "memory");
 8027fa2:	f381 8810 	msr	PRIMASK, r1
  * @param  PKAx PKA Instance.
  * @retval None
  */
__STATIC_INLINE void LL_PKA_Enable(PKA_TypeDef *PKAx)
{
  SET_BIT(PKAx->CR, PKA_CR_EN);
 8027fa6:	4b0c      	ldr	r3, [pc, #48]	; (8027fd8 <HW_PKA_Enable+0x68>)
 8027fa8:	681a      	ldr	r2, [r3, #0]
 8027faa:	f042 0201 	orr.w	r2, r2, #1
 8027fae:	601a      	str	r2, [r3, #0]

  /* Enable the PKA block */
  LL_PKA_Enable( PKA );

  /* Wait for PKA initialization OK */
  while ( !(PKA->SR & PKA_SR_INITOK) );
 8027fb0:	685a      	ldr	r2, [r3, #4]
 8027fb2:	07d2      	lsls	r2, r2, #31
 8027fb4:	d5fc      	bpl.n	8027fb0 <HW_PKA_Enable+0x40>

  /* Reset any pending flag */
  SET_BIT(PKA->CLRFR, (PKA_CLRFR_PROCENDFC | PKA_CLRFR_RAMERRFC |
 8027fb6:	689a      	ldr	r2, [r3, #8]
                       PKA_CLRFR_ADDRERRFC | PKA_CLRFR_OPERRFC));

  /* Disable the RNG clock as it is no more needed ???
   */
  HW_RNG_DisableClock( 2 );
 8027fb8:	2002      	movs	r0, #2
  SET_BIT(PKA->CLRFR, (PKA_CLRFR_PROCENDFC | PKA_CLRFR_RAMERRFC |
 8027fba:	f442 1268 	orr.w	r2, r2, #3801088	; 0x3a0000
 8027fbe:	609a      	str	r2, [r3, #8]
  HW_RNG_DisableClock( 2 );
 8027fc0:	f000 f8aa 	bl	8028118 <HW_RNG_DisableClock>

  return TRUE;
 8027fc4:	2001      	movs	r0, #1
}
 8027fc6:	b003      	add	sp, #12
 8027fc8:	f85d fb04 	ldr.w	pc, [sp], #4
    return FALSE;
 8027fcc:	2000      	movs	r0, #0
 8027fce:	e7fa      	b.n	8027fc6 <HW_PKA_Enable+0x56>
 8027fd0:	20008ec2 	.word	0x20008ec2
 8027fd4:	46020c00 	.word	0x46020c00
 8027fd8:	420c2000 	.word	0x420c2000

08027fdc <HW_PKA_WriteSingleInput>:

void HW_PKA_WriteSingleInput( uint32_t index, uint32_t word )
{
  /* Write the single word into PKA RAM */

  PKA->RAM[index] = word;
 8027fdc:	4b02      	ldr	r3, [pc, #8]	; (8027fe8 <HW_PKA_WriteSingleInput+0xc>)
 8027fde:	f500 7080 	add.w	r0, r0, #256	; 0x100
 8027fe2:	f843 1020 	str.w	r1, [r3, r0, lsl #2]
}
 8027fe6:	4770      	bx	lr
 8027fe8:	420c2000 	.word	0x420c2000

08027fec <HW_PKA_WriteOperand>:

/*****************************************************************************/

void HW_PKA_WriteOperand( uint32_t index, int size, const uint32_t* in )
{
  uint32_t* pka_ram = (uint32_t*)&PKA->RAM[index];
 8027fec:	4b09      	ldr	r3, [pc, #36]	; (8028014 <HW_PKA_WriteOperand+0x28>)
{
 8027fee:	b530      	push	{r4, r5, lr}
  uint32_t* pka_ram = (uint32_t*)&PKA->RAM[index];
 8027ff0:	eb03 0080 	add.w	r0, r3, r0, lsl #2

  /* Write the input data into PKA RAM */

  for ( ; size > 0; size-- )
 8027ff4:	460b      	mov	r3, r1
 8027ff6:	1f04      	subs	r4, r0, #4
 8027ff8:	2b00      	cmp	r3, #0
 8027ffa:	dc05      	bgt.n	8028008 <HW_PKA_WriteOperand+0x1c>
    *pka_ram++ = *in++;
  }

  /* Write extra zeros into PKA RAM */

  *pka_ram = 0;
 8027ffc:	2300      	movs	r3, #0
 8027ffe:	ea21 71e1 	bic.w	r1, r1, r1, asr #31
 8028002:	f840 3021 	str.w	r3, [r0, r1, lsl #2]
}
 8028006:	bd30      	pop	{r4, r5, pc}
    *pka_ram++ = *in++;
 8028008:	f852 5b04 	ldr.w	r5, [r2], #4
  for ( ; size > 0; size-- )
 802800c:	3b01      	subs	r3, #1
    *pka_ram++ = *in++;
 802800e:	f844 5f04 	str.w	r5, [r4, #4]!
  for ( ; size > 0; size-- )
 8028012:	e7f1      	b.n	8027ff8 <HW_PKA_WriteOperand+0xc>
 8028014:	420c2400 	.word	0x420c2400

08028018 <HW_PKA_Start>:
  MODIFY_REG(PKAx->CR, (PKA_CR_MODE), (Mode << PKA_CR_MODE_Pos));
 8028018:	4b07      	ldr	r3, [pc, #28]	; (8028038 <HW_PKA_Start+0x20>)
 802801a:	681a      	ldr	r2, [r3, #0]
 802801c:	f422 527c 	bic.w	r2, r2, #16128	; 0x3f00
 8028020:	ea42 2000 	orr.w	r0, r2, r0, lsl #8
 8028024:	6018      	str	r0, [r3, #0]
  * @param  PKAx PKA Instance.
  * @retval None
  */
__STATIC_INLINE void LL_PKA_ClearFlag_PROCEND(PKA_TypeDef *PKAx)
{
  SET_BIT(PKAx->CLRFR, PKA_CLRFR_PROCENDFC);
 8028026:	689a      	ldr	r2, [r3, #8]
 8028028:	f442 3200 	orr.w	r2, r2, #131072	; 0x20000
 802802c:	609a      	str	r2, [r3, #8]
  SET_BIT(PKAx->CR, PKA_CR_START);
 802802e:	681a      	ldr	r2, [r3, #0]
 8028030:	f042 0202 	orr.w	r2, r2, #2
 8028034:	601a      	str	r2, [r3, #0]
  LL_PKA_Config( PKA, mode );

  /* Start the PKA processing */
  LL_PKA_ClearFlag_PROCEND( PKA );
  LL_PKA_Start( PKA );
}
 8028036:	4770      	bx	lr
 8028038:	420c2000 	.word	0x420c2000

0802803c <HW_PKA_EndOfOperation>:
  return ((READ_BIT(PKAx->SR, PKA_SR_PROCENDF) == (PKA_SR_PROCENDF)) ? 1UL : 0UL);
 802803c:	4b02      	ldr	r3, [pc, #8]	; (8028048 <HW_PKA_EndOfOperation+0xc>)
 802803e:	6858      	ldr	r0, [r3, #4]

int HW_PKA_EndOfOperation( void )
{
  /* Return 0 if the processing is still active */
  return LL_PKA_IsActiveFlag_PROCEND( PKA );
}
 8028040:	f3c0 4040 	ubfx	r0, r0, #17, #1
 8028044:	4770      	bx	lr
 8028046:	bf00      	nop
 8028048:	420c2000 	.word	0x420c2000

0802804c <HW_PKA_ReadSingleOutput>:

uint32_t HW_PKA_ReadSingleOutput( uint32_t index )
{
  /* Read a single word from PKA RAM */

  return PKA->RAM[index];
 802804c:	4b02      	ldr	r3, [pc, #8]	; (8028058 <HW_PKA_ReadSingleOutput+0xc>)
 802804e:	f500 7080 	add.w	r0, r0, #256	; 0x100
 8028052:	f853 0020 	ldr.w	r0, [r3, r0, lsl #2]
}
 8028056:	4770      	bx	lr
 8028058:	420c2000 	.word	0x420c2000

0802805c <HW_PKA_ReadResult>:

/*****************************************************************************/

void HW_PKA_ReadResult( uint32_t index, int size, uint32_t* out )
{
  uint32_t* pka_ram = (uint32_t*)&PKA->RAM[index];
 802805c:	4b06      	ldr	r3, [pc, #24]	; (8028078 <HW_PKA_ReadResult+0x1c>)
 802805e:	3a04      	subs	r2, #4
 8028060:	eb03 0080 	add.w	r0, r3, r0, lsl #2

  /* Read from PKA RAM */

  for ( ; size > 0; size-- )
 8028064:	2900      	cmp	r1, #0
 8028066:	dc00      	bgt.n	802806a <HW_PKA_ReadResult+0xe>
  {
    *out++ = *pka_ram++;
  }
}
 8028068:	4770      	bx	lr
    *out++ = *pka_ram++;
 802806a:	f850 3b04 	ldr.w	r3, [r0], #4
  for ( ; size > 0; size-- )
 802806e:	3901      	subs	r1, #1
    *out++ = *pka_ram++;
 8028070:	f842 3f04 	str.w	r3, [r2, #4]!
  for ( ; size > 0; size-- )
 8028074:	e7f6      	b.n	8028064 <HW_PKA_ReadResult+0x8>
 8028076:	bf00      	nop
 8028078:	420c2400 	.word	0x420c2400

0802807c <HW_PKA_Disable>:

void HW_PKA_Disable( void )
{
  HW_PKA_VAR_T* pv = &HW_PKA_var;

  if ( pv->run )
 802807c:	4a0b      	ldr	r2, [pc, #44]	; (80280ac <HW_PKA_Disable+0x30>)
 802807e:	7813      	ldrb	r3, [r2, #0]
 8028080:	b193      	cbz	r3, 80280a8 <HW_PKA_Disable+0x2c>
  CLEAR_BIT(PKAx->CR, PKA_CR_EN);
 8028082:	490b      	ldr	r1, [pc, #44]	; (80280b0 <HW_PKA_Disable+0x34>)
 8028084:	680b      	ldr	r3, [r1, #0]
 8028086:	f023 0301 	bic.w	r3, r3, #1
 802808a:	600b      	str	r3, [r1, #0]
  __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
 802808c:	f3ef 8010 	mrs	r0, PRIMASK
  __ASM volatile ("cpsid i" : : : "memory");
 8028090:	b672      	cpsid	i
  CLEAR_BIT(RCC->AHB2ENR, Periphs);
 8028092:	4908      	ldr	r1, [pc, #32]	; (80280b4 <HW_PKA_Disable+0x38>)
 8028094:	f8d1 308c 	ldr.w	r3, [r1, #140]	; 0x8c
 8028098:	f423 1300 	bic.w	r3, r3, #2097152	; 0x200000
 802809c:	f8c1 308c 	str.w	r3, [r1, #140]	; 0x8c
  __ASM volatile ("MSR primask, %0" : : "r" (priMask) : "memory");
 80280a0:	f380 8810 	msr	PRIMASK, r0
    /* Disable the PKA clock */
    LL_AHB2_GRP1_DisableClock( LL_AHB2_GRP1_PERIPH_PKA );

    UTILS_EXIT_CRITICAL_SECTION( );

    pv->run = FALSE;
 80280a4:	2300      	movs	r3, #0
 80280a6:	7013      	strb	r3, [r2, #0]
  }
}
 80280a8:	4770      	bx	lr
 80280aa:	bf00      	nop
 80280ac:	20008ec2 	.word	0x20008ec2
 80280b0:	420c2000 	.word	0x420c2000
 80280b4:	46020c00 	.word	0x46020c00

080280b8 <RNG_KERNEL_CLK_ON>:
  SET_BIT(RCC->CR, RCC_CR_HSION);
 80280b8:	4b04      	ldr	r3, [pc, #16]	; (80280cc <RNG_KERNEL_CLK_ON+0x14>)
 80280ba:	681a      	ldr	r2, [r3, #0]
 80280bc:	f442 7280 	orr.w	r2, r2, #256	; 0x100
 80280c0:	601a      	str	r2, [r3, #0]
  return ((READ_BIT(RCC->CR, RCC_CR_HSIRDY) == RCC_CR_HSIRDY) ? 1UL : 0UL);
 80280c2:	681a      	ldr	r2, [r3, #0]
 80280c4:	0552      	lsls	r2, r2, #21
 80280c6:	d5fc      	bpl.n	80280c2 <RNG_KERNEL_CLK_ON+0xa>

__weak void RNG_KERNEL_CLK_ON(void)
{
  LL_RCC_HSI_Enable();
  while(LL_RCC_HSI_IsReady() == 0);
}
 80280c8:	4770      	bx	lr
 80280ca:	bf00      	nop
 80280cc:	46020c00 	.word	0x46020c00

080280d0 <HW_RNG_EnableClock>:
}

/*****************************************************************************/

void HW_RNG_EnableClock( uint8_t user_mask )
{
 80280d0:	b537      	push	{r0, r1, r2, r4, r5, lr}
 80280d2:	4604      	mov	r4, r0
  HW_RNG_VAR_T* pv = &HW_RNG_var;

  RNG_KERNEL_CLK_ON();
 80280d4:	f7ff fff0 	bl	80280b8 <RNG_KERNEL_CLK_ON>
  __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
 80280d8:	f3ef 8510 	mrs	r5, PRIMASK
  __ASM volatile ("cpsid i" : : : "memory");
 80280dc:	b672      	cpsid	i

  UTILS_ENTER_CRITICAL_SECTION( );

  if ( pv->clock_en == 0 )
 80280de:	480c      	ldr	r0, [pc, #48]	; (8028110 <HW_RNG_EnableClock+0x40>)
 80280e0:	f890 3082 	ldrb.w	r3, [r0, #130]	; 0x82
 80280e4:	b963      	cbnz	r3, 8028100 <HW_RNG_EnableClock+0x30>
  SET_BIT(RCC->AHB2ENR, Periphs);
 80280e6:	4a0b      	ldr	r2, [pc, #44]	; (8028114 <HW_RNG_EnableClock+0x44>)
 80280e8:	f8d2 108c 	ldr.w	r1, [r2, #140]	; 0x8c
 80280ec:	f441 2180 	orr.w	r1, r1, #262144	; 0x40000
 80280f0:	f8c2 108c 	str.w	r1, [r2, #140]	; 0x8c
  tmpreg = READ_BIT(RCC->AHB2ENR, Periphs);
 80280f4:	f8d2 208c 	ldr.w	r2, [r2, #140]	; 0x8c
 80280f8:	f402 2280 	and.w	r2, r2, #262144	; 0x40000
 80280fc:	9201      	str	r2, [sp, #4]
  (void)tmpreg;
 80280fe:	9a01      	ldr	r2, [sp, #4]
  {
    LL_AHB2_GRP1_EnableClock( LL_AHB2_GRP1_PERIPH_RNG );
  }

  pv->clock_en |= user_mask;
 8028100:	4323      	orrs	r3, r4
 8028102:	f880 3082 	strb.w	r3, [r0, #130]	; 0x82
  __ASM volatile ("MSR primask, %0" : : "r" (priMask) : "memory");
 8028106:	f385 8810 	msr	PRIMASK, r5

  UTILS_EXIT_CRITICAL_SECTION( );
}
 802810a:	b003      	add	sp, #12
 802810c:	bd30      	pop	{r4, r5, pc}
 802810e:	bf00      	nop
 8028110:	20008ec4 	.word	0x20008ec4
 8028114:	46020c00 	.word	0x46020c00

08028118 <HW_RNG_DisableClock>:

/*****************************************************************************/

void HW_RNG_DisableClock( uint8_t user_mask )
{
 8028118:	b507      	push	{r0, r1, r2, lr}
  __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
 802811a:	f3ef 8110 	mrs	r1, PRIMASK
  __ASM volatile ("cpsid i" : : : "memory");
 802811e:	b672      	cpsid	i
  HW_RNG_VAR_T* pv = &HW_RNG_var;

  {
    UTILS_ENTER_CRITICAL_SECTION( );

    pv->clock_en &= ~user_mask;
 8028120:	4b13      	ldr	r3, [pc, #76]	; (8028170 <HW_RNG_DisableClock+0x58>)
 8028122:	f893 2082 	ldrb.w	r2, [r3, #130]	; 0x82
 8028126:	ea22 0000 	bic.w	r0, r2, r0
 802812a:	f883 0082 	strb.w	r0, [r3, #130]	; 0x82
  __ASM volatile ("MSR primask, %0" : : "r" (priMask) : "memory");
 802812e:	f381 8810 	msr	PRIMASK, r1
  }

  /* It does not matter much if the temporisation is executed even though
   * in the meantime pv->clock_en has been updated and is not more equal to 0
   */
  if ( pv->clock_en == 0 )
 8028132:	f893 2082 	ldrb.w	r2, [r3, #130]	; 0x82
 8028136:	b19a      	cbz	r2, 8028160 <HW_RNG_DisableClock+0x48>
  __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
 8028138:	f3ef 8110 	mrs	r1, PRIMASK
  __ASM volatile ("cpsid i" : : : "memory");
 802813c:	b672      	cpsid	i
  }

  {
    UTILS_ENTER_CRITICAL_SECTION( );

    if ( pv->clock_en == 0 )
 802813e:	f893 3082 	ldrb.w	r3, [r3, #130]	; 0x82
 8028142:	b933      	cbnz	r3, 8028152 <HW_RNG_DisableClock+0x3a>
  CLEAR_BIT(RCC->AHB2ENR, Periphs);
 8028144:	4a0b      	ldr	r2, [pc, #44]	; (8028174 <HW_RNG_DisableClock+0x5c>)
 8028146:	f8d2 308c 	ldr.w	r3, [r2, #140]	; 0x8c
 802814a:	f423 2380 	bic.w	r3, r3, #262144	; 0x40000
 802814e:	f8c2 308c 	str.w	r3, [r2, #140]	; 0x8c
  __ASM volatile ("MSR primask, %0" : : "r" (priMask) : "memory");
 8028152:	f381 8810 	msr	PRIMASK, r1
    }

    UTILS_EXIT_CRITICAL_SECTION( );
  }

  RNG_KERNEL_CLK_OFF();
 8028156:	f7fd fd90 	bl	8025c7a <RNG_KERNEL_CLK_OFF>
}
 802815a:	b003      	add	sp, #12
 802815c:	f85d fb04 	ldr.w	pc, [sp], #4
 */
static void HW_RNG_WaitingClockSynchronization( void )
{
  volatile unsigned int cpt;

  for(cpt = 178 ; cpt!=0 ; --cpt);
 8028160:	22b2      	movs	r2, #178	; 0xb2
 8028162:	9201      	str	r2, [sp, #4]
 8028164:	9a01      	ldr	r2, [sp, #4]
 8028166:	2a00      	cmp	r2, #0
 8028168:	d0e6      	beq.n	8028138 <HW_RNG_DisableClock+0x20>
 802816a:	9a01      	ldr	r2, [sp, #4]
 802816c:	3a01      	subs	r2, #1
 802816e:	e7f8      	b.n	8028162 <HW_RNG_DisableClock+0x4a>
 8028170:	20008ec4 	.word	0x20008ec4
 8028174:	46020c00 	.word	0x46020c00

08028178 <HW_RNG_Disable>:
{
 8028178:	b508      	push	{r3, lr}
  SYSTEM_DEBUG_SIGNAL_SET(RNG_DISABLE);
 802817a:	2004      	movs	r0, #4
 802817c:	f001 ffaa 	bl	802a0d4 <SYSTEM_DEBUG_SIGNAL_SET>
  * @param  RNGx RNG Instance
  * @retval None
  */
__STATIC_INLINE void LL_RNG_Disable(RNG_TypeDef *RNGx)
{
  CLEAR_BIT(RNGx->CR, RNG_CR_RNGEN);
 8028180:	4a06      	ldr	r2, [pc, #24]	; (802819c <HW_RNG_Disable+0x24>)
  HW_RNG_DisableClock( 1 );
 8028182:	2001      	movs	r0, #1
 8028184:	6813      	ldr	r3, [r2, #0]
 8028186:	f023 0304 	bic.w	r3, r3, #4
 802818a:	6013      	str	r3, [r2, #0]
 802818c:	f7ff ffc4 	bl	8028118 <HW_RNG_DisableClock>
}
 8028190:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
  SYSTEM_DEBUG_SIGNAL_RESET(RNG_DISABLE);
 8028194:	2004      	movs	r0, #4
 8028196:	f001 bf9e 	b.w	802a0d6 <SYSTEM_DEBUG_SIGNAL_RESET>
 802819a:	bf00      	nop
 802819c:	420c0800 	.word	0x420c0800

080281a0 <HW_RNG_Run.constprop.0>:
 * It implenments a simple state machine that enables the RNG,
 * fills the pool with generated random numbers and then disables the RNG.
 * It always returns 0 in normal conditions. In error conditions, it returns
 * an error code different from 0.
 */
static int HW_RNG_Run( HW_RNG_VAR_T* pv )
 80281a0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
{
  int i, error = HW_OK;

  /* If the RNG is OFF */

  if ( !pv->run )
 80281a2:	4d2c      	ldr	r5, [pc, #176]	; (8028254 <HW_RNG_Run.constprop.0+0xb4>)
 80281a4:	4e2c      	ldr	r6, [pc, #176]	; (8028258 <HW_RNG_Run.constprop.0+0xb8>)
 80281a6:	f895 4081 	ldrb.w	r4, [r5, #129]	; 0x81
 80281aa:	b98c      	cbnz	r4, 80281d0 <HW_RNG_Run.constprop.0+0x30>
  {
    SYSTEM_DEBUG_SIGNAL_SET(RNG_ENABLE);
 80281ac:	2003      	movs	r0, #3
 80281ae:	f001 ff91 	bl	802a0d4 <SYSTEM_DEBUG_SIGNAL_SET>

    /* Enable RNG clocks */
    HW_RNG_EnableClock( 1 );
 80281b2:	2001      	movs	r0, #1
 80281b4:	f7ff ff8c 	bl	80280d0 <HW_RNG_EnableClock>
  SET_BIT(RNGx->CR, RNG_CR_RNGEN);
 80281b8:	6833      	ldr	r3, [r6, #0]

    /* Set RNG enable bit */
    LL_RNG_Enable( RNG );

    SYSTEM_DEBUG_SIGNAL_RESET(RNG_ENABLE);
 80281ba:	2003      	movs	r0, #3
 80281bc:	f043 0304 	orr.w	r3, r3, #4
 80281c0:	6033      	str	r3, [r6, #0]
 80281c2:	f001 ff88 	bl	802a0d6 <SYSTEM_DEBUG_SIGNAL_RESET>

    /* Set flag indicating that RNG is ON */
    pv->run = TRUE;
 80281c6:	2301      	movs	r3, #1
 80281c8:	f885 3081 	strb.w	r3, [r5, #129]	; 0x81
  int i, error = HW_OK;
 80281cc:	4620      	mov	r0, r4

    /* Reset flag indicating that the RNG is ON */
    pv->run = FALSE;
  }

  return error;
 80281ce:	e007      	b.n	80281e0 <HW_RNG_Run.constprop.0+0x40>
  * @param  RNGx RNG Instance
  * @retval State of bit (1 or 0).
  */
__STATIC_INLINE uint32_t LL_RNG_IsActiveFlag_CECS(const RNG_TypeDef *RNGx)
{
  return ((READ_BIT(RNGx->SR, RNG_SR_CECS) == (RNG_SR_CECS)) ? 1UL : 0UL);
 80281d0:	6873      	ldr	r3, [r6, #4]
 80281d2:	079f      	lsls	r7, r3, #30
 80281d4:	d505      	bpl.n	80281e2 <HW_RNG_Run.constprop.0+0x42>
  * @param  RNGx RNG Instance
  * @retval None
  */
__STATIC_INLINE void LL_RNG_ClearFlag_CEIS(RNG_TypeDef *RNGx)
{
  WRITE_REG(RNGx->SR, ~RNG_SR_CEIS);
 80281d6:	f06f 0320 	mvn.w	r3, #32
    error = HW_RNG_CLOCK_ERROR;
 80281da:	f240 1001 	movw	r0, #257	; 0x101
 80281de:	6073      	str	r3, [r6, #4]
}
 80281e0:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
  return ((READ_BIT(RNGx->SR, RNG_SR_SEIS) == (RNG_SR_SEIS)) ? 1UL : 0UL);
 80281e2:	6874      	ldr	r4, [r6, #4]
 80281e4:	f014 0440 	ands.w	r4, r4, #64	; 0x40
 80281e8:	d108      	bne.n	80281fc <HW_RNG_Run.constprop.0+0x5c>
  else if ( pv->size < CFG_HW_RNG_POOL_SIZE )
 80281ea:	f895 3080 	ldrb.w	r3, [r5, #128]	; 0x80
 80281ee:	2b1f      	cmp	r3, #31
 80281f0:	d90e      	bls.n	8028210 <HW_RNG_Run.constprop.0+0x70>
    HW_RNG_Disable( );
 80281f2:	f7ff ffc1 	bl	8028178 <HW_RNG_Disable>
    pv->run = FALSE;
 80281f6:	f885 4081 	strb.w	r4, [r5, #129]	; 0x81
 80281fa:	e7e7      	b.n	80281cc <HW_RNG_Run.constprop.0+0x2c>
  * @param  RNGx RNG Instance
  * @retval None
  */
__STATIC_INLINE void LL_RNG_ClearFlag_SEIS(RNG_TypeDef *RNGx)
{
  WRITE_REG(RNGx->SR, ~RNG_SR_SEIS);
 80281fc:	f06f 0340 	mvn.w	r3, #64	; 0x40
 8028200:	6073      	str	r3, [r6, #4]
 8028202:	230c      	movs	r3, #12
    for ( i = 12; i > 0; i-- )
 8028204:	3b01      	subs	r3, #1
  * @param  RNGx RNG Instance
  * @retval Generated 32-bit random value
  */
__STATIC_INLINE uint32_t LL_RNG_ReadRandData32(const RNG_TypeDef *RNGx)
{
  return (uint32_t)(READ_REG(RNGx->DR));
 8028206:	68b2      	ldr	r2, [r6, #8]
 8028208:	d1fc      	bne.n	8028204 <HW_RNG_Run.constprop.0+0x64>
    error = HW_RNG_NOISE_ERROR;
 802820a:	f44f 7081 	mov.w	r0, #258	; 0x102
 802820e:	e7e7      	b.n	80281e0 <HW_RNG_Run.constprop.0+0x40>
  __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
 8028210:	f3ef 8710 	mrs	r7, PRIMASK
  __ASM volatile ("cpsid i" : : : "memory");
 8028214:	b672      	cpsid	i
    SYSTEM_DEBUG_SIGNAL_SET(RNG_GEN_RAND_NUM);
 8028216:	2005      	movs	r0, #5
 8028218:	f001 ff5c 	bl	802a0d4 <SYSTEM_DEBUG_SIGNAL_SET>
    while ( (pv->size < CFG_HW_RNG_POOL_SIZE) &&
 802821c:	4620      	mov	r0, r4
 802821e:	f895 3080 	ldrb.w	r3, [r5, #128]	; 0x80
 8028222:	eb05 0283 	add.w	r2, r5, r3, lsl #2
 8028226:	2b1f      	cmp	r3, #31
 8028228:	d909      	bls.n	802823e <HW_RNG_Run.constprop.0+0x9e>
 802822a:	b108      	cbz	r0, 8028230 <HW_RNG_Run.constprop.0+0x90>
 802822c:	f885 3080 	strb.w	r3, [r5, #128]	; 0x80
    SYSTEM_DEBUG_SIGNAL_RESET(RNG_GEN_RAND_NUM);
 8028230:	2005      	movs	r0, #5
 8028232:	f001 ff50 	bl	802a0d6 <SYSTEM_DEBUG_SIGNAL_RESET>
  __ASM volatile ("MSR primask, %0" : : "r" (priMask) : "memory");
 8028236:	f387 8810 	msr	PRIMASK, r7
  int i, error = HW_OK;
 802823a:	2000      	movs	r0, #0
}
 802823c:	e7d0      	b.n	80281e0 <HW_RNG_Run.constprop.0+0x40>
  return ((READ_BIT(RNGx->SR, RNG_SR_DRDY) == (RNG_SR_DRDY)) ? 1UL : 0UL);
 802823e:	6874      	ldr	r4, [r6, #4]
    while ( (pv->size < CFG_HW_RNG_POOL_SIZE) &&
 8028240:	1c59      	adds	r1, r3, #1
 8028242:	07e4      	lsls	r4, r4, #31
 8028244:	b2c9      	uxtb	r1, r1
 8028246:	d5f0      	bpl.n	802822a <HW_RNG_Run.constprop.0+0x8a>
  return (uint32_t)(READ_REG(RNGx->DR));
 8028248:	68b3      	ldr	r3, [r6, #8]
      pv->pool[pv->size] = LL_RNG_ReadRandData32( RNG );
 802824a:	2001      	movs	r0, #1
 802824c:	f842 3b04 	str.w	r3, [r2], #4
 8028250:	460b      	mov	r3, r1
 8028252:	e7e8      	b.n	8028226 <HW_RNG_Run.constprop.0+0x86>
 8028254:	20008ec4 	.word	0x20008ec4
 8028258:	420c0800 	.word	0x420c0800

0802825c <HW_RNG_Start>:
  HW_RNG_VAR_T* pv = &HW_RNG_var;

  /* Reset global variables */
  pv->size = 0;
  pv->run = FALSE;
  pv->error = HW_OK;
 802825c:	2300      	movs	r3, #0
{
 802825e:	b510      	push	{r4, lr}
  pv->error = HW_OK;
 8028260:	4c08      	ldr	r4, [pc, #32]	; (8028284 <HW_RNG_Start+0x28>)
 8028262:	f8c4 3084 	str.w	r3, [r4, #132]	; 0x84
  pv->size = 0;
 8028266:	f8a4 3080 	strh.w	r3, [r4, #128]	; 0x80
  pv->clock_en = 0;
 802826a:	f884 3082 	strb.w	r3, [r4, #130]	; 0x82

  /* Fill the random numbers pool by calling the "run" function */
  do
  {
    pv->error = HW_RNG_Run( pv );
 802826e:	f7ff ff97 	bl	80281a0 <HW_RNG_Run.constprop.0>
  }
  while ( pv->run && !pv->error );
 8028272:	f894 3081 	ldrb.w	r3, [r4, #129]	; 0x81
    pv->error = HW_RNG_Run( pv );
 8028276:	f8c4 0084 	str.w	r0, [r4, #132]	; 0x84
  while ( pv->run && !pv->error );
 802827a:	b10b      	cbz	r3, 8028280 <HW_RNG_Start+0x24>
 802827c:	2800      	cmp	r0, #0
 802827e:	d0f6      	beq.n	802826e <HW_RNG_Start+0x12>
}
 8028280:	bd10      	pop	{r4, pc}
 8028282:	bf00      	nop
 8028284:	20008ec4 	.word	0x20008ec4

08028288 <HW_RNG_Get>:

/*****************************************************************************/

void HW_RNG_Get( uint8_t n, uint32_t* val )
{
 8028288:	b430      	push	{r4, r5}
  {
    UTILS_ENTER_CRITICAL_SECTION( );

    if ( pv->size == 0 )
    {
      pv->error = HW_RNG_UFLOW_ERROR;
 802828a:	f240 1403 	movw	r4, #259	; 0x103
 802828e:	3801      	subs	r0, #1
    if ( pv->size == 0 )
 8028290:	4a10      	ldr	r2, [pc, #64]	; (80282d4 <HW_RNG_Get+0x4c>)
 8028292:	b2c0      	uxtb	r0, r0
  while ( n-- )
 8028294:	28ff      	cmp	r0, #255	; 0xff
 8028296:	d102      	bne.n	802829e <HW_RNG_Get+0x16>
    *val++ = pool_value;
  }

  /* Call the process callback function to fill the pool offline */
  HWCB_RNG_Process( );
}
 8028298:	bc30      	pop	{r4, r5}
  HWCB_RNG_Process( );
 802829a:	f7fd bcad 	b.w	8025bf8 <HWCB_RNG_Process>
  __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
 802829e:	f3ef 8510 	mrs	r5, PRIMASK
  __ASM volatile ("cpsid i" : : : "memory");
 80282a2:	b672      	cpsid	i
    if ( pv->size == 0 )
 80282a4:	f892 3080 	ldrb.w	r3, [r2, #128]	; 0x80
 80282a8:	b96b      	cbnz	r3, 80282c6 <HW_RNG_Get+0x3e>
      pool_value = ~pv->pool[n & (CFG_HW_RNG_POOL_SIZE - 1)];
 80282aa:	f000 031f 	and.w	r3, r0, #31
 80282ae:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
      pv->error = HW_RNG_UFLOW_ERROR;
 80282b2:	f8c2 4084 	str.w	r4, [r2, #132]	; 0x84
      pool_value = ~pv->pool[n & (CFG_HW_RNG_POOL_SIZE - 1)];
 80282b6:	43db      	mvns	r3, r3
  __ASM volatile ("MSR primask, %0" : : "r" (priMask) : "memory");
 80282b8:	f385 8810 	msr	PRIMASK, r5
    *val++ = pool_value;
 80282bc:	3801      	subs	r0, #1
 80282be:	f841 3b04 	str.w	r3, [r1], #4
 80282c2:	b2c0      	uxtb	r0, r0
 80282c4:	e7e6      	b.n	8028294 <HW_RNG_Get+0xc>
      pool_value = pv->pool[--pv->size];
 80282c6:	3b01      	subs	r3, #1
 80282c8:	b2db      	uxtb	r3, r3
 80282ca:	f882 3080 	strb.w	r3, [r2, #128]	; 0x80
 80282ce:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 80282d2:	e7f1      	b.n	80282b8 <HW_RNG_Get+0x30>
 80282d4:	20008ec4 	.word	0x20008ec4

080282d8 <HW_RNG_Process>:

/*****************************************************************************/

int HW_RNG_Process( void )
{
 80282d8:	b538      	push	{r3, r4, r5, lr}
  HW_RNG_VAR_T* pv = &HW_RNG_var;
  int status = HW_OK;

  /* Check if the process is not done or if the pool is not full */
  if ( pv->run || (pv->size < CFG_HW_RNG_POOL_SIZE) )
 80282da:	4d11      	ldr	r5, [pc, #68]	; (8028320 <HW_RNG_Process+0x48>)
 80282dc:	f895 3081 	ldrb.w	r3, [r5, #129]	; 0x81
 80282e0:	b933      	cbnz	r3, 80282f0 <HW_RNG_Process+0x18>
 80282e2:	f895 3080 	ldrb.w	r3, [r5, #128]	; 0x80
 80282e6:	2b1f      	cmp	r3, #31
 80282e8:	d902      	bls.n	80282f0 <HW_RNG_Process+0x18>
  int status = HW_OK;
 80282ea:	2400      	movs	r4, #0
    HWCB_RNG_Process( );
  }

  /* Return status */
  return status;
}
 80282ec:	4620      	mov	r0, r4
 80282ee:	bd38      	pop	{r3, r4, r5, pc}
  __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
 80282f0:	f3ef 8310 	mrs	r3, PRIMASK
  __ASM volatile ("cpsid i" : : : "memory");
 80282f4:	b672      	cpsid	i
    pv->error = HW_OK;
 80282f6:	2200      	movs	r2, #0
    status = pv->error;
 80282f8:	f8d5 4084 	ldr.w	r4, [r5, #132]	; 0x84
    pv->error = HW_OK;
 80282fc:	f8c5 2084 	str.w	r2, [r5, #132]	; 0x84
  __ASM volatile ("MSR primask, %0" : : "r" (priMask) : "memory");
 8028300:	f383 8810 	msr	PRIMASK, r3
    if ( status == HW_OK )
 8028304:	b944      	cbnz	r4, 8028318 <HW_RNG_Process+0x40>
      status = HW_RNG_Run( pv );
 8028306:	f7ff ff4b 	bl	80281a0 <HW_RNG_Run.constprop.0>
      if ( (status == HW_OK) && pv->run )
 802830a:	4604      	mov	r4, r0
 802830c:	b920      	cbnz	r0, 8028318 <HW_RNG_Process+0x40>
 802830e:	f895 3081 	ldrb.w	r3, [r5, #129]	; 0x81
 8028312:	2b00      	cmp	r3, #0
 8028314:	d0e9      	beq.n	80282ea <HW_RNG_Process+0x12>
        status = HW_BUSY;
 8028316:	2401      	movs	r4, #1
    HWCB_RNG_Process( );
 8028318:	f7fd fc6e 	bl	8025bf8 <HWCB_RNG_Process>
  return status;
 802831c:	e7e6      	b.n	80282ec <HW_RNG_Process+0x14>
 802831e:	bf00      	nop
 8028320:	20008ec4 	.word	0x20008ec4

08028324 <HW_PKA_P256_StartRangeCheck>:
};

/*****************************************************************************/

void HW_PKA_P256_StartRangeCheck( const uint32_t* coord )
{
 8028324:	b507      	push	{r0, r1, r2, lr}
  /* Set the muber of bits of P */
  HW_PKA_WriteSingleInput( PKA_COMPARISON_IN_OP_NB_BITS, 256 );
 8028326:	f44f 7180 	mov.w	r1, #256	; 0x100
{
 802832a:	9001      	str	r0, [sp, #4]
  HW_PKA_WriteSingleInput( PKA_COMPARISON_IN_OP_NB_BITS, 256 );
 802832c:	2002      	movs	r0, #2
 802832e:	f7ff fe55 	bl	8027fdc <HW_PKA_WriteSingleInput>

  /* Set the coordinate */
  HW_PKA_WriteOperand( PKA_COMPARISON_IN_OP1, 8, coord );
 8028332:	9a01      	ldr	r2, [sp, #4]
 8028334:	2108      	movs	r1, #8
 8028336:	f44f 70ca 	mov.w	r0, #404	; 0x194
 802833a:	f7ff fe57 	bl	8027fec <HW_PKA_WriteOperand>

  /* Set the modulus value p */
  HW_PKA_WriteOperand( PKA_COMPARISON_IN_OP2, 8, HW_PKA_P256_gfp );
 802833e:	2108      	movs	r1, #8
 8028340:	f240 201a 	movw	r0, #538	; 0x21a
 8028344:	4a04      	ldr	r2, [pc, #16]	; (8028358 <HW_PKA_P256_StartRangeCheck+0x34>)
 8028346:	f7ff fe51 	bl	8027fec <HW_PKA_WriteOperand>

  /* Start PKA hardware */
  HW_PKA_Start( LL_PKA_MODE_COMPARISON );
 802834a:	200c      	movs	r0, #12
}
 802834c:	b003      	add	sp, #12
 802834e:	f85d eb04 	ldr.w	lr, [sp], #4
  HW_PKA_Start( LL_PKA_MODE_COMPARISON );
 8028352:	f7ff be61 	b.w	8028018 <HW_PKA_Start>
 8028356:	bf00      	nop
 8028358:	0803381c 	.word	0x0803381c

0802835c <HW_PKA_P256_IsRangeCheckOk>:

/*****************************************************************************/

uint32_t HW_PKA_P256_IsRangeCheckOk( void )
{
 802835c:	b508      	push	{r3, lr}
  return (HW_PKA_ReadSingleOutput( PKA_COMPARISON_OUT_RESULT ) == 0x916AUL);
 802835e:	f240 209e 	movw	r0, #670	; 0x29e
 8028362:	f7ff fe73 	bl	802804c <HW_PKA_ReadSingleOutput>
}
 8028366:	f249 136a 	movw	r3, #37226	; 0x916a
 802836a:	1ac3      	subs	r3, r0, r3
 802836c:	4258      	negs	r0, r3
 802836e:	4158      	adcs	r0, r3
 8028370:	bd08      	pop	{r3, pc}
	...

08028374 <HW_PKA_P256_StartPointCheck>:

/*****************************************************************************/

void HW_PKA_P256_StartPointCheck( const uint32_t* x,
                                  const uint32_t* y )
{
 8028374:	b538      	push	{r3, r4, r5, lr}
 8028376:	4605      	mov	r5, r0
 8028378:	460c      	mov	r4, r1
  /* Set the muber of bits of p */
  HW_PKA_WriteSingleInput( PKA_POINT_CHECK_IN_MOD_NB_BITS, 256 );
 802837a:	2002      	movs	r0, #2
 802837c:	f44f 7180 	mov.w	r1, #256	; 0x100
 8028380:	f7ff fe2c 	bl	8027fdc <HW_PKA_WriteSingleInput>

  /* Set the coefficient a sign */
  HW_PKA_WriteSingleInput( PKA_POINT_CHECK_IN_A_COEFF_SIGN, 1 );
 8028384:	2101      	movs	r1, #1
 8028386:	2004      	movs	r0, #4
 8028388:	f7ff fe28 	bl	8027fdc <HW_PKA_WriteSingleInput>

  /* Set the coefficient |a| */
  HW_PKA_WriteOperand( PKA_POINT_CHECK_IN_A_COEFF, 8, HW_PKA_P256_a );
 802838c:	2108      	movs	r1, #8
 802838e:	2006      	movs	r0, #6
 8028390:	4a10      	ldr	r2, [pc, #64]	; (80283d4 <HW_PKA_P256_StartPointCheck+0x60>)
 8028392:	f7ff fe2b 	bl	8027fec <HW_PKA_WriteOperand>

  /* Set the coefficient b */
  HW_PKA_WriteOperand( PKA_POINT_CHECK_IN_B_COEFF, 8, HW_PKA_P256_b );
 8028396:	2108      	movs	r1, #8
 8028398:	2048      	movs	r0, #72	; 0x48
 802839a:	4a0f      	ldr	r2, [pc, #60]	; (80283d8 <HW_PKA_P256_StartPointCheck+0x64>)
 802839c:	f7ff fe26 	bl	8027fec <HW_PKA_WriteOperand>

  /* Set the modulus value p */
  HW_PKA_WriteOperand( PKA_POINT_CHECK_IN_MOD_GF, 8, HW_PKA_P256_gfp );
 80283a0:	2108      	movs	r1, #8
 80283a2:	201c      	movs	r0, #28
 80283a4:	4a0d      	ldr	r2, [pc, #52]	; (80283dc <HW_PKA_P256_StartPointCheck+0x68>)
 80283a6:	f7ff fe21 	bl	8027fec <HW_PKA_WriteOperand>

  /* Set the point coordinate x */
  HW_PKA_WriteOperand( PKA_POINT_CHECK_IN_INITIAL_POINT_X, 8, x );
 80283aa:	462a      	mov	r2, r5
 80283ac:	2108      	movs	r1, #8
 80283ae:	205e      	movs	r0, #94	; 0x5e
 80283b0:	f7ff fe1c 	bl	8027fec <HW_PKA_WriteOperand>

  /* Set the point coordinate y */
  HW_PKA_WriteOperand( PKA_POINT_CHECK_IN_INITIAL_POINT_Y, 8, y );
 80283b4:	4622      	mov	r2, r4
 80283b6:	2108      	movs	r1, #8
 80283b8:	2074      	movs	r0, #116	; 0x74
 80283ba:	f7ff fe17 	bl	8027fec <HW_PKA_WriteOperand>

  /* Set the Montgomery parameter */
  HW_PKA_WriteOperand( PKA_POINT_CHECK_IN_MONTGOMERY_PARAM,
 80283be:	2032      	movs	r0, #50	; 0x32
 80283c0:	2108      	movs	r1, #8
 80283c2:	4a07      	ldr	r2, [pc, #28]	; (80283e0 <HW_PKA_P256_StartPointCheck+0x6c>)
 80283c4:	f7ff fe12 	bl	8027fec <HW_PKA_WriteOperand>
                       8, HW_PKA_P256_r2 );

  /* Start PKA hardware */
  HW_PKA_Start( LL_PKA_MODE_POINT_CHECK );
}
 80283c8:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
  HW_PKA_Start( LL_PKA_MODE_POINT_CHECK );
 80283cc:	2028      	movs	r0, #40	; 0x28
 80283ce:	f7ff be23 	b.w	8028018 <HW_PKA_Start>
 80283d2:	bf00      	nop
 80283d4:	080337dc 	.word	0x080337dc
 80283d8:	080337fc 	.word	0x080337fc
 80283dc:	0803381c 	.word	0x0803381c
 80283e0:	0803389c 	.word	0x0803389c

080283e4 <HW_PKA_P256_IsPointCheckOk>:

/*****************************************************************************/

uint32_t HW_PKA_P256_IsPointCheckOk( void )
{
 80283e4:	b508      	push	{r3, lr}
  return (HW_PKA_ReadSingleOutput( PKA_POINT_CHECK_OUT_ERROR ) == 0xD60DUL);
 80283e6:	20a0      	movs	r0, #160	; 0xa0
 80283e8:	f7ff fe30 	bl	802804c <HW_PKA_ReadSingleOutput>
}
 80283ec:	f24d 630d 	movw	r3, #54797	; 0xd60d
 80283f0:	1ac3      	subs	r3, r0, r3
 80283f2:	4258      	negs	r0, r3
 80283f4:	4158      	adcs	r0, r3
 80283f6:	bd08      	pop	{r3, pc}

080283f8 <HW_PKA_P256_StartEccScalarMul>:
/*****************************************************************************/

void HW_PKA_P256_StartEccScalarMul( const uint32_t* k,
                                    const uint32_t* p_x,
                                    const uint32_t* p_y )
{
 80283f8:	b570      	push	{r4, r5, r6, lr}
 80283fa:	4606      	mov	r6, r0
 80283fc:	460d      	mov	r5, r1
 80283fe:	4614      	mov	r4, r2
  /* Set the scalar multiplier k length */
  HW_PKA_WriteSingleInput( PKA_ECC_SCALAR_MUL_IN_EXP_NB_BITS, 256 );
 8028400:	f44f 7180 	mov.w	r1, #256	; 0x100
 8028404:	2000      	movs	r0, #0
 8028406:	f7ff fde9 	bl	8027fdc <HW_PKA_WriteSingleInput>

  /* Set the modulus length */
  HW_PKA_WriteSingleInput( PKA_ECC_SCALAR_MUL_IN_OP_NB_BITS, 256 );
 802840a:	f44f 7180 	mov.w	r1, #256	; 0x100
 802840e:	2002      	movs	r0, #2
 8028410:	f7ff fde4 	bl	8027fdc <HW_PKA_WriteSingleInput>

  /* Set the coefficient a sign */
  HW_PKA_WriteSingleInput( PKA_ECC_SCALAR_MUL_IN_A_COEFF_SIGN, 1 );
 8028414:	2101      	movs	r1, #1
 8028416:	2004      	movs	r0, #4
 8028418:	f7ff fde0 	bl	8027fdc <HW_PKA_WriteSingleInput>

  /* Set the coefficient |a| */
  HW_PKA_WriteOperand( PKA_ECC_SCALAR_MUL_IN_A_COEFF, 8, HW_PKA_P256_a );
 802841c:	2108      	movs	r1, #8
 802841e:	2006      	movs	r0, #6
 8028420:	4a17      	ldr	r2, [pc, #92]	; (8028480 <HW_PKA_P256_StartEccScalarMul+0x88>)
 8028422:	f7ff fde3 	bl	8027fec <HW_PKA_WriteOperand>

  /* Set the coefficient b */
  HW_PKA_WriteOperand( PKA_ECC_SCALAR_MUL_IN_B_COEFF, 8, HW_PKA_P256_b );
 8028426:	2108      	movs	r1, #8
 8028428:	2048      	movs	r0, #72	; 0x48
 802842a:	4a16      	ldr	r2, [pc, #88]	; (8028484 <HW_PKA_P256_StartEccScalarMul+0x8c>)
 802842c:	f7ff fdde 	bl	8027fec <HW_PKA_WriteOperand>

  /* Set the modulus value p */
  HW_PKA_WriteOperand( PKA_ECC_SCALAR_MUL_IN_MOD_GF, 8, HW_PKA_P256_gfp );
 8028430:	2108      	movs	r1, #8
 8028432:	f240 3022 	movw	r0, #802	; 0x322
 8028436:	4a14      	ldr	r2, [pc, #80]	; (8028488 <HW_PKA_P256_StartEccScalarMul+0x90>)
 8028438:	f7ff fdd8 	bl	8027fec <HW_PKA_WriteOperand>

  /* Set the scalar multiplier k */
  HW_PKA_WriteOperand( PKA_ECC_SCALAR_MUL_IN_K, 8, k );
 802843c:	4632      	mov	r2, r6
 802843e:	2108      	movs	r1, #8
 8028440:	f44f 706a 	mov.w	r0, #936	; 0x3a8
 8028444:	f7ff fdd2 	bl	8027fec <HW_PKA_WriteOperand>

  /* Set the point P coordinate x */
  HW_PKA_WriteOperand( PKA_ECC_SCALAR_MUL_IN_INITIAL_POINT_X,
 8028448:	4a10      	ldr	r2, [pc, #64]	; (802848c <HW_PKA_P256_StartEccScalarMul+0x94>)
 802844a:	2108      	movs	r1, #8
 802844c:	2d00      	cmp	r5, #0
 802844e:	bf18      	it	ne
 8028450:	462a      	movne	r2, r5
 8028452:	205e      	movs	r0, #94	; 0x5e
 8028454:	f7ff fdca 	bl	8027fec <HW_PKA_WriteOperand>
                       8, p_x ? p_x : HW_PKA_P256_p_x );

  /* Set the point P coordinate y */
  HW_PKA_WriteOperand( PKA_ECC_SCALAR_MUL_IN_INITIAL_POINT_Y,
 8028458:	4a0d      	ldr	r2, [pc, #52]	; (8028490 <HW_PKA_P256_StartEccScalarMul+0x98>)
 802845a:	2108      	movs	r1, #8
 802845c:	2c00      	cmp	r4, #0
 802845e:	bf18      	it	ne
 8028460:	4622      	movne	r2, r4
 8028462:	201c      	movs	r0, #28
 8028464:	f7ff fdc2 	bl	8027fec <HW_PKA_WriteOperand>
                       8, p_y ? p_y : HW_PKA_P256_p_y );

  /* Set the prime order n */
  HW_PKA_WriteOperand( PKA_ECC_SCALAR_MUL_IN_N_PRIME_ORDER,
 8028468:	f240 20e2 	movw	r0, #738	; 0x2e2
 802846c:	2108      	movs	r1, #8
 802846e:	4a09      	ldr	r2, [pc, #36]	; (8028494 <HW_PKA_P256_StartEccScalarMul+0x9c>)
 8028470:	f7ff fdbc 	bl	8027fec <HW_PKA_WriteOperand>
                       8, HW_PKA_P256_n );

  /* Start PKA hardware */
  HW_PKA_Start( LL_PKA_MODE_ECC_MUL );
}
 8028474:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
  HW_PKA_Start( LL_PKA_MODE_ECC_MUL );
 8028478:	2020      	movs	r0, #32
 802847a:	f7ff bdcd 	b.w	8028018 <HW_PKA_Start>
 802847e:	bf00      	nop
 8028480:	080337dc 	.word	0x080337dc
 8028484:	080337fc 	.word	0x080337fc
 8028488:	0803381c 	.word	0x0803381c
 802848c:	0803385c 	.word	0x0803385c
 8028490:	0803387c 	.word	0x0803387c
 8028494:	0803383c 	.word	0x0803383c

08028498 <HW_PKA_P256_ReadEccScalarMul>:

/*****************************************************************************/

void HW_PKA_P256_ReadEccScalarMul( uint32_t* p_x,
                                   uint32_t* p_y )
{
 8028498:	b510      	push	{r4, lr}
  /* Read the output point X */
  if ( p_x )
 802849a:	4602      	mov	r2, r0
{
 802849c:	460c      	mov	r4, r1
  if ( p_x )
 802849e:	b118      	cbz	r0, 80284a8 <HW_PKA_P256_ReadEccScalarMul+0x10>
  {
    HW_PKA_ReadResult( PKA_ECC_SCALAR_MUL_OUT_RESULT_X, 8, p_x );
 80284a0:	2108      	movs	r1, #8
 80284a2:	205e      	movs	r0, #94	; 0x5e
 80284a4:	f7ff fdda 	bl	802805c <HW_PKA_ReadResult>
  }

  /* Read the output point Y as the second half of the result */
  if ( p_y )
 80284a8:	b134      	cbz	r4, 80284b8 <HW_PKA_P256_ReadEccScalarMul+0x20>
  {
    HW_PKA_ReadResult( PKA_ECC_SCALAR_MUL_OUT_RESULT_Y, 8, p_y );
 80284aa:	4622      	mov	r2, r4
  }
}
 80284ac:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
    HW_PKA_ReadResult( PKA_ECC_SCALAR_MUL_OUT_RESULT_Y, 8, p_y );
 80284b0:	2108      	movs	r1, #8
 80284b2:	2074      	movs	r0, #116	; 0x74
 80284b4:	f7ff bdd2 	b.w	802805c <HW_PKA_ReadResult>
}
 80284b8:	bd10      	pop	{r4, pc}
	...

080284bc <is_boot_from_standby>:
#if (CFG_DBG_SUPPORTED == 0)
  LL_DBGMCU_DisableDBGStopMode();
  LL_DBGMCU_DisableDBGStandbyMode();
#endif

  __HAL_RCC_PWR_CLK_ENABLE();
 80284bc:	4b15      	ldr	r3, [pc, #84]	; (8028514 <is_boot_from_standby+0x58>)
{
 80284be:	b082      	sub	sp, #8
  __HAL_RCC_PWR_CLK_ENABLE();
 80284c0:	f8d3 2094 	ldr.w	r2, [r3, #148]	; 0x94

  LL_PWR_EnableUltraLowPowerMode();
  __HAL_FLASH_SLEEP_POWERDOWN_ENABLE();
 80284c4:	4814      	ldr	r0, [pc, #80]	; (8028518 <is_boot_from_standby+0x5c>)
  __HAL_RCC_PWR_CLK_ENABLE();
 80284c6:	f042 0204 	orr.w	r2, r2, #4
 80284ca:	f8c3 2094 	str.w	r2, [r3, #148]	; 0x94
 80284ce:	f8d3 2094 	ldr.w	r2, [r3, #148]	; 0x94
 80284d2:	f002 0204 	and.w	r2, r2, #4
 80284d6:	9201      	str	r2, [sp, #4]
 80284d8:	9a01      	ldr	r2, [sp, #4]
  SET_BIT(PWR->CR1, PWR_CR1_ULPMEN);
 80284da:	4a10      	ldr	r2, [pc, #64]	; (802851c <is_boot_from_standby+0x60>)
 80284dc:	6811      	ldr	r1, [r2, #0]
 80284de:	f041 0180 	orr.w	r1, r1, #128	; 0x80
 80284e2:	6011      	str	r1, [r2, #0]
  __HAL_FLASH_SLEEP_POWERDOWN_ENABLE();
 80284e4:	6801      	ldr	r1, [r0, #0]
 80284e6:	f441 4180 	orr.w	r1, r1, #16384	; 0x4000
 80284ea:	6001      	str	r1, [r0, #0]

  standby_cnt++;
 80284ec:	480c      	ldr	r0, [pc, #48]	; (8028520 <is_boot_from_standby+0x64>)
 80284ee:	6801      	ldr	r1, [r0, #0]
 80284f0:	3101      	adds	r1, #1
 80284f2:	6001      	str	r1, [r0, #0]
  * @rmtoll SR          SBF          LL_PWR_IsActiveFlag_SB
  * @retval State of bit (1 or 0).
  */
__STATIC_INLINE uint32_t LL_PWR_IsActiveFlag_SB(void)
{
  return ((READ_BIT(PWR->SR, PWR_SR_SBF) == (PWR_SR_SBF)) ? 1UL : 0UL);
 80284f4:	6b92      	ldr	r2, [r2, #56]	; 0x38
 80284f6:	f012 0f04 	tst.w	r2, #4
 80284fa:	4a0a      	ldr	r2, [pc, #40]	; (8028524 <is_boot_from_standby+0x68>)
 80284fc:	d008      	beq.n	8028510 <is_boot_from_standby+0x54>

  /* Ensure this is a return from Standby, and not a reset */
  if( (LL_PWR_IsActiveFlag_SB() == 1UL ) &&
      (READ_REG(RCC->CSR) == 0U)
 80284fe:	f8d3 30f4 	ldr.w	r3, [r3, #244]	; 0xf4
  if( (LL_PWR_IsActiveFlag_SB() == 1UL ) &&
 8028502:	b92b      	cbnz	r3, 8028510 <is_boot_from_standby+0x54>
  __ASM volatile ("cpsid i" : : : "memory");
 8028504:	b672      	cpsid	i
    )
  {
    /* When exit from standby, disable IRQ so that restore and PWR_ExitOffMode are in critical section */
    __disable_irq( );

    boot_after_standby = 1;
 8028506:	2301      	movs	r3, #1
  }
  else
  {
    boot_after_standby = 0;
 8028508:	6013      	str	r3, [r2, #0]
  }

  return boot_after_standby;
}
 802850a:	6810      	ldr	r0, [r2, #0]
 802850c:	b002      	add	sp, #8
 802850e:	4770      	bx	lr
    boot_after_standby = 0;
 8028510:	2300      	movs	r3, #0
 8028512:	e7f9      	b.n	8028508 <is_boot_from_standby+0x4c>
 8028514:	46020c00 	.word	0x46020c00
 8028518:	40022000 	.word	0x40022000
 802851c:	46020800 	.word	0x46020800
 8028520:	20008f54 	.word	0x20008f54
 8028524:	20008f50 	.word	0x20008f50

08028528 <enter_standby_notification>:

__weak void enter_standby_notification(void)
{
  /* User code here */
}
 8028528:	4770      	bx	lr

0802852a <exit_standby_notification>:
 802852a:	4770      	bx	lr

0802852c <TIMER_IF_SetTimerContext>:
  * @retval If binary mode is none, Value between Min_Data=0x0 and Max_Data=0x7FFF
  *         else Value between Min_Data=0x0 and Max_Data=0xFFFFFFFF
  */
__STATIC_INLINE uint32_t LL_RTC_TIME_GetSubSecond(const RTC_TypeDef *RTCx)
{
  return (uint32_t)(READ_BIT(RTCx->SSR, RTC_SSR_SS));
 802852c:	4b02      	ldr	r3, [pc, #8]	; (8028538 <TIMER_IF_SetTimerContext+0xc>)
 802852e:	6898      	ldr	r0, [r3, #8]
}

uint32_t TIMER_IF_SetTimerContext(void)
{
  /* Store time context */
  RtcTimerContext = GetTimerTicks();
 8028530:	4b02      	ldr	r3, [pc, #8]	; (802853c <TIMER_IF_SetTimerContext+0x10>)
{
  /* USER CODE BEGIN GetTimerTicks_1 */

  /* USER CODE END GetTimerTicks_1 */

  return (UINT32_MAX - LL_RTC_TIME_GetSubSecond(RTC));
 8028532:	43c0      	mvns	r0, r0
  RtcTimerContext = GetTimerTicks();
 8028534:	6018      	str	r0, [r3, #0]
}
 8028536:	4770      	bx	lr
 8028538:	46007800 	.word	0x46007800
 802853c:	20008f5c 	.word	0x20008f5c

08028540 <TIMER_IF_GetTimerContext>:
}
 8028540:	4b01      	ldr	r3, [pc, #4]	; (8028548 <TIMER_IF_GetTimerContext+0x8>)
 8028542:	6818      	ldr	r0, [r3, #0]
 8028544:	4770      	bx	lr
 8028546:	bf00      	nop
 8028548:	20008f5c 	.word	0x20008f5c

0802854c <TIMER_IF_GetTimerElapsedTime>:
 802854c:	4b03      	ldr	r3, [pc, #12]	; (802855c <TIMER_IF_GetTimerElapsedTime+0x10>)
  return ((uint32_t)(GetTimerTicks() - RtcTimerContext));
 802854e:	4a04      	ldr	r2, [pc, #16]	; (8028560 <TIMER_IF_GetTimerElapsedTime+0x14>)
 8028550:	689b      	ldr	r3, [r3, #8]
 8028552:	6810      	ldr	r0, [r2, #0]
  return (UINT32_MAX - LL_RTC_TIME_GetSubSecond(RTC));
 8028554:	43db      	mvns	r3, r3
}
 8028556:	1a18      	subs	r0, r3, r0
 8028558:	4770      	bx	lr
 802855a:	bf00      	nop
 802855c:	46007800 	.word	0x46007800
 8028560:	20008f5c 	.word	0x20008f5c

08028564 <TIMER_IF_GetTimerValue>:
  if (RTC_Initialized == true)
 8028564:	4b03      	ldr	r3, [pc, #12]	; (8028574 <TIMER_IF_GetTimerValue+0x10>)
 8028566:	7818      	ldrb	r0, [r3, #0]
 8028568:	b110      	cbz	r0, 8028570 <TIMER_IF_GetTimerValue+0xc>
 802856a:	4b03      	ldr	r3, [pc, #12]	; (8028578 <TIMER_IF_GetTimerValue+0x14>)
 802856c:	6898      	ldr	r0, [r3, #8]
  return (UINT32_MAX - LL_RTC_TIME_GetSubSecond(RTC));
 802856e:	43c0      	mvns	r0, r0
}
 8028570:	4770      	bx	lr
 8028572:	bf00      	nop
 8028574:	20008f58 	.word	0x20008f58
 8028578:	46007800 	.word	0x46007800

0802857c <TIMER_IF_GetMinimumTimeout>:
}
 802857c:	2003      	movs	r0, #3
 802857e:	4770      	bx	lr

08028580 <TIMER_IF_Convert_ms2Tick>:
{
 8028580:	4601      	mov	r1, r0
 8028582:	b508      	push	{r3, lr}
  return ((uint32_t)((((uint64_t) timeMilliSec) << RTC_N_PREDIV_S) / 1000));
 8028584:	f44f 727a 	mov.w	r2, #1000	; 0x3e8
 8028588:	2300      	movs	r3, #0
 802858a:	0280      	lsls	r0, r0, #10
 802858c:	0d89      	lsrs	r1, r1, #22
 802858e:	f7fd f853 	bl	8025638 <__aeabi_uldivmod>
}
 8028592:	bd08      	pop	{r3, pc}

08028594 <TIMER_IF_Convert_Tick2ms>:
  return ((uint32_t)((((uint64_t)(tick)) * 1000) >> RTC_N_PREDIV_S));
 8028594:	f44f 737a 	mov.w	r3, #1000	; 0x3e8
 8028598:	fba0 3003 	umull	r3, r0, r0, r3
 802859c:	0a9b      	lsrs	r3, r3, #10
}
 802859e:	ea43 5080 	orr.w	r0, r3, r0, lsl #22
 80285a2:	4770      	bx	lr

080285a4 <TIMER_IF_StopTimer>:
  __HAL_RTC_ALARM_CLEAR_FLAG(&hrtc, RTC_FLAG_ALRAF);
 80285a4:	2201      	movs	r2, #1
{
 80285a6:	b508      	push	{r3, lr}
  __HAL_RTC_ALARM_CLEAR_FLAG(&hrtc, RTC_FLAG_ALRAF);
 80285a8:	4b04      	ldr	r3, [pc, #16]	; (80285bc <TIMER_IF_StopTimer+0x18>)
  HAL_RTC_DeactivateAlarm(&hrtc, RTC_ALARM_A);
 80285aa:	f44f 7180 	mov.w	r1, #256	; 0x100
  __HAL_RTC_ALARM_CLEAR_FLAG(&hrtc, RTC_FLAG_ALRAF);
 80285ae:	65da      	str	r2, [r3, #92]	; 0x5c
  HAL_RTC_DeactivateAlarm(&hrtc, RTC_ALARM_A);
 80285b0:	4803      	ldr	r0, [pc, #12]	; (80285c0 <TIMER_IF_StopTimer+0x1c>)
 80285b2:	f005 fb7d 	bl	802dcb0 <HAL_RTC_DeactivateAlarm>
}
 80285b6:	2000      	movs	r0, #0
 80285b8:	bd08      	pop	{r3, pc}
 80285ba:	bf00      	nop
 80285bc:	46007800 	.word	0x46007800
 80285c0:	20004cd8 	.word	0x20004cd8

080285c4 <TIMER_IF_StartTimer>:
{
 80285c4:	b510      	push	{r4, lr}
 80285c6:	b08c      	sub	sp, #48	; 0x30
  RTC_AlarmTypeDef sAlarm = {0};
 80285c8:	2230      	movs	r2, #48	; 0x30
 80285ca:	2100      	movs	r1, #0
{
 80285cc:	4604      	mov	r4, r0
  RTC_AlarmTypeDef sAlarm = {0};
 80285ce:	4668      	mov	r0, sp
 80285d0:	f008 fced 	bl	8030fae <memset>
  TIMER_IF_StopTimer();
 80285d4:	f7ff ffe6 	bl	80285a4 <TIMER_IF_StopTimer>
  timeout += RtcTimerContext;
 80285d8:	4b0b      	ldr	r3, [pc, #44]	; (8028608 <TIMER_IF_StartTimer+0x44>)
  if (HAL_RTC_SetAlarm_IT(&hrtc, &sAlarm, RTC_FORMAT_BCD) != HAL_OK)
 80285da:	2201      	movs	r2, #1
  timeout += RtcTimerContext;
 80285dc:	6818      	ldr	r0, [r3, #0]
  sAlarm.BinaryAutoClr        = RTC_ALARMSUBSECONDBIN_AUTOCLR_NO;
 80285de:	2300      	movs	r3, #0
 80285e0:	9307      	str	r3, [sp, #28]
  sAlarm.AlarmMask            = RTC_ALARMMASK_NONE;
 80285e2:	9305      	str	r3, [sp, #20]
  sAlarm.AlarmSubSecondMask   = RTC_ALARMSUBSECONDBINMASK_NONE;
 80285e4:	f04f 537c 	mov.w	r3, #1056964608	; 0x3f000000
  timeout += RtcTimerContext;
 80285e8:	4404      	add	r4, r0
  sAlarm.AlarmTime.SubSeconds = UINT32_MAX - timeout;
 80285ea:	43e4      	mvns	r4, r4
  sAlarm.AlarmSubSecondMask   = RTC_ALARMSUBSECONDBINMASK_NONE;
 80285ec:	9306      	str	r3, [sp, #24]
  sAlarm.Alarm                = RTC_ALARM_A;
 80285ee:	f44f 7380 	mov.w	r3, #256	; 0x100
  if (HAL_RTC_SetAlarm_IT(&hrtc, &sAlarm, RTC_FORMAT_BCD) != HAL_OK)
 80285f2:	4669      	mov	r1, sp
 80285f4:	4805      	ldr	r0, [pc, #20]	; (802860c <TIMER_IF_StartTimer+0x48>)
  sAlarm.AlarmTime.SubSeconds = UINT32_MAX - timeout;
 80285f6:	9401      	str	r4, [sp, #4]
  sAlarm.Alarm                = RTC_ALARM_A;
 80285f8:	930b      	str	r3, [sp, #44]	; 0x2c
  if (HAL_RTC_SetAlarm_IT(&hrtc, &sAlarm, RTC_FORMAT_BCD) != HAL_OK)
 80285fa:	f005 fcf7 	bl	802dfec <HAL_RTC_SetAlarm_IT>
 80285fe:	b100      	cbz	r0, 8028602 <TIMER_IF_StartTimer+0x3e>
    while(1);
 8028600:	e7fe      	b.n	8028600 <TIMER_IF_StartTimer+0x3c>
}
 8028602:	b00c      	add	sp, #48	; 0x30
 8028604:	bd10      	pop	{r4, pc}
 8028606:	bf00      	nop
 8028608:	20008f5c 	.word	0x20008f5c
 802860c:	20004cd8 	.word	0x20004cd8

08028610 <TIMER_IF_Init>:
{
 8028610:	b538      	push	{r3, r4, r5, lr}
  if (RTC_Initialized == false)
 8028612:	4c0d      	ldr	r4, [pc, #52]	; (8028648 <TIMER_IF_Init+0x38>)
 8028614:	7825      	ldrb	r5, [r4, #0]
 8028616:	b9a5      	cbnz	r5, 8028642 <TIMER_IF_Init+0x32>
    MX_RTC_Init();
 8028618:	f7fd fbca 	bl	8025db0 <MX_RTC_Init>
    TIMER_IF_StopTimer();
 802861c:	f7ff ffc2 	bl	80285a4 <TIMER_IF_StopTimer>
    HAL_RTC_DeactivateAlarm(&hrtc, RTC_ALARM_A);
 8028620:	f44f 7180 	mov.w	r1, #256	; 0x100
 8028624:	4809      	ldr	r0, [pc, #36]	; (802864c <TIMER_IF_Init+0x3c>)
 8028626:	f005 fb43 	bl	802dcb0 <HAL_RTC_DeactivateAlarm>
    HAL_RTCEx_EnableBypassShadow(&hrtc);
 802862a:	4808      	ldr	r0, [pc, #32]	; (802864c <TIMER_IF_Init+0x3c>)
 802862c:	f005 fe9a 	bl	802e364 <HAL_RTCEx_EnableBypassShadow>
  HAL_RTCEx_BKUPWrite(&hrtc, RTC_BKP_MSBTICKS, MSBticks);
 8028630:	4806      	ldr	r0, [pc, #24]	; (802864c <TIMER_IF_Init+0x3c>)
 8028632:	462a      	mov	r2, r5
 8028634:	2102      	movs	r1, #2
 8028636:	f005 fed3 	bl	802e3e0 <HAL_RTCEx_BKUPWrite>
    TIMER_IF_SetTimerContext();
 802863a:	f7ff ff77 	bl	802852c <TIMER_IF_SetTimerContext>
    RTC_Initialized = true;
 802863e:	2301      	movs	r3, #1
 8028640:	7023      	strb	r3, [r4, #0]
}
 8028642:	2000      	movs	r0, #0
 8028644:	bd38      	pop	{r3, r4, r5, pc}
 8028646:	bf00      	nop
 8028648:	20008f58 	.word	0x20008f58
 802864c:	20004cd8 	.word	0x20004cd8

08028650 <HAL_RTC_AlarmAEventCallback>:
  UTIL_TIMER_IRQ_Handler();
 8028650:	f008 bc02 	b.w	8030e58 <UTIL_TIMER_IRQ_Handler>

08028654 <UsartIf_TxCpltCallback>:
  /* USER CODE BEGIN UsartIf_TxCpltCallback 1 */

  /* USER CODE END UsartIf_TxCpltCallback 1 */

  /* ADV Trace callback */
  TxCpltCallback(NULL);
 8028654:	4b01      	ldr	r3, [pc, #4]	; (802865c <UsartIf_TxCpltCallback+0x8>)
 8028656:	2000      	movs	r0, #0
 8028658:	681b      	ldr	r3, [r3, #0]
 802865a:	4718      	bx	r3
 802865c:	20008f64 	.word	0x20008f64

08028660 <get_IRQn_Type_from_DMA_HandleTypeDef>:
  * TAKE CARE : in case of an invalid parameter or e.g. an usart/lpuart not initialized, this will lead to hard fault.
  *             it is up to the user to ensure the serial link is in a valid state.
  */
static IRQn_Type get_IRQn_Type_from_DMA_HandleTypeDef(DMA_HandleTypeDef * dma_handler)
{
  if (dma_handler->Instance == GPDMA1_Channel0) { return GPDMA1_Channel0_IRQn; }
 8028660:	6800      	ldr	r0, [r0, #0]
 8028662:	4b14      	ldr	r3, [pc, #80]	; (80286b4 <get_IRQn_Type_from_DMA_HandleTypeDef+0x54>)
 8028664:	4298      	cmp	r0, r3
 8028666:	d017      	beq.n	8028698 <get_IRQn_Type_from_DMA_HandleTypeDef+0x38>
  if (dma_handler->Instance == GPDMA1_Channel1) { return GPDMA1_Channel1_IRQn; }
 8028668:	3380      	adds	r3, #128	; 0x80
 802866a:	4298      	cmp	r0, r3
 802866c:	d016      	beq.n	802869c <get_IRQn_Type_from_DMA_HandleTypeDef+0x3c>
  if (dma_handler->Instance == GPDMA1_Channel2) { return GPDMA1_Channel2_IRQn; }
 802866e:	3380      	adds	r3, #128	; 0x80
 8028670:	4298      	cmp	r0, r3
 8028672:	d015      	beq.n	80286a0 <get_IRQn_Type_from_DMA_HandleTypeDef+0x40>
  if (dma_handler->Instance == GPDMA1_Channel3) { return GPDMA1_Channel3_IRQn; }
 8028674:	3380      	adds	r3, #128	; 0x80
 8028676:	4298      	cmp	r0, r3
 8028678:	d014      	beq.n	80286a4 <get_IRQn_Type_from_DMA_HandleTypeDef+0x44>
  if (dma_handler->Instance == GPDMA1_Channel4) { return GPDMA1_Channel4_IRQn; }
 802867a:	3380      	adds	r3, #128	; 0x80
 802867c:	4298      	cmp	r0, r3
 802867e:	d013      	beq.n	80286a8 <get_IRQn_Type_from_DMA_HandleTypeDef+0x48>
  if (dma_handler->Instance == GPDMA1_Channel5) { return GPDMA1_Channel5_IRQn; }
 8028680:	3380      	adds	r3, #128	; 0x80
 8028682:	4298      	cmp	r0, r3
 8028684:	d012      	beq.n	80286ac <get_IRQn_Type_from_DMA_HandleTypeDef+0x4c>
  if (dma_handler->Instance == GPDMA1_Channel6) { return GPDMA1_Channel6_IRQn; }
 8028686:	3380      	adds	r3, #128	; 0x80
 8028688:	4298      	cmp	r0, r3
 802868a:	d011      	beq.n	80286b0 <get_IRQn_Type_from_DMA_HandleTypeDef+0x50>
  if (dma_handler->Instance == GPDMA1_Channel7) { return GPDMA1_Channel7_IRQn; }
 802868c:	3380      	adds	r3, #128	; 0x80
 802868e:	4298      	cmp	r0, r3
 8028690:	bf14      	ite	ne
 8028692:	2066      	movne	r0, #102	; 0x66
 8028694:	2024      	moveq	r0, #36	; 0x24
 8028696:	4770      	bx	lr
  if (dma_handler->Instance == GPDMA1_Channel0) { return GPDMA1_Channel0_IRQn; }
 8028698:	201d      	movs	r0, #29
 802869a:	4770      	bx	lr
  if (dma_handler->Instance == GPDMA1_Channel1) { return GPDMA1_Channel1_IRQn; }
 802869c:	201e      	movs	r0, #30
 802869e:	4770      	bx	lr
  if (dma_handler->Instance == GPDMA1_Channel2) { return GPDMA1_Channel2_IRQn; }
 80286a0:	201f      	movs	r0, #31
 80286a2:	4770      	bx	lr
  if (dma_handler->Instance == GPDMA1_Channel3) { return GPDMA1_Channel3_IRQn; }
 80286a4:	2020      	movs	r0, #32
 80286a6:	4770      	bx	lr
  if (dma_handler->Instance == GPDMA1_Channel4) { return GPDMA1_Channel4_IRQn; }
 80286a8:	2021      	movs	r0, #33	; 0x21
 80286aa:	4770      	bx	lr
  if (dma_handler->Instance == GPDMA1_Channel5) { return GPDMA1_Channel5_IRQn; }
 80286ac:	2022      	movs	r0, #34	; 0x22
 80286ae:	4770      	bx	lr
  if (dma_handler->Instance == GPDMA1_Channel6) { return GPDMA1_Channel6_IRQn; }
 80286b0:	2023      	movs	r0, #35	; 0x23

  /* Values from (-1) to (-15) are already in used. This value isn't used so it should be safe.
     So, if you see this value, it means you used an invalid DMA handler as input. */
  return (IRQn_Type)(-666);
}
 80286b2:	4770      	bx	lr
 80286b4:	40020050 	.word	0x40020050

080286b8 <UART_Init>:
{
 80286b8:	b538      	push	{r3, r4, r5, lr}
 80286ba:	4604      	mov	r4, r0
  HAL_UART_MspInit(&huart1);
 80286bc:	4d06      	ldr	r5, [pc, #24]	; (80286d8 <UART_Init+0x20>)
 80286be:	4628      	mov	r0, r5
 80286c0:	f7fd fe8e 	bl	80263e0 <HAL_UART_MspInit>
  MX_USART1_UART_Init();
 80286c4:	f7fd fbbc 	bl	8025e40 <MX_USART1_UART_Init>
  TxCpltCallback = cb;
 80286c8:	4b04      	ldr	r3, [pc, #16]	; (80286dc <UART_Init+0x24>)
}
 80286ca:	2000      	movs	r0, #0
  TxCpltCallback = cb;
 80286cc:	601c      	str	r4, [r3, #0]
  huart1.TxCpltCallback = UsartIf_TxCpltCallback;
 80286ce:	4b04      	ldr	r3, [pc, #16]	; (80286e0 <UART_Init+0x28>)
 80286d0:	f8c5 3098 	str.w	r3, [r5, #152]	; 0x98
}
 80286d4:	bd38      	pop	{r3, r4, r5, pc}
 80286d6:	bf00      	nop
 80286d8:	20004d54 	.word	0x20004d54
 80286dc:	20008f64 	.word	0x20008f64
 80286e0:	08028655 	.word	0x08028655

080286e4 <UART_DeInit>:
{
 80286e4:	b510      	push	{r4, lr}
  __HAL_RCC_USART1_CLK_DISABLE();
 80286e6:	4c1f      	ldr	r4, [pc, #124]	; (8028764 <UART_DeInit+0x80>)
  HAL_NVIC_DisableIRQ(USART1_IRQn);
 80286e8:	202e      	movs	r0, #46	; 0x2e
  __HAL_RCC_USART1_CLK_DISABLE();
 80286ea:	f8d4 30a4 	ldr.w	r3, [r4, #164]	; 0xa4
 80286ee:	f423 4380 	bic.w	r3, r3, #16384	; 0x4000
 80286f2:	f8c4 30a4 	str.w	r3, [r4, #164]	; 0xa4
  HAL_NVIC_DisableIRQ(USART1_IRQn);
 80286f6:	f003 f87f 	bl	802b7f8 <HAL_NVIC_DisableIRQ>
  __HAL_RCC_GPDMA1_CLK_DISABLE();
 80286fa:	f8d4 3088 	ldr.w	r3, [r4, #136]	; 0x88
 80286fe:	f023 0301 	bic.w	r3, r3, #1
 8028702:	f8c4 3088 	str.w	r3, [r4, #136]	; 0x88
  HAL_NVIC_DisableIRQ(get_IRQn_Type_from_DMA_HandleTypeDef(huart1.hdmatx));
 8028706:	4c18      	ldr	r4, [pc, #96]	; (8028768 <UART_DeInit+0x84>)
 8028708:	6fe0      	ldr	r0, [r4, #124]	; 0x7c
 802870a:	f7ff ffa9 	bl	8028660 <get_IRQn_Type_from_DMA_HandleTypeDef>
 802870e:	f003 f873 	bl	802b7f8 <HAL_NVIC_DisableIRQ>
  result = HAL_UART_DeInit(&huart1);
 8028712:	4620      	mov	r0, r4
 8028714:	f006 ffa0 	bl	802f658 <HAL_UART_DeInit>
  if (result != HAL_OK)
 8028718:	b128      	cbz	r0, 8028726 <UART_DeInit+0x42>
    huart1.TxCpltCallback = NULL;
 802871a:	2300      	movs	r3, #0
 802871c:	f8c4 3098 	str.w	r3, [r4, #152]	; 0x98
      return UTIL_ADV_TRACE_UNKNOWN_ERROR;
 8028720:	f06f 0003 	mvn.w	r0, #3
 8028724:	e016      	b.n	8028754 <UART_DeInit+0x70>
  use_dma = get_IRQn_Type_from_DMA_HandleTypeDef(huart1.hdmatx);
 8028726:	6fe2      	ldr	r2, [r4, #124]	; 0x7c
 8028728:	4610      	mov	r0, r2
 802872a:	f7ff ff99 	bl	8028660 <get_IRQn_Type_from_DMA_HandleTypeDef>
      || use_dma == GPDMA1_Channel6_IRQn || use_dma == GPDMA1_Channel7_IRQn)
 802872e:	381d      	subs	r0, #29
  if (use_dma == GPDMA1_Channel0_IRQn || use_dma == GPDMA1_Channel1_IRQn
 8028730:	b2c0      	uxtb	r0, r0
 8028732:	2807      	cmp	r0, #7
 8028734:	d90f      	bls.n	8028756 <UART_DeInit+0x72>
  use_dma = get_IRQn_Type_from_DMA_HandleTypeDef(huart1.hdmarx);
 8028736:	f8d4 2080 	ldr.w	r2, [r4, #128]	; 0x80
 802873a:	4610      	mov	r0, r2
 802873c:	f7ff ff90 	bl	8028660 <get_IRQn_Type_from_DMA_HandleTypeDef>
      || use_dma == GPDMA1_Channel6_IRQn || use_dma == GPDMA1_Channel7_IRQn)
 8028740:	381d      	subs	r0, #29
  if (use_dma == GPDMA1_Channel0_IRQn || use_dma == GPDMA1_Channel1_IRQn
 8028742:	b2c0      	uxtb	r0, r0
 8028744:	2807      	cmp	r0, #7
 8028746:	d804      	bhi.n	8028752 <UART_DeInit+0x6e>
    result = HAL_DMA_DeInit(huart1.hdmarx);
 8028748:	4610      	mov	r0, r2
 802874a:	f003 fb17 	bl	802bd7c <HAL_DMA_DeInit>
    if (result != HAL_OK)
 802874e:	2800      	cmp	r0, #0
 8028750:	d1e6      	bne.n	8028720 <UART_DeInit+0x3c>
  return UTIL_ADV_TRACE_OK;
 8028752:	2000      	movs	r0, #0
}
 8028754:	bd10      	pop	{r4, pc}
    result = HAL_DMA_DeInit(huart1.hdmatx);
 8028756:	4610      	mov	r0, r2
 8028758:	f003 fb10 	bl	802bd7c <HAL_DMA_DeInit>
    if (result != HAL_OK)
 802875c:	2800      	cmp	r0, #0
 802875e:	d0ea      	beq.n	8028736 <UART_DeInit+0x52>
 8028760:	e7de      	b.n	8028720 <UART_DeInit+0x3c>
 8028762:	bf00      	nop
 8028764:	46020c00 	.word	0x46020c00
 8028768:	20004d54 	.word	0x20004d54

0802876c <UART_StartRx>:
{
 802876c:	b538      	push	{r3, r4, r5, lr}
 802876e:	4604      	mov	r4, r0
  HAL_UART_Receive_IT(&huart1, &charRx, 1);
 8028770:	4d06      	ldr	r5, [pc, #24]	; (802878c <UART_StartRx+0x20>)
 8028772:	2201      	movs	r2, #1
 8028774:	4628      	mov	r0, r5
 8028776:	4906      	ldr	r1, [pc, #24]	; (8028790 <UART_StartRx+0x24>)
 8028778:	f007 fdf2 	bl	8030360 <HAL_UART_Receive_IT>
  huart1.RxCpltCallback = &UsartIf_RxCpltCallback;
 802877c:	4b05      	ldr	r3, [pc, #20]	; (8028794 <UART_StartRx+0x28>)
 802877e:	f8c5 30a0 	str.w	r3, [r5, #160]	; 0xa0
  if (cb != NULL)
 8028782:	b10c      	cbz	r4, 8028788 <UART_StartRx+0x1c>
    RxCpltCallback = cb;
 8028784:	4b04      	ldr	r3, [pc, #16]	; (8028798 <UART_StartRx+0x2c>)
 8028786:	601c      	str	r4, [r3, #0]
}
 8028788:	2000      	movs	r0, #0
 802878a:	bd38      	pop	{r3, r4, r5, pc}
 802878c:	20004d54 	.word	0x20004d54
 8028790:	20008f68 	.word	0x20008f68
 8028794:	0802879d 	.word	0x0802879d
 8028798:	20008f60 	.word	0x20008f60

0802879c <UsartIf_RxCpltCallback>:
{
 802879c:	b510      	push	{r4, lr}
  RxCpltCallback(&charRx, 1, 0);
 802879e:	4b07      	ldr	r3, [pc, #28]	; (80287bc <UsartIf_RxCpltCallback+0x20>)
 80287a0:	4c07      	ldr	r4, [pc, #28]	; (80287c0 <UsartIf_RxCpltCallback+0x24>)
 80287a2:	2200      	movs	r2, #0
 80287a4:	4620      	mov	r0, r4
 80287a6:	2101      	movs	r1, #1
 80287a8:	681b      	ldr	r3, [r3, #0]
 80287aa:	4798      	blx	r3
  HAL_UART_Receive_IT(&huart1, &charRx, 1);
 80287ac:	4621      	mov	r1, r4
}
 80287ae:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
  HAL_UART_Receive_IT(&huart1, &charRx, 1);
 80287b2:	2201      	movs	r2, #1
 80287b4:	4803      	ldr	r0, [pc, #12]	; (80287c4 <UsartIf_RxCpltCallback+0x28>)
 80287b6:	f007 bdd3 	b.w	8030360 <HAL_UART_Receive_IT>
 80287ba:	bf00      	nop
 80287bc:	20008f60 	.word	0x20008f60
 80287c0:	20008f68 	.word	0x20008f68
 80287c4:	20004d54 	.word	0x20004d54

080287c8 <UART_TransmitDMA>:
{
 80287c8:	b538      	push	{r3, r4, r5, lr}
  use_dma_tx = get_IRQn_Type_from_DMA_HandleTypeDef(huart1.hdmatx);
 80287ca:	4d15      	ldr	r5, [pc, #84]	; (8028820 <UART_TransmitDMA+0x58>)
{
 80287cc:	4604      	mov	r4, r0
  use_dma_tx = get_IRQn_Type_from_DMA_HandleTypeDef(huart1.hdmatx);
 80287ce:	6fe8      	ldr	r0, [r5, #124]	; 0x7c
 80287d0:	f7ff ff46 	bl	8028660 <get_IRQn_Type_from_DMA_HandleTypeDef>
      || use_dma_tx == GPDMA1_Channel6_IRQn || use_dma_tx == GPDMA1_Channel7_IRQn
 80287d4:	f1a0 031d 	sub.w	r3, r0, #29
  if (use_dma_tx == GPDMA1_Channel0_IRQn || use_dma_tx == GPDMA1_Channel1_IRQn
 80287d8:	b2db      	uxtb	r3, r3
 80287da:	2b07      	cmp	r3, #7
{
 80287dc:	460a      	mov	r2, r1
    result = HAL_UART_Transmit_DMA(&huart1, pdata, size);
 80287de:	4621      	mov	r1, r4
  if (use_dma_tx == GPDMA1_Channel0_IRQn || use_dma_tx == GPDMA1_Channel1_IRQn
 80287e0:	d908      	bls.n	80287f4 <UART_TransmitDMA+0x2c>
  use_dma_rx = get_IRQn_Type_from_DMA_HandleTypeDef(huart1.hdmarx);
 80287e2:	f8d5 0080 	ldr.w	r0, [r5, #128]	; 0x80
 80287e6:	f7ff ff3b 	bl	8028660 <get_IRQn_Type_from_DMA_HandleTypeDef>
      || use_dma_rx == GPDMA1_Channel0_IRQn || use_dma_rx == GPDMA1_Channel1_IRQn
 80287ea:	f1a0 031d 	sub.w	r3, r0, #29
 80287ee:	b2db      	uxtb	r3, r3
 80287f0:	2b07      	cmp	r3, #7
 80287f2:	d811      	bhi.n	8028818 <UART_TransmitDMA+0x50>
    result = HAL_UART_Transmit_DMA(&huart1, pdata, size);
 80287f4:	480a      	ldr	r0, [pc, #40]	; (8028820 <UART_TransmitDMA+0x58>)
 80287f6:	f006 ffc5 	bl	802f784 <HAL_UART_Transmit_DMA>
  if(receive_after_transmit)
 80287fa:	4b0a      	ldr	r3, [pc, #40]	; (8028824 <UART_TransmitDMA+0x5c>)
    status = UTIL_ADV_TRACE_HW_ERROR;
 80287fc:	2800      	cmp	r0, #0
  if(receive_after_transmit)
 80287fe:	781b      	ldrb	r3, [r3, #0]
    status = UTIL_ADV_TRACE_HW_ERROR;
 8028800:	bf0c      	ite	eq
 8028802:	2400      	moveq	r4, #0
 8028804:	f06f 0401 	mvnne.w	r4, #1
  if(receive_after_transmit)
 8028808:	b123      	cbz	r3, 8028814 <UART_TransmitDMA+0x4c>
    HAL_UART_Receive_IT(&huart1, &charRx, 1);
 802880a:	2201      	movs	r2, #1
 802880c:	4906      	ldr	r1, [pc, #24]	; (8028828 <UART_TransmitDMA+0x60>)
 802880e:	4804      	ldr	r0, [pc, #16]	; (8028820 <UART_TransmitDMA+0x58>)
 8028810:	f007 fda6 	bl	8030360 <HAL_UART_Receive_IT>
}
 8028814:	4620      	mov	r0, r4
 8028816:	bd38      	pop	{r3, r4, r5, pc}
    result = HAL_UART_Transmit_IT(&huart1, pdata, size);
 8028818:	4628      	mov	r0, r5
 802881a:	f006 ff5d 	bl	802f6d8 <HAL_UART_Transmit_IT>
 802881e:	e7ec      	b.n	80287fa <UART_TransmitDMA+0x32>
 8028820:	20004d54 	.word	0x20004d54
 8028824:	20008f69 	.word	0x20008f69
 8028828:	20008f68 	.word	0x20008f68

0802882c <FD_SetStatus>:
  * @param  Flags_bm: Bit mask identifying the caller (1 bit per user)
  * @param  Status:   Action requested (enable or disable flash access)
  * @retval None
  */
void FD_SetStatus(FD_Flash_ctrl_bm_t Flags_bm, FD_FLASH_Status_t Status)
{
 802882c:	b510      	push	{r4, lr}
  __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
 802882e:	f3ef 8410 	mrs	r4, PRIMASK
  __ASM volatile ("cpsid i" : : : "memory");
 8028832:	b672      	cpsid	i
  UTILS_ENTER_CRITICAL_SECTION();

  switch (Status)
 8028834:	b149      	cbz	r1, 802884a <FD_SetStatus+0x1e>
 8028836:	2901      	cmp	r1, #1
 8028838:	d104      	bne.n	8028844 <FD_SetStatus+0x18>
  {
    case LL_FLASH_DISABLE:
    {
      FD_Flash_Control_status |= (1u << Flags_bm);
 802883a:	4b08      	ldr	r3, [pc, #32]	; (802885c <FD_SetStatus+0x30>)
 802883c:	4081      	lsls	r1, r0
 802883e:	681a      	ldr	r2, [r3, #0]
 8028840:	4311      	orrs	r1, r2
 8028842:	6019      	str	r1, [r3, #0]
  __ASM volatile ("MSR primask, %0" : : "r" (priMask) : "memory");
 8028844:	f384 8810 	msr	PRIMASK, r4
      break;
    }
  }

  UTILS_EXIT_CRITICAL_SECTION();
}
 8028848:	bd10      	pop	{r4, pc}
      FD_Flash_Control_status &= ~(1u << Flags_bm);
 802884a:	2301      	movs	r3, #1
 802884c:	4a03      	ldr	r2, [pc, #12]	; (802885c <FD_SetStatus+0x30>)
 802884e:	fa03 f000 	lsl.w	r0, r3, r0
 8028852:	6811      	ldr	r1, [r2, #0]
 8028854:	ea21 0100 	bic.w	r1, r1, r0
 8028858:	6011      	str	r1, [r2, #0]
      break;
 802885a:	e7f3      	b.n	8028844 <FD_SetStatus+0x18>
 802885c:	20008f6c 	.word	0x20008f6c

08028860 <FD_WriteData>:
  * @param  Dest: Address where to write in Flash (128-bit aligned)
  * @param  Payload: Address of data to be written in Flash (32-bit aligned)
  * @retval FD_FlashOp_Status_t: Success or failure of Flash write operation
  */
FD_FlashOp_Status_t FD_WriteData(uint32_t Dest, uint32_t Payload)
{
 8028860:	b508      	push	{r3, lr}
  FD_FlashOp_Status_t status = FD_FLASHOP_FAILURE;

  /* Check if RFTS OR Application allow flash access */
  if ((FD_Flash_Control_status & (1u << FD_FLASHACCESS_RFTS)) &&
 8028862:	4b0a      	ldr	r3, [pc, #40]	; (802888c <FD_WriteData+0x2c>)
{
 8028864:	460a      	mov	r2, r1
  if ((FD_Flash_Control_status & (1u << FD_FLASHACCESS_RFTS)) &&
 8028866:	6819      	ldr	r1, [r3, #0]
 8028868:	0789      	lsls	r1, r1, #30
 802886a:	d502      	bpl.n	8028872 <FD_WriteData+0x12>
      (FD_Flash_Control_status & (1u << FD_FLASHACCESS_RFTS_BYPASS)))
 802886c:	6819      	ldr	r1, [r3, #0]
  if ((FD_Flash_Control_status & (1u << FD_FLASHACCESS_RFTS)) &&
 802886e:	0749      	lsls	r1, r1, #29
 8028870:	d40a      	bmi.n	8028888 <FD_WriteData+0x28>
  { /* Access not allowed */
    return status;
  }

  /* Wait for system to allow flash access */
  while (FD_Flash_Control_status & (1u << FD_FLASHACCESS_SYSTEM));
 8028872:	6819      	ldr	r1, [r3, #0]
 8028874:	07c9      	lsls	r1, r1, #31
 8028876:	d4fc      	bmi.n	8028872 <FD_WriteData+0x12>

  if (HAL_FLASH_Program(FLASH_TYPEPROGRAM_QUADWORD, Dest, Payload) == HAL_OK)
 8028878:	4601      	mov	r1, r0
 802887a:	2001      	movs	r0, #1
 802887c:	f003 fe24 	bl	802c4c8 <HAL_FLASH_Program>
    return status;
 8028880:	3800      	subs	r0, #0
 8028882:	bf18      	it	ne
 8028884:	2001      	movne	r0, #1
  {
    status = FD_FLASHOP_SUCCESS;
  }
  return status;
}
 8028886:	bd08      	pop	{r3, pc}
    return status;
 8028888:	2001      	movs	r0, #1
 802888a:	e7fc      	b.n	8028886 <FD_WriteData+0x26>
 802888c:	20008f6c 	.word	0x20008f6c

08028890 <FD_EraseSectors>:
  * @brief  Erase one sector of Flash
  * @param  Sect: Identifier of the sector to erase
  * @retval FD_FlashOp_Status_t: Success or failure of Flash erase operation
  */
FD_FlashOp_Status_t FD_EraseSectors(uint32_t Sect)
{
 8028890:	b51f      	push	{r0, r1, r2, r3, r4, lr}
  FD_FlashOp_Status_t status = FD_FLASHOP_FAILURE;
  uint32_t page_error;
  FLASH_EraseInitTypeDef p_erase_init;

  /* Check if LL allows flash access */
  if ((FD_Flash_Control_status & (1u << FD_FLASHACCESS_RFTS)) &&
 8028892:	4b0d      	ldr	r3, [pc, #52]	; (80288c8 <FD_EraseSectors+0x38>)
 8028894:	681a      	ldr	r2, [r3, #0]
 8028896:	0792      	lsls	r2, r2, #30
 8028898:	d502      	bpl.n	80288a0 <FD_EraseSectors+0x10>
      (FD_Flash_Control_status & (1u << FD_FLASHACCESS_RFTS_BYPASS)))
 802889a:	681a      	ldr	r2, [r3, #0]
  if ((FD_Flash_Control_status & (1u << FD_FLASHACCESS_RFTS)) &&
 802889c:	0751      	lsls	r1, r2, #29
 802889e:	d411      	bmi.n	80288c4 <FD_EraseSectors+0x34>
  { /* Access not allowed */
    return status;
  }

  /* Wait for system to allow flash access */
  while (FD_Flash_Control_status & (1u << FD_FLASHACCESS_SYSTEM));
 80288a0:	681a      	ldr	r2, [r3, #0]
 80288a2:	07d2      	lsls	r2, r2, #31
 80288a4:	d4fc      	bmi.n	80288a0 <FD_EraseSectors+0x10>

  p_erase_init.TypeErase = FLASH_TYPEERASE_PAGES;
 80288a6:	2302      	movs	r3, #2
  p_erase_init.Page = Sect;
 80288a8:	e9cd 3001 	strd	r3, r0, [sp, #4]
  p_erase_init.NbPages = 1;
 80288ac:	2301      	movs	r3, #1

  if (HAL_FLASHEx_Erase(&p_erase_init, &page_error) == HAL_OK)
 80288ae:	4669      	mov	r1, sp
 80288b0:	a801      	add	r0, sp, #4
  p_erase_init.NbPages = 1;
 80288b2:	9303      	str	r3, [sp, #12]
  if (HAL_FLASHEx_Erase(&p_erase_init, &page_error) == HAL_OK)
 80288b4:	f003 fe6a 	bl	802c58c <HAL_FLASHEx_Erase>
    return status;
 80288b8:	3800      	subs	r0, #0
 80288ba:	bf18      	it	ne
 80288bc:	2001      	movne	r0, #1
  {
    status = FD_FLASHOP_SUCCESS;
  }

  return status;
}
 80288be:	b005      	add	sp, #20
 80288c0:	f85d fb04 	ldr.w	pc, [sp], #4
    return status;
 80288c4:	2001      	movs	r0, #1
 80288c6:	e7fa      	b.n	80288be <FD_EraseSectors+0x2e>
 80288c8:	20008f6c 	.word	0x20008f6c

080288cc <FM_WindowAllowed_Callback>:
  * @param  None
  * @retval None
  */
static void FM_WindowAllowed_Callback(void)
{
  fm_window_granted = true;
 80288cc:	2201      	movs	r2, #1
 80288ce:	4b02      	ldr	r3, [pc, #8]	; (80288d8 <FM_WindowAllowed_Callback+0xc>)
 80288d0:	701a      	strb	r2, [r3, #0]

  /* Flash operation to be executed in background */
  FM_ProcessRequest();
 80288d2:	f7fd b9aa 	b.w	8025c2a <FM_ProcessRequest>
 80288d6:	bf00      	nop
 80288d8:	20008f9c 	.word	0x20008f9c

080288dc <FM_CheckFlashManagerState>:
{
 80288dc:	b570      	push	{r4, r5, r6, lr}
 80288de:	4604      	mov	r4, r0
  __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
 80288e0:	f3ef 8510 	mrs	r5, PRIMASK
  __ASM volatile ("cpsid i" : : : "memory");
 80288e4:	b672      	cpsid	i
  if (fm_cb_pending_list_init == false)
 80288e6:	4e1a      	ldr	r6, [pc, #104]	; (8028950 <FM_CheckFlashManagerState+0x74>)
 80288e8:	7833      	ldrb	r3, [r6, #0]
 80288ea:	b923      	cbnz	r3, 80288f6 <FM_CheckFlashManagerState+0x1a>
    LST_init_head(&fm_cb_pending_list);
 80288ec:	4819      	ldr	r0, [pc, #100]	; (8028954 <FM_CheckFlashManagerState+0x78>)
 80288ee:	f001 fffb 	bl	802a8e8 <LST_init_head>
    fm_cb_pending_list_init = true;
 80288f2:	2301      	movs	r3, #1
 80288f4:	7033      	strb	r3, [r6, #0]
  if (busy_flash_sem == false)
 80288f6:	4818      	ldr	r0, [pc, #96]	; (8028958 <FM_CheckFlashManagerState+0x7c>)
 80288f8:	7803      	ldrb	r3, [r0, #0]
 80288fa:	b913      	cbnz	r3, 8028902 <FM_CheckFlashManagerState+0x26>
    if (flash_manager_busy == false)
 80288fc:	4a17      	ldr	r2, [pc, #92]	; (802895c <FM_CheckFlashManagerState+0x80>)
 80288fe:	7813      	ldrb	r3, [r2, #0]
 8028900:	b153      	cbz	r3, 8028918 <FM_CheckFlashManagerState+0x3c>
  __ASM volatile ("MSR primask, %0" : : "r" (priMask) : "memory");
 8028902:	f385 8810 	msr	PRIMASK, r5
    if ((CallbackNode != NULL) && (CallbackNode->Callback != NULL))
 8028906:	b12c      	cbz	r4, 8028914 <FM_CheckFlashManagerState+0x38>
 8028908:	68a3      	ldr	r3, [r4, #8]
 802890a:	b11b      	cbz	r3, 8028914 <FM_CheckFlashManagerState+0x38>
      LST_insert_tail(&fm_cb_pending_list, &(CallbackNode->NodeList));
 802890c:	4621      	mov	r1, r4
 802890e:	4811      	ldr	r0, [pc, #68]	; (8028954 <FM_CheckFlashManagerState+0x78>)
 8028910:	f002 f803 	bl	802a91a <LST_insert_tail>
    status = FM_BUSY;
 8028914:	2001      	movs	r0, #1
 8028916:	e019      	b.n	802894c <FM_CheckFlashManagerState+0x70>
      busy_flash_sem = true; /* Get semaphore on flash */
 8028918:	2101      	movs	r1, #1
 802891a:	7001      	strb	r1, [r0, #0]
      flash_manager_busy = true; /* Set Flash Manager busy */
 802891c:	7011      	strb	r1, [r2, #0]
 802891e:	f385 8810 	msr	PRIMASK, r5
    if ((CallbackNode != NULL) && (CallbackNode->Callback != NULL))
 8028922:	4a0f      	ldr	r2, [pc, #60]	; (8028960 <FM_CheckFlashManagerState+0x84>)
 8028924:	b93c      	cbnz	r4, 8028936 <FM_CheckFlashManagerState+0x5a>
  __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
 8028926:	f3ef 8310 	mrs	r3, PRIMASK
  __ASM volatile ("cpsid i" : : : "memory");
 802892a:	b672      	cpsid	i
      fm_running_cb = NULL;
 802892c:	2000      	movs	r0, #0
 802892e:	6010      	str	r0, [r2, #0]
  __ASM volatile ("MSR primask, %0" : : "r" (priMask) : "memory");
 8028930:	f383 8810 	msr	PRIMASK, r3
}
 8028934:	e00a      	b.n	802894c <FM_CheckFlashManagerState+0x70>
    if ((CallbackNode != NULL) && (CallbackNode->Callback != NULL))
 8028936:	68a1      	ldr	r1, [r4, #8]
 8028938:	2900      	cmp	r1, #0
 802893a:	d0f4      	beq.n	8028926 <FM_CheckFlashManagerState+0x4a>
  __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
 802893c:	f3ef 8110 	mrs	r1, PRIMASK
  __ASM volatile ("cpsid i" : : : "memory");
 8028940:	b672      	cpsid	i
      fm_running_cb = CallbackNode->Callback;
 8028942:	68a0      	ldr	r0, [r4, #8]
 8028944:	6010      	str	r0, [r2, #0]
  __ASM volatile ("MSR primask, %0" : : "r" (priMask) : "memory");
 8028946:	f381 8810 	msr	PRIMASK, r1
    status = FM_OK;
 802894a:	4618      	mov	r0, r3
}
 802894c:	bd70      	pop	{r4, r5, r6, pc}
 802894e:	bf00      	nop
 8028950:	20008f81 	.word	0x20008f81
 8028954:	20008f79 	.word	0x20008f79
 8028958:	20008f71 	.word	0x20008f71
 802895c:	20008f78 	.word	0x20008f78
 8028960:	20008f98 	.word	0x20008f98

08028964 <FM_Write>:
  if (((uint32_t)Dest < FLASH_BASE) || ((uint32_t)Dest > (FLASH_BASE + FLASH_BANK_SIZE))
 8028964:	f1b1 6f00 	cmp.w	r1, #134217728	; 0x8000000
{
 8028968:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 802896a:	4607      	mov	r7, r0
 802896c:	460d      	mov	r5, r1
 802896e:	4616      	mov	r6, r2
 8028970:	4618      	mov	r0, r3
  if (((uint32_t)Dest < FLASH_BASE) || ((uint32_t)Dest > (FLASH_BASE + FLASH_BANK_SIZE))
 8028972:	d328      	bcc.n	80289c6 <FM_Write+0x62>
 8028974:	f64f 72fd 	movw	r2, #65533	; 0xfffd
 8028978:	4b14      	ldr	r3, [pc, #80]	; (80289cc <FM_Write+0x68>)
 802897a:	f8b3 40a0 	ldrh.w	r4, [r3, #160]	; 0xa0
 802897e:	1e63      	subs	r3, r4, #1
 8028980:	b29b      	uxth	r3, r3
 8028982:	4293      	cmp	r3, r2
 8028984:	bf8e      	itee	hi
 8028986:	f04f 6401 	movhi.w	r4, #135266304	; 0x8100000
 802898a:	02a4      	lslls	r4, r4, #10
 802898c:	f104 6400 	addls.w	r4, r4, #134217728	; 0x8000000
 8028990:	42a1      	cmp	r1, r4
 8028992:	d818      	bhi.n	80289c6 <FM_Write+0x62>
                                    || (((uint32_t)Dest + Size) > (FLASH_BASE + FLASH_BANK_SIZE)))
 8028994:	198b      	adds	r3, r1, r6
 8028996:	42a3      	cmp	r3, r4
 8028998:	d815      	bhi.n	80289c6 <FM_Write+0x62>
  if (((uint32_t) Src & ALIGNMENT_32) || ((uint32_t) Dest & ALIGNMENT_128))
 802899a:	f007 0303 	and.w	r3, r7, #3
 802899e:	f001 020f 	and.w	r2, r1, #15
 80289a2:	4313      	orrs	r3, r2
 80289a4:	d10f      	bne.n	80289c6 <FM_Write+0x62>
  status = FM_CheckFlashManagerState(CallbackNode);
 80289a6:	f7ff ff99 	bl	80288dc <FM_CheckFlashManagerState>
  if (status == FM_OK)
 80289aa:	4604      	mov	r4, r0
 80289ac:	b948      	cbnz	r0, 80289c2 <FM_Write+0x5e>
    fm_flashop_parameters.writeSrc = Src;
 80289ae:	4b08      	ldr	r3, [pc, #32]	; (80289d0 <FM_Write+0x6c>)
    fm_flashop_parameters.writeDest = Dest;
 80289b0:	e9c3 7500 	strd	r7, r5, [r3]
    fm_flashop_parameters.writeSize = Size;
 80289b4:	609e      	str	r6, [r3, #8]
    fm_flashop = FM_WRITE_OP;
 80289b6:	4b07      	ldr	r3, [pc, #28]	; (80289d4 <FM_Write+0x70>)
 80289b8:	7018      	strb	r0, [r3, #0]
    FM_CurrentBackGroundState = FM_BKGND_NOWINDOW_FLASHOP;
 80289ba:	4b07      	ldr	r3, [pc, #28]	; (80289d8 <FM_Write+0x74>)
 80289bc:	7018      	strb	r0, [r3, #0]
    FM_ProcessRequest();
 80289be:	f7fd f934 	bl	8025c2a <FM_ProcessRequest>
}
 80289c2:	4620      	mov	r0, r4
 80289c4:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    return FM_ERROR;
 80289c6:	2402      	movs	r4, #2
 80289c8:	e7fb      	b.n	80289c2 <FM_Write+0x5e>
 80289ca:	bf00      	nop
 80289cc:	0bf90700 	.word	0x0bf90700
 80289d0:	20008f84 	.word	0x20008f84
 80289d4:	20008f82 	.word	0x20008f82
 80289d8:	20008f70 	.word	0x20008f70

080289dc <FM_Erase>:
{
 80289dc:	b570      	push	{r4, r5, r6, lr}
 80289de:	460d      	mov	r5, r1
  if ((FirstSect > FLASH_PAGE_NB) || ((FirstSect + NbrSect) > FLASH_PAGE_NB))
 80289e0:	f64f 71fd 	movw	r1, #65533	; 0xfffd
 80289e4:	4b11      	ldr	r3, [pc, #68]	; (8028a2c <FM_Erase+0x50>)
{
 80289e6:	4606      	mov	r6, r0
  if ((FirstSect > FLASH_PAGE_NB) || ((FirstSect + NbrSect) > FLASH_PAGE_NB))
 80289e8:	f8b3 30a0 	ldrh.w	r3, [r3, #160]	; 0xa0
{
 80289ec:	4610      	mov	r0, r2
  if ((FirstSect > FLASH_PAGE_NB) || ((FirstSect + NbrSect) > FLASH_PAGE_NB))
 80289ee:	1e5a      	subs	r2, r3, #1
 80289f0:	b292      	uxth	r2, r2
 80289f2:	428a      	cmp	r2, r1
 80289f4:	bf8c      	ite	hi
 80289f6:	2380      	movhi	r3, #128	; 0x80
 80289f8:	08db      	lsrls	r3, r3, #3
 80289fa:	42b3      	cmp	r3, r6
 80289fc:	d313      	bcc.n	8028a26 <FM_Erase+0x4a>
 80289fe:	1972      	adds	r2, r6, r5
 8028a00:	429a      	cmp	r2, r3
 8028a02:	d810      	bhi.n	8028a26 <FM_Erase+0x4a>
  if (NbrSect == 0)
 8028a04:	b17d      	cbz	r5, 8028a26 <FM_Erase+0x4a>
  status = FM_CheckFlashManagerState(CallbackNode);
 8028a06:	f7ff ff69 	bl	80288dc <FM_CheckFlashManagerState>
  if (status == FM_OK)
 8028a0a:	4604      	mov	r4, r0
 8028a0c:	b948      	cbnz	r0, 8028a22 <FM_Erase+0x46>
    fm_flashop = FM_ERASE_OP;
 8028a0e:	2201      	movs	r2, #1
    fm_flashop_parameters.eraseFirstSect = FirstSect;
 8028a10:	4b07      	ldr	r3, [pc, #28]	; (8028a30 <FM_Erase+0x54>)
    fm_flashop_parameters.eraseNbrSect = NbrSect;
 8028a12:	e9c3 6503 	strd	r6, r5, [r3, #12]
    fm_flashop = FM_ERASE_OP;
 8028a16:	4b07      	ldr	r3, [pc, #28]	; (8028a34 <FM_Erase+0x58>)
 8028a18:	701a      	strb	r2, [r3, #0]
    FM_CurrentBackGroundState = FM_BKGND_NOWINDOW_FLASHOP;
 8028a1a:	4b07      	ldr	r3, [pc, #28]	; (8028a38 <FM_Erase+0x5c>)
 8028a1c:	7018      	strb	r0, [r3, #0]
    FM_ProcessRequest();
 8028a1e:	f7fd f904 	bl	8025c2a <FM_ProcessRequest>
}
 8028a22:	4620      	mov	r0, r4
 8028a24:	bd70      	pop	{r4, r5, r6, pc}
    return FM_ERROR;
 8028a26:	2402      	movs	r4, #2
 8028a28:	e7fb      	b.n	8028a22 <FM_Erase+0x46>
 8028a2a:	bf00      	nop
 8028a2c:	0bf90700 	.word	0x0bf90700
 8028a30:	20008f84 	.word	0x20008f84
 8028a34:	20008f82 	.word	0x20008f82
 8028a38:	20008f70 	.word	0x20008f70

08028a3c <FM_BackgroundProcess>:
  FM_CallbackNode_t *pCbNode = NULL;
 8028a3c:	2300      	movs	r3, #0
{
 8028a3e:	b573      	push	{r0, r1, r4, r5, r6, lr}
  FM_CallbackNode_t *pCbNode = NULL;
 8028a40:	9301      	str	r3, [sp, #4]
  switch (FM_CurrentBackGroundState)
 8028a42:	4b5a      	ldr	r3, [pc, #360]	; (8028bac <FM_BackgroundProcess+0x170>)
 8028a44:	781a      	ldrb	r2, [r3, #0]
 8028a46:	b13a      	cbz	r2, 8028a58 <FM_BackgroundProcess+0x1c>
 8028a48:	2a01      	cmp	r2, #1
 8028a4a:	d058      	beq.n	8028afe <FM_BackgroundProcess+0xc2>
    RFTS_ReqWindow(duration, &FM_WindowAllowed_Callback);
 8028a4c:	4b58      	ldr	r3, [pc, #352]	; (8028bb0 <FM_BackgroundProcess+0x174>)
 8028a4e:	4959      	ldr	r1, [pc, #356]	; (8028bb4 <FM_BackgroundProcess+0x178>)
 8028a50:	6818      	ldr	r0, [r3, #0]
 8028a52:	f000 f8e1 	bl	8028c18 <RFTS_ReqWindow>
}
 8028a56:	e0a6      	b.n	8028ba6 <FM_BackgroundProcess+0x16a>
      if (fm_flashop == FM_WRITE_OP)
 8028a58:	4a57      	ldr	r2, [pc, #348]	; (8028bb8 <FM_BackgroundProcess+0x17c>)
 8028a5a:	4955      	ldr	r1, [pc, #340]	; (8028bb0 <FM_BackgroundProcess+0x174>)
 8028a5c:	7810      	ldrb	r0, [r2, #0]
 8028a5e:	4c57      	ldr	r4, [pc, #348]	; (8028bbc <FM_BackgroundProcess+0x180>)
 8028a60:	2201      	movs	r2, #1
 8028a62:	2800      	cmp	r0, #0
 8028a64:	d12f      	bne.n	8028ac6 <FM_BackgroundProcess+0x8a>
        duration = TIME_WINDOW_WRITE_REQUEST;
 8028a66:	f240 404c 	movw	r0, #1100	; 0x44c
        FM_CurrentBackGroundState = FM_BKGND_WINDOWED_FLASHOP;
 8028a6a:	701a      	strb	r2, [r3, #0]
        duration = TIME_WINDOW_WRITE_REQUEST;
 8028a6c:	6008      	str	r0, [r1, #0]
        HAL_FLASH_Unlock();
 8028a6e:	f003 fce3 	bl	802c438 <HAL_FLASH_Unlock>
{
 8028a72:	2000      	movs	r0, #0
        while((fm_flashop_parameters.writeSize > 0) &&
 8028a74:	68a3      	ldr	r3, [r4, #8]
 8028a76:	2b00      	cmp	r3, #0
 8028a78:	dd00      	ble.n	8028a7c <FM_BackgroundProcess+0x40>
 8028a7a:	b1a0      	cbz	r0, 8028aa6 <FM_BackgroundProcess+0x6a>
        HAL_FLASH_Lock();
 8028a7c:	f003 fcee 	bl	802c45c <HAL_FLASH_Lock>
        if (fm_flashop_parameters.writeSize <= 0)
 8028a80:	68a3      	ldr	r3, [r4, #8]
 8028a82:	2b00      	cmp	r3, #0
 8028a84:	dce2      	bgt.n	8028a4c <FM_BackgroundProcess+0x10>
  __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
 8028a86:	f3ef 8310 	mrs	r3, PRIMASK
  __ASM volatile ("cpsid i" : : : "memory");
 8028a8a:	b672      	cpsid	i
    busy_flash_sem = false;
 8028a8c:	2000      	movs	r0, #0
 8028a8e:	4d4c      	ldr	r5, [pc, #304]	; (8028bc0 <FM_BackgroundProcess+0x184>)
    flash_manager_busy = false;
 8028a90:	4c4c      	ldr	r4, [pc, #304]	; (8028bc4 <FM_BackgroundProcess+0x188>)
    busy_flash_sem = false;
 8028a92:	7028      	strb	r0, [r5, #0]
    flash_manager_busy = false;
 8028a94:	7020      	strb	r0, [r4, #0]
  __ASM volatile ("MSR primask, %0" : : "r" (priMask) : "memory");
 8028a96:	f383 8810 	msr	PRIMASK, r3
    if (fm_running_cb != NULL)
 8028a9a:	4b4b      	ldr	r3, [pc, #300]	; (8028bc8 <FM_BackgroundProcess+0x18c>)
 8028a9c:	681b      	ldr	r3, [r3, #0]
 8028a9e:	2b00      	cmp	r3, #0
 8028aa0:	d16e      	bne.n	8028b80 <FM_BackgroundProcess+0x144>
    while((LST_is_empty (&fm_cb_pending_list) == false) &&
 8028aa2:	4e4a      	ldr	r6, [pc, #296]	; (8028bcc <FM_BackgroundProcess+0x190>)
 8028aa4:	e076      	b.n	8028b94 <FM_BackgroundProcess+0x158>
          fdReturnValue = FD_WriteData((uint32_t) fm_flashop_parameters.writeDest,
 8028aa6:	e9d4 1000 	ldrd	r1, r0, [r4]
 8028aaa:	f7ff fed9 	bl	8028860 <FD_WriteData>
          if (fdReturnValue == FD_FLASHOP_SUCCESS)
 8028aae:	2800      	cmp	r0, #0
 8028ab0:	d1e0      	bne.n	8028a74 <FM_BackgroundProcess+0x38>
            fm_flashop_parameters.writeDest += FLASH_WRITE_BLOCK_SIZE;
 8028ab2:	6863      	ldr	r3, [r4, #4]
 8028ab4:	3310      	adds	r3, #16
 8028ab6:	6063      	str	r3, [r4, #4]
            fm_flashop_parameters.writeSrc += FLASH_WRITE_BLOCK_SIZE;
 8028ab8:	6823      	ldr	r3, [r4, #0]
 8028aba:	3310      	adds	r3, #16
 8028abc:	6023      	str	r3, [r4, #0]
            fm_flashop_parameters.writeSize -= FLASH_WRITE_BLOCK_SIZE;
 8028abe:	68a3      	ldr	r3, [r4, #8]
 8028ac0:	3b04      	subs	r3, #4
 8028ac2:	60a3      	str	r3, [r4, #8]
 8028ac4:	e7d5      	b.n	8028a72 <FM_BackgroundProcess+0x36>
        duration = TIME_WINDOW_ERASE_REQUEST;
 8028ac6:	f241 0004 	movw	r0, #4100	; 0x1004
        FM_CurrentBackGroundState = FM_BKGND_WINDOWED_FLASHOP;
 8028aca:	701a      	strb	r2, [r3, #0]
        duration = TIME_WINDOW_ERASE_REQUEST;
 8028acc:	6008      	str	r0, [r1, #0]
        HAL_FLASH_Unlock();
 8028ace:	f003 fcb3 	bl	802c438 <HAL_FLASH_Unlock>
{
 8028ad2:	2000      	movs	r0, #0
        while((fm_flashop_parameters.eraseNbrSect > 0) &&
 8028ad4:	6923      	ldr	r3, [r4, #16]
 8028ad6:	b103      	cbz	r3, 8028ada <FM_BackgroundProcess+0x9e>
 8028ad8:	b128      	cbz	r0, 8028ae6 <FM_BackgroundProcess+0xaa>
        HAL_FLASH_Lock();
 8028ada:	f003 fcbf 	bl	802c45c <HAL_FLASH_Lock>
        if (fm_flashop_parameters.eraseNbrSect == 0)
 8028ade:	6923      	ldr	r3, [r4, #16]
 8028ae0:	2b00      	cmp	r3, #0
 8028ae2:	d0d0      	beq.n	8028a86 <FM_BackgroundProcess+0x4a>
 8028ae4:	e7b2      	b.n	8028a4c <FM_BackgroundProcess+0x10>
          fdReturnValue = FD_EraseSectors(fm_flashop_parameters.eraseFirstSect);
 8028ae6:	68e0      	ldr	r0, [r4, #12]
 8028ae8:	f7ff fed2 	bl	8028890 <FD_EraseSectors>
          if (fdReturnValue == FD_FLASHOP_SUCCESS)
 8028aec:	2800      	cmp	r0, #0
 8028aee:	d1f1      	bne.n	8028ad4 <FM_BackgroundProcess+0x98>
            fm_flashop_parameters.eraseNbrSect--;
 8028af0:	6923      	ldr	r3, [r4, #16]
 8028af2:	3b01      	subs	r3, #1
 8028af4:	6123      	str	r3, [r4, #16]
            fm_flashop_parameters.eraseFirstSect++;
 8028af6:	68e3      	ldr	r3, [r4, #12]
 8028af8:	3301      	adds	r3, #1
 8028afa:	60e3      	str	r3, [r4, #12]
 8028afc:	e7e9      	b.n	8028ad2 <FM_BackgroundProcess+0x96>
      if (fm_window_granted == false)
 8028afe:	4d34      	ldr	r5, [pc, #208]	; (8028bd0 <FM_BackgroundProcess+0x194>)
 8028b00:	782b      	ldrb	r3, [r5, #0]
 8028b02:	b92b      	cbnz	r3, 8028b10 <FM_BackgroundProcess+0xd4>
        RFTS_ReqWindow(duration, &FM_WindowAllowed_Callback);
 8028b04:	4b2a      	ldr	r3, [pc, #168]	; (8028bb0 <FM_BackgroundProcess+0x174>)
 8028b06:	492b      	ldr	r1, [pc, #172]	; (8028bb4 <FM_BackgroundProcess+0x178>)
 8028b08:	6818      	ldr	r0, [r3, #0]
 8028b0a:	f000 f885 	bl	8028c18 <RFTS_ReqWindow>
  if (flashop_complete == true)
 8028b0e:	e79d      	b.n	8028a4c <FM_BackgroundProcess+0x10>
        if (fm_flashop == FM_WRITE_OP)
 8028b10:	4b29      	ldr	r3, [pc, #164]	; (8028bb8 <FM_BackgroundProcess+0x17c>)
 8028b12:	4c2a      	ldr	r4, [pc, #168]	; (8028bbc <FM_BackgroundProcess+0x180>)
 8028b14:	781b      	ldrb	r3, [r3, #0]
 8028b16:	bb13      	cbnz	r3, 8028b5e <FM_BackgroundProcess+0x122>
          HAL_FLASH_Unlock();
 8028b18:	f003 fc8e 	bl	802c438 <HAL_FLASH_Unlock>
          while((fm_flashop_parameters.writeSize > 0) &&
 8028b1c:	68a3      	ldr	r3, [r4, #8]
 8028b1e:	2b00      	cmp	r3, #0
 8028b20:	dc0d      	bgt.n	8028b3e <FM_BackgroundProcess+0x102>
          if (fm_flashop_parameters.writeSize <= 0)
 8028b22:	68a4      	ldr	r4, [r4, #8]
 8028b24:	2c00      	cmp	r4, #0
 8028b26:	bfcc      	ite	gt
 8028b28:	2400      	movgt	r4, #0
 8028b2a:	2401      	movle	r4, #1
      HAL_FLASH_Lock();
 8028b2c:	f003 fc96 	bl	802c45c <HAL_FLASH_Lock>
        RFTS_RelWindow();
 8028b30:	f000 f8be 	bl	8028cb0 <RFTS_RelWindow>
        fm_window_granted = false;
 8028b34:	2300      	movs	r3, #0
 8028b36:	702b      	strb	r3, [r5, #0]
  if (flashop_complete == true)
 8028b38:	2c00      	cmp	r4, #0
 8028b3a:	d1a4      	bne.n	8028a86 <FM_BackgroundProcess+0x4a>
 8028b3c:	e786      	b.n	8028a4c <FM_BackgroundProcess+0x10>
                (FD_WriteData((uint32_t) fm_flashop_parameters.writeDest,
 8028b3e:	e9d4 1000 	ldrd	r1, r0, [r4]
 8028b42:	f7ff fe8d 	bl	8028860 <FD_WriteData>
          while((fm_flashop_parameters.writeSize > 0) &&
 8028b46:	2800      	cmp	r0, #0
 8028b48:	d1eb      	bne.n	8028b22 <FM_BackgroundProcess+0xe6>
              fm_flashop_parameters.writeDest += FLASH_WRITE_BLOCK_SIZE;
 8028b4a:	6863      	ldr	r3, [r4, #4]
 8028b4c:	3310      	adds	r3, #16
 8028b4e:	6063      	str	r3, [r4, #4]
              fm_flashop_parameters.writeSrc += FLASH_WRITE_BLOCK_SIZE;
 8028b50:	6823      	ldr	r3, [r4, #0]
 8028b52:	3310      	adds	r3, #16
 8028b54:	6023      	str	r3, [r4, #0]
              fm_flashop_parameters.writeSize -= FLASH_WRITE_BLOCK_SIZE;
 8028b56:	68a3      	ldr	r3, [r4, #8]
 8028b58:	3b04      	subs	r3, #4
 8028b5a:	60a3      	str	r3, [r4, #8]
 8028b5c:	e7de      	b.n	8028b1c <FM_BackgroundProcess+0xe0>
      HAL_FLASH_Unlock();
 8028b5e:	f003 fc6b 	bl	802c438 <HAL_FLASH_Unlock>
      if (FD_EraseSectors(fm_flashop_parameters.eraseFirstSect) == FD_FLASHOP_SUCCESS)
 8028b62:	68e0      	ldr	r0, [r4, #12]
 8028b64:	f7ff fe94 	bl	8028890 <FD_EraseSectors>
 8028b68:	b928      	cbnz	r0, 8028b76 <FM_BackgroundProcess+0x13a>
        fm_flashop_parameters.eraseNbrSect--;
 8028b6a:	6923      	ldr	r3, [r4, #16]
 8028b6c:	3b01      	subs	r3, #1
 8028b6e:	6123      	str	r3, [r4, #16]
        fm_flashop_parameters.eraseFirstSect++;
 8028b70:	68e3      	ldr	r3, [r4, #12]
 8028b72:	3301      	adds	r3, #1
 8028b74:	60e3      	str	r3, [r4, #12]
      if (fm_flashop_parameters.eraseNbrSect == 0)
 8028b76:	6924      	ldr	r4, [r4, #16]
 8028b78:	fab4 f484 	clz	r4, r4
 8028b7c:	0964      	lsrs	r4, r4, #5
 8028b7e:	e7d5      	b.n	8028b2c <FM_BackgroundProcess+0xf0>
      fm_running_cb(FM_OPERATION_COMPLETE);
 8028b80:	4798      	blx	r3
 8028b82:	e78e      	b.n	8028aa2 <FM_BackgroundProcess+0x66>
      LST_remove_head (&fm_cb_pending_list, (tListNode**)&pCbNode);
 8028b84:	4630      	mov	r0, r6
 8028b86:	a901      	add	r1, sp, #4
 8028b88:	f001 fede 	bl	802a948 <LST_remove_head>
      pCbNode->Callback(FM_OPERATION_AVAILABLE);
 8028b8c:	9b01      	ldr	r3, [sp, #4]
 8028b8e:	2001      	movs	r0, #1
 8028b90:	689b      	ldr	r3, [r3, #8]
 8028b92:	4798      	blx	r3
    while((LST_is_empty (&fm_cb_pending_list) == false) &&
 8028b94:	4630      	mov	r0, r6
 8028b96:	f001 feaa 	bl	802a8ee <LST_is_empty>
 8028b9a:	b920      	cbnz	r0, 8028ba6 <FM_BackgroundProcess+0x16a>
 8028b9c:	782b      	ldrb	r3, [r5, #0]
 8028b9e:	b913      	cbnz	r3, 8028ba6 <FM_BackgroundProcess+0x16a>
          (busy_flash_sem == false) && (flash_manager_busy == false))
 8028ba0:	7823      	ldrb	r3, [r4, #0]
 8028ba2:	2b00      	cmp	r3, #0
 8028ba4:	d0ee      	beq.n	8028b84 <FM_BackgroundProcess+0x148>
}
 8028ba6:	b002      	add	sp, #8
 8028ba8:	bd70      	pop	{r4, r5, r6, pc}
 8028baa:	bf00      	nop
 8028bac:	20008f70 	.word	0x20008f70
 8028bb0:	20008f74 	.word	0x20008f74
 8028bb4:	080288cd 	.word	0x080288cd
 8028bb8:	20008f82 	.word	0x20008f82
 8028bbc:	20008f84 	.word	0x20008f84
 8028bc0:	20008f71 	.word	0x20008f71
 8028bc4:	20008f78 	.word	0x20008f78
 8028bc8:	20008f98 	.word	0x20008f98
 8028bcc:	20008f79 	.word	0x20008f79
 8028bd0:	20008f9c 	.word	0x20008f9c

08028bd4 <RFTS_Timeout_Callback>:
  * @retval None
  */
static void RFTS_Timeout_Callback(void* Argument)
{
  /* Forbid flash operation */
  FD_SetStatus(FD_FLASHACCESS_RFTS, LL_FLASH_DISABLE);
 8028bd4:	2101      	movs	r1, #1
{
 8028bd6:	b508      	push	{r3, lr}
  FD_SetStatus(FD_FLASHACCESS_RFTS, LL_FLASH_DISABLE);
 8028bd8:	4608      	mov	r0, r1
 8028bda:	f7ff fe27 	bl	802882c <FD_SetStatus>
  __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
 8028bde:	f3ef 8310 	mrs	r3, PRIMASK
  __ASM volatile ("cpsid i" : : : "memory");
 8028be2:	b672      	cpsid	i

  UTILS_ENTER_CRITICAL_SECTION();
  rfts_window_req_pending = false;
 8028be4:	2100      	movs	r1, #0
 8028be6:	4a02      	ldr	r2, [pc, #8]	; (8028bf0 <RFTS_Timeout_Callback+0x1c>)
 8028be8:	7011      	strb	r1, [r2, #0]
  __ASM volatile ("MSR primask, %0" : : "r" (priMask) : "memory");
 8028bea:	f383 8810 	msr	PRIMASK, r3
  UTILS_EXIT_CRITICAL_SECTION();
}
 8028bee:	bd08      	pop	{r3, pc}
 8028bf0:	20008fc0 	.word	0x20008fc0

08028bf4 <event_started_callback>:

static uint32_t event_started_callback(ext_evnt_hndl_t evnt_hndl, uint32_t slot_durn, void* priv_data_ptr)
{
 8028bf4:	b508      	push	{r3, lr}
  FD_SetStatus(FD_FLASHACCESS_RFTS, LL_FLASH_ENABLE);
 8028bf6:	2100      	movs	r1, #0
 8028bf8:	2001      	movs	r0, #1
 8028bfa:	f7ff fe17 	bl	802882c <FD_SetStatus>
  UTIL_TIMER_Start(&rfts_timer);
 8028bfe:	4804      	ldr	r0, [pc, #16]	; (8028c10 <event_started_callback+0x1c>)
 8028c00:	f008 f8d8 	bl	8030db4 <UTIL_TIMER_Start>
  req_callback();
 8028c04:	4b03      	ldr	r3, [pc, #12]	; (8028c14 <event_started_callback+0x20>)
 8028c06:	681b      	ldr	r3, [r3, #0]
 8028c08:	4798      	blx	r3
  RFTS_WindowAllowed_Callback();
  return 0;
}
 8028c0a:	2000      	movs	r0, #0
 8028c0c:	bd08      	pop	{r3, pc}
 8028c0e:	bf00      	nop
 8028c10:	20008fa8 	.word	0x20008fa8
 8028c14:	20008fa4 	.word	0x20008fa4

08028c18 <RFTS_ReqWindow>:
{
 8028c18:	b570      	push	{r4, r5, r6, lr}
 8028c1a:	b090      	sub	sp, #64	; 0x40
  if (Callback == NULL)
 8028c1c:	b141      	cbz	r1, 8028c30 <RFTS_ReqWindow+0x18>
  __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
 8028c1e:	f3ef 8310 	mrs	r3, PRIMASK
  __ASM volatile ("cpsid i" : : : "memory");
 8028c22:	b672      	cpsid	i
  if (rfts_window_req_pending == true)
 8028c24:	4e1c      	ldr	r6, [pc, #112]	; (8028c98 <RFTS_ReqWindow+0x80>)
 8028c26:	2501      	movs	r5, #1
 8028c28:	7834      	ldrb	r4, [r6, #0]
 8028c2a:	b124      	cbz	r4, 8028c36 <RFTS_ReqWindow+0x1e>
  __ASM volatile ("MSR primask, %0" : : "r" (priMask) : "memory");
 8028c2c:	f383 8810 	msr	PRIMASK, r3
    return RFTS_WINDOW_REQ_FAILED;
 8028c30:	2001      	movs	r0, #1
}
 8028c32:	b010      	add	sp, #64	; 0x40
 8028c34:	bd70      	pop	{r4, r5, r6, pc}
    rfts_window_req_pending = true;
 8028c36:	7035      	strb	r5, [r6, #0]
 8028c38:	f383 8810 	msr	PRIMASK, r3
  req_callback = Callback;
 8028c3c:	4b17      	ldr	r3, [pc, #92]	; (8028c9c <RFTS_ReqWindow+0x84>)
  extrnl_evnt_config.deadline = 0;
 8028c3e:	2200      	movs	r2, #0
  req_callback = Callback;
 8028c40:	6019      	str	r1, [r3, #0]
  extrnl_evnt_config.deadline = 0;
 8028c42:	2300      	movs	r3, #0
 8028c44:	e9cd 2302 	strd	r2, r3, [sp, #8]
  extrnl_evnt_config.strt_min = 0;
 8028c48:	e9cd 2304 	strd	r2, r3, [sp, #16]
  extrnl_evnt_config.strt_max = 0;
 8028c4c:	e9cd 2306 	strd	r2, r3, [sp, #24]
  extrnl_evnt_config.priority = PRIORITY_DEFAULT;
 8028c50:	f44f 63a0 	mov.w	r3, #1280	; 0x500
  UTIL_TIMER_Create(&rfts_timer,
 8028c54:	f44f 717a 	mov.w	r1, #1000	; 0x3e8
  extrnl_evnt_config.priority = PRIORITY_DEFAULT;
 8028c58:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
  extrnl_evnt_config.evnt_strtd_cbk = &event_started_callback;
 8028c5c:	4b10      	ldr	r3, [pc, #64]	; (8028ca0 <RFTS_ReqWindow+0x88>)
  UTIL_TIMER_Create(&rfts_timer,
 8028c5e:	fbb0 f1f1 	udiv	r1, r0, r1
 8028c62:	4622      	mov	r2, r4
  extrnl_evnt_config.durn_max = 0;
 8028c64:	e9cd 0408 	strd	r0, r4, [sp, #32]
  extrnl_evnt_config.evnt_blckd_cbk = NULL;
 8028c68:	e9cd 340d 	strd	r3, r4, [sp, #52]	; 0x34
  UTIL_TIMER_Create(&rfts_timer,
 8028c6c:	480d      	ldr	r0, [pc, #52]	; (8028ca4 <RFTS_ReqWindow+0x8c>)
 8028c6e:	4b0e      	ldr	r3, [pc, #56]	; (8028ca8 <RFTS_ReqWindow+0x90>)
 8028c70:	9400      	str	r4, [sp, #0]
  extrnl_evnt_config.prdc_intrvl = 0;
 8028c72:	940a      	str	r4, [sp, #40]	; 0x28
  extrnl_evnt_config.ptr_priv = NULL;
 8028c74:	940c      	str	r4, [sp, #48]	; 0x30
  extrnl_evnt_config.evnt_abortd_cbk = NULL;
 8028c76:	940f      	str	r4, [sp, #60]	; 0x3c
  UTIL_TIMER_Create(&rfts_timer,
 8028c78:	f008 f808 	bl	8030c8c <UTIL_TIMER_Create>
  ext_event_handler = evnt_schdlr_rgstr_gnrc_evnt(&extrnl_evnt_config);
 8028c7c:	a802      	add	r0, sp, #8
 8028c7e:	f7d9 f9c5 	bl	800200c <evnt_schdlr_rgstr_gnrc_evnt>
 8028c82:	4b0a      	ldr	r3, [pc, #40]	; (8028cac <RFTS_ReqWindow+0x94>)
 8028c84:	6018      	str	r0, [r3, #0]
  if (ext_event_handler == NULL)
 8028c86:	b920      	cbnz	r0, 8028c92 <RFTS_ReqWindow+0x7a>
  __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
 8028c88:	f3ef 8310 	mrs	r3, PRIMASK
  __ASM volatile ("cpsid i" : : : "memory");
 8028c8c:	b672      	cpsid	i
    rfts_window_req_pending = false;
 8028c8e:	7030      	strb	r0, [r6, #0]
 8028c90:	e7cc      	b.n	8028c2c <RFTS_ReqWindow+0x14>
  return RFTS_CMD_OK;
 8028c92:	4620      	mov	r0, r4
 8028c94:	e7cd      	b.n	8028c32 <RFTS_ReqWindow+0x1a>
 8028c96:	bf00      	nop
 8028c98:	20008fc0 	.word	0x20008fc0
 8028c9c:	20008fa4 	.word	0x20008fa4
 8028ca0:	08028bf5 	.word	0x08028bf5
 8028ca4:	20008fa8 	.word	0x20008fa8
 8028ca8:	08028bd5 	.word	0x08028bd5
 8028cac:	20008fa0 	.word	0x20008fa0

08028cb0 <RFTS_RelWindow>:
{
 8028cb0:	b510      	push	{r4, lr}
  UTIL_TIMER_Stop(&rfts_timer);
 8028cb2:	480c      	ldr	r0, [pc, #48]	; (8028ce4 <RFTS_RelWindow+0x34>)
 8028cb4:	f008 f82e 	bl	8030d14 <UTIL_TIMER_Stop>
  if (evnt_schdlr_gnrc_evnt_cmplt(ext_event_handler) == 0)
 8028cb8:	4b0b      	ldr	r3, [pc, #44]	; (8028ce8 <RFTS_RelWindow+0x38>)
 8028cba:	6818      	ldr	r0, [r3, #0]
 8028cbc:	f7d9 fa26 	bl	800210c <evnt_schdlr_gnrc_evnt_cmplt>
  FD_SetStatus(FD_FLASHACCESS_RFTS, LL_FLASH_DISABLE);
 8028cc0:	2101      	movs	r1, #1
    status = RFTS_WINDOW_REL_ERROR;
 8028cc2:	2800      	cmp	r0, #0
  FD_SetStatus(FD_FLASHACCESS_RFTS, LL_FLASH_DISABLE);
 8028cc4:	4608      	mov	r0, r1
    status = RFTS_WINDOW_REL_ERROR;
 8028cc6:	bf0c      	ite	eq
 8028cc8:	2400      	moveq	r4, #0
 8028cca:	2402      	movne	r4, #2
  FD_SetStatus(FD_FLASHACCESS_RFTS, LL_FLASH_DISABLE);
 8028ccc:	f7ff fdae 	bl	802882c <FD_SetStatus>
  __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
 8028cd0:	f3ef 8310 	mrs	r3, PRIMASK
  __ASM volatile ("cpsid i" : : : "memory");
 8028cd4:	b672      	cpsid	i
  rfts_window_req_pending = false;
 8028cd6:	2100      	movs	r1, #0
 8028cd8:	4a04      	ldr	r2, [pc, #16]	; (8028cec <RFTS_RelWindow+0x3c>)
 8028cda:	7011      	strb	r1, [r2, #0]
  __ASM volatile ("MSR primask, %0" : : "r" (priMask) : "memory");
 8028cdc:	f383 8810 	msr	PRIMASK, r3
}
 8028ce0:	4620      	mov	r0, r4
 8028ce2:	bd10      	pop	{r4, pc}
 8028ce4:	20008fa8 	.word	0x20008fa8
 8028ce8:	20008fa0 	.word	0x20008fa0
 8028cec:	20008fc0 	.word	0x20008fc0

08028cf0 <InvokeBufferCallback>:

  return error;
}

void InvokeBufferCallback (const uint8_t NvmId, const SNVMA_Callback_Status_t CallbackStatus)
{
 8028cf0:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8028cf4:	468a      	mov	sl, r1
  uint8_t pendingShift = 0x00;
  uint8_t tmpMask = 0x00;

  for (pendingShift = 0x00;
 8028cf6:	2700      	movs	r7, #0
 8028cf8:	f8df 8060 	ldr.w	r8, [pc, #96]	; 8028d5c <InvokeBufferCallback+0x6c>
       ((SNVMA_NvmConfiguration[NvmId].PendingBufferWriteOp != 0x00) &&
 8028cfc:	ea4f 1980 	mov.w	r9, r0, lsl #6
 8028d00:	eb08 1680 	add.w	r6, r8, r0, lsl #6
 8028d04:	3610      	adds	r6, #16

        /* Enter critical section */
        UTILS_ENTER_CRITICAL_SECTION();

        /* Remove this pending buffer from the active list */
        SNVMA_NvmConfiguration[NvmId].PendingBufferWriteOp &= ~(1u << (pendingShift + SNVMA_MAX_NUMBER_BUFFER));
 8028d06:	eb08 1580 	add.w	r5, r8, r0, lsl #6
       ((SNVMA_NvmConfiguration[NvmId].PendingBufferWriteOp != 0x00) &&
 8028d0a:	eb08 0309 	add.w	r3, r8, r9
 8028d0e:	789b      	ldrb	r3, [r3, #2]
  for (pendingShift = 0x00;
 8028d10:	b10b      	cbz	r3, 8028d16 <InvokeBufferCallback+0x26>
       ((SNVMA_NvmConfiguration[NvmId].PendingBufferWriteOp != 0x00) &&
 8028d12:	2f04      	cmp	r7, #4
 8028d14:	d101      	bne.n	8028d1a <InvokeBufferCallback+0x2a>
      {
        /* Do not notify, a retry shall be planned */
      }
    }
  }
}
 8028d16:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
              (1u << (pendingShift + SNVMA_MAX_NUMBER_BUFFER));
 8028d1a:	2201      	movs	r2, #1
 8028d1c:	1d39      	adds	r1, r7, #4
 8028d1e:	408a      	lsls	r2, r1
    if (tmpMask != 0x00)
 8028d20:	421a      	tst	r2, r3
    tmpMask = SNVMA_NvmConfiguration[NvmId].PendingBufferWriteOp &
 8028d22:	fa5f fb82 	uxtb.w	fp, r2
    if (tmpMask != 0x00)
 8028d26:	d016      	beq.n	8028d56 <InvokeBufferCallback+0x66>
      if ((SNVMA_NvmConfiguration[NvmId].PendingBufferWriteOp & (1u << pendingShift)) == 0x00)
 8028d28:	40fb      	lsrs	r3, r7
 8028d2a:	f013 0401 	ands.w	r4, r3, #1
 8028d2e:	d112      	bne.n	8028d56 <InvokeBufferCallback+0x66>
        if (SNVMA_NvmConfiguration[NvmId].a_Callback[pendingShift] != NULL)
 8028d30:	6833      	ldr	r3, [r6, #0]
 8028d32:	b13b      	cbz	r3, 8028d44 <InvokeBufferCallback+0x54>
          SNVMA_NvmConfiguration[NvmId].a_Callback[pendingShift] (CallbackStatus);
 8028d34:	4650      	mov	r0, sl
 8028d36:	4798      	blx	r3
  __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
 8028d38:	f3ef 8310 	mrs	r3, PRIMASK
  __ASM volatile ("cpsid i" : : : "memory");
 8028d3c:	b672      	cpsid	i
          SNVMA_NvmConfiguration[NvmId].a_Callback[pendingShift] = NULL;
 8028d3e:	6034      	str	r4, [r6, #0]
  __ASM volatile ("MSR primask, %0" : : "r" (priMask) : "memory");
 8028d40:	f383 8810 	msr	PRIMASK, r3
  __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
 8028d44:	f3ef 8210 	mrs	r2, PRIMASK
  __ASM volatile ("cpsid i" : : : "memory");
 8028d48:	b672      	cpsid	i
        SNVMA_NvmConfiguration[NvmId].PendingBufferWriteOp &= ~(1u << (pendingShift + SNVMA_MAX_NUMBER_BUFFER));
 8028d4a:	78ab      	ldrb	r3, [r5, #2]
 8028d4c:	ea23 030b 	bic.w	r3, r3, fp
 8028d50:	70ab      	strb	r3, [r5, #2]
  __ASM volatile ("MSR primask, %0" : : "r" (priMask) : "memory");
 8028d52:	f382 8810 	msr	PRIMASK, r2
       pendingShift++)
 8028d56:	3701      	adds	r7, #1
 8028d58:	3604      	adds	r6, #4
 8028d5a:	e7d6      	b.n	8028d0a <InvokeBufferCallback+0x1a>
 8028d5c:	20000478 	.word	0x20000478

08028d60 <IsCrcOk>:
{
 8028d60:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8028d64:	4604      	mov	r4, r0
  crcComputedValue = HAL_CRC_Calculate (&SNVMA_CrcHandle,
 8028d66:	4e1a      	ldr	r6, [pc, #104]	; (8028dd0 <IsCrcOk+0x70>)
  uint32_t * payloadAddr = (uint32_t *)((uint32_t)(p_BankStartAddress) + sizeof (SNVMA_BankHeader_t));
 8028d68:	f100 0710 	add.w	r7, r0, #16
  crcComputedValue = HAL_CRC_Calculate (&SNVMA_CrcHandle,
 8028d6c:	4639      	mov	r1, r7
 8028d6e:	f8b0 2005 	ldrh.w	r2, [r0, #5]
 8028d72:	4630      	mov	r0, r6
 8028d74:	f002 fe56 	bl	802ba24 <HAL_CRC_Calculate>
  offSet = SNVMA_ALIGN_128(((SNVMA_BankHeader_t *)p_BankStartAddress)->SizeId1 * sizeof (uint32_t));
 8028d78:	f8b4 5005 	ldrh.w	r5, [r4, #5]
  crcComputedValue = HAL_CRC_Accumulate (&SNVMA_CrcHandle,
 8028d7c:	8922      	ldrh	r2, [r4, #8]
  offSet = SNVMA_ALIGN_128(((SNVMA_BankHeader_t *)p_BankStartAddress)->SizeId1 * sizeof (uint32_t));
 8028d7e:	00ad      	lsls	r5, r5, #2
 8028d80:	350f      	adds	r5, #15
 8028d82:	f025 080f 	bic.w	r8, r5, #15
  crcComputedValue = HAL_CRC_Accumulate (&SNVMA_CrcHandle,
 8028d86:	eb07 0108 	add.w	r1, r7, r8
 8028d8a:	4630      	mov	r0, r6
 8028d8c:	f002 fe2a 	bl	802b9e4 <HAL_CRC_Accumulate>
  offSet += SNVMA_ALIGN_128(((SNVMA_BankHeader_t *)p_BankStartAddress)->SizeId2 * sizeof (uint32_t));
 8028d90:	8925      	ldrh	r5, [r4, #8]
  crcComputedValue = HAL_CRC_Accumulate (&SNVMA_CrcHandle,
 8028d92:	f8b4 200b 	ldrh.w	r2, [r4, #11]
  offSet += SNVMA_ALIGN_128(((SNVMA_BankHeader_t *)p_BankStartAddress)->SizeId2 * sizeof (uint32_t));
 8028d96:	00ad      	lsls	r5, r5, #2
 8028d98:	350f      	adds	r5, #15
 8028d9a:	f025 050f 	bic.w	r5, r5, #15
 8028d9e:	4445      	add	r5, r8
  crcComputedValue = HAL_CRC_Accumulate (&SNVMA_CrcHandle,
 8028da0:	1979      	adds	r1, r7, r5
 8028da2:	4630      	mov	r0, r6
 8028da4:	f002 fe1e 	bl	802b9e4 <HAL_CRC_Accumulate>
  offSet += SNVMA_ALIGN_128(((SNVMA_BankHeader_t *)p_BankStartAddress)->SizeId3 * sizeof (uint32_t));
 8028da8:	f8b4 100b 	ldrh.w	r1, [r4, #11]
  crcComputedValue = HAL_CRC_Accumulate (&SNVMA_CrcHandle,
 8028dac:	4630      	mov	r0, r6
  offSet += SNVMA_ALIGN_128(((SNVMA_BankHeader_t *)p_BankStartAddress)->SizeId3 * sizeof (uint32_t));
 8028dae:	0089      	lsls	r1, r1, #2
 8028db0:	310f      	adds	r1, #15
 8028db2:	f021 010f 	bic.w	r1, r1, #15
                                         (uint32_t *)((uint32_t)payloadAddr + offSet),
 8028db6:	4439      	add	r1, r7
  crcComputedValue = HAL_CRC_Accumulate (&SNVMA_CrcHandle,
 8028db8:	89e2      	ldrh	r2, [r4, #14]
 8028dba:	4429      	add	r1, r5
 8028dbc:	f002 fe12 	bl	802b9e4 <HAL_CRC_Accumulate>
  if (crcComputedValue == ((SNVMA_BankHeader_t *)p_BankStartAddress)->Crc)
 8028dc0:	8863      	ldrh	r3, [r4, #2]
 8028dc2:	b280      	uxth	r0, r0
}
 8028dc4:	1a1b      	subs	r3, r3, r0
 8028dc6:	4258      	negs	r0, r3
 8028dc8:	4158      	adcs	r0, r3
 8028dca:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8028dce:	bf00      	nop
 8028dd0:	20008ff0 	.word	0x20008ff0

08028dd4 <EraseSector>:
{
 8028dd4:	b51f      	push	{r0, r1, r2, r3, r4, lr}
  FLASH_EraseInitTypeDef eraseInit =
 8028dd6:	2302      	movs	r3, #2
 8028dd8:	2400      	movs	r4, #0
 8028dda:	e9cd 0102 	strd	r0, r1, [sp, #8]
 8028dde:	e9cd 4300 	strd	r4, r3, [sp]
  HAL_FLASH_Unlock();
 8028de2:	f003 fb29 	bl	802c438 <HAL_FLASH_Unlock>
  if (HAL_FLASHEx_Erase(&eraseInit, &pageError) != HAL_OK)
 8028de6:	4669      	mov	r1, sp
 8028de8:	a801      	add	r0, sp, #4
 8028dea:	f003 fbcf 	bl	802c58c <HAL_FLASHEx_Erase>
 8028dee:	b918      	cbnz	r0, 8028df8 <EraseSector+0x24>
    error = FALSE;
 8028df0:	9c00      	ldr	r4, [sp, #0]
 8028df2:	1c63      	adds	r3, r4, #1
 8028df4:	425c      	negs	r4, r3
 8028df6:	415c      	adcs	r4, r3
  HAL_FLASH_Lock();
 8028df8:	f003 fb30 	bl	802c45c <HAL_FLASH_Lock>
}
 8028dfc:	4620      	mov	r0, r4
 8028dfe:	b004      	add	sp, #16
 8028e00:	bd10      	pop	{r4, pc}
	...

08028e04 <StartFlashWrite>:
{
 8028e04:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  memset ((void *)&SNVMA_WriteBankHeader,
 8028e08:	2700      	movs	r7, #0
{
 8028e0a:	4604      	mov	r4, r0
  memset ((void *)&SNVMA_WriteBankHeader,
 8028e0c:	2210      	movs	r2, #16
 8028e0e:	2100      	movs	r1, #0
 8028e10:	4823      	ldr	r0, [pc, #140]	; (8028ea0 <StartFlashWrite+0x9c>)
 8028e12:	f008 f8cc 	bl	8030fae <memset>
  uint16_t crcValue = 0x00;
 8028e16:	4638      	mov	r0, r7
 8028e18:	4d22      	ldr	r5, [pc, #136]	; (8028ea4 <StartFlashWrite+0xa0>)
        crcValue = HAL_CRC_Accumulate (&SNVMA_CrcHandle,
 8028e1a:	f8df 8090 	ldr.w	r8, [pc, #144]	; 8028eac <StartFlashWrite+0xa8>
 8028e1e:	eb05 1684 	add.w	r6, r5, r4, lsl #6
    if (SNVMA_NvmConfiguration[NvmId].a_Buffers[cnt].p_Addr != NULL)
 8028e22:	6a31      	ldr	r1, [r6, #32]
 8028e24:	b131      	cbz	r1, 8028e34 <StartFlashWrite+0x30>
        crcValue = HAL_CRC_Calculate (&SNVMA_CrcHandle,
 8028e26:	6a72      	ldr	r2, [r6, #36]	; 0x24
      if (crcValue == 0x00)
 8028e28:	2800      	cmp	r0, #0
 8028e2a:	d135      	bne.n	8028e98 <StartFlashWrite+0x94>
        crcValue = HAL_CRC_Calculate (&SNVMA_CrcHandle,
 8028e2c:	4640      	mov	r0, r8
 8028e2e:	f002 fdf9 	bl	802ba24 <HAL_CRC_Calculate>
        crcValue = HAL_CRC_Accumulate (&SNVMA_CrcHandle,
 8028e32:	b280      	uxth	r0, r0
  for (uint8_t cnt = 0x00;
 8028e34:	3701      	adds	r7, #1
 8028e36:	2f04      	cmp	r7, #4
 8028e38:	f106 0608 	add.w	r6, r6, #8
 8028e3c:	d1f1      	bne.n	8028e22 <StartFlashWrite+0x1e>
  __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
 8028e3e:	f3ef 8610 	mrs	r6, PRIMASK
  __ASM volatile ("cpsid i" : : : "memory");
 8028e42:	b672      	cpsid	i
  if (SNVMA_NvmConfiguration[NvmId].p_BankForRestore != NULL)
 8028e44:	eb05 1384 	add.w	r3, r5, r4, lsl #6
 8028e48:	68d9      	ldr	r1, [r3, #12]
 8028e4a:	01a2      	lsls	r2, r4, #6
 8028e4c:	4b14      	ldr	r3, [pc, #80]	; (8028ea0 <StartFlashWrite+0x9c>)
 8028e4e:	b119      	cbz	r1, 8028e58 <StartFlashWrite+0x54>
                                      (SNVMA_NvmConfiguration[NvmId].p_BankForRestore->p_StartAddr))->Counter) + 1;
 8028e50:	6809      	ldr	r1, [r1, #0]
 8028e52:	7849      	ldrb	r1, [r1, #1]
 8028e54:	3101      	adds	r1, #1
    SNVMA_WriteBankHeader.Counter = (((SNVMA_BankHeader_t *)
 8028e56:	7059      	strb	r1, [r3, #1]
  SNVMA_WriteBankHeader.SizeId1 = SNVMA_NvmConfiguration[NvmId].a_Buffers[0x00].Size;
 8028e58:	442a      	add	r2, r5
 8028e5a:	6a51      	ldr	r1, [r2, #36]	; 0x24
  SNVMA_WriteBankHeader.BufferId1 = (NvmId * SNVMA_MAX_NUMBER_BUFFER);
 8028e5c:	00a4      	lsls	r4, r4, #2
 8028e5e:	b2e4      	uxtb	r4, r4
  SNVMA_WriteBankHeader.SizeId1 = SNVMA_NvmConfiguration[NvmId].a_Buffers[0x00].Size;
 8028e60:	f8a3 1005 	strh.w	r1, [r3, #5]
  SNVMA_WriteBankHeader.BufferId2 = (NvmId * SNVMA_MAX_NUMBER_BUFFER) + 1u;
 8028e64:	1c61      	adds	r1, r4, #1
 8028e66:	71d9      	strb	r1, [r3, #7]
  SNVMA_WriteBankHeader.SizeId2 = SNVMA_NvmConfiguration[NvmId].a_Buffers[0x01].Size;
 8028e68:	6ad1      	ldr	r1, [r2, #44]	; 0x2c
  SNVMA_WriteBankHeader.BufferId1 = (NvmId * SNVMA_MAX_NUMBER_BUFFER);
 8028e6a:	711c      	strb	r4, [r3, #4]
  SNVMA_WriteBankHeader.SizeId2 = SNVMA_NvmConfiguration[NvmId].a_Buffers[0x01].Size;
 8028e6c:	8119      	strh	r1, [r3, #8]
  SNVMA_WriteBankHeader.BufferId3 = (NvmId * SNVMA_MAX_NUMBER_BUFFER) + 2u;
 8028e6e:	1ca1      	adds	r1, r4, #2
 8028e70:	7299      	strb	r1, [r3, #10]
  SNVMA_WriteBankHeader.SizeId3 = SNVMA_NvmConfiguration[NvmId].a_Buffers[0x02].Size;
 8028e72:	6b51      	ldr	r1, [r2, #52]	; 0x34
  SNVMA_WriteBankHeader.BufferId4 = (NvmId * SNVMA_MAX_NUMBER_BUFFER) + 3u;
 8028e74:	3403      	adds	r4, #3
  SNVMA_WriteBankHeader.SizeId3 = SNVMA_NvmConfiguration[NvmId].a_Buffers[0x02].Size;
 8028e76:	f8a3 100b 	strh.w	r1, [r3, #11]
  SNVMA_WriteBankHeader.SizeId4 = SNVMA_NvmConfiguration[NvmId].a_Buffers[0x03].Size;
 8028e7a:	6bd1      	ldr	r1, [r2, #60]	; 0x3c
  SNVMA_WriteBankHeader.Crc = crcValue;
 8028e7c:	8058      	strh	r0, [r3, #2]
  SNVMA_WriteBankHeader.BufferId4 = (NvmId * SNVMA_MAX_NUMBER_BUFFER) + 3u;
 8028e7e:	735c      	strb	r4, [r3, #13]
  SNVMA_WriteBankHeader.SizeId4 = SNVMA_NvmConfiguration[NvmId].a_Buffers[0x03].Size;
 8028e80:	81d9      	strh	r1, [r3, #14]
  __ASM volatile ("MSR primask, %0" : : "r" (priMask) : "memory");
 8028e82:	f386 8810 	msr	PRIMASK, r6
  error = FM_Write ((uint32_t *)&SNVMA_WriteBankHeader,
 8028e86:	6891      	ldr	r1, [r2, #8]
 8028e88:	4b07      	ldr	r3, [pc, #28]	; (8028ea8 <StartFlashWrite+0xa4>)
 8028e8a:	2204      	movs	r2, #4
}
 8028e8c:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
  error = FM_Write ((uint32_t *)&SNVMA_WriteBankHeader,
 8028e90:	6809      	ldr	r1, [r1, #0]
 8028e92:	4803      	ldr	r0, [pc, #12]	; (8028ea0 <StartFlashWrite+0x9c>)
 8028e94:	f7ff bd66 	b.w	8028964 <FM_Write>
        crcValue = HAL_CRC_Accumulate (&SNVMA_CrcHandle,
 8028e98:	4640      	mov	r0, r8
 8028e9a:	f002 fda3 	bl	802b9e4 <HAL_CRC_Accumulate>
 8028e9e:	e7c8      	b.n	8028e32 <StartFlashWrite+0x2e>
 8028ea0:	20009030 	.word	0x20009030
 8028ea4:	20000478 	.word	0x20000478
 8028ea8:	20009014 	.word	0x20009014
 8028eac:	20008ff0 	.word	0x20008ff0

08028eb0 <IsHeaderOk>:
  if ((((SNVMA_BankHeader_t *)p_BankStartAddress)->Empty == (uint8_t)SNVMA_ERASED_CONTENT) &&
 8028eb0:	f64f 73ff 	movw	r3, #65535	; 0xffff
{
 8028eb4:	b530      	push	{r4, r5, lr}
  if ((((SNVMA_BankHeader_t *)p_BankStartAddress)->Empty == (uint8_t)SNVMA_ERASED_CONTENT) &&
 8028eb6:	8802      	ldrh	r2, [r0, #0]
      (((SNVMA_BankHeader_t *)p_BankStartAddress)->SizeId3 == SNVMA_ERASED_CONTENT) &&
 8028eb8:	f8b0 500b 	ldrh.w	r5, [r0, #11]
  if ((((SNVMA_BankHeader_t *)p_BankStartAddress)->Empty == (uint8_t)SNVMA_ERASED_CONTENT) &&
 8028ebc:	429a      	cmp	r2, r3
 8028ebe:	d119      	bne.n	8028ef4 <IsHeaderOk+0x44>
      (((SNVMA_BankHeader_t *)p_BankStartAddress)->Counter == (uint8_t)SNVMA_ERASED_CONTENT) &&
 8028ec0:	8843      	ldrh	r3, [r0, #2]
 8028ec2:	4293      	cmp	r3, r2
 8028ec4:	d116      	bne.n	8028ef4 <IsHeaderOk+0x44>
      (((SNVMA_BankHeader_t *)p_BankStartAddress)->BufferId1 == (uint8_t)SNVMA_ERASED_CONTENT) &&
 8028ec6:	f06f 447f 	mvn.w	r4, #4278190080	; 0xff000000
 8028eca:	6842      	ldr	r2, [r0, #4]
 8028ecc:	f022 427f 	bic.w	r2, r2, #4278190080	; 0xff000000
 8028ed0:	42a2      	cmp	r2, r4
 8028ed2:	d10f      	bne.n	8028ef4 <IsHeaderOk+0x44>
      (((SNVMA_BankHeader_t *)p_BankStartAddress)->SizeId1 == SNVMA_ERASED_CONTENT) &&
 8028ed4:	79c4      	ldrb	r4, [r0, #7]
 8028ed6:	2cff      	cmp	r4, #255	; 0xff
 8028ed8:	d10c      	bne.n	8028ef4 <IsHeaderOk+0x44>
      (((SNVMA_BankHeader_t *)p_BankStartAddress)->SizeId2 == SNVMA_ERASED_CONTENT) &&
 8028eda:	6884      	ldr	r4, [r0, #8]
 8028edc:	f024 447f 	bic.w	r4, r4, #4278190080	; 0xff000000
 8028ee0:	4294      	cmp	r4, r2
 8028ee2:	d107      	bne.n	8028ef4 <IsHeaderOk+0x44>
      (((SNVMA_BankHeader_t *)p_BankStartAddress)->BufferId3 == (uint8_t)SNVMA_ERASED_CONTENT) &&
 8028ee4:	429d      	cmp	r5, r3
 8028ee6:	d105      	bne.n	8028ef4 <IsHeaderOk+0x44>
      (((SNVMA_BankHeader_t *)p_BankStartAddress)->BufferId4 == (uint8_t)SNVMA_ERASED_CONTENT) &&
 8028ee8:	68c2      	ldr	r2, [r0, #12]
 8028eea:	f022 02ff 	bic.w	r2, r2, #255	; 0xff
 8028eee:	f512 7f80 	cmn.w	r2, #256	; 0x100
 8028ef2:	d01f      	beq.n	8028f34 <IsHeaderOk+0x84>
            ((SNVMA_BankHeader_t *)p_BankStartAddress)->SizeId2 +
 8028ef4:	8902      	ldrh	r2, [r0, #8]
  else if ((((SNVMA_BankHeader_t *)p_BankStartAddress)->SizeId1 +
 8028ef6:	f8b0 3005 	ldrh.w	r3, [r0, #5]
 8028efa:	4413      	add	r3, r2
            ((SNVMA_BankHeader_t *)p_BankStartAddress)->SizeId4) >
 8028efc:	89c2      	ldrh	r2, [r0, #14]
            ((SNVMA_BankHeader_t *)p_BankStartAddress)->SizeId2 +
 8028efe:	442b      	add	r3, r5
            ((SNVMA_BankHeader_t *)p_BankStartAddress)->SizeId3 +
 8028f00:	4413      	add	r3, r2
           ((SNVMA_NvmConfiguration[NvmId].BankSize * FLASH_PAGE_SIZE) / sizeof (uint32_t)))
 8028f02:	4a0d      	ldr	r2, [pc, #52]	; (8028f38 <IsHeaderOk+0x88>)
 8028f04:	eb02 1281 	add.w	r2, r2, r1, lsl #6
 8028f08:	7852      	ldrb	r2, [r2, #1]
  else if ((((SNVMA_BankHeader_t *)p_BankStartAddress)->SizeId1 +
 8028f0a:	ebb3 2fc2 	cmp.w	r3, r2, lsl #11
 8028f0e:	d811      	bhi.n	8028f34 <IsHeaderOk+0x84>
  else if (((SNVMA_BankHeader_t *)p_BankStartAddress)->BufferId1 != (NvmId * SNVMA_MAX_NUMBER_BUFFER))
 8028f10:	7903      	ldrb	r3, [r0, #4]
 8028f12:	ebb3 0f81 	cmp.w	r3, r1, lsl #2
 8028f16:	d10d      	bne.n	8028f34 <IsHeaderOk+0x84>
  else if (((SNVMA_BankHeader_t *)p_BankStartAddress)->BufferId2 != ((NvmId * SNVMA_MAX_NUMBER_BUFFER) + 1))
 8028f18:	79c1      	ldrb	r1, [r0, #7]
 8028f1a:	1c5a      	adds	r2, r3, #1
 8028f1c:	4291      	cmp	r1, r2
 8028f1e:	d109      	bne.n	8028f34 <IsHeaderOk+0x84>
  else if (((SNVMA_BankHeader_t *)p_BankStartAddress)->BufferId3 != ((NvmId * SNVMA_MAX_NUMBER_BUFFER) + 2))
 8028f20:	7a81      	ldrb	r1, [r0, #10]
 8028f22:	1c9a      	adds	r2, r3, #2
 8028f24:	4291      	cmp	r1, r2
 8028f26:	d105      	bne.n	8028f34 <IsHeaderOk+0x84>
  else if (((SNVMA_BankHeader_t *)p_BankStartAddress)->BufferId4 != ((NvmId * SNVMA_MAX_NUMBER_BUFFER) + 3))
 8028f28:	7b40      	ldrb	r0, [r0, #13]
 8028f2a:	3303      	adds	r3, #3
    error = FALSE;
 8028f2c:	1ac3      	subs	r3, r0, r3
 8028f2e:	4258      	negs	r0, r3
 8028f30:	4158      	adcs	r0, r3
}
 8028f32:	bd30      	pop	{r4, r5, pc}
    error = FALSE;
 8028f34:	2000      	movs	r0, #0
 8028f36:	e7fc      	b.n	8028f32 <IsHeaderOk+0x82>
 8028f38:	20000478 	.word	0x20000478

08028f3c <SNVMA_FlashManagerCallback>:
{
 8028f3c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
  switch (SNVMA_FlashInfo.FlashOpState)
 8028f3e:	4ca2      	ldr	r4, [pc, #648]	; (80291c8 <SNVMA_FlashManagerCallback+0x28c>)
 8028f40:	78a3      	ldrb	r3, [r4, #2]
 8028f42:	2b03      	cmp	r3, #3
 8028f44:	d860      	bhi.n	8029008 <SNVMA_FlashManagerCallback+0xcc>
 8028f46:	e8df f013 	tbh	[pc, r3, lsl #1]
 8028f4a:	0004      	.short	0x0004
 8028f4c:	016d0068 	.word	0x016d0068
 8028f50:	01b8      	.short	0x01b8
                           (uint32_t *)SNVMA_NvmConfiguration[SNVMA_FlashInfo.NvmId].p_BankForWrite->p_StartAddr,
 8028f52:	4e9e      	ldr	r6, [pc, #632]	; (80291cc <SNVMA_FlashManagerCallback+0x290>)
 8028f54:	7823      	ldrb	r3, [r4, #0]
 8028f56:	eb06 1383 	add.w	r3, r6, r3, lsl #6
        if (IsSameContent ((uint32_t *)&SNVMA_WriteBankHeader,
 8028f5a:	689b      	ldr	r3, [r3, #8]
 8028f5c:	6819      	ldr	r1, [r3, #0]
      if (Status == FM_OPERATION_COMPLETE)
 8028f5e:	2800      	cmp	r0, #0
 8028f60:	d153      	bne.n	802900a <SNVMA_FlashManagerCallback+0xce>
 8028f62:	4d9b      	ldr	r5, [pc, #620]	; (80291d0 <SNVMA_FlashManagerCallback+0x294>)
 8028f64:	1f0b      	subs	r3, r1, #4
 8028f66:	310c      	adds	r1, #12
    if (p_Source[cnt] != p_Destination[cnt])
 8028f68:	f853 2f04 	ldr.w	r2, [r3, #4]!
 8028f6c:	f855 0b04 	ldr.w	r0, [r5], #4
  for (uint32_t cnt = 0x00;
 8028f70:	428b      	cmp	r3, r1
 8028f72:	d015      	beq.n	8028fa0 <SNVMA_FlashManagerCallback+0x64>
       (cnt < Size) && (error == TRUE);
 8028f74:	4290      	cmp	r0, r2
 8028f76:	d0f7      	beq.n	8028f68 <SNVMA_FlashManagerCallback+0x2c>
  __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
 8028f78:	f3ef 8310 	mrs	r3, PRIMASK
  __ASM volatile ("cpsid i" : : : "memory");
 8028f7c:	b672      	cpsid	i
          SNVMA_FlashInfo.FlashOpState = SNVMA_RETRY_WRITE;
 8028f7e:	2203      	movs	r2, #3
 8028f80:	70a2      	strb	r2, [r4, #2]
  __ASM volatile ("MSR primask, %0" : : "r" (priMask) : "memory");
 8028f82:	f383 8810 	msr	PRIMASK, r3
                                    SNVMA_NvmConfiguration[SNVMA_FlashInfo.NvmId].
 8028f86:	7823      	ldrb	r3, [r4, #0]
          flashFunRet = FM_Erase ((((uint32_t)
 8028f88:	4a92      	ldr	r2, [pc, #584]	; (80291d4 <SNVMA_FlashManagerCallback+0x298>)
                                    SNVMA_NvmConfiguration[SNVMA_FlashInfo.NvmId].BankSize,
 8028f8a:	eb06 1683 	add.w	r6, r6, r3, lsl #6
                                      p_BankForWrite->p_StartAddr - FLASH_BASE_NS) / FLASH_PAGE_SIZE),
 8028f8e:	68b3      	ldr	r3, [r6, #8]
          flashFunRet = FM_Erase ((((uint32_t)
 8028f90:	7871      	ldrb	r1, [r6, #1]
                                      p_BankForWrite->p_StartAddr - FLASH_BASE_NS) / FLASH_PAGE_SIZE),
 8028f92:	6818      	ldr	r0, [r3, #0]
 8028f94:	f100 4078 	add.w	r0, r0, #4160749568	; 0xf8000000
        flashFunRet = FM_Erase ((((uint32_t)SNVMA_NvmConfiguration[SNVMA_FlashInfo.NvmId].p_BankForWrite->p_StartAddr -
 8028f98:	0b40      	lsrs	r0, r0, #13
 8028f9a:	f7ff fd1f 	bl	80289dc <FM_Erase>
 8028f9e:	e039      	b.n	8029014 <SNVMA_FlashManagerCallback+0xd8>
        if (IsSameContent ((uint32_t *)&SNVMA_WriteBankHeader,
 8028fa0:	4290      	cmp	r0, r2
 8028fa2:	d1e9      	bne.n	8028f78 <SNVMA_FlashManagerCallback+0x3c>
  __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
 8028fa4:	f3ef 8310 	mrs	r3, PRIMASK
  __ASM volatile ("cpsid i" : : : "memory");
 8028fa8:	b672      	cpsid	i
          SNVMA_FlashInfo.FlashOpState = SNVMA_BUFFER_WRITE;
 8028faa:	2501      	movs	r5, #1
          buffCnt = 0x00;
 8028fac:	2700      	movs	r7, #0
 8028fae:	4a8a      	ldr	r2, [pc, #552]	; (80291d8 <SNVMA_FlashManagerCallback+0x29c>)
          SNVMA_FlashInfo.FlashOpState = SNVMA_BUFFER_WRITE;
 8028fb0:	70a5      	strb	r5, [r4, #2]
          buffCnt = 0x00;
 8028fb2:	7017      	strb	r7, [r2, #0]
  __ASM volatile ("MSR primask, %0" : : "r" (priMask) : "memory");
 8028fb4:	f383 8810 	msr	PRIMASK, r3
            SNVMA_NvmConfiguration[SNVMA_FlashInfo.NvmId].a_Buffers[SNVMA_FlashInfo.BufferId].p_Addr,
 8028fb8:	7862      	ldrb	r2, [r4, #1]
 8028fba:	7823      	ldrb	r3, [r4, #0]
            SNVMA_NvmConfiguration[SNVMA_FlashInfo.NvmId].a_Buffers[SNVMA_FlashInfo.BufferId].Size,
 8028fbc:	eb02 00c3 	add.w	r0, r2, r3, lsl #3
            SNVMA_NvmConfiguration[SNVMA_FlashInfo.NvmId].p_BankForWrite->ap_BufferAddr[SNVMA_FlashInfo.BufferId],
 8028fc0:	eb06 1383 	add.w	r3, r6, r3, lsl #6
          flashFunRet = FM_Write (
 8028fc4:	6899      	ldr	r1, [r3, #8]
            SNVMA_NvmConfiguration[SNVMA_FlashInfo.NvmId].a_Buffers[SNVMA_FlashInfo.BufferId].Size,
 8028fc6:	3004      	adds	r0, #4
 8028fc8:	eb06 0cc0 	add.w	ip, r6, r0, lsl #3
          flashFunRet = FM_Write (
 8028fcc:	eb01 0182 	add.w	r1, r1, r2, lsl #2
 8028fd0:	4b80      	ldr	r3, [pc, #512]	; (80291d4 <SNVMA_FlashManagerCallback+0x298>)
 8028fd2:	f8dc 2004 	ldr.w	r2, [ip, #4]
 8028fd6:	6849      	ldr	r1, [r1, #4]
 8028fd8:	f856 0030 	ldr.w	r0, [r6, r0, lsl #3]
 8028fdc:	f7ff fcc2 	bl	8028964 <FM_Write>
          if (flashFunRet == FM_ERROR)
 8028fe0:	2802      	cmp	r0, #2
 8028fe2:	d111      	bne.n	8029008 <SNVMA_FlashManagerCallback+0xcc>
            InvokeBufferCallback (SNVMA_FlashInfo.NvmId, SNVMA_OPERATION_FAILED);
 8028fe4:	4629      	mov	r1, r5
 8028fe6:	7820      	ldrb	r0, [r4, #0]
 8028fe8:	f7ff fe82 	bl	8028cf0 <InvokeBufferCallback>
  __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
 8028fec:	f3ef 8110 	mrs	r1, PRIMASK
  __ASM volatile ("cpsid i" : : : "memory");
 8028ff0:	b672      	cpsid	i
            SNVMA_IdBitmask &= ~(1u << SNVMA_FlashInfo.NvmId);
 8028ff2:	4a7a      	ldr	r2, [pc, #488]	; (80291dc <SNVMA_FlashManagerCallback+0x2a0>)
 8028ff4:	7823      	ldrb	r3, [r4, #0]
 8028ff6:	409d      	lsls	r5, r3
 8028ff8:	6813      	ldr	r3, [r2, #0]
 8028ffa:	ea23 0505 	bic.w	r5, r3, r5
            SNVMA_CommandPending = FALSE;
 8028ffe:	4b78      	ldr	r3, [pc, #480]	; (80291e0 <SNVMA_FlashManagerCallback+0x2a4>)
            SNVMA_IdBitmask &= ~(1u << SNVMA_FlashInfo.NvmId);
 8029000:	6015      	str	r5, [r2, #0]
            SNVMA_CommandPending = FALSE;
 8029002:	701f      	strb	r7, [r3, #0]
  __ASM volatile ("MSR primask, %0" : : "r" (priMask) : "memory");
 8029004:	f381 8810 	msr	PRIMASK, r1
}
 8029008:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
        flashFunRet = FM_Write ((uint32_t *)&SNVMA_WriteBankHeader,
 802900a:	2204      	movs	r2, #4
 802900c:	4b71      	ldr	r3, [pc, #452]	; (80291d4 <SNVMA_FlashManagerCallback+0x298>)
 802900e:	4870      	ldr	r0, [pc, #448]	; (80291d0 <SNVMA_FlashManagerCallback+0x294>)
          flashFunRet = FM_Write (
 8029010:	f7ff fca8 	bl	8028964 <FM_Write>
        if (flashFunRet == FM_ERROR)
 8029014:	2802      	cmp	r0, #2
 8029016:	d1f7      	bne.n	8029008 <SNVMA_FlashManagerCallback+0xcc>
 8029018:	e167      	b.n	80292ea <SNVMA_FlashManagerCallback+0x3ae>
      if (Status == FM_OPERATION_COMPLETE)
 802901a:	4d6c      	ldr	r5, [pc, #432]	; (80291cc <SNVMA_FlashManagerCallback+0x290>)
 802901c:	2800      	cmp	r0, #0
 802901e:	f040 80ff 	bne.w	8029220 <SNVMA_FlashManagerCallback+0x2e4>
  __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
 8029022:	f3ef 8710 	mrs	r7, PRIMASK
  __ASM volatile ("cpsid i" : : : "memory");
 8029026:	b672      	cpsid	i
 8029028:	496b      	ldr	r1, [pc, #428]	; (80291d8 <SNVMA_FlashManagerCallback+0x29c>)
        } while ((SNVMA_NvmConfiguration[SNVMA_FlashInfo.NvmId].a_Buffers[SNVMA_FlashInfo.BufferId].p_Addr == NULL) &&
 802902a:	7820      	ldrb	r0, [r4, #0]
 802902c:	7863      	ldrb	r3, [r4, #1]
 802902e:	780a      	ldrb	r2, [r1, #0]
 8029030:	00c0      	lsls	r0, r0, #3
          if (SNVMA_FlashInfo.BufferId < (SNVMA_MAX_NUMBER_BUFFER - 1))
 8029032:	2b02      	cmp	r3, #2
            SNVMA_FlashInfo.BufferId = 0x00;
 8029034:	bf8e      	itee	hi
 8029036:	2300      	movhi	r3, #0
            SNVMA_FlashInfo.BufferId++;
 8029038:	3301      	addls	r3, #1
 802903a:	b2db      	uxtbls	r3, r3
        } while ((SNVMA_NvmConfiguration[SNVMA_FlashInfo.NvmId].a_Buffers[SNVMA_FlashInfo.BufferId].p_Addr == NULL) &&
 802903c:	18c6      	adds	r6, r0, r3
 802903e:	3604      	adds	r6, #4
                 (buffCnt < SNVMA_MAX_NUMBER_BUFFER));
 8029040:	f855 6036 	ldr.w	r6, [r5, r6, lsl #3]
          buffCnt++;
 8029044:	3201      	adds	r2, #1
 8029046:	b2d2      	uxtb	r2, r2
                 (buffCnt < SNVMA_MAX_NUMBER_BUFFER));
 8029048:	b90e      	cbnz	r6, 802904e <SNVMA_FlashManagerCallback+0x112>
        } while ((SNVMA_NvmConfiguration[SNVMA_FlashInfo.NvmId].a_Buffers[SNVMA_FlashInfo.BufferId].p_Addr == NULL) &&
 802904a:	2a03      	cmp	r2, #3
 802904c:	d9f1      	bls.n	8029032 <SNVMA_FlashManagerCallback+0xf6>
 802904e:	7063      	strb	r3, [r4, #1]
 8029050:	700a      	strb	r2, [r1, #0]
  __ASM volatile ("MSR primask, %0" : : "r" (priMask) : "memory");
 8029052:	f387 8810 	msr	PRIMASK, r7
        if (buffCnt < SNVMA_MAX_NUMBER_BUFFER)
 8029056:	780b      	ldrb	r3, [r1, #0]
 8029058:	2b03      	cmp	r3, #3
            SNVMA_NvmConfiguration[SNVMA_FlashInfo.NvmId].a_Buffers[SNVMA_FlashInfo.BufferId].p_Addr,
 802905a:	7823      	ldrb	r3, [r4, #0]
        if (buffCnt < SNVMA_MAX_NUMBER_BUFFER)
 802905c:	d810      	bhi.n	8029080 <SNVMA_FlashManagerCallback+0x144>
            SNVMA_NvmConfiguration[SNVMA_FlashInfo.NvmId].a_Buffers[SNVMA_FlashInfo.BufferId].p_Addr,
 802905e:	7862      	ldrb	r2, [r4, #1]
            SNVMA_NvmConfiguration[SNVMA_FlashInfo.NvmId].a_Buffers[SNVMA_FlashInfo.BufferId].Size,
 8029060:	eb02 00c3 	add.w	r0, r2, r3, lsl #3
            SNVMA_NvmConfiguration[SNVMA_FlashInfo.NvmId].p_BankForWrite->ap_BufferAddr[SNVMA_FlashInfo.BufferId],
 8029064:	eb05 1383 	add.w	r3, r5, r3, lsl #6
          flashFunRet = FM_Write (
 8029068:	6899      	ldr	r1, [r3, #8]
            SNVMA_NvmConfiguration[SNVMA_FlashInfo.NvmId].a_Buffers[SNVMA_FlashInfo.BufferId].Size,
 802906a:	3004      	adds	r0, #4
 802906c:	eb05 06c0 	add.w	r6, r5, r0, lsl #3
          flashFunRet = FM_Write (
 8029070:	eb01 0182 	add.w	r1, r1, r2, lsl #2
 8029074:	4b57      	ldr	r3, [pc, #348]	; (80291d4 <SNVMA_FlashManagerCallback+0x298>)
 8029076:	6872      	ldr	r2, [r6, #4]
 8029078:	6849      	ldr	r1, [r1, #4]
 802907a:	f855 0030 	ldr.w	r0, [r5, r0, lsl #3]
 802907e:	e7c7      	b.n	8029010 <SNVMA_FlashManagerCallback+0xd4>
          if (IsCrcOk (SNVMA_NvmConfiguration[SNVMA_FlashInfo.NvmId].p_BankForWrite->p_StartAddr) == FALSE)
 8029080:	eb05 1383 	add.w	r3, r5, r3, lsl #6
 8029084:	689b      	ldr	r3, [r3, #8]
 8029086:	6818      	ldr	r0, [r3, #0]
 8029088:	f7ff fe6a 	bl	8028d60 <IsCrcOk>
 802908c:	4606      	mov	r6, r0
 802908e:	bb48      	cbnz	r0, 80290e4 <SNVMA_FlashManagerCallback+0x1a8>
  __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
 8029090:	f3ef 8310 	mrs	r3, PRIMASK
  __ASM volatile ("cpsid i" : : : "memory");
 8029094:	b672      	cpsid	i
            SNVMA_FlashInfo.FlashOpState = SNVMA_RETRY_WRITE;
 8029096:	2203      	movs	r2, #3
 8029098:	70a2      	strb	r2, [r4, #2]
  __ASM volatile ("MSR primask, %0" : : "r" (priMask) : "memory");
 802909a:	f383 8810 	msr	PRIMASK, r3
                                      SNVMA_NvmConfiguration[SNVMA_FlashInfo.NvmId].p_BankForWrite->p_StartAddr -
 802909e:	7823      	ldrb	r3, [r4, #0]
            flashFunRet = FM_Erase ((((uint32_t)
 80290a0:	4a4c      	ldr	r2, [pc, #304]	; (80291d4 <SNVMA_FlashManagerCallback+0x298>)
                                      SNVMA_NvmConfiguration[SNVMA_FlashInfo.NvmId].BankSize,
 80290a2:	eb05 1583 	add.w	r5, r5, r3, lsl #6
                                      SNVMA_NvmConfiguration[SNVMA_FlashInfo.NvmId].p_BankForWrite->p_StartAddr -
 80290a6:	68ab      	ldr	r3, [r5, #8]
            flashFunRet = FM_Erase ((((uint32_t)
 80290a8:	7869      	ldrb	r1, [r5, #1]
                                      SNVMA_NvmConfiguration[SNVMA_FlashInfo.NvmId].p_BankForWrite->p_StartAddr -
 80290aa:	6818      	ldr	r0, [r3, #0]
 80290ac:	f100 4078 	add.w	r0, r0, #4160749568	; 0xf8000000
            flashFunRet = FM_Erase ((((uint32_t)
 80290b0:	0b40      	lsrs	r0, r0, #13
 80290b2:	f7ff fc93 	bl	80289dc <FM_Erase>
            if (flashFunRet == FM_ERROR)
 80290b6:	2802      	cmp	r0, #2
 80290b8:	d1a6      	bne.n	8029008 <SNVMA_FlashManagerCallback+0xcc>
              InvokeBufferCallback (SNVMA_FlashInfo.NvmId, SNVMA_OPERATION_FAILED);
 80290ba:	2101      	movs	r1, #1
 80290bc:	7820      	ldrb	r0, [r4, #0]
 80290be:	f7ff fe17 	bl	8028cf0 <InvokeBufferCallback>
  __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
 80290c2:	f3ef 8010 	mrs	r0, PRIMASK
  __ASM volatile ("cpsid i" : : : "memory");
 80290c6:	b672      	cpsid	i
              SNVMA_IdBitmask &= ~(1u << SNVMA_FlashInfo.NvmId);
 80290c8:	2301      	movs	r3, #1
 80290ca:	4944      	ldr	r1, [pc, #272]	; (80291dc <SNVMA_FlashManagerCallback+0x2a0>)
 80290cc:	7822      	ldrb	r2, [r4, #0]
 80290ce:	fa03 f202 	lsl.w	r2, r3, r2
 80290d2:	680b      	ldr	r3, [r1, #0]
 80290d4:	ea23 0302 	bic.w	r3, r3, r2
 80290d8:	600b      	str	r3, [r1, #0]
              SNVMA_CommandPending = FALSE;
 80290da:	4b41      	ldr	r3, [pc, #260]	; (80291e0 <SNVMA_FlashManagerCallback+0x2a4>)
 80290dc:	701e      	strb	r6, [r3, #0]
  __ASM volatile ("MSR primask, %0" : : "r" (priMask) : "memory");
 80290de:	f380 8810 	msr	PRIMASK, r0
}
 80290e2:	e791      	b.n	8029008 <SNVMA_FlashManagerCallback+0xcc>
  __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
 80290e4:	f3ef 8c10 	mrs	ip, PRIMASK
  __ASM volatile ("cpsid i" : : : "memory");
 80290e8:	b672      	cpsid	i
                  p_BankList[(SNVMA_NvmConfiguration[SNVMA_FlashInfo.NvmId].BankNumber - 1)])
 80290ea:	2714      	movs	r7, #20
            tmpBank = SNVMA_NvmConfiguration[SNVMA_FlashInfo.NvmId].p_BankForRestore;
 80290ec:	7823      	ldrb	r3, [r4, #0]
 80290ee:	4e3d      	ldr	r6, [pc, #244]	; (80291e4 <SNVMA_FlashManagerCallback+0x2a8>)
 80290f0:	0198      	lsls	r0, r3, #6
 80290f2:	eb05 1383 	add.w	r3, r5, r3, lsl #6
 80290f6:	68da      	ldr	r2, [r3, #12]
                &SNVMA_NvmConfiguration[SNVMA_FlashInfo.NvmId].
 80290f8:	6859      	ldr	r1, [r3, #4]
            tmpBank = SNVMA_NvmConfiguration[SNVMA_FlashInfo.NvmId].p_BankForRestore;
 80290fa:	6032      	str	r2, [r6, #0]
              SNVMA_NvmConfiguration[SNVMA_FlashInfo.NvmId].p_BankForWrite;
 80290fc:	689a      	ldr	r2, [r3, #8]
            SNVMA_NvmConfiguration[SNVMA_FlashInfo.NvmId].p_BankForRestore =
 80290fe:	60da      	str	r2, [r3, #12]
                  p_BankList[(SNVMA_NvmConfiguration[SNVMA_FlashInfo.NvmId].BankNumber - 1)])
 8029100:	5c2b      	ldrb	r3, [r5, r0]
 8029102:	4428      	add	r0, r5
 8029104:	fb07 1303 	mla	r3, r7, r3, r1
                &SNVMA_NvmConfiguration[SNVMA_FlashInfo.NvmId].
 8029108:	3b14      	subs	r3, #20
            if (SNVMA_NvmConfiguration[SNVMA_FlashInfo.NvmId].p_BankForWrite ==
 802910a:	429a      	cmp	r2, r3
            SNVMA_FlashInfo.BufferId = 0x00;
 802910c:	f04f 0301 	mov.w	r3, #1
              SNVMA_NvmConfiguration[SNVMA_FlashInfo.NvmId].p_BankForWrite++;
 8029110:	bf18      	it	ne
 8029112:	19d1      	addne	r1, r2, r7
 8029114:	6081      	str	r1, [r0, #8]
              if (SNVMA_NvmConfiguration[SNVMA_FlashInfo.NvmId].p_BankForRestore->ap_BufferAddr[cnt] != NULL)
 8029116:	f852 0023 	ldr.w	r0, [r2, r3, lsl #2]
 802911a:	b128      	cbz	r0, 8029128 <SNVMA_FlashManagerCallback+0x1ec>
                  SNVMA_NvmConfiguration[SNVMA_FlashInfo.NvmId].p_BankForRestore->ap_BufferAddr[cnt] -
 802911c:	6817      	ldr	r7, [r2, #0]
 802911e:	1bc0      	subs	r0, r0, r7
                  SNVMA_NvmConfiguration[SNVMA_FlashInfo.NvmId].p_BankForRestore->p_StartAddr +
 8029120:	680f      	ldr	r7, [r1, #0]
 8029122:	4438      	add	r0, r7
                SNVMA_NvmConfiguration[SNVMA_FlashInfo.NvmId].p_BankForWrite->ap_BufferAddr[cnt] =
 8029124:	f841 0023 	str.w	r0, [r1, r3, lsl #2]
            for (uint8_t cnt = 0x00;
 8029128:	3301      	adds	r3, #1
 802912a:	2b05      	cmp	r3, #5
 802912c:	d1f3      	bne.n	8029116 <SNVMA_FlashManagerCallback+0x1da>
  __ASM volatile ("MSR primask, %0" : : "r" (priMask) : "memory");
 802912e:	f38c 8810 	msr	PRIMASK, ip
            if (tmpBank != NULL)
 8029132:	6831      	ldr	r1, [r6, #0]
 8029134:	b181      	cbz	r1, 8029158 <SNVMA_FlashManagerCallback+0x21c>
  __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
 8029136:	f3ef 8310 	mrs	r3, PRIMASK
  __ASM volatile ("cpsid i" : : : "memory");
 802913a:	b672      	cpsid	i
              SNVMA_FlashInfo.FlashOpState = SNVMA_ERASE_BANK;
 802913c:	2202      	movs	r2, #2
 802913e:	70a2      	strb	r2, [r4, #2]
  __ASM volatile ("MSR primask, %0" : : "r" (priMask) : "memory");
 8029140:	f383 8810 	msr	PRIMASK, r3
                                                  SNVMA_NvmConfiguration[SNVMA_FlashInfo.NvmId].BankSize,
 8029144:	7823      	ldrb	r3, [r4, #0]
 8029146:	eb05 1583 	add.w	r5, r5, r3, lsl #6
              flashFunRet = FM_Erase ((((uint32_t)tmpBank->p_StartAddr - FLASH_BASE_NS) / FLASH_PAGE_SIZE),
 802914a:	6833      	ldr	r3, [r6, #0]
 802914c:	6818      	ldr	r0, [r3, #0]
 802914e:	f100 4078 	add.w	r0, r0, #4160749568	; 0xf8000000
        flashFunRet = FM_Erase ((((uint32_t)SNVMA_NvmConfiguration[SNVMA_FlashInfo.NvmId].p_BankForWrite->p_StartAddr -
 8029152:	4a20      	ldr	r2, [pc, #128]	; (80291d4 <SNVMA_FlashManagerCallback+0x298>)
 8029154:	7869      	ldrb	r1, [r5, #1]
 8029156:	e71f      	b.n	8028f98 <SNVMA_FlashManagerCallback+0x5c>
              InvokeBufferCallback (SNVMA_FlashInfo.NvmId, SNVMA_OPERATION_COMPLETE);
 8029158:	7820      	ldrb	r0, [r4, #0]
 802915a:	f7ff fdc9 	bl	8028cf0 <InvokeBufferCallback>
              if (SNVMA_NvmConfiguration[SNVMA_FlashInfo.NvmId].PendingBufferWriteOp == 0x00)
 802915e:	7823      	ldrb	r3, [r4, #0]
 8029160:	4e1e      	ldr	r6, [pc, #120]	; (80291dc <SNVMA_FlashManagerCallback+0x2a0>)
 8029162:	eb05 1383 	add.w	r3, r5, r3, lsl #6
 8029166:	789b      	ldrb	r3, [r3, #2]
 8029168:	b963      	cbnz	r3, 8029184 <SNVMA_FlashManagerCallback+0x248>
  __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
 802916a:	f3ef 8110 	mrs	r1, PRIMASK
  __ASM volatile ("cpsid i" : : : "memory");
 802916e:	b672      	cpsid	i
                SNVMA_IdBitmask &= ~(1u << SNVMA_FlashInfo.NvmId);
 8029170:	2301      	movs	r3, #1
 8029172:	7822      	ldrb	r2, [r4, #0]
 8029174:	fa03 f202 	lsl.w	r2, r3, r2
 8029178:	6833      	ldr	r3, [r6, #0]
 802917a:	ea23 0302 	bic.w	r3, r3, r2
 802917e:	6033      	str	r3, [r6, #0]
  __ASM volatile ("MSR primask, %0" : : "r" (priMask) : "memory");
 8029180:	f381 8810 	msr	PRIMASK, r1
              if (SNVMA_IdBitmask != 0x00000000)
 8029184:	6832      	ldr	r2, [r6, #0]
 8029186:	2a00      	cmp	r2, #0
 8029188:	f000 8087 	beq.w	802929a <SNVMA_FlashManagerCallback+0x35e>
 802918c:	2300      	movs	r3, #0
                  if ((SNVMA_IdBitmask & (1u << cnt)) != 0x00)
 802918e:	2101      	movs	r1, #1
 8029190:	fa01 f703 	lsl.w	r7, r1, r3
 8029194:	4217      	tst	r7, r2
 8029196:	b2d8      	uxtb	r0, r3
 8029198:	d026      	beq.n	80291e8 <SNVMA_FlashManagerCallback+0x2ac>
  __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
 802919a:	f3ef 8110 	mrs	r1, PRIMASK
  __ASM volatile ("cpsid i" : : : "memory");
 802919e:	b672      	cpsid	i
                    SNVMA_FlashInfo.FlashOpState = SNVMA_HEADER_WRITE;
 80291a0:	2200      	movs	r2, #0
                      if ((SNVMA_NvmConfiguration[SNVMA_FlashInfo.NvmId].PendingBufferWriteOp & (1u << idx)) != 0x00)
 80291a2:	eb05 1383 	add.w	r3, r5, r3, lsl #6
                    SNVMA_FlashInfo.NvmId = cnt;
 80291a6:	7020      	strb	r0, [r4, #0]
                      if ((SNVMA_NvmConfiguration[SNVMA_FlashInfo.NvmId].PendingBufferWriteOp & (1u << idx)) != 0x00)
 80291a8:	7898      	ldrb	r0, [r3, #2]
 80291aa:	4613      	mov	r3, r2
                    SNVMA_FlashInfo.FlashOpState = SNVMA_HEADER_WRITE;
 80291ac:	70a2      	strb	r2, [r4, #2]
                      if ((SNVMA_NvmConfiguration[SNVMA_FlashInfo.NvmId].PendingBufferWriteOp & (1u << idx)) != 0x00)
 80291ae:	fa20 f703 	lsr.w	r7, r0, r3
 80291b2:	07ff      	lsls	r7, r7, #31
 80291b4:	b2da      	uxtb	r2, r3
 80291b6:	d501      	bpl.n	80291bc <SNVMA_FlashManagerCallback+0x280>
                  SNVMA_FlashInfo.BufferId = idx;
 80291b8:	7062      	strb	r2, [r4, #1]
                  break;
 80291ba:	e002      	b.n	80291c2 <SNVMA_FlashManagerCallback+0x286>
                    for (uint8_t idx = 0x00;
 80291bc:	3301      	adds	r3, #1
 80291be:	2b04      	cmp	r3, #4
 80291c0:	d1f5      	bne.n	80291ae <SNVMA_FlashManagerCallback+0x272>
  __ASM volatile ("MSR primask, %0" : : "r" (priMask) : "memory");
 80291c2:	f381 8810 	msr	PRIMASK, r1
}
 80291c6:	e012      	b.n	80291ee <SNVMA_FlashManagerCallback+0x2b2>
 80291c8:	20009020 	.word	0x20009020
 80291cc:	20000478 	.word	0x20000478
 80291d0:	20009030 	.word	0x20009030
 80291d4:	20009014 	.word	0x20009014
 80291d8:	20009040 	.word	0x20009040
 80291dc:	20009024 	.word	0x20009024
 80291e0:	20008fec 	.word	0x20008fec
 80291e4:	20009044 	.word	0x20009044
                for (uint8_t cnt = 0x00;
 80291e8:	3301      	adds	r3, #1
 80291ea:	2b20      	cmp	r3, #32
 80291ec:	d1d0      	bne.n	8029190 <SNVMA_FlashManagerCallback+0x254>
                flashFunRet = StartFlashWrite (SNVMA_FlashInfo.NvmId);
 80291ee:	7820      	ldrb	r0, [r4, #0]
 80291f0:	f7ff fe08 	bl	8028e04 <StartFlashWrite>
                if (flashFunRet == FM_ERROR)
 80291f4:	2802      	cmp	r0, #2
 80291f6:	f040 8090 	bne.w	802931a <SNVMA_FlashManagerCallback+0x3de>
                  InvokeBufferCallback (SNVMA_FlashInfo.NvmId, SNVMA_OPERATION_FAILED);
 80291fa:	2101      	movs	r1, #1
 80291fc:	7820      	ldrb	r0, [r4, #0]
 80291fe:	f7ff fd77 	bl	8028cf0 <InvokeBufferCallback>
  __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
 8029202:	f3ef 8110 	mrs	r1, PRIMASK
  __ASM volatile ("cpsid i" : : : "memory");
 8029206:	b672      	cpsid	i
                  SNVMA_IdBitmask &= ~(1u << SNVMA_FlashInfo.NvmId);
 8029208:	2301      	movs	r3, #1
 802920a:	7822      	ldrb	r2, [r4, #0]
 802920c:	fa03 f202 	lsl.w	r2, r3, r2
 8029210:	6833      	ldr	r3, [r6, #0]
 8029212:	ea23 0302 	bic.w	r3, r3, r2
                  SNVMA_CommandPending = FALSE;
 8029216:	2200      	movs	r2, #0
                  SNVMA_IdBitmask &= ~(1u << SNVMA_FlashInfo.NvmId);
 8029218:	6033      	str	r3, [r6, #0]
                  SNVMA_CommandPending = FALSE;
 802921a:	4b4a      	ldr	r3, [pc, #296]	; (8029344 <SNVMA_FlashManagerCallback+0x408>)
 802921c:	701a      	strb	r2, [r3, #0]
 802921e:	e6f1      	b.n	8029004 <SNVMA_FlashManagerCallback+0xc8>
          SNVMA_NvmConfiguration[SNVMA_FlashInfo.NvmId].a_Buffers[SNVMA_FlashInfo.BufferId].p_Addr,
 8029220:	7823      	ldrb	r3, [r4, #0]
 8029222:	e71c      	b.n	802905e <SNVMA_FlashManagerCallback+0x122>
                           (uint32_t *)SNVMA_NvmConfiguration[SNVMA_FlashInfo.NvmId].p_BankForWrite->p_StartAddr,
 8029224:	7823      	ldrb	r3, [r4, #0]
 8029226:	4d48      	ldr	r5, [pc, #288]	; (8029348 <SNVMA_FlashManagerCallback+0x40c>)
      if (Status == FM_OPERATION_COMPLETE)
 8029228:	2800      	cmp	r0, #0
 802922a:	d13e      	bne.n	80292aa <SNVMA_FlashManagerCallback+0x36e>
        InvokeBufferCallback (SNVMA_FlashInfo.NvmId, SNVMA_OPERATION_COMPLETE);
 802922c:	4601      	mov	r1, r0
 802922e:	4618      	mov	r0, r3
 8029230:	f7ff fd5e 	bl	8028cf0 <InvokeBufferCallback>
        if (SNVMA_NvmConfiguration[SNVMA_FlashInfo.NvmId].PendingBufferWriteOp == 0x00)
 8029234:	7823      	ldrb	r3, [r4, #0]
 8029236:	4e45      	ldr	r6, [pc, #276]	; (802934c <SNVMA_FlashManagerCallback+0x410>)
 8029238:	eb05 1383 	add.w	r3, r5, r3, lsl #6
 802923c:	789b      	ldrb	r3, [r3, #2]
 802923e:	b963      	cbnz	r3, 802925a <SNVMA_FlashManagerCallback+0x31e>
  __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
 8029240:	f3ef 8110 	mrs	r1, PRIMASK
  __ASM volatile ("cpsid i" : : : "memory");
 8029244:	b672      	cpsid	i
          SNVMA_IdBitmask &= ~(1u << SNVMA_FlashInfo.NvmId);
 8029246:	2301      	movs	r3, #1
 8029248:	7822      	ldrb	r2, [r4, #0]
 802924a:	fa03 f202 	lsl.w	r2, r3, r2
 802924e:	6833      	ldr	r3, [r6, #0]
 8029250:	ea23 0302 	bic.w	r3, r3, r2
 8029254:	6033      	str	r3, [r6, #0]
  __ASM volatile ("MSR primask, %0" : : "r" (priMask) : "memory");
 8029256:	f381 8810 	msr	PRIMASK, r1
        if (SNVMA_IdBitmask != 0x00000000)
 802925a:	6832      	ldr	r2, [r6, #0]
 802925c:	b1ea      	cbz	r2, 802929a <SNVMA_FlashManagerCallback+0x35e>
 802925e:	2300      	movs	r3, #0
            if ((SNVMA_IdBitmask & (1u << cnt)) != 0x00)
 8029260:	2101      	movs	r1, #1
 8029262:	fa01 f703 	lsl.w	r7, r1, r3
 8029266:	4217      	tst	r7, r2
 8029268:	b2d8      	uxtb	r0, r3
 802926a:	d012      	beq.n	8029292 <SNVMA_FlashManagerCallback+0x356>
  __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
 802926c:	f3ef 8110 	mrs	r1, PRIMASK
  __ASM volatile ("cpsid i" : : : "memory");
 8029270:	b672      	cpsid	i
              SNVMA_FlashInfo.FlashOpState = SNVMA_HEADER_WRITE;
 8029272:	2200      	movs	r2, #0
                if ((SNVMA_NvmConfiguration[SNVMA_FlashInfo.NvmId].PendingBufferWriteOp & (1u << idx)) != 0x00)
 8029274:	eb05 1383 	add.w	r3, r5, r3, lsl #6
              SNVMA_FlashInfo.NvmId = cnt;
 8029278:	7020      	strb	r0, [r4, #0]
                if ((SNVMA_NvmConfiguration[SNVMA_FlashInfo.NvmId].PendingBufferWriteOp & (1u << idx)) != 0x00)
 802927a:	7898      	ldrb	r0, [r3, #2]
 802927c:	4613      	mov	r3, r2
              SNVMA_FlashInfo.FlashOpState = SNVMA_HEADER_WRITE;
 802927e:	70a2      	strb	r2, [r4, #2]
                if ((SNVMA_NvmConfiguration[SNVMA_FlashInfo.NvmId].PendingBufferWriteOp & (1u << idx)) != 0x00)
 8029280:	fa20 f703 	lsr.w	r7, r0, r3
 8029284:	07ff      	lsls	r7, r7, #31
 8029286:	b2da      	uxtb	r2, r3
 8029288:	d496      	bmi.n	80291b8 <SNVMA_FlashManagerCallback+0x27c>
              for (uint8_t idx = 0x00;
 802928a:	3301      	adds	r3, #1
 802928c:	2b04      	cmp	r3, #4
 802928e:	d1f7      	bne.n	8029280 <SNVMA_FlashManagerCallback+0x344>
 8029290:	e797      	b.n	80291c2 <SNVMA_FlashManagerCallback+0x286>
          for (uint8_t cnt = 0x00;
 8029292:	3301      	adds	r3, #1
 8029294:	2b20      	cmp	r3, #32
 8029296:	d1e4      	bne.n	8029262 <SNVMA_FlashManagerCallback+0x326>
 8029298:	e7a9      	b.n	80291ee <SNVMA_FlashManagerCallback+0x2b2>
  __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
 802929a:	f3ef 8310 	mrs	r3, PRIMASK
  __ASM volatile ("cpsid i" : : : "memory");
 802929e:	b672      	cpsid	i
          SNVMA_CommandPending = FALSE;
 80292a0:	4928      	ldr	r1, [pc, #160]	; (8029344 <SNVMA_FlashManagerCallback+0x408>)
 80292a2:	700a      	strb	r2, [r1, #0]
  __ASM volatile ("MSR primask, %0" : : "r" (priMask) : "memory");
 80292a4:	f383 8810 	msr	PRIMASK, r3
}
 80292a8:	e6ae      	b.n	8029008 <SNVMA_FlashManagerCallback+0xcc>
                                            SNVMA_NvmConfiguration[SNVMA_FlashInfo.NvmId].BankSize,
 80292aa:	eb05 1583 	add.w	r5, r5, r3, lsl #6
        flashFunRet = FM_Erase ((((uint32_t)tmpBank->p_StartAddr - FLASH_PAGE_SIZE) / FLASH_PAGE_SIZE),
 80292ae:	4b28      	ldr	r3, [pc, #160]	; (8029350 <SNVMA_FlashManagerCallback+0x414>)
 80292b0:	681b      	ldr	r3, [r3, #0]
        flashFunRet = FM_Erase ((((uint32_t)SNVMA_NvmConfiguration[SNVMA_FlashInfo.NvmId].p_BankForWrite->p_StartAddr -
 80292b2:	6818      	ldr	r0, [r3, #0]
 80292b4:	f5a0 5000 	sub.w	r0, r0, #8192	; 0x2000
 80292b8:	e74b      	b.n	8029152 <SNVMA_FlashManagerCallback+0x216>
      if (Status == FM_OPERATION_COMPLETE)
 80292ba:	4d23      	ldr	r5, [pc, #140]	; (8029348 <SNVMA_FlashManagerCallback+0x40c>)
 80292bc:	2800      	cmp	r0, #0
 80292be:	d13b      	bne.n	8029338 <SNVMA_FlashManagerCallback+0x3fc>
  __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
 80292c0:	f3ef 8210 	mrs	r2, PRIMASK
  __ASM volatile ("cpsid i" : : : "memory");
 80292c4:	b672      	cpsid	i
          if ((SNVMA_NvmConfiguration[SNVMA_FlashInfo.NvmId].PendingBufferWriteOp & (1u << idx)) != 0x00)
 80292c6:	7823      	ldrb	r3, [r4, #0]
        SNVMA_FlashInfo.FlashOpState = SNVMA_HEADER_WRITE;
 80292c8:	70a0      	strb	r0, [r4, #2]
          if ((SNVMA_NvmConfiguration[SNVMA_FlashInfo.NvmId].PendingBufferWriteOp & (1u << idx)) != 0x00)
 80292ca:	eb05 1383 	add.w	r3, r5, r3, lsl #6
 80292ce:	789b      	ldrb	r3, [r3, #2]
 80292d0:	fa23 f600 	lsr.w	r6, r3, r0
 80292d4:	07f6      	lsls	r6, r6, #31
 80292d6:	b2c1      	uxtb	r1, r0
 80292d8:	d51b      	bpl.n	8029312 <SNVMA_FlashManagerCallback+0x3d6>
            SNVMA_FlashInfo.BufferId = idx;
 80292da:	7061      	strb	r1, [r4, #1]
  __ASM volatile ("MSR primask, %0" : : "r" (priMask) : "memory");
 80292dc:	f382 8810 	msr	PRIMASK, r2
        flashFunRet = StartFlashWrite (SNVMA_FlashInfo.NvmId);
 80292e0:	7820      	ldrb	r0, [r4, #0]
 80292e2:	f7ff fd8f 	bl	8028e04 <StartFlashWrite>
        if (flashFunRet == FM_ERROR)
 80292e6:	2802      	cmp	r0, #2
 80292e8:	d117      	bne.n	802931a <SNVMA_FlashManagerCallback+0x3de>
          InvokeBufferCallback (SNVMA_FlashInfo.NvmId, SNVMA_OPERATION_FAILED);
 80292ea:	2101      	movs	r1, #1
 80292ec:	7820      	ldrb	r0, [r4, #0]
 80292ee:	f7ff fcff 	bl	8028cf0 <InvokeBufferCallback>
  __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
 80292f2:	f3ef 8010 	mrs	r0, PRIMASK
  __ASM volatile ("cpsid i" : : : "memory");
 80292f6:	b672      	cpsid	i
          SNVMA_IdBitmask &= ~(1u << SNVMA_FlashInfo.NvmId);
 80292f8:	2301      	movs	r3, #1
 80292fa:	4914      	ldr	r1, [pc, #80]	; (802934c <SNVMA_FlashManagerCallback+0x410>)
 80292fc:	7822      	ldrb	r2, [r4, #0]
 80292fe:	fa03 f202 	lsl.w	r2, r3, r2
 8029302:	680b      	ldr	r3, [r1, #0]
 8029304:	ea23 0302 	bic.w	r3, r3, r2
          SNVMA_CommandPending = FALSE;
 8029308:	2200      	movs	r2, #0
          SNVMA_IdBitmask &= ~(1u << SNVMA_FlashInfo.NvmId);
 802930a:	600b      	str	r3, [r1, #0]
          SNVMA_CommandPending = FALSE;
 802930c:	4b0d      	ldr	r3, [pc, #52]	; (8029344 <SNVMA_FlashManagerCallback+0x408>)
 802930e:	701a      	strb	r2, [r3, #0]
 8029310:	e6e5      	b.n	80290de <SNVMA_FlashManagerCallback+0x1a2>
        for (uint8_t idx = 0x00;
 8029312:	3001      	adds	r0, #1
 8029314:	2804      	cmp	r0, #4
 8029316:	d1db      	bne.n	80292d0 <SNVMA_FlashManagerCallback+0x394>
 8029318:	e7e0      	b.n	80292dc <SNVMA_FlashManagerCallback+0x3a0>
  __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
 802931a:	f3ef 8210 	mrs	r2, PRIMASK
  __ASM volatile ("cpsid i" : : : "memory");
 802931e:	b672      	cpsid	i
          SNVMA_NvmConfiguration[SNVMA_FlashInfo.NvmId].PendingBufferWriteOp |=
 8029320:	7823      	ldrb	r3, [r4, #0]
 8029322:	eb05 1583 	add.w	r5, r5, r3, lsl #6
 8029326:	78ab      	ldrb	r3, [r5, #2]
 8029328:	ea43 1303 	orr.w	r3, r3, r3, lsl #4
          SNVMA_NvmConfiguration[SNVMA_FlashInfo.NvmId].PendingBufferWriteOp &= 0xF0;
 802932c:	f023 030f 	bic.w	r3, r3, #15
 8029330:	70ab      	strb	r3, [r5, #2]
  __ASM volatile ("MSR primask, %0" : : "r" (priMask) : "memory");
 8029332:	f382 8810 	msr	PRIMASK, r2
}
 8029336:	e667      	b.n	8029008 <SNVMA_FlashManagerCallback+0xcc>
        flashFunRet = FM_Erase ((((uint32_t)SNVMA_NvmConfiguration[SNVMA_FlashInfo.NvmId].p_BankForWrite->p_StartAddr -
 8029338:	7823      	ldrb	r3, [r4, #0]
                                            SNVMA_NvmConfiguration[SNVMA_FlashInfo.NvmId].BankSize,
 802933a:	eb05 1583 	add.w	r5, r5, r3, lsl #6
        flashFunRet = FM_Erase ((((uint32_t)SNVMA_NvmConfiguration[SNVMA_FlashInfo.NvmId].p_BankForWrite->p_StartAddr -
 802933e:	68ab      	ldr	r3, [r5, #8]
 8029340:	e7b7      	b.n	80292b2 <SNVMA_FlashManagerCallback+0x376>
 8029342:	bf00      	nop
 8029344:	20008fec 	.word	0x20008fec
 8029348:	20000478 	.word	0x20000478
 802934c:	20009024 	.word	0x20009024
 8029350:	20009044 	.word	0x20009044

08029354 <SNVMA_Init>:
{
 8029354:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  if (SNVMA_ModuleInit == TRUE)
 8029358:	4b70      	ldr	r3, [pc, #448]	; (802951c <SNVMA_Init+0x1c8>)
{
 802935a:	4606      	mov	r6, r0
  if (SNVMA_ModuleInit == TRUE)
 802935c:	781b      	ldrb	r3, [r3, #0]
{
 802935e:	b085      	sub	sp, #20
  if (SNVMA_ModuleInit == TRUE)
 8029360:	2b01      	cmp	r3, #1
 8029362:	f000 80d0 	beq.w	8029506 <SNVMA_Init+0x1b2>
  else if (p_NvmStartAddress == NULL)
 8029366:	2800      	cmp	r0, #0
 8029368:	f000 80cf 	beq.w	802950a <SNVMA_Init+0x1b6>
  else if (((uint32_t)p_NvmStartAddress & SNVMA_MASK_ALIGNMENT_128) != 0x00000000)
 802936c:	f010 070f 	ands.w	r7, r0, #15
 8029370:	f040 80cd 	bne.w	802950e <SNVMA_Init+0x1ba>
  else if ((SNVMA_NUMBER_OF_SECTOR_NEEDED > FLASH_PAGE_NB) ||
 8029374:	f64f 71fd 	movw	r1, #65533	; 0xfffd
 8029378:	4b69      	ldr	r3, [pc, #420]	; (8029520 <SNVMA_Init+0x1cc>)
 802937a:	f8b3 30a0 	ldrh.w	r3, [r3, #160]	; 0xa0
 802937e:	1e5a      	subs	r2, r3, #1
 8029380:	b292      	uxth	r2, r2
 8029382:	428a      	cmp	r2, r1
 8029384:	d804      	bhi.n	8029390 <SNVMA_Init+0x3c>
 8029386:	0299      	lsls	r1, r3, #10
 8029388:	f5b1 4f80 	cmp.w	r1, #16384	; 0x4000
 802938c:	f0c0 80c1 	bcc.w	8029512 <SNVMA_Init+0x1be>
            (FLASH_BASE_NS + FLASH_SIZE)))
 8029390:	f64f 70fd 	movw	r0, #65533	; 0xfffd
 8029394:	4282      	cmp	r2, r0
 8029396:	bf8c      	ite	hi
 8029398:	f04f 6301 	movhi.w	r3, #135266304	; 0x8100000
 802939c:	029b      	lslls	r3, r3, #10
           ((uint32_t)p_NvmStartAddress + (SNVMA_NUMBER_OF_SECTOR_NEEDED * FLASH_PAGE_SIZE) >
 802939e:	f506 4180 	add.w	r1, r6, #16384	; 0x4000
            (FLASH_BASE_NS + FLASH_SIZE)))
 80293a2:	bf98      	it	ls
 80293a4:	f103 6300 	addls.w	r3, r3, #134217728	; 0x8000000
  else if ((SNVMA_NUMBER_OF_SECTOR_NEEDED > FLASH_PAGE_NB) ||
 80293a8:	4299      	cmp	r1, r3
 80293aa:	f200 80b2 	bhi.w	8029512 <SNVMA_Init+0x1be>
  __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
 80293ae:	f3ef 8210 	mrs	r2, PRIMASK
  __ASM volatile ("cpsid i" : : : "memory");
 80293b2:	b672      	cpsid	i
    SNVMA_CrcHandle.Instance = CRC;
 80293b4:	485b      	ldr	r0, [pc, #364]	; (8029524 <SNVMA_Init+0x1d0>)
 80293b6:	4b5c      	ldr	r3, [pc, #368]	; (8029528 <SNVMA_Init+0x1d4>)
    SNVMA_CrcHandle.Init.GeneratingPolynomial = SNVMA_POLY_CRC16;
 80293b8:	2108      	movs	r1, #8
    SNVMA_CrcHandle.Instance = CRC;
 80293ba:	6003      	str	r3, [r0, #0]
    SNVMA_CrcHandle.Init.DefaultPolynomialUse = DEFAULT_POLYNOMIAL_DISABLE;
 80293bc:	2301      	movs	r3, #1
 80293be:	8083      	strh	r3, [r0, #4]
    SNVMA_CrcHandle.Init.GeneratingPolynomial = SNVMA_POLY_CRC16;
 80293c0:	f641 53b7 	movw	r3, #7607	; 0x1db7
 80293c4:	e9c0 3102 	strd	r3, r1, [r0, #8]
    SNVMA_CrcHandle.Init.InputDataInversionMode = CRC_INPUTDATA_INVERSION_NONE;
 80293c8:	2300      	movs	r3, #0
    SNVMA_CrcHandle.Init.OutputDataInversionMode = CRC_OUTPUTDATA_INVERSION_DISABLE;
 80293ca:	e9c0 3305 	strd	r3, r3, [r0, #20]
    SNVMA_CrcHandle.InputDataFormat = CRC_INPUTDATA_FORMAT_WORDS;
 80293ce:	2303      	movs	r3, #3
 80293d0:	6203      	str	r3, [r0, #32]
  __ASM volatile ("MSR primask, %0" : : "r" (priMask) : "memory");
 80293d2:	f382 8810 	msr	PRIMASK, r2
    if (HAL_CRC_Init (&SNVMA_CrcHandle) != HAL_OK)
 80293d6:	f002 fa95 	bl	802b904 <HAL_CRC_Init>
 80293da:	4605      	mov	r5, r0
 80293dc:	2800      	cmp	r0, #0
 80293de:	f040 809a 	bne.w	8029516 <SNVMA_Init+0x1c2>
  __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
 80293e2:	f3ef 8310 	mrs	r3, PRIMASK
 80293e6:	9302      	str	r3, [sp, #8]
  __ASM volatile ("cpsid i" : : : "memory");
 80293e8:	b672      	cpsid	i
        for (uint8_t bankIdx = 0x00;
 80293ea:	46aa      	mov	sl, r5
      SNVMA_FlashCallback.Callback = SNVMA_FlashManagerCallback;
 80293ec:	4b4f      	ldr	r3, [pc, #316]	; (802952c <SNVMA_Init+0x1d8>)
 80293ee:	4a50      	ldr	r2, [pc, #320]	; (8029530 <SNVMA_Init+0x1dc>)
      memset ((void *)SNVMA_BankConfiguration,
 80293f0:	f8df 9144 	ldr.w	r9, [pc, #324]	; 8029538 <SNVMA_Init+0x1e4>
        SNVMA_NvmConfiguration[nvmIdx].p_BankList = &SNVMA_BankConfiguration[bankConfIdx];
 80293f4:	4c4f      	ldr	r4, [pc, #316]	; (8029534 <SNVMA_Init+0x1e0>)
      memset ((void *)SNVMA_BankConfiguration,
 80293f6:	4601      	mov	r1, r0
      SNVMA_FlashCallback.Callback = SNVMA_FlashManagerCallback;
 80293f8:	609a      	str	r2, [r3, #8]
      memset ((void *)SNVMA_BankConfiguration,
 80293fa:	4648      	mov	r0, r9
 80293fc:	2228      	movs	r2, #40	; 0x28
 80293fe:	f007 fdd6 	bl	8030fae <memset>
      nvmOffset = (uint32_t)p_NvmStartAddress - FLASH_BASE_NS;
 8029402:	f106 4b78 	add.w	fp, r6, #4160749568	; 0xf8000000
        SNVMA_NvmConfiguration[nvmIdx].p_BankList = &SNVMA_BankConfiguration[bankConfIdx];
 8029406:	f8c4 9004 	str.w	r9, [r4, #4]
        for (uint8_t bankIdx = 0x00;
 802940a:	7822      	ldrb	r2, [r4, #0]
 802940c:	fa5f f38a 	uxtb.w	r3, sl
 8029410:	429a      	cmp	r2, r3
 8029412:	d809      	bhi.n	8029428 <SNVMA_Init+0xd4>
      SNVMA_ModuleInit = TRUE;
 8029414:	2301      	movs	r3, #1
 8029416:	4a41      	ldr	r2, [pc, #260]	; (802951c <SNVMA_Init+0x1c8>)
 8029418:	7013      	strb	r3, [r2, #0]
  __ASM volatile ("MSR primask, %0" : : "r" (priMask) : "memory");
 802941a:	9b02      	ldr	r3, [sp, #8]
 802941c:	f383 8810 	msr	PRIMASK, r3
}
 8029420:	4628      	mov	r0, r5
 8029422:	b005      	add	sp, #20
 8029424:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
          SNVMA_BankConfiguration[bankConfIdx].p_StartAddr = (uint32_t *)((uint32_t)p_NvmStartAddress + addressOffset);
 8029428:	2114      	movs	r1, #20
 802942a:	fa1f f28a 	uxth.w	r2, sl
 802942e:	fb01 f802 	mul.w	r8, r1, r2
 8029432:	19f3      	adds	r3, r6, r7
          if (IsHeaderOk (SNVMA_BankConfiguration[bankConfIdx].p_StartAddr,
 8029434:	4618      	mov	r0, r3
          SNVMA_BankConfiguration[bankConfIdx].p_StartAddr = (uint32_t *)((uint32_t)p_NvmStartAddress + addressOffset);
 8029436:	eb09 0208 	add.w	r2, r9, r8
          if (IsHeaderOk (SNVMA_BankConfiguration[bankConfIdx].p_StartAddr,
 802943a:	2100      	movs	r1, #0
          SNVMA_BankConfiguration[bankConfIdx].p_StartAddr = (uint32_t *)((uint32_t)p_NvmStartAddress + addressOffset);
 802943c:	f849 3008 	str.w	r3, [r9, r8]
          if (IsHeaderOk (SNVMA_BankConfiguration[bankConfIdx].p_StartAddr,
 8029440:	9303      	str	r3, [sp, #12]
          SNVMA_BankConfiguration[bankConfIdx].p_StartAddr = (uint32_t *)((uint32_t)p_NvmStartAddress + addressOffset);
 8029442:	9201      	str	r2, [sp, #4]
          if (IsHeaderOk (SNVMA_BankConfiguration[bankConfIdx].p_StartAddr,
 8029444:	f7ff fd34 	bl	8028eb0 <IsHeaderOk>
 8029448:	9b03      	ldr	r3, [sp, #12]
 802944a:	b9a0      	cbnz	r0, 8029476 <SNVMA_Init+0x122>
            while (EraseSector (((nvmOffset + addressOffset) / FLASH_PAGE_SIZE),
 802944c:	eb07 080b 	add.w	r8, r7, fp
 8029450:	ea4f 3858 	mov.w	r8, r8, lsr #13
 8029454:	4640      	mov	r0, r8
 8029456:	7861      	ldrb	r1, [r4, #1]
 8029458:	f7ff fcbc 	bl	8028dd4 <EraseSector>
 802945c:	2800      	cmp	r0, #0
 802945e:	d0f9      	beq.n	8029454 <SNVMA_Init+0x100>
          if (SNVMA_NvmConfiguration[nvmIdx].p_BankForRestore == NULL)
 8029460:	68e3      	ldr	r3, [r4, #12]
            SNVMA_NvmConfiguration[nvmIdx].p_BankForWrite = &SNVMA_NvmConfiguration[nvmIdx].p_BankList[0];
 8029462:	6861      	ldr	r1, [r4, #4]
          if (SNVMA_NvmConfiguration[nvmIdx].p_BankForRestore == NULL)
 8029464:	2b00      	cmp	r3, #0
 8029466:	d142      	bne.n	80294ee <SNVMA_Init+0x19a>
            SNVMA_NvmConfiguration[nvmIdx].p_BankForWrite = &SNVMA_NvmConfiguration[nvmIdx].p_BankList[0];
 8029468:	60a1      	str	r1, [r4, #8]
          addressOffset = addressOffset + ((SNVMA_NvmConfiguration[nvmIdx].BankSize * FLASH_PAGE_SIZE));
 802946a:	7863      	ldrb	r3, [r4, #1]
 802946c:	f10a 0a01 	add.w	sl, sl, #1
 8029470:	eb07 3743 	add.w	r7, r7, r3, lsl #13
             bankIdx++)
 8029474:	e7c9      	b.n	802940a <SNVMA_Init+0xb6>
          else if (IsCrcOk (SNVMA_BankConfiguration[bankConfIdx].p_StartAddr) == FALSE)
 8029476:	4618      	mov	r0, r3
 8029478:	f7ff fc72 	bl	8028d60 <IsCrcOk>
 802947c:	b950      	cbnz	r0, 8029494 <SNVMA_Init+0x140>
            while (EraseSector (((nvmOffset + addressOffset) / FLASH_PAGE_SIZE),
 802947e:	eb07 080b 	add.w	r8, r7, fp
 8029482:	ea4f 3858 	mov.w	r8, r8, lsr #13
 8029486:	4640      	mov	r0, r8
 8029488:	7861      	ldrb	r1, [r4, #1]
 802948a:	f7ff fca3 	bl	8028dd4 <EraseSector>
 802948e:	2800      	cmp	r0, #0
 8029490:	d0f9      	beq.n	8029486 <SNVMA_Init+0x132>
 8029492:	e7e5      	b.n	8029460 <SNVMA_Init+0x10c>
            if (SNVMA_NvmConfiguration[nvmIdx].p_BankForRestore == NULL)
 8029494:	68e3      	ldr	r3, [r4, #12]
 8029496:	b913      	cbnz	r3, 802949e <SNVMA_Init+0x14a>
              SNVMA_NvmConfiguration[nvmIdx].p_BankForRestore = &SNVMA_BankConfiguration[bankConfIdx];
 8029498:	9b01      	ldr	r3, [sp, #4]
 802949a:	60e3      	str	r3, [r4, #12]
 802949c:	e7e0      	b.n	8029460 <SNVMA_Init+0x10c>
  if (p_FirstBankHeader->Counter <
 802949e:	6819      	ldr	r1, [r3, #0]
      p_SecondBankHeader->Counter)
 80294a0:	f859 2008 	ldr.w	r2, [r9, r8]
  if (p_FirstBankHeader->Counter <
 80294a4:	7849      	ldrb	r1, [r1, #1]
      p_SecondBankHeader->Counter)
 80294a6:	7852      	ldrb	r2, [r2, #1]
  if (p_FirstBankHeader->Counter <
 80294a8:	4291      	cmp	r1, r2
 80294aa:	d212      	bcs.n	80294d2 <SNVMA_Init+0x17e>
    if ((p_SecondBankHeader->Counter -
 80294ac:	1a51      	subs	r1, r2, r1
 80294ae:	9a01      	ldr	r2, [sp, #4]
 80294b0:	29ff      	cmp	r1, #255	; 0xff
 80294b2:	bf08      	it	eq
 80294b4:	461a      	moveq	r2, r3
              if (SNVMA_NvmConfiguration[nvmIdx].p_BankForRestore == p_currentRestoreBank)
 80294b6:	4293      	cmp	r3, r2
              SNVMA_NvmConfiguration[nvmIdx].p_BankForRestore = GetNewestBank (p_currentRestoreBank,
 80294b8:	60e2      	str	r2, [r4, #12]
              if (SNVMA_NvmConfiguration[nvmIdx].p_BankForRestore == p_currentRestoreBank)
 80294ba:	d10c      	bne.n	80294d6 <SNVMA_Init+0x182>
                while (EraseSector (((nvmOffset + addressOffset) / FLASH_PAGE_SIZE),
 80294bc:	eb07 080b 	add.w	r8, r7, fp
 80294c0:	ea4f 3858 	mov.w	r8, r8, lsr #13
 80294c4:	4640      	mov	r0, r8
 80294c6:	7861      	ldrb	r1, [r4, #1]
 80294c8:	f7ff fc84 	bl	8028dd4 <EraseSector>
 80294cc:	2800      	cmp	r0, #0
 80294ce:	d0f9      	beq.n	80294c4 <SNVMA_Init+0x170>
 80294d0:	e7c6      	b.n	8029460 <SNVMA_Init+0x10c>
 80294d2:	461a      	mov	r2, r3
 80294d4:	e7ef      	b.n	80294b6 <SNVMA_Init+0x162>
                while (EraseSector ((((uint32_t)p_currentRestoreBank->p_StartAddr - FLASH_BASE_NS) / FLASH_PAGE_SIZE),
 80294d6:	6818      	ldr	r0, [r3, #0]
 80294d8:	7861      	ldrb	r1, [r4, #1]
 80294da:	f100 4078 	add.w	r0, r0, #4160749568	; 0xf8000000
 80294de:	0b40      	lsrs	r0, r0, #13
 80294e0:	9301      	str	r3, [sp, #4]
 80294e2:	f7ff fc77 	bl	8028dd4 <EraseSector>
 80294e6:	9b01      	ldr	r3, [sp, #4]
 80294e8:	2800      	cmp	r0, #0
 80294ea:	d0f4      	beq.n	80294d6 <SNVMA_Init+0x182>
 80294ec:	e7b8      	b.n	8029460 <SNVMA_Init+0x10c>
                   &SNVMA_NvmConfiguration[nvmIdx].p_BankList[SNVMA_NvmConfiguration[nvmIdx].BankNumber - 1])
 80294ee:	2014      	movs	r0, #20
 80294f0:	f06f 0c13 	mvn.w	ip, #19
 80294f4:	7822      	ldrb	r2, [r4, #0]
 80294f6:	fb10 c202 	smlabb	r2, r0, r2, ip
 80294fa:	440a      	add	r2, r1
          else if (SNVMA_NvmConfiguration[nvmIdx].p_BankForRestore ==
 80294fc:	4293      	cmp	r3, r2
 80294fe:	d0b3      	beq.n	8029468 <SNVMA_Init+0x114>
            SNVMA_NvmConfiguration[nvmIdx].p_BankForWrite = SNVMA_NvmConfiguration[nvmIdx].p_BankForRestore + 1;
 8029500:	3314      	adds	r3, #20
 8029502:	60a3      	str	r3, [r4, #8]
 8029504:	e7b1      	b.n	802946a <SNVMA_Init+0x116>
    error = SNVMA_ERROR_ALREADY_INIT;
 8029506:	2503      	movs	r5, #3
 8029508:	e78a      	b.n	8029420 <SNVMA_Init+0xcc>
    error = SNVMA_ERROR_NVM_NULL;
 802950a:	2506      	movs	r5, #6
 802950c:	e788      	b.n	8029420 <SNVMA_Init+0xcc>
    error = SNVMA_ERROR_NVM_NOT_ALIGNED;
 802950e:	2507      	movs	r5, #7
 8029510:	e786      	b.n	8029420 <SNVMA_Init+0xcc>
    error = SNVMA_ERROR_NVM_OVERLAP_FLASH;
 8029512:	2508      	movs	r5, #8
 8029514:	e784      	b.n	8029420 <SNVMA_Init+0xcc>
      error = SNVMA_ERROR_CRC_INIT;
 8029516:	250c      	movs	r5, #12
 8029518:	e782      	b.n	8029420 <SNVMA_Init+0xcc>
 802951a:	bf00      	nop
 802951c:	20009028 	.word	0x20009028
 8029520:	0bf90700 	.word	0x0bf90700
 8029524:	20008ff0 	.word	0x20008ff0
 8029528:	40023000 	.word	0x40023000
 802952c:	20009014 	.word	0x20009014
 8029530:	08028f3d 	.word	0x08028f3d
 8029534:	20000478 	.word	0x20000478
 8029538:	20008fc4 	.word	0x20008fc4

0802953c <SNVMA_Register>:
{
 802953c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8029540:	4603      	mov	r3, r0
  if (SNVMA_ModuleInit == FALSE)
 8029542:	483a      	ldr	r0, [pc, #232]	; (802962c <SNVMA_Register+0xf0>)
  uint32_t neededSpace = SNVMA_ALIGN_128 ((BufferSize * sizeof (uint32_t)));
 8029544:	0095      	lsls	r5, r2, #2
  if (SNVMA_ModuleInit == FALSE)
 8029546:	7800      	ldrb	r0, [r0, #0]
  uint32_t neededSpace = SNVMA_ALIGN_128 ((BufferSize * sizeof (uint32_t)));
 8029548:	350f      	adds	r5, #15
 802954a:	f025 050f 	bic.w	r5, r5, #15
  if (SNVMA_ModuleInit == FALSE)
 802954e:	2800      	cmp	r0, #0
 8029550:	d05d      	beq.n	802960e <SNVMA_Register+0xd2>
  else if (SNVMA_CommandPending == TRUE)
 8029552:	4837      	ldr	r0, [pc, #220]	; (8029630 <SNVMA_Register+0xf4>)
 8029554:	7800      	ldrb	r0, [r0, #0]
 8029556:	2801      	cmp	r0, #1
 8029558:	d05b      	beq.n	8029612 <SNVMA_Register+0xd6>
  else if (BufferId >= SNVMA_BufferId_Max)
 802955a:	2b03      	cmp	r3, #3
 802955c:	d85b      	bhi.n	8029616 <SNVMA_Register+0xda>
  else if (p_BufferAddress == NULL)
 802955e:	2900      	cmp	r1, #0
 8029560:	d05b      	beq.n	802961a <SNVMA_Register+0xde>
  else if (((uint32_t)p_BufferAddress & SNVMA_MASK_ALIGNMENT_32) != 0x00000000u)
 8029562:	f011 0703 	ands.w	r7, r1, #3
 8029566:	d15a      	bne.n	802961e <SNVMA_Register+0xe2>
  else if (BufferSize == 0x00)
 8029568:	2a00      	cmp	r2, #0
 802956a:	d05a      	beq.n	8029622 <SNVMA_Register+0xe6>
  else if ((SNVMA_NvmConfiguration[nvmId].a_Buffers[0].p_Addr != NULL) &&
 802956c:	4c31      	ldr	r4, [pc, #196]	; (8029634 <SNVMA_Register+0xf8>)
 802956e:	6a20      	ldr	r0, [r4, #32]
 8029570:	b130      	cbz	r0, 8029580 <SNVMA_Register+0x44>
 8029572:	6aa0      	ldr	r0, [r4, #40]	; 0x28
 8029574:	b120      	cbz	r0, 8029580 <SNVMA_Register+0x44>
           (SNVMA_NvmConfiguration[nvmId].a_Buffers[1].p_Addr != NULL) &&
 8029576:	6b20      	ldr	r0, [r4, #48]	; 0x30
 8029578:	b110      	cbz	r0, 8029580 <SNVMA_Register+0x44>
           (SNVMA_NvmConfiguration[nvmId].a_Buffers[2].p_Addr != NULL) &&
 802957a:	6ba0      	ldr	r0, [r4, #56]	; 0x38
 802957c:	2800      	cmp	r0, #0
 802957e:	d152      	bne.n	8029626 <SNVMA_Register+0xea>
 8029580:	4e2c      	ldr	r6, [pc, #176]	; (8029634 <SNVMA_Register+0xf8>)
{
 8029582:	f04f 0e00 	mov.w	lr, #0
 8029586:	46b4      	mov	ip, r6
      if (SNVMA_NvmConfiguration[nvmId].a_Buffers[cnt].p_Addr != NULL)
 8029588:	f8dc 0020 	ldr.w	r0, [ip, #32]
 802958c:	b1d0      	cbz	r0, 80295c4 <SNVMA_Register+0x88>
        neededSpace = neededSpace + SNVMA_ALIGN_128 ((SNVMA_NvmConfiguration[nvmId].a_Buffers[cnt].Size *
 802958e:	f8dc 0024 	ldr.w	r0, [ip, #36]	; 0x24
        if (((neededSpace + offSet)) > (SNVMA_NvmConfiguration[nvmId].BankSize * FLASH_PAGE_SIZE))
 8029592:	f894 8001 	ldrb.w	r8, [r4, #1]
        neededSpace = neededSpace + SNVMA_ALIGN_128 ((SNVMA_NvmConfiguration[nvmId].a_Buffers[cnt].Size *
 8029596:	0080      	lsls	r0, r0, #2
 8029598:	300f      	adds	r0, #15
 802959a:	f020 000f 	bic.w	r0, r0, #15
 802959e:	4405      	add	r5, r0
        if (((neededSpace + offSet)) > (SNVMA_NvmConfiguration[nvmId].BankSize * FLASH_PAGE_SIZE))
 80295a0:	f105 0010 	add.w	r0, r5, #16
          error = SNVMA_ERROR_BUFFER_SIZE;
 80295a4:	ebb0 3f48 	cmp.w	r0, r8, lsl #13
 80295a8:	bf94      	ite	ls
 80295aa:	2001      	movls	r0, #1
 80295ac:	2011      	movhi	r0, #17
    for (uint8_t cnt = 0x00;
 80295ae:	f1be 0f03 	cmp.w	lr, #3
 80295b2:	d009      	beq.n	80295c8 <SNVMA_Register+0x8c>
         (cnt < SNVMA_MAX_NUMBER_BUFFER) && (error == SNVMA_ERROR_NOK);
 80295b4:	2801      	cmp	r0, #1
 80295b6:	f10e 0e01 	add.w	lr, lr, #1
 80295ba:	f10c 0c08 	add.w	ip, ip, #8
 80295be:	d0e3      	beq.n	8029588 <SNVMA_Register+0x4c>
}
 80295c0:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80295c4:	2001      	movs	r0, #1
 80295c6:	e7f2      	b.n	80295ae <SNVMA_Register+0x72>
    if (error == SNVMA_ERROR_NOK)
 80295c8:	2801      	cmp	r0, #1
 80295ca:	d1f9      	bne.n	80295c0 <SNVMA_Register+0x84>
  __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
 80295cc:	f3ef 8010 	mrs	r0, PRIMASK
  __ASM volatile ("cpsid i" : : : "memory");
 80295d0:	b672      	cpsid	i
      SNVMA_NvmConfiguration[nvmId].a_Buffers[idxBuf].p_Addr = (uint32_t *)p_BufferAddress;
 80295d2:	3304      	adds	r3, #4
 80295d4:	f844 1033 	str.w	r1, [r4, r3, lsl #3]
      SNVMA_NvmConfiguration[nvmId].a_Buffers[idxBuf].Size = BufferSize;
 80295d8:	eb04 03c3 	add.w	r3, r4, r3, lsl #3
 80295dc:	605a      	str	r2, [r3, #4]
  uint32_t offSet = sizeof (SNVMA_BankHeader_t);
 80295de:	2210      	movs	r2, #16
        if (SNVMA_NvmConfiguration[nvmId].a_Buffers[cnt].p_Addr != NULL)
 80295e0:	6a33      	ldr	r3, [r6, #32]
 80295e2:	b15b      	cbz	r3, 80295fc <SNVMA_Register+0xc0>
            (uint32_t *)(((uint32_t)SNVMA_NvmConfiguration[nvmId].p_BankForWrite->p_StartAddr) + offSet);
 80295e4:	68a3      	ldr	r3, [r4, #8]
          SNVMA_NvmConfiguration[nvmId].p_BankForWrite->ap_BufferAddr[cnt] =
 80295e6:	eb03 0187 	add.w	r1, r3, r7, lsl #2
            (uint32_t *)(((uint32_t)SNVMA_NvmConfiguration[nvmId].p_BankForWrite->p_StartAddr) + offSet);
 80295ea:	681b      	ldr	r3, [r3, #0]
 80295ec:	4413      	add	r3, r2
          SNVMA_NvmConfiguration[nvmId].p_BankForWrite->ap_BufferAddr[cnt] =
 80295ee:	604b      	str	r3, [r1, #4]
          offSet = offSet + SNVMA_ALIGN_128 ((SNVMA_NvmConfiguration[nvmId].a_Buffers[cnt].Size *
 80295f0:	6a73      	ldr	r3, [r6, #36]	; 0x24
 80295f2:	009b      	lsls	r3, r3, #2
 80295f4:	330f      	adds	r3, #15
 80295f6:	f023 030f 	bic.w	r3, r3, #15
 80295fa:	441a      	add	r2, r3
      for (uint8_t cnt = 0x00;
 80295fc:	3701      	adds	r7, #1
 80295fe:	2f04      	cmp	r7, #4
 8029600:	f106 0608 	add.w	r6, r6, #8
 8029604:	d1ec      	bne.n	80295e0 <SNVMA_Register+0xa4>
  __ASM volatile ("MSR primask, %0" : : "r" (priMask) : "memory");
 8029606:	f380 8810 	msr	PRIMASK, r0
      error = SNVMA_ERROR_OK;
 802960a:	2000      	movs	r0, #0
 802960c:	e7d8      	b.n	80295c0 <SNVMA_Register+0x84>
    error = SNVMA_ERROR_NOT_INIT;
 802960e:	2002      	movs	r0, #2
 8029610:	e7d6      	b.n	80295c0 <SNVMA_Register+0x84>
    error = SNVMA_ERROR_CMD_PENDING;
 8029612:	2004      	movs	r0, #4
 8029614:	e7d4      	b.n	80295c0 <SNVMA_Register+0x84>
    error = SNVMA_ERROR_BUFFERID_NOT_KNOWN;
 8029616:	200d      	movs	r0, #13
 8029618:	e7d2      	b.n	80295c0 <SNVMA_Register+0x84>
    error = SNVMA_ERROR_BUFFER_NULL;
 802961a:	200f      	movs	r0, #15
 802961c:	e7d0      	b.n	80295c0 <SNVMA_Register+0x84>
    error = SNVMA_ERROR_BUFFER_NOT_ALIGNED;
 802961e:	2010      	movs	r0, #16
 8029620:	e7ce      	b.n	80295c0 <SNVMA_Register+0x84>
    error = SNVMA_ERROR_BUFFER_SIZE;
 8029622:	2011      	movs	r0, #17
 8029624:	e7cc      	b.n	80295c0 <SNVMA_Register+0x84>
    error = SNVMA_ERROR_NVM_BUFFER_FULL;
 8029626:	2009      	movs	r0, #9
 8029628:	e7ca      	b.n	80295c0 <SNVMA_Register+0x84>
 802962a:	bf00      	nop
 802962c:	20009028 	.word	0x20009028
 8029630:	20008fec 	.word	0x20008fec
 8029634:	20000478 	.word	0x20000478

08029638 <SNVMA_Restore>:
{
 8029638:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
  if (SNVMA_ModuleInit == FALSE)
 802963c:	4b4d      	ldr	r3, [pc, #308]	; (8029774 <SNVMA_Restore+0x13c>)
{
 802963e:	4680      	mov	r8, r0
  if (SNVMA_ModuleInit == FALSE)
 8029640:	781b      	ldrb	r3, [r3, #0]
 8029642:	2b00      	cmp	r3, #0
 8029644:	f000 808c 	beq.w	8029760 <SNVMA_Restore+0x128>
  else if (SNVMA_CommandPending == TRUE)
 8029648:	4d4b      	ldr	r5, [pc, #300]	; (8029778 <SNVMA_Restore+0x140>)
 802964a:	782b      	ldrb	r3, [r5, #0]
 802964c:	2b01      	cmp	r3, #1
 802964e:	f000 8089 	beq.w	8029764 <SNVMA_Restore+0x12c>
  else if (BufferId >= SNVMA_BufferId_Max)
 8029652:	2803      	cmp	r0, #3
 8029654:	f200 8088 	bhi.w	8029768 <SNVMA_Restore+0x130>
  else if (SNVMA_NvmConfiguration[nvmId].a_Buffers[idxBuf].p_Addr == NULL)
 8029658:	4c48      	ldr	r4, [pc, #288]	; (802977c <SNVMA_Restore+0x144>)
 802965a:	1d07      	adds	r7, r0, #4
 802965c:	f854 3037 	ldr.w	r3, [r4, r7, lsl #3]
 8029660:	2b00      	cmp	r3, #0
 8029662:	f000 8083 	beq.w	802976c <SNVMA_Restore+0x134>
  else if (SNVMA_NvmConfiguration[nvmId].p_BankForRestore == NULL)
 8029666:	68e3      	ldr	r3, [r4, #12]
 8029668:	2b00      	cmp	r3, #0
 802966a:	f000 8081 	beq.w	8029770 <SNVMA_Restore+0x138>
  __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
 802966e:	f3ef 8610 	mrs	r6, PRIMASK
  __ASM volatile ("cpsid i" : : : "memory");
 8029672:	b672      	cpsid	i
    SNVMA_CommandPending = TRUE;
 8029674:	2301      	movs	r3, #1
 8029676:	702b      	strb	r3, [r5, #0]
    if (IsHeaderOk (SNVMA_NvmConfiguration[nvmId].p_BankForRestore->p_StartAddr,
 8029678:	68e3      	ldr	r3, [r4, #12]
 802967a:	2100      	movs	r1, #0
 802967c:	f8d3 9000 	ldr.w	r9, [r3]
 8029680:	4648      	mov	r0, r9
 8029682:	f7ff fc15 	bl	8028eb0 <IsHeaderOk>
 8029686:	b930      	cbnz	r0, 8029696 <SNVMA_Restore+0x5e>
      error = SNVMA_ERROR_NVM_BANK_CORRUPTED;
 8029688:	200b      	movs	r0, #11
    SNVMA_CommandPending = FALSE;
 802968a:	2300      	movs	r3, #0
 802968c:	702b      	strb	r3, [r5, #0]
  __ASM volatile ("MSR primask, %0" : : "r" (priMask) : "memory");
 802968e:	f386 8810 	msr	PRIMASK, r6
}
 8029692:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
    else if (IsCrcOk (SNVMA_NvmConfiguration[nvmId].p_BankForRestore->p_StartAddr) == FALSE)
 8029696:	4648      	mov	r0, r9
 8029698:	f7ff fb62 	bl	8028d60 <IsCrcOk>
 802969c:	2800      	cmp	r0, #0
 802969e:	d0f3      	beq.n	8029688 <SNVMA_Restore+0x50>
      p_bankHeader = (SNVMA_BankHeader_t *)SNVMA_NvmConfiguration[nvmId].p_BankForRestore->p_StartAddr;
 80296a0:	68e3      	ldr	r3, [r4, #12]
 80296a2:	6819      	ldr	r1, [r3, #0]
      if ((BufferId == p_bankHeader->BufferId1) &&
 80296a4:	790b      	ldrb	r3, [r1, #4]
 80296a6:	4543      	cmp	r3, r8
 80296a8:	d106      	bne.n	80296b8 <SNVMA_Restore+0x80>
          (SNVMA_NvmConfiguration[nvmId].a_Buffers[idxBuf].Size == p_bankHeader->SizeId1))
 80296aa:	eb04 03c7 	add.w	r3, r4, r7, lsl #3
 80296ae:	f8b1 2005 	ldrh.w	r2, [r1, #5]
      if ((BufferId == p_bankHeader->BufferId1) &&
 80296b2:	685b      	ldr	r3, [r3, #4]
 80296b4:	4293      	cmp	r3, r2
 80296b6:	d04f      	beq.n	8029758 <SNVMA_Restore+0x120>
      else if ((BufferId == p_bankHeader->BufferId2) &&
 80296b8:	79cb      	ldrb	r3, [r1, #7]
 80296ba:	4543      	cmp	r3, r8
 80296bc:	d117      	bne.n	80296ee <SNVMA_Restore+0xb6>
               (SNVMA_NvmConfiguration[nvmId].a_Buffers[idxBuf].Size == p_bankHeader->SizeId2))
 80296be:	eb04 03c7 	add.w	r3, r4, r7, lsl #3
 80296c2:	890a      	ldrh	r2, [r1, #8]
      else if ((BufferId == p_bankHeader->BufferId2) &&
 80296c4:	685b      	ldr	r3, [r3, #4]
 80296c6:	4293      	cmp	r3, r2
 80296c8:	d111      	bne.n	80296ee <SNVMA_Restore+0xb6>
                        SNVMA_ALIGN_128((p_bankHeader->SizeId1 * sizeof (uint32_t)));
 80296ca:	f8b1 3005 	ldrh.w	r3, [r1, #5]
 80296ce:	009b      	lsls	r3, r3, #2
 80296d0:	330f      	adds	r3, #15
 80296d2:	f023 030f 	bic.w	r3, r3, #15
        paddingOffset = sizeof (SNVMA_BankHeader_t) +
 80296d6:	3310      	adds	r3, #16
                (SNVMA_NvmConfiguration[nvmId].a_Buffers[idxBuf].Size * sizeof (uint32_t)));
 80296d8:	eb04 02c7 	add.w	r2, r4, r7, lsl #3
 80296dc:	6852      	ldr	r2, [r2, #4]
        memcpy ((void *)SNVMA_NvmConfiguration[nvmId].a_Buffers[idxBuf].p_Addr,
 80296de:	f854 0037 	ldr.w	r0, [r4, r7, lsl #3]
 80296e2:	0092      	lsls	r2, r2, #2
 80296e4:	4419      	add	r1, r3
 80296e6:	f007 fc3b 	bl	8030f60 <memcpy>
        error = SNVMA_ERROR_OK;
 80296ea:	2000      	movs	r0, #0
 80296ec:	e7cd      	b.n	802968a <SNVMA_Restore+0x52>
      else if ((BufferId == p_bankHeader->BufferId3) &&
 80296ee:	7a8b      	ldrb	r3, [r1, #10]
 80296f0:	4543      	cmp	r3, r8
 80296f2:	d113      	bne.n	802971c <SNVMA_Restore+0xe4>
               (SNVMA_NvmConfiguration[nvmId].a_Buffers[idxBuf].Size == p_bankHeader->SizeId3))
 80296f4:	eb04 03c7 	add.w	r3, r4, r7, lsl #3
 80296f8:	f8b1 200b 	ldrh.w	r2, [r1, #11]
      else if ((BufferId == p_bankHeader->BufferId3) &&
 80296fc:	685b      	ldr	r3, [r3, #4]
 80296fe:	4293      	cmp	r3, r2
 8029700:	d10c      	bne.n	802971c <SNVMA_Restore+0xe4>
                        SNVMA_ALIGN_128((p_bankHeader->SizeId1 * sizeof (uint32_t))) +
 8029702:	f8b1 3005 	ldrh.w	r3, [r1, #5]
                        SNVMA_ALIGN_128((p_bankHeader->SizeId2 * sizeof (uint32_t)));
 8029706:	890a      	ldrh	r2, [r1, #8]
                        SNVMA_ALIGN_128((p_bankHeader->SizeId1 * sizeof (uint32_t))) +
 8029708:	009b      	lsls	r3, r3, #2
                        SNVMA_ALIGN_128((p_bankHeader->SizeId2 * sizeof (uint32_t)));
 802970a:	0092      	lsls	r2, r2, #2
                        SNVMA_ALIGN_128((p_bankHeader->SizeId1 * sizeof (uint32_t))) +
 802970c:	330f      	adds	r3, #15
                        SNVMA_ALIGN_128((p_bankHeader->SizeId2 * sizeof (uint32_t)));
 802970e:	320f      	adds	r2, #15
                        SNVMA_ALIGN_128((p_bankHeader->SizeId1 * sizeof (uint32_t))) +
 8029710:	f023 030f 	bic.w	r3, r3, #15
                        SNVMA_ALIGN_128((p_bankHeader->SizeId2 * sizeof (uint32_t)));
 8029714:	f022 020f 	bic.w	r2, r2, #15
                        SNVMA_ALIGN_128((p_bankHeader->SizeId1 * sizeof (uint32_t))) +
 8029718:	4413      	add	r3, r2
 802971a:	e7dc      	b.n	80296d6 <SNVMA_Restore+0x9e>
      else if ((BufferId == p_bankHeader->BufferId4) &&
 802971c:	7b4b      	ldrb	r3, [r1, #13]
 802971e:	4543      	cmp	r3, r8
 8029720:	d11c      	bne.n	802975c <SNVMA_Restore+0x124>
               (SNVMA_NvmConfiguration[nvmId].a_Buffers[idxBuf].Size == p_bankHeader->SizeId4))
 8029722:	eb04 03c7 	add.w	r3, r4, r7, lsl #3
 8029726:	89ca      	ldrh	r2, [r1, #14]
      else if ((BufferId == p_bankHeader->BufferId4) &&
 8029728:	685b      	ldr	r3, [r3, #4]
 802972a:	4293      	cmp	r3, r2
 802972c:	d116      	bne.n	802975c <SNVMA_Restore+0x124>
                        SNVMA_ALIGN_128((p_bankHeader->SizeId1 * sizeof (uint32_t))) +
 802972e:	f8b1 3005 	ldrh.w	r3, [r1, #5]
                        SNVMA_ALIGN_128((p_bankHeader->SizeId2 * sizeof (uint32_t))) +
 8029732:	890a      	ldrh	r2, [r1, #8]
                        SNVMA_ALIGN_128((p_bankHeader->SizeId1 * sizeof (uint32_t))) +
 8029734:	009b      	lsls	r3, r3, #2
                        SNVMA_ALIGN_128((p_bankHeader->SizeId2 * sizeof (uint32_t))) +
 8029736:	0092      	lsls	r2, r2, #2
                        SNVMA_ALIGN_128((p_bankHeader->SizeId1 * sizeof (uint32_t))) +
 8029738:	330f      	adds	r3, #15
                        SNVMA_ALIGN_128((p_bankHeader->SizeId2 * sizeof (uint32_t))) +
 802973a:	320f      	adds	r2, #15
 802973c:	f022 020f 	bic.w	r2, r2, #15
                        SNVMA_ALIGN_128((p_bankHeader->SizeId1 * sizeof (uint32_t))) +
 8029740:	f023 030f 	bic.w	r3, r3, #15
 8029744:	4413      	add	r3, r2
                        SNVMA_ALIGN_128((p_bankHeader->SizeId3 * sizeof (uint32_t)));
 8029746:	f8b1 200b 	ldrh.w	r2, [r1, #11]
        paddingOffset = sizeof (SNVMA_BankHeader_t) +
 802974a:	3310      	adds	r3, #16
                        SNVMA_ALIGN_128((p_bankHeader->SizeId3 * sizeof (uint32_t)));
 802974c:	0092      	lsls	r2, r2, #2
 802974e:	320f      	adds	r2, #15
 8029750:	f022 020f 	bic.w	r2, r2, #15
        paddingOffset = sizeof (SNVMA_BankHeader_t) +
 8029754:	4413      	add	r3, r2
      if (error == SNVMA_ERROR_NOK)
 8029756:	e7bf      	b.n	80296d8 <SNVMA_Restore+0xa0>
        paddingOffset = sizeof (SNVMA_BankHeader_t);
 8029758:	2310      	movs	r3, #16
 802975a:	e7bd      	b.n	80296d8 <SNVMA_Restore+0xa0>
        error = SNVMA_ERROR_BUFFER_CONFIG_MISSMATCH;
 802975c:	2012      	movs	r0, #18
 802975e:	e794      	b.n	802968a <SNVMA_Restore+0x52>
    error = SNVMA_ERROR_NOT_INIT;
 8029760:	2002      	movs	r0, #2
 8029762:	e796      	b.n	8029692 <SNVMA_Restore+0x5a>
    error = SNVMA_ERROR_CMD_PENDING;
 8029764:	2004      	movs	r0, #4
 8029766:	e794      	b.n	8029692 <SNVMA_Restore+0x5a>
    error = SNVMA_ERROR_BUFFERID_NOT_KNOWN;
 8029768:	200d      	movs	r0, #13
 802976a:	e792      	b.n	8029692 <SNVMA_Restore+0x5a>
    error = SNVMA_ERROR_BUFFERID_NOT_REGISTERED;
 802976c:	200e      	movs	r0, #14
 802976e:	e790      	b.n	8029692 <SNVMA_Restore+0x5a>
    error = SNVMA_ERROR_NVM_BANK_EMPTY;
 8029770:	200a      	movs	r0, #10
 8029772:	e78e      	b.n	8029692 <SNVMA_Restore+0x5a>
 8029774:	20009028 	.word	0x20009028
 8029778:	20008fec 	.word	0x20008fec
 802977c:	20000478 	.word	0x20000478

08029780 <SNVMA_Write>:
{
 8029780:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  if (SNVMA_ModuleInit == FALSE)
 8029784:	4b2c      	ldr	r3, [pc, #176]	; (8029838 <SNVMA_Write+0xb8>)
{
 8029786:	4606      	mov	r6, r0
  if (SNVMA_ModuleInit == FALSE)
 8029788:	781b      	ldrb	r3, [r3, #0]
 802978a:	2b00      	cmp	r3, #0
 802978c:	d04c      	beq.n	8029828 <SNVMA_Write+0xa8>
  else if (BufferId >= SNVMA_BufferId_Max)
 802978e:	2803      	cmp	r0, #3
 8029790:	d84c      	bhi.n	802982c <SNVMA_Write+0xac>
  else if (SNVMA_NvmConfiguration[nvmId].a_Buffers[idxBuf].p_Addr == NULL)
 8029792:	4d2a      	ldr	r5, [pc, #168]	; (802983c <SNVMA_Write+0xbc>)
 8029794:	3004      	adds	r0, #4
 8029796:	f855 3030 	ldr.w	r3, [r5, r0, lsl #3]
 802979a:	2b00      	cmp	r3, #0
 802979c:	d048      	beq.n	8029830 <SNVMA_Write+0xb0>
  __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
 802979e:	f3ef 8410 	mrs	r4, PRIMASK
  __ASM volatile ("cpsid i" : : : "memory");
 80297a2:	b672      	cpsid	i
    SNVMA_NvmConfiguration[nvmId].PendingBufferWriteOp |= (1u << idxBuf);
 80297a4:	2201      	movs	r2, #1
    SNVMA_IdBitmask |= (1u << nvmId);
 80297a6:	4f26      	ldr	r7, [pc, #152]	; (8029840 <SNVMA_Write+0xc0>)
    SNVMA_NvmConfiguration[nvmId].PendingBufferWriteOp |= (1u << idxBuf);
 80297a8:	fa02 fc06 	lsl.w	ip, r2, r6
    SNVMA_IdBitmask |= (1u << nvmId);
 80297ac:	683b      	ldr	r3, [r7, #0]
    SNVMA_NvmConfiguration[nvmId].a_Callback[idxBuf] = Callback;
 80297ae:	f845 1020 	str.w	r1, [r5, r0, lsl #2]
    SNVMA_IdBitmask |= (1u << nvmId);
 80297b2:	f043 0301 	orr.w	r3, r3, #1
 80297b6:	603b      	str	r3, [r7, #0]
    SNVMA_NvmConfiguration[nvmId].PendingBufferWriteOp |= (1u << idxBuf);
 80297b8:	78ab      	ldrb	r3, [r5, #2]
 80297ba:	ea43 030c 	orr.w	r3, r3, ip
 80297be:	70ab      	strb	r3, [r5, #2]
  __ASM volatile ("MSR primask, %0" : : "r" (priMask) : "memory");
 80297c0:	f384 8810 	msr	PRIMASK, r4
    if (SNVMA_CommandPending == FALSE)
 80297c4:	f8df 8080 	ldr.w	r8, [pc, #128]	; 8029848 <SNVMA_Write+0xc8>
 80297c8:	f898 4000 	ldrb.w	r4, [r8]
 80297cc:	bb94      	cbnz	r4, 8029834 <SNVMA_Write+0xb4>
  __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
 80297ce:	f3ef 8310 	mrs	r3, PRIMASK
  __ASM volatile ("cpsid i" : : : "memory");
 80297d2:	b672      	cpsid	i
      SNVMA_CommandPending = TRUE;
 80297d4:	f888 2000 	strb.w	r2, [r8]
  __ASM volatile ("MSR primask, %0" : : "r" (priMask) : "memory");
 80297d8:	f383 8810 	msr	PRIMASK, r3
      if (StartFlashWrite (nvmId) == FM_ERROR)
 80297dc:	4620      	mov	r0, r4
 80297de:	f7ff fb11 	bl	8028e04 <StartFlashWrite>
 80297e2:	2802      	cmp	r0, #2
 80297e4:	d113      	bne.n	802980e <SNVMA_Write+0x8e>
  __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
 80297e6:	f3ef 8210 	mrs	r2, PRIMASK
  __ASM volatile ("cpsid i" : : : "memory");
 80297ea:	b672      	cpsid	i
        SNVMA_IdBitmask &= ~(1u << nvmId);
 80297ec:	683b      	ldr	r3, [r7, #0]
        SNVMA_CommandPending = FALSE;
 80297ee:	f888 4000 	strb.w	r4, [r8]
        SNVMA_IdBitmask &= ~(1u << nvmId);
 80297f2:	f023 0301 	bic.w	r3, r3, #1
 80297f6:	603b      	str	r3, [r7, #0]
        SNVMA_NvmConfiguration[nvmId].PendingBufferWriteOp = 0u;
 80297f8:	70ac      	strb	r4, [r5, #2]
          SNVMA_NvmConfiguration[nvmId].a_Callback[cnt] = NULL;
 80297fa:	e9c5 4404 	strd	r4, r4, [r5, #16]
 80297fe:	e9c5 4406 	strd	r4, r4, [r5, #24]
  __ASM volatile ("MSR primask, %0" : : "r" (priMask) : "memory");
 8029802:	f382 8810 	msr	PRIMASK, r2
        error = SNVMA_ERROR_FLASH_ERROR;
 8029806:	2413      	movs	r4, #19
}
 8029808:	4620      	mov	r0, r4
 802980a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
 802980e:	f3ef 8210 	mrs	r2, PRIMASK
  __ASM volatile ("cpsid i" : : : "memory");
 8029812:	b672      	cpsid	i
        SNVMA_FlashInfo.NvmId = nvmId;
 8029814:	4b0b      	ldr	r3, [pc, #44]	; (8029844 <SNVMA_Write+0xc4>)
 8029816:	701c      	strb	r4, [r3, #0]
        SNVMA_FlashInfo.BufferId = idxBuf;
 8029818:	705e      	strb	r6, [r3, #1]
        SNVMA_FlashInfo.FlashOpState = SNVMA_HEADER_WRITE;
 802981a:	709c      	strb	r4, [r3, #2]
          (SNVMA_NvmConfiguration[nvmId].PendingBufferWriteOp << SNVMA_MAX_NUMBER_BUFFER) & 0xF0u;
 802981c:	78ab      	ldrb	r3, [r5, #2]
 802981e:	011b      	lsls	r3, r3, #4
        SNVMA_NvmConfiguration[nvmId].PendingBufferWriteOp =
 8029820:	70ab      	strb	r3, [r5, #2]
  __ASM volatile ("MSR primask, %0" : : "r" (priMask) : "memory");
 8029822:	f382 8810 	msr	PRIMASK, r2
        error = SNVMA_ERROR_OK;
 8029826:	e7ef      	b.n	8029808 <SNVMA_Write+0x88>
    error = SNVMA_ERROR_NOT_INIT;
 8029828:	2402      	movs	r4, #2
 802982a:	e7ed      	b.n	8029808 <SNVMA_Write+0x88>
    error = SNVMA_ERROR_BUFFERID_NOT_KNOWN;
 802982c:	240d      	movs	r4, #13
 802982e:	e7eb      	b.n	8029808 <SNVMA_Write+0x88>
    error = SNVMA_ERROR_BUFFERID_NOT_REGISTERED;
 8029830:	240e      	movs	r4, #14
 8029832:	e7e9      	b.n	8029808 <SNVMA_Write+0x88>
      error = SNVMA_ERROR_OK;
 8029834:	2400      	movs	r4, #0
 8029836:	e7e7      	b.n	8029808 <SNVMA_Write+0x88>
 8029838:	20009028 	.word	0x20009028
 802983c:	20000478 	.word	0x20000478
 8029840:	20009024 	.word	0x20009024
 8029844:	20009020 	.word	0x20009020
 8029848:	20008fec 	.word	0x20008fec

0802984c <pushPending>:

/* Private Functions Definition ------------------------------------------------------*/

void pushPending (AMM_VirtualMemoryCallbackFunction_t * const p_CallbackElt)
{
  if (p_CallbackElt != NULL)
 802984c:	4601      	mov	r1, r0
 802984e:	b110      	cbz	r0, 8029856 <pushPending+0xa>
  {
    /* Add the new callback */
    LST_insert_tail (&AmmPendingCallback, (tListNode *)p_CallbackElt);
 8029850:	4801      	ldr	r0, [pc, #4]	; (8029858 <pushPending+0xc>)
 8029852:	f001 b862 	b.w	802a91a <LST_insert_tail>
  }
}
 8029856:	4770      	bx	lr
 8029858:	20009064 	.word	0x20009064

0802985c <AMM_Init>:
{
 802985c:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
  if (AmmInitialized == INITIALIZED)
 8029860:	f8df a18c 	ldr.w	sl, [pc, #396]	; 80299f0 <AMM_Init+0x194>
{
 8029864:	4604      	mov	r4, r0
  if (AmmInitialized == INITIALIZED)
 8029866:	f89a 3000 	ldrb.w	r3, [sl]
 802986a:	2b01      	cmp	r3, #1
 802986c:	f000 80aa 	beq.w	80299c4 <AMM_Init+0x168>
  else if (p_InitParams == NULL)
 8029870:	2800      	cmp	r0, #0
 8029872:	f000 80a9 	beq.w	80299c8 <AMM_Init+0x16c>
  else if (p_InitParams->p_PoolAddr == NULL)
 8029876:	6803      	ldr	r3, [r0, #0]
 8029878:	2b00      	cmp	r3, #0
 802987a:	f000 80a7 	beq.w	80299cc <AMM_Init+0x170>
  else if ((MASK_ALIGNED_32BITS & (uint32_t)p_InitParams->p_PoolAddr) != 0)
 802987e:	f013 0303 	ands.w	r3, r3, #3
 8029882:	f040 80a3 	bne.w	80299cc <AMM_Init+0x170>
  else if (p_InitParams->PoolSize == 0)
 8029886:	6847      	ldr	r7, [r0, #4]
 8029888:	2f00      	cmp	r7, #0
 802988a:	f000 809f 	beq.w	80299cc <AMM_Init+0x170>
    neededPoolSize = p_InitParams->VirtualMemoryNumber * AMM_VIRTUAL_INFO_ELEMENT_SIZE;
 802988e:	6881      	ldr	r1, [r0, #8]
 8029890:	4606      	mov	r6, r0
    for (uint32_t memIdx = 0x00;
 8029892:	4602      	mov	r2, r0
  AMM_Function_Error_t error = AMM_ERROR_NOK;
 8029894:	2001      	movs	r0, #1
    neededPoolSize = p_InitParams->VirtualMemoryNumber * AMM_VIRTUAL_INFO_ELEMENT_SIZE;
 8029896:	eb01 0541 	add.w	r5, r1, r1, lsl #1
    for (uint32_t memIdx = 0x00;
 802989a:	4299      	cmp	r1, r3
 802989c:	d016      	beq.n	80298cc <AMM_Init+0x70>
         (memIdx < p_InitParams->VirtualMemoryNumber) && (error == AMM_ERROR_NOK);
 802989e:	2801      	cmp	r0, #1
 80298a0:	d001      	beq.n	80298a6 <AMM_Init+0x4a>
}
 80298a2:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
      neededPoolSize = neededPoolSize + p_InitParams->a_VirtualMemoryConfigList[memIdx].BufferSize;
 80298a6:	f8d2 c010 	ldr.w	ip, [r2, #16]
      if (p_InitParams->a_VirtualMemoryConfigList[memIdx].Id == 0)
 80298aa:	f892 e00c 	ldrb.w	lr, [r2, #12]
      neededPoolSize = neededPoolSize + p_InitParams->a_VirtualMemoryConfigList[memIdx].BufferSize;
 80298ae:	4465      	add	r5, ip
      if (p_InitParams->a_VirtualMemoryConfigList[memIdx].Id == 0)
 80298b0:	f1be 0f00 	cmp.w	lr, #0
 80298b4:	d008      	beq.n	80298c8 <AMM_Init+0x6c>
      else if (p_InitParams->a_VirtualMemoryConfigList[memIdx].BufferSize == 0)
 80298b6:	f1bc 0f00 	cmp.w	ip, #0
 80298ba:	d005      	beq.n	80298c8 <AMM_Init+0x6c>
        error = AMM_ERROR_BAD_VIRTUAL_CONFIG;
 80298bc:	42af      	cmp	r7, r5
 80298be:	bf38      	it	cc
 80298c0:	2004      	movcc	r0, #4
         memIdx++)
 80298c2:	3301      	adds	r3, #1
 80298c4:	3208      	adds	r2, #8
 80298c6:	e7e8      	b.n	802989a <AMM_Init+0x3e>
        error = AMM_ERROR_BAD_VIRTUAL_CONFIG;
 80298c8:	2004      	movs	r0, #4
 80298ca:	e7fa      	b.n	80298c2 <AMM_Init+0x66>
    if (error == AMM_ERROR_NOK)
 80298cc:	2801      	cmp	r0, #1
 80298ce:	d1e8      	bne.n	80298a2 <AMM_Init+0x46>
      p_AmmPoolAddress = NULL;
 80298d0:	2300      	movs	r3, #0
      AmmPendingCallback.next = NULL;
 80298d2:	4841      	ldr	r0, [pc, #260]	; (80299d8 <AMM_Init+0x17c>)
      AmmBmmFunctionsHandler.Init = NULL;
 80298d4:	4d41      	ldr	r5, [pc, #260]	; (80299dc <AMM_Init+0x180>)
      AmmPendingCallback.next = NULL;
 80298d6:	7003      	strb	r3, [r0, #0]
 80298d8:	7043      	strb	r3, [r0, #1]
 80298da:	7083      	strb	r3, [r0, #2]
 80298dc:	70c3      	strb	r3, [r0, #3]
      AmmPendingCallback.prev = NULL;
 80298de:	7103      	strb	r3, [r0, #4]
 80298e0:	7143      	strb	r3, [r0, #5]
 80298e2:	7183      	strb	r3, [r0, #6]
 80298e4:	71c3      	strb	r3, [r0, #7]
      AmmActiveCallback.next = NULL;
 80298e6:	483e      	ldr	r0, [pc, #248]	; (80299e0 <AMM_Init+0x184>)
      p_AmmPoolAddress = NULL;
 80298e8:	493e      	ldr	r1, [pc, #248]	; (80299e4 <AMM_Init+0x188>)
      AmmPoolSize = 0x00;
 80298ea:	4a3f      	ldr	r2, [pc, #252]	; (80299e8 <AMM_Init+0x18c>)
      AmmOccupiedSharedPoolSize = 0x00;
 80298ec:	f8df 9104 	ldr.w	r9, [pc, #260]	; 80299f4 <AMM_Init+0x198>
      AmmRequiredVirtualMemorySize = 0x00;
 80298f0:	4f3e      	ldr	r7, [pc, #248]	; (80299ec <AMM_Init+0x190>)
      AmmVirtualMemoryNumber = 0x00;
 80298f2:	f8df b104 	ldr.w	fp, [pc, #260]	; 80299f8 <AMM_Init+0x19c>
      p_AmmVirtualMemoryList = NULL;
 80298f6:	f8df 8104 	ldr.w	r8, [pc, #260]	; 80299fc <AMM_Init+0x1a0>
      AmmActiveCallback.next = NULL;
 80298fa:	7003      	strb	r3, [r0, #0]
 80298fc:	7043      	strb	r3, [r0, #1]
 80298fe:	7083      	strb	r3, [r0, #2]
 8029900:	70c3      	strb	r3, [r0, #3]
      AmmActiveCallback.prev = NULL;
 8029902:	7103      	strb	r3, [r0, #4]
 8029904:	7143      	strb	r3, [r0, #5]
 8029906:	7183      	strb	r3, [r0, #6]
 8029908:	71c3      	strb	r3, [r0, #7]
      AMM_RegisterBasicMemoryManager (&AmmBmmFunctionsHandler);
 802990a:	4628      	mov	r0, r5
      AmmBmmFunctionsHandler.Allocate = NULL;
 802990c:	e9c5 3300 	strd	r3, r3, [r5]
      p_AmmPoolAddress = NULL;
 8029910:	600b      	str	r3, [r1, #0]
      AmmPoolSize = 0x00;
 8029912:	6013      	str	r3, [r2, #0]
      AmmOccupiedSharedPoolSize = 0x00;
 8029914:	f8c9 3000 	str.w	r3, [r9]
      AmmRequiredVirtualMemorySize = 0x00;
 8029918:	603b      	str	r3, [r7, #0]
      AmmVirtualMemoryNumber = 0x00;
 802991a:	f8cb 3000 	str.w	r3, [fp]
      p_AmmVirtualMemoryList = NULL;
 802991e:	f8c8 3000 	str.w	r3, [r8]
      AmmBmmFunctionsHandler.Free = NULL;
 8029922:	60ab      	str	r3, [r5, #8]
      AMM_RegisterBasicMemoryManager (&AmmBmmFunctionsHandler);
 8029924:	f7fc f96e 	bl	8025c04 <AMM_RegisterBasicMemoryManager>
      if ((AmmBmmFunctionsHandler.Init == NULL)
 8029928:	682b      	ldr	r3, [r5, #0]
 802992a:	2b00      	cmp	r3, #0
 802992c:	d050      	beq.n	80299d0 <AMM_Init+0x174>
       || (AmmBmmFunctionsHandler.Allocate == NULL)
 802992e:	6868      	ldr	r0, [r5, #4]
 8029930:	2800      	cmp	r0, #0
 8029932:	d04d      	beq.n	80299d0 <AMM_Init+0x174>
       || (AmmBmmFunctionsHandler.Free == NULL))
 8029934:	68a8      	ldr	r0, [r5, #8]
 8029936:	2800      	cmp	r0, #0
 8029938:	d04a      	beq.n	80299d0 <AMM_Init+0x174>
        p_AmmPoolAddress = p_InitParams->p_PoolAddr;
 802993a:	6820      	ldr	r0, [r4, #0]
 802993c:	4929      	ldr	r1, [pc, #164]	; (80299e4 <AMM_Init+0x188>)
        AmmPoolSize = p_InitParams->PoolSize;
 802993e:	4a2a      	ldr	r2, [pc, #168]	; (80299e8 <AMM_Init+0x18c>)
        p_AmmPoolAddress = p_InitParams->p_PoolAddr;
 8029940:	6008      	str	r0, [r1, #0]
        AmmPoolSize = p_InitParams->PoolSize;
 8029942:	6861      	ldr	r1, [r4, #4]
 8029944:	6011      	str	r1, [r2, #0]
        AmmBmmFunctionsHandler.Init (p_AmmPoolAddress,
 8029946:	4798      	blx	r3
                                  (AmmBmmFunctionsHandler. Allocate (AMM_VIRTUAL_INFO_ELEMENT_SIZE
 8029948:	68a0      	ldr	r0, [r4, #8]
 802994a:	686b      	ldr	r3, [r5, #4]
 802994c:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 8029950:	4798      	blx	r3
        p_AmmVirtualMemoryList = (VirtualMemoryInfo_t *)
 8029952:	f8c8 0000 	str.w	r0, [r8]
        if ((p_AmmVirtualMemoryList == NULL) && (p_InitParams->VirtualMemoryNumber > 0))
 8029956:	b910      	cbnz	r0, 802995e <AMM_Init+0x102>
 8029958:	68a3      	ldr	r3, [r4, #8]
 802995a:	2b00      	cmp	r3, #0
 802995c:	d13a      	bne.n	80299d4 <AMM_Init+0x178>
          LST_init_head (&AmmPendingCallback);
 802995e:	481e      	ldr	r0, [pc, #120]	; (80299d8 <AMM_Init+0x17c>)
 8029960:	f000 ffc2 	bl	802a8e8 <LST_init_head>
          LST_init_head (&AmmActiveCallback);
 8029964:	481e      	ldr	r0, [pc, #120]	; (80299e0 <AMM_Init+0x184>)
 8029966:	f000 ffbf 	bl	802a8e8 <LST_init_head>
          AmmVirtualMemoryNumber = p_InitParams->VirtualMemoryNumber;
 802996a:	68a0      	ldr	r0, [r4, #8]
          AmmOccupiedSharedPoolSize = AmmOccupiedSharedPoolSize + (AMM_VIRTUAL_INFO_ELEMENT_SIZE
 802996c:	f8d9 3000 	ldr.w	r3, [r9]
                                                                   * AmmVirtualMemoryNumber);
 8029970:	eb00 0240 	add.w	r2, r0, r0, lsl #1
          AmmVirtualMemoryNumber = p_InitParams->VirtualMemoryNumber;
 8029974:	f8cb 0000 	str.w	r0, [fp]
          AmmOccupiedSharedPoolSize = AmmOccupiedSharedPoolSize + (AMM_VIRTUAL_INFO_ELEMENT_SIZE
 8029978:	eb04 04c0 	add.w	r4, r4, r0, lsl #3
          for (uint32_t memIdx = 0x00;
 802997c:	2000      	movs	r0, #0
          AmmOccupiedSharedPoolSize = AmmOccupiedSharedPoolSize + (AMM_VIRTUAL_INFO_ELEMENT_SIZE
 802997e:	4413      	add	r3, r2
            p_AmmVirtualMemoryList[memIdx].OccupiedSize = 0x00;
 8029980:	4602      	mov	r2, r0
          AmmOccupiedSharedPoolSize = AmmOccupiedSharedPoolSize + (AMM_VIRTUAL_INFO_ELEMENT_SIZE
 8029982:	f8c9 3000 	str.w	r3, [r9]
          for (uint32_t memIdx = 0x00;
 8029986:	6839      	ldr	r1, [r7, #0]
 8029988:	f8d8 3000 	ldr.w	r3, [r8]
 802998c:	42a6      	cmp	r6, r4
 802998e:	d106      	bne.n	802999e <AMM_Init+0x142>
 8029990:	b100      	cbz	r0, 8029994 <AMM_Init+0x138>
 8029992:	6039      	str	r1, [r7, #0]
          AmmInitialized = INITIALIZED;
 8029994:	2301      	movs	r3, #1
          error = AMM_ERROR_OK;
 8029996:	2000      	movs	r0, #0
          AmmInitialized = INITIALIZED;
 8029998:	f88a 3000 	strb.w	r3, [sl]
          error = AMM_ERROR_OK;
 802999c:	e781      	b.n	80298a2 <AMM_Init+0x46>
            p_AmmVirtualMemoryList[memIdx].Id = p_InitParams->a_VirtualMemoryConfigList[memIdx].Id;
 802999e:	7b30      	ldrb	r0, [r6, #12]
 80299a0:	330c      	adds	r3, #12
 80299a2:	f803 0c0c 	strb.w	r0, [r3, #-12]
            p_AmmVirtualMemoryList[memIdx].RequiredSize = p_InitParams->a_VirtualMemoryConfigList[memIdx].BufferSize;
 80299a6:	6930      	ldr	r0, [r6, #16]
            p_AmmVirtualMemoryList[memIdx].OccupiedSize = 0x00;
 80299a8:	f803 2c07 	strb.w	r2, [r3, #-7]
            p_AmmVirtualMemoryList[memIdx].RequiredSize = p_InitParams->a_VirtualMemoryConfigList[memIdx].BufferSize;
 80299ac:	f843 0c0b 	str.w	r0, [r3, #-11]
            AmmRequiredVirtualMemorySize = AmmRequiredVirtualMemorySize + p_AmmVirtualMemoryList[memIdx].RequiredSize;
 80299b0:	4401      	add	r1, r0
            p_AmmVirtualMemoryList[memIdx].OccupiedSize = 0x00;
 80299b2:	f803 2c06 	strb.w	r2, [r3, #-6]
 80299b6:	f803 2c05 	strb.w	r2, [r3, #-5]
 80299ba:	f803 2c04 	strb.w	r2, [r3, #-4]
            AmmRequiredVirtualMemorySize = AmmRequiredVirtualMemorySize + p_AmmVirtualMemoryList[memIdx].RequiredSize;
 80299be:	2001      	movs	r0, #1
 80299c0:	3608      	adds	r6, #8
 80299c2:	e7e3      	b.n	802998c <AMM_Init+0x130>
    error = AMM_ERROR_ALREADY_INIT;
 80299c4:	200c      	movs	r0, #12
 80299c6:	e76c      	b.n	80298a2 <AMM_Init+0x46>
    error = AMM_ERROR_BAD_POINTER;
 80299c8:	2002      	movs	r0, #2
 80299ca:	e76a      	b.n	80298a2 <AMM_Init+0x46>
    error = AMM_ERROR_BAD_POOL_CONFIG;
 80299cc:	2003      	movs	r0, #3
 80299ce:	e768      	b.n	80298a2 <AMM_Init+0x46>
        error = AMM_ERROR_BAD_BMM_REGISTRATION;
 80299d0:	2005      	movs	r0, #5
 80299d2:	e766      	b.n	80298a2 <AMM_Init+0x46>
          error = AMM_ERROR_BAD_BMM_ALLOCATION;
 80299d4:	2006      	movs	r0, #6
 80299d6:	e764      	b.n	80298a2 <AMM_Init+0x46>
 80299d8:	20009064 	.word	0x20009064
 80299dc:	20009050 	.word	0x20009050
 80299e0:	20009048 	.word	0x20009048
 80299e4:	20009078 	.word	0x20009078
 80299e8:	2000906c 	.word	0x2000906c
 80299ec:	20009070 	.word	0x20009070
 80299f0:	2000905c 	.word	0x2000905c
 80299f4:	20009060 	.word	0x20009060
 80299f8:	20009074 	.word	0x20009074
 80299fc:	2000907c 	.word	0x2000907c

08029a00 <AMM_Alloc>:
{
 8029a00:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8029a04:	461e      	mov	r6, r3
  if (AmmInitialized == NOT_INITIALIZED)
 8029a06:	4b52      	ldr	r3, [pc, #328]	; (8029b50 <AMM_Alloc+0x150>)
{
 8029a08:	4605      	mov	r5, r0
  if (AmmInitialized == NOT_INITIALIZED)
 8029a0a:	781b      	ldrb	r3, [r3, #0]
{
 8029a0c:	460c      	mov	r4, r1
 8029a0e:	4693      	mov	fp, r2
 8029a10:	b085      	sub	sp, #20
  if (AmmInitialized == NOT_INITIALIZED)
 8029a12:	2b00      	cmp	r3, #0
 8029a14:	f000 8098 	beq.w	8029b48 <AMM_Alloc+0x148>
  else if (BufferSize == 0)
 8029a18:	2900      	cmp	r1, #0
 8029a1a:	f000 8097 	beq.w	8029b4c <AMM_Alloc+0x14c>
  else if (VirtualMemoryId == AMM_NO_VIRTUAL_ID)
 8029a1e:	bb78      	cbnz	r0, 8029a80 <AMM_Alloc+0x80>
  __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
 8029a20:	f3ef 8710 	mrs	r7, PRIMASK
  __ASM volatile ("cpsid i" : : : "memory");
 8029a24:	b672      	cpsid	i
    if (BufferSize < (AmmPoolSize - AmmOccupiedSharedPoolSize - AmmRequiredVirtualMemorySize))
 8029a26:	f8df 813c 	ldr.w	r8, [pc, #316]	; 8029b64 <AMM_Alloc+0x164>
 8029a2a:	4a4a      	ldr	r2, [pc, #296]	; (8029b54 <AMM_Alloc+0x154>)
 8029a2c:	f8d8 3000 	ldr.w	r3, [r8]
 8029a30:	6812      	ldr	r2, [r2, #0]
 8029a32:	441a      	add	r2, r3
 8029a34:	4b48      	ldr	r3, [pc, #288]	; (8029b58 <AMM_Alloc+0x158>)
 8029a36:	681b      	ldr	r3, [r3, #0]
 8029a38:	1a9b      	subs	r3, r3, r2
 8029a3a:	428b      	cmp	r3, r1
 8029a3c:	d91b      	bls.n	8029a76 <AMM_Alloc+0x76>
      p_TmpAllocAddr = AmmBmmFunctionsHandler.Allocate (BufferSize + VIRTUAL_MEMORY_HEADER_SIZE);
 8029a3e:	4b47      	ldr	r3, [pc, #284]	; (8029b5c <AMM_Alloc+0x15c>)
 8029a40:	1c48      	adds	r0, r1, #1
 8029a42:	685b      	ldr	r3, [r3, #4]
 8029a44:	4798      	blx	r3
      if (p_TmpAllocAddr != NULL)
 8029a46:	b188      	cbz	r0, 8029a6c <AMM_Alloc+0x6c>
                                        & VIRTUAL_MEMORY_HEADER_BUFFER_SIZE_MASK);
 8029a48:	f024 437f 	bic.w	r3, r4, #4278190080	; 0xff000000
        *p_TmpAllocAddr = (uint32_t)(((uint32_t)VirtualMemoryId << VIRTUAL_MEMORY_HEADER_ID_POS)
 8029a4c:	f840 3b04 	str.w	r3, [r0], #4
        AmmOccupiedSharedPoolSize = AmmOccupiedSharedPoolSize + BufferSize + VIRTUAL_MEMORY_HEADER_SIZE;
 8029a50:	f8d8 3000 	ldr.w	r3, [r8]
        *pp_AllocBuffer = (uint32_t *)(p_TmpAllocAddr + VIRTUAL_MEMORY_HEADER_SIZE);
 8029a54:	f8cb 0000 	str.w	r0, [fp]
        AmmOccupiedSharedPoolSize = AmmOccupiedSharedPoolSize + BufferSize + VIRTUAL_MEMORY_HEADER_SIZE;
 8029a58:	3301      	adds	r3, #1
 8029a5a:	441c      	add	r4, r3
 8029a5c:	f8c8 4000 	str.w	r4, [r8]
  __ASM volatile ("MSR primask, %0" : : "r" (priMask) : "memory");
 8029a60:	f387 8810 	msr	PRIMASK, r7
}
 8029a64:	4628      	mov	r0, r5
}
 8029a66:	b005      	add	sp, #20
 8029a68:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
        pushPending (p_CallBackFunction);
 8029a6c:	4630      	mov	r0, r6
 8029a6e:	f7ff feed 	bl	802984c <pushPending>
        error = AMM_ERROR_ALLOCATION_FAILED;
 8029a72:	250b      	movs	r5, #11
 8029a74:	e7f4      	b.n	8029a60 <AMM_Alloc+0x60>
      pushPending (p_CallBackFunction);
 8029a76:	4630      	mov	r0, r6
 8029a78:	f7ff fee8 	bl	802984c <pushPending>
      error = AMM_ERROR_BAD_ALLOCATION_SIZE;
 8029a7c:	250a      	movs	r5, #10
 8029a7e:	e7ef      	b.n	8029a60 <AMM_Alloc+0x60>
  __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
 8029a80:	f3ef 8310 	mrs	r3, PRIMASK
 8029a84:	9302      	str	r3, [sp, #8]
  __ASM volatile ("cpsid i" : : : "memory");
 8029a86:	b672      	cpsid	i
    for (uint32_t memIdx = 0x00;
 8029a88:	2700      	movs	r7, #0
                                        & VIRTUAL_MEMORY_HEADER_BUFFER_SIZE_MASK);
 8029a8a:	f021 437f 	bic.w	r3, r1, #4278190080	; 0xff000000
                                      | ((BufferSize << VIRTUAL_MEMORY_HEADER_BUFFER_SIZE_POS)
 8029a8e:	ea43 6300 	orr.w	r3, r3, r0, lsl #24
  uint32_t selfAvailable = 0x00;
 8029a92:	46b9      	mov	r9, r7
    error = AMM_ERROR_UNKNOWN_ID;
 8029a94:	2009      	movs	r0, #9
      if (VirtualMemoryId == p_AmmVirtualMemoryList[memIdx].Id)
 8029a96:	f8df a0d0 	ldr.w	sl, [pc, #208]	; 8029b68 <AMM_Alloc+0x168>
                                      | ((BufferSize << VIRTUAL_MEMORY_HEADER_BUFFER_SIZE_POS)
 8029a9a:	9301      	str	r3, [sp, #4]
    for (uint32_t memIdx = 0x00;
 8029a9c:	4b30      	ldr	r3, [pc, #192]	; (8029b60 <AMM_Alloc+0x160>)
 8029a9e:	681b      	ldr	r3, [r3, #0]
 8029aa0:	42bb      	cmp	r3, r7
 8029aa2:	d901      	bls.n	8029aa8 <AMM_Alloc+0xa8>
         (memIdx < AmmVirtualMemoryNumber) && (error == AMM_ERROR_UNKNOWN_ID);
 8029aa4:	2809      	cmp	r0, #9
 8029aa6:	d003      	beq.n	8029ab0 <AMM_Alloc+0xb0>
  __ASM volatile ("MSR primask, %0" : : "r" (priMask) : "memory");
 8029aa8:	9b02      	ldr	r3, [sp, #8]
 8029aaa:	f383 8810 	msr	PRIMASK, r3
}
 8029aae:	e7da      	b.n	8029a66 <AMM_Alloc+0x66>
      if (VirtualMemoryId == p_AmmVirtualMemoryList[memIdx].Id)
 8029ab0:	f04f 080c 	mov.w	r8, #12
 8029ab4:	fb08 f807 	mul.w	r8, r8, r7
 8029ab8:	f8da 3000 	ldr.w	r3, [sl]
 8029abc:	eb03 0208 	add.w	r2, r3, r8
 8029ac0:	f813 3008 	ldrb.w	r3, [r3, r8]
 8029ac4:	42ab      	cmp	r3, r5
 8029ac6:	d138      	bne.n	8029b3a <AMM_Alloc+0x13a>
        if (p_AmmVirtualMemoryList[memIdx].OccupiedSize < p_AmmVirtualMemoryList[memIdx].RequiredSize)
 8029ac8:	f8d2 3005 	ldr.w	r3, [r2, #5]
 8029acc:	f8d2 2001 	ldr.w	r2, [r2, #1]
        if (BufferSize < (AmmPoolSize - AmmOccupiedSharedPoolSize - AmmRequiredVirtualMemorySize + selfAvailable))
 8029ad0:	4920      	ldr	r1, [pc, #128]	; (8029b54 <AMM_Alloc+0x154>)
        if (p_AmmVirtualMemoryList[memIdx].OccupiedSize < p_AmmVirtualMemoryList[memIdx].RequiredSize)
 8029ad2:	4293      	cmp	r3, r2
          selfAvailable = p_AmmVirtualMemoryList[memIdx].RequiredSize
 8029ad4:	bf38      	it	cc
 8029ad6:	eba2 0903 	subcc.w	r9, r2, r3
        if (BufferSize < (AmmPoolSize - AmmOccupiedSharedPoolSize - AmmRequiredVirtualMemorySize + selfAvailable))
 8029ada:	4b22      	ldr	r3, [pc, #136]	; (8029b64 <AMM_Alloc+0x164>)
 8029adc:	6809      	ldr	r1, [r1, #0]
 8029ade:	681a      	ldr	r2, [r3, #0]
 8029ae0:	4411      	add	r1, r2
 8029ae2:	4a1d      	ldr	r2, [pc, #116]	; (8029b58 <AMM_Alloc+0x158>)
 8029ae4:	6812      	ldr	r2, [r2, #0]
 8029ae6:	1a52      	subs	r2, r2, r1
 8029ae8:	444a      	add	r2, r9
 8029aea:	42a2      	cmp	r2, r4
 8029aec:	d927      	bls.n	8029b3e <AMM_Alloc+0x13e>
          p_TmpAllocAddr = AmmBmmFunctionsHandler.Allocate ((BufferSize + VIRTUAL_MEMORY_HEADER_SIZE));
 8029aee:	491b      	ldr	r1, [pc, #108]	; (8029b5c <AMM_Alloc+0x15c>)
 8029af0:	1c62      	adds	r2, r4, #1
 8029af2:	4610      	mov	r0, r2
 8029af4:	6849      	ldr	r1, [r1, #4]
 8029af6:	9203      	str	r2, [sp, #12]
 8029af8:	4788      	blx	r1
          if (p_TmpAllocAddr != NULL)
 8029afa:	b1d0      	cbz	r0, 8029b32 <AMM_Alloc+0x132>
            *p_TmpAllocAddr = (uint32_t)(((uint32_t)VirtualMemoryId << VIRTUAL_MEMORY_HEADER_ID_POS)
 8029afc:	9b01      	ldr	r3, [sp, #4]
            p_AmmVirtualMemoryList[memIdx].OccupiedSize = p_AmmVirtualMemoryList[memIdx].OccupiedSize
 8029afe:	f8da 1000 	ldr.w	r1, [sl]
            *p_TmpAllocAddr = (uint32_t)(((uint32_t)VirtualMemoryId << VIRTUAL_MEMORY_HEADER_ID_POS)
 8029b02:	f840 3b04 	str.w	r3, [r0], #4
            p_AmmVirtualMemoryList[memIdx].OccupiedSize = p_AmmVirtualMemoryList[memIdx].OccupiedSize
 8029b06:	4488      	add	r8, r1
            *pp_AllocBuffer = (uint32_t *)(p_TmpAllocAddr + VIRTUAL_MEMORY_HEADER_SIZE);
 8029b08:	f8cb 0000 	str.w	r0, [fp]
            p_AmmVirtualMemoryList[memIdx].OccupiedSize = p_AmmVirtualMemoryList[memIdx].OccupiedSize
 8029b0c:	f8d8 1005 	ldr.w	r1, [r8, #5]
                                                          + VIRTUAL_MEMORY_HEADER_SIZE;
 8029b10:	9a03      	ldr	r2, [sp, #12]
 8029b12:	440a      	add	r2, r1
            if (p_AmmVirtualMemoryList[memIdx].RequiredSize < p_AmmVirtualMemoryList[memIdx].OccupiedSize)
 8029b14:	f8d8 1001 	ldr.w	r1, [r8, #1]
            p_AmmVirtualMemoryList[memIdx].OccupiedSize = p_AmmVirtualMemoryList[memIdx].OccupiedSize
 8029b18:	f8c8 2005 	str.w	r2, [r8, #5]
            if (p_AmmVirtualMemoryList[memIdx].RequiredSize < p_AmmVirtualMemoryList[memIdx].OccupiedSize)
 8029b1c:	428a      	cmp	r2, r1
 8029b1e:	d906      	bls.n	8029b2e <AMM_Alloc+0x12e>
                                          + VIRTUAL_MEMORY_HEADER_SIZE;
 8029b20:	4b10      	ldr	r3, [pc, #64]	; (8029b64 <AMM_Alloc+0x164>)
 8029b22:	681a      	ldr	r2, [r3, #0]
 8029b24:	3201      	adds	r2, #1
 8029b26:	4422      	add	r2, r4
 8029b28:	eba2 0209 	sub.w	r2, r2, r9
              AmmOccupiedSharedPoolSize = AmmOccupiedSharedPoolSize
 8029b2c:	601a      	str	r2, [r3, #0]
            error = AMM_ERROR_OK;
 8029b2e:	2000      	movs	r0, #0
 8029b30:	e003      	b.n	8029b3a <AMM_Alloc+0x13a>
            pushPending (p_CallBackFunction);
 8029b32:	4630      	mov	r0, r6
 8029b34:	f7ff fe8a 	bl	802984c <pushPending>
            error = AMM_ERROR_ALLOCATION_FAILED;
 8029b38:	200b      	movs	r0, #11
         memIdx++)
 8029b3a:	3701      	adds	r7, #1
 8029b3c:	e7ae      	b.n	8029a9c <AMM_Alloc+0x9c>
          pushPending (p_CallBackFunction);
 8029b3e:	4630      	mov	r0, r6
 8029b40:	f7ff fe84 	bl	802984c <pushPending>
          error = AMM_ERROR_BAD_ALLOCATION_SIZE;
 8029b44:	200a      	movs	r0, #10
 8029b46:	e7f8      	b.n	8029b3a <AMM_Alloc+0x13a>
    error = AMM_ERROR_NOT_INIT;
 8029b48:	200d      	movs	r0, #13
 8029b4a:	e78c      	b.n	8029a66 <AMM_Alloc+0x66>
    error = AMM_ERROR_BAD_ALLOCATION_SIZE;
 8029b4c:	200a      	movs	r0, #10
 8029b4e:	e78a      	b.n	8029a66 <AMM_Alloc+0x66>
 8029b50:	2000905c 	.word	0x2000905c
 8029b54:	20009070 	.word	0x20009070
 8029b58:	2000906c 	.word	0x2000906c
 8029b5c:	20009050 	.word	0x20009050
 8029b60:	20009074 	.word	0x20009074
 8029b64:	20009060 	.word	0x20009060
 8029b68:	2000907c 	.word	0x2000907c

08029b6c <AMM_Free>:
{
 8029b6c:	b573      	push	{r0, r1, r4, r5, r6, lr}
  if (AmmInitialized == NOT_INITIALIZED)
 8029b6e:	4b20      	ldr	r3, [pc, #128]	; (8029bf0 <AMM_Free+0x84>)
 8029b70:	781b      	ldrb	r3, [r3, #0]
 8029b72:	2b00      	cmp	r3, #0
 8029b74:	d034      	beq.n	8029be0 <AMM_Free+0x74>
  else if (p_BufferAddr == NULL)
 8029b76:	2800      	cmp	r0, #0
 8029b78:	d034      	beq.n	8029be4 <AMM_Free+0x78>
  else if ((MASK_ALIGNED_32BITS & (uint32_t)p_BufferAddr) != 0)
 8029b7a:	f010 0603 	ands.w	r6, r0, #3
 8029b7e:	d133      	bne.n	8029be8 <AMM_Free+0x7c>
  else if ((p_BufferAddr > (p_AmmPoolAddress + AmmPoolSize))
 8029b80:	4b1c      	ldr	r3, [pc, #112]	; (8029bf4 <AMM_Free+0x88>)
 8029b82:	681a      	ldr	r2, [r3, #0]
 8029b84:	4b1c      	ldr	r3, [pc, #112]	; (8029bf8 <AMM_Free+0x8c>)
 8029b86:	681b      	ldr	r3, [r3, #0]
 8029b88:	eb02 0383 	add.w	r3, r2, r3, lsl #2
 8029b8c:	4298      	cmp	r0, r3
 8029b8e:	d82d      	bhi.n	8029bec <AMM_Free+0x80>
           || (p_BufferAddr < p_AmmPoolAddress))
 8029b90:	4282      	cmp	r2, r0
 8029b92:	d82b      	bhi.n	8029bec <AMM_Free+0x80>
  __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
 8029b94:	f3ef 8510 	mrs	r5, PRIMASK
  __ASM volatile ("cpsid i" : : : "memory");
 8029b98:	b672      	cpsid	i
    AmmBmmFunctionsHandler.Free(p_TmpAllocAddr);
 8029b9a:	4b18      	ldr	r3, [pc, #96]	; (8029bfc <AMM_Free+0x90>)
    allocatedSize = (*p_TmpAllocAddr >> VIRTUAL_MEMORY_HEADER_BUFFER_SIZE_POS) & VIRTUAL_MEMORY_HEADER_BUFFER_SIZE_MASK;
 8029b9c:	f850 4d04 	ldr.w	r4, [r0, #-4]!
    AmmBmmFunctionsHandler.Free(p_TmpAllocAddr);
 8029ba0:	689b      	ldr	r3, [r3, #8]
 8029ba2:	4798      	blx	r3
      AmmOccupiedSharedPoolSize = AmmOccupiedSharedPoolSize - allocatedSize - VIRTUAL_MEMORY_HEADER_SIZE;
 8029ba4:	4a16      	ldr	r2, [pc, #88]	; (8029c00 <AMM_Free+0x94>)
    allocatedSize = (*p_TmpAllocAddr >> VIRTUAL_MEMORY_HEADER_BUFFER_SIZE_POS) & VIRTUAL_MEMORY_HEADER_BUFFER_SIZE_MASK;
 8029ba6:	f024 447f 	bic.w	r4, r4, #4278190080	; 0xff000000
      AmmOccupiedSharedPoolSize = AmmOccupiedSharedPoolSize - allocatedSize - VIRTUAL_MEMORY_HEADER_SIZE;
 8029baa:	6813      	ldr	r3, [r2, #0]

void passPendingToActive (void)
{
  AMM_VirtualMemoryCallbackFunction_t * p_TmpElt = NULL;
 8029bac:	9601      	str	r6, [sp, #4]
      AmmOccupiedSharedPoolSize = AmmOccupiedSharedPoolSize - allocatedSize - VIRTUAL_MEMORY_HEADER_SIZE;
 8029bae:	3b01      	subs	r3, #1
 8029bb0:	1b1b      	subs	r3, r3, r4
  while (LST_is_empty (&AmmPendingCallback) == FALSE)
  {
    /* Remove the head element */
    LST_remove_head (&AmmPendingCallback, (tListNode**)&p_TmpElt);
    /* Add at the bottom */
    LST_insert_tail (&AmmActiveCallback, (tListNode *)p_TmpElt);
 8029bb2:	4e14      	ldr	r6, [pc, #80]	; (8029c04 <AMM_Free+0x98>)
  while (LST_is_empty (&AmmPendingCallback) == FALSE)
 8029bb4:	4c14      	ldr	r4, [pc, #80]	; (8029c08 <AMM_Free+0x9c>)
      AmmOccupiedSharedPoolSize = AmmOccupiedSharedPoolSize - allocatedSize - VIRTUAL_MEMORY_HEADER_SIZE;
 8029bb6:	6013      	str	r3, [r2, #0]
  while (LST_is_empty (&AmmPendingCallback) == FALSE)
 8029bb8:	4813      	ldr	r0, [pc, #76]	; (8029c08 <AMM_Free+0x9c>)
 8029bba:	f000 fe98 	bl	802a8ee <LST_is_empty>
 8029bbe:	b130      	cbz	r0, 8029bce <AMM_Free+0x62>
  __ASM volatile ("MSR primask, %0" : : "r" (priMask) : "memory");
 8029bc0:	f385 8810 	msr	PRIMASK, r5
    AMM_ProcessRequest();
 8029bc4:	f7fc f82c 	bl	8025c20 <AMM_ProcessRequest>
 8029bc8:	2000      	movs	r0, #0
}
 8029bca:	b002      	add	sp, #8
 8029bcc:	bd70      	pop	{r4, r5, r6, pc}
    LST_remove_head (&AmmPendingCallback, (tListNode**)&p_TmpElt);
 8029bce:	4620      	mov	r0, r4
 8029bd0:	a901      	add	r1, sp, #4
 8029bd2:	f000 feb9 	bl	802a948 <LST_remove_head>
    LST_insert_tail (&AmmActiveCallback, (tListNode *)p_TmpElt);
 8029bd6:	4630      	mov	r0, r6
 8029bd8:	9901      	ldr	r1, [sp, #4]
 8029bda:	f000 fe9e 	bl	802a91a <LST_insert_tail>
 8029bde:	e7eb      	b.n	8029bb8 <AMM_Free+0x4c>
    error = AMM_ERROR_NOT_INIT;
 8029be0:	200d      	movs	r0, #13
 8029be2:	e7f2      	b.n	8029bca <AMM_Free+0x5e>
    error = AMM_ERROR_BAD_POINTER;
 8029be4:	2002      	movs	r0, #2
 8029be6:	e7f0      	b.n	8029bca <AMM_Free+0x5e>
    error = AMM_ERROR_NOT_ALIGNED;
 8029be8:	2007      	movs	r0, #7
 8029bea:	e7ee      	b.n	8029bca <AMM_Free+0x5e>
    error = AMM_ERROR_OUT_OF_RANGE;
 8029bec:	2008      	movs	r0, #8
 8029bee:	e7ec      	b.n	8029bca <AMM_Free+0x5e>
 8029bf0:	2000905c 	.word	0x2000905c
 8029bf4:	20009078 	.word	0x20009078
 8029bf8:	2000906c 	.word	0x2000906c
 8029bfc:	20009050 	.word	0x20009050
 8029c00:	20009060 	.word	0x20009060
 8029c04:	20009048 	.word	0x20009048
 8029c08:	20009064 	.word	0x20009064

08029c0c <AMM_BackgroundProcess>:
{
 8029c0c:	b537      	push	{r0, r1, r2, r4, r5, lr}
  }
}

AMM_VirtualMemoryCallbackFunction_t * popActive (void)
{
  AMM_VirtualMemoryCallbackFunction_t * p_error = NULL;
 8029c0e:	2400      	movs	r4, #0

  if (LST_is_empty (&AmmActiveCallback) == FALSE)
 8029c10:	4d08      	ldr	r5, [pc, #32]	; (8029c34 <AMM_BackgroundProcess+0x28>)
 8029c12:	4808      	ldr	r0, [pc, #32]	; (8029c34 <AMM_BackgroundProcess+0x28>)
  AMM_VirtualMemoryCallbackFunction_t * p_error = NULL;
 8029c14:	9401      	str	r4, [sp, #4]
  if (LST_is_empty (&AmmActiveCallback) == FALSE)
 8029c16:	f000 fe6a 	bl	802a8ee <LST_is_empty>
 8029c1a:	b918      	cbnz	r0, 8029c24 <AMM_BackgroundProcess+0x18>
  {
    /* Remove last element */
    LST_remove_head (&AmmActiveCallback, (tListNode**)&p_error);
 8029c1c:	4628      	mov	r0, r5
 8029c1e:	a901      	add	r1, sp, #4
 8029c20:	f000 fe92 	bl	802a948 <LST_remove_head>
  }

  return p_error;
 8029c24:	9b01      	ldr	r3, [sp, #4]
    if (p_tmpCallback != NULL)
 8029c26:	b113      	cbz	r3, 8029c2e <AMM_BackgroundProcess+0x22>
      p_tmpCallback->Callback();
 8029c28:	689b      	ldr	r3, [r3, #8]
 8029c2a:	4798      	blx	r3
  }while (p_tmpCallback != NULL);
 8029c2c:	e7f1      	b.n	8029c12 <AMM_BackgroundProcess+0x6>
}
 8029c2e:	b003      	add	sp, #12
 8029c30:	bd30      	pop	{r4, r5, pc}
 8029c32:	bf00      	nop
 8029c34:	20009048 	.word	0x20009048

08029c38 <prvInsertBlockIntoFreeList>:
    xBlockAllocatedBit = ( ( size_t ) 1 ) << ( ( sizeof( size_t ) * heapBITS_PER_BYTE ) - 1 );
}
/*-----------------------------------------------------------*/

static void prvInsertBlockIntoFreeList( BlockLink_t * pxBlockToInsert ) /* PRIVILEGED_FUNCTION */
{
 8029c38:	b510      	push	{r4, lr}
    BlockLink_t * pxIterator;
    uint8_t * puc;

    /* Iterate through the list until a block is found that has a higher address
     * than the block being inserted. */
    for( pxIterator = &xStart; pxIterator->pxNextFreeBlock < pxBlockToInsert; pxIterator = pxIterator->pxNextFreeBlock )
 8029c3a:	4b0f      	ldr	r3, [pc, #60]	; (8029c78 <prvInsertBlockIntoFreeList+0x40>)
 8029c3c:	461a      	mov	r2, r3
 8029c3e:	681b      	ldr	r3, [r3, #0]
 8029c40:	4283      	cmp	r3, r0
 8029c42:	d3fb      	bcc.n	8029c3c <prvInsertBlockIntoFreeList+0x4>

    /* Do the block being inserted, and the block it is being inserted after
     * make a contiguous block of memory? */
    puc = ( uint8_t * ) pxIterator;

    if( ( puc + pxIterator->xBlockSize ) == ( uint8_t * ) pxBlockToInsert )
 8029c44:	6854      	ldr	r4, [r2, #4]
 8029c46:	1911      	adds	r1, r2, r4
 8029c48:	4288      	cmp	r0, r1
    {
        pxIterator->xBlockSize += pxBlockToInsert->xBlockSize;
 8029c4a:	bf01      	itttt	eq
 8029c4c:	6841      	ldreq	r1, [r0, #4]
 8029c4e:	4610      	moveq	r0, r2
 8029c50:	1909      	addeq	r1, r1, r4
 8029c52:	6051      	streq	r1, [r2, #4]

    /* Do the block being inserted, and the block it is being inserted before
     * make a contiguous block of memory? */
    puc = ( uint8_t * ) pxBlockToInsert;

    if( ( puc + pxBlockToInsert->xBlockSize ) == ( uint8_t * ) pxIterator->pxNextFreeBlock )
 8029c54:	6844      	ldr	r4, [r0, #4]
 8029c56:	1901      	adds	r1, r0, r4
 8029c58:	428b      	cmp	r3, r1
 8029c5a:	d107      	bne.n	8029c6c <prvInsertBlockIntoFreeList+0x34>
    {
        if( pxIterator->pxNextFreeBlock != pxEnd )
 8029c5c:	4907      	ldr	r1, [pc, #28]	; (8029c7c <prvInsertBlockIntoFreeList+0x44>)
 8029c5e:	6809      	ldr	r1, [r1, #0]
 8029c60:	428b      	cmp	r3, r1
        {
            /* Form one big block from the two blocks. */
            pxBlockToInsert->xBlockSize += pxIterator->pxNextFreeBlock->xBlockSize;
 8029c62:	bf1f      	itttt	ne
 8029c64:	6859      	ldrne	r1, [r3, #4]
            pxBlockToInsert->pxNextFreeBlock = pxIterator->pxNextFreeBlock->pxNextFreeBlock;
 8029c66:	681b      	ldrne	r3, [r3, #0]
            pxBlockToInsert->xBlockSize += pxIterator->pxNextFreeBlock->xBlockSize;
 8029c68:	1909      	addne	r1, r1, r4
 8029c6a:	6041      	strne	r1, [r0, #4]

    /* If the block being inserted plugged a gab, so was merged with the block
     * before and the block after, then it's pxNextFreeBlock pointer will have
     * already been set, and should not be set here as that would make it point
     * to itself. */
    if( pxIterator != pxBlockToInsert )
 8029c6c:	4290      	cmp	r0, r2
        pxBlockToInsert->pxNextFreeBlock = pxIterator->pxNextFreeBlock;
 8029c6e:	6003      	str	r3, [r0, #0]
    {
        pxIterator->pxNextFreeBlock = pxBlockToInsert;
 8029c70:	bf18      	it	ne
 8029c72:	6010      	strne	r0, [r2, #0]
    }
    else
    {
        mtCOVERAGE_TEST_MARKER();
    }
}
 8029c74:	bd10      	pop	{r4, pc}
 8029c76:	bf00      	nop
 8029c78:	20009098 	.word	0x20009098
 8029c7c:	20009080 	.word	0x20009080

08029c80 <UTIL_MM_GetBuffer>:
        if( ( xWantedSize & xBlockAllocatedBit ) == 0 )
 8029c80:	4b24      	ldr	r3, [pc, #144]	; (8029d14 <UTIL_MM_GetBuffer+0x94>)
{
 8029c82:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
        if( ( xWantedSize & xBlockAllocatedBit ) == 0 )
 8029c86:	681f      	ldr	r7, [r3, #0]
 8029c88:	4207      	tst	r7, r0
 8029c8a:	d140      	bne.n	8029d0e <UTIL_MM_GetBuffer+0x8e>
            if( xWantedSize > 0 )
 8029c8c:	2800      	cmp	r0, #0
 8029c8e:	d03e      	beq.n	8029d0e <UTIL_MM_GetBuffer+0x8e>
                xWantedSize += xHeapStructSize;
 8029c90:	f100 0308 	add.w	r3, r0, #8
                if( ( xWantedSize & portBYTE_ALIGNMENT_MASK ) != 0x00 )
 8029c94:	0742      	lsls	r2, r0, #29
                    xWantedSize += ( portBYTE_ALIGNMENT - ( xWantedSize & portBYTE_ALIGNMENT_MASK ) );
 8029c96:	bf1c      	itt	ne
 8029c98:	f023 0307 	bicne.w	r3, r3, #7
 8029c9c:	3308      	addne	r3, #8
            if( ( xWantedSize > 0 ) && ( xWantedSize <= xFreeBytesRemaining ) )
 8029c9e:	2b00      	cmp	r3, #0
 8029ca0:	d035      	beq.n	8029d0e <UTIL_MM_GetBuffer+0x8e>
 8029ca2:	f8df 8084 	ldr.w	r8, [pc, #132]	; 8029d28 <UTIL_MM_GetBuffer+0xa8>
 8029ca6:	f8d8 6000 	ldr.w	r6, [r8]
 8029caa:	429e      	cmp	r6, r3
 8029cac:	d32f      	bcc.n	8029d0e <UTIL_MM_GetBuffer+0x8e>
                pxBlock = xStart.pxNextFreeBlock;
 8029cae:	4a1a      	ldr	r2, [pc, #104]	; (8029d18 <UTIL_MM_GetBuffer+0x98>)
 8029cb0:	6815      	ldr	r5, [r2, #0]
                while( ( pxBlock->xBlockSize < xWantedSize ) && ( pxBlock->pxNextFreeBlock != NULL ) )
 8029cb2:	6868      	ldr	r0, [r5, #4]
 8029cb4:	4298      	cmp	r0, r3
 8029cb6:	d201      	bcs.n	8029cbc <UTIL_MM_GetBuffer+0x3c>
 8029cb8:	6829      	ldr	r1, [r5, #0]
 8029cba:	bb29      	cbnz	r1, 8029d08 <UTIL_MM_GetBuffer+0x88>
                if( pxBlock != pxEnd )
 8029cbc:	4917      	ldr	r1, [pc, #92]	; (8029d1c <UTIL_MM_GetBuffer+0x9c>)
 8029cbe:	6809      	ldr	r1, [r1, #0]
 8029cc0:	42a9      	cmp	r1, r5
 8029cc2:	d024      	beq.n	8029d0e <UTIL_MM_GetBuffer+0x8e>
                    pxPreviousBlock->pxNextFreeBlock = pxBlock->pxNextFreeBlock;
 8029cc4:	6829      	ldr	r1, [r5, #0]
                    pvReturn = ( void * ) ( ( ( uint8_t * ) pxPreviousBlock->pxNextFreeBlock ) + xHeapStructSize );
 8029cc6:	6814      	ldr	r4, [r2, #0]
                    pxPreviousBlock->pxNextFreeBlock = pxBlock->pxNextFreeBlock;
 8029cc8:	6011      	str	r1, [r2, #0]
                    if( ( pxBlock->xBlockSize - xWantedSize ) > heapMINIMUM_BLOCK_SIZE )
 8029cca:	1ac2      	subs	r2, r0, r3
 8029ccc:	2a10      	cmp	r2, #16
                    pvReturn = ( void * ) ( ( ( uint8_t * ) pxPreviousBlock->pxNextFreeBlock ) + xHeapStructSize );
 8029cce:	f104 0408 	add.w	r4, r4, #8
                    if( ( pxBlock->xBlockSize - xWantedSize ) > heapMINIMUM_BLOCK_SIZE )
 8029cd2:	d904      	bls.n	8029cde <UTIL_MM_GetBuffer+0x5e>
                        pxNewBlockLink = ( void * ) ( ( ( uint8_t * ) pxBlock ) + xWantedSize );
 8029cd4:	18e8      	adds	r0, r5, r3
                        pxNewBlockLink->xBlockSize = pxBlock->xBlockSize - xWantedSize;
 8029cd6:	6042      	str	r2, [r0, #4]
                        pxBlock->xBlockSize = xWantedSize;
 8029cd8:	606b      	str	r3, [r5, #4]
                        prvInsertBlockIntoFreeList( pxNewBlockLink );
 8029cda:	f7ff ffad 	bl	8029c38 <prvInsertBlockIntoFreeList>
                    pxBlock->pxNextFreeBlock = NULL;
 8029cde:	2300      	movs	r3, #0
                    xFreeBytesRemaining -= pxBlock->xBlockSize;
 8029ce0:	686a      	ldr	r2, [r5, #4]
                    if( xFreeBytesRemaining < xMinimumEverFreeBytesRemaining )
 8029ce2:	490f      	ldr	r1, [pc, #60]	; (8029d20 <UTIL_MM_GetBuffer+0xa0>)
                    xFreeBytesRemaining -= pxBlock->xBlockSize;
 8029ce4:	1ab6      	subs	r6, r6, r2
                    pxBlock->xBlockSize |= xBlockAllocatedBit;
 8029ce6:	4317      	orrs	r7, r2
                    xNumberOfSuccessfulAllocations++;
 8029ce8:	4a0e      	ldr	r2, [pc, #56]	; (8029d24 <UTIL_MM_GetBuffer+0xa4>)
                    if( xFreeBytesRemaining < xMinimumEverFreeBytesRemaining )
 8029cea:	6808      	ldr	r0, [r1, #0]
                    pxBlock->pxNextFreeBlock = NULL;
 8029cec:	602b      	str	r3, [r5, #0]
                    xNumberOfSuccessfulAllocations++;
 8029cee:	6813      	ldr	r3, [r2, #0]
                    if( xFreeBytesRemaining < xMinimumEverFreeBytesRemaining )
 8029cf0:	4286      	cmp	r6, r0
                    xNumberOfSuccessfulAllocations++;
 8029cf2:	f103 0301 	add.w	r3, r3, #1
                    xFreeBytesRemaining -= pxBlock->xBlockSize;
 8029cf6:	f8c8 6000 	str.w	r6, [r8]
                        xMinimumEverFreeBytesRemaining = xFreeBytesRemaining;
 8029cfa:	bf38      	it	cc
 8029cfc:	600e      	strcc	r6, [r1, #0]
                    pxBlock->xBlockSize |= xBlockAllocatedBit;
 8029cfe:	606f      	str	r7, [r5, #4]
                    xNumberOfSuccessfulAllocations++;
 8029d00:	6013      	str	r3, [r2, #0]
}
 8029d02:	4620      	mov	r0, r4
 8029d04:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8029d08:	462a      	mov	r2, r5
 8029d0a:	460d      	mov	r5, r1
 8029d0c:	e7d1      	b.n	8029cb2 <UTIL_MM_GetBuffer+0x32>
    void * pvReturn = NULL;
 8029d0e:	2400      	movs	r4, #0
    return pvReturn;
 8029d10:	e7f7      	b.n	8029d02 <UTIL_MM_GetBuffer+0x82>
 8029d12:	bf00      	nop
 8029d14:	20009084 	.word	0x20009084
 8029d18:	20009098 	.word	0x20009098
 8029d1c:	20009080 	.word	0x20009080
 8029d20:	2000908c 	.word	0x2000908c
 8029d24:	20009090 	.word	0x20009090
 8029d28:	20009088 	.word	0x20009088

08029d2c <UTIL_MM_ReleaseBuffer>:
{
 8029d2c:	b508      	push	{r3, lr}
    if( pv != NULL )
 8029d2e:	b1b8      	cbz	r0, 8029d60 <UTIL_MM_ReleaseBuffer+0x34>
        if( ( pxLink->xBlockSize & xBlockAllocatedBit ) != 0 )
 8029d30:	4a0c      	ldr	r2, [pc, #48]	; (8029d64 <UTIL_MM_ReleaseBuffer+0x38>)
 8029d32:	f850 3c04 	ldr.w	r3, [r0, #-4]
 8029d36:	6812      	ldr	r2, [r2, #0]
 8029d38:	4213      	tst	r3, r2
 8029d3a:	d011      	beq.n	8029d60 <UTIL_MM_ReleaseBuffer+0x34>
            if( pxLink->pxNextFreeBlock == NULL )
 8029d3c:	f850 1c08 	ldr.w	r1, [r0, #-8]
 8029d40:	b971      	cbnz	r1, 8029d60 <UTIL_MM_ReleaseBuffer+0x34>
                    xFreeBytesRemaining += pxLink->xBlockSize;
 8029d42:	4909      	ldr	r1, [pc, #36]	; (8029d68 <UTIL_MM_ReleaseBuffer+0x3c>)
                pxLink->xBlockSize &= ~xBlockAllocatedBit;
 8029d44:	ea23 0302 	bic.w	r3, r3, r2
                    xFreeBytesRemaining += pxLink->xBlockSize;
 8029d48:	680a      	ldr	r2, [r1, #0]
                pxLink->xBlockSize &= ~xBlockAllocatedBit;
 8029d4a:	f840 3c04 	str.w	r3, [r0, #-4]
                    xFreeBytesRemaining += pxLink->xBlockSize;
 8029d4e:	4413      	add	r3, r2
                    prvInsertBlockIntoFreeList( ( ( BlockLink_t * ) pxLink ) );
 8029d50:	3808      	subs	r0, #8
                    xFreeBytesRemaining += pxLink->xBlockSize;
 8029d52:	600b      	str	r3, [r1, #0]
                    prvInsertBlockIntoFreeList( ( ( BlockLink_t * ) pxLink ) );
 8029d54:	f7ff ff70 	bl	8029c38 <prvInsertBlockIntoFreeList>
                    xNumberOfSuccessfulFrees++;
 8029d58:	4a04      	ldr	r2, [pc, #16]	; (8029d6c <UTIL_MM_ReleaseBuffer+0x40>)
 8029d5a:	6813      	ldr	r3, [r2, #0]
 8029d5c:	3301      	adds	r3, #1
 8029d5e:	6013      	str	r3, [r2, #0]
}
 8029d60:	bd08      	pop	{r3, pc}
 8029d62:	bf00      	nop
 8029d64:	20009084 	.word	0x20009084
 8029d68:	20009088 	.word	0x20009088
 8029d6c:	20009094 	.word	0x20009094

08029d70 <UTIL_MM_Init>:
    if( ( uxAddress & portBYTE_ALIGNMENT_MASK ) != 0 )
 8029d70:	0743      	lsls	r3, r0, #29
 8029d72:	d005      	beq.n	8029d80 <UTIL_MM_Init+0x10>
        uxAddress += ( portBYTE_ALIGNMENT - 1 );
 8029d74:	1dc3      	adds	r3, r0, #7
        uxAddress &= ~( ( size_t ) portBYTE_ALIGNMENT_MASK );
 8029d76:	f023 0307 	bic.w	r3, r3, #7
        xTotalHeapSize -= uxAddress - ( size_t ) p_pool;
 8029d7a:	4401      	add	r1, r0
        uxAddress &= ~( ( size_t ) portBYTE_ALIGNMENT_MASK );
 8029d7c:	4618      	mov	r0, r3
        xTotalHeapSize -= uxAddress - ( size_t ) p_pool;
 8029d7e:	1ac9      	subs	r1, r1, r3
    xStart.xBlockSize = ( size_t ) 0;
 8029d80:	2200      	movs	r2, #0
    xStart.pxNextFreeBlock = ( void * ) pucAlignedHeap;
 8029d82:	4b0b      	ldr	r3, [pc, #44]	; (8029db0 <UTIL_MM_Init+0x40>)
 8029d84:	6018      	str	r0, [r3, #0]
    xStart.xBlockSize = ( size_t ) 0;
 8029d86:	605a      	str	r2, [r3, #4]
    uxAddress = ( ( size_t ) pucAlignedHeap ) + xTotalHeapSize;
 8029d88:	1843      	adds	r3, r0, r1
    uxAddress -= xHeapStructSize;
 8029d8a:	3b08      	subs	r3, #8
    uxAddress &= ~( ( size_t ) portBYTE_ALIGNMENT_MASK );
 8029d8c:	f023 0307 	bic.w	r3, r3, #7
    pxEnd = ( void * ) uxAddress;
 8029d90:	4908      	ldr	r1, [pc, #32]	; (8029db4 <UTIL_MM_Init+0x44>)
    pxEnd->pxNextFreeBlock = NULL;
 8029d92:	e9c3 2200 	strd	r2, r2, [r3]
    pxFirstFreeBlock->xBlockSize = uxAddress - ( size_t ) pxFirstFreeBlock;
 8029d96:	1a1a      	subs	r2, r3, r0
    pxFirstFreeBlock->pxNextFreeBlock = pxEnd;
 8029d98:	e9c0 3200 	strd	r3, r2, [r0]
    pxEnd = ( void * ) uxAddress;
 8029d9c:	600b      	str	r3, [r1, #0]
    xMinimumEverFreeBytesRemaining = pxFirstFreeBlock->xBlockSize;
 8029d9e:	4b06      	ldr	r3, [pc, #24]	; (8029db8 <UTIL_MM_Init+0x48>)
 8029da0:	601a      	str	r2, [r3, #0]
    xFreeBytesRemaining = pxFirstFreeBlock->xBlockSize;
 8029da2:	4b06      	ldr	r3, [pc, #24]	; (8029dbc <UTIL_MM_Init+0x4c>)
 8029da4:	601a      	str	r2, [r3, #0]
    xBlockAllocatedBit = ( ( size_t ) 1 ) << ( ( sizeof( size_t ) * heapBITS_PER_BYTE ) - 1 );
 8029da6:	f04f 4200 	mov.w	r2, #2147483648	; 0x80000000
 8029daa:	4b05      	ldr	r3, [pc, #20]	; (8029dc0 <UTIL_MM_Init+0x50>)
 8029dac:	601a      	str	r2, [r3, #0]
}
 8029dae:	4770      	bx	lr
 8029db0:	20009098 	.word	0x20009098
 8029db4:	20009080 	.word	0x20009080
 8029db8:	2000908c 	.word	0x2000908c
 8029dbc:	20009088 	.word	0x20009088
 8029dc0:	20009084 	.word	0x20009084

08029dc4 <NVM_Init>:
#else
void NVM_Init( uint32_t* buffer )
#endif
{
  /* Save buffer info */
  NVM_buffer = (uint32_t*)buffer;
 8029dc4:	4b07      	ldr	r3, [pc, #28]	; (8029de4 <NVM_Init+0x20>)
#if CFG_NVM_ALIGN != 0
  NVM_size = size;
  NVM_max_size = 2*max_size;
 8029dc6:	0052      	lsls	r2, r2, #1
  NVM_buffer = (uint32_t*)buffer;
 8029dc8:	6018      	str	r0, [r3, #0]
  NVM_size = size;
 8029dca:	4b07      	ldr	r3, [pc, #28]	; (8029de8 <NVM_Init+0x24>)
  NVM_max_size = 2*max_size;
 8029dcc:	b292      	uxth	r2, r2
  NVM_size = size;
 8029dce:	8019      	strh	r1, [r3, #0]
  NVM_max_size = 2*max_size;
 8029dd0:	4b06      	ldr	r3, [pc, #24]	; (8029dec <NVM_Init+0x28>)
 8029dd2:	801a      	strh	r2, [r3, #0]
  NVM_buffer[2*size] = 0;
 8029dd4:	2300      	movs	r3, #0
 8029dd6:	f840 3031 	str.w	r3, [r0, r1, lsl #3]
#else
  NVM_max_size = CFG_NVM_MAX_SIZE;
#endif

  /* Initialize warning trigger level */
  NVM_trig_level = NVM_max_size - 1;
 8029dda:	4b05      	ldr	r3, [pc, #20]	; (8029df0 <NVM_Init+0x2c>)
 8029ddc:	3a01      	subs	r2, #1
 8029dde:	601a      	str	r2, [r3, #0]
}
 8029de0:	4770      	bx	lr
 8029de2:	bf00      	nop
 8029de4:	200090a0 	.word	0x200090a0
 8029de8:	200090ac 	.word	0x200090ac
 8029dec:	200090a4 	.word	0x200090a4
 8029df0:	200090b0 	.word	0x200090b0

08029df4 <NVM_Get>:
int NVM_Get( uint8_t mode,
             uint8_t type,
             uint16_t offset,
             uint8_t* data,
             uint16_t size )
{
 8029df4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
  uint32_t *ptr, next;
  int remain_size, copy_size;

  /* Point at buffer start */
  ptr = NVM_buffer;
 8029df6:	4c29      	ldr	r4, [pc, #164]	; (8029e9c <NVM_Get+0xa8>)
 8029df8:	4e29      	ldr	r6, [pc, #164]	; (8029ea0 <NVM_Get+0xac>)
 8029dfa:	6825      	ldr	r5, [r4, #0]
    NVM_offset = 0;
  }
  else
  {
    /* Check current offset */
    if  ( NVM_offset >= NVM_max_size - 1 )
 8029dfc:	4c29      	ldr	r4, [pc, #164]	; (8029ea4 <NVM_Get+0xb0>)
 8029dfe:	8827      	ldrh	r7, [r4, #0]
  if ( mode == NVM_FIRST )
 8029e00:	bb08      	cbnz	r0, 8029e46 <NVM_Get+0x52>
    NVM_offset = 0;
 8029e02:	6030      	str	r0, [r6, #0]
        return NVM_ERROR;
      }
    }

    /* Search the first next record with matching type */
    while ( !(NVM_BLANK(ptr) || (NVM_VALID(ptr) && (NVM_TYPE(ptr) == type))) )
 8029e04:	682c      	ldr	r4, [r5, #0]
 8029e06:	b12c      	cbz	r4, 8029e14 <NVM_Get+0x20>
 8029e08:	0e20      	lsrs	r0, r4, #24
 8029e0a:	d03b      	beq.n	8029e84 <NVM_Get+0x90>
 8029e0c:	f3c4 4007 	ubfx	r0, r4, #16, #8
 8029e10:	4288      	cmp	r0, r1
 8029e12:	d137      	bne.n	8029e84 <NVM_Get+0x90>
       return NVM_ERROR;
      }
    }
  }

  if ( NVM_BLANK(ptr) )
 8029e14:	682c      	ldr	r4, [r5, #0]
 8029e16:	b1ec      	cbz	r4, 8029e54 <NVM_Get+0x60>
  {
    /* Return if we have reached the end of data in the buffer */
    return NVM_EOF;
  }

  if ( !(NVM_VALID(ptr) && (NVM_TYPE(ptr) == type)) )
 8029e18:	0e20      	lsrs	r0, r4, #24
 8029e1a:	d02f      	beq.n	8029e7c <NVM_Get+0x88>
 8029e1c:	f3c4 4007 	ubfx	r0, r4, #16, #8
 8029e20:	4288      	cmp	r0, r1
 8029e22:	d12b      	bne.n	8029e7c <NVM_Get+0x88>
    /* Return if the record is not valid (memory corruption case) */
    return NVM_ERROR;
  }

  /* Compute the record remaining size (after the offset) */
  remain_size = (int)NVM_SIZE(ptr) - (int)offset;
 8029e24:	b2a4      	uxth	r4, r4
 8029e26:	1aa4      	subs	r4, r4, r2

  /* Compute the number of bytes to copy */
  copy_size = 0;

  if ( remain_size > 0 )
 8029e28:	2c00      	cmp	r4, #0
 8029e2a:	dd35      	ble.n	8029e98 <NVM_Get+0xa4>
  {
    copy_size = (int)size;

    if ( remain_size < copy_size )
 8029e2c:	f8bd 1018 	ldrh.w	r1, [sp, #24]
 8029e30:	428c      	cmp	r4, r1
 8029e32:	bfa8      	it	ge
 8029e34:	460c      	movge	r4, r1
    {
      copy_size = remain_size;
    }

    /* Retrieve the record data */
    if ( data )
 8029e36:	b31b      	cbz	r3, 8029e80 <NVM_Get+0x8c>
    {
      memcpy( data, ((uint8_t*)ptr) + 4 + offset, copy_size );
 8029e38:	1d11      	adds	r1, r2, #4
 8029e3a:	4618      	mov	r0, r3
 8029e3c:	4622      	mov	r2, r4
 8029e3e:	4429      	add	r1, r5
 8029e40:	f007 f88e 	bl	8030f60 <memcpy>
 8029e44:	e01c      	b.n	8029e80 <NVM_Get+0x8c>
    if  ( NVM_offset >= NVM_max_size - 1 )
 8029e46:	6834      	ldr	r4, [r6, #0]
 8029e48:	f107 3cff 	add.w	ip, r7, #4294967295	; 0xffffffff
 8029e4c:	45a4      	cmp	ip, r4
 8029e4e:	d804      	bhi.n	8029e5a <NVM_Get+0x66>
      NVM_offset = 0;
 8029e50:	2300      	movs	r3, #0
 8029e52:	6033      	str	r3, [r6, #0]
    return NVM_EOF;
 8029e54:	f06f 0402 	mvn.w	r4, #2
 8029e58:	e012      	b.n	8029e80 <NVM_Get+0x8c>
  if ( mode != NVM_CURRENT )
 8029e5a:	2802      	cmp	r0, #2
    ptr += NVM_offset;
 8029e5c:	eb05 0584 	add.w	r5, r5, r4, lsl #2
  if ( mode != NVM_CURRENT )
 8029e60:	d0d8      	beq.n	8029e14 <NVM_Get+0x20>
    if ( mode == NVM_NEXT )
 8029e62:	2801      	cmp	r0, #1
 8029e64:	d1ce      	bne.n	8029e04 <NVM_Get+0x10>
      next = NVM_OFFSET(NVM_SIZE(ptr));
 8029e66:	8828      	ldrh	r0, [r5, #0]
 8029e68:	300b      	adds	r0, #11
      ptr += next;
 8029e6a:	f020 0c07 	bic.w	ip, r0, #7
      next = NVM_OFFSET(NVM_SIZE(ptr));
 8029e6e:	08c0      	lsrs	r0, r0, #3
      ptr += next;
 8029e70:	4465      	add	r5, ip
      NVM_offset += next;
 8029e72:	eb04 0440 	add.w	r4, r4, r0, lsl #1
      if  ( NVM_offset >= NVM_max_size )
 8029e76:	42bc      	cmp	r4, r7
      NVM_offset += next;
 8029e78:	6034      	str	r4, [r6, #0]
      if  ( NVM_offset >= NVM_max_size )
 8029e7a:	d3c3      	bcc.n	8029e04 <NVM_Get+0x10>
        return NVM_ERROR;
 8029e7c:	f06f 0404 	mvn.w	r4, #4
    }
  }

  /* Return the number of bytes copied */
  return copy_size;
}
 8029e80:	4620      	mov	r0, r4
 8029e82:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
      next = NVM_OFFSET(NVM_SIZE(ptr));
 8029e84:	b2a4      	uxth	r4, r4
 8029e86:	340b      	adds	r4, #11
      ptr += next;
 8029e88:	f024 0007 	bic.w	r0, r4, #7
 8029e8c:	4405      	add	r5, r0
      NVM_offset += next;
 8029e8e:	6830      	ldr	r0, [r6, #0]
      next = NVM_OFFSET(NVM_SIZE(ptr));
 8029e90:	08e4      	lsrs	r4, r4, #3
      NVM_offset += next;
 8029e92:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 8029e96:	e7ee      	b.n	8029e76 <NVM_Get+0x82>
  copy_size = 0;
 8029e98:	2400      	movs	r4, #0
 8029e9a:	e7f1      	b.n	8029e80 <NVM_Get+0x8c>
 8029e9c:	200090a0 	.word	0x200090a0
 8029ea0:	200090a8 	.word	0x200090a8
 8029ea4:	200090a4 	.word	0x200090a4

08029ea8 <NVM_Compare>:
/*****************************************************************************/

int NVM_Compare( uint16_t offset,
                 const uint8_t* data,
                 uint16_t size )
{
 8029ea8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8029eaa:	4603      	mov	r3, r0

  /* Point on the current record */
  ptr = NVM_buffer + NVM_offset;

  /* Check current position in the database */
  if  ( (NVM_offset >= NVM_max_size - 1) || NVM_BLANK(ptr) )
 8029eac:	4e0f      	ldr	r6, [pc, #60]	; (8029eec <NVM_Compare+0x44>)
{
 8029eae:	4608      	mov	r0, r1
  ptr = NVM_buffer + NVM_offset;
 8029eb0:	490f      	ldr	r1, [pc, #60]	; (8029ef0 <NVM_Compare+0x48>)
  if  ( (NVM_offset >= NVM_max_size - 1) || NVM_BLANK(ptr) )
 8029eb2:	8836      	ldrh	r6, [r6, #0]
  ptr = NVM_buffer + NVM_offset;
 8029eb4:	680d      	ldr	r5, [r1, #0]
 8029eb6:	490f      	ldr	r1, [pc, #60]	; (8029ef4 <NVM_Compare+0x4c>)
  if  ( (NVM_offset >= NVM_max_size - 1) || NVM_BLANK(ptr) )
 8029eb8:	3e01      	subs	r6, #1
  ptr = NVM_buffer + NVM_offset;
 8029eba:	680f      	ldr	r7, [r1, #0]
  if  ( (NVM_offset >= NVM_max_size - 1) || NVM_BLANK(ptr) )
 8029ebc:	42b5      	cmp	r5, r6
{
 8029ebe:	4614      	mov	r4, r2
  ptr = NVM_buffer + NVM_offset;
 8029ec0:	eb07 0185 	add.w	r1, r7, r5, lsl #2
  if  ( (NVM_offset >= NVM_max_size - 1) || NVM_BLANK(ptr) )
 8029ec4:	d20f      	bcs.n	8029ee6 <NVM_Compare+0x3e>
 8029ec6:	f857 5025 	ldr.w	r5, [r7, r5, lsl #2]
 8029eca:	b165      	cbz	r5, 8029ee6 <NVM_Compare+0x3e>
    /* Return if we have reached the end of data in the buffer */
    return NVM_EOF;
  }

  /* Compute the record remaining size (after the offset) */
  remain_size = NVM_SIZE(ptr) - (int)offset;
 8029ecc:	b2ad      	uxth	r5, r5
 8029ece:	1aed      	subs	r5, r5, r3

  if ( (size > remain_size) ||
 8029ed0:	42aa      	cmp	r2, r5
 8029ed2:	dc06      	bgt.n	8029ee2 <NVM_Compare+0x3a>
       (memcmp( data, ((uint8_t*)ptr) + 4 + offset, size ) != 0) )
 8029ed4:	3304      	adds	r3, #4
 8029ed6:	4419      	add	r1, r3
 8029ed8:	f007 f832 	bl	8030f40 <memcmp>
  {
    return (int)size;
  }

  return NVM_OK;
 8029edc:	2800      	cmp	r0, #0
 8029ede:	bf08      	it	eq
 8029ee0:	2400      	moveq	r4, #0
}
 8029ee2:	4620      	mov	r0, r4
 8029ee4:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    return NVM_EOF;
 8029ee6:	f06f 0402 	mvn.w	r4, #2
 8029eea:	e7fa      	b.n	8029ee2 <NVM_Compare+0x3a>
 8029eec:	200090a4 	.word	0x200090a4
 8029ef0:	200090a8 	.word	0x200090a8
 8029ef4:	200090a0 	.word	0x200090a0

08029ef8 <NVM_Add>:
{
 8029ef8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8029efc:	b085      	sub	sp, #20
 8029efe:	4616      	mov	r6, r2
 8029f00:	4698      	mov	r8, r3
  if ( data && size )
 8029f02:	468b      	mov	fp, r1
{
 8029f04:	f8bd 9038 	ldrh.w	r9, [sp, #56]	; 0x38
 8029f08:	9003      	str	r0, [sp, #12]
  if ( data && size )
 8029f0a:	2900      	cmp	r1, #0
 8029f0c:	f000 8084 	beq.w	802a018 <NVM_Add+0x120>
 8029f10:	2a00      	cmp	r2, #0
 8029f12:	f000 8081 	beq.w	802a018 <NVM_Add+0x120>
    total_size = size + extra_size;
 8029f16:	eb02 0309 	add.w	r3, r2, r9
 8029f1a:	9301      	str	r3, [sp, #4]
    offset = 1 + NVM_OFFSET(total_size);
 8029f1c:	330b      	adds	r3, #11
 8029f1e:	08db      	lsrs	r3, r3, #3
 8029f20:	ea4f 0a43 	mov.w	sl, r3, lsl #1
 8029f24:	f10a 0301 	add.w	r3, sl, #1
 8029f28:	9302      	str	r3, [sp, #8]
      ptr = NVM_buffer;
 8029f2a:	4b40      	ldr	r3, [pc, #256]	; (802a02c <NVM_Add+0x134>)
      removed = 0;
 8029f2c:	2700      	movs	r7, #0
      ptr = NVM_buffer;
 8029f2e:	681c      	ldr	r4, [r3, #0]
      left = NVM_max_size;
 8029f30:	4b3f      	ldr	r3, [pc, #252]	; (802a030 <NVM_Add+0x138>)
      ptr = NVM_buffer;
 8029f32:	4625      	mov	r5, r4
      left = NVM_max_size;
 8029f34:	881a      	ldrh	r2, [r3, #0]
 8029f36:	4613      	mov	r3, r2
      while ( !NVM_BLANK(ptr) )
 8029f38:	6829      	ldr	r1, [r5, #0]
 8029f3a:	b931      	cbnz	r1, 8029f4a <NVM_Add+0x52>
      if ( offset <= left )
 8029f3c:	9902      	ldr	r1, [sp, #8]
 8029f3e:	428b      	cmp	r3, r1
 8029f40:	d230      	bcs.n	8029fa4 <NVM_Add+0xac>
      if ( removed == 0 )
 8029f42:	b9af      	cbnz	r7, 8029f70 <NVM_Add+0x78>
        return NVM_FULL;
 8029f44:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 8029f48:	e067      	b.n	802a01a <NVM_Add+0x122>
        next = NVM_OFFSET(NVM_SIZE(ptr));
 8029f4a:	b288      	uxth	r0, r1
 8029f4c:	300b      	adds	r0, #11
 8029f4e:	ea4f 0ed0 	mov.w	lr, r0, lsr #3
        if  ( next >= left )
 8029f52:	ebb3 0f4e 	cmp.w	r3, lr, lsl #1
        next = NVM_OFFSET(NVM_SIZE(ptr));
 8029f56:	ea4f 0c4e 	mov.w	ip, lr, lsl #1
        if  ( next >= left )
 8029f5a:	d961      	bls.n	802a020 <NVM_Add+0x128>
        if ( !NVM_VALID(ptr) )
 8029f5c:	0e09      	lsrs	r1, r1, #24
        ptr += next;
 8029f5e:	f020 0007 	bic.w	r0, r0, #7
          removed += next;
 8029f62:	bf08      	it	eq
 8029f64:	4467      	addeq	r7, ip
        ptr += next;
 8029f66:	4405      	add	r5, r0
        left -= next;
 8029f68:	eba3 030c 	sub.w	r3, r3, ip
 8029f6c:	e7e4      	b.n	8029f38 <NVM_Add+0x40>
        ptr += next;
 8029f6e:	460c      	mov	r4, r1
      while ( (!NVM_BLANK(ptr)) && NVM_VALID(ptr) )
 8029f70:	6823      	ldr	r3, [r4, #0]
 8029f72:	2b00      	cmp	r3, #0
 8029f74:	d0e6      	beq.n	8029f44 <NVM_Add+0x4c>
        next = NVM_OFFSET(NVM_SIZE(ptr));
 8029f76:	b299      	uxth	r1, r3
 8029f78:	310b      	adds	r1, #11
 8029f7a:	08cd      	lsrs	r5, r1, #3
      while ( (!NVM_BLANK(ptr)) && NVM_VALID(ptr) )
 8029f7c:	0e1b      	lsrs	r3, r3, #24
        ptr += next;
 8029f7e:	f021 0107 	bic.w	r1, r1, #7
 8029f82:	4421      	add	r1, r4
        left -= next;
 8029f84:	eba2 0245 	sub.w	r2, r2, r5, lsl #1
      while ( (!NVM_BLANK(ptr)) && NVM_VALID(ptr) )
 8029f88:	d1f1      	bne.n	8029f6e <NVM_Add+0x76>
      memmove( ptr, ptr + next, 4*(left - next) );
 8029f8a:	4620      	mov	r0, r4
 8029f8c:	0092      	lsls	r2, r2, #2
 8029f8e:	f006 fff4 	bl	8030f7a <memmove>
      NVM_size -= next/2;
 8029f92:	4b28      	ldr	r3, [pc, #160]	; (802a034 <NVM_Add+0x13c>)
      NVMCB_Store( ptr, NVM_size );
 8029f94:	4620      	mov	r0, r4
      NVM_size -= next/2;
 8029f96:	8819      	ldrh	r1, [r3, #0]
 8029f98:	1b49      	subs	r1, r1, r5
 8029f9a:	b289      	uxth	r1, r1
 8029f9c:	8019      	strh	r1, [r3, #0]
      NVMCB_Store( ptr, NVM_size );
 8029f9e:	f7fd fa3f 	bl	8027420 <NVMCB_Store>
      ptr = NVM_buffer;
 8029fa2:	e7c2      	b.n	8029f2a <NVM_Add+0x32>
    *ptr = 0x01000000UL | (((uint32_t)type) << 16) | total_size;
 8029fa4:	4628      	mov	r0, r5
 8029fa6:	9a03      	ldr	r2, [sp, #12]
 8029fa8:	9b01      	ldr	r3, [sp, #4]
    memcpy( ptr + 1, data, size );
 8029faa:	4659      	mov	r1, fp
    *ptr = 0x01000000UL | (((uint32_t)type) << 16) | total_size;
 8029fac:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 8029fb0:	f043 7380 	orr.w	r3, r3, #16777216	; 0x1000000
    memcpy( ptr + 1, data, size );
 8029fb4:	4632      	mov	r2, r6
    *ptr = 0x01000000UL | (((uint32_t)type) << 16) | total_size;
 8029fb6:	f840 3b04 	str.w	r3, [r0], #4
    memcpy( ptr + 1, data, size );
 8029fba:	f006 ffd1 	bl	8030f60 <memcpy>
    if ( extra_data )
 8029fbe:	f1b8 0f00 	cmp.w	r8, #0
 8029fc2:	d005      	beq.n	8029fd0 <NVM_Add+0xd8>
      memcpy( ((uint8_t*)(ptr + 1)) + size, extra_data, extra_size );
 8029fc4:	1d30      	adds	r0, r6, #4
 8029fc6:	464a      	mov	r2, r9
 8029fc8:	4641      	mov	r1, r8
 8029fca:	4428      	add	r0, r5
 8029fcc:	f006 ffc8 	bl	8030f60 <memcpy>
    *ptr = 0;
 8029fd0:	2200      	movs	r2, #0
    ptr += NVM_OFFSET(NVM_SIZE(ptr));
 8029fd2:	882b      	ldrh	r3, [r5, #0]
    NVMCB_Store( start_ptr, NVM_size );
 8029fd4:	4628      	mov	r0, r5
    ptr += NVM_OFFSET(NVM_SIZE(ptr));
 8029fd6:	330b      	adds	r3, #11
 8029fd8:	f023 0307 	bic.w	r3, r3, #7
 8029fdc:	18ee      	adds	r6, r5, r3
    NVM_size = (ptr - NVM_buffer) / 2;
 8029fde:	1b34      	subs	r4, r6, r4
 8029fe0:	0fe1      	lsrs	r1, r4, #31
    *ptr = 0;
 8029fe2:	50ea      	str	r2, [r5, r3]
    NVM_size = (ptr - NVM_buffer) / 2;
 8029fe4:	eb01 01a4 	add.w	r1, r1, r4, asr #2
 8029fe8:	4b12      	ldr	r3, [pc, #72]	; (802a034 <NVM_Add+0x13c>)
 8029fea:	1049      	asrs	r1, r1, #1
 8029fec:	8019      	strh	r1, [r3, #0]
    NVMCB_Store( start_ptr, NVM_size );
 8029fee:	b289      	uxth	r1, r1
 8029ff0:	f7fd fa16 	bl	8027420 <NVMCB_Store>
    NVM_trig_level = MIN(NVM_trig_level, NVM_max_size + 1 - offset);
 8029ff4:	4b0e      	ldr	r3, [pc, #56]	; (802a030 <NVM_Add+0x138>)
 8029ff6:	4a10      	ldr	r2, [pc, #64]	; (802a038 <NVM_Add+0x140>)
 8029ff8:	881b      	ldrh	r3, [r3, #0]
 8029ffa:	6811      	ldr	r1, [r2, #0]
 8029ffc:	eba3 030a 	sub.w	r3, r3, sl
 802a000:	428b      	cmp	r3, r1
 802a002:	bf28      	it	cs
 802a004:	460b      	movcs	r3, r1
 802a006:	6013      	str	r3, [r2, #0]
    if ( (ptr + 1 - NVM_buffer - removed) > NVM_trig_level )
 802a008:	4a08      	ldr	r2, [pc, #32]	; (802a02c <NVM_Add+0x134>)
 802a00a:	3604      	adds	r6, #4
 802a00c:	6812      	ldr	r2, [r2, #0]
 802a00e:	1ab6      	subs	r6, r6, r2
 802a010:	ebc7 07a6 	rsb	r7, r7, r6, asr #2
 802a014:	42bb      	cmp	r3, r7
 802a016:	d306      	bcc.n	802a026 <NVM_Add+0x12e>
  return NVM_OK;
 802a018:	2000      	movs	r0, #0
}
 802a01a:	b005      	add	sp, #20
 802a01c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
          return NVM_ERROR;
 802a020:	f06f 0004 	mvn.w	r0, #4
 802a024:	e7f9      	b.n	802a01a <NVM_Add+0x122>
      return NVM_WARN;
 802a026:	f06f 0003 	mvn.w	r0, #3
 802a02a:	e7f6      	b.n	802a01a <NVM_Add+0x122>
 802a02c:	200090a0 	.word	0x200090a0
 802a030:	200090a4 	.word	0x200090a4
 802a034:	200090ac 	.word	0x200090ac
 802a038:	200090b0 	.word	0x200090b0

0802a03c <NVM_Discard>:

/*****************************************************************************/

void NVM_Discard( uint8_t mode )
{
 802a03c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 802a03e:	4603      	mov	r3, r0
  uint32_t *ptr, *ptr_next, next, size;

  ptr = NVM_buffer;
 802a040:	4a20      	ldr	r2, [pc, #128]	; (802a0c4 <NVM_Discard+0x88>)

  if ( mode == NVM_CURRENT )
 802a042:	2b02      	cmp	r3, #2
  ptr = NVM_buffer;
 802a044:	6810      	ldr	r0, [r2, #0]
  if ( mode == NVM_CURRENT )
 802a046:	d137      	bne.n	802a0b8 <NVM_Discard+0x7c>
  {
    /* Check current offset */
    if  ( NVM_offset >= NVM_max_size - 1 )
 802a048:	4b1f      	ldr	r3, [pc, #124]	; (802a0c8 <NVM_Discard+0x8c>)
 802a04a:	4a20      	ldr	r2, [pc, #128]	; (802a0cc <NVM_Discard+0x90>)
 802a04c:	881e      	ldrh	r6, [r3, #0]
 802a04e:	6813      	ldr	r3, [r2, #0]
 802a050:	1e71      	subs	r1, r6, #1
 802a052:	4299      	cmp	r1, r3
 802a054:	d802      	bhi.n	802a05c <NVM_Discard+0x20>
    {
      NVM_offset = 0;
 802a056:	2300      	movs	r3, #0
 802a058:	6013      	str	r3, [r2, #0]
#if CFG_NVM_ALIGN != 0
  NVMCB_Store( ptr, NVM_size );
#else
  NVMCB_Store( ptr, 1 );
#endif
}
 802a05a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    ptr += NVM_offset;
 802a05c:	eb00 0083 	add.w	r0, r0, r3, lsl #2
    if ( !NVM_BLANK(ptr) )
 802a060:	6802      	ldr	r2, [r0, #0]
    ptr += NVM_offset;
 802a062:	009d      	lsls	r5, r3, #2
    if ( !NVM_BLANK(ptr) )
 802a064:	b31a      	cbz	r2, 802a0ae <NVM_Discard+0x72>
      next = NVM_OFFSET(NVM_SIZE(ptr));
 802a066:	b292      	uxth	r2, r2
 802a068:	f102 040b 	add.w	r4, r2, #11
 802a06c:	08e7      	lsrs	r7, r4, #3
      if  ( (NVM_offset + next) >= NVM_max_size )
 802a06e:	eb03 0347 	add.w	r3, r3, r7, lsl #1
 802a072:	42b3      	cmp	r3, r6
      next = NVM_OFFSET(NVM_SIZE(ptr));
 802a074:	ea4f 0147 	mov.w	r1, r7, lsl #1
      if  ( (NVM_offset + next) >= NVM_max_size )
 802a078:	d2ef      	bcs.n	802a05a <NVM_Discard+0x1e>
      ptr_next = ptr + next;
 802a07a:	f024 0407 	bic.w	r4, r4, #7
      if ( NVM_BLANK(ptr_next) )
 802a07e:	5903      	ldr	r3, [r0, r4]
 802a080:	b93b      	cbnz	r3, 802a092 <NVM_Discard+0x56>
        *ptr = 0;
 802a082:	6003      	str	r3, [r0, #0]
        NVM_size = (ptr - NVM_buffer) / 2;
 802a084:	0feb      	lsrs	r3, r5, #31
 802a086:	eb03 03a5 	add.w	r3, r3, r5, asr #2
 802a08a:	105b      	asrs	r3, r3, #1
    NVM_size = 0;
 802a08c:	4a10      	ldr	r2, [pc, #64]	; (802a0d0 <NVM_Discard+0x94>)
 802a08e:	8013      	strh	r3, [r2, #0]
 802a090:	e00d      	b.n	802a0ae <NVM_Discard+0x72>
        if ( !NVM_VALID(ptr_next) )
 802a092:	0e1c      	lsrs	r4, r3, #24
 802a094:	d10a      	bne.n	802a0ac <NVM_Discard+0x70>
          next += NVM_OFFSET(NVM_SIZE(ptr_next));
 802a096:	b29b      	uxth	r3, r3
 802a098:	330b      	adds	r3, #11
 802a09a:	08db      	lsrs	r3, r3, #3
 802a09c:	eb01 0343 	add.w	r3, r1, r3, lsl #1
          if ( next <= 0x4000UL )
 802a0a0:	f5b3 4f80 	cmp.w	r3, #16384	; 0x4000
            size = (next - 1) * 4;
 802a0a4:	bf9c      	itt	ls
 802a0a6:	f103 33ff 	addls.w	r3, r3, #4294967295	; 0xffffffff
 802a0aa:	009a      	lslls	r2, r3, #2
        *ptr = size;
 802a0ac:	6002      	str	r2, [r0, #0]
  NVMCB_Store( ptr, NVM_size );
 802a0ae:	4b08      	ldr	r3, [pc, #32]	; (802a0d0 <NVM_Discard+0x94>)
 802a0b0:	8819      	ldrh	r1, [r3, #0]
 802a0b2:	f7fd f9b5 	bl	8027420 <NVMCB_Store>
 802a0b6:	e7d0      	b.n	802a05a <NVM_Discard+0x1e>
  else if ( mode == NVM_ALL )
 802a0b8:	2b03      	cmp	r3, #3
 802a0ba:	d1f8      	bne.n	802a0ae <NVM_Discard+0x72>
    *ptr = 0;
 802a0bc:	2300      	movs	r3, #0
 802a0be:	6003      	str	r3, [r0, #0]
 802a0c0:	e7e4      	b.n	802a08c <NVM_Discard+0x50>
 802a0c2:	bf00      	nop
 802a0c4:	200090a0 	.word	0x200090a0
 802a0c8:	200090a4 	.word	0x200090a4
 802a0cc:	200090a8 	.word	0x200090a8
 802a0d0:	200090ac 	.word	0x200090ac

0802a0d4 <SYSTEM_DEBUG_SIGNAL_SET>:
void SYSTEM_DEBUG_SIGNAL_SET(system_debug_signal_t signal)
{
#if(RT_DEBUG_GPIO_MODULE == 1)
  GENERIC_DEBUG_GPIO_SET(signal, system_debug_table);
#endif /* RT_DEBUG_GPIO_MODULE */
}
 802a0d4:	4770      	bx	lr

0802a0d6 <SYSTEM_DEBUG_SIGNAL_RESET>:
 802a0d6:	4770      	bx	lr

0802a0d8 <LINKLAYER_DEBUG_SIGNAL_SET>:
 802a0d8:	4770      	bx	lr

0802a0da <LINKLAYER_DEBUG_SIGNAL_RESET>:
 802a0da:	4770      	bx	lr

0802a0dc <LINKLAYER_DEBUG_SIGNAL_TOGGLE>:
 802a0dc:	4770      	bx	lr
	...

0802a0e0 <adc_ctrl_AdcDeactivate>:
  *         - Disable ADC peripharal clock
  * @param  None
  * @retval None
  */
static void adc_ctrl_AdcDeactivate(void)
{
 802a0e0:	b508      	push	{r3, lr}
  SYSTEM_DEBUG_SIGNAL_SET(ADC_DEACTIVATION);
 802a0e2:	2001      	movs	r0, #1
 802a0e4:	f7ff fff6 	bl	802a0d4 <SYSTEM_DEBUG_SIGNAL_SET>
  * @param  ADCx ADC instance
  * @retval 0: ADC is disabled, 1: ADC is enabled.
  */
__STATIC_INLINE uint32_t LL_ADC_IsEnabled(const ADC_TypeDef *ADCx)
{
  return ((READ_BIT(ADCx->CR, ADC_CR_ADEN) == (ADC_CR_ADEN)) ? 1UL : 0UL);
 802a0e8:	4a13      	ldr	r2, [pc, #76]	; (802a138 <adc_ctrl_AdcDeactivate+0x58>)
 802a0ea:	6893      	ldr	r3, [r2, #8]
  if(LL_ADC_IsEnabled(ADC4))
 802a0ec:	07db      	lsls	r3, r3, #31
 802a0ee:	d51e      	bpl.n	802a12e <adc_ctrl_AdcDeactivate+0x4e>
  MODIFY_REG(ADCx->CR,
 802a0f0:	6893      	ldr	r3, [r2, #8]
 802a0f2:	f023 4300 	bic.w	r3, r3, #2147483648	; 0x80000000
 802a0f6:	f023 0317 	bic.w	r3, r3, #23
 802a0fa:	f043 0302 	orr.w	r3, r3, #2
 802a0fe:	6093      	str	r3, [r2, #8]
  return ((READ_BIT(ADCx->CR, ADC_CR_ADEN) == (ADC_CR_ADEN)) ? 1UL : 0UL);
 802a100:	6893      	ldr	r3, [r2, #8]
  {
    /* Disable ADC */
    LL_ADC_Disable(ADC4);

    /* Wait until ADC_CR_ADEN bit is reset before turning off ADC internal regulator */
    while(LL_ADC_IsEnabled(ADC4) == 1UL);
 802a102:	07d8      	lsls	r0, r3, #31
 802a104:	d4fc      	bmi.n	802a100 <adc_ctrl_AdcDeactivate+0x20>
  * @param  ADCx ADC instance
  * @retval 0: no command of conversion stop is on going on ADC group regular.
  */
__STATIC_INLINE uint32_t LL_ADC_REG_IsStopConversionOngoing(const ADC_TypeDef *ADCx)
{
  return ((READ_BIT(ADCx->CR, ADC_CR_ADSTP) == (ADC_CR_ADSTP)) ? 1UL : 0UL);
 802a106:	4a0c      	ldr	r2, [pc, #48]	; (802a138 <adc_ctrl_AdcDeactivate+0x58>)
 802a108:	6893      	ldr	r3, [r2, #8]
 802a10a:	06d9      	lsls	r1, r3, #27
 802a10c:	d4fc      	bmi.n	802a108 <adc_ctrl_AdcDeactivate+0x28>
  CLEAR_BIT(ADCx->CR, (ADC_CR_ADVREGEN | ADC_CR_BITS_PROPERTY_RS));
 802a10e:	6893      	ldr	r3, [r2, #8]
 802a110:	f023 4310 	bic.w	r3, r3, #2415919104	; 0x90000000
 802a114:	f023 0317 	bic.w	r3, r3, #23
 802a118:	6093      	str	r3, [r2, #8]
  return ((READ_BIT(ADCx->CR, ADC_CR_ADVREGEN) == (ADC_CR_ADVREGEN)) ? 1UL : 0UL);
 802a11a:	6893      	ldr	r3, [r2, #8]
 802a11c:	00db      	lsls	r3, r3, #3
 802a11e:	d4fc      	bmi.n	802a11a <adc_ctrl_AdcDeactivate+0x3a>
  *         @arg @ref LL_AHB4_GRP1_PERIPH_ADC4
  * @retval None
  */
__STATIC_INLINE void LL_AHB4_GRP1_DisableClock(uint32_t Periphs)
{
  CLEAR_BIT(RCC->AHB4ENR, Periphs);
 802a120:	4a06      	ldr	r2, [pc, #24]	; (802a13c <adc_ctrl_AdcDeactivate+0x5c>)
 802a122:	f8d2 3094 	ldr.w	r3, [r2, #148]	; 0x94
 802a126:	f023 0320 	bic.w	r3, r3, #32
 802a12a:	f8c2 3094 	str.w	r3, [r2, #148]	; 0x94
    while(LL_ADC_IsInternalRegulatorEnabled(ADC4) == 1U);

    /* Peripharal clock disable */
    LL_AHB4_GRP1_DisableClock(LL_AHB4_GRP1_PERIPH_ADC4);
  }
  SYSTEM_DEBUG_SIGNAL_RESET(ADC_DEACTIVATION);
 802a12e:	2001      	movs	r0, #1
}
 802a130:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
  SYSTEM_DEBUG_SIGNAL_RESET(ADC_DEACTIVATION);
 802a134:	f7ff bfcf 	b.w	802a0d6 <SYSTEM_DEBUG_SIGNAL_RESET>
 802a138:	46021000 	.word	0x46021000
 802a13c:	46020c00 	.word	0x46020c00

0802a140 <adc_ctrl_init>:
  * @param  None
  * @retval None
  */
void adc_ctrl_init(void)
{
  adc_client_list = 0;
 802a140:	2200      	movs	r2, #0
 802a142:	4b02      	ldr	r3, [pc, #8]	; (802a14c <adc_ctrl_init+0xc>)
 802a144:	601a      	str	r2, [r3, #0]
  adc_ctrl_AdcDeactivate();
 802a146:	f7ff bfcb 	b.w	802a0e0 <adc_ctrl_AdcDeactivate>
 802a14a:	bf00      	nop
 802a14c:	200090b4 	.word	0x200090b4

0802a150 <adc_ctrl_req>:
  * @param  client     client that requests an ADC state change
  * @param  enable     enable or disable request
  * @retval None
  */
void adc_ctrl_req(adc_client_t client, adc_state_t enable)
{
 802a150:	b513      	push	{r0, r1, r4, lr}
  __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
 802a152:	f3ef 8410 	mrs	r4, PRIMASK
  __ASM volatile ("cpsid i" : : : "memory");
 802a156:	b672      	cpsid	i
  UTILS_ENTER_CRITICAL_SECTION();

  if(enable == ADC_OFF)
  {
    adc_client_list &= (~(1U << client));
 802a158:	2301      	movs	r3, #1
 802a15a:	fa03 f000 	lsl.w	r0, r3, r0
 802a15e:	4b2e      	ldr	r3, [pc, #184]	; (802a218 <adc_ctrl_req+0xc8>)
 802a160:	681a      	ldr	r2, [r3, #0]
  if(enable == ADC_OFF)
 802a162:	b949      	cbnz	r1, 802a178 <adc_ctrl_req+0x28>
    adc_client_list &= (~(1U << client));
 802a164:	ea22 0000 	bic.w	r0, r2, r0
 802a168:	6018      	str	r0, [r3, #0]
  else
  {
    adc_client_list |= (1U << client);
  }

  if(adc_client_list == 0)
 802a16a:	b938      	cbnz	r0, 802a17c <adc_ctrl_req+0x2c>
  {
    /* Disable ADC as there is no request anymore */
    adc_ctrl_AdcDeactivate();
 802a16c:	f7ff ffb8 	bl	802a0e0 <adc_ctrl_AdcDeactivate>
  __ASM volatile ("MSR primask, %0" : : "r" (priMask) : "memory");
 802a170:	f384 8810 	msr	PRIMASK, r4
    /* Enable ADC as there at least one request */
    adc_ctrl_AdcActivate();
  }

  UTILS_EXIT_CRITICAL_SECTION();
}
 802a174:	b002      	add	sp, #8
 802a176:	bd10      	pop	{r4, pc}
    adc_client_list |= (1U << client);
 802a178:	4310      	orrs	r0, r2
 802a17a:	e7f5      	b.n	802a168 <adc_ctrl_req+0x18>
  __IO uint32_t backup_setting_adc_dma_transfer = 0U;
 802a17c:	2000      	movs	r0, #0
 802a17e:	9000      	str	r0, [sp, #0]
  SYSTEM_DEBUG_SIGNAL_SET(ADC_ACTIVATION);
 802a180:	f7ff ffa8 	bl	802a0d4 <SYSTEM_DEBUG_SIGNAL_SET>
  return ((READ_BIT(ADCx->CR, ADC_CR_ADEN) == (ADC_CR_ADEN)) ? 1UL : 0UL);
 802a184:	4b25      	ldr	r3, [pc, #148]	; (802a21c <adc_ctrl_req+0xcc>)
 802a186:	689a      	ldr	r2, [r3, #8]
  if (LL_ADC_IsEnabled(ADC4) == 0)
 802a188:	07d1      	lsls	r1, r2, #31
 802a18a:	d503      	bpl.n	802a194 <adc_ctrl_req+0x44>
  SYSTEM_DEBUG_SIGNAL_RESET(ADC_ACTIVATION);
 802a18c:	2000      	movs	r0, #0
 802a18e:	f7ff ffa2 	bl	802a0d6 <SYSTEM_DEBUG_SIGNAL_RESET>
}
 802a192:	e7ed      	b.n	802a170 <adc_ctrl_req+0x20>
  SET_BIT(RCC->AHB4ENR, Periphs);
 802a194:	4a22      	ldr	r2, [pc, #136]	; (802a220 <adc_ctrl_req+0xd0>)
 802a196:	f8d2 1094 	ldr.w	r1, [r2, #148]	; 0x94
 802a19a:	f041 0120 	orr.w	r1, r1, #32
 802a19e:	f8c2 1094 	str.w	r1, [r2, #148]	; 0x94
  tmpreg = READ_BIT(RCC->AHB4ENR, Periphs);
 802a1a2:	f8d2 2094 	ldr.w	r2, [r2, #148]	; 0x94
 802a1a6:	f002 0220 	and.w	r2, r2, #32
 802a1aa:	9201      	str	r2, [sp, #4]
  (void)tmpreg;
 802a1ac:	9a01      	ldr	r2, [sp, #4]
  MODIFY_REG(ADCx->CR,
 802a1ae:	689a      	ldr	r2, [r3, #8]
 802a1b0:	f022 4210 	bic.w	r2, r2, #2415919104	; 0x90000000
 802a1b4:	f022 0217 	bic.w	r2, r2, #23
 802a1b8:	f042 5280 	orr.w	r2, r2, #268435456	; 0x10000000
 802a1bc:	609a      	str	r2, [r3, #8]
  return ((READ_BIT(ADCx->CR, ADC_CR_ADVREGEN) == (ADC_CR_ADVREGEN)) ? 1UL : 0UL);
 802a1be:	689a      	ldr	r2, [r3, #8]
 802a1c0:	00d2      	lsls	r2, r2, #3
 802a1c2:	d5fc      	bpl.n	802a1be <adc_ctrl_req+0x6e>
  return (uint32_t)(READ_BIT(ADCx->CFGR1, ADC_CFGR1_DMAEN | ADC_CFGR1_DMACFG));
 802a1c4:	68da      	ldr	r2, [r3, #12]
 802a1c6:	f002 0203 	and.w	r2, r2, #3
    backup_setting_adc_dma_transfer = LL_ADC_REG_GetDMATransfer(ADC4);
 802a1ca:	9200      	str	r2, [sp, #0]
  MODIFY_REG(ADCx->CFGR1, ADC_CFGR1_DMAEN | ADC_CFGR1_DMACFG, DMATransfer);
 802a1cc:	68da      	ldr	r2, [r3, #12]
 802a1ce:	f022 0203 	bic.w	r2, r2, #3
 802a1d2:	60da      	str	r2, [r3, #12]
  MODIFY_REG(ADCx->CR,
 802a1d4:	689a      	ldr	r2, [r3, #8]
 802a1d6:	f022 4200 	bic.w	r2, r2, #2147483648	; 0x80000000
 802a1da:	f022 0217 	bic.w	r2, r2, #23
 802a1de:	f042 4200 	orr.w	r2, r2, #2147483648	; 0x80000000
 802a1e2:	609a      	str	r2, [r3, #8]
  return ((READ_BIT(ADCx->CR, ADC_CR_ADCAL) == (ADC_CR_ADCAL)) ? 1UL : 0UL);
 802a1e4:	4a0d      	ldr	r2, [pc, #52]	; (802a21c <adc_ctrl_req+0xcc>)
 802a1e6:	6893      	ldr	r3, [r2, #8]
 802a1e8:	2b00      	cmp	r3, #0
 802a1ea:	dbfc      	blt.n	802a1e6 <adc_ctrl_req+0x96>
    LL_ADC_REG_SetDMATransfer(ADC4, backup_setting_adc_dma_transfer);
 802a1ec:	9900      	ldr	r1, [sp, #0]
  MODIFY_REG(ADCx->CFGR1, ADC_CFGR1_DMAEN | ADC_CFGR1_DMACFG, DMATransfer);
 802a1ee:	68d3      	ldr	r3, [r2, #12]
 802a1f0:	f023 0303 	bic.w	r3, r3, #3
 802a1f4:	430b      	orrs	r3, r1
 802a1f6:	60d3      	str	r3, [r2, #12]
    __asm("mov r0, r0");
 802a1f8:	4600      	mov	r0, r0
    __asm("mov r0, r0");
 802a1fa:	4600      	mov	r0, r0
  MODIFY_REG(ADCx->CR,
 802a1fc:	6893      	ldr	r3, [r2, #8]
 802a1fe:	f023 4300 	bic.w	r3, r3, #2147483648	; 0x80000000
 802a202:	f023 0317 	bic.w	r3, r3, #23
 802a206:	f043 0301 	orr.w	r3, r3, #1
 802a20a:	6093      	str	r3, [r2, #8]
  * @param  ADCx ADC instance
  * @retval State of bit (1 or 0).
  */
__STATIC_INLINE uint32_t LL_ADC_IsActiveFlag_ADRDY(const ADC_TypeDef *ADCx)
{
  return ((READ_BIT(ADCx->ISR, LL_ADC_FLAG_ADRDY) == (LL_ADC_FLAG_ADRDY)) ? 1UL : 0UL);
 802a20c:	4a03      	ldr	r2, [pc, #12]	; (802a21c <adc_ctrl_req+0xcc>)
 802a20e:	6813      	ldr	r3, [r2, #0]
    while (LL_ADC_IsActiveFlag_ADRDY(ADC4) == 0);
 802a210:	07db      	lsls	r3, r3, #31
 802a212:	d5fc      	bpl.n	802a20e <adc_ctrl_req+0xbe>
 802a214:	e7ba      	b.n	802a18c <adc_ctrl_req+0x3c>
 802a216:	bf00      	nop
 802a218:	200090b4 	.word	0x200090b4
 802a21c:	46021000 	.word	0x46021000
 802a220:	46020c00 	.word	0x46020c00

0802a224 <adc_ctrl_request_temperature>:

uint16_t adc_ctrl_request_temperature(void)
{
  /* Variables for ADC conversion data */
  __IO uint16_t uhADCxConvertedData = VAR_CONVERTED_DATA_INIT_VALUE;
 802a224:	f44f 5380 	mov.w	r3, #4096	; 0x1000
{
 802a228:	b507      	push	{r0, r1, r2, lr}
  __IO uint16_t uhADCxConvertedData = VAR_CONVERTED_DATA_INIT_VALUE;
 802a22a:	f8ad 3004 	strh.w	r3, [sp, #4]

  /* Variables for ADC conversion data computation to physical values
   * Value of temperature calculated from ADC conversion data (unit: degree Celsius)
   */
  __IO  int16_t hADCxConvertedData_Temperature_DegreeCelsius = 0UL;
 802a22e:	2300      	movs	r3, #0

  SYSTEM_DEBUG_SIGNAL_SET(ADC_TEMPERATURE_ACQUISITION);
 802a230:	2002      	movs	r0, #2
  __IO  int16_t hADCxConvertedData_Temperature_DegreeCelsius = 0UL;
 802a232:	f8ad 3006 	strh.w	r3, [sp, #6]
  SYSTEM_DEBUG_SIGNAL_SET(ADC_TEMPERATURE_ACQUISITION);
 802a236:	f7ff ff4d 	bl	802a0d4 <SYSTEM_DEBUG_SIGNAL_SET>
  return ((READ_BIT(ADCx->CR, ADC_CR_ADEN) == (ADC_CR_ADEN)) ? 1UL : 0UL);
 802a23a:	4a29      	ldr	r2, [pc, #164]	; (802a2e0 <adc_ctrl_request_temperature+0xbc>)
 802a23c:	6893      	ldr	r3, [r2, #8]
  if ((LL_ADC_IsEnabled(ADC4) == 1)               &&
 802a23e:	07db      	lsls	r3, r3, #31
 802a240:	d541      	bpl.n	802a2c6 <adc_ctrl_request_temperature+0xa2>
  return ((READ_BIT(ADCx->CR, ADC_CR_ADDIS) == (ADC_CR_ADDIS)) ? 1UL : 0UL);
 802a242:	6893      	ldr	r3, [r2, #8]
 802a244:	0798      	lsls	r0, r3, #30
 802a246:	d43e      	bmi.n	802a2c6 <adc_ctrl_request_temperature+0xa2>
  return ((READ_BIT(ADCx->CR, ADC_CR_ADSTART) == (ADC_CR_ADSTART)) ? 1UL : 0UL);
 802a248:	6893      	ldr	r3, [r2, #8]
 802a24a:	0759      	lsls	r1, r3, #29
 802a24c:	d43b      	bmi.n	802a2c6 <adc_ctrl_request_temperature+0xa2>
  MODIFY_REG(ADCx->CR,
 802a24e:	6893      	ldr	r3, [r2, #8]
 802a250:	f023 4300 	bic.w	r3, r3, #2147483648	; 0x80000000
 802a254:	f023 0317 	bic.w	r3, r3, #23
 802a258:	f043 0304 	orr.w	r3, r3, #4
 802a25c:	6093      	str	r3, [r2, #8]
  * @param  ADCx ADC instance
  * @retval State of bit (1 or 0).
  */
__STATIC_INLINE uint32_t LL_ADC_IsActiveFlag_EOC(const ADC_TypeDef *ADCx)
{
  return ((READ_BIT(ADCx->ISR, ADC_ISR_EOC) == (ADC_ISR_EOC)) ? 1UL : 0UL);
 802a25e:	4b20      	ldr	r3, [pc, #128]	; (802a2e0 <adc_ctrl_request_temperature+0xbc>)
 802a260:	681a      	ldr	r2, [r3, #0]
 802a262:	0752      	lsls	r2, r2, #29
 802a264:	d5fc      	bpl.n	802a260 <adc_ctrl_request_temperature+0x3c>
  * @param  ADCx ADC instance
  * @retval None
  */
__STATIC_INLINE void LL_ADC_ClearFlag_EOC(ADC_TypeDef *ADCx)
{
  WRITE_REG(ADCx->ISR, LL_ADC_FLAG_EOC);
 802a266:	2204      	movs	r2, #4
 802a268:	f640 40e4 	movw	r0, #3300	; 0xce4
 802a26c:	601a      	str	r2, [r3, #0]
  return (uint16_t)(READ_BIT(ADCx->DR, ADC_DR_DATA) & 0x00000FFFUL);
 802a26e:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 802a270:	f3c3 030b 	ubfx	r3, r3, #0, #12
  /* completion.                                                            */
  adc_ctrl_ConversionStartPoll_ADC_GrpRegular();

  /* Retrieve ADC conversion data */
  /* (data scale corresponds to ADC resolution: 12 bits) */
  uhADCxConvertedData = LL_ADC_REG_ReadConversionData12(ADC4);
 802a274:	f8ad 3004 	strh.w	r3, [sp, #4]

  /* Computation of ADC conversions raw data to physical values             */
  /* using LL ADC driver helper macro.                                      */
  if(*TEMPSENSOR_CAL1_ADDR == *TEMPSENSOR_CAL2_ADDR)
 802a278:	4b1a      	ldr	r3, [pc, #104]	; (802a2e4 <adc_ctrl_request_temperature+0xc0>)
 802a27a:	8a19      	ldrh	r1, [r3, #16]
 802a27c:	f8b3 2042 	ldrh.w	r2, [r3, #66]	; 0x42
  {
    /* Case of samples not calibrated in production */
    hADCxConvertedData_Temperature_DegreeCelsius = __LL_ADC_CALC_TEMPERATURE_TYP_PARAMS(
 802a280:	f8bd 3004 	ldrh.w	r3, [sp, #4]
  if(*TEMPSENSOR_CAL1_ADDR == *TEMPSENSOR_CAL2_ADDR)
 802a284:	4291      	cmp	r1, r2
    hADCxConvertedData_Temperature_DegreeCelsius = __LL_ADC_CALC_TEMPERATURE_TYP_PARAMS(
 802a286:	b29b      	uxth	r3, r3
 802a288:	fb00 f303 	mul.w	r3, r0, r3
  if(*TEMPSENSOR_CAL1_ADDR == *TEMPSENSOR_CAL2_ADDR)
 802a28c:	d11e      	bne.n	802a2cc <adc_ctrl_request_temperature+0xa8>
    hADCxConvertedData_Temperature_DegreeCelsius = __LL_ADC_CALC_TEMPERATURE_TYP_PARAMS(
 802a28e:	f640 72ff 	movw	r2, #4095	; 0xfff
 802a292:	fbb3 f3f2 	udiv	r3, r3, r2
 802a296:	f44f 727a 	mov.w	r2, #1000	; 0x3e8
 802a29a:	4353      	muls	r3, r2
 802a29c:	f640 12c4 	movw	r2, #2500	; 0x9c4
 802a2a0:	f5a3 2339 	sub.w	r3, r3, #757760	; 0xb9000
 802a2a4:	f5a3 630c 	sub.w	r3, r3, #2240	; 0x8c0
                                                       LL_ADC_RESOLUTION_12B);
  }
  else
  {
    /* Case of samples calibrated in production */
    hADCxConvertedData_Temperature_DegreeCelsius = __LL_ADC_CALC_TEMPERATURE(VDDA_APPLI, uhADCxConvertedData, LL_ADC_RESOLUTION_12B);
 802a2a8:	fb93 f3f2 	sdiv	r3, r3, r2
 802a2ac:	331e      	adds	r3, #30
 802a2ae:	b21b      	sxth	r3, r3
  }

  SYSTEM_DEBUG_SIGNAL_RESET(ADC_TEMPERATURE_ACQUISITION);
 802a2b0:	2002      	movs	r0, #2
    hADCxConvertedData_Temperature_DegreeCelsius = __LL_ADC_CALC_TEMPERATURE(VDDA_APPLI, uhADCxConvertedData, LL_ADC_RESOLUTION_12B);
 802a2b2:	f8ad 3006 	strh.w	r3, [sp, #6]
  SYSTEM_DEBUG_SIGNAL_RESET(ADC_TEMPERATURE_ACQUISITION);
 802a2b6:	f7ff ff0e 	bl	802a0d6 <SYSTEM_DEBUG_SIGNAL_RESET>

  return hADCxConvertedData_Temperature_DegreeCelsius;
 802a2ba:	f8bd 0006 	ldrh.w	r0, [sp, #6]
}
 802a2be:	b280      	uxth	r0, r0
 802a2c0:	b003      	add	sp, #12
 802a2c2:	f85d fb04 	ldr.w	pc, [sp], #4
    Error_Handler();
 802a2c6:	f7fb ff67 	bl	8026198 <Error_Handler>
 802a2ca:	e7c8      	b.n	802a25e <adc_ctrl_request_temperature+0x3a>
    hADCxConvertedData_Temperature_DegreeCelsius = __LL_ADC_CALC_TEMPERATURE(VDDA_APPLI, uhADCxConvertedData, LL_ADC_RESOLUTION_12B);
 802a2cc:	f640 30b8 	movw	r0, #3000	; 0xbb8
 802a2d0:	fbb3 f3f0 	udiv	r3, r3, r0
 802a2d4:	2064      	movs	r0, #100	; 0x64
 802a2d6:	1a5b      	subs	r3, r3, r1
 802a2d8:	4343      	muls	r3, r0
 802a2da:	1a52      	subs	r2, r2, r1
 802a2dc:	e7e4      	b.n	802a2a8 <adc_ctrl_request_temperature+0x84>
 802a2de:	bf00      	nop
 802a2e0:	46021000 	.word	0x46021000
 802a2e4:	0bf90700 	.word	0x0bf90700

0802a2e8 <BLE_TIMER_Callback>:
    (void)AMM_Free((uint32_t *)timer);
  }
}

static void BLE_TIMER_Callback(void* arg)
{
 802a2e8:	b510      	push	{r4, lr}
 802a2ea:	4604      	mov	r4, r0
  BLE_TIMER_t* timer = (BLE_TIMER_t*)arg;

  BLEPLATCB_TimerExpiry( (uint8_t)timer->id);
 802a2ec:	7a00      	ldrb	r0, [r0, #8]
 802a2ee:	f7ee fae2 	bl	80188b6 <BLEPLATCB_TimerExpiry>

  /* Delete the timer from the list */
  LST_remove_node((tListNode *)timer);
 802a2f2:	4620      	mov	r0, r4
 802a2f4:	f000 fb1d 	bl	802a932 <LST_remove_node>

  (void)AMM_Free((uint32_t *)timer);
 802a2f8:	4620      	mov	r0, r4
}
 802a2fa:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
  (void)AMM_Free((uint32_t *)timer);
 802a2fe:	f7ff bc35 	b.w	8029b6c <AMM_Free>
	...

0802a304 <BLE_TIMER_Init>:
{
 802a304:	b508      	push	{r3, lr}
  LST_init_head(&BLE_TIMER_List);
 802a306:	4803      	ldr	r0, [pc, #12]	; (802a314 <BLE_TIMER_Init+0x10>)
 802a308:	f000 faee 	bl	802a8e8 <LST_init_head>
}
 802a30c:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
  UTIL_TIMER_Init();
 802a310:	f006 bcb2 	b.w	8030c78 <UTIL_TIMER_Init>
 802a314:	200090b8 	.word	0x200090b8

0802a318 <BLE_TIMER_Stop>:
void BLE_TIMER_Stop(uint8_t id){
 802a318:	b573      	push	{r0, r1, r4, r5, r6, lr}
static BLE_TIMER_t* BLE_TIMER_GetFromList(tListNode * listHead, uint8_t id)
{
  BLE_TIMER_t* currentNode = (BLE_TIMER_t*)listHead->next;
  while((tListNode *)currentNode != listHead)
  {
    if(currentNode->id == id)
 802a31a:	4605      	mov	r5, r0
  BLE_TIMER_t* currentNode = (BLE_TIMER_t*)listHead->next;
 802a31c:	4e0e      	ldr	r6, [pc, #56]	; (802a358 <BLE_TIMER_Stop+0x40>)
 802a31e:	6833      	ldr	r3, [r6, #0]
 802a320:	9301      	str	r3, [sp, #4]
  while((tListNode *)currentNode != listHead)
 802a322:	9c01      	ldr	r4, [sp, #4]
 802a324:	42b4      	cmp	r4, r6
 802a326:	d101      	bne.n	802a32c <BLE_TIMER_Stop+0x14>
}
 802a328:	b002      	add	sp, #8
 802a32a:	bd70      	pop	{r4, r5, r6, pc}
    if(currentNode->id == id)
 802a32c:	8923      	ldrh	r3, [r4, #8]
 802a32e:	42ab      	cmp	r3, r5
 802a330:	d004      	beq.n	802a33c <BLE_TIMER_Stop+0x24>
    {
      return currentNode;
    }
    LST_get_next_node((tListNode *)currentNode, (tListNode **)&currentNode);
 802a332:	4620      	mov	r0, r4
 802a334:	a901      	add	r1, sp, #4
 802a336:	f000 fb13 	bl	802a960 <LST_get_next_node>
 802a33a:	e7f2      	b.n	802a322 <BLE_TIMER_Stop+0xa>
    UTIL_TIMER_Stop(&timer->timerObject);
 802a33c:	f104 000c 	add.w	r0, r4, #12
 802a340:	f006 fce8 	bl	8030d14 <UTIL_TIMER_Stop>
    LST_remove_node((tListNode *)timer);
 802a344:	4620      	mov	r0, r4
 802a346:	f000 faf4 	bl	802a932 <LST_remove_node>
    (void)AMM_Free((uint32_t *)timer);
 802a34a:	4620      	mov	r0, r4
}
 802a34c:	b002      	add	sp, #8
 802a34e:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
    (void)AMM_Free((uint32_t *)timer);
 802a352:	f7ff bc0b 	b.w	8029b6c <AMM_Free>
 802a356:	bf00      	nop
 802a358:	200090b8 	.word	0x200090b8

0802a35c <BLE_TIMER_Start>:
{
 802a35c:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 802a35e:	4606      	mov	r6, r0
 802a360:	460d      	mov	r5, r1
  BLE_TIMER_Stop(id);
 802a362:	f7ff ffd9 	bl	802a318 <BLE_TIMER_Stop>
  BLE_TIMER_t *timer = NULL;
 802a366:	2300      	movs	r3, #0
  if(AMM_ERROR_OK != AMM_Alloc (CFG_AMM_VIRTUAL_STACK_BLE,
 802a368:	2109      	movs	r1, #9
 802a36a:	2001      	movs	r0, #1
 802a36c:	aa03      	add	r2, sp, #12
  BLE_TIMER_t *timer = NULL;
 802a36e:	9303      	str	r3, [sp, #12]
  if(AMM_ERROR_OK != AMM_Alloc (CFG_AMM_VIRTUAL_STACK_BLE,
 802a370:	f7ff fb46 	bl	8029a00 <AMM_Alloc>
 802a374:	4604      	mov	r4, r0
 802a376:	b9e8      	cbnz	r0, 802a3b4 <BLE_TIMER_Start+0x58>
  timer->id = id;
 802a378:	9903      	ldr	r1, [sp, #12]
  LST_insert_tail(&BLE_TIMER_List, (tListNode *)timer);
 802a37a:	480f      	ldr	r0, [pc, #60]	; (802a3b8 <BLE_TIMER_Start+0x5c>)
  timer->id = id;
 802a37c:	810e      	strh	r6, [r1, #8]
  LST_insert_tail(&BLE_TIMER_List, (tListNode *)timer);
 802a37e:	f000 facc 	bl	802a91a <LST_insert_tail>
  if(UTIL_TIMER_Create(&timer->timerObject, timeout, UTIL_TIMER_ONESHOT, &BLE_TIMER_Callback, timer) != UTIL_TIMER_OK)
 802a382:	9803      	ldr	r0, [sp, #12]
 802a384:	4622      	mov	r2, r4
 802a386:	9000      	str	r0, [sp, #0]
 802a388:	4629      	mov	r1, r5
 802a38a:	4b0c      	ldr	r3, [pc, #48]	; (802a3bc <BLE_TIMER_Start+0x60>)
 802a38c:	300c      	adds	r0, #12
 802a38e:	f006 fc7d 	bl	8030c8c <UTIL_TIMER_Create>
 802a392:	b138      	cbz	r0, 802a3a4 <BLE_TIMER_Start+0x48>
    LST_remove_node ((tListNode *)timer);
 802a394:	9803      	ldr	r0, [sp, #12]
 802a396:	f000 facc 	bl	802a932 <LST_remove_node>
    (void)AMM_Free((uint32_t *)timer);
 802a39a:	9803      	ldr	r0, [sp, #12]
 802a39c:	f7ff fbe6 	bl	8029b6c <AMM_Free>
    return BLE_STATUS_FAILED;
 802a3a0:	2091      	movs	r0, #145	; 0x91
 802a3a2:	e005      	b.n	802a3b0 <BLE_TIMER_Start+0x54>
  if(UTIL_TIMER_Start(&timer->timerObject) != UTIL_TIMER_OK)
 802a3a4:	9803      	ldr	r0, [sp, #12]
 802a3a6:	300c      	adds	r0, #12
 802a3a8:	f006 fd04 	bl	8030db4 <UTIL_TIMER_Start>
 802a3ac:	2800      	cmp	r0, #0
 802a3ae:	d1f1      	bne.n	802a394 <BLE_TIMER_Start+0x38>
}
 802a3b0:	b004      	add	sp, #16
 802a3b2:	bd70      	pop	{r4, r5, r6, pc}
    return BLE_STATUS_INSUFFICIENT_RESOURCES;
 802a3b4:	2064      	movs	r0, #100	; 0x64
 802a3b6:	e7fb      	b.n	802a3b0 <BLE_TIMER_Start+0x54>
 802a3b8:	200090b8 	.word	0x200090b8
 802a3bc:	0802a2e9 	.word	0x0802a2e9

0802a3c0 <OTP_Read>:
/* Private function prototypes -----------------------------------------------*/
/* Exported variables --------------------------------------------------------*/
/* Exported functions --------------------------------------------------------*/

HAL_StatusTypeDef OTP_Read(uint8_t index, OTP_Data_s** otp_ptr)
{
 802a3c0:	b510      	push	{r4, lr}
  *otp_ptr = (OTP_Data_s*) (FLASH_OTP_BASE + FLASH_OTP_SIZE - 16);
 802a3c2:	4b08      	ldr	r3, [pc, #32]	; (802a3e4 <OTP_Read+0x24>)

  while ( (*otp_ptr)->index != index && (*otp_ptr) != (OTP_Data_s*) FLASH_OTP_BASE)
 802a3c4:	4a08      	ldr	r2, [pc, #32]	; (802a3e8 <OTP_Read+0x28>)
  *otp_ptr = (OTP_Data_s*) (FLASH_OTP_BASE + FLASH_OTP_SIZE - 16);
 802a3c6:	600b      	str	r3, [r1, #0]
  while ( (*otp_ptr)->index != index && (*otp_ptr) != (OTP_Data_s*) FLASH_OTP_BASE)
 802a3c8:	680b      	ldr	r3, [r1, #0]
 802a3ca:	7bdc      	ldrb	r4, [r3, #15]
 802a3cc:	4284      	cmp	r4, r0
 802a3ce:	d006      	beq.n	802a3de <OTP_Read+0x1e>
 802a3d0:	4293      	cmp	r3, r2
 802a3d2:	d101      	bne.n	802a3d8 <OTP_Read+0x18>
    (*otp_ptr) -= 1;
  }

  if ((*otp_ptr)->index != index)
  {
    return HAL_ERROR;
 802a3d4:	2001      	movs	r0, #1
  }

  return HAL_OK;
}
 802a3d6:	bd10      	pop	{r4, pc}
    (*otp_ptr) -= 1;
 802a3d8:	3b10      	subs	r3, #16
 802a3da:	600b      	str	r3, [r1, #0]
 802a3dc:	e7f4      	b.n	802a3c8 <OTP_Read+0x8>
  return HAL_OK;
 802a3de:	2000      	movs	r0, #0
 802a3e0:	e7f9      	b.n	802a3d6 <OTP_Read+0x16>
 802a3e2:	bf00      	nop
 802a3e4:	0bf901f0 	.word	0x0bf901f0
 802a3e8:	0bf90000 	.word	0x0bf90000

0802a3ec <LL_RCC_SetSysClkSource>:
  MODIFY_REG(RCC->CFGR1, RCC_CFGR1_SW, Source);
 802a3ec:	4a03      	ldr	r2, [pc, #12]	; (802a3fc <LL_RCC_SetSysClkSource+0x10>)
 802a3ee:	69d3      	ldr	r3, [r2, #28]
 802a3f0:	f023 0303 	bic.w	r3, r3, #3
 802a3f4:	4318      	orrs	r0, r3
 802a3f6:	61d0      	str	r0, [r2, #28]
}
 802a3f8:	4770      	bx	lr
 802a3fa:	bf00      	nop
 802a3fc:	46020c00 	.word	0x46020c00

0802a400 <LL_RCC_SetAHB5Divider>:
  MODIFY_REG(RCC->CFGR4, RCC_CFGR4_HDIV5, Divider);
 802a400:	4a04      	ldr	r2, [pc, #16]	; (802a414 <LL_RCC_SetAHB5Divider+0x14>)
 802a402:	f8d2 3200 	ldr.w	r3, [r2, #512]	; 0x200
 802a406:	f023 0310 	bic.w	r3, r3, #16
 802a40a:	4318      	orrs	r0, r3
 802a40c:	f8c2 0200 	str.w	r0, [r2, #512]	; 0x200
}
 802a410:	4770      	bx	lr
 802a412:	bf00      	nop
 802a414:	46020c00 	.word	0x46020c00

0802a418 <LL_PWR_SetRegulVoltageScaling>:
  MODIFY_REG(PWR->VOSR, PWR_VOSR_VOS, VoltageScaling);
 802a418:	4a03      	ldr	r2, [pc, #12]	; (802a428 <LL_PWR_SetRegulVoltageScaling+0x10>)
 802a41a:	68d3      	ldr	r3, [r2, #12]
 802a41c:	f423 3380 	bic.w	r3, r3, #65536	; 0x10000
 802a420:	4318      	orrs	r0, r3
 802a422:	60d0      	str	r0, [r2, #12]
}
 802a424:	4770      	bx	lr
 802a426:	bf00      	nop
 802a428:	46020800 	.word	0x46020800

0802a42c <ConfigStartPll>:
  MODIFY_REG(RCC->PLL1CFGR, RCC_PLL1CFGR_PLL1SRC, PLL1Source);
 802a42c:	4b06      	ldr	r3, [pc, #24]	; (802a448 <ConfigStartPll+0x1c>)
 802a42e:	6a9a      	ldr	r2, [r3, #40]	; 0x28
 802a430:	f042 0203 	orr.w	r2, r2, #3
 802a434:	629a      	str	r2, [r3, #40]	; 0x28
{
  /* Configure and start the PLL */
  LL_RCC_PLL1_SetMainSource(LL_RCC_PLL1SOURCE_HSE);

  /* Enable PLL1 */
  __HAL_RCC_PLL1_ENABLE();
 802a436:	681a      	ldr	r2, [r3, #0]
 802a438:	f042 7280 	orr.w	r2, r2, #16777216	; 0x1000000
 802a43c:	601a      	str	r2, [r3, #0]

  /* PLL1RDY interrupt raised when PLL is enabled */
  __HAL_RCC_ENABLE_IT(RCC_IT_PLL1RDY);
 802a43e:	6d1a      	ldr	r2, [r3, #80]	; 0x50
 802a440:	f042 0240 	orr.w	r2, r2, #64	; 0x40
 802a444:	651a      	str	r2, [r3, #80]	; 0x50
}
 802a446:	4770      	bx	lr
 802a448:	46020c00 	.word	0x46020c00

0802a44c <scm_setwaitstates>:
__WEAK void scm_pllconfigready(void)
{
}

void scm_setwaitstates(const scm_ws_lp_t ws_lp_config)
{
 802a44c:	b510      	push	{r4, lr}
  /* Configure flash and SRAMs */
  switch (ws_lp_config) {
 802a44e:	2804      	cmp	r0, #4
 802a450:	d83c      	bhi.n	802a4cc <scm_setwaitstates+0x80>
 802a452:	e8df f000 	tbb	[pc, r0]
 802a456:	1603      	.short	0x1603
 802a458:	3c24      	.short	0x3c24
 802a45a:	4d          	.byte	0x4d
 802a45b:	00          	.byte	0x00
  case LP:
    __HAL_FLASH_SET_LATENCY(FLASH_LATENCY_3);
 802a45c:	4a2a      	ldr	r2, [pc, #168]	; (802a508 <scm_setwaitstates+0xbc>)
    HAL_RAMCFG_ConfigWaitState(&sram1_ns, RAMCFG_WAITSTATE_1);
 802a45e:	f44f 3180 	mov.w	r1, #65536	; 0x10000
    __HAL_FLASH_SET_LATENCY(FLASH_LATENCY_3);
 802a462:	6813      	ldr	r3, [r2, #0]
    HAL_RAMCFG_ConfigWaitState(&sram1_ns, RAMCFG_WAITSTATE_1);
 802a464:	4829      	ldr	r0, [pc, #164]	; (802a50c <scm_setwaitstates+0xc0>)
    __HAL_FLASH_SET_LATENCY(FLASH_LATENCY_3);
 802a466:	f023 030f 	bic.w	r3, r3, #15
 802a46a:	f043 0303 	orr.w	r3, r3, #3
 802a46e:	6013      	str	r3, [r2, #0]
    HAL_RAMCFG_ConfigWaitState(&sram1_ns, RAMCFG_WAITSTATE_1);
 802a470:	f002 fbc6 	bl	802cc00 <HAL_RAMCFG_ConfigWaitState>
    HAL_RAMCFG_ConfigWaitState(&sram2_ns, RAMCFG_WAITSTATE_1);
 802a474:	f44f 3180 	mov.w	r1, #65536	; 0x10000
    break;

  default:
    break;
  }
}
 802a478:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
    HAL_RAMCFG_ConfigWaitState(&sram2_ns, scm_system_clock_config.sram_ws_cfg);
 802a47c:	4824      	ldr	r0, [pc, #144]	; (802a510 <scm_setwaitstates+0xc4>)
 802a47e:	f002 bbbf 	b.w	802cc00 <HAL_RAMCFG_ConfigWaitState>
    __HAL_FLASH_SET_LATENCY(scm_system_clock_config.flash_ws_cfg);
 802a482:	4a21      	ldr	r2, [pc, #132]	; (802a508 <scm_setwaitstates+0xbc>)
 802a484:	4c23      	ldr	r4, [pc, #140]	; (802a514 <scm_setwaitstates+0xc8>)
 802a486:	6813      	ldr	r3, [r2, #0]
 802a488:	6861      	ldr	r1, [r4, #4]
 802a48a:	f023 030f 	bic.w	r3, r3, #15
 802a48e:	430b      	orrs	r3, r1
 802a490:	6013      	str	r3, [r2, #0]
    HAL_RAMCFG_ConfigWaitState(&sram1_ns, scm_system_clock_config.sram_ws_cfg);
 802a492:	68a1      	ldr	r1, [r4, #8]
 802a494:	481d      	ldr	r0, [pc, #116]	; (802a50c <scm_setwaitstates+0xc0>)
 802a496:	f002 fbb3 	bl	802cc00 <HAL_RAMCFG_ConfigWaitState>
    HAL_RAMCFG_ConfigWaitState(&sram2_ns, scm_system_clock_config.sram_ws_cfg);
 802a49a:	68a1      	ldr	r1, [r4, #8]
 802a49c:	e7ec      	b.n	802a478 <scm_setwaitstates+0x2c>
    __HAL_FLASH_SET_LATENCY(FLASH_LATENCY_1);
 802a49e:	4a1a      	ldr	r2, [pc, #104]	; (802a508 <scm_setwaitstates+0xbc>)
    HAL_RAMCFG_ConfigWaitState(&sram1_ns, RAMCFG_WAITSTATE_1);
 802a4a0:	f44f 3180 	mov.w	r1, #65536	; 0x10000
    __HAL_FLASH_SET_LATENCY(FLASH_LATENCY_1);
 802a4a4:	6813      	ldr	r3, [r2, #0]
    HAL_RAMCFG_ConfigWaitState(&sram1_ns, RAMCFG_WAITSTATE_1);
 802a4a6:	4819      	ldr	r0, [pc, #100]	; (802a50c <scm_setwaitstates+0xc0>)
    __HAL_FLASH_SET_LATENCY(FLASH_LATENCY_1);
 802a4a8:	f023 030f 	bic.w	r3, r3, #15
 802a4ac:	f043 0301 	orr.w	r3, r3, #1
 802a4b0:	6013      	str	r3, [r2, #0]
    HAL_RAMCFG_ConfigWaitState(&sram1_ns, RAMCFG_WAITSTATE_1);
 802a4b2:	f002 fba5 	bl	802cc00 <HAL_RAMCFG_ConfigWaitState>
    HAL_RAMCFG_ConfigWaitState(&sram2_ns, RAMCFG_WAITSTATE_1);
 802a4b6:	f44f 3180 	mov.w	r1, #65536	; 0x10000
 802a4ba:	4815      	ldr	r0, [pc, #84]	; (802a510 <scm_setwaitstates+0xc4>)
 802a4bc:	f002 fba0 	bl	802cc00 <HAL_RAMCFG_ConfigWaitState>
    scm_system_clock_config.flash_ws_cfg = FLASH_LATENCY_1;
 802a4c0:	2201      	movs	r2, #1
 802a4c2:	4b14      	ldr	r3, [pc, #80]	; (802a514 <scm_setwaitstates+0xc8>)
 802a4c4:	605a      	str	r2, [r3, #4]
    scm_system_clock_config.sram_ws_cfg = RAMCFG_WAITSTATE_1;
 802a4c6:	f44f 3280 	mov.w	r2, #65536	; 0x10000
    scm_system_clock_config.sram_ws_cfg = RAMCFG_WAITSTATE_0;
 802a4ca:	609a      	str	r2, [r3, #8]
}
 802a4cc:	bd10      	pop	{r4, pc}
    __HAL_FLASH_SET_LATENCY(FLASH_LATENCY_0);
 802a4ce:	4a0e      	ldr	r2, [pc, #56]	; (802a508 <scm_setwaitstates+0xbc>)
    HAL_RAMCFG_ConfigWaitState(&sram1_ns, RAMCFG_WAITSTATE_0);
 802a4d0:	2100      	movs	r1, #0
    __HAL_FLASH_SET_LATENCY(FLASH_LATENCY_0);
 802a4d2:	6813      	ldr	r3, [r2, #0]
    HAL_RAMCFG_ConfigWaitState(&sram1_ns, RAMCFG_WAITSTATE_0);
 802a4d4:	480d      	ldr	r0, [pc, #52]	; (802a50c <scm_setwaitstates+0xc0>)
    __HAL_FLASH_SET_LATENCY(FLASH_LATENCY_0);
 802a4d6:	f023 030f 	bic.w	r3, r3, #15
 802a4da:	6013      	str	r3, [r2, #0]
    HAL_RAMCFG_ConfigWaitState(&sram1_ns, RAMCFG_WAITSTATE_0);
 802a4dc:	f002 fb90 	bl	802cc00 <HAL_RAMCFG_ConfigWaitState>
    HAL_RAMCFG_ConfigWaitState(&sram2_ns, RAMCFG_WAITSTATE_0);
 802a4e0:	2100      	movs	r1, #0
 802a4e2:	480b      	ldr	r0, [pc, #44]	; (802a510 <scm_setwaitstates+0xc4>)
 802a4e4:	f002 fb8c 	bl	802cc00 <HAL_RAMCFG_ConfigWaitState>
    scm_system_clock_config.flash_ws_cfg = FLASH_LATENCY_0;
 802a4e8:	2200      	movs	r2, #0
 802a4ea:	4b0a      	ldr	r3, [pc, #40]	; (802a514 <scm_setwaitstates+0xc8>)
 802a4ec:	605a      	str	r2, [r3, #4]
 802a4ee:	e7ec      	b.n	802a4ca <scm_setwaitstates+0x7e>
    __HAL_FLASH_SET_LATENCY(FLASH_LATENCY_3);
 802a4f0:	4a05      	ldr	r2, [pc, #20]	; (802a508 <scm_setwaitstates+0xbc>)
 802a4f2:	6813      	ldr	r3, [r2, #0]
 802a4f4:	f023 030f 	bic.w	r3, r3, #15
 802a4f8:	f043 0303 	orr.w	r3, r3, #3
 802a4fc:	6013      	str	r3, [r2, #0]
    scm_system_clock_config.flash_ws_cfg = FLASH_LATENCY_3;
 802a4fe:	2203      	movs	r2, #3
 802a500:	4b04      	ldr	r3, [pc, #16]	; (802a514 <scm_setwaitstates+0xc8>)
 802a502:	605a      	str	r2, [r3, #4]
}
 802a504:	e7e2      	b.n	802a4cc <scm_setwaitstates+0x80>
 802a506:	bf00      	nop
 802a508:	40022000 	.word	0x40022000
 802a50c:	200004b8 	.word	0x200004b8
 802a510:	200004c4 	.word	0x200004c4
 802a514:	200090c4 	.word	0x200090c4

0802a518 <SwitchHse16toHse32>:
  LL_PWR_SetRegulVoltageScaling(LL_PWR_REGU_VOLTAGE_SCALE1);
 802a518:	f44f 3080 	mov.w	r0, #65536	; 0x10000
{
 802a51c:	b508      	push	{r3, lr}
  LL_PWR_SetRegulVoltageScaling(LL_PWR_REGU_VOLTAGE_SCALE1);
 802a51e:	f7ff ff7b 	bl	802a418 <LL_PWR_SetRegulVoltageScaling>
  return ((READ_BIT(PWR->VOSR, PWR_VOSR_VOSRDY) == (PWR_VOSR_VOSRDY)) ? 1UL : 0UL);
 802a522:	4a08      	ldr	r2, [pc, #32]	; (802a544 <SwitchHse16toHse32+0x2c>)
 802a524:	68d3      	ldr	r3, [r2, #12]
 802a526:	041b      	lsls	r3, r3, #16
 802a528:	d5fc      	bpl.n	802a524 <SwitchHse16toHse32+0xc>
  CLEAR_BIT(RCC->CR, RCC_CR_HSEPRE);
 802a52a:	4a07      	ldr	r2, [pc, #28]	; (802a548 <SwitchHse16toHse32+0x30>)
  scm_setwaitstates(HSE32);
 802a52c:	2003      	movs	r0, #3
 802a52e:	6813      	ldr	r3, [r2, #0]
 802a530:	f423 1380 	bic.w	r3, r3, #1048576	; 0x100000
 802a534:	6013      	str	r3, [r2, #0]
 802a536:	f7ff ff89 	bl	802a44c <scm_setwaitstates>
}
 802a53a:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
  LL_RCC_SetAHB5Divider(LL_RCC_AHB5_DIVIDER_1); /* divided by 1 */
 802a53e:	2000      	movs	r0, #0
 802a540:	f7ff bf5e 	b.w	802a400 <LL_RCC_SetAHB5Divider>
 802a544:	46020800 	.word	0x46020800
 802a548:	46020c00 	.word	0x46020c00

0802a54c <scm_setsystemclock>:
{
 802a54c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
  __ASM volatile ("MRS %0, basepri" : "=r" (result) );
 802a54e:	f3ef 8611 	mrs	r6, BASEPRI
  __ASM volatile ("MSR basepri_max, %0" : : "r" (basePri) : "memory");
 802a552:	2710      	movs	r7, #16
 802a554:	f387 8812 	msr	BASEPRI_MAX, r7
  scm_system_clock_requests[user_id] = sysclockconfig;
 802a558:	4a41      	ldr	r2, [pc, #260]	; (802a660 <scm_setsystemclock+0x114>)
  if(scm_system_clock_config.targeted_clock_freq != max_freq_requested)
 802a55a:	4d42      	ldr	r5, [pc, #264]	; (802a664 <scm_setsystemclock+0x118>)
  scm_system_clock_requests[user_id] = sysclockconfig;
 802a55c:	5411      	strb	r1, [r2, r0]
    if(scm_system_clock_requests[idx] > max)
 802a55e:	7813      	ldrb	r3, [r2, #0]
 802a560:	7852      	ldrb	r2, [r2, #1]
 802a562:	4293      	cmp	r3, r2
 802a564:	bf38      	it	cc
 802a566:	4613      	movcc	r3, r2
  if(scm_system_clock_config.targeted_clock_freq != max_freq_requested)
 802a568:	782a      	ldrb	r2, [r5, #0]
 802a56a:	429a      	cmp	r2, r3
 802a56c:	d009      	beq.n	802a582 <scm_setsystemclock+0x36>
  return (uint32_t)(READ_BIT(RCC->CFGR1, RCC_CFGR1_SWS));
 802a56e:	4c3e      	ldr	r4, [pc, #248]	; (802a668 <scm_setsystemclock+0x11c>)
    scm_system_clock_config.targeted_clock_freq = max_freq_requested;
 802a570:	702b      	strb	r3, [r5, #0]
 802a572:	69e0      	ldr	r0, [r4, #28]
    if(LL_RCC_GetSysClkSource() == LL_RCC_SYS_CLKSOURCE_STATUS_HSI)
 802a574:	f010 000c 	ands.w	r0, r0, #12
 802a578:	d138      	bne.n	802a5ec <scm_setsystemclock+0xa0>
      if(scm_system_clock_config.targeted_clock_freq == HSE_16MHZ)
 802a57a:	2b01      	cmp	r3, #1
 802a57c:	d104      	bne.n	802a588 <scm_setsystemclock+0x3c>
        LL_PWR_SetRegulVoltageScaling(LL_PWR_REGU_VOLTAGE_SCALE2);
 802a57e:	f7ff ff4b 	bl	802a418 <LL_PWR_SetRegulVoltageScaling>
  __ASM volatile ("MSR basepri, %0" : : "r" (basePri) : "memory");
 802a582:	f386 8811 	msr	BASEPRI, r6
}
 802a586:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
        LL_PWR_SetRegulVoltageScaling(LL_PWR_REGU_VOLTAGE_SCALE1);
 802a588:	f44f 3080 	mov.w	r0, #65536	; 0x10000
 802a58c:	f7ff ff44 	bl	802a418 <LL_PWR_SetRegulVoltageScaling>
        if(RadioState != SCM_RADIO_NOT_ACTIVE)
 802a590:	4b36      	ldr	r3, [pc, #216]	; (802a66c <scm_setsystemclock+0x120>)
 802a592:	781b      	ldrb	r3, [r3, #0]
 802a594:	2b00      	cmp	r3, #0
 802a596:	d0f4      	beq.n	802a582 <scm_setsystemclock+0x36>
            __HAL_RCC_DISABLE_IT(RCC_IT_HSERDY);
 802a598:	6d23      	ldr	r3, [r4, #80]	; 0x50
 802a59a:	4a35      	ldr	r2, [pc, #212]	; (802a670 <scm_setsystemclock+0x124>)
 802a59c:	f023 0310 	bic.w	r3, r3, #16
 802a5a0:	6523      	str	r3, [r4, #80]	; 0x50
 802a5a2:	68d3      	ldr	r3, [r2, #12]
 802a5a4:	0418      	lsls	r0, r3, #16
 802a5a6:	d5fc      	bpl.n	802a5a2 <scm_setsystemclock+0x56>
  return ((READ_BIT(RCC->CR, RCC_CR_HSERDY) == RCC_CR_HSERDY) ? 1UL : 0UL);
 802a5a8:	4c2f      	ldr	r4, [pc, #188]	; (802a668 <scm_setsystemclock+0x11c>)
 802a5aa:	6823      	ldr	r3, [r4, #0]
 802a5ac:	0399      	lsls	r1, r3, #14
 802a5ae:	d5fc      	bpl.n	802a5aa <scm_setsystemclock+0x5e>
            LL_RCC_SetSysClkSource(LL_RCC_SYS_CLKSOURCE_HSE);
 802a5b0:	2002      	movs	r0, #2
 802a5b2:	f7ff ff1b 	bl	802a3ec <LL_RCC_SetSysClkSource>
  return (uint32_t)(READ_BIT(RCC->CFGR1, RCC_CFGR1_SWS));
 802a5b6:	69e3      	ldr	r3, [r4, #28]
 802a5b8:	f003 030c 	and.w	r3, r3, #12
            while (LL_RCC_GetSysClkSource() != LL_RCC_SYS_CLKSOURCE_STATUS_HSE);
 802a5bc:	2b08      	cmp	r3, #8
 802a5be:	d1fa      	bne.n	802a5b6 <scm_setsystemclock+0x6a>
  CLEAR_BIT(RCC->CR, RCC_CR_HSEPRE);
 802a5c0:	6823      	ldr	r3, [r4, #0]
            scm_setwaitstates(HSE32); /* There is no limitation when in Range1 */
 802a5c2:	2003      	movs	r0, #3
 802a5c4:	f423 1380 	bic.w	r3, r3, #1048576	; 0x100000
 802a5c8:	6023      	str	r3, [r4, #0]
 802a5ca:	f7ff ff3f 	bl	802a44c <scm_setwaitstates>
            LL_RCC_SetAHB5Divider(LL_RCC_AHB5_DIVIDER_1);
 802a5ce:	2000      	movs	r0, #0
 802a5d0:	f7ff ff16 	bl	802a400 <LL_RCC_SetAHB5Divider>
  CLEAR_BIT(RCC->CR, RCC_CR_HSION);
 802a5d4:	6823      	ldr	r3, [r4, #0]
 802a5d6:	f423 7380 	bic.w	r3, r3, #256	; 0x100
 802a5da:	6023      	str	r3, [r4, #0]
            if(scm_system_clock_config.targeted_clock_freq == SYS_PLL)
 802a5dc:	782b      	ldrb	r3, [r5, #0]
 802a5de:	2b03      	cmp	r3, #3
 802a5e0:	d101      	bne.n	802a5e6 <scm_setsystemclock+0x9a>
                ConfigStartPll();
 802a5e2:	f7ff ff23 	bl	802a42c <ConfigStartPll>
            SystemCoreClockUpdate();
 802a5e6:	f000 fc67 	bl	802aeb8 <SystemCoreClockUpdate>
 802a5ea:	e7ca      	b.n	802a582 <scm_setsystemclock+0x36>
  SYSTEM_DEBUG_SIGNAL_SET(SCM_SYSTEM_CLOCK_CONFIG);
 802a5ec:	200d      	movs	r0, #13
 802a5ee:	f7ff fd71 	bl	802a0d4 <SYSTEM_DEBUG_SIGNAL_SET>
  switch (scm_system_clock_config.targeted_clock_freq)
 802a5f2:	782b      	ldrb	r3, [r5, #0]
 802a5f4:	2b02      	cmp	r3, #2
 802a5f6:	d017      	beq.n	802a628 <scm_setsystemclock+0xdc>
 802a5f8:	2b03      	cmp	r3, #3
 802a5fa:	d026      	beq.n	802a64a <scm_setsystemclock+0xfe>
 802a5fc:	2b01      	cmp	r3, #1
 802a5fe:	d10f      	bne.n	802a620 <scm_setsystemclock+0xd4>
  LL_RCC_SetAHB5Divider(LL_RCC_AHB5_DIVIDER_2);
 802a600:	4638      	mov	r0, r7
  return (uint32_t)(READ_BIT(RCC->CFGR1, RCC_CFGR1_SWS));
 802a602:	69e3      	ldr	r3, [r4, #28]
 802a604:	f7ff fefc 	bl	802a400 <LL_RCC_SetAHB5Divider>
  scm_setwaitstates(HSE16);
 802a608:	2002      	movs	r0, #2
 802a60a:	f7ff ff1f 	bl	802a44c <scm_setwaitstates>
  SET_BIT(RCC->CR, RCC_CR_HSEPRE);
 802a60e:	6823      	ldr	r3, [r4, #0]
  LL_PWR_SetRegulVoltageScaling(LL_PWR_REGU_VOLTAGE_SCALE2);
 802a610:	2000      	movs	r0, #0
 802a612:	f443 1380 	orr.w	r3, r3, #1048576	; 0x100000
 802a616:	6023      	str	r3, [r4, #0]
 802a618:	f7ff fefe 	bl	802a418 <LL_PWR_SetRegulVoltageScaling>
        SystemCoreClockUpdate();
 802a61c:	f000 fc4c 	bl	802aeb8 <SystemCoreClockUpdate>
  SYSTEM_DEBUG_SIGNAL_RESET(SCM_SYSTEM_CLOCK_CONFIG);
 802a620:	200d      	movs	r0, #13
 802a622:	f7ff fd58 	bl	802a0d6 <SYSTEM_DEBUG_SIGNAL_RESET>
}
 802a626:	e7ac      	b.n	802a582 <scm_setsystemclock+0x36>
  return (uint32_t)(READ_BIT(RCC->CFGR4, RCC_CFGR4_HDIV5));
 802a628:	f8d4 3200 	ldr.w	r3, [r4, #512]	; 0x200
      if(LL_RCC_GetAHB5Divider() == LL_RCC_AHB5_DIVIDER_2)
 802a62c:	06da      	lsls	r2, r3, #27
 802a62e:	d502      	bpl.n	802a636 <scm_setsystemclock+0xea>
        SwitchHse16toHse32();
 802a630:	f7ff ff72 	bl	802a518 <SwitchHse16toHse32>
 802a634:	e7f2      	b.n	802a61c <scm_setsystemclock+0xd0>
  return (uint32_t)(READ_BIT(RCC->CFGR1, RCC_CFGR1_SWS));
 802a636:	69e3      	ldr	r3, [r4, #28]
  CLEAR_BIT(RCC->CR, RCC_CR_PLL1ON);
 802a638:	6823      	ldr	r3, [r4, #0]
 802a63a:	f023 7380 	bic.w	r3, r3, #16777216	; 0x1000000
 802a63e:	6023      	str	r3, [r4, #0]
        __HAL_RCC_DISABLE_IT(RCC_IT_PLL1RDY);
 802a640:	6d23      	ldr	r3, [r4, #80]	; 0x50
 802a642:	f023 0340 	bic.w	r3, r3, #64	; 0x40
 802a646:	6523      	str	r3, [r4, #80]	; 0x50
 802a648:	e7ea      	b.n	802a620 <scm_setsystemclock+0xd4>
  return (uint32_t)(READ_BIT(RCC->CFGR4, RCC_CFGR4_HDIV5));
 802a64a:	f8d4 3200 	ldr.w	r3, [r4, #512]	; 0x200
      if(LL_RCC_GetAHB5Divider() == LL_RCC_AHB5_DIVIDER_2)
 802a64e:	06db      	lsls	r3, r3, #27
 802a650:	d503      	bpl.n	802a65a <scm_setsystemclock+0x10e>
        SwitchHse16toHse32();
 802a652:	f7ff ff61 	bl	802a518 <SwitchHse16toHse32>
        SystemCoreClockUpdate();
 802a656:	f000 fc2f 	bl	802aeb8 <SystemCoreClockUpdate>
      ConfigStartPll();
 802a65a:	f7ff fee7 	bl	802a42c <ConfigStartPll>
      break;
 802a65e:	e7df      	b.n	802a620 <scm_setsystemclock+0xd4>
 802a660:	200090f0 	.word	0x200090f0
 802a664:	200090c4 	.word	0x200090c4
 802a668:	46020c00 	.word	0x46020c00
 802a66c:	200090c0 	.word	0x200090c0
 802a670:	46020800 	.word	0x46020800

0802a674 <scm_hserdy_isr>:

void scm_hserdy_isr(void)
{
  SYSTEM_DEBUG_SIGNAL_SET(SCM_HSERDY_ISR);
 802a674:	200e      	movs	r0, #14
{
 802a676:	b510      	push	{r4, lr}
  SYSTEM_DEBUG_SIGNAL_SET(SCM_HSERDY_ISR);
 802a678:	f7ff fd2c 	bl	802a0d4 <SYSTEM_DEBUG_SIGNAL_SET>
  return (uint32_t)(READ_BIT(RCC->CFGR1, RCC_CFGR1_SWS));
 802a67c:	4b20      	ldr	r3, [pc, #128]	; (802a700 <scm_hserdy_isr+0x8c>)
 802a67e:	69db      	ldr	r3, [r3, #28]

  if(LL_RCC_GetSysClkSource() == LL_RCC_SYS_CLKSOURCE_STATUS_HSI)
 802a680:	f013 0f0c 	tst.w	r3, #12
 802a684:	d11f      	bne.n	802a6c6 <scm_hserdy_isr+0x52>
 802a686:	4a1f      	ldr	r2, [pc, #124]	; (802a704 <scm_hserdy_isr+0x90>)
 802a688:	68d3      	ldr	r3, [r2, #12]
 802a68a:	041b      	lsls	r3, r3, #16
 802a68c:	d5fc      	bpl.n	802a688 <scm_hserdy_isr+0x14>
  {
    /* Wait until VOS has changed */
    while (LL_PWR_IsActiveFlag_VOS() == 0);

    if(scm_system_clock_config.targeted_clock_freq == HSE_16MHZ)
 802a68e:	4c1e      	ldr	r4, [pc, #120]	; (802a708 <scm_hserdy_isr+0x94>)
 802a690:	491b      	ldr	r1, [pc, #108]	; (802a700 <scm_hserdy_isr+0x8c>)
 802a692:	7823      	ldrb	r3, [r4, #0]
 802a694:	2b01      	cmp	r3, #1
 802a696:	d11b      	bne.n	802a6d0 <scm_hserdy_isr+0x5c>
  SET_BIT(RCC->CR, RCC_CR_HSEPRE);
 802a698:	680b      	ldr	r3, [r1, #0]
        * The current system configuration is:
        * Range2, HDIV5 set, Wait States compliant to HSE16
        */
      LL_RCC_HSE_EnablePrescaler();
      /* Switch to HSE */
      LL_RCC_SetSysClkSource(LL_RCC_SYS_CLKSOURCE_HSE);
 802a69a:	2002      	movs	r0, #2
 802a69c:	f443 1380 	orr.w	r3, r3, #1048576	; 0x100000
 802a6a0:	600b      	str	r3, [r1, #0]
 802a6a2:	f7ff fea3 	bl	802a3ec <LL_RCC_SetSysClkSource>
  return (uint32_t)(READ_BIT(RCC->CFGR1, RCC_CFGR1_SWS));
 802a6a6:	69cb      	ldr	r3, [r1, #28]
 802a6a8:	f003 030c 	and.w	r3, r3, #12
      while (LL_RCC_GetSysClkSource() != LL_RCC_SYS_CLKSOURCE_STATUS_HSE);
 802a6ac:	2b08      	cmp	r3, #8
 802a6ae:	d1fa      	bne.n	802a6a6 <scm_hserdy_isr+0x32>
  CLEAR_BIT(RCC->CR, RCC_CR_HSION);
 802a6b0:	4b13      	ldr	r3, [pc, #76]	; (802a700 <scm_hserdy_isr+0x8c>)
 802a6b2:	681a      	ldr	r2, [r3, #0]
 802a6b4:	f422 7280 	bic.w	r2, r2, #256	; 0x100
 802a6b8:	601a      	str	r2, [r3, #0]

    /* As system switched to HSE, disable HSI */
    LL_RCC_HSI_Disable();

    /* Disable HSERDY interrupt */
    __HAL_RCC_DISABLE_IT(RCC_IT_HSERDY);
 802a6ba:	6d1a      	ldr	r2, [r3, #80]	; 0x50
 802a6bc:	f022 0210 	bic.w	r2, r2, #16
 802a6c0:	651a      	str	r2, [r3, #80]	; 0x50

    /* Ensure time base clock coherency */
    SystemCoreClockUpdate();
 802a6c2:	f000 fbf9 	bl	802aeb8 <SystemCoreClockUpdate>
  }

  SYSTEM_DEBUG_SIGNAL_RESET(SCM_HSERDY_ISR);
}
 802a6c6:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
  SYSTEM_DEBUG_SIGNAL_RESET(SCM_HSERDY_ISR);
 802a6ca:	200e      	movs	r0, #14
 802a6cc:	f7ff bd03 	b.w	802a0d6 <SYSTEM_DEBUG_SIGNAL_RESET>
      LL_RCC_SetSysClkSource(LL_RCC_SYS_CLKSOURCE_HSE);
 802a6d0:	2002      	movs	r0, #2
 802a6d2:	f7ff fe8b 	bl	802a3ec <LL_RCC_SetSysClkSource>
  return (uint32_t)(READ_BIT(RCC->CFGR1, RCC_CFGR1_SWS));
 802a6d6:	69cb      	ldr	r3, [r1, #28]
 802a6d8:	f003 030c 	and.w	r3, r3, #12
      while (LL_RCC_GetSysClkSource() != LL_RCC_SYS_CLKSOURCE_STATUS_HSE);
 802a6dc:	2b08      	cmp	r3, #8
 802a6de:	d1fa      	bne.n	802a6d6 <scm_hserdy_isr+0x62>
  CLEAR_BIT(RCC->CR, RCC_CR_HSEPRE);
 802a6e0:	680b      	ldr	r3, [r1, #0]
      scm_setwaitstates(HSE32); /* There is no limitation when in Range1 */
 802a6e2:	2003      	movs	r0, #3
 802a6e4:	f423 1380 	bic.w	r3, r3, #1048576	; 0x100000
 802a6e8:	600b      	str	r3, [r1, #0]
 802a6ea:	f7ff feaf 	bl	802a44c <scm_setwaitstates>
      if(scm_system_clock_config.targeted_clock_freq == SYS_PLL)
 802a6ee:	7823      	ldrb	r3, [r4, #0]
 802a6f0:	2b03      	cmp	r3, #3
 802a6f2:	d101      	bne.n	802a6f8 <scm_hserdy_isr+0x84>
        ConfigStartPll();
 802a6f4:	f7ff fe9a 	bl	802a42c <ConfigStartPll>
      LL_RCC_SetAHB5Divider(LL_RCC_AHB5_DIVIDER_1); /* divided by 1 */
 802a6f8:	2000      	movs	r0, #0
 802a6fa:	f7ff fe81 	bl	802a400 <LL_RCC_SetAHB5Divider>
 802a6fe:	e7d7      	b.n	802a6b0 <scm_hserdy_isr+0x3c>
 802a700:	46020c00 	.word	0x46020c00
 802a704:	46020800 	.word	0x46020800
 802a708:	200090c4 	.word	0x200090c4

0802a70c <scm_setup>:
{
 802a70c:	b510      	push	{r4, lr}
  SET_BIT(RCC->CR, RCC_CR_HSEON);
 802a70e:	4c20      	ldr	r4, [pc, #128]	; (802a790 <scm_setup+0x84>)
  SYSTEM_DEBUG_SIGNAL_SET(SCM_SETUP);
 802a710:	200c      	movs	r0, #12
 802a712:	f7ff fcdf 	bl	802a0d4 <SYSTEM_DEBUG_SIGNAL_SET>
 802a716:	6823      	ldr	r3, [r4, #0]
    LL_RCC_SetSysClkSource(LL_RCC_SYS_CLKSOURCE_HSE);
 802a718:	2002      	movs	r0, #2
 802a71a:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 802a71e:	6023      	str	r3, [r4, #0]
  return ((READ_BIT(RCC->CR, RCC_CR_HSERDY) == RCC_CR_HSERDY) ? 1UL : 0UL);
 802a720:	6823      	ldr	r3, [r4, #0]
 802a722:	0399      	lsls	r1, r3, #14
 802a724:	d51e      	bpl.n	802a764 <scm_setup+0x58>
  if ((LL_RCC_HSE_IsReady() != 0) && (RadioState == SCM_RADIO_ACTIVE))
 802a726:	4b1b      	ldr	r3, [pc, #108]	; (802a794 <scm_setup+0x88>)
 802a728:	781b      	ldrb	r3, [r3, #0]
 802a72a:	2b01      	cmp	r3, #1
 802a72c:	d11a      	bne.n	802a764 <scm_setup+0x58>
    LL_RCC_SetSysClkSource(LL_RCC_SYS_CLKSOURCE_HSE);
 802a72e:	f7ff fe5d 	bl	802a3ec <LL_RCC_SetSysClkSource>
  return (uint32_t)(READ_BIT(RCC->CFGR1, RCC_CFGR1_SWS));
 802a732:	69e3      	ldr	r3, [r4, #28]
 802a734:	f003 030c 	and.w	r3, r3, #12
    while (LL_RCC_GetSysClkSource() != LL_RCC_SYS_CLKSOURCE_STATUS_HSE);
 802a738:	2b08      	cmp	r3, #8
 802a73a:	d1fa      	bne.n	802a732 <scm_setup+0x26>
    scm_setwaitstates(HSE32); /* There is no limitation when in Range1 */
 802a73c:	2003      	movs	r0, #3
 802a73e:	f7ff fe85 	bl	802a44c <scm_setwaitstates>
  CLEAR_BIT(RCC->CR, RCC_CR_HSION);
 802a742:	6823      	ldr	r3, [r4, #0]
 802a744:	f423 7380 	bic.w	r3, r3, #256	; 0x100
 802a748:	6023      	str	r3, [r4, #0]
    if(scm_system_clock_config.targeted_clock_freq == SYS_PLL)
 802a74a:	4b13      	ldr	r3, [pc, #76]	; (802a798 <scm_setup+0x8c>)
 802a74c:	781b      	ldrb	r3, [r3, #0]
 802a74e:	2b03      	cmp	r3, #3
 802a750:	d101      	bne.n	802a756 <scm_setup+0x4a>
      ConfigStartPll();
 802a752:	f7ff fe6b 	bl	802a42c <ConfigStartPll>
    SystemCoreClockUpdate();
 802a756:	f000 fbaf 	bl	802aeb8 <SystemCoreClockUpdate>
}
 802a75a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
  SYSTEM_DEBUG_SIGNAL_RESET(SCM_SETUP);
 802a75e:	200c      	movs	r0, #12
 802a760:	f7ff bcb9 	b.w	802a0d6 <SYSTEM_DEBUG_SIGNAL_RESET>
    scm_setwaitstates(HSE16);
 802a764:	f7ff fe72 	bl	802a44c <scm_setwaitstates>
    if(scm_system_clock_config.targeted_clock_freq != HSE_16MHZ)
 802a768:	4b0b      	ldr	r3, [pc, #44]	; (802a798 <scm_setup+0x8c>)
 802a76a:	781b      	ldrb	r3, [r3, #0]
 802a76c:	2b01      	cmp	r3, #1
 802a76e:	d003      	beq.n	802a778 <scm_setup+0x6c>
      LL_PWR_SetRegulVoltageScaling(LL_PWR_REGU_VOLTAGE_SCALE1);
 802a770:	f44f 3080 	mov.w	r0, #65536	; 0x10000
 802a774:	f7ff fe50 	bl	802a418 <LL_PWR_SetRegulVoltageScaling>
  return ((READ_BIT(RCC->CR, RCC_CR_HSERDY) == RCC_CR_HSERDY) ? 1UL : 0UL);
 802a778:	4b05      	ldr	r3, [pc, #20]	; (802a790 <scm_setup+0x84>)
 802a77a:	681a      	ldr	r2, [r3, #0]
 802a77c:	0392      	lsls	r2, r2, #14
 802a77e:	d404      	bmi.n	802a78a <scm_setup+0x7e>
      __HAL_RCC_ENABLE_IT(RCC_IT_HSERDY);
 802a780:	6d1a      	ldr	r2, [r3, #80]	; 0x50
 802a782:	f042 0210 	orr.w	r2, r2, #16
 802a786:	651a      	str	r2, [r3, #80]	; 0x50
 802a788:	e7e7      	b.n	802a75a <scm_setup+0x4e>
      scm_hserdy_isr();
 802a78a:	f7ff ff73 	bl	802a674 <scm_hserdy_isr>
 802a78e:	e7e4      	b.n	802a75a <scm_setup+0x4e>
 802a790:	46020c00 	.word	0x46020c00
 802a794:	200090c0 	.word	0x200090c0
 802a798:	200090c4 	.word	0x200090c4

0802a79c <scm_init>:
{
 802a79c:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
  scm_system_clock_config.pll.PLLN = 25;
 802a79e:	2319      	movs	r3, #25
 802a7a0:	2204      	movs	r2, #4
  scm_system_clock_config.pll.PLLM = 4;
 802a7a2:	4c37      	ldr	r4, [pc, #220]	; (802a880 <scm_init+0xe4>)
  scm_system_clock_config.pll.PLLP = 2;
 802a7a4:	2602      	movs	r6, #2
  scm_system_clock_config.pll.PLLN = 25;
 802a7a6:	e9c4 2304 	strd	r2, r3, [r4, #16]
  scm_system_clock_config.pll.AHB5_PLL1_CLKDivider = RCC_SYSCLK_PLL1_DIV4;
 802a7aa:	2306      	movs	r3, #6
  scm_system_clock_config.pll.PLLFractional = 0;
 802a7ac:	2700      	movs	r7, #0
  scm_system_clock_config.pll.pll_mode = PLL_INTEGER_MODE;
 802a7ae:	2501      	movs	r5, #1
  scm_system_clock_config.pll.PLLQ = 2;
 802a7b0:	e9c4 6606 	strd	r6, r6, [r4, #24]
  scm_system_clock_config.pll.AHB5_PLL1_CLKDivider = RCC_SYSCLK_PLL1_DIV4;
 802a7b4:	62a3      	str	r3, [r4, #40]	; 0x28
  scm_system_clock_config.flash_ws_cfg = __HAL_FLASH_GET_LATENCY();
 802a7b6:	4b33      	ldr	r3, [pc, #204]	; (802a884 <scm_init+0xe8>)
  scm_system_clock_config.pll.PLLFractional = 0;
 802a7b8:	6267      	str	r7, [r4, #36]	; 0x24
  scm_system_clock_config.pll.PLLR = 2;
 802a7ba:	6226      	str	r6, [r4, #32]
  scm_system_clock_config.pll.pll_mode = PLL_INTEGER_MODE;
 802a7bc:	7325      	strb	r5, [r4, #12]
  scm_system_clock_config.flash_ws_cfg = __HAL_FLASH_GET_LATENCY();
 802a7be:	681b      	ldr	r3, [r3, #0]
  scm_system_clock_config.sram_ws_cfg = HAL_RAMCFG_GetWaitState(&sram1_ns);
 802a7c0:	4831      	ldr	r0, [pc, #196]	; (802a888 <scm_init+0xec>)
  scm_system_clock_config.flash_ws_cfg = __HAL_FLASH_GET_LATENCY();
 802a7c2:	f003 030f 	and.w	r3, r3, #15
 802a7c6:	6063      	str	r3, [r4, #4]
  scm_system_clock_config.sram_ws_cfg = HAL_RAMCFG_GetWaitState(&sram1_ns);
 802a7c8:	f002 fa4c 	bl	802cc64 <HAL_RAMCFG_GetWaitState>
  RadioState = SCM_RADIO_NOT_ACTIVE;
 802a7cc:	4b2f      	ldr	r3, [pc, #188]	; (802a88c <scm_init+0xf0>)
  scm_system_clock_config.sram_ws_cfg = HAL_RAMCFG_GetWaitState(&sram1_ns);
 802a7ce:	60a0      	str	r0, [r4, #8]
  RadioState = SCM_RADIO_NOT_ACTIVE;
 802a7d0:	701f      	strb	r7, [r3, #0]
  __HAL_RCC_RAMCFG_CLK_ENABLE();
 802a7d2:	4b2f      	ldr	r3, [pc, #188]	; (802a890 <scm_init+0xf4>)
 802a7d4:	f8d3 2088 	ldr.w	r2, [r3, #136]	; 0x88
 802a7d8:	f442 3200 	orr.w	r2, r2, #131072	; 0x20000
 802a7dc:	f8c3 2088 	str.w	r2, [r3, #136]	; 0x88
 802a7e0:	f8d3 2088 	ldr.w	r2, [r3, #136]	; 0x88
 802a7e4:	f402 3200 	and.w	r2, r2, #131072	; 0x20000
 802a7e8:	9201      	str	r2, [sp, #4]
 802a7ea:	9a01      	ldr	r2, [sp, #4]
  return (uint32_t)(READ_BIT(RCC->CFGR1, RCC_CFGR1_SWS));
 802a7ec:	69df      	ldr	r7, [r3, #28]
 802a7ee:	f007 070c 	and.w	r7, r7, #12
  switch(LL_RCC_GetSysClkSource())
 802a7f2:	2f08      	cmp	r7, #8
 802a7f4:	d012      	beq.n	802a81c <scm_init+0x80>
 802a7f6:	2f0c      	cmp	r7, #12
 802a7f8:	d019      	beq.n	802a82e <scm_init+0x92>
 802a7fa:	b9b7      	cbnz	r7, 802a82a <scm_init+0x8e>
      scm_system_clock_config.targeted_clock_freq = HSE_16MHZ;
 802a7fc:	7025      	strb	r5, [r4, #0]
  SET_BIT(RCC->CR, RCC_CR_HSEPRE);
 802a7fe:	681a      	ldr	r2, [r3, #0]
      LL_RCC_SetAHB5Divider(LL_RCC_AHB5_DIVIDER_2); /* divided by 2 */
 802a800:	2010      	movs	r0, #16
 802a802:	f442 1280 	orr.w	r2, r2, #1048576	; 0x100000
 802a806:	601a      	str	r2, [r3, #0]
 802a808:	f7ff fdfa 	bl	802a400 <LL_RCC_SetAHB5Divider>
      scm_setup();
 802a80c:	f7ff ff7e 	bl	802a70c <scm_setup>
      LL_PWR_SetRegulVoltageScaling(LL_PWR_REGU_VOLTAGE_SCALE2);
 802a810:	4638      	mov	r0, r7
}
 802a812:	b003      	add	sp, #12
 802a814:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
      LL_PWR_SetRegulVoltageScaling(LL_PWR_REGU_VOLTAGE_SCALE2);
 802a818:	f7ff bdfe 	b.w	802a418 <LL_PWR_SetRegulVoltageScaling>
  return (uint32_t)(READ_BIT(RCC->CFGR4, RCC_CFGR4_HDIV5));
 802a81c:	f8d3 3200 	ldr.w	r3, [r3, #512]	; 0x200
        scm_system_clock_config.targeted_clock_freq = HSE_16MHZ;
 802a820:	f013 0f10 	tst.w	r3, #16
 802a824:	bf08      	it	eq
 802a826:	4635      	moveq	r5, r6
 802a828:	7025      	strb	r5, [r4, #0]
}
 802a82a:	b003      	add	sp, #12
 802a82c:	bdf0      	pop	{r4, r5, r6, r7, pc}
        scm_system_clock_config.targeted_clock_freq = SYS_PLL;
 802a82e:	2203      	movs	r2, #3
 802a830:	7022      	strb	r2, [r4, #0]
  return (uint32_t)((READ_BIT(RCC->PLL1CFGR, RCC_PLL1CFGR_PLL1M) >>  RCC_PLL1CFGR_PLL1M_Pos) + 1UL);
 802a832:	6a9a      	ldr	r2, [r3, #40]	; 0x28
 802a834:	f3c2 2202 	ubfx	r2, r2, #8, #3
 802a838:	3201      	adds	r2, #1
        scm_system_clock_config.pll.PLLM = LL_RCC_PLL1_GetDivider();
 802a83a:	6122      	str	r2, [r4, #16]
  return (uint32_t)((READ_BIT(RCC->PLL1DIVR, RCC_PLL1DIVR_PLL1N) >>  RCC_PLL1DIVR_PLL1N_Pos) + 1UL);
 802a83c:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 802a83e:	f3c2 0208 	ubfx	r2, r2, #0, #9
 802a842:	3201      	adds	r2, #1
        scm_system_clock_config.pll.PLLN = LL_RCC_PLL1_GetN();
 802a844:	6162      	str	r2, [r4, #20]
  return (uint32_t)((READ_BIT(RCC->PLL1DIVR, RCC_PLL1DIVR_PLL1P) >>  RCC_PLL1DIVR_PLL1P_Pos) + 1UL);
 802a846:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 802a848:	f3c2 2246 	ubfx	r2, r2, #9, #7
 802a84c:	3201      	adds	r2, #1
        scm_system_clock_config.pll.PLLP = LL_RCC_PLL1_GetP();
 802a84e:	61a2      	str	r2, [r4, #24]
  return (uint32_t)((READ_BIT(RCC->PLL1DIVR, RCC_PLL1DIVR_PLL1Q) >>  RCC_PLL1DIVR_PLL1Q_Pos) + 1UL);
 802a850:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 802a852:	f3c2 4206 	ubfx	r2, r2, #16, #7
 802a856:	3201      	adds	r2, #1
        scm_system_clock_config.pll.PLLQ = LL_RCC_PLL1_GetQ();
 802a858:	61e2      	str	r2, [r4, #28]
  return (uint32_t)((READ_BIT(RCC->PLL1DIVR, RCC_PLL1DIVR_PLL1R) >>  RCC_PLL1DIVR_PLL1R_Pos) + 1UL);
 802a85a:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 802a85c:	f3c2 6206 	ubfx	r2, r2, #24, #7
 802a860:	3201      	adds	r2, #1
        scm_system_clock_config.pll.PLLR = LL_RCC_PLL1_GetR();
 802a862:	6222      	str	r2, [r4, #32]
  return (uint32_t)(READ_BIT(RCC->PLL1FRACR, RCC_PLL1FRACR_PLL1FRACN) >>  RCC_PLL1FRACR_PLL1FRACN_Pos);
 802a864:	6b9a      	ldr	r2, [r3, #56]	; 0x38
 802a866:	f3c2 02cc 	ubfx	r2, r2, #3, #13
          scm_system_clock_config.pll.pll_mode = PLL_FRACTIONAL_MODE;
 802a86a:	2a02      	cmp	r2, #2
 802a86c:	bf08      	it	eq
 802a86e:	4615      	moveq	r5, r2
        scm_system_clock_config.pll.PLLFractional = LL_RCC_PLL1_GetFRACN();
 802a870:	6262      	str	r2, [r4, #36]	; 0x24
  return (uint32_t)(READ_BIT(RCC->CFGR4, RCC_CFGR4_HPRE5));
 802a872:	f8d3 3200 	ldr.w	r3, [r3, #512]	; 0x200
          scm_system_clock_config.pll.pll_mode = PLL_FRACTIONAL_MODE;
 802a876:	7325      	strb	r5, [r4, #12]
 802a878:	f003 0307 	and.w	r3, r3, #7
        scm_system_clock_config.pll.AHB5_PLL1_CLKDivider = LL_RCC_GetAHB5Prescaler();
 802a87c:	62a3      	str	r3, [r4, #40]	; 0x28
        if(scm_system_clock_config.pll.PLLFractional == PLL_FRACTIONAL_MODE)
 802a87e:	e7d4      	b.n	802a82a <scm_init+0x8e>
 802a880:	200090c4 	.word	0x200090c4
 802a884:	40022000 	.word	0x40022000
 802a888:	200004b8 	.word	0x200004b8
 802a88c:	200090c0 	.word	0x200090c0
 802a890:	46020c00 	.word	0x46020c00

0802a894 <scm_pllrdy_isr>:

void scm_pllrdy_isr(void)
{
 802a894:	b538      	push	{r3, r4, r5, lr}
  if(scm_system_clock_config.targeted_clock_freq == SYS_PLL)
 802a896:	4b0b      	ldr	r3, [pc, #44]	; (802a8c4 <scm_pllrdy_isr+0x30>)
 802a898:	4c0b      	ldr	r4, [pc, #44]	; (802a8c8 <scm_pllrdy_isr+0x34>)
 802a89a:	781d      	ldrb	r5, [r3, #0]
 802a89c:	2d03      	cmp	r5, #3
 802a89e:	d107      	bne.n	802a8b0 <scm_pllrdy_isr+0x1c>
  {
    /* Set PLL compatible waitstates */
    scm_setwaitstates(PLL);
 802a8a0:	2004      	movs	r0, #4
 802a8a2:	f7ff fdd3 	bl	802a44c <scm_setwaitstates>

    /* Switch to PLL */
    LL_RCC_SetSysClkSource(LL_RCC_SYS_CLKSOURCE_PLL1R);
 802a8a6:	4628      	mov	r0, r5
 802a8a8:	f7ff fda0 	bl	802a3ec <LL_RCC_SetSysClkSource>
  return (uint32_t)(READ_BIT(RCC->CFGR1, RCC_CFGR1_SWS));
 802a8ac:	69e3      	ldr	r3, [r4, #28]
 802a8ae:	e7fd      	b.n	802a8ac <scm_pllrdy_isr+0x18>
  CLEAR_BIT(RCC->CR, RCC_CR_PLL1ON);
 802a8b0:	6823      	ldr	r3, [r4, #0]
 802a8b2:	f023 7380 	bic.w	r3, r3, #16777216	; 0x1000000
 802a8b6:	6023      	str	r3, [r4, #0]
      */
    /* Disable PLL */
    LL_RCC_PLL1_Disable();

    /* Disable PLL1RDY interrupt */
    __HAL_RCC_DISABLE_IT(RCC_IT_PLL1RDY);
 802a8b8:	6d23      	ldr	r3, [r4, #80]	; 0x50
 802a8ba:	f023 0340 	bic.w	r3, r3, #64	; 0x40
 802a8be:	6523      	str	r3, [r4, #80]	; 0x50
  }
}
 802a8c0:	bd38      	pop	{r3, r4, r5, pc}
 802a8c2:	bf00      	nop
 802a8c4:	200090c4 	.word	0x200090c4
 802a8c8:	46020c00 	.word	0x46020c00

0802a8cc <scm_notifyradiostate>:

void scm_notifyradiostate(const scm_radio_state_t radio_state)
{
  if(radio_state != SCM_RADIO_NOT_ACTIVE)
 802a8cc:	4b05      	ldr	r3, [pc, #20]	; (802a8e4 <scm_notifyradiostate+0x18>)
 802a8ce:	b120      	cbz	r0, 802a8da <scm_notifyradiostate+0xe>
  {
    RadioState = SCM_RADIO_ACTIVE; /* shall be set before calling scm_setsystemclock() */
 802a8d0:	2001      	movs	r0, #1
    scm_setsystemclock(SCM_USER_LL_FW, HSE_32MHZ); /* shall be set before calling scm_setsystemclock() */
 802a8d2:	2102      	movs	r1, #2
    RadioState = SCM_RADIO_ACTIVE; /* shall be set before calling scm_setsystemclock() */
 802a8d4:	7018      	strb	r0, [r3, #0]
  }
  else
  {
    RadioState = SCM_RADIO_NOT_ACTIVE;
    scm_setsystemclock(SCM_USER_LL_FW, HSE_16MHZ);
 802a8d6:	f7ff be39 	b.w	802a54c <scm_setsystemclock>
 802a8da:	2101      	movs	r1, #1
    RadioState = SCM_RADIO_NOT_ACTIVE;
 802a8dc:	7018      	strb	r0, [r3, #0]
    scm_setsystemclock(SCM_USER_LL_FW, HSE_16MHZ);
 802a8de:	4608      	mov	r0, r1
 802a8e0:	e7f9      	b.n	802a8d6 <scm_notifyradiostate+0xa>
 802a8e2:	bf00      	nop
 802a8e4:	200090c0 	.word	0x200090c0

0802a8e8 <LST_init_head>:
/******************************************************************************
 * Function Definitions
 ******************************************************************************/
void LST_init_head (tListNode * listHead)
{
  listHead->next = listHead;
 802a8e8:	6000      	str	r0, [r0, #0]
  listHead->prev = listHead;
 802a8ea:	6040      	str	r0, [r0, #4]
}
 802a8ec:	4770      	bx	lr

0802a8ee <LST_is_empty>:
  __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
 802a8ee:	f3ef 8310 	mrs	r3, PRIMASK
  __ASM volatile ("cpsid i" : : : "memory");
 802a8f2:	b672      	cpsid	i
  uint32_t primask_bit;
  uint8_t return_value;

  primask_bit = __get_PRIMASK();  /**< backup PRIMASK bit */
  __disable_irq();                  /**< Disable all interrupts by setting PRIMASK bit on Cortex*/
  if(listHead->next == listHead)
 802a8f4:	6802      	ldr	r2, [r0, #0]
  {
    return_value = TRUE;
 802a8f6:	1a82      	subs	r2, r0, r2
 802a8f8:	4250      	negs	r0, r2
 802a8fa:	4150      	adcs	r0, r2
  __ASM volatile ("MSR primask, %0" : : "r" (priMask) : "memory");
 802a8fc:	f383 8810 	msr	PRIMASK, r3
    return_value = FALSE;
  }
  __set_PRIMASK(primask_bit);     /**< Restore PRIMASK bit*/

  return return_value;
}
 802a900:	4770      	bx	lr

0802a902 <LST_insert_head>:
  __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
 802a902:	f3ef 8310 	mrs	r3, PRIMASK
  __ASM volatile ("cpsid i" : : : "memory");
 802a906:	b672      	cpsid	i
  uint32_t primask_bit;

  primask_bit = __get_PRIMASK();  /**< backup PRIMASK bit */
  __disable_irq();                  /**< Disable all interrupts by setting PRIMASK bit on Cortex*/

  node->next = listHead->next;
 802a908:	6802      	ldr	r2, [r0, #0]
  node->prev = listHead;
 802a90a:	6048      	str	r0, [r1, #4]
  node->next = listHead->next;
 802a90c:	600a      	str	r2, [r1, #0]
  listHead->next = node;
 802a90e:	6001      	str	r1, [r0, #0]
  (node->next)->prev = node;
 802a910:	680a      	ldr	r2, [r1, #0]
 802a912:	6051      	str	r1, [r2, #4]
  __ASM volatile ("MSR primask, %0" : : "r" (priMask) : "memory");
 802a914:	f383 8810 	msr	PRIMASK, r3

  __set_PRIMASK(primask_bit);     /**< Restore PRIMASK bit*/
}
 802a918:	4770      	bx	lr

0802a91a <LST_insert_tail>:
  __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
 802a91a:	f3ef 8310 	mrs	r3, PRIMASK
  __ASM volatile ("cpsid i" : : : "memory");
 802a91e:	b672      	cpsid	i
  uint32_t primask_bit;

  primask_bit = __get_PRIMASK();  /**< backup PRIMASK bit */
  __disable_irq();                  /**< Disable all interrupts by setting PRIMASK bit on Cortex*/

  node->next = listHead;
 802a920:	6008      	str	r0, [r1, #0]
  node->prev = listHead->prev;
 802a922:	6842      	ldr	r2, [r0, #4]
 802a924:	604a      	str	r2, [r1, #4]
  listHead->prev = node;
 802a926:	6041      	str	r1, [r0, #4]
  (node->prev)->next = node;
 802a928:	684a      	ldr	r2, [r1, #4]
 802a92a:	6011      	str	r1, [r2, #0]
  __ASM volatile ("MSR primask, %0" : : "r" (priMask) : "memory");
 802a92c:	f383 8810 	msr	PRIMASK, r3

  __set_PRIMASK(primask_bit);     /**< Restore PRIMASK bit*/
}
 802a930:	4770      	bx	lr

0802a932 <LST_remove_node>:
  __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
 802a932:	f3ef 8210 	mrs	r2, PRIMASK
  __ASM volatile ("cpsid i" : : : "memory");
 802a936:	b672      	cpsid	i
  uint32_t primask_bit;

  primask_bit = __get_PRIMASK();  /**< backup PRIMASK bit */
  __disable_irq();                  /**< Disable all interrupts by setting PRIMASK bit on Cortex*/

  (node->prev)->next = node->next;
 802a938:	6801      	ldr	r1, [r0, #0]
 802a93a:	6843      	ldr	r3, [r0, #4]
 802a93c:	6019      	str	r1, [r3, #0]
  (node->next)->prev = node->prev;
 802a93e:	6801      	ldr	r1, [r0, #0]
 802a940:	604b      	str	r3, [r1, #4]
  __ASM volatile ("MSR primask, %0" : : "r" (priMask) : "memory");
 802a942:	f382 8810 	msr	PRIMASK, r2

  __set_PRIMASK(primask_bit);     /**< Restore PRIMASK bit*/
}
 802a946:	4770      	bx	lr

0802a948 <LST_remove_head>:

void LST_remove_head (tListNode * listHead, tListNode ** node )
{
 802a948:	b510      	push	{r4, lr}
  __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
 802a94a:	f3ef 8410 	mrs	r4, PRIMASK
  __ASM volatile ("cpsid i" : : : "memory");
 802a94e:	b672      	cpsid	i
  uint32_t primask_bit;

  primask_bit = __get_PRIMASK();  /**< backup PRIMASK bit */
  __disable_irq();                  /**< Disable all interrupts by setting PRIMASK bit on Cortex*/

  *node = listHead->next;
 802a950:	6803      	ldr	r3, [r0, #0]
 802a952:	600b      	str	r3, [r1, #0]
  LST_remove_node (listHead->next);
 802a954:	6800      	ldr	r0, [r0, #0]
 802a956:	f7ff ffec 	bl	802a932 <LST_remove_node>
  __ASM volatile ("MSR primask, %0" : : "r" (priMask) : "memory");
 802a95a:	f384 8810 	msr	PRIMASK, r4

  __set_PRIMASK(primask_bit);     /**< Restore PRIMASK bit*/
}
 802a95e:	bd10      	pop	{r4, pc}

0802a960 <LST_get_next_node>:
  __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
 802a960:	f3ef 8310 	mrs	r3, PRIMASK
  __ASM volatile ("cpsid i" : : : "memory");
 802a964:	b672      	cpsid	i
  uint32_t primask_bit;

  primask_bit = __get_PRIMASK();  /**< backup PRIMASK bit */
  __disable_irq();                  /**< Disable all interrupts by setting PRIMASK bit on Cortex*/

  *node = ref_node->next;
 802a966:	6802      	ldr	r2, [r0, #0]
 802a968:	600a      	str	r2, [r1, #0]
  __ASM volatile ("MSR primask, %0" : : "r" (priMask) : "memory");
 802a96a:	f383 8810 	msr	PRIMASK, r3

  __set_PRIMASK(primask_bit);     /**< Restore PRIMASK bit*/
}
 802a96e:	4770      	bx	lr

0802a970 <BAES_CmacKeyRoll>:
 * AES key roll for CMAC Mode
 *
 */

static void BAES_CmacKeyRoll( uint32_t* key )
{
 802a970:	b530      	push	{r4, r5, lr}
  uint32_t carry = ((key[0] >> 31) & 1) * 0x87UL;
  key[0] = (key[0] << 1) | (key[1] >> 31);
 802a972:	e9d0 3500 	ldrd	r3, r5, [r0]
  key[1] = (key[1] << 1) | (key[2] >> 31);
 802a976:	6884      	ldr	r4, [r0, #8]
  key[0] = (key[0] << 1) | (key[1] >> 31);
 802a978:	0fea      	lsrs	r2, r5, #31
  key[1] = (key[1] << 1) | (key[2] >> 31);
 802a97a:	0fe1      	lsrs	r1, r4, #31
 802a97c:	ea41 0145 	orr.w	r1, r1, r5, lsl #1
 802a980:	6041      	str	r1, [r0, #4]
  key[2] = (key[2] << 1) | (key[3] >> 31);
 802a982:	68c1      	ldr	r1, [r0, #12]
  key[0] = (key[0] << 1) | (key[1] >> 31);
 802a984:	ea42 0243 	orr.w	r2, r2, r3, lsl #1
 802a988:	6002      	str	r2, [r0, #0]
  key[2] = (key[2] << 1) | (key[3] >> 31);
 802a98a:	0fca      	lsrs	r2, r1, #31
 802a98c:	ea42 0244 	orr.w	r2, r2, r4, lsl #1
 802a990:	6082      	str	r2, [r0, #8]
  uint32_t carry = ((key[0] >> 31) & 1) * 0x87UL;
 802a992:	2287      	movs	r2, #135	; 0x87
 802a994:	0fdb      	lsrs	r3, r3, #31
 802a996:	4353      	muls	r3, r2
  key[3] = (key[3] << 1) ^ carry;
 802a998:	ea83 0341 	eor.w	r3, r3, r1, lsl #1
 802a99c:	60c3      	str	r3, [r0, #12]
}
 802a99e:	bd30      	pop	{r4, r5, pc}

0802a9a0 <BAES_CmacSetKey>:
 * Initialization for AES-CMAC for Authentication TAG Generation.
 * Must be called each time a new CMAC has to be computed.
 */

void BAES_CmacSetKey( const uint8_t* key )
{
 802a9a0:	b507      	push	{r0, r1, r2, lr}
 802a9a2:	9001      	str	r0, [sp, #4]

  /* Initialize for ECB encoding */

#if CFG_BAES_SW == 0

  HW_AES_Enable( );
 802a9a4:	f7fd fa3a 	bl	8027e1c <HW_AES_Enable>
  HW_AES_SetKey( HW_AES_ENC, key );
 802a9a8:	2001      	movs	r0, #1
 802a9aa:	9901      	ldr	r1, [sp, #4]
 802a9ac:	f7fd fa56 	bl	8027e5c <HW_AES_SetKey>
  BAES_EncKeySchedule( av->exp_key );

#endif /* CFG_BAES_SW != 0 */

  /* set IV to zero */
  av->iv[0] = av->iv[1] = av->iv[2] = av->iv[3] = 0;
 802a9b0:	2200      	movs	r2, #0
 802a9b2:	4b04      	ldr	r3, [pc, #16]	; (802a9c4 <BAES_CmacSetKey+0x24>)
 802a9b4:	e9c3 2202 	strd	r2, r2, [r3, #8]
 802a9b8:	e9c3 2200 	strd	r2, r2, [r3]
}
 802a9bc:	b003      	add	sp, #12
 802a9be:	f85d fb04 	ldr.w	pc, [sp], #4
 802a9c2:	bf00      	nop
 802a9c4:	200090f4 	.word	0x200090f4

0802a9c8 <BAES_CmacCompute>:
 */

void BAES_CmacCompute( const uint8_t* input,
                       uint32_t size,
                       uint8_t* output )
{
 802a9c8:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 802a9cc:	4605      	mov	r5, r0
  BAES_CMAC_t *av = &BAES_CMAC_var;
  uint32_t i, last_size;
  uint32_t tmp[4], key[4];
  const uint8_t* ptr = input;

  if ( output )
 802a9ce:	4616      	mov	r6, r2
{
 802a9d0:	b088      	sub	sp, #32
  if ( output )
 802a9d2:	b132      	cbz	r2, 802a9e2 <BAES_CmacCompute+0x1a>
  {
    /* In case of final append, compute size of last block */
    last_size = size % 16;
 802a9d4:	f001 070f 	and.w	r7, r1, #15
    if ( (size != 0) && (last_size == 0) )
 802a9d8:	b111      	cbz	r1, 802a9e0 <BAES_CmacCompute+0x18>
      last_size = 16;
 802a9da:	2f00      	cmp	r7, #0
 802a9dc:	bf08      	it	eq
 802a9de:	2710      	moveq	r7, #16
    size -= last_size;
 802a9e0:	1bc9      	subs	r1, r1, r7
  while ( size )
  {
    /* Load the input of all blocks but the last one
       and xor data with previous tag */
    memcpy( tmp, ptr, 16 );
    BAES_REV_XOR( tmp, av->iv );
 802a9e2:	f8df 8140 	ldr.w	r8, [pc, #320]	; 802ab24 <BAES_CmacCompute+0x15c>
  while ( size )
 802a9e6:	186c      	adds	r4, r5, r1
 802a9e8:	e026      	b.n	802aa38 <BAES_CmacCompute+0x70>
    memcpy( tmp, ptr, 16 );
 802a9ea:	466a      	mov	r2, sp
 802a9ec:	f105 0c10 	add.w	ip, r5, #16
 802a9f0:	4613      	mov	r3, r2
 802a9f2:	6828      	ldr	r0, [r5, #0]
 802a9f4:	6869      	ldr	r1, [r5, #4]
 802a9f6:	3508      	adds	r5, #8
 802a9f8:	c303      	stmia	r3!, {r0, r1}
 802a9fa:	4565      	cmp	r5, ip
 802a9fc:	461a      	mov	r2, r3
 802a9fe:	d1f7      	bne.n	802a9f0 <BAES_CmacCompute+0x28>
  return __builtin_bswap32(value);
 802aa00:	9b00      	ldr	r3, [sp, #0]
  HW_AES_Crypt( input, output );
 802aa02:	4668      	mov	r0, sp
 802aa04:	ba1a      	rev	r2, r3
    BAES_REV_XOR( tmp, av->iv );
 802aa06:	f8d8 3000 	ldr.w	r3, [r8]
  HW_AES_Crypt( input, output );
 802aa0a:	4946      	ldr	r1, [pc, #280]	; (802ab24 <BAES_CmacCompute+0x15c>)
    BAES_REV_XOR( tmp, av->iv );
 802aa0c:	4053      	eors	r3, r2
 802aa0e:	9300      	str	r3, [sp, #0]
 802aa10:	9b01      	ldr	r3, [sp, #4]
 802aa12:	ba1a      	rev	r2, r3
 802aa14:	f8d8 3004 	ldr.w	r3, [r8, #4]
 802aa18:	4053      	eors	r3, r2
 802aa1a:	9301      	str	r3, [sp, #4]
 802aa1c:	9b02      	ldr	r3, [sp, #8]
 802aa1e:	ba1a      	rev	r2, r3
 802aa20:	f8d8 3008 	ldr.w	r3, [r8, #8]
 802aa24:	4053      	eors	r3, r2
 802aa26:	9302      	str	r3, [sp, #8]
 802aa28:	9b03      	ldr	r3, [sp, #12]
 802aa2a:	ba1a      	rev	r2, r3
 802aa2c:	f8d8 300c 	ldr.w	r3, [r8, #12]
 802aa30:	4053      	eors	r3, r2
 802aa32:	9303      	str	r3, [sp, #12]
  HW_AES_Crypt( input, output );
 802aa34:	f7fd fa62 	bl	8027efc <HW_AES_Crypt>
  while ( size )
 802aa38:	42a5      	cmp	r5, r4
 802aa3a:	d1d6      	bne.n	802a9ea <BAES_CmacCompute+0x22>
    /* Next block */
    ptr += 16;
    size -= 16;
  }

  if ( output )
 802aa3c:	2e00      	cmp	r6, #0
 802aa3e:	d05a      	beq.n	802aaf6 <BAES_CmacCompute+0x12e>
  {
    /* Load the input bytes left with 0 padding */
    tmp[0] = tmp[1] = tmp[2] = tmp[3] = 0;
 802aa40:	2400      	movs	r4, #0
 802aa42:	e9cd 4402 	strd	r4, r4, [sp, #8]
 802aa46:	e9cd 4400 	strd	r4, r4, [sp]
    for ( i = 0; i < last_size; i++ )
 802aa4a:	42bc      	cmp	r4, r7
 802aa4c:	d156      	bne.n	802aafc <BAES_CmacCompute+0x134>
    {
      BAES_OR_BYTE_BE( tmp, i, ptr[i] );
    }

    /* Compute K1 */
    key[0] = key[1] = key[2] = key[3] = 0;
 802aa4e:	2300      	movs	r3, #0
  HW_AES_Crypt( input, output );
 802aa50:	ad04      	add	r5, sp, #16
 802aa52:	4629      	mov	r1, r5
 802aa54:	4628      	mov	r0, r5
    key[0] = key[1] = key[2] = key[3] = 0;
 802aa56:	e9cd 3306 	strd	r3, r3, [sp, #24]
 802aa5a:	e9cd 3304 	strd	r3, r3, [sp, #16]
  HW_AES_Crypt( input, output );
 802aa5e:	f7fd fa4d 	bl	8027efc <HW_AES_Crypt>
    BAES_CmacRawEncrypt( key, key );
    BAES_CmacKeyRoll( key );
 802aa62:	4628      	mov	r0, r5
 802aa64:	f7ff ff84 	bl	802a970 <BAES_CmacKeyRoll>

    /* Add padding and compute K2 if the last block is not full */
    if ( last_size < 16 )
 802aa68:	2c10      	cmp	r4, #16
 802aa6a:	d013      	beq.n	802aa94 <BAES_CmacCompute+0xcc>
    {
      BAES_OR_BYTE_BE( tmp, last_size, 0x80 );
 802aa6c:	f024 0203 	bic.w	r2, r4, #3
 802aa70:	43e4      	mvns	r4, r4
 802aa72:	f102 0320 	add.w	r3, r2, #32
 802aa76:	eb0d 0203 	add.w	r2, sp, r3
 802aa7a:	2380      	movs	r3, #128	; 0x80
 802aa7c:	f004 0403 	and.w	r4, r4, #3
 802aa80:	00e4      	lsls	r4, r4, #3
 802aa82:	fa03 f404 	lsl.w	r4, r3, r4
 802aa86:	f852 3c20 	ldr.w	r3, [r2, #-32]
 802aa8a:	431c      	orrs	r4, r3
 802aa8c:	f842 4c20 	str.w	r4, [r2, #-32]
      BAES_CmacKeyRoll( key );
 802aa90:	f7ff ff6e 	bl	802a970 <BAES_CmacKeyRoll>
 802aa94:	466a      	mov	r2, sp
 802aa96:	4823      	ldr	r0, [pc, #140]	; (802ab24 <BAES_CmacCompute+0x15c>)
 802aa98:	46ac      	mov	ip, r5
    for ( i = 0; i < last_size; i++ )
 802aa9a:	f04f 0804 	mov.w	r8, #4
 802aa9e:	4614      	mov	r4, r2
 802aaa0:	4607      	mov	r7, r0
    }

    /* Xor data with previous tag and key */
    for ( i = 0; i < 4; i++ )
    {
      tmp[i] ^= av->iv[i] ^ key[i];
 802aaa2:	6811      	ldr	r1, [r2, #0]
 802aaa4:	f850 3b04 	ldr.w	r3, [r0], #4
 802aaa8:	f85c eb04 	ldr.w	lr, [ip], #4
 802aaac:	404b      	eors	r3, r1
 802aaae:	ea83 030e 	eor.w	r3, r3, lr
    for ( i = 0; i < 4; i++ )
 802aab2:	f1b8 0801 	subs.w	r8, r8, #1
      tmp[i] ^= av->iv[i] ^ key[i];
 802aab6:	f842 3b04 	str.w	r3, [r2], #4
    for ( i = 0; i < 4; i++ )
 802aaba:	d1f2      	bne.n	802aaa2 <BAES_CmacCompute+0xda>
  HW_AES_Crypt( input, output );
 802aabc:	4620      	mov	r0, r4
 802aabe:	4919      	ldr	r1, [pc, #100]	; (802ab24 <BAES_CmacCompute+0x15c>)
 802aac0:	f7fd fa1c 	bl	8027efc <HW_AES_Crypt>
    /* Encrypt block */
    BAES_CmacRawEncrypt( tmp, av->iv );

#if CFG_BAES_SW == 0

    HW_AES_Disable( );
 802aac4:	f7fd fa38 	bl	8027f38 <HW_AES_Disable>
 802aac8:	683b      	ldr	r3, [r7, #0]

#endif /* CFG_BAES_SW == 0 */

    /* Write the tag */
    BAES_COPY_REV( tmp, av->iv );
    memcpy( output, tmp, 16 );
 802aaca:	4632      	mov	r2, r6
 802aacc:	ba1b      	rev	r3, r3
    BAES_COPY_REV( tmp, av->iv );
 802aace:	9300      	str	r3, [sp, #0]
 802aad0:	687b      	ldr	r3, [r7, #4]
 802aad2:	ba1b      	rev	r3, r3
 802aad4:	9301      	str	r3, [sp, #4]
 802aad6:	68bb      	ldr	r3, [r7, #8]
 802aad8:	ba1b      	rev	r3, r3
 802aada:	9302      	str	r3, [sp, #8]
 802aadc:	68fb      	ldr	r3, [r7, #12]
 802aade:	ba1b      	rev	r3, r3
 802aae0:	9303      	str	r3, [sp, #12]
    memcpy( output, tmp, 16 );
 802aae2:	4623      	mov	r3, r4
 802aae4:	461c      	mov	r4, r3
 802aae6:	cc03      	ldmia	r4!, {r0, r1}
 802aae8:	42ac      	cmp	r4, r5
 802aaea:	6010      	str	r0, [r2, #0]
 802aaec:	6051      	str	r1, [r2, #4]
 802aaee:	4623      	mov	r3, r4
 802aaf0:	f102 0208 	add.w	r2, r2, #8
 802aaf4:	d1f6      	bne.n	802aae4 <BAES_CmacCompute+0x11c>
  }
}
 802aaf6:	b008      	add	sp, #32
 802aaf8:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
      BAES_OR_BYTE_BE( tmp, i, ptr[i] );
 802aafc:	43e2      	mvns	r2, r4
 802aafe:	f024 0103 	bic.w	r1, r4, #3
 802ab02:	f101 0320 	add.w	r3, r1, #32
 802ab06:	eb0d 0103 	add.w	r1, sp, r3
 802ab0a:	f002 0203 	and.w	r2, r2, #3
 802ab0e:	5d2b      	ldrb	r3, [r5, r4]
 802ab10:	00d2      	lsls	r2, r2, #3
 802ab12:	4093      	lsls	r3, r2
 802ab14:	f851 2c20 	ldr.w	r2, [r1, #-32]
    for ( i = 0; i < last_size; i++ )
 802ab18:	3401      	adds	r4, #1
      BAES_OR_BYTE_BE( tmp, i, ptr[i] );
 802ab1a:	4313      	orrs	r3, r2
 802ab1c:	f841 3c20 	str.w	r3, [r1, #-32]
    for ( i = 0; i < last_size; i++ )
 802ab20:	e793      	b.n	802aa4a <BAES_CmacCompute+0x82>
 802ab22:	bf00      	nop
 802ab24:	200090f4 	.word	0x200090f4

0802ab28 <BAES_Reset>:

void BAES_Reset( void )
{
#if CFG_BAES_SW == 0

  HW_AES_Disable( );
 802ab28:	f7fd ba06 	b.w	8027f38 <HW_AES_Disable>

0802ab2c <BAES_EcbCrypt>:

void BAES_EcbCrypt( const uint8_t* key,
                    const uint8_t* input,
                    uint8_t* output,
                    int enc )
{
 802ab2c:	b5f0      	push	{r4, r5, r6, r7, lr}
 802ab2e:	461f      	mov	r7, r3
 802ab30:	4606      	mov	r6, r0
 802ab32:	460c      	mov	r4, r1
 802ab34:	b085      	sub	sp, #20
 802ab36:	4615      	mov	r5, r2
  uint32_t tmp[4];

#if CFG_BAES_SW == 0

  HW_AES_Enable( );
 802ab38:	f7fd f970 	bl	8027e1c <HW_AES_Enable>
  HW_AES_SetKey( (enc ? (HW_AES_ENC | HW_AES_REV) : (HW_AES_DEC | HW_AES_REV)),
 802ab3c:	2f00      	cmp	r7, #0
 802ab3e:	4631      	mov	r1, r6
 802ab40:	bf14      	ite	ne
 802ab42:	2003      	movne	r0, #3
 802ab44:	2002      	moveq	r0, #2
 802ab46:	f7fd f989 	bl	8027e5c <HW_AES_SetKey>
    BAES_EncKeySchedule( exp_key );

#endif /* CFG_BAES_SW != 0 */

  /* Retrieve all bytes from input */
  memcpy( tmp, input, 16 );
 802ab4a:	4623      	mov	r3, r4
 802ab4c:	466c      	mov	r4, sp
 802ab4e:	f103 0610 	add.w	r6, r3, #16
 802ab52:	4622      	mov	r2, r4
 802ab54:	6818      	ldr	r0, [r3, #0]
 802ab56:	6859      	ldr	r1, [r3, #4]
 802ab58:	3308      	adds	r3, #8
 802ab5a:	c203      	stmia	r2!, {r0, r1}
 802ab5c:	42b3      	cmp	r3, r6
 802ab5e:	4614      	mov	r4, r2
 802ab60:	d1f7      	bne.n	802ab52 <BAES_EcbCrypt+0x26>
  BAES_SWAP( tmp );
 802ab62:	9b00      	ldr	r3, [sp, #0]
 802ab64:	9a03      	ldr	r2, [sp, #12]

#if CFG_BAES_SW == 0

  HW_AES_Crypt( tmp, tmp );
 802ab66:	4669      	mov	r1, sp
 802ab68:	4668      	mov	r0, sp
  BAES_SWAP( tmp );
 802ab6a:	9200      	str	r2, [sp, #0]
 802ab6c:	9303      	str	r3, [sp, #12]
 802ab6e:	e9dd 3201 	ldrd	r3, r2, [sp, #4]
 802ab72:	e9cd 2301 	strd	r2, r3, [sp, #4]
  HW_AES_Crypt( tmp, tmp );
 802ab76:	f7fd f9c1 	bl	8027efc <HW_AES_Crypt>
  HW_AES_Disable( );
 802ab7a:	f7fd f9dd 	bl	8027f38 <HW_AES_Disable>
    BAES_RawEncrypt( tmp, tmp, exp_key );

#endif /* CFG_BAES_SW != 0 */

  /* Write all bytes to output */
  BAES_SWAP( tmp );
 802ab7e:	9b00      	ldr	r3, [sp, #0]
 802ab80:	9a03      	ldr	r2, [sp, #12]
 802ab82:	9303      	str	r3, [sp, #12]
 802ab84:	9200      	str	r2, [sp, #0]
 802ab86:	e9dd 3201 	ldrd	r3, r2, [sp, #4]
 802ab8a:	e9cd 2301 	strd	r2, r3, [sp, #4]
  memcpy( output, tmp, 16 );
 802ab8e:	466b      	mov	r3, sp
 802ab90:	462a      	mov	r2, r5
 802ab92:	ad04      	add	r5, sp, #16
 802ab94:	461c      	mov	r4, r3
 802ab96:	cc03      	ldmia	r4!, {r0, r1}
 802ab98:	42ac      	cmp	r4, r5
 802ab9a:	6010      	str	r0, [r2, #0]
 802ab9c:	6051      	str	r1, [r2, #4]
 802ab9e:	4623      	mov	r3, r4
 802aba0:	f102 0208 	add.w	r2, r2, #8
 802aba4:	d1f6      	bne.n	802ab94 <BAES_EcbCrypt+0x68>
}
 802aba6:	b005      	add	sp, #20
 802aba8:	bdf0      	pop	{r4, r5, r6, r7, pc}

0802abaa <CopyDataInit>:
  bl LoopCopyDataInit
.endm

.section  .text.data_initializers
CopyDataInit:
  ldr r4, [r2, r3]
 802abaa:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 802abac:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 802abae:	3304      	adds	r3, #4

0802abb0 <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 802abb0:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 802abb2:	428c      	cmp	r4, r1
  bcc  CopyDataInit
 802abb4:	d3f9      	bcc.n	802abaa <CopyDataInit>
  bx lr
 802abb6:	4770      	bx	lr

0802abb8 <FillZerobss>:

FillZerobss:
  str  r3, [r0]
 802abb8:	6003      	str	r3, [r0, #0]
  adds r0, r0, #4
 802abba:	3004      	adds	r0, #4

0802abbc <LoopFillZerobss>:

LoopFillZerobss:
  cmp r0, r1
 802abbc:	4288      	cmp	r0, r1
  bcc FillZerobss
 802abbe:	d3fb      	bcc.n	802abb8 <FillZerobss>
  bx lr
 802abc0:	4770      	bx	lr
	...

0802abc4 <Reset_Handler>:

  .section .text.Reset_Handler
  .global Reset_Handler
  .type Reset_Handler, %function
Reset_Handler:
  ldr   r0, =_estack
 802abc4:	4819      	ldr	r0, [pc, #100]	; (802ac2c <CPUcontextRestore+0x14>)
  mov   sp, r0          /* set stack pointer */
 802abc6:	4685      	mov	sp, r0
/* If we exit from standby mode, restore CPU context and jump to asleep point. */
   BL      is_boot_from_standby
 802abc8:	f7fd fc78 	bl	80284bc <is_boot_from_standby>
   CMP     R0, #1
 802abcc:	2801      	cmp	r0, #1
   BEQ     CPUcontextRestore
 802abce:	d023      	beq.n	802ac18 <CPUcontextRestore>
/* buffer for local variables (up to 10)from is_boot_from_standby*/
   SUB     SP, SP, #0x28
 802abd0:	b08a      	sub	sp, #40	; 0x28
/* end of specific code section for standby */
/* Call the clock system initialization function.*/
  bl  SystemInit
 802abd2:	f000 f929 	bl	802ae28 <SystemInit>

/* Copy the data segment initializers from flash to SRAM */
  INIT_DATA _sdata, _edata, _sidata
 802abd6:	4816      	ldr	r0, [pc, #88]	; (802ac30 <CPUcontextRestore+0x18>)
 802abd8:	4916      	ldr	r1, [pc, #88]	; (802ac34 <CPUcontextRestore+0x1c>)
 802abda:	4a17      	ldr	r2, [pc, #92]	; (802ac38 <CPUcontextRestore+0x20>)
 802abdc:	2300      	movs	r3, #0
 802abde:	f7ff ffe7 	bl	802abb0 <LoopCopyDataInit>

/* Zero fill the bss segments. */
  INIT_BSS _sbss, _ebss
 802abe2:	4816      	ldr	r0, [pc, #88]	; (802ac3c <CPUcontextRestore+0x24>)
 802abe4:	4916      	ldr	r1, [pc, #88]	; (802ac40 <CPUcontextRestore+0x28>)
 802abe6:	2300      	movs	r3, #0
 802abe8:	f7ff ffe8 	bl	802abbc <LoopFillZerobss>

/* Call static constructors */
  bl __libc_init_array
 802abec:	f006 f984 	bl	8030ef8 <__libc_init_array>
/* Call the application s entry point.*/
  bl	main
 802abf0:	f7fb f9d8 	bl	8025fa4 <main>

0802abf4 <LoopForever>:

LoopForever:
  b LoopForever
 802abf4:	e7fe      	b.n	802abf4 <LoopForever>

0802abf6 <CPUcontextSave>:

/* These 2 functions are designed to save and then restore CPU context. */
  .global CPUcontextSave
  .type CPUcontextSave, %function
CPUcontextSave:
        PUSH   { r4 - r7, lr }       /* store R4-R7 and LR (5 words) onto the stack */
 802abf6:	b5f0      	push	{r4, r5, r6, r7, lr}
        MOV    R3, R8                /* mov thread {r8 - r12} to {r3 - r7} */
 802abf8:	4643      	mov	r3, r8
        MOV    R4, R9
 802abfa:	464c      	mov	r4, r9
        MOV    R5, R10
 802abfc:	4655      	mov	r5, sl
        MOV    R6, R11
 802abfe:	465e      	mov	r6, fp
        MOV    R7, R12
 802ac00:	4667      	mov	r7, ip
        PUSH   {R3-R7}                 /* store R8-R12 (5 words) onto the stack */
 802ac02:	b4f8      	push	{r3, r4, r5, r6, r7}
        LDR    R4, =backup_MSP         /* load address of backup_MSP into R4 */
 802ac04:	4c0f      	ldr	r4, [pc, #60]	; (802ac44 <CPUcontextRestore+0x2c>)
        MOV    R3, SP                  /* load the stack pointer into R3 */
 802ac06:	466b      	mov	r3, sp
        STR    R3, [R4]                /* store the MSP into backup_MSP */
 802ac08:	6023      	str	r3, [r4, #0]
        DSB
 802ac0a:	f3bf 8f4f 	dsb	sy
        bl enter_standby_notification;
 802ac0e:	f7fd fc8b 	bl	8028528 <enter_standby_notification>
        WFI                            /* all saved, trigger deep sleep */
 802ac12:	bf30      	wfi
        bl exit_standby_notification;
 802ac14:	f7fd fc89 	bl	802852a <exit_standby_notification>

0802ac18 <CPUcontextRestore>:
CPUcontextRestore:
  /* Even if we fall through the WFI instruction, we will immediately
   * execute a context restore and end up where we left off with no
   * ill effects.  Normally at this point the core will either be
   * powered off or reset (depending on the deep sleep level). */
        LDR    R4, =backup_MSP       /* load address of backup_MSP into R4 */
 802ac18:	4c0a      	ldr	r4, [pc, #40]	; (802ac44 <CPUcontextRestore+0x2c>)
        LDR    R4, [R4]              /* load the SP from backup_MSP */
 802ac1a:	6824      	ldr	r4, [r4, #0]
        MOV    SP, R4                /* restore the SP from R4 */
 802ac1c:	46a5      	mov	sp, r4
        POP   {R3-R7}                /* load R8-R12 (5 words) from the stack */
 802ac1e:	bcf8      	pop	{r3, r4, r5, r6, r7}
        MOV    R8, R3                /* mov {r3 - r7} to {r8 - r12} */
 802ac20:	4698      	mov	r8, r3
        MOV    R9, R4
 802ac22:	46a1      	mov	r9, r4
        MOV    R10, R5
 802ac24:	46aa      	mov	sl, r5
        MOV    R11, R6
 802ac26:	46b3      	mov	fp, r6
        MOV    R12, R7
 802ac28:	46bc      	mov	ip, r7
        POP   { R4 - R7, PC }        /*load R4-R7 and PC (5 words) from the stack */
 802ac2a:	bdf0      	pop	{r4, r5, r6, r7, pc}
  ldr   r0, =_estack
 802ac2c:	20020000 	.word	0x20020000
  INIT_DATA _sdata, _edata, _sidata
 802ac30:	20000000 	.word	0x20000000
 802ac34:	20000548 	.word	0x20000548
 802ac38:	0803435c 	.word	0x0803435c
  INIT_BSS _sbss, _ebss
 802ac3c:	20000550 	.word	0x20000550
 802ac40:	2000a348 	.word	0x2000a348
        LDR    R4, =backup_MSP         /* load address of backup_MSP into R4 */
 802ac44:	20008f4c 	.word	0x20008f4c

0802ac48 <BSP_LED_Init>:
int32_t BSP_LED_Init(Led_TypeDef Led)
{
  GPIO_InitTypeDef GPIO_Init;

  /* Enable the GPIO_LED Clock */
  if (Led == LD1)
 802ac48:	4b17      	ldr	r3, [pc, #92]	; (802aca8 <BSP_LED_Init+0x60>)
{
 802ac4a:	b530      	push	{r4, r5, lr}
  {
    LD1_GPIO_CLK_ENABLE();
 802ac4c:	f8d3 208c 	ldr.w	r2, [r3, #140]	; 0x8c
{
 802ac50:	b08b      	sub	sp, #44	; 0x2c
    LD1_GPIO_CLK_ENABLE();
 802ac52:	f042 0202 	orr.w	r2, r2, #2
 802ac56:	f8c3 208c 	str.w	r2, [r3, #140]	; 0x8c
 802ac5a:	f8d3 308c 	ldr.w	r3, [r3, #140]	; 0x8c
 802ac5e:	f003 0302 	and.w	r3, r3, #2
  if (Led == LD1)
 802ac62:	b9c8      	cbnz	r0, 802ac98 <BSP_LED_Init+0x50>
    LD1_GPIO_CLK_ENABLE();
 802ac64:	9302      	str	r3, [sp, #8]
 802ac66:	9b02      	ldr	r3, [sp, #8]
  {
    LD3_GPIO_CLK_ENABLE();
  }

  /* configure the GPIO_LED pin */
  GPIO_Init.Pin   = LED_PIN[Led];
 802ac68:	4b10      	ldr	r3, [pc, #64]	; (802acac <BSP_LED_Init+0x64>)
  GPIO_Init.Mode  = GPIO_MODE_OUTPUT_PP;
 802ac6a:	2401      	movs	r4, #1
  GPIO_Init.Pin   = LED_PIN[Led];
 802ac6c:	f833 5010 	ldrh.w	r5, [r3, r0, lsl #1]
  GPIO_Init.Pull  = GPIO_PULLUP;
  GPIO_Init.Speed = GPIO_SPEED_FREQ_HIGH;
 802ac70:	2302      	movs	r3, #2
 802ac72:	9308      	str	r3, [sp, #32]
  HAL_GPIO_Init(LED_PORT[Led], &GPIO_Init);
 802ac74:	4b0e      	ldr	r3, [pc, #56]	; (802acb0 <BSP_LED_Init+0x68>)
 802ac76:	a905      	add	r1, sp, #20
 802ac78:	f853 0020 	ldr.w	r0, [r3, r0, lsl #2]
  GPIO_Init.Pull  = GPIO_PULLUP;
 802ac7c:	e9cd 4406 	strd	r4, r4, [sp, #24]
  HAL_GPIO_Init(LED_PORT[Led], &GPIO_Init);
 802ac80:	9001      	str	r0, [sp, #4]
  GPIO_Init.Pin   = LED_PIN[Led];
 802ac82:	9505      	str	r5, [sp, #20]
  HAL_GPIO_Init(LED_PORT[Led], &GPIO_Init);
 802ac84:	f001 fcdc 	bl	802c640 <HAL_GPIO_Init>

  HAL_GPIO_WritePin(LED_PORT[Led], LED_PIN[Led], GPIO_PIN_SET);
 802ac88:	9801      	ldr	r0, [sp, #4]
 802ac8a:	4622      	mov	r2, r4
 802ac8c:	4629      	mov	r1, r5
 802ac8e:	f001 fe69 	bl	802c964 <HAL_GPIO_WritePin>

  return BSP_ERROR_NONE;
}
 802ac92:	2000      	movs	r0, #0
 802ac94:	b00b      	add	sp, #44	; 0x2c
 802ac96:	bd30      	pop	{r4, r5, pc}
  else if (Led == LD2)
 802ac98:	2801      	cmp	r0, #1
    LD2_GPIO_CLK_ENABLE();
 802ac9a:	bf0b      	itete	eq
 802ac9c:	9303      	streq	r3, [sp, #12]
    LD3_GPIO_CLK_ENABLE();
 802ac9e:	9304      	strne	r3, [sp, #16]
    LD2_GPIO_CLK_ENABLE();
 802aca0:	9b03      	ldreq	r3, [sp, #12]
    LD3_GPIO_CLK_ENABLE();
 802aca2:	9b04      	ldrne	r3, [sp, #16]
 802aca4:	e7e0      	b.n	802ac68 <BSP_LED_Init+0x20>
 802aca6:	bf00      	nop
 802aca8:	46020c00 	.word	0x46020c00
 802acac:	08033910 	.word	0x08033910
 802acb0:	08033918 	.word	0x08033918

0802acb4 <BSP_LED_On>:
  *     @arg  LD2
  *     @arg  LD3
  * @retval BSP error code.
  */
int32_t BSP_LED_On(Led_TypeDef Led)
{
 802acb4:	b508      	push	{r3, lr}
  HAL_GPIO_WritePin(LED_PORT[Led], LED_PIN[Led], GPIO_PIN_RESET);
 802acb6:	4b05      	ldr	r3, [pc, #20]	; (802accc <BSP_LED_On+0x18>)
 802acb8:	2200      	movs	r2, #0
 802acba:	f833 1010 	ldrh.w	r1, [r3, r0, lsl #1]
 802acbe:	4b04      	ldr	r3, [pc, #16]	; (802acd0 <BSP_LED_On+0x1c>)
 802acc0:	f853 0020 	ldr.w	r0, [r3, r0, lsl #2]
 802acc4:	f001 fe4e 	bl	802c964 <HAL_GPIO_WritePin>

  return BSP_ERROR_NONE;
}
 802acc8:	2000      	movs	r0, #0
 802acca:	bd08      	pop	{r3, pc}
 802accc:	08033910 	.word	0x08033910
 802acd0:	08033918 	.word	0x08033918

0802acd4 <BSP_LED_Off>:
  *     @arg  LD2
  *     @arg  LD3
  * @retval BSP error code.
  */
int32_t BSP_LED_Off(Led_TypeDef Led)
{
 802acd4:	b508      	push	{r3, lr}
  HAL_GPIO_WritePin(LED_PORT[Led], LED_PIN[Led], GPIO_PIN_SET);
 802acd6:	4b05      	ldr	r3, [pc, #20]	; (802acec <BSP_LED_Off+0x18>)
 802acd8:	2201      	movs	r2, #1
 802acda:	f833 1010 	ldrh.w	r1, [r3, r0, lsl #1]
 802acde:	4b04      	ldr	r3, [pc, #16]	; (802acf0 <BSP_LED_Off+0x1c>)
 802ace0:	f853 0020 	ldr.w	r0, [r3, r0, lsl #2]
 802ace4:	f001 fe3e 	bl	802c964 <HAL_GPIO_WritePin>

  return BSP_ERROR_NONE;
}
 802ace8:	2000      	movs	r0, #0
 802acea:	bd08      	pop	{r3, pc}
 802acec:	08033910 	.word	0x08033910
 802acf0:	08033918 	.word	0x08033918

0802acf4 <BSP_PB_Init>:
  *     @arg BUTTON_MODE_EXTI: Button will be connected to EXTI line with interrupt
  *                            generation capability
  * @retval BSP error code.
  */
int32_t BSP_PB_Init(Button_TypeDef Button, ButtonMode_TypeDef ButtonMode)
{
 802acf4:	b5f0      	push	{r4, r5, r6, r7, lr}
 802acf6:	4605      	mov	r5, r0
  int32_t               status = BSP_ERROR_NONE;
  GPIO_InitTypeDef      GPIO_Init;
  uint32_t              BSP_BUTTON_IT_PRIO[BUTTONn] = {BSP_B1_IT_PRIORITY,
 802acf8:	4b39      	ldr	r3, [pc, #228]	; (802ade0 <BSP_PB_Init+0xec>)
{
 802acfa:	b095      	sub	sp, #84	; 0x54
  uint32_t              BSP_BUTTON_IT_PRIO[BUTTONn] = {BSP_B1_IT_PRIORITY,
 802acfc:	ae06      	add	r6, sp, #24
{
 802acfe:	460c      	mov	r4, r1
  uint32_t              BSP_BUTTON_IT_PRIO[BUTTONn] = {BSP_B1_IT_PRIORITY,
 802ad00:	e893 0007 	ldmia.w	r3, {r0, r1, r2}
 802ad04:	e886 0007 	stmia.w	r6, {r0, r1, r2}
                                                       BSP_B2_IT_PRIORITY,
                                                       BSP_B3_IT_PRIORITY};
  uint32_t              BUTTON_EXTI_LINE[BUTTONn]   = {B1_EXTI_LINE, B2_EXTI_LINE, B3_EXTI_LINE};
 802ad08:	ae09      	add	r6, sp, #36	; 0x24
 802ad0a:	f103 020c 	add.w	r2, r3, #12
 802ad0e:	ca07      	ldmia	r2, {r0, r1, r2}
 802ad10:	e886 0007 	stmia.w	r6, {r0, r1, r2}
  BSP_EXTI_LineCallback ButtonCallback[BUTTONn]     = {B1_EXTI_Callback,
 802ad14:	3318      	adds	r3, #24
 802ad16:	e893 0007 	ldmia.w	r3, {r0, r1, r2}
 802ad1a:	4b32      	ldr	r3, [pc, #200]	; (802ade4 <BSP_PB_Init+0xf0>)
 802ad1c:	ae0c      	add	r6, sp, #48	; 0x30
 802ad1e:	e886 0007 	stmia.w	r6, {r0, r1, r2}
                                                       B3_EXTI_Callback};

  /* Enable the BUTTON clock */
  if (Button == B1)
  {
    B1_GPIO_CLK_ENABLE();
 802ad22:	f8d3 208c 	ldr.w	r2, [r3, #140]	; 0x8c
  if (Button == B1)
 802ad26:	b9dd      	cbnz	r5, 802ad60 <BSP_PB_Init+0x6c>
    B1_GPIO_CLK_ENABLE();
 802ad28:	f042 0204 	orr.w	r2, r2, #4
 802ad2c:	f8c3 208c 	str.w	r2, [r3, #140]	; 0x8c
 802ad30:	f8d3 308c 	ldr.w	r3, [r3, #140]	; 0x8c
 802ad34:	f003 0304 	and.w	r3, r3, #4
 802ad38:	9303      	str	r3, [sp, #12]
 802ad3a:	9b03      	ldr	r3, [sp, #12]
    B3_GPIO_CLK_ENABLE();
  }

  GPIO_Init.Pin   = BUTTON_PIN[Button];
  GPIO_Init.Pull  = GPIO_NOPULL;
  GPIO_Init.Speed = GPIO_SPEED_FREQ_HIGH;
 802ad3c:	2000      	movs	r0, #0
 802ad3e:	2702      	movs	r7, #2
  GPIO_Init.Pin   = BUTTON_PIN[Button];
 802ad40:	4b29      	ldr	r3, [pc, #164]	; (802ade8 <BSP_PB_Init+0xf4>)
  GPIO_Init.Speed = GPIO_SPEED_FREQ_HIGH;
 802ad42:	e9cd 0711 	strd	r0, r7, [sp, #68]	; 0x44
  GPIO_Init.Pin   = BUTTON_PIN[Button];
 802ad46:	f833 3015 	ldrh.w	r3, [r3, r5, lsl #1]
 802ad4a:	930f      	str	r3, [sp, #60]	; 0x3c

  if (ButtonMode == BUTTON_MODE_GPIO)
 802ad4c:	b9bc      	cbnz	r4, 802ad7e <BSP_PB_Init+0x8a>
  {
    /* Configure Button pin as input */
    GPIO_Init.Mode = GPIO_MODE_INPUT;
    HAL_GPIO_Init(BUTTON_PORT[Button], &GPIO_Init);
 802ad4e:	4b27      	ldr	r3, [pc, #156]	; (802adec <BSP_PB_Init+0xf8>)
 802ad50:	a90f      	add	r1, sp, #60	; 0x3c
 802ad52:	f853 0025 	ldr.w	r0, [r3, r5, lsl #2]
    GPIO_Init.Mode = GPIO_MODE_INPUT;
 802ad56:	9410      	str	r4, [sp, #64]	; 0x40
    HAL_GPIO_Init(BUTTON_PORT[Button], &GPIO_Init);
 802ad58:	f001 fc72 	bl	802c640 <HAL_GPIO_Init>
  int32_t               status = BSP_ERROR_NONE;
 802ad5c:	4620      	mov	r0, r4
 802ad5e:	e028      	b.n	802adb2 <BSP_PB_Init+0xbe>
    B2_GPIO_CLK_ENABLE();
 802ad60:	f042 0202 	orr.w	r2, r2, #2
 802ad64:	f8c3 208c 	str.w	r2, [r3, #140]	; 0x8c
 802ad68:	f8d3 308c 	ldr.w	r3, [r3, #140]	; 0x8c
  else if (Button == B2)
 802ad6c:	2d01      	cmp	r5, #1
    B2_GPIO_CLK_ENABLE();
 802ad6e:	f003 0302 	and.w	r3, r3, #2
 802ad72:	bf0b      	itete	eq
 802ad74:	9304      	streq	r3, [sp, #16]
    B3_GPIO_CLK_ENABLE();
 802ad76:	9305      	strne	r3, [sp, #20]
    B2_GPIO_CLK_ENABLE();
 802ad78:	9b04      	ldreq	r3, [sp, #16]
    B3_GPIO_CLK_ENABLE();
 802ad7a:	9b05      	ldrne	r3, [sp, #20]
 802ad7c:	e7de      	b.n	802ad3c <BSP_PB_Init+0x48>
  }

  if (ButtonMode == BUTTON_MODE_EXTI)
 802ad7e:	2c01      	cmp	r4, #1
 802ad80:	d117      	bne.n	802adb2 <BSP_PB_Init+0xbe>
  {
    /* Configure Button pin as input with External interrupt */
    GPIO_Init.Mode = GPIO_MODE_IT_FALLING;
 802ad82:	f44f 1304 	mov.w	r3, #2162688	; 0x210000
 802ad86:	9310      	str	r3, [sp, #64]	; 0x40
    HAL_GPIO_Init(BUTTON_PORT[Button], &GPIO_Init);
 802ad88:	4b18      	ldr	r3, [pc, #96]	; (802adec <BSP_PB_Init+0xf8>)
 802ad8a:	a90f      	add	r1, sp, #60	; 0x3c
 802ad8c:	f853 0025 	ldr.w	r0, [r3, r5, lsl #2]
 802ad90:	f001 fc56 	bl	802c640 <HAL_GPIO_Init>

    if (HAL_EXTI_GetHandle(&hpb_exti[Button], BUTTON_EXTI_LINE[Button]) == HAL_OK)
 802ad94:	230c      	movs	r3, #12
 802ad96:	4c16      	ldr	r4, [pc, #88]	; (802adf0 <BSP_PB_Init+0xfc>)
 802ad98:	fb03 4405 	mla	r4, r3, r5, r4
 802ad9c:	ab14      	add	r3, sp, #80	; 0x50
 802ad9e:	eb03 0685 	add.w	r6, r3, r5, lsl #2
 802ada2:	4620      	mov	r0, r4
 802ada4:	f856 1c2c 	ldr.w	r1, [r6, #-44]
 802ada8:	f001 fa5c 	bl	802c264 <HAL_EXTI_GetHandle>
 802adac:	b118      	cbz	r0, 802adb6 <BSP_PB_Init+0xc2>
        status = BSP_ERROR_PERIPH_FAILURE;
      }
    }
    else
    {
      status = BSP_ERROR_PERIPH_FAILURE;
 802adae:	f06f 0003 	mvn.w	r0, #3
    }
  }

  return status;
}
 802adb2:	b015      	add	sp, #84	; 0x54
 802adb4:	bdf0      	pop	{r4, r5, r6, r7, pc}
      if (HAL_EXTI_RegisterCallback(&hpb_exti[Button], HAL_EXTI_FALLING_CB_ID, ButtonCallback[Button]) == HAL_OK)
 802adb6:	4620      	mov	r0, r4
 802adb8:	4639      	mov	r1, r7
 802adba:	f856 2c20 	ldr.w	r2, [r6, #-32]
 802adbe:	f001 fa41 	bl	802c244 <HAL_EXTI_RegisterCallback>
 802adc2:	4604      	mov	r4, r0
 802adc4:	2800      	cmp	r0, #0
 802adc6:	d1f2      	bne.n	802adae <BSP_PB_Init+0xba>
        HAL_NVIC_SetPriority(BUTTON_IRQn[Button], BSP_BUTTON_IT_PRIO[Button], 0x00);
 802adc8:	4b0a      	ldr	r3, [pc, #40]	; (802adf4 <BSP_PB_Init+0x100>)
 802adca:	4622      	mov	r2, r4
 802adcc:	5758      	ldrsb	r0, [r3, r5]
 802adce:	f856 1c38 	ldr.w	r1, [r6, #-56]
 802add2:	9001      	str	r0, [sp, #4]
 802add4:	f000 fcb8 	bl	802b748 <HAL_NVIC_SetPriority>
        HAL_NVIC_EnableIRQ(BUTTON_IRQn[Button]);
 802add8:	9801      	ldr	r0, [sp, #4]
 802adda:	f000 fcf9 	bl	802b7d0 <HAL_NVIC_EnableIRQ>
 802adde:	e7bd      	b.n	802ad5c <BSP_PB_Init+0x68>
 802ade0:	080318b4 	.word	0x080318b4
 802ade4:	46020c00 	.word	0x46020c00
 802ade8:	080338fc 	.word	0x080338fc
 802adec:	08033904 	.word	0x08033904
 802adf0:	20009104 	.word	0x20009104
 802adf4:	080338f8 	.word	0x080338f8

0802adf8 <B3_EXTI_Callback>:
/**
  * @brief  B3 EXTI line detection callbacks.
  * @retval None.
  */
static void B3_EXTI_Callback(void)
{
 802adf8:	b508      	push	{r3, lr}
  BSP_PB_Callback(B3);
 802adfa:	2002      	movs	r0, #2
 802adfc:	f7fa ff1a 	bl	8025c34 <BSP_PB_Callback>
}
 802ae00:	bd08      	pop	{r3, pc}

0802ae02 <B2_EXTI_Callback>:
{
 802ae02:	b508      	push	{r3, lr}
  BSP_PB_Callback(B2);
 802ae04:	2001      	movs	r0, #1
 802ae06:	f7fa ff15 	bl	8025c34 <BSP_PB_Callback>
}
 802ae0a:	bd08      	pop	{r3, pc}

0802ae0c <B1_EXTI_Callback>:
{
 802ae0c:	b508      	push	{r3, lr}
  BSP_PB_Callback(B1);
 802ae0e:	2000      	movs	r0, #0
 802ae10:	f7fa ff10 	bl	8025c34 <BSP_PB_Callback>
}
 802ae14:	bd08      	pop	{r3, pc}
	...

0802ae18 <BSP_PB_IRQHandler>:
  HAL_EXTI_IRQHandler(&hpb_exti[Button]);
 802ae18:	220c      	movs	r2, #12
 802ae1a:	4b02      	ldr	r3, [pc, #8]	; (802ae24 <BSP_PB_IRQHandler+0xc>)
 802ae1c:	fb02 3000 	mla	r0, r2, r0, r3
 802ae20:	f001 ba46 	b.w	802c2b0 <HAL_EXTI_IRQHandler>
 802ae24:	20009104 	.word	0x20009104

0802ae28 <SystemInit>:
  __IO uint32_t timeout_cpu_cycles;
  __IO uint32_t tmpreg;

  /* FPU settings ------------------------------------------------------------*/
#if (__FPU_PRESENT == 1) && (__FPU_USED == 1)
  SCB->CPACR |= ((3UL << 20U)|(3UL << 22U));  /* set CP10 and CP11 Full Access */
 802ae28:	4a20      	ldr	r2, [pc, #128]	; (802aeac <SystemInit+0x84>)
{
 802ae2a:	b082      	sub	sp, #8
  SCB->CPACR |= ((3UL << 20U)|(3UL << 22U));  /* set CP10 and CP11 Full Access */
 802ae2c:	f8d2 3088 	ldr.w	r3, [r2, #136]	; 0x88
 802ae30:	f443 0370 	orr.w	r3, r3, #15728640	; 0xf00000
 802ae34:	f8c2 3088 	str.w	r3, [r2, #136]	; 0x88
     used as kernel clock by ADC".
     Actions: Perform a ADC activation sequence in order to update state
               of internal signals.
  */
  /* Enable ADC kernel clock */
  SET_BIT(RCC->AHB4ENR, RCC_AHB4ENR_ADC4EN);
 802ae38:	4b1d      	ldr	r3, [pc, #116]	; (802aeb0 <SystemInit+0x88>)
 802ae3a:	f8d3 2094 	ldr.w	r2, [r3, #148]	; 0x94
 802ae3e:	f042 0220 	orr.w	r2, r2, #32
 802ae42:	f8c3 2094 	str.w	r2, [r3, #148]	; 0x94
  /* Delay after an RCC peripheral clock enabling */
  tmpreg = READ_BIT(RCC->AHB4ENR, RCC_AHB4ENR_ADC4EN);
 802ae46:	f8d3 3094 	ldr.w	r3, [r3, #148]	; 0x94
 802ae4a:	f003 0320 	and.w	r3, r3, #32
 802ae4e:	9301      	str	r3, [sp, #4]
  (void)tmpreg;
 802ae50:	9b01      	ldr	r3, [sp, #4]

  /* Enable ADC */
  SET_BIT(ADC4->CR, ADC_CR_ADEN);
 802ae52:	4b18      	ldr	r3, [pc, #96]	; (802aeb4 <SystemInit+0x8c>)
 802ae54:	689a      	ldr	r2, [r3, #8]
 802ae56:	f042 0201 	orr.w	r2, r2, #1
 802ae5a:	609a      	str	r2, [r3, #8]

  /* Poll for ADC ready */
  /* Set timeout 2 ADC clock cycles */
  /* Note: Approximative computation and timeout execution not taking into
           account processing CPU cycles */
  timeout_cpu_cycles = 2;
 802ae5c:	2202      	movs	r2, #2
 802ae5e:	9200      	str	r2, [sp, #0]
  while (READ_BIT(ADC4->ISR, ADC_ISR_ADRDY) == 0)
 802ae60:	681a      	ldr	r2, [r3, #0]
 802ae62:	07d1      	lsls	r1, r2, #31
 802ae64:	d405      	bmi.n	802ae72 <SystemInit+0x4a>
  {
    timeout_cpu_cycles--;
 802ae66:	9a00      	ldr	r2, [sp, #0]
 802ae68:	3a01      	subs	r2, #1
 802ae6a:	9200      	str	r2, [sp, #0]
    if(timeout_cpu_cycles == 0)
 802ae6c:	9a00      	ldr	r2, [sp, #0]
 802ae6e:	2a00      	cmp	r2, #0
 802ae70:	d1f6      	bne.n	802ae60 <SystemInit+0x38>
      break;
    }
  }

  /* Disable ADC */
  SET_BIT(ADC4->CR, ADC_CR_ADDIS);
 802ae72:	689a      	ldr	r2, [r3, #8]
 802ae74:	f042 0202 	orr.w	r2, r2, #2
 802ae78:	609a      	str	r2, [r3, #8]

  /* Poll for ADC disable is effective */
  /* Set timeout 6 ADC clock cycles */
  /* Note: Approximative computation and timeout execution not taking into
           account processing CPU cycles */
  timeout_cpu_cycles = 6;
 802ae7a:	2306      	movs	r3, #6
 802ae7c:	9300      	str	r3, [sp, #0]
  while (READ_BIT(ADC4->CR, ADC_CR_ADEN) != 0)
 802ae7e:	4b0d      	ldr	r3, [pc, #52]	; (802aeb4 <SystemInit+0x8c>)
 802ae80:	689a      	ldr	r2, [r3, #8]
 802ae82:	07d2      	lsls	r2, r2, #31
 802ae84:	d505      	bpl.n	802ae92 <SystemInit+0x6a>
  {
    timeout_cpu_cycles--;
 802ae86:	9a00      	ldr	r2, [sp, #0]
 802ae88:	3a01      	subs	r2, #1
 802ae8a:	9200      	str	r2, [sp, #0]
    if(timeout_cpu_cycles == 0)
 802ae8c:	9a00      	ldr	r2, [sp, #0]
 802ae8e:	2a00      	cmp	r2, #0
 802ae90:	d1f6      	bne.n	802ae80 <SystemInit+0x58>
      break;
    }
  }

  /* Disable ADC internal voltage regulator */
  CLEAR_BIT(ADC4->CR, ADC_CR_ADVREGEN);
 802ae92:	689a      	ldr	r2, [r3, #8]
 802ae94:	f022 5280 	bic.w	r2, r2, #268435456	; 0x10000000
 802ae98:	609a      	str	r2, [r3, #8]

  /* Disable ADC kernel clock */
  CLEAR_BIT(RCC->AHB4ENR, RCC_AHB4ENR_ADC4EN);
 802ae9a:	4a05      	ldr	r2, [pc, #20]	; (802aeb0 <SystemInit+0x88>)
 802ae9c:	f8d2 3094 	ldr.w	r3, [r2, #148]	; 0x94
 802aea0:	f023 0320 	bic.w	r3, r3, #32
 802aea4:	f8c2 3094 	str.w	r3, [r2, #148]	; 0x94
#endif
}
 802aea8:	b002      	add	sp, #8
 802aeaa:	4770      	bx	lr
 802aeac:	e000ed00 	.word	0xe000ed00
 802aeb0:	46020c00 	.word	0x46020c00
 802aeb4:	46021000 	.word	0x46021000

0802aeb8 <SystemCoreClockUpdate>:
  *
  * @param  None
  * @retval None
  */
void SystemCoreClockUpdate(void)
{
 802aeb8:	b510      	push	{r4, lr}
  uint32_t plln;
  float_t fracn;
  float_t pllvco;

  /* Get SYSCLK source -------------------------------------------------------*/
  switch (RCC->CFGR1 & RCC_CFGR1_SWS)
 802aeba:	4c31      	ldr	r4, [pc, #196]	; (802af80 <SystemCoreClockUpdate+0xc8>)
 802aebc:	4831      	ldr	r0, [pc, #196]	; (802af84 <SystemCoreClockUpdate+0xcc>)
 802aebe:	69e3      	ldr	r3, [r4, #28]
 802aec0:	f003 030c 	and.w	r3, r3, #12
 802aec4:	2b08      	cmp	r3, #8
 802aec6:	d003      	beq.n	802aed0 <SystemCoreClockUpdate+0x18>
 802aec8:	2b0c      	cmp	r3, #12
 802aeca:	d008      	beq.n	802aede <SystemCoreClockUpdate+0x26>
      SystemCoreClock = (uint32_t)((float_t) pllvco /(float_t) pllr);
      break;

    case 0x00u:  /* HSI used as system clock source */
    default:
      SystemCoreClock = HSI_VALUE;
 802aecc:	4b2e      	ldr	r3, [pc, #184]	; (802af88 <SystemCoreClockUpdate+0xd0>)
 802aece:	e004      	b.n	802aeda <SystemCoreClockUpdate+0x22>
      SystemCoreClock = (HSE_VALUE >> ((RCC->CR & RCC_CR_HSEPRE) >> RCC_CR_HSEPRE_Pos));
 802aed0:	6822      	ldr	r2, [r4, #0]
 802aed2:	4b2e      	ldr	r3, [pc, #184]	; (802af8c <SystemCoreClockUpdate+0xd4>)
 802aed4:	f3c2 5200 	ubfx	r2, r2, #20, #1
 802aed8:	40d3      	lsrs	r3, r2
      SystemCoreClock = HSI_VALUE;
 802aeda:	6003      	str	r3, [r0, #0]
      break;
 802aedc:	e041      	b.n	802af62 <SystemCoreClockUpdate+0xaa>
      tmp1 = RCC->PLL1CFGR;
 802aede:	6aa1      	ldr	r1, [r4, #40]	; 0x28
      tmp2 = RCC->PLL1DIVR;
 802aee0:	6b63      	ldr	r3, [r4, #52]	; 0x34
      pllm = ((tmp1 & RCC_PLL1CFGR_PLL1M) >> RCC_PLL1CFGR_PLL1M_Pos) + 1U;
 802aee2:	f3c1 2202 	ubfx	r2, r1, #8, #3
 802aee6:	3201      	adds	r2, #1
 802aee8:	ee06 2a10 	vmov	s12, r2
      plln = (tmp2 & RCC_PLL1DIVR_PLL1N) + 1U;
 802aeec:	f3c3 0208 	ubfx	r2, r3, #0, #9
 802aef0:	3201      	adds	r2, #1
 802aef2:	ee07 2a90 	vmov	s15, r2
      if ((tmp1 & RCC_PLL1CFGR_PLL1FRACEN) != 0x00u)
 802aef6:	06ca      	lsls	r2, r1, #27
        fracn = ((RCC->PLL1FRACR & RCC_PLL1FRACR_PLL1FRACN) >> RCC_PLL1FRACR_PLL1FRACN_Pos);
 802aef8:	bf48      	it	mi
 802aefa:	6ba2      	ldrmi	r2, [r4, #56]	; 0x38
      pllsource = (tmp1 & RCC_PLL1CFGR_PLL1SRC);
 802aefc:	f001 0103 	and.w	r1, r1, #3
        fracn = ((RCC->PLL1FRACR & RCC_PLL1FRACR_PLL1FRACN) >> RCC_PLL1FRACR_PLL1FRACN_Pos);
 802af00:	bf45      	ittet	mi
 802af02:	f3c2 02cc 	ubfxmi	r2, r2, #3, #13
 802af06:	ee07 2a10 	vmovmi	s14, r2
        fracn = 0;
 802af0a:	eddf 6a21 	vldrpl	s13, [pc, #132]	; 802af90 <SystemCoreClockUpdate+0xd8>
        fracn = ((RCC->PLL1FRACR & RCC_PLL1FRACR_PLL1FRACN) >> RCC_PLL1FRACR_PLL1FRACN_Pos);
 802af0e:	eef8 6ac7 	vcvtmi.f32.s32	s13, s14
      pllr = ((tmp2 & RCC_PLL1DIVR_PLL1R) >> RCC_PLL1DIVR_PLL1R_Pos) + 1U;
 802af12:	f3c3 6306 	ubfx	r3, r3, #24, #7
 802af16:	2902      	cmp	r1, #2
 802af18:	f103 0301 	add.w	r3, r3, #1
      switch (pllsource)
 802af1c:	d02b      	beq.n	802af76 <SystemCoreClockUpdate+0xbe>
 802af1e:	2903      	cmp	r1, #3
 802af20:	d12b      	bne.n	802af7a <SystemCoreClockUpdate+0xc2>
          tmp1 = (HSE_VALUE >> ((RCC->CR & RCC_CR_HSEPRE) >> RCC_CR_HSEPRE_Pos));
 802af22:	4a17      	ldr	r2, [pc, #92]	; (802af80 <SystemCoreClockUpdate+0xc8>)
 802af24:	6811      	ldr	r1, [r2, #0]
 802af26:	4a19      	ldr	r2, [pc, #100]	; (802af8c <SystemCoreClockUpdate+0xd4>)
 802af28:	f3c1 5100 	ubfx	r1, r1, #20, #1
 802af2c:	40ca      	lsrs	r2, r1
      pllvco = ((float) tmp1 / (float)pllm) * (((float)plln + (float)(fracn / 0x2000u)));
 802af2e:	ee07 2a10 	vmov	s14, r2
 802af32:	eeb8 6ac6 	vcvt.f32.s32	s12, s12
 802af36:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 802af3a:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 802af3e:	eec7 5a06 	vdiv.f32	s11, s14, s12
 802af42:	ed9f 7a14 	vldr	s14, [pc, #80]	; 802af94 <SystemCoreClockUpdate+0xdc>
 802af46:	eee6 7a87 	vfma.f32	s15, s13, s14
 802af4a:	ee65 6aa7 	vmul.f32	s13, s11, s15
      SystemCoreClock = (uint32_t)((float_t) pllvco /(float_t) pllr);
 802af4e:	ee07 3a90 	vmov	s15, r3
 802af52:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 802af56:	ee86 7aa7 	vdiv.f32	s14, s13, s15
 802af5a:	eebc 7ac7 	vcvt.u32.f32	s14, s14
 802af5e:	ed80 7a00 	vstr	s14, [r0]
  }

  /* Compute HCLK clock frequency --------------------------------------------*/
  /* Get HCLK prescaler */
  tmp1 = AHBPrescTable[(RCC->CFGR2 & RCC_CFGR2_HPRE)];
 802af62:	4b07      	ldr	r3, [pc, #28]	; (802af80 <SystemCoreClockUpdate+0xc8>)
 802af64:	4a0c      	ldr	r2, [pc, #48]	; (802af98 <SystemCoreClockUpdate+0xe0>)
 802af66:	6a1b      	ldr	r3, [r3, #32]
 802af68:	f003 0307 	and.w	r3, r3, #7
 802af6c:	5cd2      	ldrb	r2, [r2, r3]

  /* HCLK clock frequency */
  SystemCoreClock >>= tmp1;
 802af6e:	6803      	ldr	r3, [r0, #0]
 802af70:	40d3      	lsrs	r3, r2
 802af72:	6003      	str	r3, [r0, #0]
}
 802af74:	bd10      	pop	{r4, pc}
          tmp1 = HSI_VALUE;
 802af76:	4a04      	ldr	r2, [pc, #16]	; (802af88 <SystemCoreClockUpdate+0xd0>)
 802af78:	e7d9      	b.n	802af2e <SystemCoreClockUpdate+0x76>
 802af7a:	2200      	movs	r2, #0
 802af7c:	e7d7      	b.n	802af2e <SystemCoreClockUpdate+0x76>
 802af7e:	bf00      	nop
 802af80:	46020c00 	.word	0x46020c00
 802af84:	200004d0 	.word	0x200004d0
 802af88:	00f42400 	.word	0x00f42400
 802af8c:	01e84800 	.word	0x01e84800
 802af90:	00000000 	.word	0x00000000
 802af94:	39000000 	.word	0x39000000
 802af98:	08033924 	.word	0x08033924

0802af9c <HAL_InitTick>:
  *       implementation  in user file.
  * @param TickPriority: Tick interrupt priority.
  * @retval HAL status
  */
__weak HAL_StatusTypeDef HAL_InitTick(uint32_t TickPriority)
{
 802af9c:	b538      	push	{r3, r4, r5, lr}
  /* Check uwTickFreq for MisraC 2012 (even if uwTickFreq is a enum type that don't take the value zero)*/
  if ((uint32_t)uwTickFreq == 0UL)
 802af9e:	4b0f      	ldr	r3, [pc, #60]	; (802afdc <HAL_InitTick+0x40>)
{
 802afa0:	4605      	mov	r5, r0
  if ((uint32_t)uwTickFreq == 0UL)
 802afa2:	7818      	ldrb	r0, [r3, #0]
 802afa4:	b908      	cbnz	r0, 802afaa <HAL_InitTick+0xe>
  {
    return HAL_ERROR;
 802afa6:	2001      	movs	r0, #1
    return HAL_ERROR;
  }

  /* Return function status */
  return HAL_OK;
}
 802afa8:	bd38      	pop	{r3, r4, r5, pc}
  if (HAL_SYSTICK_Config(SystemCoreClock / (1000UL / (uint32_t)uwTickFreq)) > 0U)
 802afaa:	f44f 737a 	mov.w	r3, #1000	; 0x3e8
 802afae:	fbb3 f3f0 	udiv	r3, r3, r0
 802afb2:	4a0b      	ldr	r2, [pc, #44]	; (802afe0 <HAL_InitTick+0x44>)
 802afb4:	6810      	ldr	r0, [r2, #0]
 802afb6:	fbb0 f0f3 	udiv	r0, r0, r3
 802afba:	f000 fc37 	bl	802b82c <HAL_SYSTICK_Config>
 802afbe:	4604      	mov	r4, r0
 802afc0:	2800      	cmp	r0, #0
 802afc2:	d1f0      	bne.n	802afa6 <HAL_InitTick+0xa>
  if (TickPriority < (1UL << __NVIC_PRIO_BITS))
 802afc4:	2d0f      	cmp	r5, #15
 802afc6:	d8ee      	bhi.n	802afa6 <HAL_InitTick+0xa>
    HAL_NVIC_SetPriority(SysTick_IRQn, TickPriority, 0U);
 802afc8:	4602      	mov	r2, r0
 802afca:	4629      	mov	r1, r5
 802afcc:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 802afd0:	f000 fbba 	bl	802b748 <HAL_NVIC_SetPriority>
    uwTickPrio = TickPriority;
 802afd4:	4b03      	ldr	r3, [pc, #12]	; (802afe4 <HAL_InitTick+0x48>)
 802afd6:	4620      	mov	r0, r4
 802afd8:	601d      	str	r5, [r3, #0]
  return HAL_OK;
 802afda:	e7e5      	b.n	802afa8 <HAL_InitTick+0xc>
 802afdc:	200004d4 	.word	0x200004d4
 802afe0:	200004d0 	.word	0x200004d0
 802afe4:	200004d8 	.word	0x200004d8

0802afe8 <HAL_Init>:
  __HAL_FLASH_PREFETCH_BUFFER_ENABLE();
 802afe8:	4a0a      	ldr	r2, [pc, #40]	; (802b014 <HAL_Init+0x2c>)
{
 802afea:	b510      	push	{r4, lr}
  __HAL_FLASH_PREFETCH_BUFFER_ENABLE();
 802afec:	6813      	ldr	r3, [r2, #0]
  HAL_NVIC_SetPriorityGrouping(NVIC_PRIORITYGROUP_4);
 802afee:	2003      	movs	r0, #3
  __HAL_FLASH_PREFETCH_BUFFER_ENABLE();
 802aff0:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 802aff4:	6013      	str	r3, [r2, #0]
  HAL_NVIC_SetPriorityGrouping(NVIC_PRIORITYGROUP_4);
 802aff6:	f000 fb8b 	bl	802b710 <HAL_NVIC_SetPriorityGrouping>
  SystemCoreClockUpdate();
 802affa:	f7ff ff5d 	bl	802aeb8 <SystemCoreClockUpdate>
  if (HAL_InitTick(TICK_INT_PRIORITY) != HAL_OK)
 802affe:	200e      	movs	r0, #14
 802b000:	f7ff ffcc 	bl	802af9c <HAL_InitTick>
 802b004:	4604      	mov	r4, r0
 802b006:	b918      	cbnz	r0, 802b010 <HAL_Init+0x28>
  HAL_MspInit();
 802b008:	f7fb f8ca 	bl	80261a0 <HAL_MspInit>
}
 802b00c:	4620      	mov	r0, r4
 802b00e:	bd10      	pop	{r4, pc}
    return HAL_ERROR;
 802b010:	2401      	movs	r4, #1
 802b012:	e7fb      	b.n	802b00c <HAL_Init+0x24>
 802b014:	40022000 	.word	0x40022000

0802b018 <HAL_IncTick>:
  *      implementations in user file.
  * @retval None
  */
__weak void HAL_IncTick(void)
{
  uwTick += (uint32_t)uwTickFreq;
 802b018:	4a03      	ldr	r2, [pc, #12]	; (802b028 <HAL_IncTick+0x10>)
 802b01a:	4b04      	ldr	r3, [pc, #16]	; (802b02c <HAL_IncTick+0x14>)
 802b01c:	6811      	ldr	r1, [r2, #0]
 802b01e:	781b      	ldrb	r3, [r3, #0]
 802b020:	440b      	add	r3, r1
 802b022:	6013      	str	r3, [r2, #0]
}
 802b024:	4770      	bx	lr
 802b026:	bf00      	nop
 802b028:	20009128 	.word	0x20009128
 802b02c:	200004d4 	.word	0x200004d4

0802b030 <HAL_GetTick>:
  *       implementations in user file.
  * @retval tick value
  */
__weak uint32_t HAL_GetTick(void)
{
  return uwTick;
 802b030:	4b01      	ldr	r3, [pc, #4]	; (802b038 <HAL_GetTick+0x8>)
 802b032:	6818      	ldr	r0, [r3, #0]
}
 802b034:	4770      	bx	lr
 802b036:	bf00      	nop
 802b038:	20009128 	.word	0x20009128

0802b03c <HAL_Delay>:
  *       implementations in user file.
  * @param Delay  specifies the delay time length, in milliseconds.
  * @retval None
  */
__weak void HAL_Delay(uint32_t Delay)
{
 802b03c:	b538      	push	{r3, r4, r5, lr}
 802b03e:	4604      	mov	r4, r0
  uint32_t tickstart = HAL_GetTick();
 802b040:	f7ff fff6 	bl	802b030 <HAL_GetTick>
 802b044:	4605      	mov	r5, r0
  uint32_t wait = Delay;

  /* Add a freq to guarantee minimum wait */
  if (wait < HAL_MAX_DELAY)
 802b046:	1c63      	adds	r3, r4, #1
  {
    wait += (uint32_t)(uwTickFreq);
 802b048:	bf1e      	ittt	ne
 802b04a:	4b04      	ldrne	r3, [pc, #16]	; (802b05c <HAL_Delay+0x20>)
 802b04c:	781b      	ldrbne	r3, [r3, #0]
 802b04e:	18e4      	addne	r4, r4, r3
  }

  while ((HAL_GetTick() - tickstart) < wait)
 802b050:	f7ff ffee 	bl	802b030 <HAL_GetTick>
 802b054:	1b43      	subs	r3, r0, r5
 802b056:	42a3      	cmp	r3, r4
 802b058:	d3fa      	bcc.n	802b050 <HAL_Delay+0x14>
  {
  }
}
 802b05a:	bd38      	pop	{r3, r4, r5, pc}
 802b05c:	200004d4 	.word	0x200004d4

0802b060 <LL_ADC_REG_IsConversionOngoing>:
  return ((READ_BIT(ADCx->CR, ADC_CR_ADSTART) == (ADC_CR_ADSTART)) ? 1UL : 0UL);
 802b060:	6880      	ldr	r0, [r0, #8]
}
 802b062:	f3c0 0080 	ubfx	r0, r0, #2, #1
 802b066:	4770      	bx	lr

0802b068 <HAL_ADC_Init>:
  *         of structure "ADC_InitTypeDef".
  * @param hadc ADC handle
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_ADC_Init(ADC_HandleTypeDef *hadc)
{
 802b068:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
  uint32_t tmp_cfgr2 = 0UL;
  uint32_t tmp_adc_reg_is_conversion_on_going;
  uint32_t tickstart;

  /* Check ADC handle */
  if (hadc == NULL)
 802b06a:	4604      	mov	r4, r0
 802b06c:	2800      	cmp	r0, #0
 802b06e:	f000 8131 	beq.w	802b2d4 <HAL_ADC_Init+0x26c>
  {
    return HAL_ERROR;
  }

  /* Check the parameters */
  assert_param(IS_ADC_ALL_INSTANCE(hadc->Instance));
 802b072:	6802      	ldr	r2, [r0, #0]
 802b074:	4b98      	ldr	r3, [pc, #608]	; (802b2d8 <HAL_ADC_Init+0x270>)
 802b076:	429a      	cmp	r2, r3
 802b078:	d004      	beq.n	802b084 <HAL_ADC_Init+0x1c>
 802b07a:	f44f 71c5 	mov.w	r1, #394	; 0x18a
 802b07e:	4897      	ldr	r0, [pc, #604]	; (802b2dc <HAL_ADC_Init+0x274>)
 802b080:	f7fb f88c 	bl	802619c <assert_failed>
  assert_param(IS_ADC_CLOCKPRESCALER(hadc->Init.ClockPrescaler));
 802b084:	6863      	ldr	r3, [r4, #4]
 802b086:	f433 2340 	bics.w	r3, r3, #786432	; 0xc0000
 802b08a:	d00a      	beq.n	802b0a2 <HAL_ADC_Init+0x3a>
 802b08c:	f5b3 1f80 	cmp.w	r3, #1048576	; 0x100000
 802b090:	d007      	beq.n	802b0a2 <HAL_ADC_Init+0x3a>
 802b092:	f5b3 1f00 	cmp.w	r3, #2097152	; 0x200000
 802b096:	d004      	beq.n	802b0a2 <HAL_ADC_Init+0x3a>
 802b098:	f240 118b 	movw	r1, #395	; 0x18b
 802b09c:	488f      	ldr	r0, [pc, #572]	; (802b2dc <HAL_ADC_Init+0x274>)
 802b09e:	f7fb f87d 	bl	802619c <assert_failed>
  assert_param(IS_ADC_RESOLUTION(hadc->Init.Resolution));
 802b0a2:	68a3      	ldr	r3, [r4, #8]
 802b0a4:	f033 030c 	bics.w	r3, r3, #12
 802b0a8:	d004      	beq.n	802b0b4 <HAL_ADC_Init+0x4c>
 802b0aa:	f44f 71c6 	mov.w	r1, #396	; 0x18c
 802b0ae:	488b      	ldr	r0, [pc, #556]	; (802b2dc <HAL_ADC_Init+0x274>)
 802b0b0:	f7fb f874 	bl	802619c <assert_failed>
  assert_param(IS_ADC_DATA_ALIGN(hadc->Init.DataAlign));
 802b0b4:	68e3      	ldr	r3, [r4, #12]
 802b0b6:	f033 0320 	bics.w	r3, r3, #32
 802b0ba:	d004      	beq.n	802b0c6 <HAL_ADC_Init+0x5e>
 802b0bc:	f240 118d 	movw	r1, #397	; 0x18d
 802b0c0:	4886      	ldr	r0, [pc, #536]	; (802b2dc <HAL_ADC_Init+0x274>)
 802b0c2:	f7fb f86b 	bl	802619c <assert_failed>
  assert_param(IS_ADC_SCAN_MODE(hadc->Init.ScanConvMode));
 802b0c6:	6923      	ldr	r3, [r4, #16]
 802b0c8:	f433 1200 	bics.w	r2, r3, #2097152	; 0x200000
 802b0cc:	d009      	beq.n	802b0e2 <HAL_ADC_Init+0x7a>
 802b0ce:	f023 0310 	bic.w	r3, r3, #16
 802b0d2:	f1b3 4f00 	cmp.w	r3, #2147483648	; 0x80000000
 802b0d6:	d004      	beq.n	802b0e2 <HAL_ADC_Init+0x7a>
 802b0d8:	f44f 71c7 	mov.w	r1, #398	; 0x18e
 802b0dc:	487f      	ldr	r0, [pc, #508]	; (802b2dc <HAL_ADC_Init+0x274>)
 802b0de:	f7fb f85d 	bl	802619c <assert_failed>
  assert_param(IS_FUNCTIONAL_STATE(hadc->Init.ContinuousConvMode));
 802b0e2:	f894 3020 	ldrb.w	r3, [r4, #32]
 802b0e6:	2b01      	cmp	r3, #1
 802b0e8:	d904      	bls.n	802b0f4 <HAL_ADC_Init+0x8c>
 802b0ea:	f240 118f 	movw	r1, #399	; 0x18f
 802b0ee:	487b      	ldr	r0, [pc, #492]	; (802b2dc <HAL_ADC_Init+0x274>)
 802b0f0:	f7fb f854 	bl	802619c <assert_failed>
  assert_param(IS_ADC_EXTTRIG_EDGE(hadc->Init.ExternalTrigConvEdge));
 802b0f4:	6b23      	ldr	r3, [r4, #48]	; 0x30
 802b0f6:	f433 6340 	bics.w	r3, r3, #3072	; 0xc00
 802b0fa:	d004      	beq.n	802b106 <HAL_ADC_Init+0x9e>
 802b0fc:	f44f 71c8 	mov.w	r1, #400	; 0x190
 802b100:	4876      	ldr	r0, [pc, #472]	; (802b2dc <HAL_ADC_Init+0x274>)
 802b102:	f7fb f84b 	bl	802619c <assert_failed>
  assert_param(IS_ADC_EXTTRIG(hadc->Init.ExternalTrigConv));
 802b106:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 802b108:	f423 7280 	bic.w	r2, r3, #256	; 0x100
 802b10c:	f5b2 6f88 	cmp.w	r2, #1088	; 0x440
 802b110:	d00d      	beq.n	802b12e <HAL_ADC_Init+0xc6>
 802b112:	f5b3 6f90 	cmp.w	r3, #1152	; 0x480
 802b116:	d00a      	beq.n	802b12e <HAL_ADC_Init+0xc6>
 802b118:	f5b3 6fb8 	cmp.w	r3, #1472	; 0x5c0
 802b11c:	d007      	beq.n	802b12e <HAL_ADC_Init+0xc6>
 802b11e:	f433 6380 	bics.w	r3, r3, #1024	; 0x400
 802b122:	d004      	beq.n	802b12e <HAL_ADC_Init+0xc6>
 802b124:	f240 1191 	movw	r1, #401	; 0x191
 802b128:	486c      	ldr	r0, [pc, #432]	; (802b2dc <HAL_ADC_Init+0x274>)
 802b12a:	f7fb f837 	bl	802619c <assert_failed>
  assert_param(IS_FUNCTIONAL_STATE(hadc->Init.DMAContinuousRequests));
 802b12e:	f894 3034 	ldrb.w	r3, [r4, #52]	; 0x34
 802b132:	2b01      	cmp	r3, #1
 802b134:	d904      	bls.n	802b140 <HAL_ADC_Init+0xd8>
 802b136:	f44f 71c9 	mov.w	r1, #402	; 0x192
 802b13a:	4868      	ldr	r0, [pc, #416]	; (802b2dc <HAL_ADC_Init+0x274>)
 802b13c:	f7fb f82e 	bl	802619c <assert_failed>
  assert_param(IS_ADC_EOC_SELECTION(hadc->Init.EOCSelection));
 802b140:	6963      	ldr	r3, [r4, #20]
 802b142:	2b04      	cmp	r3, #4
 802b144:	d006      	beq.n	802b154 <HAL_ADC_Init+0xec>
 802b146:	2b08      	cmp	r3, #8
 802b148:	d004      	beq.n	802b154 <HAL_ADC_Init+0xec>
 802b14a:	f240 1193 	movw	r1, #403	; 0x193
 802b14e:	4863      	ldr	r0, [pc, #396]	; (802b2dc <HAL_ADC_Init+0x274>)
 802b150:	f7fb f824 	bl	802619c <assert_failed>
  assert_param(IS_ADC_OVERRUN(hadc->Init.Overrun));
 802b154:	6ba3      	ldr	r3, [r4, #56]	; 0x38
 802b156:	f433 5380 	bics.w	r3, r3, #4096	; 0x1000
 802b15a:	d004      	beq.n	802b166 <HAL_ADC_Init+0xfe>
 802b15c:	f44f 71ca 	mov.w	r1, #404	; 0x194
 802b160:	485e      	ldr	r0, [pc, #376]	; (802b2dc <HAL_ADC_Init+0x274>)
 802b162:	f7fb f81b 	bl	802619c <assert_failed>
  assert_param(IS_FUNCTIONAL_STATE(hadc->Init.LowPowerAutoWait));
 802b166:	7e23      	ldrb	r3, [r4, #24]
 802b168:	2b01      	cmp	r3, #1
 802b16a:	d904      	bls.n	802b176 <HAL_ADC_Init+0x10e>
 802b16c:	f240 1195 	movw	r1, #405	; 0x195
 802b170:	485a      	ldr	r0, [pc, #360]	; (802b2dc <HAL_ADC_Init+0x274>)
 802b172:	f7fb f813 	bl	802619c <assert_failed>
  assert_param(IS_FUNCTIONAL_STATE(hadc->Init.LowPowerAutoPowerOff));
 802b176:	7e63      	ldrb	r3, [r4, #25]
 802b178:	2b01      	cmp	r3, #1
 802b17a:	d904      	bls.n	802b186 <HAL_ADC_Init+0x11e>
 802b17c:	f44f 71cb 	mov.w	r1, #406	; 0x196
 802b180:	4856      	ldr	r0, [pc, #344]	; (802b2dc <HAL_ADC_Init+0x274>)
 802b182:	f7fb f80b 	bl	802619c <assert_failed>
  assert_param(IS_ADC_AUTONOMOUS_DPD(hadc->Init.LowPowerAutonomousDPD));
 802b186:	69e3      	ldr	r3, [r4, #28]
 802b188:	f033 0302 	bics.w	r3, r3, #2
 802b18c:	d004      	beq.n	802b198 <HAL_ADC_Init+0x130>
 802b18e:	f240 1197 	movw	r1, #407	; 0x197
 802b192:	4852      	ldr	r0, [pc, #328]	; (802b2dc <HAL_ADC_Init+0x274>)
 802b194:	f7fb f802 	bl	802619c <assert_failed>
  assert_param(IS_ADC_SAMPLE_TIME(hadc->Init.SamplingTimeCommon1));
 802b198:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 802b19a:	2b07      	cmp	r3, #7
 802b19c:	d904      	bls.n	802b1a8 <HAL_ADC_Init+0x140>
 802b19e:	f44f 71cc 	mov.w	r1, #408	; 0x198
 802b1a2:	484e      	ldr	r0, [pc, #312]	; (802b2dc <HAL_ADC_Init+0x274>)
 802b1a4:	f7fa fffa 	bl	802619c <assert_failed>
  assert_param(IS_ADC_SAMPLE_TIME(hadc->Init.SamplingTimeCommon2));
 802b1a8:	6c23      	ldr	r3, [r4, #64]	; 0x40
 802b1aa:	2b07      	cmp	r3, #7
 802b1ac:	d904      	bls.n	802b1b8 <HAL_ADC_Init+0x150>
 802b1ae:	f240 1199 	movw	r1, #409	; 0x199
 802b1b2:	484a      	ldr	r0, [pc, #296]	; (802b2dc <HAL_ADC_Init+0x274>)
 802b1b4:	f7fa fff2 	bl	802619c <assert_failed>
  assert_param(IS_FUNCTIONAL_STATE(hadc->Init.OversamplingMode));
 802b1b8:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
 802b1bc:	2b01      	cmp	r3, #1
 802b1be:	d904      	bls.n	802b1ca <HAL_ADC_Init+0x162>
 802b1c0:	f44f 71cd 	mov.w	r1, #410	; 0x19a
 802b1c4:	4845      	ldr	r0, [pc, #276]	; (802b2dc <HAL_ADC_Init+0x274>)
 802b1c6:	f7fa ffe9 	bl	802619c <assert_failed>
  if (hadc->Init.OversamplingMode == ENABLE)
 802b1ca:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
 802b1ce:	2b01      	cmp	r3, #1
 802b1d0:	d123      	bne.n	802b21a <HAL_ADC_Init+0x1b2>
  {
    assert_param(IS_ADC_OVERSAMPLING_RATIO(hadc->Init.Oversampling.Ratio));
 802b1d2:	6ca2      	ldr	r2, [r4, #72]	; 0x48
 802b1d4:	2a1c      	cmp	r2, #28
 802b1d6:	d804      	bhi.n	802b1e2 <HAL_ADC_Init+0x17a>
 802b1d8:	f04f 3311 	mov.w	r3, #286331153	; 0x11111111
 802b1dc:	40d3      	lsrs	r3, r2
 802b1de:	07db      	lsls	r3, r3, #31
 802b1e0:	d404      	bmi.n	802b1ec <HAL_ADC_Init+0x184>
 802b1e2:	f240 119d 	movw	r1, #413	; 0x19d
 802b1e6:	483d      	ldr	r0, [pc, #244]	; (802b2dc <HAL_ADC_Init+0x274>)
 802b1e8:	f7fa ffd8 	bl	802619c <assert_failed>
    assert_param(IS_ADC_RIGHT_BIT_SHIFT(hadc->Init.Oversampling.RightBitShift));
 802b1ec:	6ce3      	ldr	r3, [r4, #76]	; 0x4c
 802b1ee:	f033 0260 	bics.w	r2, r3, #96	; 0x60
 802b1f2:	d009      	beq.n	802b208 <HAL_ADC_Init+0x1a0>
 802b1f4:	2a80      	cmp	r2, #128	; 0x80
 802b1f6:	d007      	beq.n	802b208 <HAL_ADC_Init+0x1a0>
 802b1f8:	f5b3 7f80 	cmp.w	r3, #256	; 0x100
 802b1fc:	d004      	beq.n	802b208 <HAL_ADC_Init+0x1a0>
 802b1fe:	f44f 71cf 	mov.w	r1, #414	; 0x19e
 802b202:	4836      	ldr	r0, [pc, #216]	; (802b2dc <HAL_ADC_Init+0x274>)
 802b204:	f7fa ffca 	bl	802619c <assert_failed>
    assert_param(IS_ADC_TRIGGERED_OVERSAMPLING_MODE(hadc->Init.Oversampling.TriggeredMode));
 802b208:	6d23      	ldr	r3, [r4, #80]	; 0x50
 802b20a:	f433 7300 	bics.w	r3, r3, #512	; 0x200
 802b20e:	d004      	beq.n	802b21a <HAL_ADC_Init+0x1b2>
 802b210:	f240 119f 	movw	r1, #415	; 0x19f
 802b214:	4831      	ldr	r0, [pc, #196]	; (802b2dc <HAL_ADC_Init+0x274>)
 802b216:	f7fa ffc1 	bl	802619c <assert_failed>
  }
  assert_param(IS_ADC_TRIGGER_FREQ(hadc->Init.TriggerFrequencyMode));
 802b21a:	6d63      	ldr	r3, [r4, #84]	; 0x54
 802b21c:	f033 5300 	bics.w	r3, r3, #536870912	; 0x20000000
 802b220:	d004      	beq.n	802b22c <HAL_ADC_Init+0x1c4>
 802b222:	f240 11a1 	movw	r1, #417	; 0x1a1
 802b226:	482d      	ldr	r0, [pc, #180]	; (802b2dc <HAL_ADC_Init+0x274>)
 802b228:	f7fa ffb8 	bl	802619c <assert_failed>

  if (hadc->Init.ScanConvMode != ADC_SCAN_DISABLE)
 802b22c:	6923      	ldr	r3, [r4, #16]
 802b22e:	b1ab      	cbz	r3, 802b25c <HAL_ADC_Init+0x1f4>
  {
    assert_param(IS_FUNCTIONAL_STATE(hadc->Init.DiscontinuousConvMode));
 802b230:	f894 3028 	ldrb.w	r3, [r4, #40]	; 0x28
 802b234:	2b01      	cmp	r3, #1
 802b236:	d904      	bls.n	802b242 <HAL_ADC_Init+0x1da>
 802b238:	f240 11a5 	movw	r1, #421	; 0x1a5
 802b23c:	4827      	ldr	r0, [pc, #156]	; (802b2dc <HAL_ADC_Init+0x274>)
 802b23e:	f7fa ffad 	bl	802619c <assert_failed>

    if (hadc->Init.ScanConvMode == ADC_SCAN_ENABLE)
 802b242:	6923      	ldr	r3, [r4, #16]
 802b244:	f5b3 1f00 	cmp.w	r3, #2097152	; 0x200000
 802b248:	d108      	bne.n	802b25c <HAL_ADC_Init+0x1f4>
    {
      assert_param(IS_ADC_REGULAR_NB_CONV(hadc->Init.NbrOfConversion));
 802b24a:	6a63      	ldr	r3, [r4, #36]	; 0x24
 802b24c:	3b01      	subs	r3, #1
 802b24e:	2b07      	cmp	r3, #7
 802b250:	d904      	bls.n	802b25c <HAL_ADC_Init+0x1f4>
 802b252:	f240 11a9 	movw	r1, #425	; 0x1a9
 802b256:	4821      	ldr	r0, [pc, #132]	; (802b2dc <HAL_ADC_Init+0x274>)
 802b258:	f7fa ffa0 	bl	802619c <assert_failed>
    }
  }

  /* ADC group regular discontinuous mode can be enabled only if              */
  /* continuous mode is disabled.                                             */
  assert_param(!((hadc->Init.DiscontinuousConvMode == ENABLE) && (hadc->Init.ContinuousConvMode == ENABLE)));
 802b25c:	f894 3028 	ldrb.w	r3, [r4, #40]	; 0x28
 802b260:	2b01      	cmp	r3, #1
 802b262:	d108      	bne.n	802b276 <HAL_ADC_Init+0x20e>
 802b264:	f894 3020 	ldrb.w	r3, [r4, #32]
 802b268:	2b01      	cmp	r3, #1
 802b26a:	d104      	bne.n	802b276 <HAL_ADC_Init+0x20e>
 802b26c:	f240 11af 	movw	r1, #431	; 0x1af
 802b270:	481a      	ldr	r0, [pc, #104]	; (802b2dc <HAL_ADC_Init+0x274>)
 802b272:	f7fa ff93 	bl	802619c <assert_failed>

  /* Actions performed only if ADC is coming from state reset:                */
  /* - Initialization of ADC MSP                                              */
  if (hadc->State == HAL_ADC_STATE_RESET)
 802b276:	6e25      	ldr	r5, [r4, #96]	; 0x60
 802b278:	b92d      	cbnz	r5, 802b286 <HAL_ADC_Init+0x21e>

    /* Init the low level hardware */
    hadc->MspInitCallback(hadc);
#else
    /* Init the low level hardware */
    HAL_ADC_MspInit(hadc);
 802b27a:	4620      	mov	r0, r4
 802b27c:	f7fa ffb4 	bl	80261e8 <HAL_ADC_MspInit>
#endif /* USE_HAL_ADC_REGISTER_CALLBACKS */

    /* Set ADC error code to none */
    ADC_CLEAR_ERRORCODE(hadc);
 802b280:	6665      	str	r5, [r4, #100]	; 0x64

    /* Initialize Lock */
    hadc->Lock = HAL_UNLOCKED;
 802b282:	f884 505c 	strb.w	r5, [r4, #92]	; 0x5c
  }

  if (LL_ADC_IsInternalRegulatorEnabled(hadc->Instance) == 0UL)
 802b286:	6822      	ldr	r2, [r4, #0]
  return ((READ_BIT(ADCx->CR, ADC_CR_ADVREGEN) == (ADC_CR_ADVREGEN)) ? 1UL : 0UL);
 802b288:	6893      	ldr	r3, [r2, #8]
 802b28a:	00df      	lsls	r7, r3, #3
 802b28c:	d428      	bmi.n	802b2e0 <HAL_ADC_Init+0x278>
  WRITE_REG(ADCx->ISR, LL_ADC_FLAG_LDORDY);
 802b28e:	f44f 5380 	mov.w	r3, #4096	; 0x1000
 802b292:	6013      	str	r3, [r2, #0]
  MODIFY_REG(ADCx->CR,
 802b294:	6893      	ldr	r3, [r2, #8]
 802b296:	f023 4310 	bic.w	r3, r3, #2415919104	; 0x90000000
 802b29a:	f023 0317 	bic.w	r3, r3, #23
 802b29e:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
 802b2a2:	6093      	str	r3, [r2, #8]

    /* Enable ADC internal voltage regulator */
    LL_ADC_EnableInternalRegulator(hadc->Instance);

    /* Get tick count */
    tickstart = HAL_GetTick();
 802b2a4:	f7ff fec4 	bl	802b030 <HAL_GetTick>
 802b2a8:	4605      	mov	r5, r0

    /* Delay for ADC stabilization time */
    while (LL_ADC_IsActiveFlag_LDORDY(hadc->Instance) == 0UL)
 802b2aa:	6823      	ldr	r3, [r4, #0]
  return ((READ_BIT(ADCx->ISR, LL_ADC_FLAG_LDORDY) == (LL_ADC_FLAG_LDORDY)) ? 1UL : 0UL);
 802b2ac:	681b      	ldr	r3, [r3, #0]
 802b2ae:	04d8      	lsls	r0, r3, #19
 802b2b0:	d416      	bmi.n	802b2e0 <HAL_ADC_Init+0x278>
    {
      if ((HAL_GetTick() - tickstart) > ADC_LDO_RDY_TIMEOUT)
 802b2b2:	f7ff febd 	bl	802b030 <HAL_GetTick>
 802b2b6:	1b40      	subs	r0, r0, r5
 802b2b8:	2801      	cmp	r0, #1
 802b2ba:	d9f6      	bls.n	802b2aa <HAL_ADC_Init+0x242>
      {
        /* New check to avoid false timeout detection in case of preemption */
        if (LL_ADC_IsActiveFlag_LDORDY(hadc->Instance) == 0UL)
 802b2bc:	6823      	ldr	r3, [r4, #0]
 802b2be:	681b      	ldr	r3, [r3, #0]
 802b2c0:	04de      	lsls	r6, r3, #19
 802b2c2:	d4f2      	bmi.n	802b2aa <HAL_ADC_Init+0x242>
        {
          /* Update ADC state machine to error */
          SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_INTERNAL);
 802b2c4:	6e23      	ldr	r3, [r4, #96]	; 0x60
                        HAL_ADC_STATE_READY);
    }
    else
    {
      /* Update ADC state machine to error */
      ADC_STATE_CLR_SET(hadc->State,
 802b2c6:	f043 0310 	orr.w	r3, r3, #16
 802b2ca:	6623      	str	r3, [r4, #96]	; 0x60
                        HAL_ADC_STATE_BUSY_INTERNAL,
                        HAL_ADC_STATE_ERROR_INTERNAL);

      /* Set ADC error code to ADC peripheral internal error */
      SET_BIT(hadc->ErrorCode, HAL_ADC_ERROR_INTERNAL);
 802b2cc:	6e63      	ldr	r3, [r4, #100]	; 0x64
 802b2ce:	f043 0301 	orr.w	r3, r3, #1
 802b2d2:	6663      	str	r3, [r4, #100]	; 0x64
    return HAL_ERROR;
 802b2d4:	2501      	movs	r5, #1
 802b2d6:	e0a4      	b.n	802b422 <HAL_ADC_Init+0x3ba>
 802b2d8:	46021000 	.word	0x46021000
 802b2dc:	08033934 	.word	0x08033934
  if (LL_ADC_IsInternalRegulatorEnabled(hadc->Instance) == 0UL)
 802b2e0:	6820      	ldr	r0, [r4, #0]
  return ((READ_BIT(ADCx->CR, ADC_CR_ADVREGEN) == (ADC_CR_ADVREGEN)) ? 1UL : 0UL);
 802b2e2:	6883      	ldr	r3, [r0, #8]
 802b2e4:	00d9      	lsls	r1, r3, #3
    SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_INTERNAL);
 802b2e6:	bf5f      	itttt	pl
 802b2e8:	6e23      	ldrpl	r3, [r4, #96]	; 0x60
    tmp_hal_status = HAL_ERROR;
 802b2ea:	2501      	movpl	r5, #1
    SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_INTERNAL);
 802b2ec:	f043 0310 	orrpl.w	r3, r3, #16
 802b2f0:	6623      	strpl	r3, [r4, #96]	; 0x60
    SET_BIT(hadc->ErrorCode, HAL_ADC_ERROR_INTERNAL);
 802b2f2:	bf57      	itett	pl
 802b2f4:	6e63      	ldrpl	r3, [r4, #100]	; 0x64
  HAL_StatusTypeDef tmp_hal_status = HAL_OK;
 802b2f6:	2500      	movmi	r5, #0
    SET_BIT(hadc->ErrorCode, HAL_ADC_ERROR_INTERNAL);
 802b2f8:	f043 0301 	orrpl.w	r3, r3, #1
 802b2fc:	6663      	strpl	r3, [r4, #100]	; 0x64
  tmp_adc_reg_is_conversion_on_going = LL_ADC_REG_IsConversionOngoing(hadc->Instance);
 802b2fe:	f7ff feaf 	bl	802b060 <LL_ADC_REG_IsConversionOngoing>
  if (((hadc->State & HAL_ADC_STATE_ERROR_INTERNAL) == 0UL)
 802b302:	6e23      	ldr	r3, [r4, #96]	; 0x60
 802b304:	f003 0310 	and.w	r3, r3, #16
 802b308:	4318      	orrs	r0, r3
    ADC_STATE_CLR_SET(hadc->State,
 802b30a:	6e23      	ldr	r3, [r4, #96]	; 0x60
  if (((hadc->State & HAL_ADC_STATE_ERROR_INTERNAL) == 0UL)
 802b30c:	f040 80a8 	bne.w	802b460 <HAL_ADC_Init+0x3f8>
    ADC_STATE_CLR_SET(hadc->State,
 802b310:	f423 7381 	bic.w	r3, r3, #258	; 0x102
 802b314:	f043 0302 	orr.w	r3, r3, #2
 802b318:	6623      	str	r3, [r4, #96]	; 0x60
    if (LL_ADC_IsEnabled(hadc->Instance) == 0UL)
 802b31a:	6823      	ldr	r3, [r4, #0]
  return ((READ_BIT(ADCx->CR, ADC_CR_ADEN) == (ADC_CR_ADEN)) ? 1UL : 0UL);
 802b31c:	689a      	ldr	r2, [r3, #8]
 802b31e:	07d2      	lsls	r2, r2, #31
 802b320:	d422      	bmi.n	802b368 <HAL_ADC_Init+0x300>
      MODIFY_REG(hadc->Instance->CFGR1,
 802b322:	68da      	ldr	r2, [r3, #12]
 802b324:	68a1      	ldr	r1, [r4, #8]
 802b326:	f022 020c 	bic.w	r2, r2, #12
 802b32a:	430a      	orrs	r2, r1
 802b32c:	60da      	str	r2, [r3, #12]
      if (hadc->Init.OversamplingMode == ENABLE)
 802b32e:	f894 2044 	ldrb.w	r2, [r4, #68]	; 0x44
      tmp_cfgr2 |= (hadc->Init.TriggerFrequencyMode);
 802b332:	6d60      	ldr	r0, [r4, #84]	; 0x54
      if (hadc->Init.OversamplingMode == ENABLE)
 802b334:	2a01      	cmp	r2, #1
 802b336:	d107      	bne.n	802b348 <HAL_ADC_Init+0x2e0>
        tmp_cfgr2 |= (ADC_CFGR2_OVSE |
 802b338:	6d22      	ldr	r2, [r4, #80]	; 0x50
 802b33a:	4310      	orrs	r0, r2
 802b33c:	6ca2      	ldr	r2, [r4, #72]	; 0x48
 802b33e:	4310      	orrs	r0, r2
 802b340:	6ce2      	ldr	r2, [r4, #76]	; 0x4c
 802b342:	4310      	orrs	r0, r2
 802b344:	f040 0001 	orr.w	r0, r0, #1
      MODIFY_REG(hadc->Instance->CFGR2,
 802b348:	6919      	ldr	r1, [r3, #16]
 802b34a:	4a47      	ldr	r2, [pc, #284]	; (802b468 <HAL_ADC_Init+0x400>)
      MODIFY_REG(ADC4_COMMON->CCR,
 802b34c:	4e47      	ldr	r6, [pc, #284]	; (802b46c <HAL_ADC_Init+0x404>)
      MODIFY_REG(hadc->Instance->CFGR2,
 802b34e:	400a      	ands	r2, r1
 802b350:	4302      	orrs	r2, r0
 802b352:	611a      	str	r2, [r3, #16]
      MODIFY_REG(ADC4_COMMON->CCR,
 802b354:	f8d6 1308 	ldr.w	r1, [r6, #776]	; 0x308
 802b358:	6862      	ldr	r2, [r4, #4]
 802b35a:	f421 1170 	bic.w	r1, r1, #3932160	; 0x3c0000
 802b35e:	f402 1270 	and.w	r2, r2, #3932160	; 0x3c0000
 802b362:	430a      	orrs	r2, r1
 802b364:	f8c6 2308 	str.w	r2, [r6, #776]	; 0x308
                  ADC_CFGR1_CONTINUOUS((uint32_t)hadc->Init.ContinuousConvMode)  |
 802b368:	f894 7020 	ldrb.w	r7, [r4, #32]
    tmp_cfgr1 |= (ADC_CFGR1_AUTOWAIT((uint32_t)hadc->Init.LowPowerAutoWait)      |
 802b36c:	7e21      	ldrb	r1, [r4, #24]
                  ADC_CFGR1_CONTINUOUS((uint32_t)hadc->Init.ContinuousConvMode)  |
 802b36e:	037a      	lsls	r2, r7, #13
    tmp_cfgr1 |= (ADC_CFGR1_AUTOWAIT((uint32_t)hadc->Init.LowPowerAutoWait)      |
 802b370:	ea42 3281 	orr.w	r2, r2, r1, lsl #14
                  ADC_CFGR1_OVERRUN(hadc->Init.Overrun)                          |
 802b374:	6ba1      	ldr	r1, [r4, #56]	; 0x38
 802b376:	68e6      	ldr	r6, [r4, #12]
 802b378:	2900      	cmp	r1, #0
 802b37a:	bf18      	it	ne
 802b37c:	f44f 5180 	movne.w	r1, #4096	; 0x1000
 802b380:	4332      	orrs	r2, r6
                  ADC_SCAN_SEQ_MODE(hadc->Init.ScanConvMode)                     |
 802b382:	6926      	ldr	r6, [r4, #16]
                  ADC_CFGR1_DMACONTREQ((uint32_t)hadc->Init.DMAContinuousRequests));
 802b384:	f894 e034 	ldrb.w	lr, [r4, #52]	; 0x34
                  ADC_SCAN_SEQ_MODE(hadc->Init.ScanConvMode)                     |
 802b388:	2e00      	cmp	r6, #0
 802b38a:	bfa8      	it	ge
 802b38c:	f44f 1c00 	movge.w	ip, #2097152	; 0x200000
 802b390:	ea42 024e 	orr.w	r2, r2, lr, lsl #1
 802b394:	ea42 0201 	orr.w	r2, r2, r1
    if (hadc->Init.DiscontinuousConvMode == ENABLE)
 802b398:	f894 1028 	ldrb.w	r1, [r4, #40]	; 0x28
                  ADC_SCAN_SEQ_MODE(hadc->Init.ScanConvMode)                     |
 802b39c:	bfb8      	it	lt
 802b39e:	f026 4c00 	biclt.w	ip, r6, #2147483648	; 0x80000000
    if (hadc->Init.DiscontinuousConvMode == ENABLE)
 802b3a2:	2901      	cmp	r1, #1
                  ADC_SCAN_SEQ_MODE(hadc->Init.ScanConvMode)                     |
 802b3a4:	ea42 020c 	orr.w	r2, r2, ip
    if (hadc->Init.DiscontinuousConvMode == ENABLE)
 802b3a8:	d103      	bne.n	802b3b2 <HAL_ADC_Init+0x34a>
      if (hadc->Init.ContinuousConvMode == DISABLE)
 802b3aa:	2f00      	cmp	r7, #0
 802b3ac:	d13b      	bne.n	802b426 <HAL_ADC_Init+0x3be>
        tmp_cfgr1 |= ADC_CFGR1_DISCEN;
 802b3ae:	f442 3280 	orr.w	r2, r2, #65536	; 0x10000
    if (hadc->Init.ExternalTrigConv != ADC_SOFTWARE_START)
 802b3b2:	6ae1      	ldr	r1, [r4, #44]	; 0x2c
 802b3b4:	b121      	cbz	r1, 802b3c0 <HAL_ADC_Init+0x358>
      tmp_cfgr1 |= ((hadc->Init.ExternalTrigConv & ADC_CFGR1_EXTSEL) |
 802b3b6:	6b27      	ldr	r7, [r4, #48]	; 0x30
 802b3b8:	f401 71e0 	and.w	r1, r1, #448	; 0x1c0
 802b3bc:	4339      	orrs	r1, r7
 802b3be:	430a      	orrs	r2, r1
    MODIFY_REG(hadc->Instance->CFGR1,
 802b3c0:	68df      	ldr	r7, [r3, #12]
 802b3c2:	492b      	ldr	r1, [pc, #172]	; (802b470 <HAL_ADC_Init+0x408>)
 802b3c4:	4039      	ands	r1, r7
 802b3c6:	4311      	orrs	r1, r2
 802b3c8:	60d9      	str	r1, [r3, #12]
    MODIFY_REG(hadc->Instance->CFGR2,
 802b3ca:	691f      	ldr	r7, [r3, #16]
 802b3cc:	4926      	ldr	r1, [pc, #152]	; (802b468 <HAL_ADC_Init+0x400>)
 802b3ce:	4039      	ands	r1, r7
 802b3d0:	4308      	orrs	r0, r1
 802b3d2:	6118      	str	r0, [r3, #16]
    MODIFY_REG(hadc->Instance->PWRR,
 802b3d4:	6c58      	ldr	r0, [r3, #68]	; 0x44
 802b3d6:	7e61      	ldrb	r1, [r4, #25]
 802b3d8:	69e7      	ldr	r7, [r4, #28]
 802b3da:	f020 0003 	bic.w	r0, r0, #3
 802b3de:	4339      	orrs	r1, r7
 802b3e0:	4301      	orrs	r1, r0
 802b3e2:	6459      	str	r1, [r3, #68]	; 0x44
  MODIFY_REG(ADCx->SMPR,
 802b3e4:	6959      	ldr	r1, [r3, #20]
 802b3e6:	6be0      	ldr	r0, [r4, #60]	; 0x3c
 802b3e8:	f021 0107 	bic.w	r1, r1, #7
 802b3ec:	4301      	orrs	r1, r0
 802b3ee:	6159      	str	r1, [r3, #20]
 802b3f0:	6959      	ldr	r1, [r3, #20]
 802b3f2:	6c20      	ldr	r0, [r4, #64]	; 0x40
 802b3f4:	f021 0170 	bic.w	r1, r1, #112	; 0x70
 802b3f8:	ea41 1100 	orr.w	r1, r1, r0, lsl #4
 802b3fc:	6159      	str	r1, [r3, #20]
    if (hadc->Init.ScanConvMode == ADC_SCAN_DISABLE)
 802b3fe:	b9de      	cbnz	r6, 802b438 <HAL_ADC_Init+0x3d0>
      SET_BIT(hadc->Instance->CHSELR,
 802b400:	6a99      	ldr	r1, [r3, #40]	; 0x28
 802b402:	f061 010f 	orn	r1, r1, #15
      MODIFY_REG(hadc->Instance->CHSELR,
 802b406:	6299      	str	r1, [r3, #40]	; 0x28
    if ((hadc->Instance->CFGR1 & ~(ADC_CFGR1_AWD1CH | ADC_CFGR1_AWD1EN | ADC_CFGR1_AWD1SGL | ADC_CFGR1_RES))
 802b408:	68d9      	ldr	r1, [r3, #12]
 802b40a:	4b1a      	ldr	r3, [pc, #104]	; (802b474 <HAL_ADC_Init+0x40c>)
 802b40c:	400b      	ands	r3, r1
 802b40e:	4293      	cmp	r3, r2
 802b410:	d122      	bne.n	802b458 <HAL_ADC_Init+0x3f0>
      ADC_CLEAR_ERRORCODE(hadc);
 802b412:	2300      	movs	r3, #0
 802b414:	6663      	str	r3, [r4, #100]	; 0x64
      ADC_STATE_CLR_SET(hadc->State,
 802b416:	6e23      	ldr	r3, [r4, #96]	; 0x60
 802b418:	f023 0303 	bic.w	r3, r3, #3
 802b41c:	f043 0301 	orr.w	r3, r3, #1
 802b420:	6623      	str	r3, [r4, #96]	; 0x60

    tmp_hal_status = HAL_ERROR;
  }

  return tmp_hal_status;
}
 802b422:	4628      	mov	r0, r5
 802b424:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
        SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_CONFIG);
 802b426:	6e21      	ldr	r1, [r4, #96]	; 0x60
 802b428:	f041 0120 	orr.w	r1, r1, #32
 802b42c:	6621      	str	r1, [r4, #96]	; 0x60
        SET_BIT(hadc->ErrorCode, HAL_ADC_ERROR_INTERNAL);
 802b42e:	6e61      	ldr	r1, [r4, #100]	; 0x64
 802b430:	f041 0101 	orr.w	r1, r1, #1
 802b434:	6661      	str	r1, [r4, #100]	; 0x64
 802b436:	e7bc      	b.n	802b3b2 <HAL_ADC_Init+0x34a>
    else if (hadc->Init.ScanConvMode == ADC_SCAN_ENABLE)
 802b438:	f5b6 1f00 	cmp.w	r6, #2097152	; 0x200000
 802b43c:	d1e4      	bne.n	802b408 <HAL_ADC_Init+0x3a0>
      MODIFY_REG(hadc->Instance->CHSELR,
 802b43e:	f06f 000f 	mvn.w	r0, #15
 802b442:	6a99      	ldr	r1, [r3, #40]	; 0x28
 802b444:	6a61      	ldr	r1, [r4, #36]	; 0x24
 802b446:	3901      	subs	r1, #1
 802b448:	0089      	lsls	r1, r1, #2
 802b44a:	f001 011c 	and.w	r1, r1, #28
 802b44e:	fa00 f101 	lsl.w	r1, r0, r1
 802b452:	6ea0      	ldr	r0, [r4, #104]	; 0x68
 802b454:	4301      	orrs	r1, r0
 802b456:	e7d6      	b.n	802b406 <HAL_ADC_Init+0x39e>
      ADC_STATE_CLR_SET(hadc->State,
 802b458:	6e23      	ldr	r3, [r4, #96]	; 0x60
 802b45a:	f023 0312 	bic.w	r3, r3, #18
 802b45e:	e732      	b.n	802b2c6 <HAL_ADC_Init+0x25e>
    SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_INTERNAL);
 802b460:	f043 0310 	orr.w	r3, r3, #16
 802b464:	6623      	str	r3, [r4, #96]	; 0x60
    tmp_hal_status = HAL_ERROR;
 802b466:	e735      	b.n	802b2d4 <HAL_ADC_Init+0x26c>
 802b468:	dffffc02 	.word	0xdffffc02
 802b46c:	46021000 	.word	0x46021000
 802b470:	ffde820d 	.word	0xffde820d
 802b474:	833ffff3 	.word	0x833ffff3

0802b478 <HAL_ADC_ConfigChannel>:
  */
HAL_StatusTypeDef HAL_ADC_ConfigChannel(ADC_HandleTypeDef *hadc, const ADC_ChannelConfTypeDef *pConfig)
{
  HAL_StatusTypeDef tmp_hal_status = HAL_OK;
  uint32_t tmp_config_internal_channel;
  __IO uint32_t wait_loop_index = 0UL;
 802b478:	2300      	movs	r3, #0
{
 802b47a:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}

  /* Check the parameters */
  assert_param(IS_ADC_ALL_INSTANCE(hadc->Instance));
 802b47c:	6802      	ldr	r2, [r0, #0]
  __IO uint32_t wait_loop_index = 0UL;
 802b47e:	9301      	str	r3, [sp, #4]
  assert_param(IS_ADC_ALL_INSTANCE(hadc->Instance));
 802b480:	4b90      	ldr	r3, [pc, #576]	; (802b6c4 <HAL_ADC_ConfigChannel+0x24c>)
{
 802b482:	4604      	mov	r4, r0
  assert_param(IS_ADC_ALL_INSTANCE(hadc->Instance));
 802b484:	429a      	cmp	r2, r3
{
 802b486:	460d      	mov	r5, r1
  assert_param(IS_ADC_ALL_INSTANCE(hadc->Instance));
 802b488:	d004      	beq.n	802b494 <HAL_ADC_ConfigChannel+0x1c>
 802b48a:	f640 01ac 	movw	r1, #2220	; 0x8ac
 802b48e:	488e      	ldr	r0, [pc, #568]	; (802b6c8 <HAL_ADC_ConfigChannel+0x250>)
 802b490:	f7fa fe84 	bl	802619c <assert_failed>
  assert_param(IS_ADC_CHANNEL(pConfig->Channel));
 802b494:	682b      	ldr	r3, [r5, #0]
 802b496:	f023 4200 	bic.w	r2, r3, #2147483648	; 0x80000000
 802b49a:	2a01      	cmp	r2, #1
 802b49c:	d02c      	beq.n	802b4f8 <HAL_ADC_ConfigChannel+0x80>
 802b49e:	498b      	ldr	r1, [pc, #556]	; (802b6cc <HAL_ADC_ConfigChannel+0x254>)
 802b4a0:	428b      	cmp	r3, r1
 802b4a2:	d029      	beq.n	802b4f8 <HAL_ADC_ConfigChannel+0x80>
 802b4a4:	498a      	ldr	r1, [pc, #552]	; (802b6d0 <HAL_ADC_ConfigChannel+0x258>)
 802b4a6:	428b      	cmp	r3, r1
 802b4a8:	d026      	beq.n	802b4f8 <HAL_ADC_ConfigChannel+0x80>
 802b4aa:	498a      	ldr	r1, [pc, #552]	; (802b6d4 <HAL_ADC_ConfigChannel+0x25c>)
 802b4ac:	428b      	cmp	r3, r1
 802b4ae:	d023      	beq.n	802b4f8 <HAL_ADC_ConfigChannel+0x80>
 802b4b0:	4989      	ldr	r1, [pc, #548]	; (802b6d8 <HAL_ADC_ConfigChannel+0x260>)
 802b4b2:	428b      	cmp	r3, r1
 802b4b4:	d020      	beq.n	802b4f8 <HAL_ADC_ConfigChannel+0x80>
 802b4b6:	4989      	ldr	r1, [pc, #548]	; (802b6dc <HAL_ADC_ConfigChannel+0x264>)
 802b4b8:	428b      	cmp	r3, r1
 802b4ba:	d01d      	beq.n	802b4f8 <HAL_ADC_ConfigChannel+0x80>
 802b4bc:	4988      	ldr	r1, [pc, #544]	; (802b6e0 <HAL_ADC_ConfigChannel+0x268>)
 802b4be:	428b      	cmp	r3, r1
 802b4c0:	d01a      	beq.n	802b4f8 <HAL_ADC_ConfigChannel+0x80>
 802b4c2:	4988      	ldr	r1, [pc, #544]	; (802b6e4 <HAL_ADC_ConfigChannel+0x26c>)
 802b4c4:	428b      	cmp	r3, r1
 802b4c6:	d017      	beq.n	802b4f8 <HAL_ADC_ConfigChannel+0x80>
 802b4c8:	4987      	ldr	r1, [pc, #540]	; (802b6e8 <HAL_ADC_ConfigChannel+0x270>)
 802b4ca:	428b      	cmp	r3, r1
 802b4cc:	d014      	beq.n	802b4f8 <HAL_ADC_ConfigChannel+0x80>
 802b4ce:	4987      	ldr	r1, [pc, #540]	; (802b6ec <HAL_ADC_ConfigChannel+0x274>)
 802b4d0:	428b      	cmp	r3, r1
 802b4d2:	d011      	beq.n	802b4f8 <HAL_ADC_ConfigChannel+0x80>
 802b4d4:	4986      	ldr	r1, [pc, #536]	; (802b6f0 <HAL_ADC_ConfigChannel+0x278>)
 802b4d6:	428b      	cmp	r3, r1
 802b4d8:	d00e      	beq.n	802b4f8 <HAL_ADC_ConfigChannel+0x80>
 802b4da:	f101 2104 	add.w	r1, r1, #67109888	; 0x4000400
 802b4de:	428b      	cmp	r3, r1
 802b4e0:	d00a      	beq.n	802b4f8 <HAL_ADC_ConfigChannel+0x80>
 802b4e2:	4b84      	ldr	r3, [pc, #528]	; (802b6f4 <HAL_ADC_ConfigChannel+0x27c>)
 802b4e4:	429a      	cmp	r2, r3
 802b4e6:	d007      	beq.n	802b4f8 <HAL_ADC_ConfigChannel+0x80>
 802b4e8:	4b83      	ldr	r3, [pc, #524]	; (802b6f8 <HAL_ADC_ConfigChannel+0x280>)
 802b4ea:	429a      	cmp	r2, r3
 802b4ec:	d004      	beq.n	802b4f8 <HAL_ADC_ConfigChannel+0x80>
 802b4ee:	f640 01ad 	movw	r1, #2221	; 0x8ad
 802b4f2:	4875      	ldr	r0, [pc, #468]	; (802b6c8 <HAL_ADC_ConfigChannel+0x250>)
 802b4f4:	f7fa fe52 	bl	802619c <assert_failed>
  assert_param(IS_ADC_SAMPLING_TIME_COMMON(pConfig->SamplingTime));
 802b4f8:	68ab      	ldr	r3, [r5, #8]
 802b4fa:	b13b      	cbz	r3, 802b50c <HAL_ADC_ConfigChannel+0x94>
 802b4fc:	4a7f      	ldr	r2, [pc, #508]	; (802b6fc <HAL_ADC_ConfigChannel+0x284>)
 802b4fe:	4293      	cmp	r3, r2
 802b500:	d004      	beq.n	802b50c <HAL_ADC_ConfigChannel+0x94>
 802b502:	f640 01ae 	movw	r1, #2222	; 0x8ae
 802b506:	4870      	ldr	r0, [pc, #448]	; (802b6c8 <HAL_ADC_ConfigChannel+0x250>)
 802b508:	f7fa fe48 	bl	802619c <assert_failed>

  if ((hadc->Init.ScanConvMode == ADC_SCAN_SEQ_FIXED)       ||
 802b50c:	6923      	ldr	r3, [r4, #16]
 802b50e:	f023 0310 	bic.w	r3, r3, #16
 802b512:	f1b3 4f00 	cmp.w	r3, #2147483648	; 0x80000000
 802b516:	d138      	bne.n	802b58a <HAL_ADC_ConfigChannel+0x112>
      (hadc->Init.ScanConvMode == ADC_SCAN_SEQ_FIXED_BACKWARD))
  {
    assert_param(IS_ADC_REGULAR_RANK_SEQ_FIXED(pConfig->Rank));
 802b518:	686b      	ldr	r3, [r5, #4]
 802b51a:	3b01      	subs	r3, #1
 802b51c:	2b01      	cmp	r3, #1
 802b51e:	d904      	bls.n	802b52a <HAL_ADC_ConfigChannel+0xb2>
 802b520:	f640 01b3 	movw	r1, #2227	; 0x8b3
  }
  else
  {
    assert_param(IS_ADC_REGULAR_NB_CONV(hadc->Init.NbrOfConversion));

    assert_param(IS_ADC_REGULAR_RANK(pConfig->Rank));
 802b524:	4868      	ldr	r0, [pc, #416]	; (802b6c8 <HAL_ADC_ConfigChannel+0x250>)
 802b526:	f7fa fe39 	bl	802619c <assert_failed>
  }

  __HAL_LOCK(hadc);
 802b52a:	f894 305c 	ldrb.w	r3, [r4, #92]	; 0x5c
 802b52e:	2b01      	cmp	r3, #1
 802b530:	f000 80c5 	beq.w	802b6be <HAL_ADC_ConfigChannel+0x246>
 802b534:	2301      	movs	r3, #1
  /* Parameters that can be updated when ADC is disabled or enabled without   */
  /* conversion on going on regular group:                                    */
  /*  - Channel number                                                        */
  /*  - Channel sampling time                                                 */
  /*  - Management of internal measurement channels: VrefInt/TempSensor/Vbat  */
  if (LL_ADC_REG_IsConversionOngoing(hadc->Instance) == 0UL)
 802b536:	6820      	ldr	r0, [r4, #0]
  __HAL_LOCK(hadc);
 802b538:	f884 305c 	strb.w	r3, [r4, #92]	; 0x5c
  if (LL_ADC_REG_IsConversionOngoing(hadc->Instance) == 0UL)
 802b53c:	f7ff fd90 	bl	802b060 <LL_ADC_REG_IsConversionOngoing>
 802b540:	2800      	cmp	r0, #0
 802b542:	f040 80b6 	bne.w	802b6b2 <HAL_ADC_ConfigChannel+0x23a>
      if ((hadc->Init.ScanConvMode == ADC_SCAN_SEQ_FIXED)       ||
          (hadc->Init.ScanConvMode == ADC_SCAN_SEQ_FIXED_BACKWARD))
      {
        /* Sequencer set to not fully configurable:                           */
        /* Set the channel by enabling the corresponding bitfield.            */
        LL_ADC_REG_SetSequencerChAdd(hadc->Instance, pConfig->Channel);
 802b546:	e9d5 3100 	ldrd	r3, r1, [r5]
      if ((hadc->Init.ScanConvMode == ADC_SCAN_SEQ_FIXED)       ||
 802b54a:	6922      	ldr	r2, [r4, #16]
    if (pConfig->Rank != ADC_RANK_NONE)
 802b54c:	2902      	cmp	r1, #2
      if ((hadc->Init.ScanConvMode == ADC_SCAN_SEQ_FIXED)       ||
 802b54e:	f022 0210 	bic.w	r2, r2, #16
    if (pConfig->Rank != ADC_RANK_NONE)
 802b552:	f000 8089 	beq.w	802b668 <HAL_ADC_ConfigChannel+0x1f0>
      if ((hadc->Init.ScanConvMode == ADC_SCAN_SEQ_FIXED)       ||
 802b556:	f1b2 4f00 	cmp.w	r2, #2147483648	; 0x80000000
        LL_ADC_REG_SetSequencerChAdd(hadc->Instance, pConfig->Channel);
 802b55a:	6820      	ldr	r0, [r4, #0]
  SET_BIT(ADCx->CHSELR, (Channel & ADC_CHANNEL_ID_BITFIELD_MASK));
 802b55c:	f3c3 0e11 	ubfx	lr, r3, #0, #18
      if ((hadc->Init.ScanConvMode == ADC_SCAN_SEQ_FIXED)       ||
 802b560:	d127      	bne.n	802b5b2 <HAL_ADC_ConfigChannel+0x13a>
 802b562:	6a82      	ldr	r2, [r0, #40]	; 0x28
 802b564:	ea42 020e 	orr.w	r2, r2, lr
  MODIFY_REG(ADCx->CHSELR,
 802b568:	6282      	str	r2, [r0, #40]	; 0x28
  MODIFY_REG(ADCx->SMPR,
 802b56a:	68aa      	ldr	r2, [r5, #8]
 802b56c:	6941      	ldr	r1, [r0, #20]
 802b56e:	ea02 2203 	and.w	r2, r2, r3, lsl #8
 802b572:	f022 427c 	bic.w	r2, r2, #4227858432	; 0xfc000000
 802b576:	f022 02ff 	bic.w	r2, r2, #255	; 0xff
 802b57a:	ea21 2103 	bic.w	r1, r1, r3, lsl #8
 802b57e:	430a      	orrs	r2, r1
      /* internal measurement paths enable: If internal channel selected,     */
      /* enable dedicated internal buffers and path.                          */
      /* Note: these internal measurement paths can be disabled using         */
      /*       HAL_ADC_DeInit() or removing the channel from sequencer with   */
      /*       channel configuration parameter "Rank".                        */
      if (__LL_ADC_IS_CHANNEL_INTERNAL(pConfig->Channel))
 802b580:	2b00      	cmp	r3, #0
 802b582:	6142      	str	r2, [r0, #20]
 802b584:	db3a      	blt.n	802b5fc <HAL_ADC_ConfigChannel+0x184>
  HAL_StatusTypeDef tmp_hal_status = HAL_OK;
 802b586:	2000      	movs	r0, #0
}
 802b588:	e069      	b.n	802b65e <HAL_ADC_ConfigChannel+0x1e6>
    assert_param(IS_ADC_REGULAR_NB_CONV(hadc->Init.NbrOfConversion));
 802b58a:	6a63      	ldr	r3, [r4, #36]	; 0x24
 802b58c:	3b01      	subs	r3, #1
 802b58e:	2b07      	cmp	r3, #7
 802b590:	d904      	bls.n	802b59c <HAL_ADC_ConfigChannel+0x124>
 802b592:	f640 01b7 	movw	r1, #2231	; 0x8b7
 802b596:	484c      	ldr	r0, [pc, #304]	; (802b6c8 <HAL_ADC_ConfigChannel+0x250>)
 802b598:	f7fa fe00 	bl	802619c <assert_failed>
    assert_param(IS_ADC_REGULAR_RANK(pConfig->Rank));
 802b59c:	686a      	ldr	r2, [r5, #4]
 802b59e:	2a1c      	cmp	r2, #28
 802b5a0:	d804      	bhi.n	802b5ac <HAL_ADC_ConfigChannel+0x134>
 802b5a2:	f04f 3311 	mov.w	r3, #286331153	; 0x11111111
 802b5a6:	40d3      	lsrs	r3, r2
 802b5a8:	07da      	lsls	r2, r3, #31
 802b5aa:	d4be      	bmi.n	802b52a <HAL_ADC_ConfigChannel+0xb2>
 802b5ac:	f640 01b9 	movw	r1, #2233	; 0x8b9
 802b5b0:	e7b8      	b.n	802b524 <HAL_ADC_ConfigChannel+0xac>
        MODIFY_REG(hadc->ADCGroupRegularSequencerRanks,
 802b5b2:	f04f 0c0f 	mov.w	ip, #15
 802b5b6:	6ea2      	ldr	r2, [r4, #104]	; 0x68
 802b5b8:	f001 071f 	and.w	r7, r1, #31
 802b5bc:	fa0c fc07 	lsl.w	ip, ip, r7
 802b5c0:	ea6f 060c 	mvn.w	r6, ip
 802b5c4:	ea22 0c0c 	bic.w	ip, r2, ip
 802b5c8:	f1be 0f00 	cmp.w	lr, #0
 802b5cc:	d111      	bne.n	802b5f2 <HAL_ADC_ConfigChannel+0x17a>
 802b5ce:	f3c3 6284 	ubfx	r2, r3, #26, #5
 802b5d2:	40ba      	lsls	r2, r7
 802b5d4:	ea42 020c 	orr.w	r2, r2, ip
 802b5d8:	66a2      	str	r2, [r4, #104]	; 0x68
        if (((pConfig->Rank >> 2UL) + 1UL) <= hadc->Init.NbrOfConversion)
 802b5da:	0889      	lsrs	r1, r1, #2
 802b5dc:	6a62      	ldr	r2, [r4, #36]	; 0x24
 802b5de:	3101      	adds	r1, #1
 802b5e0:	4291      	cmp	r1, r2
 802b5e2:	d8c2      	bhi.n	802b56a <HAL_ADC_ConfigChannel+0xf2>
  MODIFY_REG(ADCx->CHSELR,
 802b5e4:	6a81      	ldr	r1, [r0, #40]	; 0x28
 802b5e6:	f3c3 6283 	ubfx	r2, r3, #26, #4
 802b5ea:	40ba      	lsls	r2, r7
 802b5ec:	400e      	ands	r6, r1
 802b5ee:	4332      	orrs	r2, r6
 802b5f0:	e7ba      	b.n	802b568 <HAL_ADC_ConfigChannel+0xf0>
  uint32_t result;

#if ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
     (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
     (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    )
   __ASM volatile ("rbit %0, %1" : "=r" (result) : "r" (value) );
 802b5f2:	fa93 f2a3 	rbit	r2, r3
   */
  if (value == 0U)
  {
    return 32U;
  }
  return __builtin_clz(value);
 802b5f6:	fab2 f282 	clz	r2, r2
 802b5fa:	e7ea      	b.n	802b5d2 <HAL_ADC_ConfigChannel+0x15a>
  return (uint32_t)(READ_BIT(ADCxy_COMMON->CCR, ADC_CCR_VREFEN | ADC_CCR_TSEN));
 802b5fc:	4a31      	ldr	r2, [pc, #196]	; (802b6c4 <HAL_ADC_ConfigChannel+0x24c>)
      {
        tmp_config_internal_channel = LL_ADC_GetCommonPathInternalCh(__LL_ADC_COMMON_INSTANCE(hadc->Instance));

        /* If the requested internal measurement path has already been enabled,   */
        /* bypass the configuration processing.                                   */
        if ((pConfig->Channel == ADC_CHANNEL_TEMPSENSOR) &&
 802b5fe:	4d40      	ldr	r5, [pc, #256]	; (802b700 <HAL_ADC_ConfigChannel+0x288>)
 802b600:	f8d2 0308 	ldr.w	r0, [r2, #776]	; 0x308
 802b604:	42ab      	cmp	r3, r5
 802b606:	f400 0140 	and.w	r1, r0, #12582912	; 0xc00000
 802b60a:	d119      	bne.n	802b640 <HAL_ADC_ConfigChannel+0x1c8>
 802b60c:	0203      	lsls	r3, r0, #8
 802b60e:	d4ba      	bmi.n	802b586 <HAL_ADC_ConfigChannel+0x10e>
  MODIFY_REG(ADCxy_COMMON->CCR, ADC_CCR_VREFEN | ADC_CCR_TSEN, PathInternal);
 802b610:	f8d2 3308 	ldr.w	r3, [r2, #776]	; 0x308
 802b614:	f423 0340 	bic.w	r3, r3, #12582912	; 0xc00000
 802b618:	430b      	orrs	r3, r1
 802b61a:	f443 0300 	orr.w	r3, r3, #8388608	; 0x800000
 802b61e:	f8c2 3308 	str.w	r3, [r2, #776]	; 0x308
          /* Delay for temperature sensor stabilization time */
          /* Wait loop initialization and execution */
          /* Note: Variable divided by 2 to compensate partially              */
          /*       CPU processing cycles, scaling in us split to not          */
          /*       exceed 32 bits register capacity and handle low frequency. */
          wait_loop_index = ((LL_ADC_DELAY_TEMPSENSOR_STAB_US / 10UL) * ((SystemCoreClock / (100000UL * 2UL)) + 1UL));
 802b622:	4b38      	ldr	r3, [pc, #224]	; (802b704 <HAL_ADC_ConfigChannel+0x28c>)
 802b624:	4a38      	ldr	r2, [pc, #224]	; (802b708 <HAL_ADC_ConfigChannel+0x290>)
 802b626:	681b      	ldr	r3, [r3, #0]
 802b628:	fbb3 f2f2 	udiv	r2, r3, r2
 802b62c:	230c      	movs	r3, #12
 802b62e:	fb02 3303 	mla	r3, r2, r3, r3
          while (wait_loop_index != 0UL)
          {
            wait_loop_index--;
 802b632:	9301      	str	r3, [sp, #4]
          while (wait_loop_index != 0UL)
 802b634:	9b01      	ldr	r3, [sp, #4]
 802b636:	2b00      	cmp	r3, #0
 802b638:	d0a5      	beq.n	802b586 <HAL_ADC_ConfigChannel+0x10e>
            wait_loop_index--;
 802b63a:	9b01      	ldr	r3, [sp, #4]
 802b63c:	3b01      	subs	r3, #1
 802b63e:	e7f8      	b.n	802b632 <HAL_ADC_ConfigChannel+0x1ba>
          }
        }
        else if ((pConfig->Channel == ADC_CHANNEL_VREFINT) &&
 802b640:	4d32      	ldr	r5, [pc, #200]	; (802b70c <HAL_ADC_ConfigChannel+0x294>)
 802b642:	42ab      	cmp	r3, r5
 802b644:	d19f      	bne.n	802b586 <HAL_ADC_ConfigChannel+0x10e>
 802b646:	f410 0080 	ands.w	r0, r0, #4194304	; 0x400000
 802b64a:	d19c      	bne.n	802b586 <HAL_ADC_ConfigChannel+0x10e>
 802b64c:	f8d2 3308 	ldr.w	r3, [r2, #776]	; 0x308
 802b650:	f423 0340 	bic.w	r3, r3, #12582912	; 0xc00000
 802b654:	430b      	orrs	r3, r1
 802b656:	f443 0380 	orr.w	r3, r3, #4194304	; 0x400000
 802b65a:	f8c2 3308 	str.w	r3, [r2, #776]	; 0x308
    SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_CONFIG);

    tmp_hal_status = HAL_ERROR;
  }

  __HAL_UNLOCK(hadc);
 802b65e:	2300      	movs	r3, #0
 802b660:	f884 305c 	strb.w	r3, [r4, #92]	; 0x5c

  return tmp_hal_status;
}
 802b664:	b003      	add	sp, #12
 802b666:	bdf0      	pop	{r4, r5, r6, r7, pc}
      if ((hadc->Init.ScanConvMode == ADC_SCAN_SEQ_FIXED)       ||
 802b668:	f1b2 4f00 	cmp.w	r2, #2147483648	; 0x80000000
 802b66c:	d106      	bne.n	802b67c <HAL_ADC_ConfigChannel+0x204>
        LL_ADC_REG_SetSequencerChRem(hadc->Instance, pConfig->Channel);
 802b66e:	6821      	ldr	r1, [r4, #0]
  CLEAR_BIT(ADCx->CHSELR, (Channel & ADC_CHANNEL_ID_BITFIELD_MASK));
 802b670:	f3c3 0011 	ubfx	r0, r3, #0, #18
 802b674:	6a8a      	ldr	r2, [r1, #40]	; 0x28
 802b676:	ea22 0200 	bic.w	r2, r2, r0
 802b67a:	628a      	str	r2, [r1, #40]	; 0x28
      if (__LL_ADC_IS_CHANNEL_INTERNAL(pConfig->Channel))
 802b67c:	2b00      	cmp	r3, #0
 802b67e:	da82      	bge.n	802b586 <HAL_ADC_ConfigChannel+0x10e>
        if (pConfig->Channel == ADC_CHANNEL_TEMPSENSOR)
 802b680:	481f      	ldr	r0, [pc, #124]	; (802b700 <HAL_ADC_ConfigChannel+0x288>)
  return (uint32_t)(READ_BIT(ADCxy_COMMON->CCR, ADC_CCR_VREFEN | ADC_CCR_TSEN));
 802b682:	4910      	ldr	r1, [pc, #64]	; (802b6c4 <HAL_ADC_ConfigChannel+0x24c>)
 802b684:	4283      	cmp	r3, r0
 802b686:	f8d1 2308 	ldr.w	r2, [r1, #776]	; 0x308
 802b68a:	d109      	bne.n	802b6a0 <HAL_ADC_ConfigChannel+0x228>
  MODIFY_REG(ADCxy_COMMON->CCR, ADC_CCR_VREFEN | ADC_CCR_TSEN, PathInternal);
 802b68c:	f8d1 3308 	ldr.w	r3, [r1, #776]	; 0x308
          LL_ADC_SetCommonPathInternalCh(__LL_ADC_COMMON_INSTANCE(hadc->Instance),
 802b690:	f402 0280 	and.w	r2, r2, #4194304	; 0x400000
 802b694:	f423 0340 	bic.w	r3, r3, #12582912	; 0xc00000
 802b698:	431a      	orrs	r2, r3
 802b69a:	f8c1 2308 	str.w	r2, [r1, #776]	; 0x308
 802b69e:	e772      	b.n	802b586 <HAL_ADC_ConfigChannel+0x10e>
        else if (pConfig->Channel == ADC_CHANNEL_VREFINT)
 802b6a0:	481a      	ldr	r0, [pc, #104]	; (802b70c <HAL_ADC_ConfigChannel+0x294>)
 802b6a2:	4283      	cmp	r3, r0
 802b6a4:	f47f af6f 	bne.w	802b586 <HAL_ADC_ConfigChannel+0x10e>
 802b6a8:	f8d1 3308 	ldr.w	r3, [r1, #776]	; 0x308
          LL_ADC_SetCommonPathInternalCh(__LL_ADC_COMMON_INSTANCE(hadc->Instance),
 802b6ac:	f402 0200 	and.w	r2, r2, #8388608	; 0x800000
 802b6b0:	e7f0      	b.n	802b694 <HAL_ADC_ConfigChannel+0x21c>
    SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_CONFIG);
 802b6b2:	6e22      	ldr	r2, [r4, #96]	; 0x60
    tmp_hal_status = HAL_ERROR;
 802b6b4:	4618      	mov	r0, r3
    SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_CONFIG);
 802b6b6:	f042 0220 	orr.w	r2, r2, #32
 802b6ba:	6622      	str	r2, [r4, #96]	; 0x60
    tmp_hal_status = HAL_ERROR;
 802b6bc:	e7cf      	b.n	802b65e <HAL_ADC_ConfigChannel+0x1e6>
  __HAL_LOCK(hadc);
 802b6be:	2002      	movs	r0, #2
 802b6c0:	e7d0      	b.n	802b664 <HAL_ADC_ConfigChannel+0x1ec>
 802b6c2:	bf00      	nop
 802b6c4:	46021000 	.word	0x46021000
 802b6c8:	08033934 	.word	0x08033934
 802b6cc:	04000002 	.word	0x04000002
 802b6d0:	08000004 	.word	0x08000004
 802b6d4:	0c000008 	.word	0x0c000008
 802b6d8:	10000010 	.word	0x10000010
 802b6dc:	14000020 	.word	0x14000020
 802b6e0:	18000040 	.word	0x18000040
 802b6e4:	1c000080 	.word	0x1c000080
 802b6e8:	20000100 	.word	0x20000100
 802b6ec:	24000200 	.word	0x24000200
 802b6f0:	28000400 	.word	0x28000400
 802b6f4:	30001000 	.word	0x30001000
 802b6f8:	34002000 	.word	0x34002000
 802b6fc:	03ffff04 	.word	0x03ffff04
 802b700:	b4002000 	.word	0xb4002000
 802b704:	200004d0 	.word	0x200004d0
 802b708:	00030d40 	.word	0x00030d40
 802b70c:	80000001 	.word	0x80000001

0802b710 <HAL_NVIC_SetPriorityGrouping>:
  * @retval None
  */
void HAL_NVIC_SetPriorityGrouping(uint32_t PriorityGroup)
{
  /* Check the parameters */
  assert_param(IS_NVIC_PRIORITY_GROUP(PriorityGroup));
 802b710:	1ec3      	subs	r3, r0, #3
 802b712:	2b04      	cmp	r3, #4
{
 802b714:	b510      	push	{r4, lr}
 802b716:	4604      	mov	r4, r0
  assert_param(IS_NVIC_PRIORITY_GROUP(PriorityGroup));
 802b718:	d903      	bls.n	802b722 <HAL_NVIC_SetPriorityGrouping+0x12>
 802b71a:	21a8      	movs	r1, #168	; 0xa8
 802b71c:	4808      	ldr	r0, [pc, #32]	; (802b740 <HAL_NVIC_SetPriorityGrouping+0x30>)
 802b71e:	f7fa fd3d 	bl	802619c <assert_failed>
                (PriorityGroupTmp << SCB_AIRCR_PRIGROUP_Pos)  );              /* Insert write key and priority group */
 802b722:	0223      	lsls	r3, r4, #8
  reg_value &= ~((uint32_t)(SCB_AIRCR_VECTKEY_Msk | SCB_AIRCR_PRIGROUP_Msk)); /* clear bits to change               */
 802b724:	f64f 04ff 	movw	r4, #63743	; 0xf8ff
  reg_value  =  SCB->AIRCR;                                                   /* read old register configuration    */
 802b728:	4906      	ldr	r1, [pc, #24]	; (802b744 <HAL_NVIC_SetPriorityGrouping+0x34>)
                (PriorityGroupTmp << SCB_AIRCR_PRIGROUP_Pos)  );              /* Insert write key and priority group */
 802b72a:	f403 63e0 	and.w	r3, r3, #1792	; 0x700
  reg_value  =  SCB->AIRCR;                                                   /* read old register configuration    */
 802b72e:	68ca      	ldr	r2, [r1, #12]
  reg_value &= ~((uint32_t)(SCB_AIRCR_VECTKEY_Msk | SCB_AIRCR_PRIGROUP_Msk)); /* clear bits to change               */
 802b730:	4014      	ands	r4, r2
                ((uint32_t)0x5FAUL << SCB_AIRCR_VECTKEY_Pos) |
 802b732:	4323      	orrs	r3, r4
  reg_value  =  (reg_value                                   |
 802b734:	f043 63bf 	orr.w	r3, r3, #100139008	; 0x5f80000
 802b738:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
  SCB->AIRCR =  reg_value;
 802b73c:	60cb      	str	r3, [r1, #12]

  /* Set the PRIGROUP[10:8] bits according to the PriorityGroup parameter value */
  NVIC_SetPriorityGrouping(PriorityGroup);
}
 802b73e:	bd10      	pop	{r4, pc}
 802b740:	080339a2 	.word	0x080339a2
 802b744:	e000ed00 	.word	0xe000ed00

0802b748 <HAL_NVIC_SetPriority>:
void HAL_NVIC_SetPriority(IRQn_Type IRQn, uint32_t PreemptPriority, uint32_t SubPriority)
{
  uint32_t prioritygroup;

  /* Check the parameters */
  assert_param(IS_NVIC_SUB_PRIORITY(SubPriority));
 802b748:	2a0f      	cmp	r2, #15
{
 802b74a:	b570      	push	{r4, r5, r6, lr}
 802b74c:	4605      	mov	r5, r0
 802b74e:	460c      	mov	r4, r1
 802b750:	4616      	mov	r6, r2
  assert_param(IS_NVIC_SUB_PRIORITY(SubPriority));
 802b752:	d903      	bls.n	802b75c <HAL_NVIC_SetPriority+0x14>
 802b754:	21c0      	movs	r1, #192	; 0xc0
 802b756:	481b      	ldr	r0, [pc, #108]	; (802b7c4 <HAL_NVIC_SetPriority+0x7c>)
 802b758:	f7fa fd20 	bl	802619c <assert_failed>
  assert_param(IS_NVIC_PREEMPTION_PRIORITY(PreemptPriority));
 802b75c:	2c0f      	cmp	r4, #15
 802b75e:	d903      	bls.n	802b768 <HAL_NVIC_SetPriority+0x20>
 802b760:	21c1      	movs	r1, #193	; 0xc1
 802b762:	4818      	ldr	r0, [pc, #96]	; (802b7c4 <HAL_NVIC_SetPriority+0x7c>)
 802b764:	f7fa fd1a 	bl	802619c <assert_failed>
  return ((uint32_t)((SCB->AIRCR & SCB_AIRCR_PRIGROUP_Msk) >> SCB_AIRCR_PRIGROUP_Pos));
 802b768:	4b17      	ldr	r3, [pc, #92]	; (802b7c8 <HAL_NVIC_SetPriority+0x80>)
 802b76a:	68d8      	ldr	r0, [r3, #12]
 802b76c:	f3c0 2002 	ubfx	r0, r0, #8, #3
{
  uint32_t PriorityGroupTmp = (PriorityGroup & (uint32_t)0x07UL);   /* only values 0..7 are used          */
  uint32_t PreemptPriorityBits;
  uint32_t SubPriorityBits;

  PreemptPriorityBits = ((7UL - PriorityGroupTmp) > (uint32_t)(__NVIC_PRIO_BITS)) ? (uint32_t)(__NVIC_PRIO_BITS) : (uint32_t)(7UL - PriorityGroupTmp);
 802b770:	f1c0 0307 	rsb	r3, r0, #7
  SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint32_t)0UL : (uint32_t)((PriorityGroupTmp - 7UL) + (uint32_t)(__NVIC_PRIO_BITS));
 802b774:	1d02      	adds	r2, r0, #4
  PreemptPriorityBits = ((7UL - PriorityGroupTmp) > (uint32_t)(__NVIC_PRIO_BITS)) ? (uint32_t)(__NVIC_PRIO_BITS) : (uint32_t)(7UL - PriorityGroupTmp);
 802b776:	2b04      	cmp	r3, #4
 802b778:	bf28      	it	cs
 802b77a:	2304      	movcs	r3, #4
  SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint32_t)0UL : (uint32_t)((PriorityGroupTmp - 7UL) + (uint32_t)(__NVIC_PRIO_BITS));
 802b77c:	2a06      	cmp	r2, #6

  return (
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
 802b77e:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
  SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint32_t)0UL : (uint32_t)((PriorityGroupTmp - 7UL) + (uint32_t)(__NVIC_PRIO_BITS));
 802b782:	bf98      	it	ls
 802b784:	2000      	movls	r0, #0
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
 802b786:	fa02 f303 	lsl.w	r3, r2, r3
  SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint32_t)0UL : (uint32_t)((PriorityGroupTmp - 7UL) + (uint32_t)(__NVIC_PRIO_BITS));
 802b78a:	bf88      	it	hi
 802b78c:	3803      	subhi	r0, #3
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
 802b78e:	ea24 0303 	bic.w	r3, r4, r3
 802b792:	4083      	lsls	r3, r0
           ((SubPriority     & (uint32_t)((1UL << (SubPriorityBits    )) - 1UL)))
 802b794:	fa02 f000 	lsl.w	r0, r2, r0
 802b798:	ea26 0600 	bic.w	r6, r6, r0
  if ((int32_t)(IRQn) >= 0)
 802b79c:	2d00      	cmp	r5, #0
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
 802b79e:	ea43 0306 	orr.w	r3, r3, r6
    NVIC->IPR[((uint32_t)IRQn)]               = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 802b7a2:	bfac      	ite	ge
 802b7a4:	f105 4560 	addge.w	r5, r5, #3758096384	; 0xe0000000
    SCB->SHPR[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 802b7a8:	4a08      	ldrlt	r2, [pc, #32]	; (802b7cc <HAL_NVIC_SetPriority+0x84>)
    NVIC->IPR[((uint32_t)IRQn)]               = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 802b7aa:	ea4f 1303 	mov.w	r3, r3, lsl #4
 802b7ae:	b2db      	uxtb	r3, r3
 802b7b0:	bfab      	itete	ge
 802b7b2:	f505 4561 	addge.w	r5, r5, #57600	; 0xe100
    SCB->SHPR[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 802b7b6:	f005 050f 	andlt.w	r5, r5, #15
    NVIC->IPR[((uint32_t)IRQn)]               = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 802b7ba:	f885 3300 	strbge.w	r3, [r5, #768]	; 0x300
    SCB->SHPR[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 802b7be:	5553      	strblt	r3, [r2, r5]

  prioritygroup = NVIC_GetPriorityGrouping();

  NVIC_SetPriority(IRQn, NVIC_EncodePriority(prioritygroup, PreemptPriority, SubPriority));
}
 802b7c0:	bd70      	pop	{r4, r5, r6, pc}
 802b7c2:	bf00      	nop
 802b7c4:	080339a2 	.word	0x080339a2
 802b7c8:	e000ed00 	.word	0xe000ed00
 802b7cc:	e000ed14 	.word	0xe000ed14

0802b7d0 <HAL_NVIC_EnableIRQ>:
  * @retval None
  */
void HAL_NVIC_EnableIRQ(IRQn_Type IRQn)
{
  /* Check the parameters */
  assert_param(IS_NVIC_DEVICE_IRQ(IRQn));
 802b7d0:	2800      	cmp	r0, #0
 802b7d2:	da03      	bge.n	802b7dc <HAL_NVIC_EnableIRQ+0xc>
 802b7d4:	21d4      	movs	r1, #212	; 0xd4
 802b7d6:	4806      	ldr	r0, [pc, #24]	; (802b7f0 <HAL_NVIC_EnableIRQ+0x20>)
 802b7d8:	f7fa bce0 	b.w	802619c <assert_failed>
    NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 802b7dc:	2301      	movs	r3, #1
 802b7de:	0942      	lsrs	r2, r0, #5
 802b7e0:	f000 001f 	and.w	r0, r0, #31
 802b7e4:	fa03 f000 	lsl.w	r0, r3, r0
 802b7e8:	4b02      	ldr	r3, [pc, #8]	; (802b7f4 <HAL_NVIC_EnableIRQ+0x24>)
 802b7ea:	f843 0022 	str.w	r0, [r3, r2, lsl #2]

  /* Enable interrupt */
  NVIC_EnableIRQ(IRQn);
}
 802b7ee:	4770      	bx	lr
 802b7f0:	080339a2 	.word	0x080339a2
 802b7f4:	e000e100 	.word	0xe000e100

0802b7f8 <HAL_NVIC_DisableIRQ>:
  * @retval None
  */
void HAL_NVIC_DisableIRQ(IRQn_Type IRQn)
{
  /* Check the parameters */
  assert_param(IS_NVIC_DEVICE_IRQ(IRQn));
 802b7f8:	2800      	cmp	r0, #0
 802b7fa:	da03      	bge.n	802b804 <HAL_NVIC_DisableIRQ+0xc>
 802b7fc:	21e4      	movs	r1, #228	; 0xe4
 802b7fe:	4809      	ldr	r0, [pc, #36]	; (802b824 <HAL_NVIC_DisableIRQ+0x2c>)
 802b800:	f7fa bccc 	b.w	802619c <assert_failed>
    NVIC->ICER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 802b804:	2201      	movs	r2, #1
 802b806:	0943      	lsrs	r3, r0, #5
 802b808:	f000 001f 	and.w	r0, r0, #31
 802b80c:	fa02 f000 	lsl.w	r0, r2, r0
 802b810:	4a05      	ldr	r2, [pc, #20]	; (802b828 <HAL_NVIC_DisableIRQ+0x30>)
 802b812:	3320      	adds	r3, #32
 802b814:	f842 0023 	str.w	r0, [r2, r3, lsl #2]
  __ASM volatile ("dsb 0xF":::"memory");
 802b818:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
 802b81c:	f3bf 8f6f 	isb	sy

  /* Disable interrupt */
  NVIC_DisableIRQ(IRQn);
}
 802b820:	4770      	bx	lr
 802b822:	bf00      	nop
 802b824:	080339a2 	.word	0x080339a2
 802b828:	e000e100 	.word	0xe000e100

0802b82c <HAL_SYSTICK_Config>:
           function <b>SysTick_Config</b> is not included. In this case, the file <b><i>device</i>.h</b>
           must contain a vendor-specific implementation of this function.
 */
__STATIC_INLINE uint32_t SysTick_Config(uint32_t ticks)
{
  if ((ticks - 1UL) > SysTick_LOAD_RELOAD_Msk)
 802b82c:	3801      	subs	r0, #1
 802b82e:	f1b0 7f80 	cmp.w	r0, #16777216	; 0x1000000
 802b832:	d20b      	bcs.n	802b84c <HAL_SYSTICK_Config+0x20>
  {
    return (1UL);                                                   /* Reload value impossible */
  }

  SysTick->LOAD  = (uint32_t)(ticks - 1UL);                         /* set reload register */
 802b834:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
    SCB->SHPR[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 802b838:	21f0      	movs	r1, #240	; 0xf0
 802b83a:	4a05      	ldr	r2, [pc, #20]	; (802b850 <HAL_SYSTICK_Config+0x24>)
  SysTick->LOAD  = (uint32_t)(ticks - 1UL);                         /* set reload register */
 802b83c:	6158      	str	r0, [r3, #20]
    SCB->SHPR[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 802b83e:	f882 1023 	strb.w	r1, [r2, #35]	; 0x23
  NVIC_SetPriority (SysTick_IRQn, (1UL << __NVIC_PRIO_BITS) - 1UL); /* set Priority for Systick Interrupt */
  SysTick->VAL   = 0UL;                                             /* Load the SysTick Counter Value */
 802b842:	2000      	movs	r0, #0
  SysTick->CTRL  = SysTick_CTRL_CLKSOURCE_Msk |
 802b844:	2207      	movs	r2, #7
  SysTick->VAL   = 0UL;                                             /* Load the SysTick Counter Value */
 802b846:	6198      	str	r0, [r3, #24]
  SysTick->CTRL  = SysTick_CTRL_CLKSOURCE_Msk |
 802b848:	611a      	str	r2, [r3, #16]
                   SysTick_CTRL_TICKINT_Msk   |
                   SysTick_CTRL_ENABLE_Msk;                         /* Enable SysTick IRQ and SysTick Timer */
  return (0UL);                                                     /* Function successful */
 802b84a:	4770      	bx	lr
    return (1UL);                                                   /* Reload value impossible */
 802b84c:	2001      	movs	r0, #1
  *                  - 1  Function failed.
  */
uint32_t HAL_SYSTICK_Config(uint32_t TicksNumb)
{
  return SysTick_Config(TicksNumb);
}
 802b84e:	4770      	bx	lr
 802b850:	e000ed00 	.word	0xe000ed00

0802b854 <HAL_NVIC_SetPendingIRQ>:
  if ((int32_t)(IRQn) >= 0)
 802b854:	2800      	cmp	r0, #0
 802b856:	db09      	blt.n	802b86c <HAL_NVIC_SetPendingIRQ+0x18>
    NVIC->ISPR[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 802b858:	2201      	movs	r2, #1
 802b85a:	0943      	lsrs	r3, r0, #5
 802b85c:	f000 001f 	and.w	r0, r0, #31
 802b860:	fa02 f000 	lsl.w	r0, r2, r0
 802b864:	4a02      	ldr	r2, [pc, #8]	; (802b870 <HAL_NVIC_SetPendingIRQ+0x1c>)
 802b866:	3340      	adds	r3, #64	; 0x40
 802b868:	f842 0023 	str.w	r0, [r2, r3, lsl #2]
  */
void HAL_NVIC_SetPendingIRQ(IRQn_Type IRQn)
{
  /* Set interrupt pending */
  NVIC_SetPendingIRQ(IRQn);
}
 802b86c:	4770      	bx	lr
 802b86e:	bf00      	nop
 802b870:	e000e100 	.word	0xe000e100

0802b874 <CRC_Handle_8>:
  * @param  pBuffer pointer to the input data buffer
  * @param  BufferLength input data buffer length
  * @retval uint32_t CRC (returned value LSBs for CRC shorter than 32 bits)
  */
static uint32_t CRC_Handle_8(CRC_HandleTypeDef *hcrc, uint8_t pBuffer[], uint32_t BufferLength)
{
 802b874:	b5f0      	push	{r4, r5, r6, r7, lr}
 802b876:	460c      	mov	r4, r1
 802b878:	f022 0503 	bic.w	r5, r2, #3
  /* Processing time optimization: 4 bytes are entered in a row with a single word write,
   * last bytes must be carefully fed to the CRC calculator to ensure a correct type
   * handling by the peripheral */
  for (i = 0U; i < (BufferLength / 4U); i++)
  {
    hcrc->Instance->DR = ((uint32_t)pBuffer[4U * i] << 24U) | \
 802b87c:	6806      	ldr	r6, [r0, #0]
  for (i = 0U; i < (BufferLength / 4U); i++)
 802b87e:	0897      	lsrs	r7, r2, #2
 802b880:	440d      	add	r5, r1
 802b882:	42a5      	cmp	r5, r4
 802b884:	d108      	bne.n	802b898 <CRC_Handle_8+0x24>
                         ((uint32_t)pBuffer[(4U * i) + 1U] << 16U) | \
                         ((uint32_t)pBuffer[(4U * i) + 2U] << 8U)  | \
                         (uint32_t)pBuffer[(4U * i) + 3U];
  }
  /* last bytes specific handling */
  if ((BufferLength % 4U) != 0U)
 802b886:	f012 0203 	ands.w	r2, r2, #3
 802b88a:	d01e      	beq.n	802b8ca <CRC_Handle_8+0x56>
  {
    if ((BufferLength % 4U) == 1U)
 802b88c:	2a01      	cmp	r2, #1
 802b88e:	d114      	bne.n	802b8ba <CRC_Handle_8+0x46>
    {
      *(__IO uint8_t *)(__IO void *)(&hcrc->Instance->DR) = pBuffer[4U * i];         /* Derogation MisraC2012 R.11.5 */
 802b890:	f811 3027 	ldrb.w	r3, [r1, r7, lsl #2]
    {
      data = ((uint16_t)(pBuffer[4U * i]) << 8U) | (uint16_t)pBuffer[(4U * i) + 1U];
      pReg = (__IO uint16_t *)(__IO void *)(&hcrc->Instance->DR);                    /* Derogation MisraC2012 R.11.5 */
      *pReg = data;

      *(__IO uint8_t *)(__IO void *)(&hcrc->Instance->DR) = pBuffer[(4U * i) + 2U];  /* Derogation MisraC2012 R.11.5 */
 802b894:	7033      	strb	r3, [r6, #0]
 802b896:	e018      	b.n	802b8ca <CRC_Handle_8+0x56>
                         ((uint32_t)pBuffer[(4U * i) + 1U] << 16U) | \
 802b898:	7863      	ldrb	r3, [r4, #1]
    hcrc->Instance->DR = ((uint32_t)pBuffer[4U * i] << 24U) | \
 802b89a:	f894 c000 	ldrb.w	ip, [r4]
                         ((uint32_t)pBuffer[(4U * i) + 1U] << 16U) | \
 802b89e:	041b      	lsls	r3, r3, #16
                         ((uint32_t)pBuffer[(4U * i) + 2U] << 8U)  | \
 802b8a0:	ea43 630c 	orr.w	r3, r3, ip, lsl #24
                         (uint32_t)pBuffer[(4U * i) + 3U];
 802b8a4:	f894 c003 	ldrb.w	ip, [r4, #3]
 802b8a8:	3404      	adds	r4, #4
                         ((uint32_t)pBuffer[(4U * i) + 2U] << 8U)  | \
 802b8aa:	ea43 030c 	orr.w	r3, r3, ip
 802b8ae:	f814 cc02 	ldrb.w	ip, [r4, #-2]
 802b8b2:	ea43 230c 	orr.w	r3, r3, ip, lsl #8
    hcrc->Instance->DR = ((uint32_t)pBuffer[4U * i] << 24U) | \
 802b8b6:	6033      	str	r3, [r6, #0]
  for (i = 0U; i < (BufferLength / 4U); i++)
 802b8b8:	e7e3      	b.n	802b882 <CRC_Handle_8+0xe>
      data = ((uint16_t)(pBuffer[4U * i]) << 8U) | (uint16_t)pBuffer[(4U * i) + 1U];
 802b8ba:	786b      	ldrb	r3, [r5, #1]
    if ((BufferLength % 4U) == 2U)
 802b8bc:	2a02      	cmp	r2, #2
      data = ((uint16_t)(pBuffer[4U * i]) << 8U) | (uint16_t)pBuffer[(4U * i) + 1U];
 802b8be:	f811 2027 	ldrb.w	r2, [r1, r7, lsl #2]
 802b8c2:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
      *pReg = data;
 802b8c6:	8033      	strh	r3, [r6, #0]
    if ((BufferLength % 4U) == 2U)
 802b8c8:	d102      	bne.n	802b8d0 <CRC_Handle_8+0x5c>
    }
  }

  /* Return the CRC computed value */
  return hcrc->Instance->DR;
 802b8ca:	6803      	ldr	r3, [r0, #0]
 802b8cc:	6818      	ldr	r0, [r3, #0]
}
 802b8ce:	bdf0      	pop	{r4, r5, r6, r7, pc}
      *(__IO uint8_t *)(__IO void *)(&hcrc->Instance->DR) = pBuffer[(4U * i) + 2U];  /* Derogation MisraC2012 R.11.5 */
 802b8d0:	78ab      	ldrb	r3, [r5, #2]
 802b8d2:	e7df      	b.n	802b894 <CRC_Handle_8+0x20>

0802b8d4 <CRC_Handle_16>:
  __IO uint16_t *pReg;

  /* Processing time optimization: 2 HalfWords are entered in a row with a single word write,
   * in case of odd length, last HalfWord must be carefully fed to the CRC calculator to ensure
   * a correct type handling by the peripheral */
  for (i = 0U; i < (BufferLength / 2U); i++)
 802b8d4:	2300      	movs	r3, #0
  {
    hcrc->Instance->DR = ((uint32_t)pBuffer[2U * i] << 16U) | (uint32_t)pBuffer[(2U * i) + 1U];
 802b8d6:	6800      	ldr	r0, [r0, #0]
{
 802b8d8:	b5f0      	push	{r4, r5, r6, r7, lr}
  for (i = 0U; i < (BufferLength / 2U); i++)
 802b8da:	0855      	lsrs	r5, r2, #1
    hcrc->Instance->DR = ((uint32_t)pBuffer[2U * i] << 16U) | (uint32_t)pBuffer[(2U * i) + 1U];
 802b8dc:	1c8e      	adds	r6, r1, #2
  for (i = 0U; i < (BufferLength / 2U); i++)
 802b8de:	429d      	cmp	r5, r3
 802b8e0:	d106      	bne.n	802b8f0 <CRC_Handle_16+0x1c>
  }
  if ((BufferLength % 2U) != 0U)
 802b8e2:	07d3      	lsls	r3, r2, #31
  {
    pReg = (__IO uint16_t *)(__IO void *)(&hcrc->Instance->DR);                 /* Derogation MisraC2012 R.11.5 */
    *pReg = pBuffer[2U * i];
 802b8e4:	bf44      	itt	mi
 802b8e6:	f831 3025 	ldrhmi.w	r3, [r1, r5, lsl #2]
 802b8ea:	8003      	strhmi	r3, [r0, #0]
  }

  /* Return the CRC computed value */
  return hcrc->Instance->DR;
 802b8ec:	6800      	ldr	r0, [r0, #0]
}
 802b8ee:	bdf0      	pop	{r4, r5, r6, r7, pc}
    hcrc->Instance->DR = ((uint32_t)pBuffer[2U * i] << 16U) | (uint32_t)pBuffer[(2U * i) + 1U];
 802b8f0:	f831 7023 	ldrh.w	r7, [r1, r3, lsl #2]
 802b8f4:	f836 4023 	ldrh.w	r4, [r6, r3, lsl #2]
  for (i = 0U; i < (BufferLength / 2U); i++)
 802b8f8:	3301      	adds	r3, #1
    hcrc->Instance->DR = ((uint32_t)pBuffer[2U * i] << 16U) | (uint32_t)pBuffer[(2U * i) + 1U];
 802b8fa:	ea44 4407 	orr.w	r4, r4, r7, lsl #16
 802b8fe:	6004      	str	r4, [r0, #0]
  for (i = 0U; i < (BufferLength / 2U); i++)
 802b900:	e7ed      	b.n	802b8de <CRC_Handle_16+0xa>
	...

0802b904 <HAL_CRC_Init>:
{
 802b904:	b510      	push	{r4, lr}
  if (hcrc == NULL)
 802b906:	4604      	mov	r4, r0
 802b908:	b908      	cbnz	r0, 802b90e <HAL_CRC_Init+0xa>
    return HAL_ERROR;
 802b90a:	2001      	movs	r0, #1
}
 802b90c:	bd10      	pop	{r4, pc}
  assert_param(IS_CRC_ALL_INSTANCE(hcrc->Instance));
 802b90e:	6802      	ldr	r2, [r0, #0]
 802b910:	4b31      	ldr	r3, [pc, #196]	; (802b9d8 <HAL_CRC_Init+0xd4>)
 802b912:	429a      	cmp	r2, r3
 802b914:	d003      	beq.n	802b91e <HAL_CRC_Init+0x1a>
 802b916:	2170      	movs	r1, #112	; 0x70
 802b918:	4830      	ldr	r0, [pc, #192]	; (802b9dc <HAL_CRC_Init+0xd8>)
 802b91a:	f7fa fc3f 	bl	802619c <assert_failed>
  if (hcrc->State == HAL_CRC_STATE_RESET)
 802b91e:	7f63      	ldrb	r3, [r4, #29]
 802b920:	f003 02ff 	and.w	r2, r3, #255	; 0xff
 802b924:	b91b      	cbnz	r3, 802b92e <HAL_CRC_Init+0x2a>
    HAL_CRC_MspInit(hcrc);
 802b926:	4620      	mov	r0, r4
    hcrc->Lock = HAL_UNLOCKED;
 802b928:	7722      	strb	r2, [r4, #28]
    HAL_CRC_MspInit(hcrc);
 802b92a:	f7fa fc85 	bl	8026238 <HAL_CRC_MspInit>
  hcrc->State = HAL_CRC_STATE_BUSY;
 802b92e:	2302      	movs	r3, #2
 802b930:	7763      	strb	r3, [r4, #29]
  assert_param(IS_DEFAULT_POLYNOMIAL(hcrc->Init.DefaultPolynomialUse));
 802b932:	7923      	ldrb	r3, [r4, #4]
 802b934:	2b01      	cmp	r3, #1
 802b936:	d903      	bls.n	802b940 <HAL_CRC_Init+0x3c>
 802b938:	217e      	movs	r1, #126	; 0x7e
 802b93a:	4828      	ldr	r0, [pc, #160]	; (802b9dc <HAL_CRC_Init+0xd8>)
 802b93c:	f7fa fc2e 	bl	802619c <assert_failed>
  if (hcrc->Init.DefaultPolynomialUse == DEFAULT_POLYNOMIAL_ENABLE)
 802b940:	7923      	ldrb	r3, [r4, #4]
 802b942:	2b00      	cmp	r3, #0
 802b944:	d13e      	bne.n	802b9c4 <HAL_CRC_Init+0xc0>
    WRITE_REG(hcrc->Instance->POL, DEFAULT_CRC32_POLY);
 802b946:	6823      	ldr	r3, [r4, #0]
 802b948:	4a25      	ldr	r2, [pc, #148]	; (802b9e0 <HAL_CRC_Init+0xdc>)
 802b94a:	615a      	str	r2, [r3, #20]
    MODIFY_REG(hcrc->Instance->CR, CRC_CR_POLYSIZE, CRC_POLYLENGTH_32B);
 802b94c:	689a      	ldr	r2, [r3, #8]
 802b94e:	f022 0218 	bic.w	r2, r2, #24
 802b952:	609a      	str	r2, [r3, #8]
  assert_param(IS_DEFAULT_INIT_VALUE(hcrc->Init.DefaultInitValueUse));
 802b954:	7963      	ldrb	r3, [r4, #5]
 802b956:	2b01      	cmp	r3, #1
 802b958:	d903      	bls.n	802b962 <HAL_CRC_Init+0x5e>
 802b95a:	2190      	movs	r1, #144	; 0x90
 802b95c:	481f      	ldr	r0, [pc, #124]	; (802b9dc <HAL_CRC_Init+0xd8>)
 802b95e:	f7fa fc1d 	bl	802619c <assert_failed>
  if (hcrc->Init.DefaultInitValueUse == DEFAULT_INIT_VALUE_ENABLE)
 802b962:	7962      	ldrb	r2, [r4, #5]
    WRITE_REG(hcrc->Instance->INIT, DEFAULT_CRC_INITVALUE);
 802b964:	6823      	ldr	r3, [r4, #0]
  if (hcrc->Init.DefaultInitValueUse == DEFAULT_INIT_VALUE_ENABLE)
 802b966:	2a00      	cmp	r2, #0
 802b968:	d134      	bne.n	802b9d4 <HAL_CRC_Init+0xd0>
    WRITE_REG(hcrc->Instance->INIT, DEFAULT_CRC_INITVALUE);
 802b96a:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
    WRITE_REG(hcrc->Instance->INIT, hcrc->Init.InitValue);
 802b96e:	611a      	str	r2, [r3, #16]
  assert_param(IS_CRC_INPUTDATA_INVERSION_MODE(hcrc->Init.InputDataInversionMode));
 802b970:	6963      	ldr	r3, [r4, #20]
 802b972:	f033 0360 	bics.w	r3, r3, #96	; 0x60
 802b976:	d003      	beq.n	802b980 <HAL_CRC_Init+0x7c>
 802b978:	219c      	movs	r1, #156	; 0x9c
 802b97a:	4818      	ldr	r0, [pc, #96]	; (802b9dc <HAL_CRC_Init+0xd8>)
 802b97c:	f7fa fc0e 	bl	802619c <assert_failed>
  MODIFY_REG(hcrc->Instance->CR, CRC_CR_REV_IN, hcrc->Init.InputDataInversionMode);
 802b980:	6822      	ldr	r2, [r4, #0]
 802b982:	6961      	ldr	r1, [r4, #20]
 802b984:	6893      	ldr	r3, [r2, #8]
 802b986:	f023 0360 	bic.w	r3, r3, #96	; 0x60
 802b98a:	430b      	orrs	r3, r1
 802b98c:	6093      	str	r3, [r2, #8]
  assert_param(IS_CRC_OUTPUTDATA_INVERSION_MODE(hcrc->Init.OutputDataInversionMode));
 802b98e:	69a3      	ldr	r3, [r4, #24]
 802b990:	f033 0380 	bics.w	r3, r3, #128	; 0x80
 802b994:	d003      	beq.n	802b99e <HAL_CRC_Init+0x9a>
 802b996:	21a0      	movs	r1, #160	; 0xa0
 802b998:	4810      	ldr	r0, [pc, #64]	; (802b9dc <HAL_CRC_Init+0xd8>)
 802b99a:	f7fa fbff 	bl	802619c <assert_failed>
  MODIFY_REG(hcrc->Instance->CR, CRC_CR_REV_OUT, hcrc->Init.OutputDataInversionMode);
 802b99e:	6822      	ldr	r2, [r4, #0]
 802b9a0:	69a1      	ldr	r1, [r4, #24]
 802b9a2:	6893      	ldr	r3, [r2, #8]
 802b9a4:	f023 0380 	bic.w	r3, r3, #128	; 0x80
 802b9a8:	430b      	orrs	r3, r1
 802b9aa:	6093      	str	r3, [r2, #8]
  assert_param(IS_CRC_INPUTDATA_FORMAT(hcrc->InputDataFormat));
 802b9ac:	6a23      	ldr	r3, [r4, #32]
 802b9ae:	3b01      	subs	r3, #1
 802b9b0:	2b02      	cmp	r3, #2
 802b9b2:	d903      	bls.n	802b9bc <HAL_CRC_Init+0xb8>
 802b9b4:	21a5      	movs	r1, #165	; 0xa5
 802b9b6:	4809      	ldr	r0, [pc, #36]	; (802b9dc <HAL_CRC_Init+0xd8>)
 802b9b8:	f7fa fbf0 	bl	802619c <assert_failed>
  hcrc->State = HAL_CRC_STATE_READY;
 802b9bc:	2301      	movs	r3, #1
  return HAL_OK;
 802b9be:	2000      	movs	r0, #0
  hcrc->State = HAL_CRC_STATE_READY;
 802b9c0:	7763      	strb	r3, [r4, #29]
  return HAL_OK;
 802b9c2:	e7a3      	b.n	802b90c <HAL_CRC_Init+0x8>
    if (HAL_CRCEx_Polynomial_Set(hcrc, hcrc->Init.GeneratingPolynomial, hcrc->Init.CRCLength) != HAL_OK)
 802b9c4:	4620      	mov	r0, r4
 802b9c6:	e9d4 1202 	ldrd	r1, r2, [r4, #8]
 802b9ca:	f000 f84f 	bl	802ba6c <HAL_CRCEx_Polynomial_Set>
 802b9ce:	2800      	cmp	r0, #0
 802b9d0:	d0c0      	beq.n	802b954 <HAL_CRC_Init+0x50>
 802b9d2:	e79a      	b.n	802b90a <HAL_CRC_Init+0x6>
    WRITE_REG(hcrc->Instance->INIT, hcrc->Init.InitValue);
 802b9d4:	6922      	ldr	r2, [r4, #16]
 802b9d6:	e7ca      	b.n	802b96e <HAL_CRC_Init+0x6a>
 802b9d8:	40023000 	.word	0x40023000
 802b9dc:	08033a13 	.word	0x08033a13
 802b9e0:	04c11db7 	.word	0x04c11db7

0802b9e4 <HAL_CRC_Accumulate>:
{
 802b9e4:	b570      	push	{r4, r5, r6, lr}
  hcrc->State = HAL_CRC_STATE_BUSY;
 802b9e6:	2602      	movs	r6, #2
 802b9e8:	7746      	strb	r6, [r0, #29]
  switch (hcrc->InputDataFormat)
 802b9ea:	6a06      	ldr	r6, [r0, #32]
{
 802b9ec:	4604      	mov	r4, r0
  switch (hcrc->InputDataFormat)
 802b9ee:	2e02      	cmp	r6, #2
 802b9f0:	d015      	beq.n	802ba1e <HAL_CRC_Accumulate+0x3a>
 802b9f2:	2e03      	cmp	r6, #3
 802b9f4:	d005      	beq.n	802ba02 <HAL_CRC_Accumulate+0x1e>
 802b9f6:	2e01      	cmp	r6, #1
 802b9f8:	d00e      	beq.n	802ba18 <HAL_CRC_Accumulate+0x34>
 802b9fa:	2000      	movs	r0, #0
  hcrc->State = HAL_CRC_STATE_READY;
 802b9fc:	2301      	movs	r3, #1
 802b9fe:	7763      	strb	r3, [r4, #29]
}
 802ba00:	bd70      	pop	{r4, r5, r6, pc}
        hcrc->Instance->DR = pBuffer[index];
 802ba02:	6803      	ldr	r3, [r0, #0]
 802ba04:	eb01 0582 	add.w	r5, r1, r2, lsl #2
      for (index = 0U; index < BufferLength; index++)
 802ba08:	42a9      	cmp	r1, r5
 802ba0a:	d101      	bne.n	802ba10 <HAL_CRC_Accumulate+0x2c>
      temp = hcrc->Instance->DR;
 802ba0c:	6818      	ldr	r0, [r3, #0]
      break;
 802ba0e:	e7f5      	b.n	802b9fc <HAL_CRC_Accumulate+0x18>
        hcrc->Instance->DR = pBuffer[index];
 802ba10:	f851 2b04 	ldr.w	r2, [r1], #4
 802ba14:	601a      	str	r2, [r3, #0]
      for (index = 0U; index < BufferLength; index++)
 802ba16:	e7f7      	b.n	802ba08 <HAL_CRC_Accumulate+0x24>
      temp = CRC_Handle_8(hcrc, (uint8_t *)pBuffer, BufferLength);
 802ba18:	f7ff ff2c 	bl	802b874 <CRC_Handle_8>
      break;
 802ba1c:	e7ee      	b.n	802b9fc <HAL_CRC_Accumulate+0x18>
      temp = CRC_Handle_16(hcrc, (uint16_t *)(void *)pBuffer, BufferLength);    /* Derogation MisraC2012 R.11.5 */
 802ba1e:	f7ff ff59 	bl	802b8d4 <CRC_Handle_16>
      break;
 802ba22:	e7eb      	b.n	802b9fc <HAL_CRC_Accumulate+0x18>

0802ba24 <HAL_CRC_Calculate>:
{
 802ba24:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
  hcrc->State = HAL_CRC_STATE_BUSY;
 802ba26:	2602      	movs	r6, #2
 802ba28:	7746      	strb	r6, [r0, #29]
  __HAL_CRC_DR_RESET(hcrc);
 802ba2a:	6806      	ldr	r6, [r0, #0]
{
 802ba2c:	4604      	mov	r4, r0
  __HAL_CRC_DR_RESET(hcrc);
 802ba2e:	68b7      	ldr	r7, [r6, #8]
 802ba30:	f047 0701 	orr.w	r7, r7, #1
 802ba34:	60b7      	str	r7, [r6, #8]
  switch (hcrc->InputDataFormat)
 802ba36:	6a07      	ldr	r7, [r0, #32]
 802ba38:	2f02      	cmp	r7, #2
 802ba3a:	d014      	beq.n	802ba66 <HAL_CRC_Calculate+0x42>
 802ba3c:	2f03      	cmp	r7, #3
 802ba3e:	d005      	beq.n	802ba4c <HAL_CRC_Calculate+0x28>
 802ba40:	2f01      	cmp	r7, #1
 802ba42:	d00d      	beq.n	802ba60 <HAL_CRC_Calculate+0x3c>
 802ba44:	2000      	movs	r0, #0
  hcrc->State = HAL_CRC_STATE_READY;
 802ba46:	2301      	movs	r3, #1
 802ba48:	7763      	strb	r3, [r4, #29]
}
 802ba4a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 802ba4c:	eb01 0582 	add.w	r5, r1, r2, lsl #2
      for (index = 0U; index < BufferLength; index++)
 802ba50:	42a9      	cmp	r1, r5
 802ba52:	d101      	bne.n	802ba58 <HAL_CRC_Calculate+0x34>
      temp = hcrc->Instance->DR;
 802ba54:	6830      	ldr	r0, [r6, #0]
      break;
 802ba56:	e7f6      	b.n	802ba46 <HAL_CRC_Calculate+0x22>
        hcrc->Instance->DR = pBuffer[index];
 802ba58:	f851 3b04 	ldr.w	r3, [r1], #4
 802ba5c:	6033      	str	r3, [r6, #0]
      for (index = 0U; index < BufferLength; index++)
 802ba5e:	e7f7      	b.n	802ba50 <HAL_CRC_Calculate+0x2c>
      temp = CRC_Handle_8(hcrc, (uint8_t *)pBuffer, BufferLength);
 802ba60:	f7ff ff08 	bl	802b874 <CRC_Handle_8>
      break;
 802ba64:	e7ef      	b.n	802ba46 <HAL_CRC_Calculate+0x22>
      temp = CRC_Handle_16(hcrc, (uint16_t *)(void *)pBuffer, BufferLength);    /* Derogation MisraC2012 R.11.5 */
 802ba66:	f7ff ff35 	bl	802b8d4 <CRC_Handle_16>
      break;
 802ba6a:	e7ec      	b.n	802ba46 <HAL_CRC_Calculate+0x22>

0802ba6c <HAL_CRCEx_Polynomial_Set>:
{
  HAL_StatusTypeDef status = HAL_OK;
  uint32_t msb = 31U; /* polynomial degree is 32 at most, so msb is initialized to max value */

  /* Check the parameters */
  assert_param(IS_CRC_POL_LENGTH(PolyLength));
 802ba6c:	f032 0318 	bics.w	r3, r2, #24
{
 802ba70:	b570      	push	{r4, r5, r6, lr}
 802ba72:	4606      	mov	r6, r0
 802ba74:	460d      	mov	r5, r1
 802ba76:	4614      	mov	r4, r2
  assert_param(IS_CRC_POL_LENGTH(PolyLength));
 802ba78:	d003      	beq.n	802ba82 <HAL_CRCEx_Polynomial_Set+0x16>
 802ba7a:	215f      	movs	r1, #95	; 0x5f
 802ba7c:	4813      	ldr	r0, [pc, #76]	; (802bacc <HAL_CRCEx_Polynomial_Set+0x60>)
 802ba7e:	f7fa fb8d 	bl	802619c <assert_failed>

  /* Ensure that the generating polynomial is odd */
  if ((Pol & (uint32_t)(0x1U)) ==  0U)
 802ba82:	07e9      	lsls	r1, r5, #31
 802ba84:	d50c      	bpl.n	802baa0 <HAL_CRCEx_Polynomial_Set+0x34>
  uint32_t msb = 31U; /* polynomial degree is 32 at most, so msb is initialized to max value */
 802ba86:	231f      	movs	r3, #31
     * definition. HAL_ERROR is reported if Pol degree is
     * larger than that indicated by PolyLength.
     * Look for MSB position: msb will contain the degree of
     *  the second to the largest polynomial member. E.g., for
     *  X^7 + X^6 + X^5 + X^2 + 1, msb = 6. */
    while ((msb-- > 0U) && ((Pol & ((uint32_t)(0x1U) << (msb & 0x1FU))) == 0U))
 802ba88:	3b01      	subs	r3, #1
 802ba8a:	d31c      	bcc.n	802bac6 <HAL_CRCEx_Polynomial_Set+0x5a>
 802ba8c:	fa25 f203 	lsr.w	r2, r5, r3
 802ba90:	07d2      	lsls	r2, r2, #31
 802ba92:	d5f9      	bpl.n	802ba88 <HAL_CRCEx_Polynomial_Set+0x1c>
    {
    }

    switch (PolyLength)
 802ba94:	2c10      	cmp	r4, #16
 802ba96:	d012      	beq.n	802babe <HAL_CRCEx_Polynomial_Set+0x52>
 802ba98:	d804      	bhi.n	802baa4 <HAL_CRCEx_Polynomial_Set+0x38>
 802ba9a:	b13c      	cbz	r4, 802baac <HAL_CRCEx_Polynomial_Set+0x40>
 802ba9c:	2c08      	cmp	r4, #8
 802ba9e:	d010      	beq.n	802bac2 <HAL_CRCEx_Polynomial_Set+0x56>
    status =  HAL_ERROR;
 802baa0:	2001      	movs	r0, #1

    /* set generating polynomial size */
    MODIFY_REG(hcrc->Instance->CR, CRC_CR_POLYSIZE, PolyLength);
  }
  /* Return function status */
  return status;
 802baa2:	e00b      	b.n	802babc <HAL_CRCEx_Polynomial_Set+0x50>
    switch (PolyLength)
 802baa4:	2c18      	cmp	r4, #24
 802baa6:	d1fb      	bne.n	802baa0 <HAL_CRCEx_Polynomial_Set+0x34>
        if (msb >= HAL_CRC_LENGTH_7B)
 802baa8:	2b06      	cmp	r3, #6
        if (msb >= HAL_CRC_LENGTH_16B)
 802baaa:	d8f9      	bhi.n	802baa0 <HAL_CRCEx_Polynomial_Set+0x34>
    MODIFY_REG(hcrc->Instance->CR, CRC_CR_POLYSIZE, PolyLength);
 802baac:	2000      	movs	r0, #0
    WRITE_REG(hcrc->Instance->POL, Pol);
 802baae:	6833      	ldr	r3, [r6, #0]
 802bab0:	615d      	str	r5, [r3, #20]
    MODIFY_REG(hcrc->Instance->CR, CRC_CR_POLYSIZE, PolyLength);
 802bab2:	689a      	ldr	r2, [r3, #8]
 802bab4:	f022 0218 	bic.w	r2, r2, #24
 802bab8:	4314      	orrs	r4, r2
 802baba:	609c      	str	r4, [r3, #8]
}
 802babc:	bd70      	pop	{r4, r5, r6, pc}
        if (msb >= HAL_CRC_LENGTH_8B)
 802babe:	2b07      	cmp	r3, #7
 802bac0:	e7f3      	b.n	802baaa <HAL_CRCEx_Polynomial_Set+0x3e>
        if (msb >= HAL_CRC_LENGTH_16B)
 802bac2:	2b0f      	cmp	r3, #15
 802bac4:	e7f1      	b.n	802baaa <HAL_CRCEx_Polynomial_Set+0x3e>
    switch (PolyLength)
 802bac6:	2c00      	cmp	r4, #0
 802bac8:	d1ea      	bne.n	802baa0 <HAL_CRCEx_Polynomial_Set+0x34>
 802baca:	e7ef      	b.n	802baac <HAL_CRCEx_Polynomial_Set+0x40>
 802bacc:	08033a81 	.word	0x08033a81

0802bad0 <HAL_DMA_Init>:
  * @param  hdma : Pointer to a DMA_HandleTypeDef structure that contains the configuration information for the
  *                specified DMA Channel.
  * @retval HAL status.
  */
HAL_StatusTypeDef HAL_DMA_Init(DMA_HandleTypeDef *const hdma)
{
 802bad0:	b570      	push	{r4, r5, r6, lr}
 802bad2:	4604      	mov	r4, r0
  /* Get tick number */
  uint32_t tickstart = HAL_GetTick();
 802bad4:	f7ff faac 	bl	802b030 <HAL_GetTick>
 802bad8:	4606      	mov	r6, r0

  /* Check the DMA peripheral handle parameter */
  if (hdma == NULL)
 802bada:	2c00      	cmp	r4, #0
 802badc:	f000 813e 	beq.w	802bd5c <HAL_DMA_Init+0x28c>
  {
    return HAL_ERROR;
  }

  /* Check the parameters */
  assert_param(IS_DMA_ALL_INSTANCE(hdma->Instance));
 802bae0:	6823      	ldr	r3, [r4, #0]
 802bae2:	4da2      	ldr	r5, [pc, #648]	; (802bd6c <HAL_DMA_Init+0x29c>)
 802bae4:	42ab      	cmp	r3, r5
 802bae6:	d018      	beq.n	802bb1a <HAL_DMA_Init+0x4a>
 802bae8:	4aa1      	ldr	r2, [pc, #644]	; (802bd70 <HAL_DMA_Init+0x2a0>)
 802baea:	4293      	cmp	r3, r2
 802baec:	d015      	beq.n	802bb1a <HAL_DMA_Init+0x4a>
 802baee:	3280      	adds	r2, #128	; 0x80
 802baf0:	4293      	cmp	r3, r2
 802baf2:	d012      	beq.n	802bb1a <HAL_DMA_Init+0x4a>
 802baf4:	3280      	adds	r2, #128	; 0x80
 802baf6:	4293      	cmp	r3, r2
 802baf8:	d00f      	beq.n	802bb1a <HAL_DMA_Init+0x4a>
 802bafa:	3280      	adds	r2, #128	; 0x80
 802bafc:	4293      	cmp	r3, r2
 802bafe:	d00c      	beq.n	802bb1a <HAL_DMA_Init+0x4a>
 802bb00:	3280      	adds	r2, #128	; 0x80
 802bb02:	4293      	cmp	r3, r2
 802bb04:	d009      	beq.n	802bb1a <HAL_DMA_Init+0x4a>
 802bb06:	3280      	adds	r2, #128	; 0x80
 802bb08:	4293      	cmp	r3, r2
 802bb0a:	d006      	beq.n	802bb1a <HAL_DMA_Init+0x4a>
 802bb0c:	3280      	adds	r2, #128	; 0x80
 802bb0e:	4293      	cmp	r3, r2
 802bb10:	d003      	beq.n	802bb1a <HAL_DMA_Init+0x4a>
 802bb12:	21fc      	movs	r1, #252	; 0xfc
 802bb14:	4897      	ldr	r0, [pc, #604]	; (802bd74 <HAL_DMA_Init+0x2a4>)
 802bb16:	f7fa fb41 	bl	802619c <assert_failed>
  assert_param(IS_DMA_DIRECTION(hdma->Init.Direction));
 802bb1a:	68e3      	ldr	r3, [r4, #12]
 802bb1c:	f433 7200 	bics.w	r2, r3, #512	; 0x200
 802bb20:	d006      	beq.n	802bb30 <HAL_DMA_Init+0x60>
 802bb22:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 802bb26:	d003      	beq.n	802bb30 <HAL_DMA_Init+0x60>
 802bb28:	21fd      	movs	r1, #253	; 0xfd
 802bb2a:	4892      	ldr	r0, [pc, #584]	; (802bd74 <HAL_DMA_Init+0x2a4>)
 802bb2c:	f7fa fb36 	bl	802619c <assert_failed>
  if ((hdma->Init.Direction == DMA_MEMORY_TO_PERIPH) || (hdma->Init.Direction == DMA_MEMORY_TO_MEMORY))
 802bb30:	68e3      	ldr	r3, [r4, #12]
 802bb32:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 802bb36:	d002      	beq.n	802bb3e <HAL_DMA_Init+0x6e>
 802bb38:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 802bb3c:	d10a      	bne.n	802bb54 <HAL_DMA_Init+0x84>
  {
    assert_param(IS_DMA_REQUEST(hdma->Init.Request));
 802bb3e:	6863      	ldr	r3, [r4, #4]
 802bb40:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 802bb44:	d006      	beq.n	802bb54 <HAL_DMA_Init+0x84>
 802bb46:	2b33      	cmp	r3, #51	; 0x33
 802bb48:	d904      	bls.n	802bb54 <HAL_DMA_Init+0x84>
 802bb4a:	f44f 7180 	mov.w	r1, #256	; 0x100
 802bb4e:	4889      	ldr	r0, [pc, #548]	; (802bd74 <HAL_DMA_Init+0x2a4>)
 802bb50:	f7fa fb24 	bl	802619c <assert_failed>
  }
  assert_param(IS_DMA_BLOCK_HW_REQUEST(hdma->Init.BlkHWRequest));
 802bb54:	68a3      	ldr	r3, [r4, #8]
 802bb56:	f433 6300 	bics.w	r3, r3, #2048	; 0x800
 802bb5a:	d004      	beq.n	802bb66 <HAL_DMA_Init+0x96>
 802bb5c:	f44f 7181 	mov.w	r1, #258	; 0x102
 802bb60:	4884      	ldr	r0, [pc, #528]	; (802bd74 <HAL_DMA_Init+0x2a4>)
 802bb62:	f7fa fb1b 	bl	802619c <assert_failed>
  assert_param(IS_DMA_SOURCE_INC(hdma->Init.SrcInc));
 802bb66:	6923      	ldr	r3, [r4, #16]
 802bb68:	f033 0308 	bics.w	r3, r3, #8
 802bb6c:	d004      	beq.n	802bb78 <HAL_DMA_Init+0xa8>
 802bb6e:	f240 1103 	movw	r1, #259	; 0x103
 802bb72:	4880      	ldr	r0, [pc, #512]	; (802bd74 <HAL_DMA_Init+0x2a4>)
 802bb74:	f7fa fb12 	bl	802619c <assert_failed>
  assert_param(IS_DMA_DESTINATION_INC(hdma->Init.DestInc));
 802bb78:	6963      	ldr	r3, [r4, #20]
 802bb7a:	f433 2300 	bics.w	r3, r3, #524288	; 0x80000
 802bb7e:	d004      	beq.n	802bb8a <HAL_DMA_Init+0xba>
 802bb80:	f44f 7182 	mov.w	r1, #260	; 0x104
 802bb84:	487b      	ldr	r0, [pc, #492]	; (802bd74 <HAL_DMA_Init+0x2a4>)
 802bb86:	f7fa fb09 	bl	802619c <assert_failed>
  assert_param(IS_DMA_SOURCE_DATA_WIDTH(hdma->Init.SrcDataWidth));
 802bb8a:	69a3      	ldr	r3, [r4, #24]
 802bb8c:	2b02      	cmp	r3, #2
 802bb8e:	d904      	bls.n	802bb9a <HAL_DMA_Init+0xca>
 802bb90:	f240 1105 	movw	r1, #261	; 0x105
 802bb94:	4877      	ldr	r0, [pc, #476]	; (802bd74 <HAL_DMA_Init+0x2a4>)
 802bb96:	f7fa fb01 	bl	802619c <assert_failed>
  assert_param(IS_DMA_DESTINATION_DATA_WIDTH(hdma->Init.DestDataWidth));
 802bb9a:	69e3      	ldr	r3, [r4, #28]
 802bb9c:	f433 3280 	bics.w	r2, r3, #65536	; 0x10000
 802bba0:	d007      	beq.n	802bbb2 <HAL_DMA_Init+0xe2>
 802bba2:	f5b3 3f00 	cmp.w	r3, #131072	; 0x20000
 802bba6:	d004      	beq.n	802bbb2 <HAL_DMA_Init+0xe2>
 802bba8:	f44f 7183 	mov.w	r1, #262	; 0x106
 802bbac:	4871      	ldr	r0, [pc, #452]	; (802bd74 <HAL_DMA_Init+0x2a4>)
 802bbae:	f7fa faf5 	bl	802619c <assert_failed>
  assert_param(IS_DMA_PRIORITY(hdma->Init.Priority));
 802bbb2:	6a23      	ldr	r3, [r4, #32]
 802bbb4:	f433 0340 	bics.w	r3, r3, #12582912	; 0xc00000
 802bbb8:	d004      	beq.n	802bbc4 <HAL_DMA_Init+0xf4>
 802bbba:	f240 1107 	movw	r1, #263	; 0x107
 802bbbe:	486d      	ldr	r0, [pc, #436]	; (802bd74 <HAL_DMA_Init+0x2a4>)
 802bbc0:	f7fa faec 	bl	802619c <assert_failed>
  assert_param(IS_DMA_TCEM_EVENT_MODE(hdma->Init.TransferEventMode));
 802bbc4:	6b23      	ldr	r3, [r4, #48]	; 0x30
 802bbc6:	f033 4200 	bics.w	r2, r3, #2147483648	; 0x80000000
 802bbca:	d007      	beq.n	802bbdc <HAL_DMA_Init+0x10c>
 802bbcc:	f1b3 4f40 	cmp.w	r3, #3221225472	; 0xc0000000
 802bbd0:	d004      	beq.n	802bbdc <HAL_DMA_Init+0x10c>
 802bbd2:	f44f 7184 	mov.w	r1, #264	; 0x108
 802bbd6:	4867      	ldr	r0, [pc, #412]	; (802bd74 <HAL_DMA_Init+0x2a4>)
 802bbd8:	f7fa fae0 	bl	802619c <assert_failed>
  assert_param(IS_DMA_MODE(hdma->Init.Mode));
 802bbdc:	6b63      	ldr	r3, [r4, #52]	; 0x34
 802bbde:	b123      	cbz	r3, 802bbea <HAL_DMA_Init+0x11a>
 802bbe0:	f240 1109 	movw	r1, #265	; 0x109
 802bbe4:	4863      	ldr	r0, [pc, #396]	; (802bd74 <HAL_DMA_Init+0x2a4>)
 802bbe6:	f7fa fad9 	bl	802619c <assert_failed>
  /* Check DMA channel instance */
  if (IS_GPDMA_INSTANCE(hdma->Instance) != 0U)
 802bbea:	6823      	ldr	r3, [r4, #0]
 802bbec:	42ab      	cmp	r3, r5
 802bbee:	d014      	beq.n	802bc1a <HAL_DMA_Init+0x14a>
 802bbf0:	4a5f      	ldr	r2, [pc, #380]	; (802bd70 <HAL_DMA_Init+0x2a0>)
 802bbf2:	4293      	cmp	r3, r2
 802bbf4:	d011      	beq.n	802bc1a <HAL_DMA_Init+0x14a>
 802bbf6:	3280      	adds	r2, #128	; 0x80
 802bbf8:	4293      	cmp	r3, r2
 802bbfa:	d00e      	beq.n	802bc1a <HAL_DMA_Init+0x14a>
 802bbfc:	3280      	adds	r2, #128	; 0x80
 802bbfe:	4293      	cmp	r3, r2
 802bc00:	d00b      	beq.n	802bc1a <HAL_DMA_Init+0x14a>
 802bc02:	3280      	adds	r2, #128	; 0x80
 802bc04:	4293      	cmp	r3, r2
 802bc06:	d008      	beq.n	802bc1a <HAL_DMA_Init+0x14a>
 802bc08:	3280      	adds	r2, #128	; 0x80
 802bc0a:	4293      	cmp	r3, r2
 802bc0c:	d005      	beq.n	802bc1a <HAL_DMA_Init+0x14a>
 802bc0e:	3280      	adds	r2, #128	; 0x80
 802bc10:	4293      	cmp	r3, r2
 802bc12:	d002      	beq.n	802bc1a <HAL_DMA_Init+0x14a>
 802bc14:	3280      	adds	r2, #128	; 0x80
 802bc16:	4293      	cmp	r3, r2
 802bc18:	d11a      	bne.n	802bc50 <HAL_DMA_Init+0x180>
  {
    assert_param(IS_DMA_BURST_LENGTH(hdma->Init.SrcBurstLength));
 802bc1a:	6a63      	ldr	r3, [r4, #36]	; 0x24
 802bc1c:	3b01      	subs	r3, #1
 802bc1e:	2b3f      	cmp	r3, #63	; 0x3f
 802bc20:	d904      	bls.n	802bc2c <HAL_DMA_Init+0x15c>
 802bc22:	f240 110d 	movw	r1, #269	; 0x10d
 802bc26:	4853      	ldr	r0, [pc, #332]	; (802bd74 <HAL_DMA_Init+0x2a4>)
 802bc28:	f7fa fab8 	bl	802619c <assert_failed>
    assert_param(IS_DMA_BURST_LENGTH(hdma->Init.DestBurstLength));
 802bc2c:	6aa3      	ldr	r3, [r4, #40]	; 0x28
 802bc2e:	3b01      	subs	r3, #1
 802bc30:	2b3f      	cmp	r3, #63	; 0x3f
 802bc32:	d904      	bls.n	802bc3e <HAL_DMA_Init+0x16e>
 802bc34:	f44f 7187 	mov.w	r1, #270	; 0x10e
 802bc38:	484e      	ldr	r0, [pc, #312]	; (802bd74 <HAL_DMA_Init+0x2a4>)
 802bc3a:	f7fa faaf 	bl	802619c <assert_failed>
    assert_param(IS_DMA_TRANSFER_ALLOCATED_PORT(hdma->Init.TransferAllocatedPort));
 802bc3e:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 802bc40:	f033 2340 	bics.w	r3, r3, #1073758208	; 0x40004000
 802bc44:	d004      	beq.n	802bc50 <HAL_DMA_Init+0x180>
 802bc46:	f240 110f 	movw	r1, #271	; 0x10f
 802bc4a:	484a      	ldr	r0, [pc, #296]	; (802bd74 <HAL_DMA_Init+0x2a4>)
 802bc4c:	f7fa faa6 	bl	802619c <assert_failed>
  }

  /* Allocate lock resource */
  __HAL_UNLOCK(hdma);
 802bc50:	2300      	movs	r3, #0
 802bc52:	f884 304c 	strb.w	r3, [r4, #76]	; 0x4c

  /* Update the DMA channel state */
  hdma->State = HAL_DMA_STATE_BUSY;
 802bc56:	2302      	movs	r3, #2

  /* Disable the DMA channel */
  __HAL_DMA_DISABLE(hdma);
 802bc58:	6822      	ldr	r2, [r4, #0]
  hdma->State = HAL_DMA_STATE_BUSY;
 802bc5a:	f884 3054 	strb.w	r3, [r4, #84]	; 0x54
  __HAL_DMA_DISABLE(hdma);
 802bc5e:	6953      	ldr	r3, [r2, #20]
 802bc60:	f043 0306 	orr.w	r3, r3, #6
 802bc64:	6153      	str	r3, [r2, #20]

  /* Check if the DMA channel is effectively disabled */
  while ((hdma->Instance->CCR & DMA_CCR_EN) != 0U)
 802bc66:	6823      	ldr	r3, [r4, #0]
 802bc68:	695a      	ldr	r2, [r3, #20]
 802bc6a:	07d2      	lsls	r2, r2, #31
 802bc6c:	d46c      	bmi.n	802bd48 <HAL_DMA_Init+0x278>

  /* Prepare DMA Channel Control Register (CCR) value *****************************************************************/
  tmpreg = hdma->Init.Priority;

  /* Write DMA Channel Control Register (CCR) */
  MODIFY_REG(hdma->Instance->CCR, DMA_CCR_PRIO | DMA_CCR_LAP | DMA_CCR_LSM, tmpreg);
 802bc6e:	695a      	ldr	r2, [r3, #20]
 802bc70:	6a21      	ldr	r1, [r4, #32]
 802bc72:	f422 0243 	bic.w	r2, r2, #12779520	; 0xc30000
 802bc76:	430a      	orrs	r2, r1
 802bc78:	615a      	str	r2, [r3, #20]

  /* Prepare DMA Channel Transfer Register (CTR1) value ***************************************************************/
  tmpreg = hdma->Init.DestInc | hdma->Init.DestDataWidth | hdma->Init.SrcInc | hdma->Init.SrcDataWidth;
 802bc7a:	69e1      	ldr	r1, [r4, #28]
 802bc7c:	6962      	ldr	r2, [r4, #20]

  /* Add parameters specific to GPDMA */
  if (IS_GPDMA_INSTANCE(hdma->Instance) != 0U)
 802bc7e:	42ab      	cmp	r3, r5
  tmpreg = hdma->Init.DestInc | hdma->Init.DestDataWidth | hdma->Init.SrcInc | hdma->Init.SrcDataWidth;
 802bc80:	ea42 0201 	orr.w	r2, r2, r1
 802bc84:	6921      	ldr	r1, [r4, #16]
 802bc86:	ea42 0201 	orr.w	r2, r2, r1
 802bc8a:	69a1      	ldr	r1, [r4, #24]
 802bc8c:	ea42 0201 	orr.w	r2, r2, r1
  if (IS_GPDMA_INSTANCE(hdma->Instance) != 0U)
 802bc90:	d014      	beq.n	802bcbc <HAL_DMA_Init+0x1ec>
 802bc92:	4937      	ldr	r1, [pc, #220]	; (802bd70 <HAL_DMA_Init+0x2a0>)
 802bc94:	428b      	cmp	r3, r1
 802bc96:	d011      	beq.n	802bcbc <HAL_DMA_Init+0x1ec>
 802bc98:	3180      	adds	r1, #128	; 0x80
 802bc9a:	428b      	cmp	r3, r1
 802bc9c:	d00e      	beq.n	802bcbc <HAL_DMA_Init+0x1ec>
 802bc9e:	3180      	adds	r1, #128	; 0x80
 802bca0:	428b      	cmp	r3, r1
 802bca2:	d00b      	beq.n	802bcbc <HAL_DMA_Init+0x1ec>
 802bca4:	3180      	adds	r1, #128	; 0x80
 802bca6:	428b      	cmp	r3, r1
 802bca8:	d008      	beq.n	802bcbc <HAL_DMA_Init+0x1ec>
 802bcaa:	3180      	adds	r1, #128	; 0x80
 802bcac:	428b      	cmp	r3, r1
 802bcae:	d005      	beq.n	802bcbc <HAL_DMA_Init+0x1ec>
 802bcb0:	3180      	adds	r1, #128	; 0x80
 802bcb2:	428b      	cmp	r3, r1
 802bcb4:	d002      	beq.n	802bcbc <HAL_DMA_Init+0x1ec>
 802bcb6:	3180      	adds	r1, #128	; 0x80
 802bcb8:	428b      	cmp	r3, r1
 802bcba:	d10d      	bne.n	802bcd8 <HAL_DMA_Init+0x208>
  {
    tmpreg |= (hdma->Init.TransferAllocatedPort                                             |
               (((hdma->Init.DestBurstLength - 1U) << DMA_CTR1_DBL_1_Pos) & DMA_CTR1_DBL_1) |
 802bcbc:	6aa1      	ldr	r1, [r4, #40]	; 0x28
 802bcbe:	3901      	subs	r1, #1
 802bcc0:	0509      	lsls	r1, r1, #20
 802bcc2:	f001 717c 	and.w	r1, r1, #66060288	; 0x3f00000
 802bcc6:	430a      	orrs	r2, r1
 802bcc8:	6ae1      	ldr	r1, [r4, #44]	; 0x2c
 802bcca:	4311      	orrs	r1, r2
               (((hdma->Init.SrcBurstLength - 1U) << DMA_CTR1_SBL_1_Pos) & DMA_CTR1_SBL_1));
 802bccc:	6a62      	ldr	r2, [r4, #36]	; 0x24
 802bcce:	3a01      	subs	r2, #1
 802bcd0:	0112      	lsls	r2, r2, #4
 802bcd2:	f402 727c 	and.w	r2, r2, #1008	; 0x3f0
    tmpreg |= (hdma->Init.TransferAllocatedPort                                             |
 802bcd6:	430a      	orrs	r2, r1
  }

  /* Write DMA Channel Transfer Register 1 (CTR1) */
#if defined (DMA_CTR1_SSEC)
  MODIFY_REG(hdma->Instance->CTR1, ~(DMA_CTR1_SSEC | DMA_CTR1_DSEC), tmpreg);
 802bcd8:	6c19      	ldr	r1, [r3, #64]	; 0x40
 802bcda:	f001 2180 	and.w	r1, r1, #2147516416	; 0x80008000
 802bcde:	430a      	orrs	r2, r1
 802bce0:	641a      	str	r2, [r3, #64]	; 0x40
#else
  WRITE_REG(hdma->Instance->CTR1, tmpreg);
#endif /* defined (DMA_CTR1_SSEC) */

  /* Prepare DMA Channel Transfer Register 2 (CTR2) value *************************************************************/
  tmpreg = hdma->Init.BlkHWRequest | (hdma->Init.Request & DMA_CTR2_REQSEL) | hdma->Init.TransferEventMode;
 802bce2:	6b21      	ldr	r1, [r4, #48]	; 0x30
 802bce4:	68a2      	ldr	r2, [r4, #8]
 802bce6:	430a      	orrs	r2, r1
 802bce8:	6861      	ldr	r1, [r4, #4]
 802bcea:	f001 013f 	and.w	r1, r1, #63	; 0x3f
 802bcee:	430a      	orrs	r2, r1

  /* Memory to Peripheral Transfer */
  if ((hdma->Init.Direction) == DMA_MEMORY_TO_PERIPH)
 802bcf0:	68e1      	ldr	r1, [r4, #12]
 802bcf2:	f5b1 6f80 	cmp.w	r1, #1024	; 0x400
 802bcf6:	d133      	bne.n	802bd60 <HAL_DMA_Init+0x290>
  {
    if (IS_GPDMA_INSTANCE(hdma->Instance) != 0U)
 802bcf8:	42ab      	cmp	r3, r5
 802bcfa:	d014      	beq.n	802bd26 <HAL_DMA_Init+0x256>
 802bcfc:	491c      	ldr	r1, [pc, #112]	; (802bd70 <HAL_DMA_Init+0x2a0>)
 802bcfe:	428b      	cmp	r3, r1
 802bd00:	d011      	beq.n	802bd26 <HAL_DMA_Init+0x256>
 802bd02:	3180      	adds	r1, #128	; 0x80
 802bd04:	428b      	cmp	r3, r1
 802bd06:	d00e      	beq.n	802bd26 <HAL_DMA_Init+0x256>
 802bd08:	3180      	adds	r1, #128	; 0x80
 802bd0a:	428b      	cmp	r3, r1
 802bd0c:	d00b      	beq.n	802bd26 <HAL_DMA_Init+0x256>
 802bd0e:	3180      	adds	r1, #128	; 0x80
 802bd10:	428b      	cmp	r3, r1
 802bd12:	d008      	beq.n	802bd26 <HAL_DMA_Init+0x256>
 802bd14:	3180      	adds	r1, #128	; 0x80
 802bd16:	428b      	cmp	r3, r1
 802bd18:	d005      	beq.n	802bd26 <HAL_DMA_Init+0x256>
 802bd1a:	3180      	adds	r1, #128	; 0x80
 802bd1c:	428b      	cmp	r3, r1
 802bd1e:	d002      	beq.n	802bd26 <HAL_DMA_Init+0x256>
 802bd20:	3180      	adds	r1, #128	; 0x80
 802bd22:	428b      	cmp	r3, r1
 802bd24:	d101      	bne.n	802bd2a <HAL_DMA_Init+0x25a>
    {
      tmpreg |= DMA_CTR2_DREQ;
 802bd26:	f442 6280 	orr.w	r2, r2, #1024	; 0x400
  {
    /* Nothing to do */
  }

  /* Write DMA Channel Transfer Register 2 (CTR2) */
  MODIFY_REG(hdma->Instance->CTR2, (DMA_CTR2_TCEM  | DMA_CTR2_TRIGPOL | DMA_CTR2_TRIGSEL | DMA_CTR2_TRIGM |
 802bd2a:	6c58      	ldr	r0, [r3, #68]	; 0x44
 802bd2c:	4912      	ldr	r1, [pc, #72]	; (802bd78 <HAL_DMA_Init+0x2a8>)
 802bd2e:	4001      	ands	r1, r0
                                    DMA_CTR2_BREQ  | DMA_CTR2_DREQ    | DMA_CTR2_SWREQ   | DMA_CTR2_REQSEL), tmpreg);


  /* Write DMA Channel Block Register 1 (CBR1) ************************************************************************/
  WRITE_REG(hdma->Instance->CBR1, 0U);
 802bd30:	2000      	movs	r0, #0
  MODIFY_REG(hdma->Instance->CTR2, (DMA_CTR2_TCEM  | DMA_CTR2_TRIGPOL | DMA_CTR2_TRIGSEL | DMA_CTR2_TRIGM |
 802bd32:	430a      	orrs	r2, r1
 802bd34:	645a      	str	r2, [r3, #68]	; 0x44
  WRITE_REG(hdma->Instance->CBR1, 0U);
 802bd36:	6498      	str	r0, [r3, #72]	; 0x48

  /* Write DMA Channel linked-list address register (CLLR) ************************************************************/
  WRITE_REG(hdma->Instance->CLLR, 0U);
 802bd38:	67d8      	str	r0, [r3, #124]	; 0x7c
  hdma->Mode = hdma->Init.Mode;
 802bd3a:	6b63      	ldr	r3, [r4, #52]	; 0x34
  hdma->ErrorCode = HAL_DMA_ERROR_NONE;
 802bd3c:	65a0      	str	r0, [r4, #88]	; 0x58
  hdma->Mode = hdma->Init.Mode;
 802bd3e:	6523      	str	r3, [r4, #80]	; 0x50
  hdma->State = HAL_DMA_STATE_READY;
 802bd40:	2301      	movs	r3, #1
 802bd42:	f884 3054 	strb.w	r3, [r4, #84]	; 0x54
}
 802bd46:	bd70      	pop	{r4, r5, r6, pc}
    if ((HAL_GetTick() - tickstart) > HAL_TIMEOUT_DMA_ABORT)
 802bd48:	f7ff f972 	bl	802b030 <HAL_GetTick>
 802bd4c:	1b80      	subs	r0, r0, r6
 802bd4e:	2805      	cmp	r0, #5
 802bd50:	d989      	bls.n	802bc66 <HAL_DMA_Init+0x196>
      hdma->ErrorCode = HAL_DMA_ERROR_TIMEOUT;
 802bd52:	2310      	movs	r3, #16
 802bd54:	65a3      	str	r3, [r4, #88]	; 0x58
      hdma->State = HAL_DMA_STATE_ERROR;
 802bd56:	2303      	movs	r3, #3
 802bd58:	f884 3054 	strb.w	r3, [r4, #84]	; 0x54
    return HAL_ERROR;
 802bd5c:	2001      	movs	r0, #1
 802bd5e:	e7f2      	b.n	802bd46 <HAL_DMA_Init+0x276>
  else if ((hdma->Init.Direction) == DMA_MEMORY_TO_MEMORY)
 802bd60:	f5b1 7f00 	cmp.w	r1, #512	; 0x200
    tmpreg |= DMA_CTR2_SWREQ;
 802bd64:	bf08      	it	eq
 802bd66:	f442 7200 	orreq.w	r2, r2, #512	; 0x200
 802bd6a:	e7de      	b.n	802bd2a <HAL_DMA_Init+0x25a>
 802bd6c:	40020050 	.word	0x40020050
 802bd70:	400200d0 	.word	0x400200d0
 802bd74:	08033af2 	.word	0x08033af2
 802bd78:	3ce031c0 	.word	0x3ce031c0

0802bd7c <HAL_DMA_DeInit>:
{
 802bd7c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 802bd7e:	4604      	mov	r4, r0
  uint32_t tickstart = HAL_GetTick();
 802bd80:	f7ff f956 	bl	802b030 <HAL_GetTick>
 802bd84:	4606      	mov	r6, r0
  if (hdma == NULL)
 802bd86:	2c00      	cmp	r4, #0
 802bd88:	d05d      	beq.n	802be46 <HAL_DMA_DeInit+0xca>
  assert_param(IS_DMA_ALL_INSTANCE(hdma->Instance));
 802bd8a:	6823      	ldr	r3, [r4, #0]
 802bd8c:	4a2f      	ldr	r2, [pc, #188]	; (802be4c <HAL_DMA_DeInit+0xd0>)
 802bd8e:	4293      	cmp	r3, r2
 802bd90:	d019      	beq.n	802bdc6 <HAL_DMA_DeInit+0x4a>
 802bd92:	3280      	adds	r2, #128	; 0x80
 802bd94:	4293      	cmp	r3, r2
 802bd96:	d016      	beq.n	802bdc6 <HAL_DMA_DeInit+0x4a>
 802bd98:	3280      	adds	r2, #128	; 0x80
 802bd9a:	4293      	cmp	r3, r2
 802bd9c:	d013      	beq.n	802bdc6 <HAL_DMA_DeInit+0x4a>
 802bd9e:	3280      	adds	r2, #128	; 0x80
 802bda0:	4293      	cmp	r3, r2
 802bda2:	d010      	beq.n	802bdc6 <HAL_DMA_DeInit+0x4a>
 802bda4:	3280      	adds	r2, #128	; 0x80
 802bda6:	4293      	cmp	r3, r2
 802bda8:	d00d      	beq.n	802bdc6 <HAL_DMA_DeInit+0x4a>
 802bdaa:	3280      	adds	r2, #128	; 0x80
 802bdac:	4293      	cmp	r3, r2
 802bdae:	d00a      	beq.n	802bdc6 <HAL_DMA_DeInit+0x4a>
 802bdb0:	3280      	adds	r2, #128	; 0x80
 802bdb2:	4293      	cmp	r3, r2
 802bdb4:	d007      	beq.n	802bdc6 <HAL_DMA_DeInit+0x4a>
 802bdb6:	3280      	adds	r2, #128	; 0x80
 802bdb8:	4293      	cmp	r3, r2
 802bdba:	d004      	beq.n	802bdc6 <HAL_DMA_DeInit+0x4a>
 802bdbc:	f44f 71a7 	mov.w	r1, #334	; 0x14e
 802bdc0:	4823      	ldr	r0, [pc, #140]	; (802be50 <HAL_DMA_DeInit+0xd4>)
 802bdc2:	f7fa f9eb 	bl	802619c <assert_failed>
  p_dma_instance = GET_DMA_INSTANCE(hdma);
 802bdc6:	6825      	ldr	r5, [r4, #0]
  __HAL_DMA_DISABLE(hdma);
 802bdc8:	696b      	ldr	r3, [r5, #20]
 802bdca:	f043 0306 	orr.w	r3, r3, #6
 802bdce:	616b      	str	r3, [r5, #20]
  while ((hdma->Instance->CCR & DMA_CCR_EN) != 0U)
 802bdd0:	6827      	ldr	r7, [r4, #0]
 802bdd2:	697b      	ldr	r3, [r7, #20]
 802bdd4:	f013 0301 	ands.w	r3, r3, #1
 802bdd8:	d12b      	bne.n	802be32 <HAL_DMA_DeInit+0xb6>
  p_dma_instance = GET_DMA_INSTANCE(hdma);
 802bdda:	f425 627f 	bic.w	r2, r5, #4080	; 0xff0
  CLEAR_BIT(p_dma_instance->PRIVCFGR, (1UL << (GET_DMA_CHANNEL(hdma) & 0x1FU)));
 802bdde:	2501      	movs	r5, #1
 802bde0:	f3c7 010b 	ubfx	r1, r7, #0, #12
  hdma->Instance->CLBAR = 0U;
 802bde4:	603b      	str	r3, [r7, #0]
  p_dma_instance = GET_DMA_INSTANCE(hdma);
 802bde6:	f022 020f 	bic.w	r2, r2, #15
  hdma->Instance->CCR   = 0U;
 802bdea:	617b      	str	r3, [r7, #20]
  CLEAR_BIT(p_dma_instance->PRIVCFGR, (1UL << (GET_DMA_CHANNEL(hdma) & 0x1FU)));
 802bdec:	3950      	subs	r1, #80	; 0x50
  hdma->Instance->CTR1  = 0U;
 802bdee:	643b      	str	r3, [r7, #64]	; 0x40
  hdma->Instance->CTR2  = 0U;
 802bdf0:	647b      	str	r3, [r7, #68]	; 0x44
  hdma->Instance->CBR1  = 0U;
 802bdf2:	64bb      	str	r3, [r7, #72]	; 0x48
  hdma->Instance->CSAR  = 0U;
 802bdf4:	64fb      	str	r3, [r7, #76]	; 0x4c
  hdma->Instance->CDAR  = 0U;
 802bdf6:	653b      	str	r3, [r7, #80]	; 0x50
  hdma->Instance->CLLR  = 0U;
 802bdf8:	67fb      	str	r3, [r7, #124]	; 0x7c
  CLEAR_BIT(p_dma_instance->PRIVCFGR, (1UL << (GET_DMA_CHANNEL(hdma) & 0x1FU)));
 802bdfa:	6850      	ldr	r0, [r2, #4]
 802bdfc:	f3c1 11c4 	ubfx	r1, r1, #7, #5
 802be00:	fa05 f101 	lsl.w	r1, r5, r1
 802be04:	ea20 0101 	bic.w	r1, r0, r1
 802be08:	6051      	str	r1, [r2, #4]
  __HAL_DMA_CLEAR_FLAG(hdma, (DMA_FLAG_TC | DMA_FLAG_HT | DMA_FLAG_DTE | DMA_FLAG_ULE | DMA_FLAG_USE | DMA_FLAG_SUSP |
 802be0a:	f44f 42fe 	mov.w	r2, #32512	; 0x7f00
 802be0e:	60fa      	str	r2, [r7, #12]
  if (hdma->Parent != NULL)
 802be10:	6de2      	ldr	r2, [r4, #92]	; 0x5c
  hdma->XferHalfCpltCallback = NULL;
 802be12:	e9c4 3318 	strd	r3, r3, [r4, #96]	; 0x60
  hdma->XferAbortCallback    = NULL;
 802be16:	e9c4 331a 	strd	r3, r3, [r4, #104]	; 0x68
  hdma->LinkedListQueue = NULL;
 802be1a:	e9c4 331c 	strd	r3, r3, [r4, #112]	; 0x70
  if (hdma->Parent != NULL)
 802be1e:	b102      	cbz	r2, 802be22 <HAL_DMA_DeInit+0xa6>
    hdma->Parent = NULL;
 802be20:	65e3      	str	r3, [r4, #92]	; 0x5c
  hdma->Mode = DMA_NORMAL;
 802be22:	2000      	movs	r0, #0
  hdma->ErrorCode = HAL_DMA_ERROR_NONE;
 802be24:	65a0      	str	r0, [r4, #88]	; 0x58
  hdma->Mode = DMA_NORMAL;
 802be26:	6520      	str	r0, [r4, #80]	; 0x50
  hdma->State = HAL_DMA_STATE_RESET;
 802be28:	f884 0054 	strb.w	r0, [r4, #84]	; 0x54
  __HAL_UNLOCK(hdma);
 802be2c:	f884 004c 	strb.w	r0, [r4, #76]	; 0x4c
}
 802be30:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    if ((HAL_GetTick() - tickstart) > HAL_TIMEOUT_DMA_ABORT)
 802be32:	f7ff f8fd 	bl	802b030 <HAL_GetTick>
 802be36:	1b80      	subs	r0, r0, r6
 802be38:	2805      	cmp	r0, #5
 802be3a:	d9c9      	bls.n	802bdd0 <HAL_DMA_DeInit+0x54>
      hdma->ErrorCode = HAL_DMA_ERROR_TIMEOUT;
 802be3c:	2310      	movs	r3, #16
 802be3e:	65a3      	str	r3, [r4, #88]	; 0x58
      hdma->State = HAL_DMA_STATE_ERROR;
 802be40:	2303      	movs	r3, #3
 802be42:	f884 3054 	strb.w	r3, [r4, #84]	; 0x54
    return HAL_ERROR;
 802be46:	2001      	movs	r0, #1
 802be48:	e7f2      	b.n	802be30 <HAL_DMA_DeInit+0xb4>
 802be4a:	bf00      	nop
 802be4c:	40020050 	.word	0x40020050
 802be50:	08033af2 	.word	0x08033af2

0802be54 <HAL_DMA_Start_IT>:
{
 802be54:	e92d 43b0 	stmdb	sp!, {r4, r5, r7, r8, r9, lr}
 802be58:	4688      	mov	r8, r1
 802be5a:	4691      	mov	r9, r2
 802be5c:	461f      	mov	r7, r3
  if (hdma == NULL)
 802be5e:	4604      	mov	r4, r0
 802be60:	2800      	cmp	r0, #0
 802be62:	d044      	beq.n	802beee <HAL_DMA_Start_IT+0x9a>
  assert_param(IS_DMA_BLOCK_SIZE(SrcDataSize));
 802be64:	1e5a      	subs	r2, r3, #1
 802be66:	f64f 73fe 	movw	r3, #65534	; 0xfffe
 802be6a:	429a      	cmp	r2, r3
 802be6c:	d904      	bls.n	802be78 <HAL_DMA_Start_IT+0x24>
 802be6e:	f44f 7102 	mov.w	r1, #520	; 0x208
 802be72:	4821      	ldr	r0, [pc, #132]	; (802bef8 <HAL_DMA_Start_IT+0xa4>)
 802be74:	f7fa f992 	bl	802619c <assert_failed>
  __HAL_LOCK(hdma);
 802be78:	f894 304c 	ldrb.w	r3, [r4, #76]	; 0x4c
 802be7c:	2b01      	cmp	r3, #1
 802be7e:	d038      	beq.n	802bef2 <HAL_DMA_Start_IT+0x9e>
 802be80:	2001      	movs	r0, #1
  if (hdma->State == HAL_DMA_STATE_READY)
 802be82:	f894 3054 	ldrb.w	r3, [r4, #84]	; 0x54
  __HAL_LOCK(hdma);
 802be86:	f884 004c 	strb.w	r0, [r4, #76]	; 0x4c
  if (hdma->State == HAL_DMA_STATE_READY)
 802be8a:	4283      	cmp	r3, r0
 802be8c:	f04f 0300 	mov.w	r3, #0
 802be90:	d128      	bne.n	802bee4 <HAL_DMA_Start_IT+0x90>
    hdma->State = HAL_DMA_STATE_BUSY;
 802be92:	2202      	movs	r2, #2
 802be94:	f884 2054 	strb.w	r2, [r4, #84]	; 0x54
    hdma->ErrorCode = HAL_DMA_ERROR_NONE;
 802be98:	65a3      	str	r3, [r4, #88]	; 0x58
  __HAL_DMA_CLEAR_FLAG(hdma, DMA_FLAG_TC | DMA_FLAG_HT | DMA_FLAG_DTE | DMA_FLAG_ULE | DMA_FLAG_USE | DMA_FLAG_SUSP |
 802be9a:	f44f 43fe 	mov.w	r3, #32512	; 0x7f00
  MODIFY_REG(hdma->Instance->CBR1, DMA_CBR1_BNDT, (SrcDataSize & DMA_CBR1_BNDT));
 802be9e:	6820      	ldr	r0, [r4, #0]
 802bea0:	b2bf      	uxth	r7, r7
 802bea2:	6c85      	ldr	r5, [r0, #72]	; 0x48
 802bea4:	0c2d      	lsrs	r5, r5, #16
 802bea6:	042d      	lsls	r5, r5, #16
 802bea8:	433d      	orrs	r5, r7
 802beaa:	6485      	str	r5, [r0, #72]	; 0x48
  __HAL_DMA_CLEAR_FLAG(hdma, DMA_FLAG_TC | DMA_FLAG_HT | DMA_FLAG_DTE | DMA_FLAG_ULE | DMA_FLAG_USE | DMA_FLAG_SUSP |
 802beac:	60c3      	str	r3, [r0, #12]
  hdma->Instance->CSAR = SrcAddress;
 802beae:	f8c0 804c 	str.w	r8, [r0, #76]	; 0x4c
  hdma->Instance->CDAR = DstAddress;
 802beb2:	f8c0 9050 	str.w	r9, [r0, #80]	; 0x50
    __HAL_DMA_ENABLE_IT(hdma, (DMA_IT_TC | DMA_IT_DTE | DMA_IT_ULE | DMA_IT_USE | DMA_IT_TO));
 802beb6:	6943      	ldr	r3, [r0, #20]
 802beb8:	f443 43ba 	orr.w	r3, r3, #23808	; 0x5d00
 802bebc:	6143      	str	r3, [r0, #20]
    if (hdma->XferHalfCpltCallback != NULL)
 802bebe:	6e63      	ldr	r3, [r4, #100]	; 0x64
 802bec0:	b11b      	cbz	r3, 802beca <HAL_DMA_Start_IT+0x76>
      __HAL_DMA_ENABLE_IT(hdma, DMA_IT_HT);
 802bec2:	6943      	ldr	r3, [r0, #20]
 802bec4:	f443 7300 	orr.w	r3, r3, #512	; 0x200
 802bec8:	6143      	str	r3, [r0, #20]
    if (hdma->XferSuspendCallback != NULL)
 802beca:	6f23      	ldr	r3, [r4, #112]	; 0x70
 802becc:	b11b      	cbz	r3, 802bed6 <HAL_DMA_Start_IT+0x82>
      __HAL_DMA_ENABLE_IT(hdma, DMA_IT_SUSP);
 802bece:	6943      	ldr	r3, [r0, #20]
 802bed0:	f443 5300 	orr.w	r3, r3, #8192	; 0x2000
 802bed4:	6143      	str	r3, [r0, #20]
    __HAL_DMA_ENABLE(hdma);
 802bed6:	6943      	ldr	r3, [r0, #20]
 802bed8:	f043 0301 	orr.w	r3, r3, #1
 802bedc:	6143      	str	r3, [r0, #20]
  return HAL_OK;
 802bede:	2000      	movs	r0, #0
}
 802bee0:	e8bd 83b0 	ldmia.w	sp!, {r4, r5, r7, r8, r9, pc}
    hdma->ErrorCode = HAL_DMA_ERROR_BUSY;
 802bee4:	2240      	movs	r2, #64	; 0x40
    __HAL_UNLOCK(hdma);
 802bee6:	f884 304c 	strb.w	r3, [r4, #76]	; 0x4c
    hdma->ErrorCode = HAL_DMA_ERROR_BUSY;
 802beea:	65a2      	str	r2, [r4, #88]	; 0x58
    return HAL_ERROR;
 802beec:	e7f8      	b.n	802bee0 <HAL_DMA_Start_IT+0x8c>
    return HAL_ERROR;
 802beee:	2001      	movs	r0, #1
 802bef0:	e7f6      	b.n	802bee0 <HAL_DMA_Start_IT+0x8c>
  __HAL_LOCK(hdma);
 802bef2:	2002      	movs	r0, #2
 802bef4:	e7f4      	b.n	802bee0 <HAL_DMA_Start_IT+0x8c>
 802bef6:	bf00      	nop
 802bef8:	08033af2 	.word	0x08033af2

0802befc <HAL_DMA_Abort>:
{
 802befc:	b538      	push	{r3, r4, r5, lr}
 802befe:	4604      	mov	r4, r0
  uint32_t tickstart =  HAL_GetTick();
 802bf00:	f7ff f896 	bl	802b030 <HAL_GetTick>
 802bf04:	4605      	mov	r5, r0
  if (hdma == NULL)
 802bf06:	b144      	cbz	r4, 802bf1a <HAL_DMA_Abort+0x1e>
  if (hdma->State != HAL_DMA_STATE_BUSY)
 802bf08:	f894 3054 	ldrb.w	r3, [r4, #84]	; 0x54
 802bf0c:	2b02      	cmp	r3, #2
 802bf0e:	d006      	beq.n	802bf1e <HAL_DMA_Abort+0x22>
    hdma->ErrorCode = HAL_DMA_ERROR_NO_XFER;
 802bf10:	2320      	movs	r3, #32
 802bf12:	65a3      	str	r3, [r4, #88]	; 0x58
        __HAL_UNLOCK(hdma);
 802bf14:	2300      	movs	r3, #0
 802bf16:	f884 304c 	strb.w	r3, [r4, #76]	; 0x4c
    return HAL_ERROR;
 802bf1a:	2001      	movs	r0, #1
 802bf1c:	e024      	b.n	802bf68 <HAL_DMA_Abort+0x6c>
    hdma->Instance->CCR |= DMA_CCR_SUSP;
 802bf1e:	6822      	ldr	r2, [r4, #0]
 802bf20:	6953      	ldr	r3, [r2, #20]
 802bf22:	f043 0304 	orr.w	r3, r3, #4
 802bf26:	6153      	str	r3, [r2, #20]
    hdma->State = HAL_DMA_STATE_SUSPEND;
 802bf28:	2305      	movs	r3, #5
 802bf2a:	f884 3054 	strb.w	r3, [r4, #84]	; 0x54
    while ((hdma->Instance->CSR & DMA_CSR_SUSPF) == 0U)
 802bf2e:	6823      	ldr	r3, [r4, #0]
 802bf30:	691a      	ldr	r2, [r3, #16]
 802bf32:	0490      	lsls	r0, r2, #18
 802bf34:	d519      	bpl.n	802bf6a <HAL_DMA_Abort+0x6e>
    hdma->Instance->CCR |= DMA_CCR_RESET;
 802bf36:	695a      	ldr	r2, [r3, #20]
    if ((hdma->Mode & DMA_LINKEDLIST) == DMA_LINKEDLIST)
 802bf38:	6d21      	ldr	r1, [r4, #80]	; 0x50
    hdma->Instance->CCR |= DMA_CCR_RESET;
 802bf3a:	f042 0202 	orr.w	r2, r2, #2
 802bf3e:	615a      	str	r2, [r3, #20]
    hdma->State = HAL_DMA_STATE_ABORT;
 802bf40:	2204      	movs	r2, #4
 802bf42:	f884 2054 	strb.w	r2, [r4, #84]	; 0x54
    __HAL_DMA_CLEAR_FLAG(hdma, (DMA_FLAG_TC | DMA_FLAG_HT | DMA_FLAG_DTE | DMA_FLAG_ULE | DMA_FLAG_USE | DMA_FLAG_SUSP |
 802bf46:	f44f 42fe 	mov.w	r2, #32512	; 0x7f00
 802bf4a:	60da      	str	r2, [r3, #12]
    hdma->State = HAL_DMA_STATE_READY;
 802bf4c:	2201      	movs	r2, #1
    if ((hdma->Mode & DMA_LINKEDLIST) == DMA_LINKEDLIST)
 802bf4e:	0609      	lsls	r1, r1, #24
      hdma->LinkedListQueue->State = HAL_DMA_QUEUE_STATE_READY;
 802bf50:	bf48      	it	mi
 802bf52:	6f61      	ldrmi	r1, [r4, #116]	; 0x74
    hdma->State = HAL_DMA_STATE_READY;
 802bf54:	f884 2054 	strb.w	r2, [r4, #84]	; 0x54
    __HAL_UNLOCK(hdma);
 802bf58:	f04f 0000 	mov.w	r0, #0
      hdma->LinkedListQueue->State = HAL_DMA_QUEUE_STATE_READY;
 802bf5c:	bf42      	ittt	mi
 802bf5e:	730a      	strbmi	r2, [r1, #12]
      hdma->Instance->CBR1 = 0U;
 802bf60:	2200      	movmi	r2, #0
 802bf62:	649a      	strmi	r2, [r3, #72]	; 0x48
    __HAL_UNLOCK(hdma);
 802bf64:	f884 004c 	strb.w	r0, [r4, #76]	; 0x4c
}
 802bf68:	bd38      	pop	{r3, r4, r5, pc}
      if ((HAL_GetTick() - tickstart) > HAL_TIMEOUT_DMA_ABORT)
 802bf6a:	f7ff f861 	bl	802b030 <HAL_GetTick>
 802bf6e:	1b40      	subs	r0, r0, r5
 802bf70:	2805      	cmp	r0, #5
 802bf72:	d9dc      	bls.n	802bf2e <HAL_DMA_Abort+0x32>
        hdma->ErrorCode |= HAL_DMA_ERROR_TIMEOUT;
 802bf74:	6da3      	ldr	r3, [r4, #88]	; 0x58
 802bf76:	f043 0310 	orr.w	r3, r3, #16
 802bf7a:	65a3      	str	r3, [r4, #88]	; 0x58
        hdma->State = HAL_DMA_STATE_ERROR;
 802bf7c:	2303      	movs	r3, #3
 802bf7e:	f884 3054 	strb.w	r3, [r4, #84]	; 0x54
        if ((hdma->Mode & DMA_LINKEDLIST) == DMA_LINKEDLIST)
 802bf82:	6d23      	ldr	r3, [r4, #80]	; 0x50
 802bf84:	061d      	lsls	r5, r3, #24
          hdma->LinkedListQueue->State = HAL_DMA_QUEUE_STATE_READY;
 802bf86:	bf42      	ittt	mi
 802bf88:	2201      	movmi	r2, #1
 802bf8a:	6f63      	ldrmi	r3, [r4, #116]	; 0x74
 802bf8c:	731a      	strbmi	r2, [r3, #12]
 802bf8e:	e7c1      	b.n	802bf14 <HAL_DMA_Abort+0x18>

0802bf90 <HAL_DMA_Abort_IT>:
  if (hdma == NULL)
 802bf90:	b128      	cbz	r0, 802bf9e <HAL_DMA_Abort_IT+0xe>
  if (hdma->State != HAL_DMA_STATE_BUSY)
 802bf92:	f890 3054 	ldrb.w	r3, [r0, #84]	; 0x54
 802bf96:	2b02      	cmp	r3, #2
 802bf98:	d003      	beq.n	802bfa2 <HAL_DMA_Abort_IT+0x12>
    hdma->ErrorCode = HAL_DMA_ERROR_NO_XFER;
 802bf9a:	2320      	movs	r3, #32
 802bf9c:	6583      	str	r3, [r0, #88]	; 0x58
    return HAL_ERROR;
 802bf9e:	2001      	movs	r0, #1
}
 802bfa0:	4770      	bx	lr
    hdma->State = HAL_DMA_STATE_ABORT;
 802bfa2:	2304      	movs	r3, #4
    hdma->Instance->CCR |= (DMA_CCR_SUSP | DMA_CCR_SUSPIE);
 802bfa4:	6802      	ldr	r2, [r0, #0]
    hdma->State = HAL_DMA_STATE_ABORT;
 802bfa6:	f880 3054 	strb.w	r3, [r0, #84]	; 0x54
    hdma->Instance->CCR |= (DMA_CCR_SUSP | DMA_CCR_SUSPIE);
 802bfaa:	6953      	ldr	r3, [r2, #20]
  return HAL_OK;
 802bfac:	2000      	movs	r0, #0
    hdma->Instance->CCR |= (DMA_CCR_SUSP | DMA_CCR_SUSPIE);
 802bfae:	f443 5300 	orr.w	r3, r3, #8192	; 0x2000
 802bfb2:	f043 0304 	orr.w	r3, r3, #4
 802bfb6:	6153      	str	r3, [r2, #20]
  return HAL_OK;
 802bfb8:	4770      	bx	lr

0802bfba <HAL_DMA_IRQHandler>:
  uint32_t global_it_flag =  1UL << (GET_DMA_CHANNEL(hdma) & 0x1FU);
 802bfba:	2101      	movs	r1, #1
  const DMA_TypeDef *p_dma_instance = GET_DMA_INSTANCE(hdma);
 802bfbc:	6803      	ldr	r3, [r0, #0]
{
 802bfbe:	b510      	push	{r4, lr}
  const DMA_TypeDef *p_dma_instance = GET_DMA_INSTANCE(hdma);
 802bfc0:	f423 627f 	bic.w	r2, r3, #4080	; 0xff0
 802bfc4:	f022 020f 	bic.w	r2, r2, #15
{
 802bfc8:	4604      	mov	r4, r0
  uint32_t global_active_flag_ns = IS_DMA_GLOBAL_ACTIVE_FLAG_NS(p_dma_instance, global_it_flag);
 802bfca:	68d0      	ldr	r0, [r2, #12]
  uint32_t global_it_flag =  1UL << (GET_DMA_CHANNEL(hdma) & 0x1FU);
 802bfcc:	f3c3 020b 	ubfx	r2, r3, #0, #12
 802bfd0:	3a50      	subs	r2, #80	; 0x50
 802bfd2:	f3c2 12c4 	ubfx	r2, r2, #7, #5
 802bfd6:	fa01 f202 	lsl.w	r2, r1, r2
  if (global_active_flag_ns == 0U)
 802bfda:	4202      	tst	r2, r0
 802bfdc:	f000 80b3 	beq.w	802c146 <HAL_DMA_IRQHandler+0x18c>
  if ((__HAL_DMA_GET_FLAG(hdma, DMA_FLAG_DTE) != 0U))
 802bfe0:	691a      	ldr	r2, [r3, #16]
 802bfe2:	0552      	lsls	r2, r2, #21
 802bfe4:	d508      	bpl.n	802bff8 <HAL_DMA_IRQHandler+0x3e>
    if (__HAL_DMA_GET_IT_SOURCE(hdma, DMA_IT_DTE) != 0U)
 802bfe6:	695a      	ldr	r2, [r3, #20]
 802bfe8:	0550      	lsls	r0, r2, #21
 802bfea:	d505      	bpl.n	802bff8 <HAL_DMA_IRQHandler+0x3e>
      __HAL_DMA_CLEAR_FLAG(hdma, DMA_FLAG_DTE);
 802bfec:	f44f 6280 	mov.w	r2, #1024	; 0x400
 802bff0:	60da      	str	r2, [r3, #12]
      hdma->ErrorCode |= HAL_DMA_ERROR_DTE;
 802bff2:	6da2      	ldr	r2, [r4, #88]	; 0x58
 802bff4:	430a      	orrs	r2, r1
 802bff6:	65a2      	str	r2, [r4, #88]	; 0x58
  if ((__HAL_DMA_GET_FLAG(hdma, DMA_FLAG_ULE) != 0U))
 802bff8:	691a      	ldr	r2, [r3, #16]
 802bffa:	0512      	lsls	r2, r2, #20
 802bffc:	d509      	bpl.n	802c012 <HAL_DMA_IRQHandler+0x58>
    if (__HAL_DMA_GET_IT_SOURCE(hdma, DMA_IT_ULE) != 0U)
 802bffe:	695a      	ldr	r2, [r3, #20]
 802c000:	0510      	lsls	r0, r2, #20
 802c002:	d506      	bpl.n	802c012 <HAL_DMA_IRQHandler+0x58>
      __HAL_DMA_CLEAR_FLAG(hdma, DMA_FLAG_ULE);
 802c004:	f44f 6200 	mov.w	r2, #2048	; 0x800
 802c008:	60da      	str	r2, [r3, #12]
      hdma->ErrorCode |= HAL_DMA_ERROR_ULE;
 802c00a:	6da2      	ldr	r2, [r4, #88]	; 0x58
 802c00c:	f042 0202 	orr.w	r2, r2, #2
 802c010:	65a2      	str	r2, [r4, #88]	; 0x58
  if ((__HAL_DMA_GET_FLAG(hdma, DMA_FLAG_USE) != 0U))
 802c012:	691a      	ldr	r2, [r3, #16]
 802c014:	04d1      	lsls	r1, r2, #19
 802c016:	d509      	bpl.n	802c02c <HAL_DMA_IRQHandler+0x72>
    if (__HAL_DMA_GET_IT_SOURCE(hdma, DMA_IT_USE) != 0U)
 802c018:	695a      	ldr	r2, [r3, #20]
 802c01a:	04d2      	lsls	r2, r2, #19
 802c01c:	d506      	bpl.n	802c02c <HAL_DMA_IRQHandler+0x72>
      __HAL_DMA_CLEAR_FLAG(hdma, DMA_FLAG_USE);
 802c01e:	f44f 5280 	mov.w	r2, #4096	; 0x1000
 802c022:	60da      	str	r2, [r3, #12]
      hdma->ErrorCode |= HAL_DMA_ERROR_USE;
 802c024:	6da2      	ldr	r2, [r4, #88]	; 0x58
 802c026:	f042 0204 	orr.w	r2, r2, #4
 802c02a:	65a2      	str	r2, [r4, #88]	; 0x58
  if ((__HAL_DMA_GET_FLAG(hdma, DMA_FLAG_TO) != 0U))
 802c02c:	691a      	ldr	r2, [r3, #16]
 802c02e:	0450      	lsls	r0, r2, #17
 802c030:	d509      	bpl.n	802c046 <HAL_DMA_IRQHandler+0x8c>
    if (__HAL_DMA_GET_IT_SOURCE(hdma, DMA_IT_TO) != 0U)
 802c032:	695a      	ldr	r2, [r3, #20]
 802c034:	0451      	lsls	r1, r2, #17
 802c036:	d506      	bpl.n	802c046 <HAL_DMA_IRQHandler+0x8c>
      __HAL_DMA_CLEAR_FLAG(hdma, DMA_FLAG_TO);
 802c038:	f44f 4280 	mov.w	r2, #16384	; 0x4000
 802c03c:	60da      	str	r2, [r3, #12]
      hdma->ErrorCode |= HAL_DMA_ERROR_TO;
 802c03e:	6da2      	ldr	r2, [r4, #88]	; 0x58
 802c040:	f042 0208 	orr.w	r2, r2, #8
 802c044:	65a2      	str	r2, [r4, #88]	; 0x58
  if ((__HAL_DMA_GET_FLAG(hdma, DMA_FLAG_HT) != 0U))
 802c046:	691a      	ldr	r2, [r3, #16]
 802c048:	0592      	lsls	r2, r2, #22
 802c04a:	d509      	bpl.n	802c060 <HAL_DMA_IRQHandler+0xa6>
    if (__HAL_DMA_GET_IT_SOURCE(hdma, DMA_IT_HT) != 0U)
 802c04c:	695a      	ldr	r2, [r3, #20]
 802c04e:	0590      	lsls	r0, r2, #22
 802c050:	d506      	bpl.n	802c060 <HAL_DMA_IRQHandler+0xa6>
      __HAL_DMA_CLEAR_FLAG(hdma, DMA_FLAG_HT);
 802c052:	f44f 7200 	mov.w	r2, #512	; 0x200
 802c056:	60da      	str	r2, [r3, #12]
      if (hdma->XferHalfCpltCallback != NULL)
 802c058:	6e63      	ldr	r3, [r4, #100]	; 0x64
 802c05a:	b10b      	cbz	r3, 802c060 <HAL_DMA_IRQHandler+0xa6>
        hdma->XferHalfCpltCallback(hdma);
 802c05c:	4620      	mov	r0, r4
 802c05e:	4798      	blx	r3
  if ((__HAL_DMA_GET_FLAG(hdma, DMA_FLAG_SUSP) != 0U))
 802c060:	6823      	ldr	r3, [r4, #0]
 802c062:	691a      	ldr	r2, [r3, #16]
 802c064:	0491      	lsls	r1, r2, #18
 802c066:	d531      	bpl.n	802c0cc <HAL_DMA_IRQHandler+0x112>
    if (__HAL_DMA_GET_IT_SOURCE(hdma, DMA_IT_SUSP) != 0U)
 802c068:	695a      	ldr	r2, [r3, #20]
 802c06a:	0492      	lsls	r2, r2, #18
 802c06c:	d52e      	bpl.n	802c0cc <HAL_DMA_IRQHandler+0x112>
      __HAL_DMA_CLEAR_FLAG(hdma, DMA_FLAG_SUSP);
 802c06e:	f44f 5200 	mov.w	r2, #8192	; 0x2000
 802c072:	60da      	str	r2, [r3, #12]
      if (hdma->State == HAL_DMA_STATE_ABORT)
 802c074:	f894 2054 	ldrb.w	r2, [r4, #84]	; 0x54
 802c078:	2a04      	cmp	r2, #4
 802c07a:	d120      	bne.n	802c0be <HAL_DMA_IRQHandler+0x104>
        __HAL_DMA_DISABLE_IT(hdma, DMA_IT_SUSP);
 802c07c:	695a      	ldr	r2, [r3, #20]
 802c07e:	f422 5200 	bic.w	r2, r2, #8192	; 0x2000
 802c082:	615a      	str	r2, [r3, #20]
        hdma->Instance->CCR |= DMA_CCR_RESET;
 802c084:	695a      	ldr	r2, [r3, #20]
 802c086:	f042 0202 	orr.w	r2, r2, #2
 802c08a:	615a      	str	r2, [r3, #20]
        if ((hdma->Instance->CCR & DMA_CCR_EN) != 0U)
 802c08c:	695a      	ldr	r2, [r3, #20]
 802c08e:	07d0      	lsls	r0, r2, #31
          hdma->State = HAL_DMA_STATE_ERROR;
 802c090:	bf4c      	ite	mi
 802c092:	2203      	movmi	r2, #3
          hdma->State = HAL_DMA_STATE_READY;
 802c094:	2201      	movpl	r2, #1
 802c096:	f884 2054 	strb.w	r2, [r4, #84]	; 0x54
        if ((hdma->Mode & DMA_LINKEDLIST) == DMA_LINKEDLIST)
 802c09a:	6d22      	ldr	r2, [r4, #80]	; 0x50
 802c09c:	0611      	lsls	r1, r2, #24
 802c09e:	d504      	bpl.n	802c0aa <HAL_DMA_IRQHandler+0xf0>
          hdma->LinkedListQueue->State = HAL_DMA_QUEUE_STATE_READY;
 802c0a0:	2101      	movs	r1, #1
 802c0a2:	6f62      	ldr	r2, [r4, #116]	; 0x74
 802c0a4:	7311      	strb	r1, [r2, #12]
          hdma->Instance->CBR1 = 0U;
 802c0a6:	2200      	movs	r2, #0
 802c0a8:	649a      	str	r2, [r3, #72]	; 0x48
        __HAL_UNLOCK(hdma);
 802c0aa:	2300      	movs	r3, #0
 802c0ac:	f884 304c 	strb.w	r3, [r4, #76]	; 0x4c
        if (hdma->XferAbortCallback != NULL)
 802c0b0:	6ee3      	ldr	r3, [r4, #108]	; 0x6c
    if (hdma->XferErrorCallback != NULL)
 802c0b2:	2b00      	cmp	r3, #0
 802c0b4:	d047      	beq.n	802c146 <HAL_DMA_IRQHandler+0x18c>
      hdma->XferErrorCallback(hdma);
 802c0b6:	4620      	mov	r0, r4
}
 802c0b8:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
      hdma->XferErrorCallback(hdma);
 802c0bc:	4718      	bx	r3
        hdma->State = HAL_DMA_STATE_SUSPEND;
 802c0be:	2305      	movs	r3, #5
 802c0c0:	f884 3054 	strb.w	r3, [r4, #84]	; 0x54
        if (hdma->XferSuspendCallback != NULL)
 802c0c4:	6f23      	ldr	r3, [r4, #112]	; 0x70
 802c0c6:	b10b      	cbz	r3, 802c0cc <HAL_DMA_IRQHandler+0x112>
          hdma->XferSuspendCallback(hdma);
 802c0c8:	4620      	mov	r0, r4
 802c0ca:	4798      	blx	r3
  if ((__HAL_DMA_GET_FLAG(hdma, DMA_FLAG_TC) != 0U))
 802c0cc:	6823      	ldr	r3, [r4, #0]
 802c0ce:	691a      	ldr	r2, [r3, #16]
 802c0d0:	05d2      	lsls	r2, r2, #23
 802c0d2:	d518      	bpl.n	802c106 <HAL_DMA_IRQHandler+0x14c>
    if (__HAL_DMA_GET_IT_SOURCE(hdma, DMA_IT_TC) != 0U)
 802c0d4:	695a      	ldr	r2, [r3, #20]
 802c0d6:	05d0      	lsls	r0, r2, #23
 802c0d8:	d515      	bpl.n	802c106 <HAL_DMA_IRQHandler+0x14c>
      if ((hdma->Mode & DMA_LINKEDLIST) == DMA_LINKEDLIST)
 802c0da:	6d22      	ldr	r2, [r4, #80]	; 0x50
 802c0dc:	0611      	lsls	r1, r2, #24
 802c0de:	d52b      	bpl.n	802c138 <HAL_DMA_IRQHandler+0x17e>
        if (hdma->Instance->CLLR == 0U)
 802c0e0:	6fda      	ldr	r2, [r3, #124]	; 0x7c
 802c0e2:	b932      	cbnz	r2, 802c0f2 <HAL_DMA_IRQHandler+0x138>
          if (hdma->Instance->CBR1 == 0U)
 802c0e4:	6c9a      	ldr	r2, [r3, #72]	; 0x48
 802c0e6:	b922      	cbnz	r2, 802c0f2 <HAL_DMA_IRQHandler+0x138>
            hdma->State = HAL_DMA_STATE_READY;
 802c0e8:	2201      	movs	r2, #1
            hdma->LinkedListQueue->State = HAL_DMA_QUEUE_STATE_READY;
 802c0ea:	6f61      	ldr	r1, [r4, #116]	; 0x74
            hdma->State = HAL_DMA_STATE_READY;
 802c0ec:	f884 2054 	strb.w	r2, [r4, #84]	; 0x54
            hdma->LinkedListQueue->State = HAL_DMA_QUEUE_STATE_READY;
 802c0f0:	730a      	strb	r2, [r1, #12]
      __HAL_DMA_CLEAR_FLAG(hdma, (DMA_FLAG_TC | DMA_FLAG_HT));
 802c0f2:	f44f 7240 	mov.w	r2, #768	; 0x300
 802c0f6:	60da      	str	r2, [r3, #12]
      __HAL_UNLOCK(hdma);
 802c0f8:	2300      	movs	r3, #0
 802c0fa:	f884 304c 	strb.w	r3, [r4, #76]	; 0x4c
      if (hdma->XferCpltCallback != NULL)
 802c0fe:	6e23      	ldr	r3, [r4, #96]	; 0x60
 802c100:	b10b      	cbz	r3, 802c106 <HAL_DMA_IRQHandler+0x14c>
        hdma->XferCpltCallback(hdma);
 802c102:	4620      	mov	r0, r4
 802c104:	4798      	blx	r3
  if (hdma->ErrorCode != HAL_DMA_ERROR_NONE)
 802c106:	6da3      	ldr	r3, [r4, #88]	; 0x58
 802c108:	b1eb      	cbz	r3, 802c146 <HAL_DMA_IRQHandler+0x18c>
    hdma->Instance->CCR |= DMA_CCR_RESET;
 802c10a:	6823      	ldr	r3, [r4, #0]
 802c10c:	695a      	ldr	r2, [r3, #20]
 802c10e:	f042 0202 	orr.w	r2, r2, #2
 802c112:	615a      	str	r2, [r3, #20]
    if ((hdma->Instance->CCR & DMA_CCR_EN) != 0U)
 802c114:	695b      	ldr	r3, [r3, #20]
 802c116:	07da      	lsls	r2, r3, #31
      hdma->State = HAL_DMA_STATE_ERROR;
 802c118:	bf4c      	ite	mi
 802c11a:	2303      	movmi	r3, #3
      hdma->State = HAL_DMA_STATE_READY;
 802c11c:	2301      	movpl	r3, #1
 802c11e:	f884 3054 	strb.w	r3, [r4, #84]	; 0x54
    if ((hdma->Mode & DMA_LINKEDLIST) == DMA_LINKEDLIST)
 802c122:	6d23      	ldr	r3, [r4, #80]	; 0x50
 802c124:	061b      	lsls	r3, r3, #24
      hdma->LinkedListQueue->State = HAL_DMA_QUEUE_STATE_READY;
 802c126:	bf42      	ittt	mi
 802c128:	2201      	movmi	r2, #1
 802c12a:	6f63      	ldrmi	r3, [r4, #116]	; 0x74
 802c12c:	731a      	strbmi	r2, [r3, #12]
    __HAL_UNLOCK(hdma);
 802c12e:	2300      	movs	r3, #0
 802c130:	f884 304c 	strb.w	r3, [r4, #76]	; 0x4c
    if (hdma->XferErrorCallback != NULL)
 802c134:	6ea3      	ldr	r3, [r4, #104]	; 0x68
 802c136:	e7bc      	b.n	802c0b2 <HAL_DMA_IRQHandler+0xf8>
        if (hdma->Instance->CBR1 == 0U)
 802c138:	6c9a      	ldr	r2, [r3, #72]	; 0x48
 802c13a:	2a00      	cmp	r2, #0
 802c13c:	d1d9      	bne.n	802c0f2 <HAL_DMA_IRQHandler+0x138>
          hdma->State = HAL_DMA_STATE_READY;
 802c13e:	2201      	movs	r2, #1
 802c140:	f884 2054 	strb.w	r2, [r4, #84]	; 0x54
 802c144:	e7d5      	b.n	802c0f2 <HAL_DMA_IRQHandler+0x138>
}
 802c146:	bd10      	pop	{r4, pc}

0802c148 <HAL_DMA_ConfigChannelAttributes>:
{
 802c148:	b538      	push	{r3, r4, r5, lr}
 802c14a:	460c      	mov	r4, r1
  if (hdma == NULL)
 802c14c:	4605      	mov	r5, r0
 802c14e:	b318      	cbz	r0, 802c198 <HAL_DMA_ConfigChannelAttributes+0x50>
  assert_param(IS_DMA_ATTRIBUTES(ChannelAttributes));
 802c150:	f1a1 0310 	sub.w	r3, r1, #16
 802c154:	2b01      	cmp	r3, #1
 802c156:	d904      	bls.n	802c162 <HAL_DMA_ConfigChannelAttributes+0x1a>
 802c158:	f240 516b 	movw	r1, #1387	; 0x56b
 802c15c:	4810      	ldr	r0, [pc, #64]	; (802c1a0 <HAL_DMA_ConfigChannelAttributes+0x58>)
 802c15e:	f7fa f81d 	bl	802619c <assert_failed>
  if ((ChannelAttributes & DMA_CHANNEL_ATTR_PRIV_MASK) == DMA_CHANNEL_ATTR_PRIV_MASK)
 802c162:	f014 0310 	ands.w	r3, r4, #16
 802c166:	d019      	beq.n	802c19c <HAL_DMA_ConfigChannelAttributes+0x54>
  channel_idx = 1UL << (GET_DMA_CHANNEL(hdma) & 0x1FU);
 802c168:	2101      	movs	r1, #1
  return HAL_OK;
 802c16a:	2000      	movs	r0, #0
  p_dma_instance = GET_DMA_INSTANCE(hdma);
 802c16c:	682b      	ldr	r3, [r5, #0]
    if ((ChannelAttributes & DMA_CHANNEL_PRIV) == DMA_CHANNEL_PRIV)
 802c16e:	f004 0411 	and.w	r4, r4, #17
  p_dma_instance = GET_DMA_INSTANCE(hdma);
 802c172:	f423 627f 	bic.w	r2, r3, #4080	; 0xff0
  channel_idx = 1UL << (GET_DMA_CHANNEL(hdma) & 0x1FU);
 802c176:	f3c3 030b 	ubfx	r3, r3, #0, #12
 802c17a:	3b50      	subs	r3, #80	; 0x50
  p_dma_instance = GET_DMA_INSTANCE(hdma);
 802c17c:	f022 020f 	bic.w	r2, r2, #15
  channel_idx = 1UL << (GET_DMA_CHANNEL(hdma) & 0x1FU);
 802c180:	f3c3 13c4 	ubfx	r3, r3, #7, #5
 802c184:	fa01 f303 	lsl.w	r3, r1, r3
      p_dma_instance->PRIVCFGR |= channel_idx;
 802c188:	6851      	ldr	r1, [r2, #4]
    if ((ChannelAttributes & DMA_CHANNEL_PRIV) == DMA_CHANNEL_PRIV)
 802c18a:	2c11      	cmp	r4, #17
      p_dma_instance->PRIVCFGR |= channel_idx;
 802c18c:	bf0c      	ite	eq
 802c18e:	430b      	orreq	r3, r1
      p_dma_instance->PRIVCFGR &= (~channel_idx);
 802c190:	ea21 0303 	bicne.w	r3, r1, r3
 802c194:	6053      	str	r3, [r2, #4]
}
 802c196:	bd38      	pop	{r3, r4, r5, pc}
    return HAL_ERROR;
 802c198:	2001      	movs	r0, #1
 802c19a:	e7fc      	b.n	802c196 <HAL_DMA_ConfigChannelAttributes+0x4e>
  return HAL_OK;
 802c19c:	4618      	mov	r0, r3
 802c19e:	e7fa      	b.n	802c196 <HAL_DMA_ConfigChannelAttributes+0x4e>
 802c1a0:	08033af2 	.word	0x08033af2

0802c1a4 <HAL_DMAEx_List_Start_IT>:
  * @param  hdma : Pointer to a DMA_HandleTypeDef structure that contains the configuration information for the
  *                specified DMA Channel.
  * @retval HAL status.
  */
HAL_StatusTypeDef HAL_DMAEx_List_Start_IT(DMA_HandleTypeDef *const hdma)
{
 802c1a4:	b530      	push	{r4, r5, lr}
  HAL_DMA_StateTypeDef dma_state;
  uint32_t ccr_value;
  uint32_t cllr_mask;

  /* Check the DMA peripheral handle and the linked-list queue parameters */
  if ((hdma == NULL) || (hdma->LinkedListQueue == NULL))
 802c1a6:	2800      	cmp	r0, #0
 802c1a8:	d048      	beq.n	802c23c <HAL_DMAEx_List_Start_IT+0x98>
 802c1aa:	6f41      	ldr	r1, [r0, #116]	; 0x74
 802c1ac:	2900      	cmp	r1, #0
 802c1ae:	d045      	beq.n	802c23c <HAL_DMAEx_List_Start_IT+0x98>
  {
    return HAL_ERROR;
  }

  /* Check DMA channel state */
  dma_state = hdma->State;
 802c1b0:	f890 2054 	ldrb.w	r2, [r0, #84]	; 0x54
  ccr_value = hdma->Instance->CCR & DMA_CCR_LSM;
 802c1b4:	6803      	ldr	r3, [r0, #0]
  if ((dma_state == HAL_DMA_STATE_READY) || ((dma_state == HAL_DMA_STATE_BUSY) && (ccr_value != 0U)))
 802c1b6:	2a01      	cmp	r2, #1
  ccr_value = hdma->Instance->CCR & DMA_CCR_LSM;
 802c1b8:	695c      	ldr	r4, [r3, #20]
  dma_state = hdma->State;
 802c1ba:	b2d5      	uxtb	r5, r2
  if ((dma_state == HAL_DMA_STATE_READY) || ((dma_state == HAL_DMA_STATE_BUSY) && (ccr_value != 0U)))
 802c1bc:	d003      	beq.n	802c1c6 <HAL_DMAEx_List_Start_IT+0x22>
 802c1be:	2d02      	cmp	r5, #2
 802c1c0:	d137      	bne.n	802c232 <HAL_DMAEx_List_Start_IT+0x8e>
 802c1c2:	03e2      	lsls	r2, r4, #15
 802c1c4:	d535      	bpl.n	802c232 <HAL_DMAEx_List_Start_IT+0x8e>
  {
    /* Check DMA channel state is ready */
    if (hdma->State == HAL_DMA_STATE_READY)
 802c1c6:	f890 2054 	ldrb.w	r2, [r0, #84]	; 0x54
 802c1ca:	2a01      	cmp	r2, #1
 802c1cc:	b2d4      	uxtb	r4, r2
 802c1ce:	d12a      	bne.n	802c226 <HAL_DMAEx_List_Start_IT+0x82>
    {
      /* Process locked */
      __HAL_LOCK(hdma);
 802c1d0:	f890 204c 	ldrb.w	r2, [r0, #76]	; 0x4c
 802c1d4:	2a01      	cmp	r2, #1
 802c1d6:	f04f 0202 	mov.w	r2, #2
 802c1da:	d031      	beq.n	802c240 <HAL_DMAEx_List_Start_IT+0x9c>

      /* Update the DMA channel and the queue states */
      hdma->State                  = HAL_DMA_STATE_BUSY;
 802c1dc:	f880 2054 	strb.w	r2, [r0, #84]	; 0x54
      __HAL_LOCK(hdma);
 802c1e0:	f880 404c 	strb.w	r4, [r0, #76]	; 0x4c
      hdma->LinkedListQueue->State = HAL_DMA_QUEUE_STATE_BUSY;
 802c1e4:	730a      	strb	r2, [r1, #12]

      /* Update the DMA channel and the queue error codes */
      hdma->ErrorCode                  = HAL_DMA_ERROR_NONE;
 802c1e6:	2200      	movs	r2, #0
 802c1e8:	6582      	str	r2, [r0, #88]	; 0x58
      hdma->LinkedListQueue->ErrorCode = HAL_DMA_QUEUE_ERROR_NONE;
 802c1ea:	610a      	str	r2, [r1, #16]

      /* Enable common interrupts: Transfer Complete and Transfer Errors ITs */
      __HAL_DMA_ENABLE_IT(hdma, (DMA_IT_TC | DMA_IT_DTE | DMA_IT_ULE | DMA_IT_USE | DMA_IT_TO));
 802c1ec:	695a      	ldr	r2, [r3, #20]
 802c1ee:	f442 42ba 	orr.w	r2, r2, #23808	; 0x5d00
 802c1f2:	615a      	str	r2, [r3, #20]

      /* Check half transfer complete callback */
      if (hdma->XferHalfCpltCallback != NULL)
 802c1f4:	6e42      	ldr	r2, [r0, #100]	; 0x64
 802c1f6:	b11a      	cbz	r2, 802c200 <HAL_DMAEx_List_Start_IT+0x5c>
      {
        /* If half transfer complete callback is set, enable the corresponding IT */
        __HAL_DMA_ENABLE_IT(hdma, DMA_IT_HT);
 802c1f8:	695a      	ldr	r2, [r3, #20]
 802c1fa:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 802c1fe:	615a      	str	r2, [r3, #20]
      }

      /* Check suspend callback */
      if (hdma->XferSuspendCallback != NULL)
 802c200:	6f02      	ldr	r2, [r0, #112]	; 0x70
 802c202:	b11a      	cbz	r2, 802c20c <HAL_DMAEx_List_Start_IT+0x68>
      {
        /* If transfer suspend callback is set, enable the corresponding IT */
        __HAL_DMA_ENABLE_IT(hdma, DMA_IT_SUSP);
 802c204:	695a      	ldr	r2, [r3, #20]
 802c206:	f442 5200 	orr.w	r2, r2, #8192	; 0x2000
 802c20a:	615a      	str	r2, [r3, #20]

      /* Get CLLR register mask and offset */
      DMA_List_GetCLLRNodeInfo(hdma->LinkedListQueue->Head, &cllr_mask, NULL);

      /* Update DMA registers for linked-list transfer */
      hdma->Instance->CLBAR = ((uint32_t)hdma->LinkedListQueue->Head & DMA_CLBAR_LBA);
 802c20c:	680a      	ldr	r2, [r1, #0]
 802c20e:	0c11      	lsrs	r1, r2, #16
      hdma->Instance->CLLR  = ((uint32_t)hdma->LinkedListQueue->Head & DMA_CLLR_LA) | cllr_mask;
 802c210:	f022 0203 	bic.w	r2, r2, #3
 802c214:	0412      	lsls	r2, r2, #16
 802c216:	0c12      	lsrs	r2, r2, #16
 802c218:	f042 4278 	orr.w	r2, r2, #4160749568	; 0xf8000000
      hdma->Instance->CLBAR = ((uint32_t)hdma->LinkedListQueue->Head & DMA_CLBAR_LBA);
 802c21c:	0409      	lsls	r1, r1, #16
      hdma->Instance->CLLR  = ((uint32_t)hdma->LinkedListQueue->Head & DMA_CLLR_LA) | cllr_mask;
 802c21e:	f442 3280 	orr.w	r2, r2, #65536	; 0x10000
      hdma->Instance->CLBAR = ((uint32_t)hdma->LinkedListQueue->Head & DMA_CLBAR_LBA);
 802c222:	6019      	str	r1, [r3, #0]
      hdma->Instance->CLLR  = ((uint32_t)hdma->LinkedListQueue->Head & DMA_CLLR_LA) | cllr_mask;
 802c224:	67da      	str	r2, [r3, #124]	; 0x7c
    __HAL_UNLOCK(hdma);

    return HAL_ERROR;
  }

  return HAL_OK;
 802c226:	2000      	movs	r0, #0
    __HAL_DMA_ENABLE(hdma);
 802c228:	695a      	ldr	r2, [r3, #20]
 802c22a:	f042 0201 	orr.w	r2, r2, #1
 802c22e:	615a      	str	r2, [r3, #20]
}
 802c230:	bd30      	pop	{r4, r5, pc}
    hdma->ErrorCode = HAL_DMA_ERROR_BUSY;
 802c232:	2340      	movs	r3, #64	; 0x40
 802c234:	6583      	str	r3, [r0, #88]	; 0x58
    __HAL_UNLOCK(hdma);
 802c236:	2300      	movs	r3, #0
 802c238:	f880 304c 	strb.w	r3, [r0, #76]	; 0x4c
    return HAL_ERROR;
 802c23c:	2001      	movs	r0, #1
 802c23e:	e7f7      	b.n	802c230 <HAL_DMAEx_List_Start_IT+0x8c>
      __HAL_LOCK(hdma);
 802c240:	4610      	mov	r0, r2
 802c242:	e7f5      	b.n	802c230 <HAL_DMAEx_List_Start_IT+0x8c>

0802c244 <HAL_EXTI_RegisterCallback>:
  */
HAL_StatusTypeDef HAL_EXTI_RegisterCallback(EXTI_HandleTypeDef *hexti, EXTI_CallbackIDTypeDef CallbackID, void (*pPendingCbfn)(void))
{
  HAL_StatusTypeDef status = HAL_OK;

  switch (CallbackID)
 802c244:	2901      	cmp	r1, #1
 802c246:	d006      	beq.n	802c256 <HAL_EXTI_RegisterCallback+0x12>
 802c248:	2902      	cmp	r1, #2
 802c24a:	d007      	beq.n	802c25c <HAL_EXTI_RegisterCallback+0x18>
 802c24c:	b941      	cbnz	r1, 802c260 <HAL_EXTI_RegisterCallback+0x1c>
  {
    case  HAL_EXTI_COMMON_CB_ID:
      hexti->RisingCallback = pPendingCbfn;
      hexti->FallingCallback = pPendingCbfn;
 802c24e:	e9c0 2201 	strd	r2, r2, [r0, #4]
      status = HAL_ERROR;
      break;
  }

  return status;
}
 802c252:	4608      	mov	r0, r1
 802c254:	4770      	bx	lr
      hexti->RisingCallback = pPendingCbfn;
 802c256:	6042      	str	r2, [r0, #4]
  HAL_StatusTypeDef status = HAL_OK;
 802c258:	2100      	movs	r1, #0
      break;
 802c25a:	e7fa      	b.n	802c252 <HAL_EXTI_RegisterCallback+0xe>
      hexti->FallingCallback = pPendingCbfn;
 802c25c:	6082      	str	r2, [r0, #8]
 802c25e:	e7fb      	b.n	802c258 <HAL_EXTI_RegisterCallback+0x14>
  switch (CallbackID)
 802c260:	2101      	movs	r1, #1
 802c262:	e7f6      	b.n	802c252 <HAL_EXTI_RegisterCallback+0xe>

0802c264 <HAL_EXTI_GetHandle>:
  * @param  ExtiLine Exti line number.
  *         This parameter can be from 0 to @ref EXTI_LINE_NB.
  * @retval HAL Status.
  */
HAL_StatusTypeDef HAL_EXTI_GetHandle(EXTI_HandleTypeDef *hexti, uint32_t ExtiLine)
{
 802c264:	b538      	push	{r3, r4, r5, lr}
  /* Check the parameters */
  assert_param(IS_EXTI_LINE(ExtiLine));
 802c266:	4b0f      	ldr	r3, [pc, #60]	; (802c2a4 <HAL_EXTI_GetHandle+0x40>)
{
 802c268:	4605      	mov	r5, r0
  assert_param(IS_EXTI_LINE(ExtiLine));
 802c26a:	400b      	ands	r3, r1
{
 802c26c:	460c      	mov	r4, r1
  assert_param(IS_EXTI_LINE(ExtiLine));
 802c26e:	b96b      	cbnz	r3, 802c28c <HAL_EXTI_GetHandle+0x28>
 802c270:	f001 63e0 	and.w	r3, r1, #117440512	; 0x7000000
 802c274:	f1b3 7f80 	cmp.w	r3, #16777216	; 0x1000000
 802c278:	d004      	beq.n	802c284 <HAL_EXTI_GetHandle+0x20>
 802c27a:	f001 7340 	and.w	r3, r1, #50331648	; 0x3000000
 802c27e:	f1b3 7f00 	cmp.w	r3, #33554432	; 0x2000000
 802c282:	d103      	bne.n	802c28c <HAL_EXTI_GetHandle+0x28>
 802c284:	4b08      	ldr	r3, [pc, #32]	; (802c2a8 <HAL_EXTI_GetHandle+0x44>)
 802c286:	4023      	ands	r3, r4
 802c288:	2b11      	cmp	r3, #17
 802c28a:	d904      	bls.n	802c296 <HAL_EXTI_GetHandle+0x32>
 802c28c:	f240 11d5 	movw	r1, #469	; 0x1d5
 802c290:	4806      	ldr	r0, [pc, #24]	; (802c2ac <HAL_EXTI_GetHandle+0x48>)
 802c292:	f7f9 ff83 	bl	802619c <assert_failed>

  /* Check null pointer */
  if (hexti == NULL)
 802c296:	b115      	cbz	r5, 802c29e <HAL_EXTI_GetHandle+0x3a>
  else
  {
    /* Store line number as handle private field */
    hexti->Line = ExtiLine;

    return HAL_OK;
 802c298:	2000      	movs	r0, #0
    hexti->Line = ExtiLine;
 802c29a:	602c      	str	r4, [r5, #0]
  }
}
 802c29c:	bd38      	pop	{r3, r4, r5, pc}
    return HAL_ERROR;
 802c29e:	2001      	movs	r0, #1
 802c2a0:	e7fc      	b.n	802c29c <HAL_EXTI_GetHandle+0x38>
 802c2a2:	bf00      	nop
 802c2a4:	f8feffe0 	.word	0xf8feffe0
 802c2a8:	0001001f 	.word	0x0001001f
 802c2ac:	08033b60 	.word	0x08033b60

0802c2b0 <HAL_EXTI_IRQHandler>:
  * @brief  Handle EXTI interrupt request.
  * @param  hexti Exti handle.
  * @retval none.
  */
void HAL_EXTI_IRQHandler(const EXTI_HandleTypeDef *hexti)
{
 802c2b0:	b570      	push	{r4, r5, r6, lr}
  uint32_t maskline;
  uint32_t offset;

  /* Compute line register offset and line mask */
  offset = ((hexti->Line & EXTI_REG_MASK) >> EXTI_REG_SHIFT);
  maskline = (1UL << (hexti->Line & EXTI_PIN_MASK));
 802c2b2:	2501      	movs	r5, #1
  offset = ((hexti->Line & EXTI_REG_MASK) >> EXTI_REG_SHIFT);
 802c2b4:	6804      	ldr	r4, [r0, #0]
{
 802c2b6:	4606      	mov	r6, r0
  maskline = (1UL << (hexti->Line & EXTI_PIN_MASK));
 802c2b8:	f004 031f 	and.w	r3, r4, #31
 802c2bc:	409d      	lsls	r5, r3
  offset = ((hexti->Line & EXTI_REG_MASK) >> EXTI_REG_SHIFT);
 802c2be:	f3c4 4400 	ubfx	r4, r4, #16, #1

  /* Get rising edge pending bit  */
  regaddr = (__IO uint32_t *)(&EXTI->RPR1 + (EXTI_CONFIG_OFFSET * offset));
 802c2c2:	4b0a      	ldr	r3, [pc, #40]	; (802c2ec <HAL_EXTI_IRQHandler+0x3c>)
 802c2c4:	0164      	lsls	r4, r4, #5
  regval = (*regaddr & maskline);
 802c2c6:	58e2      	ldr	r2, [r4, r3]

  if (regval != 0U)
 802c2c8:	422a      	tst	r2, r5
 802c2ca:	d003      	beq.n	802c2d4 <HAL_EXTI_IRQHandler+0x24>
  {
    /* Clear pending bit */
    *regaddr = maskline;
 802c2cc:	50e5      	str	r5, [r4, r3]

    /* Call rising callback */
    if (hexti->RisingCallback != NULL)
 802c2ce:	6843      	ldr	r3, [r0, #4]
 802c2d0:	b103      	cbz	r3, 802c2d4 <HAL_EXTI_IRQHandler+0x24>
    {
      hexti->RisingCallback();
 802c2d2:	4798      	blx	r3
    }
  }

  /* Get falling edge pending bit  */
  regaddr = (__IO uint32_t *)(&EXTI->FPR1 + (EXTI_CONFIG_OFFSET * offset));
 802c2d4:	4b06      	ldr	r3, [pc, #24]	; (802c2f0 <HAL_EXTI_IRQHandler+0x40>)
  regval = (*regaddr & maskline);
 802c2d6:	58e2      	ldr	r2, [r4, r3]

  if (regval != 0U)
 802c2d8:	422a      	tst	r2, r5
 802c2da:	d005      	beq.n	802c2e8 <HAL_EXTI_IRQHandler+0x38>
  {
    /* Clear pending bit */
    *regaddr = maskline;
 802c2dc:	50e5      	str	r5, [r4, r3]

    /* Call rising callback */
    if (hexti->FallingCallback != NULL)
 802c2de:	68b3      	ldr	r3, [r6, #8]
 802c2e0:	b113      	cbz	r3, 802c2e8 <HAL_EXTI_IRQHandler+0x38>
    {
      hexti->FallingCallback();
    }
  }
}
 802c2e2:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
      hexti->FallingCallback();
 802c2e6:	4718      	bx	r3
}
 802c2e8:	bd70      	pop	{r4, r5, r6, pc}
 802c2ea:	bf00      	nop
 802c2ec:	4602200c 	.word	0x4602200c
 802c2f0:	46022010 	.word	0x46022010

0802c2f4 <HAL_EXTI_GenerateSWI>:
  __IO uint32_t *regaddr;
  uint32_t maskline;
  uint32_t offset;

  /* Check the parameters */
  assert_param(IS_EXTI_LINE(hexti->Line));
 802c2f4:	6803      	ldr	r3, [r0, #0]
 802c2f6:	4a15      	ldr	r2, [pc, #84]	; (802c34c <HAL_EXTI_GenerateSWI+0x58>)
{
 802c2f8:	b510      	push	{r4, lr}
  assert_param(IS_EXTI_LINE(hexti->Line));
 802c2fa:	401a      	ands	r2, r3
{
 802c2fc:	4604      	mov	r4, r0
  assert_param(IS_EXTI_LINE(hexti->Line));
 802c2fe:	b96a      	cbnz	r2, 802c31c <HAL_EXTI_GenerateSWI+0x28>
 802c300:	f003 62e0 	and.w	r2, r3, #117440512	; 0x7000000
 802c304:	f1b2 7f80 	cmp.w	r2, #16777216	; 0x1000000
 802c308:	d004      	beq.n	802c314 <HAL_EXTI_GenerateSWI+0x20>
 802c30a:	f003 7240 	and.w	r2, r3, #50331648	; 0x3000000
 802c30e:	f1b2 7f00 	cmp.w	r2, #33554432	; 0x2000000
 802c312:	d103      	bne.n	802c31c <HAL_EXTI_GenerateSWI+0x28>
 802c314:	4a0e      	ldr	r2, [pc, #56]	; (802c350 <HAL_EXTI_GenerateSWI+0x5c>)
 802c316:	401a      	ands	r2, r3
 802c318:	2a11      	cmp	r2, #17
 802c31a:	d904      	bls.n	802c326 <HAL_EXTI_GenerateSWI+0x32>
 802c31c:	f240 2187 	movw	r1, #647	; 0x287
 802c320:	480c      	ldr	r0, [pc, #48]	; (802c354 <HAL_EXTI_GenerateSWI+0x60>)
 802c322:	f7f9 ff3b 	bl	802619c <assert_failed>
  assert_param(IS_EXTI_CONFIG_LINE(hexti->Line));
 802c326:	6823      	ldr	r3, [r4, #0]
 802c328:	019b      	lsls	r3, r3, #6
 802c32a:	d404      	bmi.n	802c336 <HAL_EXTI_GenerateSWI+0x42>
 802c32c:	f44f 7122 	mov.w	r1, #648	; 0x288
 802c330:	4808      	ldr	r0, [pc, #32]	; (802c354 <HAL_EXTI_GenerateSWI+0x60>)
 802c332:	f7f9 ff33 	bl	802619c <assert_failed>

  /* compute line register offset and line mask */
  offset = ((hexti->Line & EXTI_REG_MASK) >> EXTI_REG_SHIFT);
  maskline = (1UL << (hexti->Line & EXTI_PIN_MASK));
 802c336:	2201      	movs	r2, #1
  offset = ((hexti->Line & EXTI_REG_MASK) >> EXTI_REG_SHIFT);
 802c338:	6823      	ldr	r3, [r4, #0]
  maskline = (1UL << (hexti->Line & EXTI_PIN_MASK));
 802c33a:	f003 011f 	and.w	r1, r3, #31
 802c33e:	408a      	lsls	r2, r1
  offset = ((hexti->Line & EXTI_REG_MASK) >> EXTI_REG_SHIFT);
 802c340:	f3c3 4300 	ubfx	r3, r3, #16, #1

  regaddr = (__IO uint32_t *)(&EXTI->SWIER1 + (EXTI_CONFIG_OFFSET * offset));
 802c344:	4904      	ldr	r1, [pc, #16]	; (802c358 <HAL_EXTI_GenerateSWI+0x64>)
 802c346:	015b      	lsls	r3, r3, #5
  *regaddr = maskline;
 802c348:	505a      	str	r2, [r3, r1]
}
 802c34a:	bd10      	pop	{r4, pc}
 802c34c:	f8feffe0 	.word	0xf8feffe0
 802c350:	0001001f 	.word	0x0001001f
 802c354:	08033b60 	.word	0x08033b60
 802c358:	46022008 	.word	0x46022008

0802c35c <FLASH_Program_QuadWord>:
  uint32_t *src_addr  = (uint32_t *)DataAddress;
  uint32_t primask_bit;
  __IO uint32_t *reg_cr;

  /* Check the parameters */
  assert_param(IS_FLASH_PROGRAM_ADDRESS(Address));
 802c35c:	f1b0 6f00 	cmp.w	r0, #134217728	; 0x8000000
{
 802c360:	b538      	push	{r3, r4, r5, lr}
 802c362:	4604      	mov	r4, r0
 802c364:	460d      	mov	r5, r1
  assert_param(IS_FLASH_PROGRAM_ADDRESS(Address));
 802c366:	d30f      	bcc.n	802c388 <FLASH_Program_QuadWord+0x2c>
 802c368:	f64f 71fd 	movw	r1, #65533	; 0xfffd
 802c36c:	4b15      	ldr	r3, [pc, #84]	; (802c3c4 <FLASH_Program_QuadWord+0x68>)
 802c36e:	f8b3 30a0 	ldrh.w	r3, [r3, #160]	; 0xa0
 802c372:	1e5a      	subs	r2, r3, #1
 802c374:	b292      	uxth	r2, r2
 802c376:	428a      	cmp	r2, r1
 802c378:	bf8e      	itee	hi
 802c37a:	f04f 6301 	movhi.w	r3, #135266304	; 0x8100000
 802c37e:	029b      	lslls	r3, r3, #10
 802c380:	f103 6300 	addls.w	r3, r3, #134217728	; 0x8000000
 802c384:	4283      	cmp	r3, r0
 802c386:	d80b      	bhi.n	802c3a0 <FLASH_Program_QuadWord+0x44>
 802c388:	f104 4374 	add.w	r3, r4, #4093640704	; 0xf4000000
 802c38c:	f503 23e0 	add.w	r3, r3, #458752	; 0x70000
 802c390:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 802c394:	d304      	bcc.n	802c3a0 <FLASH_Program_QuadWord+0x44>
 802c396:	f240 21d1 	movw	r1, #721	; 0x2d1
 802c39a:	480b      	ldr	r0, [pc, #44]	; (802c3c8 <FLASH_Program_QuadWord+0x6c>)
 802c39c:	f7f9 fefe 	bl	802619c <assert_failed>
#else
  reg_cr = &(FLASH_NS->NSCR1);
#endif /* FLASH_SECCR1_LOCK */

  /* Set PG bit */
  SET_BIT((*reg_cr), FLASH_NSCR1_PG);
 802c3a0:	4a0a      	ldr	r2, [pc, #40]	; (802c3cc <FLASH_Program_QuadWord+0x70>)
 802c3a2:	6a93      	ldr	r3, [r2, #40]	; 0x28
 802c3a4:	f043 0301 	orr.w	r3, r3, #1
 802c3a8:	6293      	str	r3, [r2, #40]	; 0x28
  __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
 802c3aa:	f3ef 8210 	mrs	r2, PRIMASK
  __ASM volatile ("cpsid i" : : : "memory");
 802c3ae:	b672      	cpsid	i
}
 802c3b0:	2300      	movs	r3, #0
  __disable_irq();

  /* Program the quad-word */
  do
  {
    *dest_addr = *src_addr;
 802c3b2:	58e9      	ldr	r1, [r5, r3]
 802c3b4:	50e1      	str	r1, [r4, r3]
    dest_addr++;
    src_addr++;
    index--;
  } while (index != 0U);
 802c3b6:	3304      	adds	r3, #4
 802c3b8:	2b10      	cmp	r3, #16
 802c3ba:	d1fa      	bne.n	802c3b2 <FLASH_Program_QuadWord+0x56>
  __ASM volatile ("MSR primask, %0" : : "r" (priMask) : "memory");
 802c3bc:	f382 8810 	msr	PRIMASK, r2

  /* Exit critical section: restore previous priority mask */
  __set_PRIMASK(primask_bit);
}
 802c3c0:	bd38      	pop	{r3, r4, r5, pc}
 802c3c2:	bf00      	nop
 802c3c4:	0bf90700 	.word	0x0bf90700
 802c3c8:	08033bcf 	.word	0x08033bcf
 802c3cc:	40022000 	.word	0x40022000

0802c3d0 <FLASH_Program_Burst>:
  uint32_t *src_addr = (uint32_t *)DataAddress;
  uint32_t primask_bit;
  __IO uint32_t *reg_cr;

  /* Check the parameters */
  assert_param(IS_FLASH_MAIN_MEM_ADDRESS(Address));
 802c3d0:	f1b0 6f00 	cmp.w	r0, #134217728	; 0x8000000
{
 802c3d4:	b538      	push	{r3, r4, r5, lr}
 802c3d6:	4604      	mov	r4, r0
 802c3d8:	460d      	mov	r5, r1
  assert_param(IS_FLASH_MAIN_MEM_ADDRESS(Address));
 802c3da:	d30f      	bcc.n	802c3fc <FLASH_Program_Burst+0x2c>
 802c3dc:	f64f 71fd 	movw	r1, #65533	; 0xfffd
 802c3e0:	4b12      	ldr	r3, [pc, #72]	; (802c42c <FLASH_Program_Burst+0x5c>)
 802c3e2:	f8b3 30a0 	ldrh.w	r3, [r3, #160]	; 0xa0
 802c3e6:	1e5a      	subs	r2, r3, #1
 802c3e8:	b292      	uxth	r2, r2
 802c3ea:	428a      	cmp	r2, r1
 802c3ec:	bf8e      	itee	hi
 802c3ee:	f04f 6301 	movhi.w	r3, #135266304	; 0x8100000
 802c3f2:	029b      	lslls	r3, r3, #10
 802c3f4:	f103 6300 	addls.w	r3, r3, #134217728	; 0x8000000
 802c3f8:	4283      	cmp	r3, r0
 802c3fa:	d804      	bhi.n	802c406 <FLASH_Program_Burst+0x36>
 802c3fc:	f240 21fd 	movw	r1, #765	; 0x2fd
 802c400:	480b      	ldr	r0, [pc, #44]	; (802c430 <FLASH_Program_Burst+0x60>)
 802c402:	f7f9 fecb 	bl	802619c <assert_failed>
#else
  reg_cr = &(FLASH_NS->NSCR1);
#endif /* FLASH_SECCR1_LOCK */

  /* Set PG and BWR bits */
  SET_BIT((*reg_cr), (FLASH_NSCR1_PG | FLASH_NSCR1_BWR));
 802c406:	4a0b      	ldr	r2, [pc, #44]	; (802c434 <FLASH_Program_Burst+0x64>)
 802c408:	6a93      	ldr	r3, [r2, #40]	; 0x28
 802c40a:	f443 4380 	orr.w	r3, r3, #16384	; 0x4000
 802c40e:	f043 0301 	orr.w	r3, r3, #1
 802c412:	6293      	str	r3, [r2, #40]	; 0x28
  __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
 802c414:	f3ef 8210 	mrs	r2, PRIMASK
  __ASM volatile ("cpsid i" : : : "memory");
 802c418:	b672      	cpsid	i
}
 802c41a:	2300      	movs	r3, #0
  __disable_irq();

  /* Program the burst */
  do
  {
    *dest_addr = *src_addr;
 802c41c:	58e9      	ldr	r1, [r5, r3]
 802c41e:	50e1      	str	r1, [r4, r3]
    dest_addr++;
    src_addr++;
    burst_index--;
  } while (burst_index != 0U);
 802c420:	3304      	adds	r3, #4
 802c422:	2b80      	cmp	r3, #128	; 0x80
 802c424:	d1fa      	bne.n	802c41c <FLASH_Program_Burst+0x4c>
  __ASM volatile ("MSR primask, %0" : : "r" (priMask) : "memory");
 802c426:	f382 8810 	msr	PRIMASK, r2

  /* Exit critical section: restore previous priority mask */
  __set_PRIMASK(primask_bit);
}
 802c42a:	bd38      	pop	{r3, r4, r5, pc}
 802c42c:	0bf90700 	.word	0x0bf90700
 802c430:	08033bcf 	.word	0x08033bcf
 802c434:	40022000 	.word	0x40022000

0802c438 <HAL_FLASH_Unlock>:
  if (READ_BIT(FLASH->NSCR1, FLASH_NSCR1_LOCK) != 0U)
 802c438:	4b06      	ldr	r3, [pc, #24]	; (802c454 <HAL_FLASH_Unlock+0x1c>)
 802c43a:	6a9a      	ldr	r2, [r3, #40]	; 0x28
 802c43c:	2a00      	cmp	r2, #0
    WRITE_REG(FLASH->NSKEYR, FLASH_KEY1);
 802c43e:	bfbf      	itttt	lt
 802c440:	4a05      	ldrlt	r2, [pc, #20]	; (802c458 <HAL_FLASH_Unlock+0x20>)
 802c442:	609a      	strlt	r2, [r3, #8]
    WRITE_REG(FLASH->NSKEYR, FLASH_KEY2);
 802c444:	f102 3288 	addlt.w	r2, r2, #2290649224	; 0x88888888
 802c448:	609a      	strlt	r2, [r3, #8]
    if (READ_BIT(FLASH->NSCR1, FLASH_NSCR1_LOCK) != 0U)
 802c44a:	bfba      	itte	lt
 802c44c:	6a98      	ldrlt	r0, [r3, #40]	; 0x28
  HAL_StatusTypeDef status = HAL_OK;
 802c44e:	0fc0      	lsrlt	r0, r0, #31
 802c450:	2000      	movge	r0, #0
}
 802c452:	4770      	bx	lr
 802c454:	40022000 	.word	0x40022000
 802c458:	45670123 	.word	0x45670123

0802c45c <HAL_FLASH_Lock>:
  SET_BIT(FLASH->NSCR1, FLASH_NSCR1_LOCK);
 802c45c:	4b04      	ldr	r3, [pc, #16]	; (802c470 <HAL_FLASH_Lock+0x14>)
 802c45e:	6a9a      	ldr	r2, [r3, #40]	; 0x28
 802c460:	f042 4200 	orr.w	r2, r2, #2147483648	; 0x80000000
 802c464:	629a      	str	r2, [r3, #40]	; 0x28
  if (READ_BIT(FLASH->NSCR1, FLASH_NSCR1_LOCK) != 0U)
 802c466:	6a98      	ldr	r0, [r3, #40]	; 0x28
}
 802c468:	43c0      	mvns	r0, r0
 802c46a:	0fc0      	lsrs	r0, r0, #31
 802c46c:	4770      	bx	lr
 802c46e:	bf00      	nop
 802c470:	40022000 	.word	0x40022000

0802c474 <FLASH_WaitForLastOperation>:
{
 802c474:	b570      	push	{r4, r5, r6, lr}
 802c476:	4605      	mov	r5, r0
  uint32_t timeout = HAL_GetTick() + Timeout;
 802c478:	f7fe fdda 	bl	802b030 <HAL_GetTick>
  while (((*reg_sr) & (FLASH_FLAG_BSY | FLASH_FLAG_WDW)) != 0U)
 802c47c:	4c10      	ldr	r4, [pc, #64]	; (802c4c0 <FLASH_WaitForLastOperation+0x4c>)
  uint32_t timeout = HAL_GetTick() + Timeout;
 802c47e:	1946      	adds	r6, r0, r5
  while (((*reg_sr) & (FLASH_FLAG_BSY | FLASH_FLAG_WDW)) != 0U)
 802c480:	6a23      	ldr	r3, [r4, #32]
 802c482:	f413 3f40 	tst.w	r3, #196608	; 0x30000
 802c486:	d10b      	bne.n	802c4a0 <FLASH_WaitForLastOperation+0x2c>
  error = ((*reg_sr) & FLASH_FLAG_SR_ERRORS);
 802c488:	f242 02fa 	movw	r2, #8442	; 0x20fa
 802c48c:	6a20      	ldr	r0, [r4, #32]
  if (error != 0U)
 802c48e:	4002      	ands	r2, r0
 802c490:	d00e      	beq.n	802c4b0 <FLASH_WaitForLastOperation+0x3c>
    return HAL_ERROR;
 802c492:	2001      	movs	r0, #1
    pFlash.ErrorCode |= error;
 802c494:	490b      	ldr	r1, [pc, #44]	; (802c4c4 <FLASH_WaitForLastOperation+0x50>)
 802c496:	684b      	ldr	r3, [r1, #4]
 802c498:	4313      	orrs	r3, r2
 802c49a:	604b      	str	r3, [r1, #4]
    (*reg_sr) = error;
 802c49c:	6222      	str	r2, [r4, #32]
}
 802c49e:	bd70      	pop	{r4, r5, r6, pc}
    if (Timeout != HAL_MAX_DELAY)
 802c4a0:	1c6b      	adds	r3, r5, #1
 802c4a2:	d0ed      	beq.n	802c480 <FLASH_WaitForLastOperation+0xc>
      if (HAL_GetTick() >= timeout)
 802c4a4:	f7fe fdc4 	bl	802b030 <HAL_GetTick>
 802c4a8:	42b0      	cmp	r0, r6
 802c4aa:	d3e9      	bcc.n	802c480 <FLASH_WaitForLastOperation+0xc>
        return HAL_TIMEOUT;
 802c4ac:	2003      	movs	r0, #3
 802c4ae:	e7f6      	b.n	802c49e <FLASH_WaitForLastOperation+0x2a>
  if (((*reg_sr) & FLASH_FLAG_EOP) != 0U)
 802c4b0:	6a20      	ldr	r0, [r4, #32]
 802c4b2:	f010 0001 	ands.w	r0, r0, #1
 802c4b6:	d0f2      	beq.n	802c49e <FLASH_WaitForLastOperation+0x2a>
    (*reg_sr) = FLASH_FLAG_EOP;
 802c4b8:	2301      	movs	r3, #1
 802c4ba:	4610      	mov	r0, r2
 802c4bc:	6223      	str	r3, [r4, #32]
 802c4be:	e7ee      	b.n	802c49e <FLASH_WaitForLastOperation+0x2a>
 802c4c0:	40022000 	.word	0x40022000
 802c4c4:	2000912c 	.word	0x2000912c

0802c4c8 <HAL_FLASH_Program>:
{
 802c4c8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
  assert_param(IS_FLASH_TYPEPROGRAM(TypeProgram));
 802c4ca:	f420 4380 	bic.w	r3, r0, #16384	; 0x4000
 802c4ce:	2b01      	cmp	r3, #1
{
 802c4d0:	4604      	mov	r4, r0
 802c4d2:	460e      	mov	r6, r1
 802c4d4:	4617      	mov	r7, r2
  assert_param(IS_FLASH_TYPEPROGRAM(TypeProgram));
 802c4d6:	d003      	beq.n	802c4e0 <HAL_FLASH_Program+0x18>
 802c4d8:	21b1      	movs	r1, #177	; 0xb1
 802c4da:	4815      	ldr	r0, [pc, #84]	; (802c530 <HAL_FLASH_Program+0x68>)
 802c4dc:	f7f9 fe5e 	bl	802619c <assert_failed>
  __HAL_LOCK(&pFlash);
 802c4e0:	4d14      	ldr	r5, [pc, #80]	; (802c534 <HAL_FLASH_Program+0x6c>)
 802c4e2:	782b      	ldrb	r3, [r5, #0]
 802c4e4:	2b01      	cmp	r3, #1
 802c4e6:	d020      	beq.n	802c52a <HAL_FLASH_Program+0x62>
 802c4e8:	2301      	movs	r3, #1
 802c4ea:	702b      	strb	r3, [r5, #0]
  pFlash.ErrorCode = HAL_FLASH_ERROR_NONE;
 802c4ec:	2300      	movs	r3, #0
  status = FLASH_WaitForLastOperation(FLASH_TIMEOUT_VALUE);
 802c4ee:	f44f 707a 	mov.w	r0, #1000	; 0x3e8
  pFlash.ErrorCode = HAL_FLASH_ERROR_NONE;
 802c4f2:	606b      	str	r3, [r5, #4]
  status = FLASH_WaitForLastOperation(FLASH_TIMEOUT_VALUE);
 802c4f4:	f7ff ffbe 	bl	802c474 <FLASH_WaitForLastOperation>
  if (status == HAL_OK)
 802c4f8:	b988      	cbnz	r0, 802c51e <HAL_FLASH_Program+0x56>
    pFlash.ProcedureOnGoing = TypeProgram;
 802c4fa:	60ac      	str	r4, [r5, #8]
    if ((TypeProgram & (~FLASH_NON_SECURE_MASK)) == FLASH_TYPEPROGRAM_QUADWORD)
 802c4fc:	f024 4400 	bic.w	r4, r4, #2147483648	; 0x80000000
 802c500:	2c01      	cmp	r4, #1
      FLASH_Program_QuadWord(Address, DataAddress);
 802c502:	4639      	mov	r1, r7
 802c504:	4630      	mov	r0, r6
    if ((TypeProgram & (~FLASH_NON_SECURE_MASK)) == FLASH_TYPEPROGRAM_QUADWORD)
 802c506:	d10d      	bne.n	802c524 <HAL_FLASH_Program+0x5c>
      FLASH_Program_QuadWord(Address, DataAddress);
 802c508:	f7ff ff28 	bl	802c35c <FLASH_Program_QuadWord>
    status = FLASH_WaitForLastOperation(FLASH_TIMEOUT_VALUE);
 802c50c:	f44f 707a 	mov.w	r0, #1000	; 0x3e8
 802c510:	f7ff ffb0 	bl	802c474 <FLASH_WaitForLastOperation>
    CLEAR_BIT((*reg_cr), (TypeProgram & ~(FLASH_NON_SECURE_MASK)));
 802c514:	4a08      	ldr	r2, [pc, #32]	; (802c538 <HAL_FLASH_Program+0x70>)
 802c516:	6a93      	ldr	r3, [r2, #40]	; 0x28
 802c518:	ea23 0404 	bic.w	r4, r3, r4
 802c51c:	6294      	str	r4, [r2, #40]	; 0x28
  __HAL_UNLOCK(&pFlash);
 802c51e:	2300      	movs	r3, #0
 802c520:	702b      	strb	r3, [r5, #0]
}
 802c522:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
      FLASH_Program_Burst(Address, DataAddress);
 802c524:	f7ff ff54 	bl	802c3d0 <FLASH_Program_Burst>
 802c528:	e7f0      	b.n	802c50c <HAL_FLASH_Program+0x44>
  __HAL_LOCK(&pFlash);
 802c52a:	2002      	movs	r0, #2
 802c52c:	e7f9      	b.n	802c522 <HAL_FLASH_Program+0x5a>
 802c52e:	bf00      	nop
 802c530:	08033bcf 	.word	0x08033bcf
 802c534:	2000912c 	.word	0x2000912c
 802c538:	40022000 	.word	0x40022000

0802c53c <FLASH_PageErase>:
void FLASH_PageErase(uint32_t Page)
{
  __IO uint32_t *reg_cr;

  /* Check the parameters */
  assert_param(IS_FLASH_PAGE(Page));
 802c53c:	f64f 71fd 	movw	r1, #65533	; 0xfffd
 802c540:	4b0f      	ldr	r3, [pc, #60]	; (802c580 <FLASH_PageErase+0x44>)
{
 802c542:	b510      	push	{r4, lr}
  assert_param(IS_FLASH_PAGE(Page));
 802c544:	f8b3 20a0 	ldrh.w	r2, [r3, #160]	; 0xa0
{
 802c548:	4604      	mov	r4, r0
  assert_param(IS_FLASH_PAGE(Page));
 802c54a:	1e53      	subs	r3, r2, #1
 802c54c:	b29b      	uxth	r3, r3
 802c54e:	428b      	cmp	r3, r1
 802c550:	bf8c      	ite	hi
 802c552:	2280      	movhi	r2, #128	; 0x80
 802c554:	08d2      	lsrls	r2, r2, #3
 802c556:	4282      	cmp	r2, r0
 802c558:	d804      	bhi.n	802c564 <FLASH_PageErase+0x28>
 802c55a:	f240 317e 	movw	r1, #894	; 0x37e
 802c55e:	4809      	ldr	r0, [pc, #36]	; (802c584 <FLASH_PageErase+0x48>)
 802c560:	f7f9 fe1c 	bl	802619c <assert_failed>
#else
  reg_cr = &(FLASH_NS->NSCR1);
#endif /* FLASH_SECCR1_LOCK */

  /* Proceed to erase the page */
  MODIFY_REG((*reg_cr), (FLASH_NSCR1_PNB | FLASH_NSCR1_PER | FLASH_NSCR1_STRT), ((Page << FLASH_NSCR1_PNB_Pos) | FLASH_NSCR1_PER | FLASH_NSCR1_STRT));
 802c564:	4908      	ldr	r1, [pc, #32]	; (802c588 <FLASH_PageErase+0x4c>)
 802c566:	6a8b      	ldr	r3, [r1, #40]	; 0x28
 802c568:	f423 3381 	bic.w	r3, r3, #66048	; 0x10200
 802c56c:	f423 73fd 	bic.w	r3, r3, #506	; 0x1fa
 802c570:	ea43 00c4 	orr.w	r0, r3, r4, lsl #3
 802c574:	f440 3080 	orr.w	r0, r0, #65536	; 0x10000
 802c578:	f040 0002 	orr.w	r0, r0, #2
 802c57c:	6288      	str	r0, [r1, #40]	; 0x28
}
 802c57e:	bd10      	pop	{r4, pc}
 802c580:	0bf90700 	.word	0x0bf90700
 802c584:	08033c3f 	.word	0x08033c3f
 802c588:	40022000 	.word	0x40022000

0802c58c <HAL_FLASHEx_Erase>:
  assert_param(IS_FLASH_TYPEERASE(pEraseInit->TypeErase));
 802c58c:	6803      	ldr	r3, [r0, #0]
{
 802c58e:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  assert_param(IS_FLASH_TYPEERASE(pEraseInit->TypeErase));
 802c592:	2b02      	cmp	r3, #2
{
 802c594:	4605      	mov	r5, r0
 802c596:	4688      	mov	r8, r1
  assert_param(IS_FLASH_TYPEERASE(pEraseInit->TypeErase));
 802c598:	d005      	beq.n	802c5a6 <HAL_FLASHEx_Erase+0x1a>
 802c59a:	2b04      	cmp	r3, #4
 802c59c:	d003      	beq.n	802c5a6 <HAL_FLASHEx_Erase+0x1a>
 802c59e:	21bc      	movs	r1, #188	; 0xbc
 802c5a0:	4824      	ldr	r0, [pc, #144]	; (802c634 <HAL_FLASHEx_Erase+0xa8>)
 802c5a2:	f7f9 fdfb 	bl	802619c <assert_failed>
  __HAL_LOCK(&pFlash);
 802c5a6:	4e24      	ldr	r6, [pc, #144]	; (802c638 <HAL_FLASHEx_Erase+0xac>)
 802c5a8:	7833      	ldrb	r3, [r6, #0]
 802c5aa:	2b01      	cmp	r3, #1
 802c5ac:	d03f      	beq.n	802c62e <HAL_FLASHEx_Erase+0xa2>
 802c5ae:	2301      	movs	r3, #1
 802c5b0:	7033      	strb	r3, [r6, #0]
  pFlash.ErrorCode = HAL_FLASH_ERROR_NONE;
 802c5b2:	2300      	movs	r3, #0
  status = FLASH_WaitForLastOperation(FLASH_TIMEOUT_VALUE);
 802c5b4:	f44f 707a 	mov.w	r0, #1000	; 0x3e8
  pFlash.ErrorCode = HAL_FLASH_ERROR_NONE;
 802c5b8:	6073      	str	r3, [r6, #4]
  status = FLASH_WaitForLastOperation(FLASH_TIMEOUT_VALUE);
 802c5ba:	f7ff ff5b 	bl	802c474 <FLASH_WaitForLastOperation>
  if (status == HAL_OK)
 802c5be:	4604      	mov	r4, r0
 802c5c0:	b9c8      	cbnz	r0, 802c5f6 <HAL_FLASHEx_Erase+0x6a>
    pFlash.ProcedureOnGoing = pEraseInit->TypeErase;
 802c5c2:	682b      	ldr	r3, [r5, #0]
 802c5c4:	60b3      	str	r3, [r6, #8]
    if ((pEraseInit->TypeErase & (~FLASH_NON_SECURE_MASK)) == FLASH_TYPEERASE_MASSERASE)
 802c5c6:	f023 4300 	bic.w	r3, r3, #2147483648	; 0x80000000
 802c5ca:	2b04      	cmp	r3, #4
 802c5cc:	d118      	bne.n	802c600 <HAL_FLASHEx_Erase+0x74>
  SET_BIT((*reg_cr), FLASH_NSCR1_MER | FLASH_NSCR1_STRT);
 802c5ce:	4a1b      	ldr	r2, [pc, #108]	; (802c63c <HAL_FLASHEx_Erase+0xb0>)
      status = FLASH_WaitForLastOperation(FLASH_TIMEOUT_VALUE);
 802c5d0:	f44f 707a 	mov.w	r0, #1000	; 0x3e8
  SET_BIT((*reg_cr), FLASH_NSCR1_MER | FLASH_NSCR1_STRT);
 802c5d4:	6a93      	ldr	r3, [r2, #40]	; 0x28
 802c5d6:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 802c5da:	f043 0304 	orr.w	r3, r3, #4
 802c5de:	6293      	str	r3, [r2, #40]	; 0x28
      status = FLASH_WaitForLastOperation(FLASH_TIMEOUT_VALUE);
 802c5e0:	f7ff ff48 	bl	802c474 <FLASH_WaitForLastOperation>
        status = FLASH_WaitForLastOperation(FLASH_TIMEOUT_VALUE);
 802c5e4:	4604      	mov	r4, r0
    CLEAR_BIT((*reg_cr), (pEraseInit->TypeErase) & (~(FLASH_NON_SECURE_MASK)));
 802c5e6:	4915      	ldr	r1, [pc, #84]	; (802c63c <HAL_FLASHEx_Erase+0xb0>)
 802c5e8:	682a      	ldr	r2, [r5, #0]
 802c5ea:	6a8b      	ldr	r3, [r1, #40]	; 0x28
 802c5ec:	f022 4200 	bic.w	r2, r2, #2147483648	; 0x80000000
 802c5f0:	ea23 0302 	bic.w	r3, r3, r2
 802c5f4:	628b      	str	r3, [r1, #40]	; 0x28
  __HAL_UNLOCK(&pFlash);
 802c5f6:	2300      	movs	r3, #0
 802c5f8:	7033      	strb	r3, [r6, #0]
}
 802c5fa:	4620      	mov	r0, r4
 802c5fc:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
      *PageError = 0xFFFFFFFFU;
 802c600:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
 802c604:	f8c8 3000 	str.w	r3, [r8]
      for (page_index = pEraseInit->Page; page_index < (pEraseInit->Page + pEraseInit->NbPages); page_index++)
 802c608:	686f      	ldr	r7, [r5, #4]
 802c60a:	e9d5 3201 	ldrd	r3, r2, [r5, #4]
 802c60e:	4413      	add	r3, r2
 802c610:	42bb      	cmp	r3, r7
 802c612:	d9e8      	bls.n	802c5e6 <HAL_FLASHEx_Erase+0x5a>
        FLASH_PageErase(page_index);
 802c614:	4638      	mov	r0, r7
 802c616:	f7ff ff91 	bl	802c53c <FLASH_PageErase>
        status = FLASH_WaitForLastOperation(FLASH_TIMEOUT_VALUE);
 802c61a:	f44f 707a 	mov.w	r0, #1000	; 0x3e8
 802c61e:	f7ff ff29 	bl	802c474 <FLASH_WaitForLastOperation>
        if (status != HAL_OK)
 802c622:	b110      	cbz	r0, 802c62a <HAL_FLASHEx_Erase+0x9e>
          *PageError = page_index;
 802c624:	f8c8 7000 	str.w	r7, [r8]
 802c628:	e7dc      	b.n	802c5e4 <HAL_FLASHEx_Erase+0x58>
      for (page_index = pEraseInit->Page; page_index < (pEraseInit->Page + pEraseInit->NbPages); page_index++)
 802c62a:	3701      	adds	r7, #1
 802c62c:	e7ed      	b.n	802c60a <HAL_FLASHEx_Erase+0x7e>
  __HAL_LOCK(&pFlash);
 802c62e:	2402      	movs	r4, #2
 802c630:	e7e3      	b.n	802c5fa <HAL_FLASHEx_Erase+0x6e>
 802c632:	bf00      	nop
 802c634:	08033c3f 	.word	0x08033c3f
 802c638:	2000912c 	.word	0x2000912c
 802c63c:	40022000 	.word	0x40022000

0802c640 <HAL_GPIO_Init>:
  * @param  GPIO_Init pointer to a GPIO_InitTypeDef structure that contains
  *         the configuration information for the specified GPIO peripheral.
  * @retval None
  */
void HAL_GPIO_Init(GPIO_TypeDef  *GPIOx, const GPIO_InitTypeDef *GPIO_Init)
{
 802c640:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
  uint32_t position = 0x00u;
  uint32_t iocurrent;
  uint32_t temp;

  /* Check the parameters */
  assert_param(IS_GPIO_ALL_INSTANCE(GPIOx));
 802c644:	4b7d      	ldr	r3, [pc, #500]	; (802c83c <HAL_GPIO_Init+0x1fc>)
{
 802c646:	4604      	mov	r4, r0
  assert_param(IS_GPIO_ALL_INSTANCE(GPIOx));
 802c648:	4298      	cmp	r0, r3
{
 802c64a:	460d      	mov	r5, r1
  assert_param(IS_GPIO_ALL_INSTANCE(GPIOx));
 802c64c:	d00f      	beq.n	802c66e <HAL_GPIO_Init+0x2e>
 802c64e:	f503 6380 	add.w	r3, r3, #1024	; 0x400
 802c652:	4298      	cmp	r0, r3
 802c654:	d00b      	beq.n	802c66e <HAL_GPIO_Init+0x2e>
 802c656:	f503 6380 	add.w	r3, r3, #1024	; 0x400
 802c65a:	4298      	cmp	r0, r3
 802c65c:	d007      	beq.n	802c66e <HAL_GPIO_Init+0x2e>
 802c65e:	f503 53a0 	add.w	r3, r3, #5120	; 0x1400
 802c662:	4298      	cmp	r0, r3
 802c664:	d003      	beq.n	802c66e <HAL_GPIO_Init+0x2e>
 802c666:	21af      	movs	r1, #175	; 0xaf
 802c668:	4875      	ldr	r0, [pc, #468]	; (802c840 <HAL_GPIO_Init+0x200>)
 802c66a:	f7f9 fd97 	bl	802619c <assert_failed>
  assert_param(IS_GPIO_PIN(GPIO_Init->Pin));
 802c66e:	682b      	ldr	r3, [r5, #0]
 802c670:	b29a      	uxth	r2, r3
 802c672:	b112      	cbz	r2, 802c67a <HAL_GPIO_Init+0x3a>
 802c674:	0c1b      	lsrs	r3, r3, #16
 802c676:	041b      	lsls	r3, r3, #16
 802c678:	b11b      	cbz	r3, 802c682 <HAL_GPIO_Init+0x42>
 802c67a:	21b0      	movs	r1, #176	; 0xb0
 802c67c:	4870      	ldr	r0, [pc, #448]	; (802c840 <HAL_GPIO_Init+0x200>)
 802c67e:	f7f9 fd8d 	bl	802619c <assert_failed>
  assert_param(IS_GPIO_MODE(GPIO_Init->Mode));
 802c682:	686b      	ldr	r3, [r5, #4]
 802c684:	2b03      	cmp	r3, #3
 802c686:	d915      	bls.n	802c6b4 <HAL_GPIO_Init+0x74>
 802c688:	f1a3 0211 	sub.w	r2, r3, #17
 802c68c:	2a01      	cmp	r2, #1
 802c68e:	d911      	bls.n	802c6b4 <HAL_GPIO_Init+0x74>
 802c690:	f423 1200 	bic.w	r2, r3, #2097152	; 0x200000
 802c694:	f5b2 1f88 	cmp.w	r2, #1114112	; 0x110000
 802c698:	d00c      	beq.n	802c6b4 <HAL_GPIO_Init+0x74>
 802c69a:	f5b3 1f04 	cmp.w	r3, #2162688	; 0x210000
 802c69e:	d009      	beq.n	802c6b4 <HAL_GPIO_Init+0x74>
 802c6a0:	f5b2 1f90 	cmp.w	r2, #1179648	; 0x120000
 802c6a4:	d006      	beq.n	802c6b4 <HAL_GPIO_Init+0x74>
 802c6a6:	f5b3 1f08 	cmp.w	r3, #2228224	; 0x220000
 802c6aa:	d003      	beq.n	802c6b4 <HAL_GPIO_Init+0x74>
 802c6ac:	21b1      	movs	r1, #177	; 0xb1
 802c6ae:	4864      	ldr	r0, [pc, #400]	; (802c840 <HAL_GPIO_Init+0x200>)
 802c6b0:	f7f9 fd74 	bl	802619c <assert_failed>
      /* Configure the External Interrupt or event for the current IO */
      if ((GPIO_Init->Mode & EXTI_MODE) != 0x00u)
      {
        temp = EXTI->EXTICR[position >> 2u];
        temp &= ~(0x0FuL << (8u * (position & 0x03u)));
        temp |= (GPIO_GET_INDEX(GPIOx) << (8u * (position & 0x03u)));
 802c6b4:	2600      	movs	r6, #0
 802c6b6:	4b63      	ldr	r3, [pc, #396]	; (802c844 <HAL_GPIO_Init+0x204>)
        EXTI->EXTICR[position >> 2u] = temp;

        /* Clear Rising Falling edge configuration */
        temp = EXTI->RTSR1;
 802c6b8:	f8df 818c 	ldr.w	r8, [pc, #396]	; 802c848 <HAL_GPIO_Init+0x208>
        temp |= (GPIO_GET_INDEX(GPIOx) << (8u * (position & 0x03u)));
 802c6bc:	ea03 2994 	and.w	r9, r3, r4, lsr #10
  while (((GPIO_Init->Pin) >> position) != 0x00u)
 802c6c0:	682f      	ldr	r7, [r5, #0]
 802c6c2:	fa37 f306 	lsrs.w	r3, r7, r6
 802c6c6:	d101      	bne.n	802c6cc <HAL_GPIO_Init+0x8c>
      }
    }

    position++;
  }
}
 802c6c8:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
    iocurrent = (GPIO_Init->Pin) & (1uL << position);
 802c6cc:	2301      	movs	r3, #1
 802c6ce:	fa03 fa06 	lsl.w	sl, r3, r6
    if (iocurrent != 0x00u)
 802c6d2:	ea1a 0707 	ands.w	r7, sl, r7
 802c6d6:	f000 80ae 	beq.w	802c836 <HAL_GPIO_Init+0x1f6>
      if (((GPIO_Init->Mode & GPIO_MODE) == MODE_OUTPUT) || ((GPIO_Init->Mode & GPIO_MODE) == MODE_AF))
 802c6da:	686a      	ldr	r2, [r5, #4]
 802c6dc:	fa06 fb03 	lsl.w	fp, r6, r3
 802c6e0:	f002 0203 	and.w	r2, r2, #3
 802c6e4:	3a01      	subs	r2, #1
 802c6e6:	429a      	cmp	r2, r3
 802c6e8:	d81a      	bhi.n	802c720 <HAL_GPIO_Init+0xe0>
        assert_param(IS_GPIO_SPEED(GPIO_Init->Speed));
 802c6ea:	68ea      	ldr	r2, [r5, #12]
 802c6ec:	2a02      	cmp	r2, #2
 802c6ee:	d903      	bls.n	802c6f8 <HAL_GPIO_Init+0xb8>
 802c6f0:	21c0      	movs	r1, #192	; 0xc0
 802c6f2:	4853      	ldr	r0, [pc, #332]	; (802c840 <HAL_GPIO_Init+0x200>)
 802c6f4:	f7f9 fd52 	bl	802619c <assert_failed>
        temp &= ~(GPIO_OSPEEDR_OSPEED0 << (position * 2u));
 802c6f8:	2103      	movs	r1, #3
        temp = GPIOx->OSPEEDR;
 802c6fa:	68a2      	ldr	r2, [r4, #8]
        temp &= ~(GPIO_OSPEEDR_OSPEED0 << (position * 2u));
 802c6fc:	fa01 f10b 	lsl.w	r1, r1, fp
 802c700:	ea22 0101 	bic.w	r1, r2, r1
        temp |= (GPIO_Init->Speed << (position * 2u));
 802c704:	68ea      	ldr	r2, [r5, #12]
        temp |= (((GPIO_Init->Mode & OUTPUT_TYPE) >> OUTPUT_TYPE_Pos) << position);
 802c706:	686b      	ldr	r3, [r5, #4]
        temp |= (GPIO_Init->Speed << (position * 2u));
 802c708:	fa02 f20b 	lsl.w	r2, r2, fp
 802c70c:	430a      	orrs	r2, r1
        GPIOx->OSPEEDR = temp;
 802c70e:	60a2      	str	r2, [r4, #8]
        temp = GPIOx->OTYPER;
 802c710:	6862      	ldr	r2, [r4, #4]
        temp |= (((GPIO_Init->Mode & OUTPUT_TYPE) >> OUTPUT_TYPE_Pos) << position);
 802c712:	f3c3 1300 	ubfx	r3, r3, #4, #1
        temp &= ~(GPIO_OTYPER_OT0 << position) ;
 802c716:	ea22 020a 	bic.w	r2, r2, sl
        temp |= (((GPIO_Init->Mode & OUTPUT_TYPE) >> OUTPUT_TYPE_Pos) << position);
 802c71a:	40b3      	lsls	r3, r6
 802c71c:	4313      	orrs	r3, r2
        GPIOx->OTYPER = temp;
 802c71e:	6063      	str	r3, [r4, #4]
      if ((GPIO_Init->Mode & GPIO_MODE) != MODE_ANALOG)
 802c720:	686b      	ldr	r3, [r5, #4]
 802c722:	f003 0303 	and.w	r3, r3, #3
 802c726:	2b03      	cmp	r3, #3
 802c728:	d03f      	beq.n	802c7aa <HAL_GPIO_Init+0x16a>
        assert_param(IS_GPIO_PULL(GPIO_Init->Pull));
 802c72a:	68ab      	ldr	r3, [r5, #8]
 802c72c:	2b02      	cmp	r3, #2
 802c72e:	d903      	bls.n	802c738 <HAL_GPIO_Init+0xf8>
 802c730:	21d2      	movs	r1, #210	; 0xd2
 802c732:	4843      	ldr	r0, [pc, #268]	; (802c840 <HAL_GPIO_Init+0x200>)
 802c734:	f7f9 fd32 	bl	802619c <assert_failed>
        temp &= ~(GPIO_PUPDR_PUPD0 << (position * 2u));
 802c738:	2203      	movs	r2, #3
        temp = GPIOx->PUPDR;
 802c73a:	68e3      	ldr	r3, [r4, #12]
        temp &= ~(GPIO_PUPDR_PUPD0 << (position * 2u));
 802c73c:	fa02 f20b 	lsl.w	r2, r2, fp
 802c740:	ea23 0202 	bic.w	r2, r3, r2
        temp |= ((GPIO_Init->Pull) << (position * 2u));
 802c744:	68ab      	ldr	r3, [r5, #8]
 802c746:	fa03 f30b 	lsl.w	r3, r3, fp
 802c74a:	4313      	orrs	r3, r2
        GPIOx->PUPDR = temp;
 802c74c:	60e3      	str	r3, [r4, #12]
      if ((GPIO_Init->Mode & GPIO_MODE) == MODE_AF)
 802c74e:	686b      	ldr	r3, [r5, #4]
 802c750:	f003 0303 	and.w	r3, r3, #3
 802c754:	2b02      	cmp	r3, #2
 802c756:	d128      	bne.n	802c7aa <HAL_GPIO_Init+0x16a>
        assert_param(IS_GPIO_AF_INSTANCE(GPIOx));
 802c758:	4b38      	ldr	r3, [pc, #224]	; (802c83c <HAL_GPIO_Init+0x1fc>)
 802c75a:	429c      	cmp	r4, r3
 802c75c:	d00f      	beq.n	802c77e <HAL_GPIO_Init+0x13e>
 802c75e:	f503 6380 	add.w	r3, r3, #1024	; 0x400
 802c762:	429c      	cmp	r4, r3
 802c764:	d00b      	beq.n	802c77e <HAL_GPIO_Init+0x13e>
 802c766:	f503 6380 	add.w	r3, r3, #1024	; 0x400
 802c76a:	429c      	cmp	r4, r3
 802c76c:	d007      	beq.n	802c77e <HAL_GPIO_Init+0x13e>
 802c76e:	f503 53a0 	add.w	r3, r3, #5120	; 0x1400
 802c772:	429c      	cmp	r4, r3
 802c774:	d003      	beq.n	802c77e <HAL_GPIO_Init+0x13e>
 802c776:	21df      	movs	r1, #223	; 0xdf
 802c778:	4831      	ldr	r0, [pc, #196]	; (802c840 <HAL_GPIO_Init+0x200>)
 802c77a:	f7f9 fd0f 	bl	802619c <assert_failed>
        assert_param(IS_GPIO_AF(GPIO_Init->Alternate));
 802c77e:	692b      	ldr	r3, [r5, #16]
 802c780:	2b0f      	cmp	r3, #15
 802c782:	d903      	bls.n	802c78c <HAL_GPIO_Init+0x14c>
 802c784:	21e0      	movs	r1, #224	; 0xe0
 802c786:	482e      	ldr	r0, [pc, #184]	; (802c840 <HAL_GPIO_Init+0x200>)
 802c788:	f7f9 fd08 	bl	802619c <assert_failed>
        temp &= ~(0xFu << ((position & 0x07u) * 4u));
 802c78c:	f006 0307 	and.w	r3, r6, #7
 802c790:	0099      	lsls	r1, r3, #2
 802c792:	230f      	movs	r3, #15
        temp = GPIOx->AFR[position >> 3u];
 802c794:	08f2      	lsrs	r2, r6, #3
 802c796:	eb04 0282 	add.w	r2, r4, r2, lsl #2
 802c79a:	6a10      	ldr	r0, [r2, #32]
        temp &= ~(0xFu << ((position & 0x07u) * 4u));
 802c79c:	408b      	lsls	r3, r1
 802c79e:	ea20 0003 	bic.w	r0, r0, r3
        temp |= ((GPIO_Init->Alternate) << ((position & 0x07u) * 4u));
 802c7a2:	692b      	ldr	r3, [r5, #16]
 802c7a4:	408b      	lsls	r3, r1
 802c7a6:	4303      	orrs	r3, r0
        GPIOx->AFR[position >> 3u] = temp;
 802c7a8:	6213      	str	r3, [r2, #32]
      temp &= ~(GPIO_MODER_MODE0 << (position * 2u));
 802c7aa:	2103      	movs	r1, #3
      temp = GPIOx->MODER;
 802c7ac:	6823      	ldr	r3, [r4, #0]
      temp |= ((GPIO_Init->Mode & GPIO_MODE) << (position * 2u));
 802c7ae:	686a      	ldr	r2, [r5, #4]
      temp &= ~(GPIO_MODER_MODE0 << (position * 2u));
 802c7b0:	fa01 f10b 	lsl.w	r1, r1, fp
 802c7b4:	ea23 0101 	bic.w	r1, r3, r1
      temp |= ((GPIO_Init->Mode & GPIO_MODE) << (position * 2u));
 802c7b8:	f002 0303 	and.w	r3, r2, #3
 802c7bc:	fa03 fb0b 	lsl.w	fp, r3, fp
 802c7c0:	ea4b 0101 	orr.w	r1, fp, r1
      if ((GPIO_Init->Mode & EXTI_MODE) != 0x00u)
 802c7c4:	f412 3f40 	tst.w	r2, #196608	; 0x30000
      GPIOx->MODER = temp;
 802c7c8:	6021      	str	r1, [r4, #0]
      if ((GPIO_Init->Mode & EXTI_MODE) != 0x00u)
 802c7ca:	d034      	beq.n	802c836 <HAL_GPIO_Init+0x1f6>
        temp &= ~(0x0FuL << (8u * (position & 0x03u)));
 802c7cc:	f04f 0c0f 	mov.w	ip, #15
 802c7d0:	f026 0103 	bic.w	r1, r6, #3
 802c7d4:	f101 418c 	add.w	r1, r1, #1174405120	; 0x46000000
 802c7d8:	f501 3108 	add.w	r1, r1, #139264	; 0x22000
 802c7dc:	f006 0303 	and.w	r3, r6, #3
        temp = EXTI->EXTICR[position >> 2u];
 802c7e0:	6e08      	ldr	r0, [r1, #96]	; 0x60
        temp &= ~(0x0FuL << (8u * (position & 0x03u)));
 802c7e2:	00db      	lsls	r3, r3, #3
 802c7e4:	fa0c fc03 	lsl.w	ip, ip, r3
 802c7e8:	ea20 000c 	bic.w	r0, r0, ip
        temp |= (GPIO_GET_INDEX(GPIOx) << (8u * (position & 0x03u)));
 802c7ec:	fa09 f303 	lsl.w	r3, r9, r3
 802c7f0:	4303      	orrs	r3, r0
        EXTI->EXTICR[position >> 2u] = temp;
 802c7f2:	660b      	str	r3, [r1, #96]	; 0x60
        temp &= ~(iocurrent);
 802c7f4:	43f9      	mvns	r1, r7
        temp = EXTI->RTSR1;
 802c7f6:	f8d8 3000 	ldr.w	r3, [r8]
        if ((GPIO_Init->Mode & TRIGGER_RISING) != 0x00u)
 802c7fa:	02d0      	lsls	r0, r2, #11
        temp &= ~(iocurrent);
 802c7fc:	bf54      	ite	pl
 802c7fe:	400b      	andpl	r3, r1
          temp |= iocurrent;
 802c800:	433b      	orrmi	r3, r7
        EXTI->RTSR1 = temp;
 802c802:	f8c8 3000 	str.w	r3, [r8]
        temp = EXTI->FTSR1;
 802c806:	f8d8 3004 	ldr.w	r3, [r8, #4]
        if ((GPIO_Init->Mode & TRIGGER_FALLING) != 0x00u)
 802c80a:	0290      	lsls	r0, r2, #10
        temp &= ~(iocurrent);
 802c80c:	bf54      	ite	pl
 802c80e:	400b      	andpl	r3, r1
          temp |= iocurrent;
 802c810:	433b      	orrmi	r3, r7
        EXTI->FTSR1 = temp;
 802c812:	f8c8 3004 	str.w	r3, [r8, #4]
        temp = EXTI->EMR1;
 802c816:	f8d8 3084 	ldr.w	r3, [r8, #132]	; 0x84
        if ((GPIO_Init->Mode & EXTI_EVT) != 0x00u)
 802c81a:	0390      	lsls	r0, r2, #14
        temp &= ~(iocurrent);
 802c81c:	bf54      	ite	pl
 802c81e:	400b      	andpl	r3, r1
          temp |= iocurrent;
 802c820:	433b      	orrmi	r3, r7
        EXTI->EMR1 = temp;
 802c822:	f8c8 3084 	str.w	r3, [r8, #132]	; 0x84
        temp = EXTI->IMR1;
 802c826:	f8d8 3080 	ldr.w	r3, [r8, #128]	; 0x80
        if ((GPIO_Init->Mode & EXTI_IT) != 0x00u)
 802c82a:	03d2      	lsls	r2, r2, #15
        temp &= ~(iocurrent);
 802c82c:	bf54      	ite	pl
 802c82e:	400b      	andpl	r3, r1
          temp |= iocurrent;
 802c830:	433b      	orrmi	r3, r7
        EXTI->IMR1 = temp;
 802c832:	f8c8 3080 	str.w	r3, [r8, #128]	; 0x80
    position++;
 802c836:	3601      	adds	r6, #1
 802c838:	e742      	b.n	802c6c0 <HAL_GPIO_Init+0x80>
 802c83a:	bf00      	nop
 802c83c:	42020000 	.word	0x42020000
 802c840:	08033cb2 	.word	0x08033cb2
 802c844:	002f7f7f 	.word	0x002f7f7f
 802c848:	46022000 	.word	0x46022000

0802c84c <HAL_GPIO_DeInit>:
  * @param  GPIO_Pin specifies the port bit to be written.
  *         This parameter can be any combination of GPIO_Pin_x where x can be (0..15).
  * @retval None
  */
void HAL_GPIO_DeInit(GPIO_TypeDef  *GPIOx, uint32_t GPIO_Pin)
{
 802c84c:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
  uint32_t position = 0x00u;
  uint32_t iocurrent;
  uint32_t tmp;

  /* Check the parameters */
  assert_param(IS_GPIO_ALL_INSTANCE(GPIOx));
 802c850:	4b40      	ldr	r3, [pc, #256]	; (802c954 <HAL_GPIO_DeInit+0x108>)
{
 802c852:	4604      	mov	r4, r0
  assert_param(IS_GPIO_ALL_INSTANCE(GPIOx));
 802c854:	4298      	cmp	r0, r3
{
 802c856:	460d      	mov	r5, r1
  assert_param(IS_GPIO_ALL_INSTANCE(GPIOx));
 802c858:	d010      	beq.n	802c87c <HAL_GPIO_DeInit+0x30>
 802c85a:	f503 6380 	add.w	r3, r3, #1024	; 0x400
 802c85e:	4298      	cmp	r0, r3
 802c860:	d00c      	beq.n	802c87c <HAL_GPIO_DeInit+0x30>
 802c862:	f503 6380 	add.w	r3, r3, #1024	; 0x400
 802c866:	4298      	cmp	r0, r3
 802c868:	d008      	beq.n	802c87c <HAL_GPIO_DeInit+0x30>
 802c86a:	f503 53a0 	add.w	r3, r3, #5120	; 0x1400
 802c86e:	4298      	cmp	r0, r3
 802c870:	d004      	beq.n	802c87c <HAL_GPIO_DeInit+0x30>
 802c872:	f44f 7197 	mov.w	r1, #302	; 0x12e
 802c876:	4838      	ldr	r0, [pc, #224]	; (802c958 <HAL_GPIO_DeInit+0x10c>)
 802c878:	f7f9 fc90 	bl	802619c <assert_failed>
  assert_param(IS_GPIO_PIN(GPIO_Pin));
 802c87c:	b2ab      	uxth	r3, r5
 802c87e:	b113      	cbz	r3, 802c886 <HAL_GPIO_DeInit+0x3a>
 802c880:	0c2b      	lsrs	r3, r5, #16
 802c882:	041b      	lsls	r3, r3, #16
 802c884:	b123      	cbz	r3, 802c890 <HAL_GPIO_DeInit+0x44>
 802c886:	f240 112f 	movw	r1, #303	; 0x12f
 802c88a:	4833      	ldr	r0, [pc, #204]	; (802c958 <HAL_GPIO_DeInit+0x10c>)
 802c88c:	f7f9 fc86 	bl	802619c <assert_failed>
      /*------------------------- EXTI Mode Configuration --------------------*/
      /* Clear the External Interrupt or Event for the current IO */

      tmp = EXTI->EXTICR[position >> 2u];
      tmp &= (0x0FuL << (8u * (position & 0x03u)));
      if (tmp == (GPIO_GET_INDEX(GPIOx) << (8u * (position & 0x03u))))
 802c890:	2300      	movs	r3, #0
    iocurrent = (GPIO_Pin) & (1uL << position);
 802c892:	f04f 0801 	mov.w	r8, #1
      tmp &= (0x0FuL << (8u * (position & 0x03u)));
 802c896:	f04f 0e0f 	mov.w	lr, #15
        EXTI->EXTICR[position >> 2u] &= ~tmp;
      }

      /*------------------------- GPIO Mode Configuration --------------------*/
      /* Configure IO in Analog Mode */
      GPIOx->MODER |= (GPIO_MODER_MODE0 << (position * 2u));
 802c89a:	f04f 0903 	mov.w	r9, #3
      if (tmp == (GPIO_GET_INDEX(GPIOx) << (8u * (position & 0x03u))))
 802c89e:	4f2f      	ldr	r7, [pc, #188]	; (802c95c <HAL_GPIO_DeInit+0x110>)
        EXTI->IMR1 &= ~(iocurrent);
 802c8a0:	4a2f      	ldr	r2, [pc, #188]	; (802c960 <HAL_GPIO_DeInit+0x114>)
      if (tmp == (GPIO_GET_INDEX(GPIOx) << (8u * (position & 0x03u))))
 802c8a2:	ea07 2794 	and.w	r7, r7, r4, lsr #10
  while ((GPIO_Pin >> position) != 0x00u)
 802c8a6:	fa35 f103 	lsrs.w	r1, r5, r3
 802c8aa:	d101      	bne.n	802c8b0 <HAL_GPIO_DeInit+0x64>
      GPIOx->PUPDR &= ~(GPIO_PUPDR_PUPD0 << (position * 2u));
    }

    position++;
  }
}
 802c8ac:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
    iocurrent = (GPIO_Pin) & (1uL << position);
 802c8b0:	fa08 fc03 	lsl.w	ip, r8, r3
    if (iocurrent != 0x00u)
 802c8b4:	ea1c 0605 	ands.w	r6, ip, r5
 802c8b8:	d049      	beq.n	802c94e <HAL_GPIO_DeInit+0x102>
      tmp = EXTI->EXTICR[position >> 2u];
 802c8ba:	f023 0103 	bic.w	r1, r3, #3
 802c8be:	f101 418c 	add.w	r1, r1, #1174405120	; 0x46000000
 802c8c2:	f501 3108 	add.w	r1, r1, #139264	; 0x22000
      tmp &= (0x0FuL << (8u * (position & 0x03u)));
 802c8c6:	f003 0003 	and.w	r0, r3, #3
 802c8ca:	00c0      	lsls	r0, r0, #3
      tmp = EXTI->EXTICR[position >> 2u];
 802c8cc:	f8d1 a060 	ldr.w	sl, [r1, #96]	; 0x60
      tmp &= (0x0FuL << (8u * (position & 0x03u)));
 802c8d0:	fa0e fb00 	lsl.w	fp, lr, r0
 802c8d4:	ea0b 0a0a 	and.w	sl, fp, sl
      if (tmp == (GPIO_GET_INDEX(GPIOx) << (8u * (position & 0x03u))))
 802c8d8:	fa07 f000 	lsl.w	r0, r7, r0
 802c8dc:	4550      	cmp	r0, sl
 802c8de:	d117      	bne.n	802c910 <HAL_GPIO_DeInit+0xc4>
        EXTI->IMR1 &= ~(iocurrent);
 802c8e0:	f8d2 0080 	ldr.w	r0, [r2, #128]	; 0x80
 802c8e4:	ea20 0006 	bic.w	r0, r0, r6
 802c8e8:	f8c2 0080 	str.w	r0, [r2, #128]	; 0x80
        EXTI->EMR1 &= ~(iocurrent);
 802c8ec:	f8d2 0084 	ldr.w	r0, [r2, #132]	; 0x84
 802c8f0:	ea20 0006 	bic.w	r0, r0, r6
 802c8f4:	f8c2 0084 	str.w	r0, [r2, #132]	; 0x84
        EXTI->FTSR1 &= ~(iocurrent);
 802c8f8:	6850      	ldr	r0, [r2, #4]
 802c8fa:	ea20 0006 	bic.w	r0, r0, r6
 802c8fe:	6050      	str	r0, [r2, #4]
        EXTI->RTSR1 &= ~(iocurrent);
 802c900:	6810      	ldr	r0, [r2, #0]
 802c902:	ea20 0606 	bic.w	r6, r0, r6
 802c906:	6016      	str	r6, [r2, #0]
        EXTI->EXTICR[position >> 2u] &= ~tmp;
 802c908:	6e08      	ldr	r0, [r1, #96]	; 0x60
 802c90a:	ea20 000b 	bic.w	r0, r0, fp
 802c90e:	6608      	str	r0, [r1, #96]	; 0x60
      GPIOx->MODER |= (GPIO_MODER_MODE0 << (position * 2u));
 802c910:	6820      	ldr	r0, [r4, #0]
 802c912:	0059      	lsls	r1, r3, #1
 802c914:	fa09 f101 	lsl.w	r1, r9, r1
 802c918:	4308      	orrs	r0, r1
      GPIOx->AFR[position >> 3u] &= ~(0xFu << ((position & 0x07u) * 4u)) ;
 802c91a:	08de      	lsrs	r6, r3, #3
      GPIOx->MODER |= (GPIO_MODER_MODE0 << (position * 2u));
 802c91c:	6020      	str	r0, [r4, #0]
      GPIOx->AFR[position >> 3u] &= ~(0xFu << ((position & 0x07u) * 4u)) ;
 802c91e:	eb04 0686 	add.w	r6, r4, r6, lsl #2
 802c922:	f003 0007 	and.w	r0, r3, #7
 802c926:	f8d6 a020 	ldr.w	sl, [r6, #32]
 802c92a:	0080      	lsls	r0, r0, #2
 802c92c:	fa0e f000 	lsl.w	r0, lr, r0
 802c930:	ea2a 0000 	bic.w	r0, sl, r0
 802c934:	6230      	str	r0, [r6, #32]
      GPIOx->OSPEEDR &= ~(GPIO_OSPEEDR_OSPEED0 << (position * 2u));
 802c936:	68a0      	ldr	r0, [r4, #8]
 802c938:	ea20 0001 	bic.w	r0, r0, r1
 802c93c:	60a0      	str	r0, [r4, #8]
      GPIOx->OTYPER  &= ~(GPIO_OTYPER_OT0 << position) ;
 802c93e:	6860      	ldr	r0, [r4, #4]
 802c940:	ea20 000c 	bic.w	r0, r0, ip
 802c944:	6060      	str	r0, [r4, #4]
      GPIOx->PUPDR &= ~(GPIO_PUPDR_PUPD0 << (position * 2u));
 802c946:	68e0      	ldr	r0, [r4, #12]
 802c948:	ea20 0101 	bic.w	r1, r0, r1
 802c94c:	60e1      	str	r1, [r4, #12]
    position++;
 802c94e:	3301      	adds	r3, #1
 802c950:	e7a9      	b.n	802c8a6 <HAL_GPIO_DeInit+0x5a>
 802c952:	bf00      	nop
 802c954:	42020000 	.word	0x42020000
 802c958:	08033cb2 	.word	0x08033cb2
 802c95c:	002f7f7f 	.word	0x002f7f7f
 802c960:	46022000 	.word	0x46022000

0802c964 <HAL_GPIO_WritePin>:
  *            @arg GPIO_PIN_RESET: to clear the port pin
  *            @arg GPIO_PIN_SET: to set the port pin
  * @retval None
  */
void HAL_GPIO_WritePin(GPIO_TypeDef *GPIOx, uint16_t GPIO_Pin, GPIO_PinState PinState)
{
 802c964:	b570      	push	{r4, r5, r6, lr}
 802c966:	4605      	mov	r5, r0
 802c968:	4616      	mov	r6, r2
  /* Check the parameters */
  assert_param(IS_GPIO_PIN(GPIO_Pin));
 802c96a:	460c      	mov	r4, r1
 802c96c:	b921      	cbnz	r1, 802c978 <HAL_GPIO_WritePin+0x14>
 802c96e:	f240 119b 	movw	r1, #411	; 0x19b
 802c972:	4808      	ldr	r0, [pc, #32]	; (802c994 <HAL_GPIO_WritePin+0x30>)
 802c974:	f7f9 fc12 	bl	802619c <assert_failed>
  assert_param(IS_GPIO_PIN_ACTION(PinState));
 802c978:	2e01      	cmp	r6, #1
 802c97a:	d906      	bls.n	802c98a <HAL_GPIO_WritePin+0x26>
 802c97c:	f44f 71ce 	mov.w	r1, #412	; 0x19c
 802c980:	4804      	ldr	r0, [pc, #16]	; (802c994 <HAL_GPIO_WritePin+0x30>)
 802c982:	f7f9 fc0b 	bl	802619c <assert_failed>

  if (PinState != GPIO_PIN_RESET)
  {
    GPIOx->BSRR = (uint32_t)GPIO_Pin;
 802c986:	61ac      	str	r4, [r5, #24]
  }
  else
  {
    GPIOx->BRR = (uint32_t)GPIO_Pin;
  }
}
 802c988:	bd70      	pop	{r4, r5, r6, pc}
  if (PinState != GPIO_PIN_RESET)
 802c98a:	2e00      	cmp	r6, #0
 802c98c:	d1fb      	bne.n	802c986 <HAL_GPIO_WritePin+0x22>
    GPIOx->BRR = (uint32_t)GPIO_Pin;
 802c98e:	62ac      	str	r4, [r5, #40]	; 0x28
}
 802c990:	e7fa      	b.n	802c988 <HAL_GPIO_WritePin+0x24>
 802c992:	bf00      	nop
 802c994:	08033cb2 	.word	0x08033cb2

0802c998 <HAL_GPIO_EXTI_IRQHandler>:
  * @brief  Handle EXTI interrupt request.
  * @param  GPIO_Pin Specifies the port pin connected to corresponding EXTI line.
  * @retval None
  */
void HAL_GPIO_EXTI_IRQHandler(uint16_t GPIO_Pin)
{
 802c998:	b538      	push	{r3, r4, r5, lr}
  /* EXTI line interrupt detected */
  if (__HAL_GPIO_EXTI_GET_RISING_IT(GPIO_Pin) != 0x00u)
 802c99a:	4d08      	ldr	r5, [pc, #32]	; (802c9bc <HAL_GPIO_EXTI_IRQHandler+0x24>)
{
 802c99c:	4604      	mov	r4, r0
  if (__HAL_GPIO_EXTI_GET_RISING_IT(GPIO_Pin) != 0x00u)
 802c99e:	68eb      	ldr	r3, [r5, #12]
 802c9a0:	4203      	tst	r3, r0
 802c9a2:	d002      	beq.n	802c9aa <HAL_GPIO_EXTI_IRQHandler+0x12>
  {
    __HAL_GPIO_EXTI_CLEAR_RISING_IT(GPIO_Pin);
 802c9a4:	60e8      	str	r0, [r5, #12]
    HAL_GPIO_EXTI_Rising_Callback(GPIO_Pin);
 802c9a6:	f7f9 f955 	bl	8025c54 <HAL_GPIO_EXTI_Rising_Callback>
  }

  if (__HAL_GPIO_EXTI_GET_FALLING_IT(GPIO_Pin) != 0x00u)
 802c9aa:	692b      	ldr	r3, [r5, #16]
 802c9ac:	421c      	tst	r4, r3
 802c9ae:	d003      	beq.n	802c9b8 <HAL_GPIO_EXTI_IRQHandler+0x20>
  {
    __HAL_GPIO_EXTI_CLEAR_FALLING_IT(GPIO_Pin);
    HAL_GPIO_EXTI_Falling_Callback(GPIO_Pin);
 802c9b0:	4620      	mov	r0, r4
    __HAL_GPIO_EXTI_CLEAR_FALLING_IT(GPIO_Pin);
 802c9b2:	612c      	str	r4, [r5, #16]
    HAL_GPIO_EXTI_Falling_Callback(GPIO_Pin);
 802c9b4:	f7f9 f95f 	bl	8025c76 <HAL_GPIO_EXTI_Falling_Callback>
  }
}
 802c9b8:	bd38      	pop	{r3, r4, r5, pc}
 802c9ba:	bf00      	nop
 802c9bc:	46022000 	.word	0x46022000

0802c9c0 <HAL_ICACHE_ConfigAssociativityMode>:
HAL_StatusTypeDef HAL_ICACHE_ConfigAssociativityMode(uint32_t AssociativityMode)
{
  HAL_StatusTypeDef status = HAL_OK;

  /* Check the parameters */
  assert_param(IS_ICACHE_ASSOCIATIVITY_MODE(AssociativityMode));
 802c9c0:	f030 0304 	bics.w	r3, r0, #4
{
 802c9c4:	b510      	push	{r4, lr}
 802c9c6:	4604      	mov	r4, r0
  assert_param(IS_ICACHE_ASSOCIATIVITY_MODE(AssociativityMode));
 802c9c8:	d003      	beq.n	802c9d2 <HAL_ICACHE_ConfigAssociativityMode+0x12>
 802c9ca:	21a9      	movs	r1, #169	; 0xa9
 802c9cc:	4808      	ldr	r0, [pc, #32]	; (802c9f0 <HAL_ICACHE_ConfigAssociativityMode+0x30>)
 802c9ce:	f7f9 fbe5 	bl	802619c <assert_failed>

  /* Check cache is not enabled */
  if (READ_BIT(ICACHE->CR, ICACHE_CR_EN) != 0U)
 802c9d2:	4908      	ldr	r1, [pc, #32]	; (802c9f4 <HAL_ICACHE_ConfigAssociativityMode+0x34>)
 802c9d4:	680b      	ldr	r3, [r1, #0]
 802c9d6:	f013 0301 	ands.w	r3, r3, #1
  {
    status = HAL_ERROR;
  }
  else
  {
    MODIFY_REG(ICACHE->CR, ICACHE_CR_WAYSEL, AssociativityMode);
 802c9da:	bf01      	itttt	eq
 802c9dc:	680a      	ldreq	r2, [r1, #0]
  HAL_StatusTypeDef status = HAL_OK;
 802c9de:	4618      	moveq	r0, r3
    MODIFY_REG(ICACHE->CR, ICACHE_CR_WAYSEL, AssociativityMode);
 802c9e0:	f022 0204 	biceq.w	r2, r2, #4
 802c9e4:	4322      	orreq	r2, r4
    status = HAL_ERROR;
 802c9e6:	bf14      	ite	ne
 802c9e8:	2001      	movne	r0, #1
    MODIFY_REG(ICACHE->CR, ICACHE_CR_WAYSEL, AssociativityMode);
 802c9ea:	600a      	streq	r2, [r1, #0]
  }

  return status;
}
 802c9ec:	bd10      	pop	{r4, pc}
 802c9ee:	bf00      	nop
 802c9f0:	08033d21 	.word	0x08033d21
 802c9f4:	40030400 	.word	0x40030400

0802c9f8 <HAL_ICACHE_Enable>:
  *         cache operation completes.
  * @retval HAL status (HAL_OK)
  */
HAL_StatusTypeDef HAL_ICACHE_Enable(void)
{
  SET_BIT(ICACHE->CR, ICACHE_CR_EN);
 802c9f8:	4a03      	ldr	r2, [pc, #12]	; (802ca08 <HAL_ICACHE_Enable+0x10>)

  return HAL_OK;
}
 802c9fa:	2000      	movs	r0, #0
  SET_BIT(ICACHE->CR, ICACHE_CR_EN);
 802c9fc:	6813      	ldr	r3, [r2, #0]
 802c9fe:	f043 0301 	orr.w	r3, r3, #1
 802ca02:	6013      	str	r3, [r2, #0]
}
 802ca04:	4770      	bx	lr
 802ca06:	bf00      	nop
 802ca08:	40030400 	.word	0x40030400

0802ca0c <HAL_PWR_EnableBkUpAccess>:
  *         possible unwanted write accesses.
  * @retval None.
  */
void HAL_PWR_EnableBkUpAccess(void)
{
  SET_BIT(PWR->DBPR, PWR_DBPR_DBP);
 802ca0c:	4a02      	ldr	r2, [pc, #8]	; (802ca18 <HAL_PWR_EnableBkUpAccess+0xc>)
 802ca0e:	6a93      	ldr	r3, [r2, #40]	; 0x28
 802ca10:	f043 0301 	orr.w	r3, r3, #1
 802ca14:	6293      	str	r3, [r2, #40]	; 0x28
}
 802ca16:	4770      	bx	lr
 802ca18:	46020800 	.word	0x46020800

0802ca1c <HAL_PWR_EnableWakeUpPin>:
  * @retval None.
  */
void HAL_PWR_EnableWakeUpPin(uint32_t WakeUpPin)
{
  /* Check the parameter */
  assert_param(IS_PWR_WAKEUP_PIN(WakeUpPin));
 802ca1c:	1e43      	subs	r3, r0, #1
 802ca1e:	2b01      	cmp	r3, #1
{
 802ca20:	b510      	push	{r4, lr}
 802ca22:	4604      	mov	r4, r0
  assert_param(IS_PWR_WAKEUP_PIN(WakeUpPin));
 802ca24:	d95c      	bls.n	802cae0 <HAL_PWR_EnableWakeUpPin+0xc4>
 802ca26:	f1b0 1f01 	cmp.w	r0, #65537	; 0x10001
 802ca2a:	d059      	beq.n	802cae0 <HAL_PWR_EnableWakeUpPin+0xc4>
 802ca2c:	4b3a      	ldr	r3, [pc, #232]	; (802cb18 <HAL_PWR_EnableWakeUpPin+0xfc>)
 802ca2e:	4298      	cmp	r0, r3
 802ca30:	d056      	beq.n	802cae0 <HAL_PWR_EnableWakeUpPin+0xc4>
 802ca32:	4b3a      	ldr	r3, [pc, #232]	; (802cb1c <HAL_PWR_EnableWakeUpPin+0x100>)
 802ca34:	f420 6280 	bic.w	r2, r0, #1024	; 0x400
 802ca38:	429a      	cmp	r2, r3
 802ca3a:	d051      	beq.n	802cae0 <HAL_PWR_EnableWakeUpPin+0xc4>
 802ca3c:	f420 0380 	bic.w	r3, r0, #4194304	; 0x400000
 802ca40:	f423 6300 	bic.w	r3, r3, #2048	; 0x800
 802ca44:	2b08      	cmp	r3, #8
 802ca46:	d04b      	beq.n	802cae0 <HAL_PWR_EnableWakeUpPin+0xc4>
 802ca48:	4b35      	ldr	r3, [pc, #212]	; (802cb20 <HAL_PWR_EnableWakeUpPin+0x104>)
 802ca4a:	f420 5280 	bic.w	r2, r0, #4096	; 0x1000
 802ca4e:	429a      	cmp	r2, r3
 802ca50:	d046      	beq.n	802cae0 <HAL_PWR_EnableWakeUpPin+0xc4>
 802ca52:	f020 6380 	bic.w	r3, r0, #67108864	; 0x4000000
 802ca56:	f423 5300 	bic.w	r3, r3, #8192	; 0x2000
 802ca5a:	2b20      	cmp	r3, #32
 802ca5c:	f420 5200 	bic.w	r2, r0, #8192	; 0x2000
 802ca60:	d03e      	beq.n	802cae0 <HAL_PWR_EnableWakeUpPin+0xc4>
 802ca62:	4b30      	ldr	r3, [pc, #192]	; (802cb24 <HAL_PWR_EnableWakeUpPin+0x108>)
 802ca64:	429a      	cmp	r2, r3
 802ca66:	d03b      	beq.n	802cae0 <HAL_PWR_EnableWakeUpPin+0xc4>
 802ca68:	f020 5380 	bic.w	r3, r0, #268435456	; 0x10000000
 802ca6c:	f423 4380 	bic.w	r3, r3, #16384	; 0x4000
 802ca70:	2b40      	cmp	r3, #64	; 0x40
 802ca72:	f420 4280 	bic.w	r2, r0, #16384	; 0x4000
 802ca76:	d033      	beq.n	802cae0 <HAL_PWR_EnableWakeUpPin+0xc4>
 802ca78:	4b2b      	ldr	r3, [pc, #172]	; (802cb28 <HAL_PWR_EnableWakeUpPin+0x10c>)
 802ca7a:	429a      	cmp	r2, r3
 802ca7c:	d030      	beq.n	802cae0 <HAL_PWR_EnableWakeUpPin+0xc4>
 802ca7e:	4b2b      	ldr	r3, [pc, #172]	; (802cb2c <HAL_PWR_EnableWakeUpPin+0x110>)
 802ca80:	f420 4200 	bic.w	r2, r0, #32768	; 0x8000
 802ca84:	429a      	cmp	r2, r3
 802ca86:	d02b      	beq.n	802cae0 <HAL_PWR_EnableWakeUpPin+0xc4>
 802ca88:	f103 4380 	add.w	r3, r3, #1073741824	; 0x40000000
 802ca8c:	4298      	cmp	r0, r3
 802ca8e:	d027      	beq.n	802cae0 <HAL_PWR_EnableWakeUpPin+0xc4>
 802ca90:	f240 1301 	movw	r3, #257	; 0x101
 802ca94:	f420 3280 	bic.w	r2, r0, #65536	; 0x10000
 802ca98:	429a      	cmp	r2, r3
 802ca9a:	d021      	beq.n	802cae0 <HAL_PWR_EnableWakeUpPin+0xc4>
 802ca9c:	f240 2302 	movw	r3, #514	; 0x202
 802caa0:	f420 2280 	bic.w	r2, r0, #262144	; 0x40000
 802caa4:	429a      	cmp	r2, r3
 802caa6:	d01b      	beq.n	802cae0 <HAL_PWR_EnableWakeUpPin+0xc4>
 802caa8:	4b21      	ldr	r3, [pc, #132]	; (802cb30 <HAL_PWR_EnableWakeUpPin+0x114>)
 802caaa:	4298      	cmp	r0, r3
 802caac:	d018      	beq.n	802cae0 <HAL_PWR_EnableWakeUpPin+0xc4>
 802caae:	4b21      	ldr	r3, [pc, #132]	; (802cb34 <HAL_PWR_EnableWakeUpPin+0x118>)
 802cab0:	4298      	cmp	r0, r3
 802cab2:	d015      	beq.n	802cae0 <HAL_PWR_EnableWakeUpPin+0xc4>
 802cab4:	4b20      	ldr	r3, [pc, #128]	; (802cb38 <HAL_PWR_EnableWakeUpPin+0x11c>)
 802cab6:	f020 4200 	bic.w	r2, r0, #2147483648	; 0x80000000
 802caba:	429a      	cmp	r2, r3
 802cabc:	d010      	beq.n	802cae0 <HAL_PWR_EnableWakeUpPin+0xc4>
 802cabe:	f420 1380 	bic.w	r3, r0, #1048576	; 0x100000
 802cac2:	2b04      	cmp	r3, #4
 802cac4:	d00c      	beq.n	802cae0 <HAL_PWR_EnableWakeUpPin+0xc4>
 802cac6:	f020 7380 	bic.w	r3, r0, #16777216	; 0x1000000
 802caca:	2b10      	cmp	r3, #16
 802cacc:	d008      	beq.n	802cae0 <HAL_PWR_EnableWakeUpPin+0xc4>
 802cace:	f020 4380 	bic.w	r3, r0, #1073741824	; 0x40000000
 802cad2:	2b80      	cmp	r3, #128	; 0x80
 802cad4:	d004      	beq.n	802cae0 <HAL_PWR_EnableWakeUpPin+0xc4>
 802cad6:	f240 11d9 	movw	r1, #473	; 0x1d9
 802cada:	4818      	ldr	r0, [pc, #96]	; (802cb3c <HAL_PWR_EnableWakeUpPin+0x120>)
 802cadc:	f7f9 fb5e 	bl	802619c <assert_failed>

  /* Specifies the wake up line polarity for the event detection (rising or falling edge) */
  MODIFY_REG(PWR->WUCR2, (PWR_EWUP_MASK & WakeUpPin), (WakeUpPin >> PWR_WUP_POLARITY_SHIFT));
 802cae0:	4917      	ldr	r1, [pc, #92]	; (802cb40 <HAL_PWR_EnableWakeUpPin+0x124>)
 802cae2:	b2e3      	uxtb	r3, r4
 802cae4:	698a      	ldr	r2, [r1, #24]
 802cae6:	ea22 0203 	bic.w	r2, r2, r3
 802caea:	ea42 2214 	orr.w	r2, r2, r4, lsr #8
 802caee:	618a      	str	r2, [r1, #24]

  /* Specifies the wake up line I/O selection */
  MODIFY_REG(PWR->WUCR3, (3UL << (POSITION_VAL(PWR_EWUP_MASK & WakeUpPin) * 2U)),
 802caf0:	69c8      	ldr	r0, [r1, #28]
   __ASM volatile ("rbit %0, %1" : "=r" (result) : "r" (value) );
 802caf2:	fa93 f2a3 	rbit	r2, r3
  return __builtin_clz(value);
 802caf6:	fab2 f282 	clz	r2, r2
 802cafa:	2103      	movs	r1, #3
 802cafc:	0052      	lsls	r2, r2, #1
 802cafe:	fa01 f202 	lsl.w	r2, r1, r2
 802cb02:	ea20 0002 	bic.w	r0, r0, r2
 802cb06:	4a0e      	ldr	r2, [pc, #56]	; (802cb40 <HAL_PWR_EnableWakeUpPin+0x124>)
 802cb08:	ea40 4414 	orr.w	r4, r0, r4, lsr #16
 802cb0c:	61d4      	str	r4, [r2, #28]
             (WakeUpPin >> PWR_WUP_SELECT_SIGNAL_SHIFT));

  /* Enable wake-up line */
  SET_BIT(PWR->WUCR1, (PWR_EWUP_MASK & WakeUpPin));
 802cb0e:	6951      	ldr	r1, [r2, #20]
 802cb10:	430b      	orrs	r3, r1
 802cb12:	6153      	str	r3, [r2, #20]
}
 802cb14:	bd10      	pop	{r4, pc}
 802cb16:	bf00      	nop
 802cb18:	00040002 	.word	0x00040002
 802cb1c:	00200004 	.word	0x00200004
 802cb20:	02000010 	.word	0x02000010
 802cb24:	0c000020 	.word	0x0c000020
 802cb28:	30000040 	.word	0x30000040
 802cb2c:	80000080 	.word	0x80000080
 802cb30:	00100404 	.word	0x00100404
 802cb34:	01001010 	.word	0x01001010
 802cb38:	40008080 	.word	0x40008080
 802cb3c:	08033d92 	.word	0x08033d92
 802cb40:	46020800 	.word	0x46020800

0802cb44 <HAL_PWREx_ControlVoltageScaling>:
HAL_StatusTypeDef HAL_PWREx_ControlVoltageScaling(uint32_t VoltageScaling)
{
  uint32_t timeout;

  /* Check the parameter */
  assert_param(IS_PWR_VOLTAGE_SCALING_RANGE(VoltageScaling));
 802cb44:	f430 3380 	bics.w	r3, r0, #65536	; 0x10000
{
 802cb48:	b510      	push	{r4, lr}
 802cb4a:	4604      	mov	r4, r0
  assert_param(IS_PWR_VOLTAGE_SCALING_RANGE(VoltageScaling));
 802cb4c:	d003      	beq.n	802cb56 <HAL_PWREx_ControlVoltageScaling+0x12>
 802cb4e:	21dc      	movs	r1, #220	; 0xdc
 802cb50:	4816      	ldr	r0, [pc, #88]	; (802cbac <HAL_PWREx_ControlVoltageScaling+0x68>)
 802cb52:	f7f9 fb23 	bl	802619c <assert_failed>

  /* Get the current voltage scale applied */
  uint32_t vos_old = READ_BIT(PWR->SVMSR, PWR_SVMSR_ACTVOS);
 802cb56:	4916      	ldr	r1, [pc, #88]	; (802cbb0 <HAL_PWREx_ControlVoltageScaling+0x6c>)
 802cb58:	6bcb      	ldr	r3, [r1, #60]	; 0x3c
 802cb5a:	f403 3380 	and.w	r3, r3, #65536	; 0x10000

  /* No change, nothing to do */
  if (vos_old == VoltageScaling)
 802cb5e:	429c      	cmp	r4, r3
 802cb60:	d101      	bne.n	802cb66 <HAL_PWREx_ControlVoltageScaling+0x22>
  {
    return HAL_OK;
 802cb62:	2000      	movs	r0, #0
  {
    return HAL_TIMEOUT;
  }

  return HAL_OK;
}
 802cb64:	bd10      	pop	{r4, pc}
  timeout = ((PWR_VOSF_SETTING_DELAY_VALUE * SystemCoreClock) / 1000000U) + 1U;
 802cb66:	2232      	movs	r2, #50	; 0x32
  MODIFY_REG(PWR->VOSR, PWR_VOSR_VOS, VoltageScaling);
 802cb68:	68cb      	ldr	r3, [r1, #12]
 802cb6a:	f423 3380 	bic.w	r3, r3, #65536	; 0x10000
 802cb6e:	4323      	orrs	r3, r4
 802cb70:	60cb      	str	r3, [r1, #12]
  timeout = ((PWR_VOSF_SETTING_DELAY_VALUE * SystemCoreClock) / 1000000U) + 1U;
 802cb72:	4b10      	ldr	r3, [pc, #64]	; (802cbb4 <HAL_PWREx_ControlVoltageScaling+0x70>)
 802cb74:	681b      	ldr	r3, [r3, #0]
 802cb76:	4353      	muls	r3, r2
 802cb78:	4a0f      	ldr	r2, [pc, #60]	; (802cbb8 <HAL_PWREx_ControlVoltageScaling+0x74>)
 802cb7a:	fbb3 f3f2 	udiv	r3, r3, r2
 802cb7e:	3301      	adds	r3, #1
 802cb80:	461a      	mov	r2, r3
  while (HAL_IS_BIT_CLR(PWR->VOSR, PWR_VOSR_VOSRDY) && (timeout != 0U))
 802cb82:	68c8      	ldr	r0, [r1, #12]
 802cb84:	0400      	lsls	r0, r0, #16
 802cb86:	d404      	bmi.n	802cb92 <HAL_PWREx_ControlVoltageScaling+0x4e>
 802cb88:	b90a      	cbnz	r2, 802cb8e <HAL_PWREx_ControlVoltageScaling+0x4a>
    return HAL_TIMEOUT;
 802cb8a:	2003      	movs	r0, #3
 802cb8c:	e7ea      	b.n	802cb64 <HAL_PWREx_ControlVoltageScaling+0x20>
    timeout--;
 802cb8e:	3a01      	subs	r2, #1
 802cb90:	e7f7      	b.n	802cb82 <HAL_PWREx_ControlVoltageScaling+0x3e>
  if (timeout == 0U)
 802cb92:	2a00      	cmp	r2, #0
 802cb94:	d0f9      	beq.n	802cb8a <HAL_PWREx_ControlVoltageScaling+0x46>
  while ((HAL_IS_BIT_CLR(PWR->SVMSR, PWR_SVMSR_ACTVOSRDY)) && (timeout != 0U))
 802cb96:	4a06      	ldr	r2, [pc, #24]	; (802cbb0 <HAL_PWREx_ControlVoltageScaling+0x6c>)
 802cb98:	6bd1      	ldr	r1, [r2, #60]	; 0x3c
 802cb9a:	0409      	lsls	r1, r1, #16
 802cb9c:	d403      	bmi.n	802cba6 <HAL_PWREx_ControlVoltageScaling+0x62>
 802cb9e:	2b00      	cmp	r3, #0
 802cba0:	d0f3      	beq.n	802cb8a <HAL_PWREx_ControlVoltageScaling+0x46>
    timeout--;
 802cba2:	3b01      	subs	r3, #1
 802cba4:	e7f8      	b.n	802cb98 <HAL_PWREx_ControlVoltageScaling+0x54>
  if (timeout == 0U)
 802cba6:	2b00      	cmp	r3, #0
 802cba8:	d1db      	bne.n	802cb62 <HAL_PWREx_ControlVoltageScaling+0x1e>
 802cbaa:	e7ee      	b.n	802cb8a <HAL_PWREx_ControlVoltageScaling+0x46>
 802cbac:	08033e00 	.word	0x08033e00
 802cbb0:	46020800 	.word	0x46020800
 802cbb4:	200004d0 	.word	0x200004d0
 802cbb8:	000f4240 	.word	0x000f4240

0802cbbc <HAL_RAMCFG_Init>:
  *                   the configuration information for the specified RAMCFG
  *                   instance.
  * @retval HAL status.
  */
HAL_StatusTypeDef HAL_RAMCFG_Init(RAMCFG_HandleTypeDef *hramcfg)
{
 802cbbc:	b510      	push	{r4, lr}
  /* Check the RAMCFG peripheral handle */
  if (hramcfg == NULL)
 802cbbe:	4604      	mov	r4, r0
 802cbc0:	b1c0      	cbz	r0, 802cbf4 <HAL_RAMCFG_Init+0x38>
  {
    return HAL_ERROR;
  }

  /* Check the parameters */
  assert_param(IS_RAMCFG_ALL_INSTANCE(hramcfg->Instance));
 802cbc2:	6803      	ldr	r3, [r0, #0]
 802cbc4:	4a0c      	ldr	r2, [pc, #48]	; (802cbf8 <HAL_RAMCFG_Init+0x3c>)
 802cbc6:	4293      	cmp	r3, r2
 802cbc8:	d00a      	beq.n	802cbe0 <HAL_RAMCFG_Init+0x24>
 802cbca:	3240      	adds	r2, #64	; 0x40
 802cbcc:	4293      	cmp	r3, r2
 802cbce:	d007      	beq.n	802cbe0 <HAL_RAMCFG_Init+0x24>
 802cbd0:	f502 7280 	add.w	r2, r2, #256	; 0x100
 802cbd4:	4293      	cmp	r3, r2
 802cbd6:	d003      	beq.n	802cbe0 <HAL_RAMCFG_Init+0x24>
 802cbd8:	21dc      	movs	r1, #220	; 0xdc
 802cbda:	4808      	ldr	r0, [pc, #32]	; (802cbfc <HAL_RAMCFG_Init+0x40>)
 802cbdc:	f7f9 fade 	bl	802619c <assert_failed>

  /* Update RAMCFG peripheral state */
  hramcfg->State = HAL_RAMCFG_STATE_BUSY;
 802cbe0:	2302      	movs	r3, #2
    /* Legacy callback */
    hramcfg->MspInitCallback = HAL_RAMCFG_MspInit;
  }
  hramcfg->MspInitCallback(hramcfg);
#else
  HAL_RAMCFG_MspInit(hramcfg);
 802cbe2:	4620      	mov	r0, r4
  hramcfg->State = HAL_RAMCFG_STATE_BUSY;
 802cbe4:	7123      	strb	r3, [r4, #4]
  HAL_RAMCFG_MspInit(hramcfg);
 802cbe6:	f7f9 fb3f 	bl	8026268 <HAL_RAMCFG_MspInit>
#endif /* USE_HAL_RAMCFG_REGISTER_CALLBACKS */

  /* Initialize the RAMCFG error code */
  hramcfg->ErrorCode = HAL_RAMCFG_ERROR_NONE;
 802cbea:	2000      	movs	r0, #0

  /* Initialize the RAMCFG state */
  hramcfg->State = HAL_RAMCFG_STATE_READY;
 802cbec:	2301      	movs	r3, #1
  hramcfg->ErrorCode = HAL_RAMCFG_ERROR_NONE;
 802cbee:	60a0      	str	r0, [r4, #8]
  hramcfg->State = HAL_RAMCFG_STATE_READY;
 802cbf0:	7123      	strb	r3, [r4, #4]

  return HAL_OK;
}
 802cbf2:	bd10      	pop	{r4, pc}
    return HAL_ERROR;
 802cbf4:	2001      	movs	r0, #1
 802cbf6:	e7fc      	b.n	802cbf2 <HAL_RAMCFG_Init+0x36>
 802cbf8:	40026000 	.word	0x40026000
 802cbfc:	08033e71 	.word	0x08033e71

0802cc00 <HAL_RAMCFG_ConfigWaitState>:
  * @param  WaitState     : Select the value of wait state to be configured.
  *                         This parameter could be any value of @ref RAMCFG_WaitState group
  * @retval HAL status.
  */
HAL_StatusTypeDef HAL_RAMCFG_ConfigWaitState(RAMCFG_HandleTypeDef *hramcfg, uint32_t WaitState)
{
 802cc00:	b538      	push	{r3, r4, r5, lr}
  /* Check the parameters */
  assert_param(IS_RAMCFG_ALL_INSTANCE(hramcfg->Instance));
 802cc02:	4a16      	ldr	r2, [pc, #88]	; (802cc5c <HAL_RAMCFG_ConfigWaitState+0x5c>)
 802cc04:	6803      	ldr	r3, [r0, #0]
{
 802cc06:	4604      	mov	r4, r0
  assert_param(IS_RAMCFG_ALL_INSTANCE(hramcfg->Instance));
 802cc08:	4293      	cmp	r3, r2
{
 802cc0a:	460d      	mov	r5, r1
  assert_param(IS_RAMCFG_ALL_INSTANCE(hramcfg->Instance));
 802cc0c:	d00b      	beq.n	802cc26 <HAL_RAMCFG_ConfigWaitState+0x26>
 802cc0e:	3240      	adds	r2, #64	; 0x40
 802cc10:	4293      	cmp	r3, r2
 802cc12:	d008      	beq.n	802cc26 <HAL_RAMCFG_ConfigWaitState+0x26>
 802cc14:	f502 7280 	add.w	r2, r2, #256	; 0x100
 802cc18:	4293      	cmp	r3, r2
 802cc1a:	d004      	beq.n	802cc26 <HAL_RAMCFG_ConfigWaitState+0x26>
 802cc1c:	f240 2153 	movw	r1, #595	; 0x253
 802cc20:	480f      	ldr	r0, [pc, #60]	; (802cc60 <HAL_RAMCFG_ConfigWaitState+0x60>)
 802cc22:	f7f9 fabb 	bl	802619c <assert_failed>
  assert_param(IS_RAMCFG_WAITSTATE(WaitState));
 802cc26:	f435 3340 	bics.w	r3, r5, #196608	; 0x30000
 802cc2a:	d007      	beq.n	802cc3c <HAL_RAMCFG_ConfigWaitState+0x3c>
 802cc2c:	f5b3 2f80 	cmp.w	r3, #262144	; 0x40000
 802cc30:	d004      	beq.n	802cc3c <HAL_RAMCFG_ConfigWaitState+0x3c>
 802cc32:	f44f 7115 	mov.w	r1, #596	; 0x254
 802cc36:	480a      	ldr	r0, [pc, #40]	; (802cc60 <HAL_RAMCFG_ConfigWaitState+0x60>)
 802cc38:	f7f9 fab0 	bl	802619c <assert_failed>

  /* Get RAMCFG state */
  if (hramcfg->State == HAL_RAMCFG_STATE_READY)
 802cc3c:	7923      	ldrb	r3, [r4, #4]
 802cc3e:	2b01      	cmp	r3, #1
 802cc40:	b2da      	uxtb	r2, r3
 802cc42:	f04f 0302 	mov.w	r3, #2
  {
    /* Update RAMCFG peripheral state */
    hramcfg->State = HAL_RAMCFG_STATE_BUSY;
 802cc46:	bf01      	itttt	eq
 802cc48:	7123      	strbeq	r3, [r4, #4]

    /* Set the SRAM wait state */
    hramcfg->Instance->CR = WaitState;
 802cc4a:	6823      	ldreq	r3, [r4, #0]
  }

  /* Update RAMCFG peripheral state */
  hramcfg->State = HAL_RAMCFG_STATE_READY;

  return HAL_OK;
 802cc4c:	2000      	moveq	r0, #0
    hramcfg->Instance->CR = WaitState;
 802cc4e:	601d      	streq	r5, [r3, #0]
    return HAL_ERROR;
 802cc50:	bf16      	itet	ne
 802cc52:	2001      	movne	r0, #1
  hramcfg->State = HAL_RAMCFG_STATE_READY;
 802cc54:	7122      	strbeq	r2, [r4, #4]
    hramcfg->ErrorCode = HAL_RAMCFG_ERROR_BUSY;
 802cc56:	60a3      	strne	r3, [r4, #8]
}
 802cc58:	bd38      	pop	{r3, r4, r5, pc}
 802cc5a:	bf00      	nop
 802cc5c:	40026000 	.word	0x40026000
 802cc60:	08033e71 	.word	0x08033e71

0802cc64 <HAL_RAMCFG_GetWaitState>:
  * @retval Wait state value, part of @ref RAMCFG_WaitState group.
  */
uint32_t HAL_RAMCFG_GetWaitState(const RAMCFG_HandleTypeDef *hramcfg)
{
  /* Check the parameters */
  assert_param(IS_RAMCFG_ALL_INSTANCE(hramcfg->Instance));
 802cc64:	6803      	ldr	r3, [r0, #0]
 802cc66:	4a0b      	ldr	r2, [pc, #44]	; (802cc94 <HAL_RAMCFG_GetWaitState+0x30>)
{
 802cc68:	b510      	push	{r4, lr}
  assert_param(IS_RAMCFG_ALL_INSTANCE(hramcfg->Instance));
 802cc6a:	4293      	cmp	r3, r2
{
 802cc6c:	4604      	mov	r4, r0
  assert_param(IS_RAMCFG_ALL_INSTANCE(hramcfg->Instance));
 802cc6e:	d00b      	beq.n	802cc88 <HAL_RAMCFG_GetWaitState+0x24>
 802cc70:	3240      	adds	r2, #64	; 0x40
 802cc72:	4293      	cmp	r3, r2
 802cc74:	d008      	beq.n	802cc88 <HAL_RAMCFG_GetWaitState+0x24>
 802cc76:	f502 7280 	add.w	r2, r2, #256	; 0x100
 802cc7a:	4293      	cmp	r3, r2
 802cc7c:	d004      	beq.n	802cc88 <HAL_RAMCFG_GetWaitState+0x24>
 802cc7e:	f240 2177 	movw	r1, #631	; 0x277
 802cc82:	4805      	ldr	r0, [pc, #20]	; (802cc98 <HAL_RAMCFG_GetWaitState+0x34>)
 802cc84:	f7f9 fa8a 	bl	802619c <assert_failed>

  /* Return the configured wait state number */
  return (hramcfg->Instance->CR & RAMCFG_CR_WSC);
 802cc88:	6823      	ldr	r3, [r4, #0]
 802cc8a:	6818      	ldr	r0, [r3, #0]
}
 802cc8c:	f400 20e0 	and.w	r0, r0, #458752	; 0x70000
 802cc90:	bd10      	pop	{r4, pc}
 802cc92:	bf00      	nop
 802cc94:	40026000 	.word	0x40026000
 802cc98:	08033e71 	.word	0x08033e71

0802cc9c <RCC_PLL1_GetVCOOutputFreq>:
  float_t pllm;
  float_t plln;
  float_t pllfracn;

  /* Get PLL1 DIVR register value */
  tmpreg1 = RCC->PLL1DIVR;
 802cc9c:	491d      	ldr	r1, [pc, #116]	; (802cd14 <RCC_PLL1_GetVCOOutputFreq+0x78>)
 802cc9e:	6b4b      	ldr	r3, [r1, #52]	; 0x34

  /* Retrieve PLL1 multiplication factor */
  tmp = (tmpreg1 & RCC_PLL1DIVR_PLL1N) + 1U;
 802cca0:	f3c3 0308 	ubfx	r3, r3, #0, #9
 802cca4:	3301      	adds	r3, #1
 802cca6:	ee07 3a90 	vmov	s15, r3
  plln = (float_t) tmp;

  /* Get PLL1 CFGR register value */
  tmpreg1 = RCC->PLL1CFGR;
 802ccaa:	6a8b      	ldr	r3, [r1, #40]	; 0x28
  plln = (float_t) tmp;
 802ccac:	eef8 7ae7 	vcvt.f32.s32	s15, s15

  /* Retrieve PLL1 divider */
  tmp = ((tmpreg1 & RCC_PLL1CFGR_PLL1M) >> RCC_PLL1CFGR_PLL1M_Pos) + 1U;
 802ccb0:	f3c3 2202 	ubfx	r2, r3, #8, #3
 802ccb4:	3201      	adds	r2, #1
  pllm = (float_t) tmp;
 802ccb6:	ee07 2a10 	vmov	s14, r2

  /* Check if fractional part is enable */
  if ((tmpreg1 & RCC_PLL1CFGR_PLL1FRACEN) != 0x00u)
 802ccba:	f013 0210 	ands.w	r2, r3, #16
  {
    tmp = ((RCC->PLL1FRACR & RCC_PLL1FRACR_PLL1FRACN) >> RCC_PLL1FRACR_PLL1FRACN_Pos);
 802ccbe:	bf18      	it	ne
 802ccc0:	6b8a      	ldrne	r2, [r1, #56]	; 0x38
  pllm = (float_t) tmp;
 802ccc2:	eeb8 6ac7 	vcvt.f32.s32	s12, s14
    tmp = ((RCC->PLL1FRACR & RCC_PLL1FRACR_PLL1FRACN) >> RCC_PLL1FRACR_PLL1FRACN_Pos);
 802ccc6:	bf18      	it	ne
 802ccc8:	f3c2 02cc 	ubfxne	r2, r2, #3, #13
  }
  else
  {
    tmp = 0u;
  }
  pllfracn = (float_t)tmp;
 802cccc:	ee07 2a10 	vmov	s14, r2

  /* determine PLL source */
  switch (tmpreg1 & RCC_PLL1CFGR_PLL1SRC)
 802ccd0:	f003 0303 	and.w	r3, r3, #3
 802ccd4:	2b02      	cmp	r3, #2
  pllfracn = (float_t)tmp;
 802ccd6:	eef8 6ac7 	vcvt.f32.s32	s13, s14
  switch (tmpreg1 & RCC_PLL1CFGR_PLL1SRC)
 802ccda:	d014      	beq.n	802cd06 <RCC_PLL1_GetVCOOutputFreq+0x6a>
 802ccdc:	2b03      	cmp	r3, #3
 802ccde:	d115      	bne.n	802cd0c <RCC_PLL1_GetVCOOutputFreq+0x70>
      pllsrc = (float_t)HSI_VALUE;
      break;

    /* HSE used as PLL1 clock source */
    case RCC_PLLSOURCE_HSE:
      tmp = (HSE_VALUE >> ((RCC->CR & RCC_CR_HSEPRE) >> RCC_CR_HSEPRE_Pos));
 802cce0:	4b0c      	ldr	r3, [pc, #48]	; (802cd14 <RCC_PLL1_GetVCOOutputFreq+0x78>)
 802cce2:	681a      	ldr	r2, [r3, #0]
 802cce4:	4b0c      	ldr	r3, [pc, #48]	; (802cd18 <RCC_PLL1_GetVCOOutputFreq+0x7c>)
 802cce6:	f3c2 5200 	ubfx	r2, r2, #20, #1
 802ccea:	40d3      	lsrs	r3, r2
      pllsrc = (float_t)tmp;
 802ccec:	ee07 3a10 	vmov	s14, r3
 802ccf0:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
      pllsrc = (float_t)0;
      break;
  }

  /* Compute VCO output frequency */
  return ((pllsrc / pllm) * (plln + (pllfracn / (float_t)0x2000u)));
 802ccf4:	ee87 0a06 	vdiv.f32	s0, s14, s12
 802ccf8:	ed9f 7a08 	vldr	s14, [pc, #32]	; 802cd1c <RCC_PLL1_GetVCOOutputFreq+0x80>
 802ccfc:	eee6 7a87 	vfma.f32	s15, s13, s14
}
 802cd00:	ee20 0a27 	vmul.f32	s0, s0, s15
 802cd04:	4770      	bx	lr
      pllsrc = (float_t)HSI_VALUE;
 802cd06:	ed9f 7a06 	vldr	s14, [pc, #24]	; 802cd20 <RCC_PLL1_GetVCOOutputFreq+0x84>
 802cd0a:	e7f3      	b.n	802ccf4 <RCC_PLL1_GetVCOOutputFreq+0x58>
  switch (tmpreg1 & RCC_PLL1CFGR_PLL1SRC)
 802cd0c:	ed9f 7a05 	vldr	s14, [pc, #20]	; 802cd24 <RCC_PLL1_GetVCOOutputFreq+0x88>
 802cd10:	e7f0      	b.n	802ccf4 <RCC_PLL1_GetVCOOutputFreq+0x58>
 802cd12:	bf00      	nop
 802cd14:	46020c00 	.word	0x46020c00
 802cd18:	01e84800 	.word	0x01e84800
 802cd1c:	39000000 	.word	0x39000000
 802cd20:	4b742400 	.word	0x4b742400
 802cd24:	00000000 	.word	0x00000000

0802cd28 <HAL_RCC_OscConfig>:
{
 802cd28:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
  if (RCC_OscInitStruct == NULL)
 802cd2c:	4604      	mov	r4, r0
 802cd2e:	b908      	cbnz	r0, 802cd34 <HAL_RCC_OscConfig+0xc>
        return HAL_ERROR;
 802cd30:	2001      	movs	r0, #1
 802cd32:	e0ad      	b.n	802ce90 <HAL_RCC_OscConfig+0x168>
  assert_param(IS_RCC_OSCILLATORTYPE(RCC_OscInitStruct->OscillatorType));
 802cd34:	6803      	ldr	r3, [r0, #0]
 802cd36:	b13b      	cbz	r3, 802cd48 <HAL_RCC_OscConfig+0x20>
 802cd38:	f033 030f 	bics.w	r3, r3, #15
 802cd3c:	d004      	beq.n	802cd48 <HAL_RCC_OscConfig+0x20>
 802cd3e:	f44f 71ab 	mov.w	r1, #342	; 0x156
 802cd42:	488f      	ldr	r0, [pc, #572]	; (802cf80 <HAL_RCC_OscConfig+0x258>)
 802cd44:	f7f9 fa2a 	bl	802619c <assert_failed>
  sysclksrc = __HAL_RCC_GET_SYSCLK_SOURCE();
 802cd48:	4b8e      	ldr	r3, [pc, #568]	; (802cf84 <HAL_RCC_OscConfig+0x25c>)
 802cd4a:	69de      	ldr	r6, [r3, #28]
  pllsrc = __HAL_RCC_GET_PLL1_OSCSOURCE();
 802cd4c:	6a9f      	ldr	r7, [r3, #40]	; 0x28
  if (((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSE) == RCC_OSCILLATORTYPE_HSE)
 802cd4e:	6823      	ldr	r3, [r4, #0]
  sysclksrc = __HAL_RCC_GET_SYSCLK_SOURCE();
 802cd50:	f006 060c 	and.w	r6, r6, #12
  if (((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSE) == RCC_OSCILLATORTYPE_HSE)
 802cd54:	07db      	lsls	r3, r3, #31
  pllsrc = __HAL_RCC_GET_PLL1_OSCSOURCE();
 802cd56:	f007 0703 	and.w	r7, r7, #3
  if (((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSE) == RCC_OSCILLATORTYPE_HSE)
 802cd5a:	d442      	bmi.n	802cde2 <HAL_RCC_OscConfig+0xba>
  if (((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSI) == RCC_OSCILLATORTYPE_HSI)
 802cd5c:	6823      	ldr	r3, [r4, #0]
 802cd5e:	079d      	lsls	r5, r3, #30
 802cd60:	f100 80ab 	bmi.w	802ceba <HAL_RCC_OscConfig+0x192>
  if (((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSI) == RCC_OSCILLATORTYPE_LSI)
 802cd64:	6823      	ldr	r3, [r4, #0]
 802cd66:	0718      	lsls	r0, r3, #28
 802cd68:	f140 8154 	bpl.w	802d014 <HAL_RCC_OscConfig+0x2ec>
    assert_param(IS_RCC_LSI(RCC_OscInitStruct->LSIState));
 802cd6c:	69a3      	ldr	r3, [r4, #24]
 802cd6e:	f033 6380 	bics.w	r3, r3, #67108864	; 0x4000000
 802cd72:	d004      	beq.n	802cd7e <HAL_RCC_OscConfig+0x56>
 802cd74:	f44f 71f7 	mov.w	r1, #494	; 0x1ee
 802cd78:	4881      	ldr	r0, [pc, #516]	; (802cf80 <HAL_RCC_OscConfig+0x258>)
 802cd7a:	f7f9 fa0f 	bl	802619c <assert_failed>
    if (__HAL_RCC_PWR_IS_CLK_ENABLED() != 0x01)
 802cd7e:	4b81      	ldr	r3, [pc, #516]	; (802cf84 <HAL_RCC_OscConfig+0x25c>)
 802cd80:	f8d3 2094 	ldr.w	r2, [r3, #148]	; 0x94
 802cd84:	0751      	lsls	r1, r2, #29
 802cd86:	f100 80e6 	bmi.w	802cf56 <HAL_RCC_OscConfig+0x22e>
      pwrclkchanged = SET;
 802cd8a:	f04f 0801 	mov.w	r8, #1
      __HAL_RCC_PWR_CLK_ENABLE();
 802cd8e:	f8d3 2094 	ldr.w	r2, [r3, #148]	; 0x94
 802cd92:	f042 0204 	orr.w	r2, r2, #4
 802cd96:	f8c3 2094 	str.w	r2, [r3, #148]	; 0x94
 802cd9a:	f8d3 3094 	ldr.w	r3, [r3, #148]	; 0x94
 802cd9e:	f003 0304 	and.w	r3, r3, #4
 802cda2:	9300      	str	r3, [sp, #0]
 802cda4:	9b00      	ldr	r3, [sp, #0]
    if (HAL_IS_BIT_CLR(PWR->DBPR, PWR_DBPR_DBP))
 802cda6:	4d78      	ldr	r5, [pc, #480]	; (802cf88 <HAL_RCC_OscConfig+0x260>)
 802cda8:	6aab      	ldr	r3, [r5, #40]	; 0x28
 802cdaa:	07da      	lsls	r2, r3, #31
 802cdac:	f140 80d6 	bpl.w	802cf5c <HAL_RCC_OscConfig+0x234>
    tmpreg1 = RCC->BDCR1;
 802cdb0:	4f74      	ldr	r7, [pc, #464]	; (802cf84 <HAL_RCC_OscConfig+0x25c>)
    if (RCC_OscInitStruct->LSIState != RCC_LSI_OFF)
 802cdb2:	69a3      	ldr	r3, [r4, #24]
    tmpreg1 = RCC->BDCR1;
 802cdb4:	f8d7 50f0 	ldr.w	r5, [r7, #240]	; 0xf0
    if (RCC_OscInitStruct->LSIState != RCC_LSI_OFF)
 802cdb8:	2b00      	cmp	r3, #0
 802cdba:	f040 80ed 	bne.w	802cf98 <HAL_RCC_OscConfig+0x270>
      tmpreg1 &= ~mask;
 802cdbe:	f025 6580 	bic.w	r5, r5, #67108864	; 0x4000000
      RCC->BDCR1 = tmpreg1;
 802cdc2:	f8c7 50f0 	str.w	r5, [r7, #240]	; 0xf0
      tickstart = HAL_GetTick();
 802cdc6:	f7fe f933 	bl	802b030 <HAL_GetTick>
 802cdca:	4605      	mov	r5, r0
      while (READ_BIT(RCC->BDCR1, (mask << 1)) != 0x00u)
 802cdcc:	f8d7 30f0 	ldr.w	r3, [r7, #240]	; 0xf0
 802cdd0:	011b      	lsls	r3, r3, #4
 802cdd2:	f140 8115 	bpl.w	802d000 <HAL_RCC_OscConfig+0x2d8>
        if ((HAL_GetTick() - tickstart) > LSI_TIMEOUT_VALUE)
 802cdd6:	f7fe f92b 	bl	802b030 <HAL_GetTick>
 802cdda:	1b40      	subs	r0, r0, r5
 802cddc:	2814      	cmp	r0, #20
 802cdde:	d9f5      	bls.n	802cdcc <HAL_RCC_OscConfig+0xa4>
 802cde0:	e055      	b.n	802ce8e <HAL_RCC_OscConfig+0x166>
    assert_param(IS_RCC_HSE(RCC_OscInitStruct->HSEState));
 802cde2:	6863      	ldr	r3, [r4, #4]
 802cde4:	f433 3380 	bics.w	r3, r3, #65536	; 0x10000
 802cde8:	d004      	beq.n	802cdf4 <HAL_RCC_OscConfig+0xcc>
 802cdea:	f240 115f 	movw	r1, #351	; 0x15f
 802cdee:	4864      	ldr	r0, [pc, #400]	; (802cf80 <HAL_RCC_OscConfig+0x258>)
 802cdf0:	f7f9 f9d4 	bl	802619c <assert_failed>
    if ((sysclksrc == RCC_SYSCLKSOURCE_STATUS_HSE) ||
 802cdf4:	2e08      	cmp	r6, #8
 802cdf6:	6863      	ldr	r3, [r4, #4]
 802cdf8:	d003      	beq.n	802ce02 <HAL_RCC_OscConfig+0xda>
 802cdfa:	2e0c      	cmp	r6, #12
 802cdfc:	d125      	bne.n	802ce4a <HAL_RCC_OscConfig+0x122>
        ((sysclksrc == RCC_SYSCLKSOURCE_STATUS_PLLCLK) && (pllsrc == RCC_PLLSOURCE_HSE)))
 802cdfe:	2f03      	cmp	r7, #3
 802ce00:	d123      	bne.n	802ce4a <HAL_RCC_OscConfig+0x122>
      if (RCC_OscInitStruct->HSEState == RCC_HSE_OFF)
 802ce02:	2b00      	cmp	r3, #0
 802ce04:	d094      	beq.n	802cd30 <HAL_RCC_OscConfig+0x8>
        if (sysclksrc == RCC_SYSCLKSOURCE_STATUS_HSE)
 802ce06:	2e08      	cmp	r6, #8
 802ce08:	d1a8      	bne.n	802cd5c <HAL_RCC_OscConfig+0x34>
          assert_param(IS_RCC_HSEDIV(RCC_OscInitStruct->HSEDiv));
 802ce0a:	68a3      	ldr	r3, [r4, #8]
 802ce0c:	f433 1380 	bics.w	r3, r3, #1048576	; 0x100000
 802ce10:	d004      	beq.n	802ce1c <HAL_RCC_OscConfig+0xf4>
 802ce12:	f44f 71b7 	mov.w	r1, #366	; 0x16e
 802ce16:	485a      	ldr	r0, [pc, #360]	; (802cf80 <HAL_RCC_OscConfig+0x258>)
 802ce18:	f7f9 f9c0 	bl	802619c <assert_failed>
          __HAL_RCC_HSE_CONFIG(RCC_HSE_ON | RCC_OscInitStruct->HSEDiv);
 802ce1c:	4a59      	ldr	r2, [pc, #356]	; (802cf84 <HAL_RCC_OscConfig+0x25c>)
 802ce1e:	68a1      	ldr	r1, [r4, #8]
 802ce20:	6813      	ldr	r3, [r2, #0]
 802ce22:	f423 1388 	bic.w	r3, r3, #1114112	; 0x110000
 802ce26:	430b      	orrs	r3, r1
 802ce28:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 802ce2c:	6013      	str	r3, [r2, #0]
          SystemCoreClock = (HSE_VALUE / (1UL << ((READ_BIT(RCC->CR, RCC_CR_HSEPRE)) >> RCC_CR_HSEPRE_Pos)));
 802ce2e:	6812      	ldr	r2, [r2, #0]
 802ce30:	4b56      	ldr	r3, [pc, #344]	; (802cf8c <HAL_RCC_OscConfig+0x264>)
 802ce32:	f3c2 5200 	ubfx	r2, r2, #20, #1
 802ce36:	40d3      	lsrs	r3, r2
 802ce38:	4a55      	ldr	r2, [pc, #340]	; (802cf90 <HAL_RCC_OscConfig+0x268>)
 802ce3a:	6013      	str	r3, [r2, #0]
          if (HAL_InitTick(uwTickPrio) != HAL_OK)
 802ce3c:	4b55      	ldr	r3, [pc, #340]	; (802cf94 <HAL_RCC_OscConfig+0x26c>)
 802ce3e:	6818      	ldr	r0, [r3, #0]
 802ce40:	f7fe f8ac 	bl	802af9c <HAL_InitTick>
 802ce44:	2800      	cmp	r0, #0
 802ce46:	d089      	beq.n	802cd5c <HAL_RCC_OscConfig+0x34>
 802ce48:	e772      	b.n	802cd30 <HAL_RCC_OscConfig+0x8>
      if (RCC_OscInitStruct->HSEState != RCC_HSE_OFF)
 802ce4a:	4d4e      	ldr	r5, [pc, #312]	; (802cf84 <HAL_RCC_OscConfig+0x25c>)
 802ce4c:	b31b      	cbz	r3, 802ce96 <HAL_RCC_OscConfig+0x16e>
        assert_param(IS_RCC_HSEDIV(RCC_OscInitStruct->HSEDiv));
 802ce4e:	68a3      	ldr	r3, [r4, #8]
 802ce50:	f433 1380 	bics.w	r3, r3, #1048576	; 0x100000
 802ce54:	d004      	beq.n	802ce60 <HAL_RCC_OscConfig+0x138>
 802ce56:	f240 1183 	movw	r1, #387	; 0x183
 802ce5a:	4849      	ldr	r0, [pc, #292]	; (802cf80 <HAL_RCC_OscConfig+0x258>)
 802ce5c:	f7f9 f99e 	bl	802619c <assert_failed>
        __HAL_RCC_HSE_CONFIG((RCC_OscInitStruct->HSEState | RCC_OscInitStruct->HSEDiv));
 802ce60:	e9d4 3101 	ldrd	r3, r1, [r4, #4]
 802ce64:	682a      	ldr	r2, [r5, #0]
 802ce66:	430b      	orrs	r3, r1
 802ce68:	f422 1288 	bic.w	r2, r2, #1114112	; 0x110000
 802ce6c:	4313      	orrs	r3, r2
 802ce6e:	602b      	str	r3, [r5, #0]
        tickstart = HAL_GetTick();
 802ce70:	f7fe f8de 	bl	802b030 <HAL_GetTick>
 802ce74:	4605      	mov	r5, r0
        while (READ_BIT(RCC->CR, RCC_CR_HSERDY) == 0U)
 802ce76:	f8df 810c 	ldr.w	r8, [pc, #268]	; 802cf84 <HAL_RCC_OscConfig+0x25c>
 802ce7a:	f8d8 3000 	ldr.w	r3, [r8]
 802ce7e:	0398      	lsls	r0, r3, #14
 802ce80:	f53f af6c 	bmi.w	802cd5c <HAL_RCC_OscConfig+0x34>
          if ((HAL_GetTick() - tickstart) > HSE_TIMEOUT_VALUE)
 802ce84:	f7fe f8d4 	bl	802b030 <HAL_GetTick>
 802ce88:	1b40      	subs	r0, r0, r5
 802ce8a:	2864      	cmp	r0, #100	; 0x64
 802ce8c:	d9f5      	bls.n	802ce7a <HAL_RCC_OscConfig+0x152>
            return HAL_TIMEOUT;
 802ce8e:	2003      	movs	r0, #3
}
 802ce90:	b003      	add	sp, #12
 802ce92:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
        __HAL_RCC_HSE_CONFIG(RCC_OscInitStruct->HSEState);
 802ce96:	682b      	ldr	r3, [r5, #0]
 802ce98:	f423 1388 	bic.w	r3, r3, #1114112	; 0x110000
 802ce9c:	602b      	str	r3, [r5, #0]
        tickstart = HAL_GetTick();
 802ce9e:	f7fe f8c7 	bl	802b030 <HAL_GetTick>
 802cea2:	4680      	mov	r8, r0
        while (READ_BIT(RCC->CR, RCC_CR_HSERDY) != 0U)
 802cea4:	682b      	ldr	r3, [r5, #0]
 802cea6:	0399      	lsls	r1, r3, #14
 802cea8:	f57f af58 	bpl.w	802cd5c <HAL_RCC_OscConfig+0x34>
          if ((HAL_GetTick() - tickstart) > HSE_TIMEOUT_VALUE)
 802ceac:	f7fe f8c0 	bl	802b030 <HAL_GetTick>
 802ceb0:	eba0 0008 	sub.w	r0, r0, r8
 802ceb4:	2864      	cmp	r0, #100	; 0x64
 802ceb6:	d9f5      	bls.n	802cea4 <HAL_RCC_OscConfig+0x17c>
 802ceb8:	e7e9      	b.n	802ce8e <HAL_RCC_OscConfig+0x166>
    assert_param(IS_RCC_HSI(RCC_OscInitStruct->HSIState));
 802ceba:	6923      	ldr	r3, [r4, #16]
 802cebc:	f433 7380 	bics.w	r3, r3, #256	; 0x100
 802cec0:	d004      	beq.n	802cecc <HAL_RCC_OscConfig+0x1a4>
 802cec2:	f44f 71d6 	mov.w	r1, #428	; 0x1ac
 802cec6:	482e      	ldr	r0, [pc, #184]	; (802cf80 <HAL_RCC_OscConfig+0x258>)
 802cec8:	f7f9 f968 	bl	802619c <assert_failed>
    assert_param(IS_RCC_HSI_CALIBRATION_VALUE(RCC_OscInitStruct->HSICalibrationValue));
 802cecc:	6963      	ldr	r3, [r4, #20]
 802cece:	2b1f      	cmp	r3, #31
 802ced0:	d904      	bls.n	802cedc <HAL_RCC_OscConfig+0x1b4>
 802ced2:	f240 11ad 	movw	r1, #429	; 0x1ad
 802ced6:	482a      	ldr	r0, [pc, #168]	; (802cf80 <HAL_RCC_OscConfig+0x258>)
 802ced8:	f7f9 f960 	bl	802619c <assert_failed>
    if ((sysclksrc == RCC_SYSCLKSOURCE_STATUS_HSI) ||
 802cedc:	6923      	ldr	r3, [r4, #16]
 802cede:	b11e      	cbz	r6, 802cee8 <HAL_RCC_OscConfig+0x1c0>
 802cee0:	2e0c      	cmp	r6, #12
 802cee2:	d10d      	bne.n	802cf00 <HAL_RCC_OscConfig+0x1d8>
        ((sysclksrc == RCC_SYSCLKSOURCE_STATUS_PLLCLK) && (pllsrc == RCC_PLLSOURCE_HSI)))
 802cee4:	2f02      	cmp	r7, #2
 802cee6:	d10b      	bne.n	802cf00 <HAL_RCC_OscConfig+0x1d8>
      if (RCC_OscInitStruct->HSIState == RCC_HSI_OFF)
 802cee8:	2b00      	cmp	r3, #0
 802ceea:	f43f af21 	beq.w	802cd30 <HAL_RCC_OscConfig+0x8>
        __HAL_RCC_HSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->HSICalibrationValue);
 802ceee:	4a25      	ldr	r2, [pc, #148]	; (802cf84 <HAL_RCC_OscConfig+0x25c>)
 802cef0:	6961      	ldr	r1, [r4, #20]
 802cef2:	6913      	ldr	r3, [r2, #16]
 802cef4:	f423 13f8 	bic.w	r3, r3, #2031616	; 0x1f0000
 802cef8:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
 802cefc:	6113      	str	r3, [r2, #16]
      if (RCC_OscInitStruct->HSIState == RCC_HSI_OFF)
 802cefe:	e731      	b.n	802cd64 <HAL_RCC_OscConfig+0x3c>
      if (RCC_OscInitStruct->HSIState != RCC_HSI_OFF)
 802cf00:	4d20      	ldr	r5, [pc, #128]	; (802cf84 <HAL_RCC_OscConfig+0x25c>)
 802cf02:	b1bb      	cbz	r3, 802cf34 <HAL_RCC_OscConfig+0x20c>
        __HAL_RCC_HSI_ENABLE();
 802cf04:	682b      	ldr	r3, [r5, #0]
 802cf06:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 802cf0a:	602b      	str	r3, [r5, #0]
        tickstart = HAL_GetTick();
 802cf0c:	f7fe f890 	bl	802b030 <HAL_GetTick>
 802cf10:	4607      	mov	r7, r0
        while (READ_BIT(RCC->CR, RCC_CR_HSIRDY) == 0U)
 802cf12:	682b      	ldr	r3, [r5, #0]
 802cf14:	055a      	lsls	r2, r3, #21
 802cf16:	d507      	bpl.n	802cf28 <HAL_RCC_OscConfig+0x200>
        __HAL_RCC_HSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->HSICalibrationValue);
 802cf18:	692b      	ldr	r3, [r5, #16]
 802cf1a:	6962      	ldr	r2, [r4, #20]
 802cf1c:	f423 13f8 	bic.w	r3, r3, #2031616	; 0x1f0000
 802cf20:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 802cf24:	612b      	str	r3, [r5, #16]
 802cf26:	e71d      	b.n	802cd64 <HAL_RCC_OscConfig+0x3c>
          if ((HAL_GetTick() - tickstart) > HSI_TIMEOUT_VALUE)
 802cf28:	f7fe f882 	bl	802b030 <HAL_GetTick>
 802cf2c:	1bc0      	subs	r0, r0, r7
 802cf2e:	2802      	cmp	r0, #2
 802cf30:	d9ef      	bls.n	802cf12 <HAL_RCC_OscConfig+0x1ea>
 802cf32:	e7ac      	b.n	802ce8e <HAL_RCC_OscConfig+0x166>
        __HAL_RCC_HSI_DISABLE();
 802cf34:	682b      	ldr	r3, [r5, #0]
 802cf36:	f423 7380 	bic.w	r3, r3, #256	; 0x100
 802cf3a:	602b      	str	r3, [r5, #0]
        tickstart = HAL_GetTick();
 802cf3c:	f7fe f878 	bl	802b030 <HAL_GetTick>
 802cf40:	4607      	mov	r7, r0
        while (READ_BIT(RCC->CR, RCC_CR_HSIRDY) != 0U)
 802cf42:	682b      	ldr	r3, [r5, #0]
 802cf44:	055b      	lsls	r3, r3, #21
 802cf46:	f57f af0d 	bpl.w	802cd64 <HAL_RCC_OscConfig+0x3c>
          if ((HAL_GetTick() - tickstart) > HSI_TIMEOUT_VALUE)
 802cf4a:	f7fe f871 	bl	802b030 <HAL_GetTick>
 802cf4e:	1bc0      	subs	r0, r0, r7
 802cf50:	2802      	cmp	r0, #2
 802cf52:	d9f6      	bls.n	802cf42 <HAL_RCC_OscConfig+0x21a>
 802cf54:	e79b      	b.n	802ce8e <HAL_RCC_OscConfig+0x166>
    FlagStatus  pwrclkchanged = RESET;
 802cf56:	f04f 0800 	mov.w	r8, #0
 802cf5a:	e724      	b.n	802cda6 <HAL_RCC_OscConfig+0x7e>
      SET_BIT(PWR->DBPR, PWR_DBPR_DBP);
 802cf5c:	6aab      	ldr	r3, [r5, #40]	; 0x28
 802cf5e:	f043 0301 	orr.w	r3, r3, #1
 802cf62:	62ab      	str	r3, [r5, #40]	; 0x28
      tickstart = HAL_GetTick();
 802cf64:	f7fe f864 	bl	802b030 <HAL_GetTick>
 802cf68:	4607      	mov	r7, r0
      while (HAL_IS_BIT_CLR(PWR->DBPR, PWR_DBPR_DBP))
 802cf6a:	6aab      	ldr	r3, [r5, #40]	; 0x28
 802cf6c:	07db      	lsls	r3, r3, #31
 802cf6e:	f53f af1f 	bmi.w	802cdb0 <HAL_RCC_OscConfig+0x88>
        if ((HAL_GetTick() - tickstart) > RCC_DBP_TIMEOUT_VALUE)
 802cf72:	f7fe f85d 	bl	802b030 <HAL_GetTick>
 802cf76:	1bc0      	subs	r0, r0, r7
 802cf78:	2802      	cmp	r0, #2
 802cf7a:	d9f6      	bls.n	802cf6a <HAL_RCC_OscConfig+0x242>
 802cf7c:	e787      	b.n	802ce8e <HAL_RCC_OscConfig+0x166>
 802cf7e:	bf00      	nop
 802cf80:	08033ee2 	.word	0x08033ee2
 802cf84:	46020c00 	.word	0x46020c00
 802cf88:	46020800 	.word	0x46020800
 802cf8c:	01e84800 	.word	0x01e84800
 802cf90:	200004d0 	.word	0x200004d0
 802cf94:	200004d8 	.word	0x200004d8
      if ((RCC_OscInitStruct->LSIState & RCC_LSI1_ON) != 0x00u)
 802cf98:	0158      	lsls	r0, r3, #5
 802cf9a:	d523      	bpl.n	802cfe4 <HAL_RCC_OscConfig+0x2bc>
        assert_param(IS_RCC_LSIDIV(RCC_OscInitStruct->LSIDiv));
 802cf9c:	69e3      	ldr	r3, [r4, #28]
 802cf9e:	f033 5380 	bics.w	r3, r3, #268435456	; 0x10000000
 802cfa2:	d004      	beq.n	802cfae <HAL_RCC_OscConfig+0x286>
 802cfa4:	f240 211a 	movw	r1, #538	; 0x21a
 802cfa8:	487a      	ldr	r0, [pc, #488]	; (802d194 <HAL_RCC_OscConfig+0x46c>)
 802cfaa:	f7f9 f8f7 	bl	802619c <assert_failed>
        if ((RCC_OscInitStruct->LSIDiv != (tmpreg1 & RCC_BDCR1_LSI1PREDIV)) && ((tmpreg1 & RCC_BDCR1_LSI1RDY) != 0x00u))
 802cfae:	69e2      	ldr	r2, [r4, #28]
 802cfb0:	f005 5380 	and.w	r3, r5, #268435456	; 0x10000000
 802cfb4:	429a      	cmp	r2, r3
 802cfb6:	d011      	beq.n	802cfdc <HAL_RCC_OscConfig+0x2b4>
 802cfb8:	0129      	lsls	r1, r5, #4
 802cfba:	d50f      	bpl.n	802cfdc <HAL_RCC_OscConfig+0x2b4>
          RCC->BDCR1 = tmpreg1;
 802cfbc:	f8df 91d8 	ldr.w	r9, [pc, #472]	; 802d198 <HAL_RCC_OscConfig+0x470>
          tmpreg1 &= ~RCC_BDCR1_LSI1ON;
 802cfc0:	f025 6580 	bic.w	r5, r5, #67108864	; 0x4000000
          RCC->BDCR1 = tmpreg1;
 802cfc4:	f8c9 50f0 	str.w	r5, [r9, #240]	; 0xf0
          tickstart = HAL_GetTick();
 802cfc8:	f7fe f832 	bl	802b030 <HAL_GetTick>
 802cfcc:	4607      	mov	r7, r0
          while (READ_BIT(RCC->BDCR1, RCC_BDCR1_LSI1RDY) != 0x00u)
 802cfce:	f8d9 30f0 	ldr.w	r3, [r9, #240]	; 0xf0
 802cfd2:	011a      	lsls	r2, r3, #4
 802cfd4:	d471      	bmi.n	802d0ba <HAL_RCC_OscConfig+0x392>
          HAL_Delay(1);
 802cfd6:	2001      	movs	r0, #1
 802cfd8:	f7fe f830 	bl	802b03c <HAL_Delay>
        tmpreg1 |= RCC_OscInitStruct->LSIDiv;
 802cfdc:	69e3      	ldr	r3, [r4, #28]
        tmpreg1 &= ~RCC_BDCR1_LSI1PREDIV;
 802cfde:	f025 5580 	bic.w	r5, r5, #268435456	; 0x10000000
        tmpreg1 |= RCC_OscInitStruct->LSIDiv;
 802cfe2:	431d      	orrs	r5, r3
      tmpreg1 |= RCC_OscInitStruct->LSIState;
 802cfe4:	69a3      	ldr	r3, [r4, #24]
      RCC->BDCR1 = tmpreg1;
 802cfe6:	4f6c      	ldr	r7, [pc, #432]	; (802d198 <HAL_RCC_OscConfig+0x470>)
      tmpreg1 |= RCC_OscInitStruct->LSIState;
 802cfe8:	432b      	orrs	r3, r5
      RCC->BDCR1 = tmpreg1;
 802cfea:	f8c7 30f0 	str.w	r3, [r7, #240]	; 0xf0
      tickstart = HAL_GetTick();
 802cfee:	f7fe f81f 	bl	802b030 <HAL_GetTick>
 802cff2:	4605      	mov	r5, r0
      while (READ_BIT(RCC->BDCR1, (RCC_OscInitStruct->LSIState << 1)) == 0x00u)
 802cff4:	f8d7 30f0 	ldr.w	r3, [r7, #240]	; 0xf0
 802cff8:	69a2      	ldr	r2, [r4, #24]
 802cffa:	ea13 0342 	ands.w	r3, r3, r2, lsl #1
 802cffe:	d062      	beq.n	802d0c6 <HAL_RCC_OscConfig+0x39e>
    if (pwrclkchanged == SET)
 802d000:	f1b8 0f00 	cmp.w	r8, #0
 802d004:	d006      	beq.n	802d014 <HAL_RCC_OscConfig+0x2ec>
      __HAL_RCC_PWR_CLK_DISABLE();
 802d006:	4a64      	ldr	r2, [pc, #400]	; (802d198 <HAL_RCC_OscConfig+0x470>)
 802d008:	f8d2 3094 	ldr.w	r3, [r2, #148]	; 0x94
 802d00c:	f023 0304 	bic.w	r3, r3, #4
 802d010:	f8c2 3094 	str.w	r3, [r2, #148]	; 0x94
  if (((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSE) == RCC_OSCILLATORTYPE_LSE)
 802d014:	6823      	ldr	r3, [r4, #0]
 802d016:	0758      	lsls	r0, r3, #29
 802d018:	f140 8092 	bpl.w	802d140 <HAL_RCC_OscConfig+0x418>
    assert_param(IS_RCC_LSE(RCC_OscInitStruct->LSEState));
 802d01c:	68e3      	ldr	r3, [r4, #12]
 802d01e:	2b01      	cmp	r3, #1
 802d020:	d90a      	bls.n	802d038 <HAL_RCC_OscConfig+0x310>
 802d022:	2b81      	cmp	r3, #129	; 0x81
 802d024:	d008      	beq.n	802d038 <HAL_RCC_OscConfig+0x310>
 802d026:	f023 0380 	bic.w	r3, r3, #128	; 0x80
 802d02a:	2b05      	cmp	r3, #5
 802d02c:	d004      	beq.n	802d038 <HAL_RCC_OscConfig+0x310>
 802d02e:	f44f 711f 	mov.w	r1, #636	; 0x27c
 802d032:	4858      	ldr	r0, [pc, #352]	; (802d194 <HAL_RCC_OscConfig+0x46c>)
 802d034:	f7f9 f8b2 	bl	802619c <assert_failed>
    if (__HAL_RCC_PWR_IS_CLK_ENABLED() != 0x01)
 802d038:	4b57      	ldr	r3, [pc, #348]	; (802d198 <HAL_RCC_OscConfig+0x470>)
 802d03a:	f8d3 2094 	ldr.w	r2, [r3, #148]	; 0x94
 802d03e:	0751      	lsls	r1, r2, #29
 802d040:	d447      	bmi.n	802d0d2 <HAL_RCC_OscConfig+0x3aa>
      pwrclkchanged = SET;
 802d042:	f04f 0801 	mov.w	r8, #1
      __HAL_RCC_PWR_CLK_ENABLE();
 802d046:	f8d3 2094 	ldr.w	r2, [r3, #148]	; 0x94
 802d04a:	f042 0204 	orr.w	r2, r2, #4
 802d04e:	f8c3 2094 	str.w	r2, [r3, #148]	; 0x94
 802d052:	f8d3 3094 	ldr.w	r3, [r3, #148]	; 0x94
 802d056:	f003 0304 	and.w	r3, r3, #4
 802d05a:	9301      	str	r3, [sp, #4]
 802d05c:	9b01      	ldr	r3, [sp, #4]
    if (HAL_IS_BIT_CLR(PWR->DBPR, PWR_DBPR_DBP))
 802d05e:	4d4f      	ldr	r5, [pc, #316]	; (802d19c <HAL_RCC_OscConfig+0x474>)
 802d060:	6aab      	ldr	r3, [r5, #40]	; 0x28
 802d062:	07da      	lsls	r2, r3, #31
 802d064:	d538      	bpl.n	802d0d8 <HAL_RCC_OscConfig+0x3b0>
    if (RCC_OscInitStruct->LSEState != RCC_LSE_OFF)
 802d066:	68e3      	ldr	r3, [r4, #12]
 802d068:	4d4b      	ldr	r5, [pc, #300]	; (802d198 <HAL_RCC_OscConfig+0x470>)
 802d06a:	2b00      	cmp	r3, #0
 802d06c:	d144      	bne.n	802d0f8 <HAL_RCC_OscConfig+0x3d0>
      CLEAR_BIT(RCC->BDCR1, (RCC_BDCR1_LSEON | RCC_BDCR1_LSESYSEN));
 802d06e:	f8d5 30f0 	ldr.w	r3, [r5, #240]	; 0xf0
        if ((HAL_GetTick() - tickstart) > RCC_LSE_TIMEOUT_VALUE)
 802d072:	f241 3988 	movw	r9, #5000	; 0x1388
      CLEAR_BIT(RCC->BDCR1, (RCC_BDCR1_LSEON | RCC_BDCR1_LSESYSEN));
 802d076:	f023 0381 	bic.w	r3, r3, #129	; 0x81
 802d07a:	f8c5 30f0 	str.w	r3, [r5, #240]	; 0xf0
      CLEAR_BIT(RCC->BDCR1, RCC_BDCR1_LSEBYP);
 802d07e:	f8d5 30f0 	ldr.w	r3, [r5, #240]	; 0xf0
 802d082:	f023 0304 	bic.w	r3, r3, #4
 802d086:	f8c5 30f0 	str.w	r3, [r5, #240]	; 0xf0
      tickstart = HAL_GetTick();
 802d08a:	f7fd ffd1 	bl	802b030 <HAL_GetTick>
 802d08e:	4607      	mov	r7, r0
      while (READ_BIT(RCC->BDCR1, RCC_BDCR1_LSERDY) != 0U)
 802d090:	f8d5 30f0 	ldr.w	r3, [r5, #240]	; 0xf0
 802d094:	0798      	lsls	r0, r3, #30
 802d096:	d476      	bmi.n	802d186 <HAL_RCC_OscConfig+0x45e>
      if (READ_BIT(RCC->BDCR1, RCC_BDCR1_LSESYSEN) != 0U)
 802d098:	f8d5 30f0 	ldr.w	r3, [r5, #240]	; 0xf0
 802d09c:	0619      	lsls	r1, r3, #24
 802d09e:	d545      	bpl.n	802d12c <HAL_RCC_OscConfig+0x404>
          if ((HAL_GetTick() - tickstart) > RCC_LSE_TIMEOUT_VALUE)
 802d0a0:	f241 3988 	movw	r9, #5000	; 0x1388
        while (READ_BIT(RCC->BDCR1, RCC_BDCR1_LSESYSRDY) != 0U)
 802d0a4:	4d3c      	ldr	r5, [pc, #240]	; (802d198 <HAL_RCC_OscConfig+0x470>)
 802d0a6:	f8d5 30f0 	ldr.w	r3, [r5, #240]	; 0xf0
 802d0aa:	051a      	lsls	r2, r3, #20
 802d0ac:	d53e      	bpl.n	802d12c <HAL_RCC_OscConfig+0x404>
          if ((HAL_GetTick() - tickstart) > RCC_LSE_TIMEOUT_VALUE)
 802d0ae:	f7fd ffbf 	bl	802b030 <HAL_GetTick>
 802d0b2:	1bc0      	subs	r0, r0, r7
 802d0b4:	4548      	cmp	r0, r9
 802d0b6:	d9f6      	bls.n	802d0a6 <HAL_RCC_OscConfig+0x37e>
 802d0b8:	e6e9      	b.n	802ce8e <HAL_RCC_OscConfig+0x166>
            if ((HAL_GetTick() - tickstart) > LSI_TIMEOUT_VALUE)
 802d0ba:	f7fd ffb9 	bl	802b030 <HAL_GetTick>
 802d0be:	1bc0      	subs	r0, r0, r7
 802d0c0:	2814      	cmp	r0, #20
 802d0c2:	d984      	bls.n	802cfce <HAL_RCC_OscConfig+0x2a6>
 802d0c4:	e6e3      	b.n	802ce8e <HAL_RCC_OscConfig+0x166>
        if ((HAL_GetTick() - tickstart) > LSI_TIMEOUT_VALUE)
 802d0c6:	f7fd ffb3 	bl	802b030 <HAL_GetTick>
 802d0ca:	1b40      	subs	r0, r0, r5
 802d0cc:	2814      	cmp	r0, #20
 802d0ce:	d991      	bls.n	802cff4 <HAL_RCC_OscConfig+0x2cc>
 802d0d0:	e6dd      	b.n	802ce8e <HAL_RCC_OscConfig+0x166>
    FlagStatus       pwrclkchanged = RESET;
 802d0d2:	f04f 0800 	mov.w	r8, #0
 802d0d6:	e7c2      	b.n	802d05e <HAL_RCC_OscConfig+0x336>
      SET_BIT(PWR->DBPR, PWR_DBPR_DBP);
 802d0d8:	6aab      	ldr	r3, [r5, #40]	; 0x28
 802d0da:	f043 0301 	orr.w	r3, r3, #1
 802d0de:	62ab      	str	r3, [r5, #40]	; 0x28
      tickstart = HAL_GetTick();
 802d0e0:	f7fd ffa6 	bl	802b030 <HAL_GetTick>
 802d0e4:	4607      	mov	r7, r0
      while (HAL_IS_BIT_CLR(PWR->DBPR, PWR_DBPR_DBP))
 802d0e6:	6aab      	ldr	r3, [r5, #40]	; 0x28
 802d0e8:	07db      	lsls	r3, r3, #31
 802d0ea:	d4bc      	bmi.n	802d066 <HAL_RCC_OscConfig+0x33e>
        if ((HAL_GetTick() - tickstart) > RCC_DBP_TIMEOUT_VALUE)
 802d0ec:	f7fd ffa0 	bl	802b030 <HAL_GetTick>
 802d0f0:	1bc0      	subs	r0, r0, r7
 802d0f2:	2802      	cmp	r0, #2
 802d0f4:	d9f7      	bls.n	802d0e6 <HAL_RCC_OscConfig+0x3be>
 802d0f6:	e6ca      	b.n	802ce8e <HAL_RCC_OscConfig+0x166>
      tmpreg1 = (RCC->BDCR1 & ~RCC_BDCR1_LSESYSEN);
 802d0f8:	f8d5 20f0 	ldr.w	r2, [r5, #240]	; 0xf0
        if ((HAL_GetTick() - tickstart) > RCC_LSE_TIMEOUT_VALUE)
 802d0fc:	f241 3988 	movw	r9, #5000	; 0x1388
      tmpreg1 = (RCC->BDCR1 & ~RCC_BDCR1_LSESYSEN);
 802d100:	f022 0280 	bic.w	r2, r2, #128	; 0x80
      tmpreg1 |= RCC_OscInitStruct->LSEState;
 802d104:	4313      	orrs	r3, r2
      RCC->BDCR1 = tmpreg1;
 802d106:	f8c5 30f0 	str.w	r3, [r5, #240]	; 0xf0
      tickstart = HAL_GetTick();
 802d10a:	f7fd ff91 	bl	802b030 <HAL_GetTick>
 802d10e:	4607      	mov	r7, r0
      while (READ_BIT(RCC->BDCR1, RCC_BDCR1_LSERDY) == 0U)
 802d110:	f8d5 30f0 	ldr.w	r3, [r5, #240]	; 0xf0
 802d114:	0798      	lsls	r0, r3, #30
 802d116:	d51f      	bpl.n	802d158 <HAL_RCC_OscConfig+0x430>
      if ((RCC_OscInitStruct->LSEState & RCC_BDCR1_LSESYSEN) != 0U)
 802d118:	68e3      	ldr	r3, [r4, #12]
          if ((HAL_GetTick() - tickstart) > RCC_LSE_TIMEOUT_VALUE)
 802d11a:	f241 3988 	movw	r9, #5000	; 0x1388
      if ((RCC_OscInitStruct->LSEState & RCC_BDCR1_LSESYSEN) != 0U)
 802d11e:	0619      	lsls	r1, r3, #24
        while (READ_BIT(RCC->BDCR1, RCC_BDCR1_LSESYSRDY) == 0U)
 802d120:	4d1d      	ldr	r5, [pc, #116]	; (802d198 <HAL_RCC_OscConfig+0x470>)
      if ((RCC_OscInitStruct->LSEState & RCC_BDCR1_LSESYSEN) != 0U)
 802d122:	d52b      	bpl.n	802d17c <HAL_RCC_OscConfig+0x454>
        while (READ_BIT(RCC->BDCR1, RCC_BDCR1_LSESYSRDY) == 0U)
 802d124:	f8d5 30f0 	ldr.w	r3, [r5, #240]	; 0xf0
 802d128:	051a      	lsls	r2, r3, #20
 802d12a:	d51b      	bpl.n	802d164 <HAL_RCC_OscConfig+0x43c>
    if (pwrclkchanged == SET)
 802d12c:	f1b8 0f00 	cmp.w	r8, #0
 802d130:	d006      	beq.n	802d140 <HAL_RCC_OscConfig+0x418>
      __HAL_RCC_PWR_CLK_DISABLE();
 802d132:	4a19      	ldr	r2, [pc, #100]	; (802d198 <HAL_RCC_OscConfig+0x470>)
 802d134:	f8d2 3094 	ldr.w	r3, [r2, #148]	; 0x94
 802d138:	f023 0304 	bic.w	r3, r3, #4
 802d13c:	f8c2 3094 	str.w	r3, [r2, #148]	; 0x94
  assert_param(IS_RCC_PLL(RCC_OscInitStruct->PLL1.PLLState));
 802d140:	6a23      	ldr	r3, [r4, #32]
 802d142:	2b02      	cmp	r3, #2
 802d144:	d904      	bls.n	802d150 <HAL_RCC_OscConfig+0x428>
 802d146:	f240 21eb 	movw	r1, #747	; 0x2eb
 802d14a:	4812      	ldr	r0, [pc, #72]	; (802d194 <HAL_RCC_OscConfig+0x46c>)
 802d14c:	f7f9 f826 	bl	802619c <assert_failed>
  if ((RCC_OscInitStruct->PLL1.PLLState) != RCC_PLL_NONE)
 802d150:	6a20      	ldr	r0, [r4, #32]
 802d152:	bb28      	cbnz	r0, 802d1a0 <HAL_RCC_OscConfig+0x478>
  return HAL_OK;
 802d154:	2000      	movs	r0, #0
 802d156:	e69b      	b.n	802ce90 <HAL_RCC_OscConfig+0x168>
        if ((HAL_GetTick() - tickstart) > RCC_LSE_TIMEOUT_VALUE)
 802d158:	f7fd ff6a 	bl	802b030 <HAL_GetTick>
 802d15c:	1bc0      	subs	r0, r0, r7
 802d15e:	4548      	cmp	r0, r9
 802d160:	d9d6      	bls.n	802d110 <HAL_RCC_OscConfig+0x3e8>
 802d162:	e694      	b.n	802ce8e <HAL_RCC_OscConfig+0x166>
          if ((HAL_GetTick() - tickstart) > RCC_LSE_TIMEOUT_VALUE)
 802d164:	f7fd ff64 	bl	802b030 <HAL_GetTick>
 802d168:	1bc0      	subs	r0, r0, r7
 802d16a:	4548      	cmp	r0, r9
 802d16c:	d9da      	bls.n	802d124 <HAL_RCC_OscConfig+0x3fc>
 802d16e:	e68e      	b.n	802ce8e <HAL_RCC_OscConfig+0x166>
          if ((HAL_GetTick() - tickstart) > RCC_LSE_TIMEOUT_VALUE)
 802d170:	f7fd ff5e 	bl	802b030 <HAL_GetTick>
 802d174:	1bc0      	subs	r0, r0, r7
 802d176:	4548      	cmp	r0, r9
 802d178:	f63f ae89 	bhi.w	802ce8e <HAL_RCC_OscConfig+0x166>
        while (READ_BIT(RCC->BDCR1, RCC_BDCR1_LSESYSRDY) != 0U)
 802d17c:	f8d5 30f0 	ldr.w	r3, [r5, #240]	; 0xf0
 802d180:	051b      	lsls	r3, r3, #20
 802d182:	d4f5      	bmi.n	802d170 <HAL_RCC_OscConfig+0x448>
 802d184:	e7d2      	b.n	802d12c <HAL_RCC_OscConfig+0x404>
        if ((HAL_GetTick() - tickstart) > RCC_LSE_TIMEOUT_VALUE)
 802d186:	f7fd ff53 	bl	802b030 <HAL_GetTick>
 802d18a:	1bc0      	subs	r0, r0, r7
 802d18c:	4548      	cmp	r0, r9
 802d18e:	f67f af7f 	bls.w	802d090 <HAL_RCC_OscConfig+0x368>
 802d192:	e67c      	b.n	802ce8e <HAL_RCC_OscConfig+0x166>
 802d194:	08033ee2 	.word	0x08033ee2
 802d198:	46020c00 	.word	0x46020c00
 802d19c:	46020800 	.word	0x46020800
    if (sysclksrc != RCC_SYSCLKSOURCE_STATUS_PLLCLK)
 802d1a0:	2e0c      	cmp	r6, #12
 802d1a2:	f000 80c7 	beq.w	802d334 <HAL_RCC_OscConfig+0x60c>
      if ((RCC_OscInitStruct->PLL1.PLLState) == RCC_PLL_ON)
 802d1a6:	2802      	cmp	r0, #2
 802d1a8:	f040 80ab 	bne.w	802d302 <HAL_RCC_OscConfig+0x5da>
        assert_param(IS_RCC_PLLSOURCE(RCC_OscInitStruct->PLL1.PLLSource));
 802d1ac:	6a63      	ldr	r3, [r4, #36]	; 0x24
 802d1ae:	3b02      	subs	r3, #2
 802d1b0:	2b01      	cmp	r3, #1
 802d1b2:	d904      	bls.n	802d1be <HAL_RCC_OscConfig+0x496>
 802d1b4:	f240 21f5 	movw	r1, #757	; 0x2f5
 802d1b8:	4887      	ldr	r0, [pc, #540]	; (802d3d8 <HAL_RCC_OscConfig+0x6b0>)
 802d1ba:	f7f8 ffef 	bl	802619c <assert_failed>
        assert_param(IS_RCC_PLLM_VALUE(RCC_OscInitStruct->PLL1.PLLM));
 802d1be:	6aa3      	ldr	r3, [r4, #40]	; 0x28
 802d1c0:	3b01      	subs	r3, #1
 802d1c2:	2b07      	cmp	r3, #7
 802d1c4:	d904      	bls.n	802d1d0 <HAL_RCC_OscConfig+0x4a8>
 802d1c6:	f240 21f6 	movw	r1, #758	; 0x2f6
 802d1ca:	4883      	ldr	r0, [pc, #524]	; (802d3d8 <HAL_RCC_OscConfig+0x6b0>)
 802d1cc:	f7f8 ffe6 	bl	802619c <assert_failed>
        assert_param(IS_RCC_PLLN_VALUE(RCC_OscInitStruct->PLL1.PLLN));
 802d1d0:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 802d1d2:	3b04      	subs	r3, #4
 802d1d4:	f5b3 7ffe 	cmp.w	r3, #508	; 0x1fc
 802d1d8:	d904      	bls.n	802d1e4 <HAL_RCC_OscConfig+0x4bc>
 802d1da:	f240 21f7 	movw	r1, #759	; 0x2f7
 802d1de:	487e      	ldr	r0, [pc, #504]	; (802d3d8 <HAL_RCC_OscConfig+0x6b0>)
 802d1e0:	f7f8 ffdc 	bl	802619c <assert_failed>
        assert_param(IS_RCC_PLLP_VALUE(RCC_OscInitStruct->PLL1.PLLP));
 802d1e4:	6b23      	ldr	r3, [r4, #48]	; 0x30
 802d1e6:	3b01      	subs	r3, #1
 802d1e8:	2b7f      	cmp	r3, #127	; 0x7f
 802d1ea:	d904      	bls.n	802d1f6 <HAL_RCC_OscConfig+0x4ce>
 802d1ec:	f44f 713e 	mov.w	r1, #760	; 0x2f8
 802d1f0:	4879      	ldr	r0, [pc, #484]	; (802d3d8 <HAL_RCC_OscConfig+0x6b0>)
 802d1f2:	f7f8 ffd3 	bl	802619c <assert_failed>
        assert_param(IS_RCC_PLLQ_VALUE(RCC_OscInitStruct->PLL1.PLLQ));
 802d1f6:	6b63      	ldr	r3, [r4, #52]	; 0x34
 802d1f8:	3b01      	subs	r3, #1
 802d1fa:	2b7f      	cmp	r3, #127	; 0x7f
 802d1fc:	d904      	bls.n	802d208 <HAL_RCC_OscConfig+0x4e0>
 802d1fe:	f240 21f9 	movw	r1, #761	; 0x2f9
 802d202:	4875      	ldr	r0, [pc, #468]	; (802d3d8 <HAL_RCC_OscConfig+0x6b0>)
 802d204:	f7f8 ffca 	bl	802619c <assert_failed>
        assert_param(IS_RCC_PLLR_VALUE(RCC_OscInitStruct->PLL1.PLLR));
 802d208:	6ba3      	ldr	r3, [r4, #56]	; 0x38
 802d20a:	3b01      	subs	r3, #1
 802d20c:	2b7f      	cmp	r3, #127	; 0x7f
 802d20e:	d904      	bls.n	802d21a <HAL_RCC_OscConfig+0x4f2>
 802d210:	f240 21fa 	movw	r1, #762	; 0x2fa
 802d214:	4870      	ldr	r0, [pc, #448]	; (802d3d8 <HAL_RCC_OscConfig+0x6b0>)
 802d216:	f7f8 ffc1 	bl	802619c <assert_failed>
        tmpreg1 = (RCC->CR & ~RCC_CR_PLL1ON);
 802d21a:	f8df 81d0 	ldr.w	r8, [pc, #464]	; 802d3ec <HAL_RCC_OscConfig+0x6c4>
 802d21e:	f8d8 3000 	ldr.w	r3, [r8]
 802d222:	f023 7380 	bic.w	r3, r3, #16777216	; 0x1000000
        RCC->CR = tmpreg1;
 802d226:	f8c8 3000 	str.w	r3, [r8]
        tickstart = HAL_GetTick();
 802d22a:	f7fd ff01 	bl	802b030 <HAL_GetTick>
 802d22e:	4607      	mov	r7, r0
          tmpreg1 = RCC->CR;
 802d230:	f8d8 5000 	ldr.w	r5, [r8]
          if ((HAL_GetTick() - tickstart) > PLL_TIMEOUT_VALUE)
 802d234:	f7fd fefc 	bl	802b030 <HAL_GetTick>
 802d238:	1bc0      	subs	r0, r0, r7
 802d23a:	2802      	cmp	r0, #2
 802d23c:	f63f ae27 	bhi.w	802ce8e <HAL_RCC_OscConfig+0x166>
        } while ((tmpreg1 & RCC_CR_PLL1RDY) != 0U);
 802d240:	f015 7600 	ands.w	r6, r5, #33554432	; 0x2000000
 802d244:	d1f4      	bne.n	802d230 <HAL_RCC_OscConfig+0x508>
        if (RCC_OscInitStruct->PLL1.PLLSource == RCC_PLLSOURCE_HSE)
 802d246:	6a63      	ldr	r3, [r4, #36]	; 0x24
 802d248:	2b03      	cmp	r3, #3
          pllsrc = HSE_VALUE >> ((tmpreg1 & RCC_CR_HSEPRE) >> RCC_CR_HSEPRE_Pos);
 802d24a:	bf06      	itte	eq
 802d24c:	f3c5 5200 	ubfxeq	r2, r5, #20, #1
 802d250:	4d62      	ldreq	r5, [pc, #392]	; (802d3dc <HAL_RCC_OscConfig+0x6b4>)
          pllsrc = HSI_VALUE;
 802d252:	4d63      	ldrne	r5, [pc, #396]	; (802d3e0 <HAL_RCC_OscConfig+0x6b8>)
        pllsrc = (pllsrc / RCC_OscInitStruct->PLL1.PLLM);
 802d254:	6aa3      	ldr	r3, [r4, #40]	; 0x28
          pllsrc = HSE_VALUE >> ((tmpreg1 & RCC_CR_HSEPRE) >> RCC_CR_HSEPRE_Pos);
 802d256:	bf08      	it	eq
 802d258:	40d5      	lsreq	r5, r2
        pllsrc = (pllsrc / RCC_OscInitStruct->PLL1.PLLM);
 802d25a:	fbb5 f5f3 	udiv	r5, r5, r3
        assert_param(IS_RCC_PLL_VCOINPUTFREQ(pllsrc));
 802d25e:	4a61      	ldr	r2, [pc, #388]	; (802d3e4 <HAL_RCC_OscConfig+0x6bc>)
 802d260:	f5a5 1374 	sub.w	r3, r5, #3997696	; 0x3d0000
 802d264:	f5a3 6310 	sub.w	r3, r3, #2304	; 0x900
 802d268:	4293      	cmp	r3, r2
 802d26a:	d904      	bls.n	802d276 <HAL_RCC_OscConfig+0x54e>
 802d26c:	f240 311b 	movw	r1, #795	; 0x31b
 802d270:	4859      	ldr	r0, [pc, #356]	; (802d3d8 <HAL_RCC_OscConfig+0x6b0>)
 802d272:	f7f8 ff93 	bl	802619c <assert_failed>
          pllsrc = RCC_PLL_VCOINPUT_RANGE1;
 802d276:	4b5c      	ldr	r3, [pc, #368]	; (802d3e8 <HAL_RCC_OscConfig+0x6c0>)
        tmpreg2 |= (RCC_OscInitStruct->PLL1.PLLSource | pllsrc |
 802d278:	6a62      	ldr	r2, [r4, #36]	; 0x24
          pllsrc = RCC_PLL_VCOINPUT_RANGE1;
 802d27a:	429d      	cmp	r5, r3
 802d27c:	bf88      	it	hi
 802d27e:	260c      	movhi	r6, #12
        tmpreg2 = RCC->PLL1CFGR;
 802d280:	4d5a      	ldr	r5, [pc, #360]	; (802d3ec <HAL_RCC_OscConfig+0x6c4>)
 802d282:	6aab      	ldr	r3, [r5, #40]	; 0x28
        tmpreg2 &= ~(RCC_PLL1CFGR_PLL1SRC | RCC_PLL1CFGR_PLL1RGE | RCC_PLL1CFGR_PLL1FRACEN | RCC_PLL1CFGR_PLL1M);
 802d284:	f423 63e3 	bic.w	r3, r3, #1816	; 0x718
 802d288:	f023 0307 	bic.w	r3, r3, #7
        tmpreg2 |= (RCC_OscInitStruct->PLL1.PLLSource | pllsrc |
 802d28c:	4333      	orrs	r3, r6
 802d28e:	4313      	orrs	r3, r2
                    ((RCC_OscInitStruct->PLL1.PLLM - 1u) << RCC_PLL1CFGR_PLL1M_Pos) | RCC_PLL1CFGR_PLL1REN);
 802d290:	6aa2      	ldr	r2, [r4, #40]	; 0x28
 802d292:	3a01      	subs	r2, #1
        tmpreg2 |= (RCC_OscInitStruct->PLL1.PLLSource | pllsrc |
 802d294:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
 802d298:	f443 2380 	orr.w	r3, r3, #262144	; 0x40000
        RCC->PLL1CFGR = tmpreg2;
 802d29c:	62ab      	str	r3, [r5, #40]	; 0x28
                   ((RCC_OscInitStruct->PLL1.PLLP - 1u) << RCC_PLL1DIVR_PLL1P_Pos) |
 802d29e:	6b23      	ldr	r3, [r4, #48]	; 0x30
 802d2a0:	1e5a      	subs	r2, r3, #1
                   ((RCC_OscInitStruct->PLL1.PLLQ - 1u) << RCC_PLL1DIVR_PLL1Q_Pos) |
 802d2a2:	6b63      	ldr	r3, [r4, #52]	; 0x34
 802d2a4:	3b01      	subs	r3, #1
 802d2a6:	041b      	lsls	r3, r3, #16
                   ((RCC_OscInitStruct->PLL1.PLLP - 1u) << RCC_PLL1DIVR_PLL1P_Pos) |
 802d2a8:	ea43 2342 	orr.w	r3, r3, r2, lsl #9
        tmpreg2 = ((RCC_OscInitStruct->PLL1.PLLN - 1u) |
 802d2ac:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 802d2ae:	3a01      	subs	r2, #1
                   ((RCC_OscInitStruct->PLL1.PLLP - 1u) << RCC_PLL1DIVR_PLL1P_Pos) |
 802d2b0:	4313      	orrs	r3, r2
                   ((RCC_OscInitStruct->PLL1.PLLR - 1u) << RCC_PLL1DIVR_PLL1R_Pos));
 802d2b2:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 802d2b4:	3a01      	subs	r2, #1
        tmpreg2 = ((RCC_OscInitStruct->PLL1.PLLN - 1u) |
 802d2b6:	ea43 6302 	orr.w	r3, r3, r2, lsl #24
        RCC->PLL1DIVR = tmpreg2;
 802d2ba:	636b      	str	r3, [r5, #52]	; 0x34
        if (RCC_OscInitStruct->PLL1.PLLFractional != 0x00u)
 802d2bc:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 802d2be:	b173      	cbz	r3, 802d2de <HAL_RCC_OscConfig+0x5b6>
          assert_param(IS_RCC_PLLFRACN_VALUE(RCC_OscInitStruct->PLL1.PLLFractional));
 802d2c0:	f5b3 5f00 	cmp.w	r3, #8192	; 0x2000
 802d2c4:	d304      	bcc.n	802d2d0 <HAL_RCC_OscConfig+0x5a8>
 802d2c6:	f44f 714e 	mov.w	r1, #824	; 0x338
 802d2ca:	4843      	ldr	r0, [pc, #268]	; (802d3d8 <HAL_RCC_OscConfig+0x6b0>)
 802d2cc:	f7f8 ff66 	bl	802619c <assert_failed>
          __HAL_RCC_PLL1_FRACN_CONFIG(RCC_OscInitStruct->PLL1.PLLFractional);
 802d2d0:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 802d2d2:	00db      	lsls	r3, r3, #3
 802d2d4:	63ab      	str	r3, [r5, #56]	; 0x38
          __HAL_RCC_PLL1_FRACN_ENABLE();
 802d2d6:	6aab      	ldr	r3, [r5, #40]	; 0x28
 802d2d8:	f043 0310 	orr.w	r3, r3, #16
 802d2dc:	62ab      	str	r3, [r5, #40]	; 0x28
        __HAL_RCC_PLL1_ENABLE();
 802d2de:	4c43      	ldr	r4, [pc, #268]	; (802d3ec <HAL_RCC_OscConfig+0x6c4>)
 802d2e0:	6823      	ldr	r3, [r4, #0]
 802d2e2:	f043 7380 	orr.w	r3, r3, #16777216	; 0x1000000
 802d2e6:	6023      	str	r3, [r4, #0]
        tickstart = HAL_GetTick();
 802d2e8:	f7fd fea2 	bl	802b030 <HAL_GetTick>
 802d2ec:	4605      	mov	r5, r0
        while (READ_BIT(RCC->CR, RCC_CR_PLL1RDY) == 0U)
 802d2ee:	6823      	ldr	r3, [r4, #0]
 802d2f0:	019b      	lsls	r3, r3, #6
 802d2f2:	f53f af2f 	bmi.w	802d154 <HAL_RCC_OscConfig+0x42c>
          if ((HAL_GetTick() - tickstart) > PLL_TIMEOUT_VALUE)
 802d2f6:	f7fd fe9b 	bl	802b030 <HAL_GetTick>
 802d2fa:	1b40      	subs	r0, r0, r5
 802d2fc:	2802      	cmp	r0, #2
 802d2fe:	d9f6      	bls.n	802d2ee <HAL_RCC_OscConfig+0x5c6>
 802d300:	e5c5      	b.n	802ce8e <HAL_RCC_OscConfig+0x166>
        __HAL_RCC_PLL1_DISABLE();
 802d302:	4c3a      	ldr	r4, [pc, #232]	; (802d3ec <HAL_RCC_OscConfig+0x6c4>)
 802d304:	6823      	ldr	r3, [r4, #0]
 802d306:	f023 7380 	bic.w	r3, r3, #16777216	; 0x1000000
 802d30a:	6023      	str	r3, [r4, #0]
        tickstart = HAL_GetTick();
 802d30c:	f7fd fe90 	bl	802b030 <HAL_GetTick>
 802d310:	4605      	mov	r5, r0
        while (READ_BIT(RCC->CR, RCC_CR_PLL1RDY) != 0U)
 802d312:	6823      	ldr	r3, [r4, #0]
 802d314:	f013 7300 	ands.w	r3, r3, #33554432	; 0x2000000
 802d318:	d106      	bne.n	802d328 <HAL_RCC_OscConfig+0x600>
        CLEAR_BIT(RCC->PLL1CFGR, (RCC_PLL1CFGR_PLL1SRC | RCC_PLL1CFGR_PLL1PEN | \
 802d31a:	6aa2      	ldr	r2, [r4, #40]	; 0x28
 802d31c:	f422 22e0 	bic.w	r2, r2, #458752	; 0x70000
 802d320:	f022 0203 	bic.w	r2, r2, #3
 802d324:	62a2      	str	r2, [r4, #40]	; 0x28
 802d326:	e715      	b.n	802d154 <HAL_RCC_OscConfig+0x42c>
          if ((HAL_GetTick() - tickstart) > PLL_TIMEOUT_VALUE)
 802d328:	f7fd fe82 	bl	802b030 <HAL_GetTick>
 802d32c:	1b40      	subs	r0, r0, r5
 802d32e:	2802      	cmp	r0, #2
 802d330:	d9ef      	bls.n	802d312 <HAL_RCC_OscConfig+0x5ea>
 802d332:	e5ac      	b.n	802ce8e <HAL_RCC_OscConfig+0x166>
      if ((RCC_OscInitStruct->PLL1.PLLState) == RCC_PLL_OFF)
 802d334:	2801      	cmp	r0, #1
 802d336:	f43f adab 	beq.w	802ce90 <HAL_RCC_OscConfig+0x168>
        tmpreg1 = RCC->PLL1CFGR;
 802d33a:	492c      	ldr	r1, [pc, #176]	; (802d3ec <HAL_RCC_OscConfig+0x6c4>)
        if (((tmpreg1 & RCC_PLL1CFGR_PLL1SRC) != RCC_OscInitStruct->PLL1.PLLSource) ||
 802d33c:	6a60      	ldr	r0, [r4, #36]	; 0x24
        tmpreg1 = RCC->PLL1CFGR;
 802d33e:	6a8a      	ldr	r2, [r1, #40]	; 0x28
        tmpreg2 = RCC->PLL1DIVR;
 802d340:	6b4b      	ldr	r3, [r1, #52]	; 0x34
        if (((tmpreg1 & RCC_PLL1CFGR_PLL1SRC) != RCC_OscInitStruct->PLL1.PLLSource) ||
 802d342:	f002 0503 	and.w	r5, r2, #3
 802d346:	4285      	cmp	r5, r0
 802d348:	f47f acf2 	bne.w	802cd30 <HAL_RCC_OscConfig+0x8>
            (((tmpreg1 & RCC_PLL1CFGR_PLL1M) >> RCC_PLL1CFGR_PLL1M_Pos) != (RCC_OscInitStruct->PLL1.PLLM - 1u)) ||
 802d34c:	6aa0      	ldr	r0, [r4, #40]	; 0x28
 802d34e:	f3c2 2202 	ubfx	r2, r2, #8, #3
 802d352:	3801      	subs	r0, #1
        if (((tmpreg1 & RCC_PLL1CFGR_PLL1SRC) != RCC_OscInitStruct->PLL1.PLLSource) ||
 802d354:	4282      	cmp	r2, r0
 802d356:	f47f aceb 	bne.w	802cd30 <HAL_RCC_OscConfig+0x8>
            (((tmpreg2 & RCC_PLL1DIVR_PLL1N) >> RCC_PLL1DIVR_PLL1N_Pos) != (RCC_OscInitStruct->PLL1.PLLN - 1u)) ||
 802d35a:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 802d35c:	f3c3 0008 	ubfx	r0, r3, #0, #9
 802d360:	3a01      	subs	r2, #1
            (((tmpreg1 & RCC_PLL1CFGR_PLL1M) >> RCC_PLL1CFGR_PLL1M_Pos) != (RCC_OscInitStruct->PLL1.PLLM - 1u)) ||
 802d362:	4290      	cmp	r0, r2
 802d364:	f47f ace4 	bne.w	802cd30 <HAL_RCC_OscConfig+0x8>
            (((tmpreg2 & RCC_PLL1DIVR_PLL1P) >> RCC_PLL1DIVR_PLL1P_Pos) != (RCC_OscInitStruct->PLL1.PLLP - 1u)) ||
 802d368:	6b22      	ldr	r2, [r4, #48]	; 0x30
 802d36a:	f3c3 2046 	ubfx	r0, r3, #9, #7
 802d36e:	3a01      	subs	r2, #1
            (((tmpreg2 & RCC_PLL1DIVR_PLL1N) >> RCC_PLL1DIVR_PLL1N_Pos) != (RCC_OscInitStruct->PLL1.PLLN - 1u)) ||
 802d370:	4290      	cmp	r0, r2
 802d372:	f47f acdd 	bne.w	802cd30 <HAL_RCC_OscConfig+0x8>
            (((tmpreg2 & RCC_PLL1DIVR_PLL1Q) >> RCC_PLL1DIVR_PLL1Q_Pos) != (RCC_OscInitStruct->PLL1.PLLQ - 1u)) ||
 802d376:	6b62      	ldr	r2, [r4, #52]	; 0x34
 802d378:	f3c3 4006 	ubfx	r0, r3, #16, #7
 802d37c:	3a01      	subs	r2, #1
            (((tmpreg2 & RCC_PLL1DIVR_PLL1P) >> RCC_PLL1DIVR_PLL1P_Pos) != (RCC_OscInitStruct->PLL1.PLLP - 1u)) ||
 802d37e:	4290      	cmp	r0, r2
 802d380:	f47f acd6 	bne.w	802cd30 <HAL_RCC_OscConfig+0x8>
            (((tmpreg2 & RCC_PLL1DIVR_PLL1R) >> RCC_PLL1DIVR_PLL1R_Pos) != (RCC_OscInitStruct->PLL1.PLLR - 1u)))
 802d384:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 802d386:	f3c3 6306 	ubfx	r3, r3, #24, #7
 802d38a:	3a01      	subs	r2, #1
            (((tmpreg2 & RCC_PLL1DIVR_PLL1Q) >> RCC_PLL1DIVR_PLL1Q_Pos) != (RCC_OscInitStruct->PLL1.PLLQ - 1u)) ||
 802d38c:	4293      	cmp	r3, r2
 802d38e:	f47f accf 	bne.w	802cd30 <HAL_RCC_OscConfig+0x8>
          tmpreg1 = ((RCC->PLL1FRACR & RCC_PLL1FRACR_PLL1FRACN) >> RCC_PLL1FRACR_PLL1FRACN_Pos);
 802d392:	6b8b      	ldr	r3, [r1, #56]	; 0x38
          if (RCC_OscInitStruct->PLL1.PLLFractional != tmpreg1)
 802d394:	6be2      	ldr	r2, [r4, #60]	; 0x3c
          tmpreg1 = ((RCC->PLL1FRACR & RCC_PLL1FRACR_PLL1FRACN) >> RCC_PLL1FRACR_PLL1FRACN_Pos);
 802d396:	f3c3 03cc 	ubfx	r3, r3, #3, #13
          if (RCC_OscInitStruct->PLL1.PLLFractional != tmpreg1)
 802d39a:	429a      	cmp	r2, r3
 802d39c:	f43f aeda 	beq.w	802d154 <HAL_RCC_OscConfig+0x42c>
            assert_param(IS_RCC_PLLFRACN_VALUE(RCC_OscInitStruct->PLL1.PLLFractional));
 802d3a0:	f5b2 5f00 	cmp.w	r2, #8192	; 0x2000
 802d3a4:	d304      	bcc.n	802d3b0 <HAL_RCC_OscConfig+0x688>
 802d3a6:	f240 3183 	movw	r1, #899	; 0x383
 802d3aa:	480b      	ldr	r0, [pc, #44]	; (802d3d8 <HAL_RCC_OscConfig+0x6b0>)
 802d3ac:	f7f8 fef6 	bl	802619c <assert_failed>
            __HAL_RCC_PLL1_FRACN_DISABLE();
 802d3b0:	4d0e      	ldr	r5, [pc, #56]	; (802d3ec <HAL_RCC_OscConfig+0x6c4>)
 802d3b2:	6aab      	ldr	r3, [r5, #40]	; 0x28
 802d3b4:	f023 0310 	bic.w	r3, r3, #16
 802d3b8:	62ab      	str	r3, [r5, #40]	; 0x28
            tickstart = HAL_GetTick();
 802d3ba:	f7fd fe39 	bl	802b030 <HAL_GetTick>
 802d3be:	4606      	mov	r6, r0
            while ((HAL_GetTick() - tickstart) < PLL_FRAC_WAIT_VALUE)
 802d3c0:	f7fd fe36 	bl	802b030 <HAL_GetTick>
 802d3c4:	42b0      	cmp	r0, r6
 802d3c6:	d0fb      	beq.n	802d3c0 <HAL_RCC_OscConfig+0x698>
            __HAL_RCC_PLL1_FRACN_CONFIG(RCC_OscInitStruct->PLL1.PLLFractional);
 802d3c8:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 802d3ca:	00db      	lsls	r3, r3, #3
 802d3cc:	63ab      	str	r3, [r5, #56]	; 0x38
            __HAL_RCC_PLL1_FRACN_ENABLE();
 802d3ce:	6aab      	ldr	r3, [r5, #40]	; 0x28
 802d3d0:	f043 0310 	orr.w	r3, r3, #16
 802d3d4:	62ab      	str	r3, [r5, #40]	; 0x28
 802d3d6:	e6bd      	b.n	802d154 <HAL_RCC_OscConfig+0x42c>
 802d3d8:	08033ee2 	.word	0x08033ee2
 802d3dc:	01e84800 	.word	0x01e84800
 802d3e0:	00f42400 	.word	0x00f42400
 802d3e4:	00b71b00 	.word	0x00b71b00
 802d3e8:	007a1200 	.word	0x007a1200
 802d3ec:	46020c00 	.word	0x46020c00

0802d3f0 <HAL_RCC_GetPLL1RFreq>:
  pllr = ((RCC->PLL1DIVR & RCC_PLL1DIVR_PLL1R) >> RCC_PLL1DIVR_PLL1R_Pos) + 1U;
 802d3f0:	4b07      	ldr	r3, [pc, #28]	; (802d410 <HAL_RCC_GetPLL1RFreq+0x20>)
{
 802d3f2:	b510      	push	{r4, lr}
  pllr = ((RCC->PLL1DIVR & RCC_PLL1DIVR_PLL1R) >> RCC_PLL1DIVR_PLL1R_Pos) + 1U;
 802d3f4:	6b5c      	ldr	r4, [r3, #52]	; 0x34
  return ((uint32_t)RCC_PLL1_GetVCOOutputFreq() / pllr);
 802d3f6:	f7ff fc51 	bl	802cc9c <RCC_PLL1_GetVCOOutputFreq>
 802d3fa:	eefc 7ac0 	vcvt.u32.f32	s15, s0
 802d3fe:	ee17 0a90 	vmov	r0, s15
  pllr = ((RCC->PLL1DIVR & RCC_PLL1DIVR_PLL1R) >> RCC_PLL1DIVR_PLL1R_Pos) + 1U;
 802d402:	f3c4 6406 	ubfx	r4, r4, #24, #7
 802d406:	3401      	adds	r4, #1
}
 802d408:	fbb0 f0f4 	udiv	r0, r0, r4
 802d40c:	bd10      	pop	{r4, pc}
 802d40e:	bf00      	nop
 802d410:	46020c00 	.word	0x46020c00

0802d414 <HAL_RCC_GetSysClockFreq>:
  sysclk = __HAL_RCC_GET_SYSCLK_SOURCE();
 802d414:	4a08      	ldr	r2, [pc, #32]	; (802d438 <HAL_RCC_GetSysClockFreq+0x24>)
 802d416:	69d3      	ldr	r3, [r2, #28]
  if (sysclk == RCC_SYSCLKSOURCE_STATUS_HSI)
 802d418:	f013 030c 	ands.w	r3, r3, #12
 802d41c:	d009      	beq.n	802d432 <HAL_RCC_GetSysClockFreq+0x1e>
  else if (sysclk == RCC_SYSCLKSOURCE_STATUS_HSE)
 802d41e:	2b08      	cmp	r3, #8
 802d420:	d105      	bne.n	802d42e <HAL_RCC_GetSysClockFreq+0x1a>
    sysclk = (HSE_VALUE >> ((RCC->CR & RCC_CR_HSEPRE) >> RCC_CR_HSEPRE_Pos));
 802d422:	6813      	ldr	r3, [r2, #0]
 802d424:	4805      	ldr	r0, [pc, #20]	; (802d43c <HAL_RCC_GetSysClockFreq+0x28>)
 802d426:	f3c3 5300 	ubfx	r3, r3, #20, #1
 802d42a:	40d8      	lsrs	r0, r3
  return sysclk;
 802d42c:	4770      	bx	lr
    sysclk = HAL_RCC_GetPLL1RFreq();
 802d42e:	f7ff bfdf 	b.w	802d3f0 <HAL_RCC_GetPLL1RFreq>
    sysclk = HSI_VALUE;
 802d432:	4803      	ldr	r0, [pc, #12]	; (802d440 <HAL_RCC_GetSysClockFreq+0x2c>)
}
 802d434:	4770      	bx	lr
 802d436:	bf00      	nop
 802d438:	46020c00 	.word	0x46020c00
 802d43c:	01e84800 	.word	0x01e84800
 802d440:	00f42400 	.word	0x00f42400

0802d444 <HAL_RCC_ClockConfig>:
{
 802d444:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 802d448:	460e      	mov	r6, r1
  if (RCC_ClkInitStruct == NULL)
 802d44a:	4604      	mov	r4, r0
 802d44c:	b910      	cbnz	r0, 802d454 <HAL_RCC_ClockConfig+0x10>
    return HAL_ERROR;
 802d44e:	2001      	movs	r0, #1
}
 802d450:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  assert_param(IS_RCC_CLOCKTYPE(RCC_ClkInitStruct->ClockType));
 802d454:	6803      	ldr	r3, [r0, #0]
 802d456:	069a      	lsls	r2, r3, #26
 802d458:	d002      	beq.n	802d460 <HAL_RCC_ClockConfig+0x1c>
 802d45a:	f033 033f 	bics.w	r3, r3, #63	; 0x3f
 802d45e:	d004      	beq.n	802d46a <HAL_RCC_ClockConfig+0x26>
 802d460:	f240 31d5 	movw	r1, #981	; 0x3d5
 802d464:	4893      	ldr	r0, [pc, #588]	; (802d6b4 <HAL_RCC_ClockConfig+0x270>)
 802d466:	f7f8 fe99 	bl	802619c <assert_failed>
  assert_param(IS_FLASH_LATENCY(FLatency));
 802d46a:	2e0f      	cmp	r6, #15
 802d46c:	d904      	bls.n	802d478 <HAL_RCC_ClockConfig+0x34>
 802d46e:	f240 31d6 	movw	r1, #982	; 0x3d6
 802d472:	4890      	ldr	r0, [pc, #576]	; (802d6b4 <HAL_RCC_ClockConfig+0x270>)
 802d474:	f7f8 fe92 	bl	802619c <assert_failed>
  if (FLatency > __HAL_FLASH_GET_LATENCY())
 802d478:	4a8f      	ldr	r2, [pc, #572]	; (802d6b8 <HAL_RCC_ClockConfig+0x274>)
 802d47a:	6813      	ldr	r3, [r2, #0]
 802d47c:	f003 030f 	and.w	r3, r3, #15
 802d480:	42b3      	cmp	r3, r6
 802d482:	d33e      	bcc.n	802d502 <HAL_RCC_ClockConfig+0xbe>
  if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_HCLK5) == RCC_CLOCKTYPE_HCLK5)
 802d484:	6823      	ldr	r3, [r4, #0]
 802d486:	069b      	lsls	r3, r3, #26
 802d488:	d446      	bmi.n	802d518 <HAL_RCC_ClockConfig+0xd4>
  if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_SYSCLK) == RCC_CLOCKTYPE_SYSCLK)
 802d48a:	6823      	ldr	r3, [r4, #0]
 802d48c:	07df      	lsls	r7, r3, #31
 802d48e:	d462      	bmi.n	802d556 <HAL_RCC_ClockConfig+0x112>
  tmpreg1 = RCC->CFGR2;
 802d490:	4b8a      	ldr	r3, [pc, #552]	; (802d6bc <HAL_RCC_ClockConfig+0x278>)
 802d492:	6a1d      	ldr	r5, [r3, #32]
  if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_HCLK) == RCC_CLOCKTYPE_HCLK)
 802d494:	6823      	ldr	r3, [r4, #0]
 802d496:	f013 0302 	ands.w	r3, r3, #2
 802d49a:	f040 80c0 	bne.w	802d61e <HAL_RCC_ClockConfig+0x1da>
  if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK1) == RCC_CLOCKTYPE_PCLK1)
 802d49e:	6822      	ldr	r2, [r4, #0]
 802d4a0:	0751      	lsls	r1, r2, #29
 802d4a2:	d513      	bpl.n	802d4cc <HAL_RCC_ClockConfig+0x88>
    assert_param(IS_RCC_PCLK(RCC_ClkInitStruct->APB1CLKDivider));
 802d4a4:	68e3      	ldr	r3, [r4, #12]
 802d4a6:	f033 0240 	bics.w	r2, r3, #64	; 0x40
 802d4aa:	d00a      	beq.n	802d4c2 <HAL_RCC_ClockConfig+0x7e>
 802d4ac:	f023 0220 	bic.w	r2, r3, #32
 802d4b0:	2a50      	cmp	r2, #80	; 0x50
 802d4b2:	d006      	beq.n	802d4c2 <HAL_RCC_ClockConfig+0x7e>
 802d4b4:	2b60      	cmp	r3, #96	; 0x60
 802d4b6:	d004      	beq.n	802d4c2 <HAL_RCC_ClockConfig+0x7e>
 802d4b8:	f240 4161 	movw	r1, #1121	; 0x461
 802d4bc:	487d      	ldr	r0, [pc, #500]	; (802d6b4 <HAL_RCC_ClockConfig+0x270>)
 802d4be:	f7f8 fe6d 	bl	802619c <assert_failed>
    tmpreg1 |= RCC_ClkInitStruct->APB1CLKDivider;
 802d4c2:	68e3      	ldr	r3, [r4, #12]
    tmpreg1 &= ~RCC_CFGR2_PPRE1;
 802d4c4:	f025 0570 	bic.w	r5, r5, #112	; 0x70
    tmpreg1 |= RCC_ClkInitStruct->APB1CLKDivider;
 802d4c8:	431d      	orrs	r5, r3
    update = 0x01u;
 802d4ca:	2301      	movs	r3, #1
  if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK2) == RCC_CLOCKTYPE_PCLK2)
 802d4cc:	6822      	ldr	r2, [r4, #0]
 802d4ce:	0712      	lsls	r2, r2, #28
 802d4d0:	f140 80b5 	bpl.w	802d63e <HAL_RCC_ClockConfig+0x1fa>
    assert_param(IS_RCC_PCLK(RCC_ClkInitStruct->APB2CLKDivider));
 802d4d4:	6923      	ldr	r3, [r4, #16]
 802d4d6:	f033 0240 	bics.w	r2, r3, #64	; 0x40
 802d4da:	d00a      	beq.n	802d4f2 <HAL_RCC_ClockConfig+0xae>
 802d4dc:	f023 0220 	bic.w	r2, r3, #32
 802d4e0:	2a50      	cmp	r2, #80	; 0x50
 802d4e2:	d006      	beq.n	802d4f2 <HAL_RCC_ClockConfig+0xae>
 802d4e4:	2b60      	cmp	r3, #96	; 0x60
 802d4e6:	d004      	beq.n	802d4f2 <HAL_RCC_ClockConfig+0xae>
 802d4e8:	f240 416c 	movw	r1, #1132	; 0x46c
 802d4ec:	4871      	ldr	r0, [pc, #452]	; (802d6b4 <HAL_RCC_ClockConfig+0x270>)
 802d4ee:	f7f8 fe55 	bl	802619c <assert_failed>
    tmpreg1 |= (RCC_ClkInitStruct->APB2CLKDivider << (RCC_CFGR2_PPRE2_Pos - RCC_CFGR2_PPRE1_Pos));
 802d4f2:	6923      	ldr	r3, [r4, #16]
    tmpreg1 &= ~RCC_CFGR2_PPRE2;
 802d4f4:	f425 65e0 	bic.w	r5, r5, #1792	; 0x700
    tmpreg1 |= (RCC_ClkInitStruct->APB2CLKDivider << (RCC_CFGR2_PPRE2_Pos - RCC_CFGR2_PPRE1_Pos));
 802d4f8:	ea45 1503 	orr.w	r5, r5, r3, lsl #4
    RCC->CFGR2 = tmpreg1;
 802d4fc:	4b6f      	ldr	r3, [pc, #444]	; (802d6bc <HAL_RCC_ClockConfig+0x278>)
 802d4fe:	621d      	str	r5, [r3, #32]
 802d500:	e0a0      	b.n	802d644 <HAL_RCC_ClockConfig+0x200>
    __HAL_FLASH_SET_LATENCY(FLatency);
 802d502:	6813      	ldr	r3, [r2, #0]
 802d504:	f023 030f 	bic.w	r3, r3, #15
 802d508:	4333      	orrs	r3, r6
 802d50a:	6013      	str	r3, [r2, #0]
    if (__HAL_FLASH_GET_LATENCY() != FLatency)
 802d50c:	6813      	ldr	r3, [r2, #0]
 802d50e:	f003 030f 	and.w	r3, r3, #15
 802d512:	42b3      	cmp	r3, r6
 802d514:	d19b      	bne.n	802d44e <HAL_RCC_ClockConfig+0xa>
 802d516:	e7b5      	b.n	802d484 <HAL_RCC_ClockConfig+0x40>
    assert_param(IS_RCC_HCLK5_HSEHSI(RCC_ClkInitStruct->AHB5_HSEHSI_CLKDivider));
 802d518:	69e3      	ldr	r3, [r4, #28]
 802d51a:	f033 0310 	bics.w	r3, r3, #16
 802d51e:	d004      	beq.n	802d52a <HAL_RCC_ClockConfig+0xe6>
 802d520:	f240 31ef 	movw	r1, #1007	; 0x3ef
 802d524:	4863      	ldr	r0, [pc, #396]	; (802d6b4 <HAL_RCC_ClockConfig+0x270>)
 802d526:	f7f8 fe39 	bl	802619c <assert_failed>
    assert_param(IS_RCC_HCLK5_PLL1(RCC_ClkInitStruct->AHB5_PLL1_CLKDivider));
 802d52a:	69a3      	ldr	r3, [r4, #24]
 802d52c:	b13b      	cbz	r3, 802d53e <HAL_RCC_ClockConfig+0xfa>
 802d52e:	3b04      	subs	r3, #4
 802d530:	2b03      	cmp	r3, #3
 802d532:	d904      	bls.n	802d53e <HAL_RCC_ClockConfig+0xfa>
 802d534:	f44f 717c 	mov.w	r1, #1008	; 0x3f0
 802d538:	485e      	ldr	r0, [pc, #376]	; (802d6b4 <HAL_RCC_ClockConfig+0x270>)
 802d53a:	f7f8 fe2f 	bl	802619c <assert_failed>
    MODIFY_REG(RCC->CFGR4, (RCC_CFGR4_HDIV5 | RCC_CFGR4_HPRE5),
 802d53e:	e9d4 3006 	ldrd	r3, r0, [r4, #24]
 802d542:	495e      	ldr	r1, [pc, #376]	; (802d6bc <HAL_RCC_ClockConfig+0x278>)
 802d544:	4303      	orrs	r3, r0
 802d546:	f8d1 2200 	ldr.w	r2, [r1, #512]	; 0x200
 802d54a:	f022 0217 	bic.w	r2, r2, #23
 802d54e:	4313      	orrs	r3, r2
 802d550:	f8c1 3200 	str.w	r3, [r1, #512]	; 0x200
 802d554:	e799      	b.n	802d48a <HAL_RCC_ClockConfig+0x46>
    assert_param(IS_RCC_SYSCLKSOURCE(RCC_ClkInitStruct->SYSCLKSource));
 802d556:	6863      	ldr	r3, [r4, #4]
 802d558:	b13b      	cbz	r3, 802d56a <HAL_RCC_ClockConfig+0x126>
 802d55a:	3b02      	subs	r3, #2
 802d55c:	2b01      	cmp	r3, #1
 802d55e:	d904      	bls.n	802d56a <HAL_RCC_ClockConfig+0x126>
 802d560:	f44f 717e 	mov.w	r1, #1016	; 0x3f8
 802d564:	4853      	ldr	r0, [pc, #332]	; (802d6b4 <HAL_RCC_ClockConfig+0x270>)
 802d566:	f7f8 fe19 	bl	802619c <assert_failed>
    if (RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_PLLCLK)
 802d56a:	6861      	ldr	r1, [r4, #4]
    tmpreg1 = RCC->CR;
 802d56c:	4b53      	ldr	r3, [pc, #332]	; (802d6bc <HAL_RCC_ClockConfig+0x278>)
    if (RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_PLLCLK)
 802d56e:	2903      	cmp	r1, #3
    tmpreg1 = RCC->CR;
 802d570:	681a      	ldr	r2, [r3, #0]
    if (RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_PLLCLK)
 802d572:	d144      	bne.n	802d5fe <HAL_RCC_ClockConfig+0x1ba>
      if ((tmpreg1 & RCC_CR_PLL1RDY) == 0U)
 802d574:	0195      	lsls	r5, r2, #6
 802d576:	f57f af6a 	bpl.w	802d44e <HAL_RCC_ClockConfig+0xa>
        if (__HAL_RCC_GET_SYSCLK_SOURCE() != (RCC_ClkInitStruct->SYSCLKSource << RCC_CFGR1_SWS_Pos))
 802d57a:	69da      	ldr	r2, [r3, #28]
 802d57c:	f002 020c 	and.w	r2, r2, #12
 802d580:	2a0c      	cmp	r2, #12
 802d582:	d015      	beq.n	802d5b0 <HAL_RCC_ClockConfig+0x16c>
          MODIFY_REG(RCC->PLL1CFGR, RCC_PLL1CFGR_PLL1RCLKPRESTEP, RCC_PLL1CFGR_PLL1RCLKPRE);
 802d584:	6a9a      	ldr	r2, [r3, #40]	; 0x28
 802d586:	f422 1240 	bic.w	r2, r2, #3145728	; 0x300000
 802d58a:	f442 1280 	orr.w	r2, r2, #1048576	; 0x100000
 802d58e:	629a      	str	r2, [r3, #40]	; 0x28
          CLEAR_BIT(RCC->PLL1CFGR, RCC_PLL1CFGR_PLL1RCLKPRE);
 802d590:	6a9a      	ldr	r2, [r3, #40]	; 0x28
 802d592:	f422 1280 	bic.w	r2, r2, #1048576	; 0x100000
 802d596:	629a      	str	r2, [r3, #40]	; 0x28
          SET_BIT(RCC->PLL1CFGR, RCC_PLL1CFGR_PLL1RCLKPRE);
 802d598:	6a9a      	ldr	r2, [r3, #40]	; 0x28
 802d59a:	f442 1280 	orr.w	r2, r2, #1048576	; 0x100000
 802d59e:	629a      	str	r2, [r3, #40]	; 0x28
          CLEAR_BIT(RCC->PLL1CFGR, RCC_PLL1CFGR_PLL1RCLKPRE);
 802d5a0:	6a9a      	ldr	r2, [r3, #40]	; 0x28
 802d5a2:	f422 1280 	bic.w	r2, r2, #1048576	; 0x100000
 802d5a6:	629a      	str	r2, [r3, #40]	; 0x28
          SET_BIT(RCC->PLL1CFGR, RCC_PLL1CFGR_PLL1RCLKPRE);
 802d5a8:	6a9a      	ldr	r2, [r3, #40]	; 0x28
 802d5aa:	f442 1280 	orr.w	r2, r2, #1048576	; 0x100000
 802d5ae:	629a      	str	r2, [r3, #40]	; 0x28
    MODIFY_REG(RCC->CFGR1, RCC_CFGR1_SW, RCC_ClkInitStruct->SYSCLKSource);
 802d5b0:	4d42      	ldr	r5, [pc, #264]	; (802d6bc <HAL_RCC_ClockConfig+0x278>)
      if ((HAL_GetTick() - tickstart) > CLOCKSWITCH_TIMEOUT_VALUE)
 802d5b2:	f241 3888 	movw	r8, #5000	; 0x1388
    MODIFY_REG(RCC->CFGR1, RCC_CFGR1_SW, RCC_ClkInitStruct->SYSCLKSource);
 802d5b6:	69eb      	ldr	r3, [r5, #28]
 802d5b8:	f023 0303 	bic.w	r3, r3, #3
 802d5bc:	430b      	orrs	r3, r1
 802d5be:	61eb      	str	r3, [r5, #28]
    tickstart = HAL_GetTick();
 802d5c0:	f7fd fd36 	bl	802b030 <HAL_GetTick>
 802d5c4:	4607      	mov	r7, r0
    while (__HAL_RCC_GET_SYSCLK_SOURCE() != (RCC_ClkInitStruct->SYSCLKSource << RCC_CFGR1_SWS_Pos))
 802d5c6:	69eb      	ldr	r3, [r5, #28]
 802d5c8:	6862      	ldr	r2, [r4, #4]
 802d5ca:	f003 030c 	and.w	r3, r3, #12
 802d5ce:	ebb3 0f82 	cmp.w	r3, r2, lsl #2
 802d5d2:	d11d      	bne.n	802d610 <HAL_RCC_ClockConfig+0x1cc>
    if (RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_PLLCLK)
 802d5d4:	2a03      	cmp	r2, #3
 802d5d6:	f47f af5b 	bne.w	802d490 <HAL_RCC_ClockConfig+0x4c>
      CLEAR_BIT(RCC->PLL1CFGR, RCC_PLL1CFGR_PLL1RCLKPRE);
 802d5da:	6aab      	ldr	r3, [r5, #40]	; 0x28
      while ((RCC->PLL1CFGR & RCC_PLL1CFGR_PLL1RCLKPRERDY) == 0x00u)
 802d5dc:	4f37      	ldr	r7, [pc, #220]	; (802d6bc <HAL_RCC_ClockConfig+0x278>)
      CLEAR_BIT(RCC->PLL1CFGR, RCC_PLL1CFGR_PLL1RCLKPRE);
 802d5de:	f423 1380 	bic.w	r3, r3, #1048576	; 0x100000
 802d5e2:	62ab      	str	r3, [r5, #40]	; 0x28
      tickstart = HAL_GetTick();
 802d5e4:	f7fd fd24 	bl	802b030 <HAL_GetTick>
 802d5e8:	4605      	mov	r5, r0
      while ((RCC->PLL1CFGR & RCC_PLL1CFGR_PLL1RCLKPRERDY) == 0x00u)
 802d5ea:	6abb      	ldr	r3, [r7, #40]	; 0x28
 802d5ec:	0258      	lsls	r0, r3, #9
 802d5ee:	f53f af4f 	bmi.w	802d490 <HAL_RCC_ClockConfig+0x4c>
        if ((HAL_GetTick() - tickstart) > PLL1_NDIV_TIMEOUT_VALUE)
 802d5f2:	f7fd fd1d 	bl	802b030 <HAL_GetTick>
 802d5f6:	1b40      	subs	r0, r0, r5
 802d5f8:	280a      	cmp	r0, #10
 802d5fa:	d9f6      	bls.n	802d5ea <HAL_RCC_ClockConfig+0x1a6>
 802d5fc:	e00d      	b.n	802d61a <HAL_RCC_ClockConfig+0x1d6>
      if (RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_HSE)
 802d5fe:	2902      	cmp	r1, #2
 802d600:	d103      	bne.n	802d60a <HAL_RCC_ClockConfig+0x1c6>
        if ((tmpreg1 & RCC_CR_HSERDY) == 0U)
 802d602:	f412 3f00 	tst.w	r2, #131072	; 0x20000
        if ((tmpreg1 & RCC_CR_HSIRDY) == 0U)
 802d606:	d1d3      	bne.n	802d5b0 <HAL_RCC_ClockConfig+0x16c>
 802d608:	e721      	b.n	802d44e <HAL_RCC_ClockConfig+0xa>
 802d60a:	f412 6f80 	tst.w	r2, #1024	; 0x400
 802d60e:	e7fa      	b.n	802d606 <HAL_RCC_ClockConfig+0x1c2>
      if ((HAL_GetTick() - tickstart) > CLOCKSWITCH_TIMEOUT_VALUE)
 802d610:	f7fd fd0e 	bl	802b030 <HAL_GetTick>
 802d614:	1bc0      	subs	r0, r0, r7
 802d616:	4540      	cmp	r0, r8
 802d618:	d9d5      	bls.n	802d5c6 <HAL_RCC_ClockConfig+0x182>
        return HAL_TIMEOUT;
 802d61a:	2003      	movs	r0, #3
 802d61c:	e718      	b.n	802d450 <HAL_RCC_ClockConfig+0xc>
    assert_param(IS_RCC_HCLK(RCC_ClkInitStruct->AHBCLKDivider));
 802d61e:	68a3      	ldr	r3, [r4, #8]
 802d620:	b13b      	cbz	r3, 802d632 <HAL_RCC_ClockConfig+0x1ee>
 802d622:	3b04      	subs	r3, #4
 802d624:	2b03      	cmp	r3, #3
 802d626:	d904      	bls.n	802d632 <HAL_RCC_ClockConfig+0x1ee>
 802d628:	f240 4155 	movw	r1, #1109	; 0x455
 802d62c:	4821      	ldr	r0, [pc, #132]	; (802d6b4 <HAL_RCC_ClockConfig+0x270>)
 802d62e:	f7f8 fdb5 	bl	802619c <assert_failed>
    tmpreg1 |= RCC_ClkInitStruct->AHBCLKDivider;
 802d632:	68a3      	ldr	r3, [r4, #8]
    tmpreg1 &= ~RCC_CFGR2_HPRE;
 802d634:	f025 0507 	bic.w	r5, r5, #7
    tmpreg1 |= RCC_ClkInitStruct->AHBCLKDivider;
 802d638:	431d      	orrs	r5, r3
    update = 0x01u;
 802d63a:	2301      	movs	r3, #1
 802d63c:	e72f      	b.n	802d49e <HAL_RCC_ClockConfig+0x5a>
  if (update != 0x00u)
 802d63e:	2b00      	cmp	r3, #0
 802d640:	f47f af5c 	bne.w	802d4fc <HAL_RCC_ClockConfig+0xb8>
  if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK7) == RCC_CLOCKTYPE_PCLK7)
 802d644:	6823      	ldr	r3, [r4, #0]
 802d646:	06db      	lsls	r3, r3, #27
 802d648:	d511      	bpl.n	802d66e <HAL_RCC_ClockConfig+0x22a>
    assert_param(IS_RCC_PCLK(RCC_ClkInitStruct->APB7CLKDivider));
 802d64a:	6963      	ldr	r3, [r4, #20]
 802d64c:	f033 0240 	bics.w	r2, r3, #64	; 0x40
 802d650:	d00a      	beq.n	802d668 <HAL_RCC_ClockConfig+0x224>
 802d652:	f023 0220 	bic.w	r2, r3, #32
 802d656:	2a50      	cmp	r2, #80	; 0x50
 802d658:	d006      	beq.n	802d668 <HAL_RCC_ClockConfig+0x224>
 802d65a:	2b60      	cmp	r3, #96	; 0x60
 802d65c:	d004      	beq.n	802d668 <HAL_RCC_ClockConfig+0x224>
 802d65e:	f240 417d 	movw	r1, #1149	; 0x47d
 802d662:	4814      	ldr	r0, [pc, #80]	; (802d6b4 <HAL_RCC_ClockConfig+0x270>)
 802d664:	f7f8 fd9a 	bl	802619c <assert_failed>
    WRITE_REG(RCC->CFGR3, RCC_ClkInitStruct->APB7CLKDivider);
 802d668:	6962      	ldr	r2, [r4, #20]
 802d66a:	4b14      	ldr	r3, [pc, #80]	; (802d6bc <HAL_RCC_ClockConfig+0x278>)
 802d66c:	625a      	str	r2, [r3, #36]	; 0x24
  if (FLatency < __HAL_FLASH_GET_LATENCY())
 802d66e:	4a12      	ldr	r2, [pc, #72]	; (802d6b8 <HAL_RCC_ClockConfig+0x274>)
 802d670:	6813      	ldr	r3, [r2, #0]
 802d672:	f003 030f 	and.w	r3, r3, #15
 802d676:	42b3      	cmp	r3, r6
 802d678:	d810      	bhi.n	802d69c <HAL_RCC_ClockConfig+0x258>
  SystemCoreClock = HAL_RCC_GetSysClockFreq() >> AHBPrescTable[(RCC->CFGR2 & RCC_CFGR2_HPRE) >> RCC_CFGR2_HPRE_Pos];
 802d67a:	f7ff fecb 	bl	802d414 <HAL_RCC_GetSysClockFreq>
}
 802d67e:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
  SystemCoreClock = HAL_RCC_GetSysClockFreq() >> AHBPrescTable[(RCC->CFGR2 & RCC_CFGR2_HPRE) >> RCC_CFGR2_HPRE_Pos];
 802d682:	4b0e      	ldr	r3, [pc, #56]	; (802d6bc <HAL_RCC_ClockConfig+0x278>)
 802d684:	4a0e      	ldr	r2, [pc, #56]	; (802d6c0 <HAL_RCC_ClockConfig+0x27c>)
 802d686:	6a1b      	ldr	r3, [r3, #32]
 802d688:	f003 0307 	and.w	r3, r3, #7
 802d68c:	5cd3      	ldrb	r3, [r2, r3]
 802d68e:	40d8      	lsrs	r0, r3
 802d690:	4b0c      	ldr	r3, [pc, #48]	; (802d6c4 <HAL_RCC_ClockConfig+0x280>)
 802d692:	6018      	str	r0, [r3, #0]
  return HAL_InitTick(uwTickPrio);
 802d694:	4b0c      	ldr	r3, [pc, #48]	; (802d6c8 <HAL_RCC_ClockConfig+0x284>)
 802d696:	6818      	ldr	r0, [r3, #0]
 802d698:	f7fd bc80 	b.w	802af9c <HAL_InitTick>
    __HAL_FLASH_SET_LATENCY(FLatency);
 802d69c:	6813      	ldr	r3, [r2, #0]
 802d69e:	f023 030f 	bic.w	r3, r3, #15
 802d6a2:	4333      	orrs	r3, r6
 802d6a4:	6013      	str	r3, [r2, #0]
    if (__HAL_FLASH_GET_LATENCY() != FLatency)
 802d6a6:	6813      	ldr	r3, [r2, #0]
 802d6a8:	f003 030f 	and.w	r3, r3, #15
 802d6ac:	42b3      	cmp	r3, r6
 802d6ae:	f47f aece 	bne.w	802d44e <HAL_RCC_ClockConfig+0xa>
 802d6b2:	e7e2      	b.n	802d67a <HAL_RCC_ClockConfig+0x236>
 802d6b4:	08033ee2 	.word	0x08033ee2
 802d6b8:	40022000 	.word	0x40022000
 802d6bc:	46020c00 	.word	0x46020c00
 802d6c0:	08033924 	.word	0x08033924
 802d6c4:	200004d0 	.word	0x200004d0
 802d6c8:	200004d8 	.word	0x200004d8

0802d6cc <HAL_RCC_GetHCLKFreq>:
{
 802d6cc:	b508      	push	{r3, lr}
  SystemCoreClock = HAL_RCC_GetSysClockFreq() >> AHBPrescTable[(RCC->CFGR2 & RCC_CFGR2_HPRE) >> RCC_CFGR2_HPRE_Pos];
 802d6ce:	f7ff fea1 	bl	802d414 <HAL_RCC_GetSysClockFreq>
 802d6d2:	4b05      	ldr	r3, [pc, #20]	; (802d6e8 <HAL_RCC_GetHCLKFreq+0x1c>)
 802d6d4:	4a05      	ldr	r2, [pc, #20]	; (802d6ec <HAL_RCC_GetHCLKFreq+0x20>)
 802d6d6:	6a1b      	ldr	r3, [r3, #32]
 802d6d8:	f003 0307 	and.w	r3, r3, #7
 802d6dc:	5cd3      	ldrb	r3, [r2, r3]
 802d6de:	40d8      	lsrs	r0, r3
 802d6e0:	4b03      	ldr	r3, [pc, #12]	; (802d6f0 <HAL_RCC_GetHCLKFreq+0x24>)
 802d6e2:	6018      	str	r0, [r3, #0]
}
 802d6e4:	bd08      	pop	{r3, pc}
 802d6e6:	bf00      	nop
 802d6e8:	46020c00 	.word	0x46020c00
 802d6ec:	08033924 	.word	0x08033924
 802d6f0:	200004d0 	.word	0x200004d0

0802d6f4 <HAL_RCC_GetPCLK1Freq>:
{
 802d6f4:	b508      	push	{r3, lr}
  return (HAL_RCC_GetHCLKFreq() >> APBPrescTable[(RCC->CFGR2 & RCC_CFGR2_PPRE1) >> RCC_CFGR2_PPRE1_Pos]);
 802d6f6:	f7ff ffe9 	bl	802d6cc <HAL_RCC_GetHCLKFreq>
 802d6fa:	4b04      	ldr	r3, [pc, #16]	; (802d70c <HAL_RCC_GetPCLK1Freq+0x18>)
 802d6fc:	4a04      	ldr	r2, [pc, #16]	; (802d710 <HAL_RCC_GetPCLK1Freq+0x1c>)
 802d6fe:	6a1b      	ldr	r3, [r3, #32]
 802d700:	f3c3 1302 	ubfx	r3, r3, #4, #3
 802d704:	5cd3      	ldrb	r3, [r2, r3]
}
 802d706:	40d8      	lsrs	r0, r3
 802d708:	bd08      	pop	{r3, pc}
 802d70a:	bf00      	nop
 802d70c:	46020c00 	.word	0x46020c00
 802d710:	0803392c 	.word	0x0803392c

0802d714 <HAL_RCC_GetPCLK2Freq>:
{
 802d714:	b508      	push	{r3, lr}
  return (HAL_RCC_GetHCLKFreq() >> APBPrescTable[(RCC->CFGR2 & RCC_CFGR2_PPRE2) >> RCC_CFGR2_PPRE2_Pos]);
 802d716:	f7ff ffd9 	bl	802d6cc <HAL_RCC_GetHCLKFreq>
 802d71a:	4b04      	ldr	r3, [pc, #16]	; (802d72c <HAL_RCC_GetPCLK2Freq+0x18>)
 802d71c:	4a04      	ldr	r2, [pc, #16]	; (802d730 <HAL_RCC_GetPCLK2Freq+0x1c>)
 802d71e:	6a1b      	ldr	r3, [r3, #32]
 802d720:	f3c3 2302 	ubfx	r3, r3, #8, #3
 802d724:	5cd3      	ldrb	r3, [r2, r3]
}
 802d726:	40d8      	lsrs	r0, r3
 802d728:	bd08      	pop	{r3, pc}
 802d72a:	bf00      	nop
 802d72c:	46020c00 	.word	0x46020c00
 802d730:	0803392c 	.word	0x0803392c

0802d734 <HAL_RCC_GetPCLK7Freq>:
{
 802d734:	b508      	push	{r3, lr}
  return (HAL_RCC_GetHCLKFreq() >> APBPrescTable[(RCC->CFGR3 & RCC_CFGR3_PPRE7) >> RCC_CFGR3_PPRE7_Pos]);
 802d736:	f7ff ffc9 	bl	802d6cc <HAL_RCC_GetHCLKFreq>
 802d73a:	4b04      	ldr	r3, [pc, #16]	; (802d74c <HAL_RCC_GetPCLK7Freq+0x18>)
 802d73c:	4a04      	ldr	r2, [pc, #16]	; (802d750 <HAL_RCC_GetPCLK7Freq+0x1c>)
 802d73e:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 802d740:	f3c3 1302 	ubfx	r3, r3, #4, #3
 802d744:	5cd3      	ldrb	r3, [r2, r3]
}
 802d746:	40d8      	lsrs	r0, r3
 802d748:	bd08      	pop	{r3, pc}
 802d74a:	bf00      	nop
 802d74c:	46020c00 	.word	0x46020c00
 802d750:	0803392c 	.word	0x0803392c

0802d754 <HAL_RCCEx_PeriphCLKConfig>:
  * @note   Care must be taken when HAL_RCCEx_PeriphCLKConfig() is used to select
  *         the RTC clock source: in this case the access to Backup domain is enabled.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_RCCEx_PeriphCLKConfig(const RCC_PeriphCLKInitTypeDef *PeriphClkInit)
{
 802d754:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
  uint32_t tmpreg1;
  uint32_t tmpreg2;
  uint32_t tickstart;

  /* Check the parameters */
  assert_param(IS_RCC_PERIPHCLOCK(PeriphClkInit->PeriphClockSelection));
 802d758:	f64f 727f 	movw	r2, #65407	; 0xff7f
 802d75c:	6803      	ldr	r3, [r0, #0]
{
 802d75e:	4604      	mov	r4, r0
  assert_param(IS_RCC_PERIPHCLOCK(PeriphClkInit->PeriphClockSelection));
 802d760:	4213      	tst	r3, r2
 802d762:	d004      	beq.n	802d76e <HAL_RCCEx_PeriphCLKConfig+0x1a>
 802d764:	f423 437f 	bic.w	r3, r3, #65280	; 0xff00
 802d768:	f023 037f 	bic.w	r3, r3, #127	; 0x7f
 802d76c:	b11b      	cbz	r3, 802d776 <HAL_RCCEx_PeriphCLKConfig+0x22>
 802d76e:	2166      	movs	r1, #102	; 0x66
 802d770:	48a8      	ldr	r0, [pc, #672]	; (802da14 <HAL_RCCEx_PeriphCLKConfig+0x2c0>)
 802d772:	f7f8 fd13 	bl	802619c <assert_failed>

  /*-------------------------- USART1 clock source configuration -------------------*/
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_USART1) == RCC_PERIPHCLK_USART1)
 802d776:	6823      	ldr	r3, [r4, #0]
 802d778:	07da      	lsls	r2, r3, #31
 802d77a:	d50f      	bpl.n	802d79c <HAL_RCCEx_PeriphCLKConfig+0x48>
  {
    /* Check the parameters */
    assert_param(IS_RCC_USART1CLKSOURCE(PeriphClkInit->Usart1ClockSelection));
 802d77c:	6863      	ldr	r3, [r4, #4]
 802d77e:	2b03      	cmp	r3, #3
 802d780:	d903      	bls.n	802d78a <HAL_RCCEx_PeriphCLKConfig+0x36>
 802d782:	216c      	movs	r1, #108	; 0x6c
 802d784:	48a3      	ldr	r0, [pc, #652]	; (802da14 <HAL_RCCEx_PeriphCLKConfig+0x2c0>)
 802d786:	f7f8 fd09 	bl	802619c <assert_failed>

    /* Configure the USART1 clock source */
    __HAL_RCC_USART1_CONFIG(PeriphClkInit->Usart1ClockSelection);
 802d78a:	4aa3      	ldr	r2, [pc, #652]	; (802da18 <HAL_RCCEx_PeriphCLKConfig+0x2c4>)
 802d78c:	6861      	ldr	r1, [r4, #4]
 802d78e:	f8d2 30e0 	ldr.w	r3, [r2, #224]	; 0xe0
 802d792:	f023 0303 	bic.w	r3, r3, #3
 802d796:	430b      	orrs	r3, r1
 802d798:	f8c2 30e0 	str.w	r3, [r2, #224]	; 0xe0
  }

#if defined (USART2)
  /*-------------------------- USART2 clock source configuration -------------------*/
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_USART2) == RCC_PERIPHCLK_USART2)
 802d79c:	6823      	ldr	r3, [r4, #0]
 802d79e:	079b      	lsls	r3, r3, #30
 802d7a0:	d510      	bpl.n	802d7c4 <HAL_RCCEx_PeriphCLKConfig+0x70>
  {
    /* Check the parameters */
    assert_param(IS_RCC_USART2CLKSOURCE(PeriphClkInit->Usart2ClockSelection));
 802d7a2:	68a3      	ldr	r3, [r4, #8]
 802d7a4:	f033 030c 	bics.w	r3, r3, #12
 802d7a8:	d003      	beq.n	802d7b2 <HAL_RCCEx_PeriphCLKConfig+0x5e>
 802d7aa:	2177      	movs	r1, #119	; 0x77
 802d7ac:	4899      	ldr	r0, [pc, #612]	; (802da14 <HAL_RCCEx_PeriphCLKConfig+0x2c0>)
 802d7ae:	f7f8 fcf5 	bl	802619c <assert_failed>

    /* Configure the USART2 clock source */
    __HAL_RCC_USART2_CONFIG(PeriphClkInit->Usart2ClockSelection);
 802d7b2:	4a99      	ldr	r2, [pc, #612]	; (802da18 <HAL_RCCEx_PeriphCLKConfig+0x2c4>)
 802d7b4:	68a1      	ldr	r1, [r4, #8]
 802d7b6:	f8d2 30e0 	ldr.w	r3, [r2, #224]	; 0xe0
 802d7ba:	f023 030c 	bic.w	r3, r3, #12
 802d7be:	430b      	orrs	r3, r1
 802d7c0:	f8c2 30e0 	str.w	r3, [r2, #224]	; 0xe0
  }
#endif

#if defined (I2C1)
  /*-------------------------- I2C1 clock source configuration ---------------------*/
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2C1) == RCC_PERIPHCLK_I2C1)
 802d7c4:	6823      	ldr	r3, [r4, #0]
 802d7c6:	075f      	lsls	r7, r3, #29
 802d7c8:	d513      	bpl.n	802d7f2 <HAL_RCCEx_PeriphCLKConfig+0x9e>
  {
    /* Check the parameters */
    assert_param(IS_RCC_I2C1CLKSOURCE(PeriphClkInit->I2c1ClockSelection));
 802d7ca:	68e3      	ldr	r3, [r4, #12]
 802d7cc:	f433 6280 	bics.w	r2, r3, #1024	; 0x400
 802d7d0:	d006      	beq.n	802d7e0 <HAL_RCCEx_PeriphCLKConfig+0x8c>
 802d7d2:	f5b3 6f00 	cmp.w	r3, #2048	; 0x800
 802d7d6:	d003      	beq.n	802d7e0 <HAL_RCCEx_PeriphCLKConfig+0x8c>
 802d7d8:	2183      	movs	r1, #131	; 0x83
 802d7da:	488e      	ldr	r0, [pc, #568]	; (802da14 <HAL_RCCEx_PeriphCLKConfig+0x2c0>)
 802d7dc:	f7f8 fcde 	bl	802619c <assert_failed>

    /* Configure the I2C1 clock source */
    __HAL_RCC_I2C1_CONFIG(PeriphClkInit->I2c1ClockSelection);
 802d7e0:	4a8d      	ldr	r2, [pc, #564]	; (802da18 <HAL_RCCEx_PeriphCLKConfig+0x2c4>)
 802d7e2:	68e1      	ldr	r1, [r4, #12]
 802d7e4:	f8d2 30e0 	ldr.w	r3, [r2, #224]	; 0xe0
 802d7e8:	f423 6340 	bic.w	r3, r3, #3072	; 0xc00
 802d7ec:	430b      	orrs	r3, r1
 802d7ee:	f8c2 30e0 	str.w	r3, [r2, #224]	; 0xe0
  }
#endif

#if defined (LPTIM2)
  /*-------------------------- LPTIM2 clock source configuration -------------------*/
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_LPTIM2) == (RCC_PERIPHCLK_LPTIM2))
 802d7f2:	6823      	ldr	r3, [r4, #0]
 802d7f4:	071e      	lsls	r6, r3, #28
 802d7f6:	d510      	bpl.n	802d81a <HAL_RCCEx_PeriphCLKConfig+0xc6>
  {
    /* Check the parameters */
    assert_param(IS_RCC_LPTIM2CLKSOURCE(PeriphClkInit->Lptim2ClockSelection));
 802d7f8:	6923      	ldr	r3, [r4, #16]
 802d7fa:	f433 2340 	bics.w	r3, r3, #786432	; 0xc0000
 802d7fe:	d003      	beq.n	802d808 <HAL_RCCEx_PeriphCLKConfig+0xb4>
 802d800:	218f      	movs	r1, #143	; 0x8f
 802d802:	4884      	ldr	r0, [pc, #528]	; (802da14 <HAL_RCCEx_PeriphCLKConfig+0x2c0>)
 802d804:	f7f8 fcca 	bl	802619c <assert_failed>

    /* Configure the LPTIM2 clock source */
    __HAL_RCC_LPTIM2_CONFIG(PeriphClkInit->Lptim2ClockSelection);
 802d808:	4a83      	ldr	r2, [pc, #524]	; (802da18 <HAL_RCCEx_PeriphCLKConfig+0x2c4>)
 802d80a:	6921      	ldr	r1, [r4, #16]
 802d80c:	f8d2 30e0 	ldr.w	r3, [r2, #224]	; 0xe0
 802d810:	f423 2340 	bic.w	r3, r3, #786432	; 0xc0000
 802d814:	430b      	orrs	r3, r1
 802d816:	f8c2 30e0 	str.w	r3, [r2, #224]	; 0xe0
  }
#endif

#if defined (SPI1)
  /*-------------------------- SPI1 clock source configuration ----------------*/
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SPI1) == RCC_PERIPHCLK_SPI1)
 802d81a:	6823      	ldr	r3, [r4, #0]
 802d81c:	06dd      	lsls	r5, r3, #27
 802d81e:	d513      	bpl.n	802d848 <HAL_RCCEx_PeriphCLKConfig+0xf4>
  {
    /* Check the parameters */
    assert_param(IS_RCC_SPI1CLKSOURCE(PeriphClkInit->Spi1ClockSelection));
 802d820:	6963      	ldr	r3, [r4, #20]
 802d822:	f433 1280 	bics.w	r2, r3, #1048576	; 0x100000
 802d826:	d006      	beq.n	802d836 <HAL_RCCEx_PeriphCLKConfig+0xe2>
 802d828:	f5b3 1f00 	cmp.w	r3, #2097152	; 0x200000
 802d82c:	d003      	beq.n	802d836 <HAL_RCCEx_PeriphCLKConfig+0xe2>
 802d82e:	219b      	movs	r1, #155	; 0x9b
 802d830:	4878      	ldr	r0, [pc, #480]	; (802da14 <HAL_RCCEx_PeriphCLKConfig+0x2c0>)
 802d832:	f7f8 fcb3 	bl	802619c <assert_failed>

    /* Configure the SPI1 clock source */
    __HAL_RCC_SPI1_CONFIG(PeriphClkInit->Spi1ClockSelection);
 802d836:	4a78      	ldr	r2, [pc, #480]	; (802da18 <HAL_RCCEx_PeriphCLKConfig+0x2c4>)
 802d838:	6961      	ldr	r1, [r4, #20]
 802d83a:	f8d2 30e0 	ldr.w	r3, [r2, #224]	; 0xe0
 802d83e:	f423 1340 	bic.w	r3, r3, #3145728	; 0x300000
 802d842:	430b      	orrs	r3, r1
 802d844:	f8c2 30e0 	str.w	r3, [r2, #224]	; 0xe0
  }
#endif

  /*-------------------------- SYSTICK clock source configuration ----------------*/
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SYSTICK) == RCC_PERIPHCLK_SYSTICK)
 802d848:	6823      	ldr	r3, [r4, #0]
 802d84a:	0698      	lsls	r0, r3, #26
 802d84c:	d513      	bpl.n	802d876 <HAL_RCCEx_PeriphCLKConfig+0x122>
  {
    /* Check the parameters */
    assert_param(IS_RCC_SYSTICKCLKSOURCE(PeriphClkInit->SystickClockSelection));
 802d84e:	69a3      	ldr	r3, [r4, #24]
 802d850:	f433 0280 	bics.w	r2, r3, #4194304	; 0x400000
 802d854:	d006      	beq.n	802d864 <HAL_RCCEx_PeriphCLKConfig+0x110>
 802d856:	f5b3 0f00 	cmp.w	r3, #8388608	; 0x800000
 802d85a:	d003      	beq.n	802d864 <HAL_RCCEx_PeriphCLKConfig+0x110>
 802d85c:	21a6      	movs	r1, #166	; 0xa6
 802d85e:	486d      	ldr	r0, [pc, #436]	; (802da14 <HAL_RCCEx_PeriphCLKConfig+0x2c0>)
 802d860:	f7f8 fc9c 	bl	802619c <assert_failed>

    /* Configure the SYSTICK clock source */
    __HAL_RCC_SYSTICK_CONFIG(PeriphClkInit->SystickClockSelection);
 802d864:	4a6c      	ldr	r2, [pc, #432]	; (802da18 <HAL_RCCEx_PeriphCLKConfig+0x2c4>)
 802d866:	69a1      	ldr	r1, [r4, #24]
 802d868:	f8d2 30e0 	ldr.w	r3, [r2, #224]	; 0xe0
 802d86c:	f423 0340 	bic.w	r3, r3, #12582912	; 0xc00000
 802d870:	430b      	orrs	r3, r1
 802d872:	f8c2 30e0 	str.w	r3, [r2, #224]	; 0xe0
  }

  /*-------------------------- TIMIC clock source configuration ----------------*/
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_TIMIC) == RCC_PERIPHCLK_TIMIC)
 802d876:	6823      	ldr	r3, [r4, #0]
 802d878:	0659      	lsls	r1, r3, #25
 802d87a:	d510      	bpl.n	802d89e <HAL_RCCEx_PeriphCLKConfig+0x14a>
  {
    /* Check the parameters */
    assert_param(IS_RCC_TIMICCLKSOURCE(PeriphClkInit->TimIcClockSelection));
 802d87c:	69e3      	ldr	r3, [r4, #28]
 802d87e:	f033 4300 	bics.w	r3, r3, #2147483648	; 0x80000000
 802d882:	d003      	beq.n	802d88c <HAL_RCCEx_PeriphCLKConfig+0x138>
 802d884:	21b0      	movs	r1, #176	; 0xb0
 802d886:	4863      	ldr	r0, [pc, #396]	; (802da14 <HAL_RCCEx_PeriphCLKConfig+0x2c0>)
 802d888:	f7f8 fc88 	bl	802619c <assert_failed>

    /* Configure the TIMIC clock source */
    __HAL_RCC_TIMIC_CONFIG(PeriphClkInit->TimIcClockSelection);
 802d88c:	4a62      	ldr	r2, [pc, #392]	; (802da18 <HAL_RCCEx_PeriphCLKConfig+0x2c4>)
 802d88e:	69e1      	ldr	r1, [r4, #28]
 802d890:	f8d2 30e0 	ldr.w	r3, [r2, #224]	; 0xe0
 802d894:	f023 4300 	bic.w	r3, r3, #2147483648	; 0x80000000
 802d898:	430b      	orrs	r3, r1
 802d89a:	f8c2 30e0 	str.w	r3, [r2, #224]	; 0xe0
    }
  }
#endif

  /*------------------------------ RNG Configuration -------------------------*/
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_RNG) == RCC_PERIPHCLK_RNG)
 802d89e:	6823      	ldr	r3, [r4, #0]
 802d8a0:	05da      	lsls	r2, r3, #23
 802d8a2:	d518      	bpl.n	802d8d6 <HAL_RCCEx_PeriphCLKConfig+0x182>
  {
    /* Check the parameters */
    assert_param(IS_RCC_RNGCLKSOURCE(PeriphClkInit->RngClockSelection));
 802d8a4:	6a23      	ldr	r3, [r4, #32]
 802d8a6:	f433 5340 	bics.w	r3, r3, #12288	; 0x3000
 802d8aa:	d003      	beq.n	802d8b4 <HAL_RCCEx_PeriphCLKConfig+0x160>
 802d8ac:	21d5      	movs	r1, #213	; 0xd5
 802d8ae:	4859      	ldr	r0, [pc, #356]	; (802da14 <HAL_RCCEx_PeriphCLKConfig+0x2c0>)
 802d8b0:	f7f8 fc74 	bl	802619c <assert_failed>

    /* Set the source of RNG clock*/
    __HAL_RCC_RNG_CONFIG(PeriphClkInit->RngClockSelection);
 802d8b4:	4a58      	ldr	r2, [pc, #352]	; (802da18 <HAL_RCCEx_PeriphCLKConfig+0x2c4>)
 802d8b6:	6a21      	ldr	r1, [r4, #32]
 802d8b8:	f8d2 30e4 	ldr.w	r3, [r2, #228]	; 0xe4

    if (PeriphClkInit->RngClockSelection == RCC_RNGCLKSOURCE_PLL1Q)
 802d8bc:	f5b1 5f40 	cmp.w	r1, #12288	; 0x3000
    __HAL_RCC_RNG_CONFIG(PeriphClkInit->RngClockSelection);
 802d8c0:	f423 5340 	bic.w	r3, r3, #12288	; 0x3000
 802d8c4:	ea43 0301 	orr.w	r3, r3, r1
 802d8c8:	f8c2 30e4 	str.w	r3, [r2, #228]	; 0xe4
    {
      /* Enable PLL1 QCLK output */
      __HAL_RCC_PLL1CLKOUT_ENABLE(RCC_PLL1_QCLK);
 802d8cc:	bf02      	ittt	eq
 802d8ce:	6a93      	ldreq	r3, [r2, #40]	; 0x28
 802d8d0:	f443 3300 	orreq.w	r3, r3, #131072	; 0x20000
 802d8d4:	6293      	streq	r3, [r2, #40]	; 0x28
    }
  }

  /*-------------------------- LPUART1 clock source configuration ------------------*/
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_LPUART1) == RCC_PERIPHCLK_LPUART1)
 802d8d6:	6823      	ldr	r3, [r4, #0]
 802d8d8:	059b      	lsls	r3, r3, #22
 802d8da:	d50f      	bpl.n	802d8fc <HAL_RCCEx_PeriphCLKConfig+0x1a8>
  {
    /* Check the parameters */
    assert_param(IS_RCC_LPUART1CLKSOURCE(PeriphClkInit->Lpuart1ClockSelection));
 802d8dc:	6a63      	ldr	r3, [r4, #36]	; 0x24
 802d8de:	2b03      	cmp	r3, #3
 802d8e0:	d903      	bls.n	802d8ea <HAL_RCCEx_PeriphCLKConfig+0x196>
 802d8e2:	21e5      	movs	r1, #229	; 0xe5
 802d8e4:	484b      	ldr	r0, [pc, #300]	; (802da14 <HAL_RCCEx_PeriphCLKConfig+0x2c0>)
 802d8e6:	f7f8 fc59 	bl	802619c <assert_failed>

    /* Configure the LPUART1 clock source */
    __HAL_RCC_LPUART1_CONFIG(PeriphClkInit->Lpuart1ClockSelection);
 802d8ea:	4a4b      	ldr	r2, [pc, #300]	; (802da18 <HAL_RCCEx_PeriphCLKConfig+0x2c4>)
 802d8ec:	6a61      	ldr	r1, [r4, #36]	; 0x24
 802d8ee:	f8d2 30e8 	ldr.w	r3, [r2, #232]	; 0xe8
 802d8f2:	f023 0303 	bic.w	r3, r3, #3
 802d8f6:	430b      	orrs	r3, r1
 802d8f8:	f8c2 30e8 	str.w	r3, [r2, #232]	; 0xe8
  }

  /*-------------------------- SPI3 clock source configuration ----------------*/
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SPI3) == RCC_PERIPHCLK_SPI3)
 802d8fc:	6823      	ldr	r3, [r4, #0]
 802d8fe:	055f      	lsls	r7, r3, #21
 802d900:	d512      	bpl.n	802d928 <HAL_RCCEx_PeriphCLKConfig+0x1d4>
  {
    /* Check the parameters */
    assert_param(IS_RCC_SPI3CLKSOURCE(PeriphClkInit->Spi3ClockSelection));
 802d902:	6aa3      	ldr	r3, [r4, #40]	; 0x28
 802d904:	f033 0208 	bics.w	r2, r3, #8
 802d908:	d005      	beq.n	802d916 <HAL_RCCEx_PeriphCLKConfig+0x1c2>
 802d90a:	2b10      	cmp	r3, #16
 802d90c:	d003      	beq.n	802d916 <HAL_RCCEx_PeriphCLKConfig+0x1c2>
 802d90e:	21ef      	movs	r1, #239	; 0xef
 802d910:	4840      	ldr	r0, [pc, #256]	; (802da14 <HAL_RCCEx_PeriphCLKConfig+0x2c0>)
 802d912:	f7f8 fc43 	bl	802619c <assert_failed>

    /* Configure the SPI3 clock source */
    __HAL_RCC_SPI3_CONFIG(PeriphClkInit->Spi3ClockSelection);
 802d916:	4a40      	ldr	r2, [pc, #256]	; (802da18 <HAL_RCCEx_PeriphCLKConfig+0x2c4>)
 802d918:	6aa1      	ldr	r1, [r4, #40]	; 0x28
 802d91a:	f8d2 30e8 	ldr.w	r3, [r2, #232]	; 0xe8
 802d91e:	f023 0318 	bic.w	r3, r3, #24
 802d922:	430b      	orrs	r3, r1
 802d924:	f8c2 30e8 	str.w	r3, [r2, #232]	; 0xe8
  }


  /*-------------------------- I2C3 clock source configuration ---------------------*/
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2C3) == RCC_PERIPHCLK_I2C3)
 802d928:	6823      	ldr	r3, [r4, #0]
 802d92a:	051e      	lsls	r6, r3, #20
 802d92c:	d512      	bpl.n	802d954 <HAL_RCCEx_PeriphCLKConfig+0x200>
  {
    /* Check the parameters */
    assert_param(IS_RCC_I2C3CLKSOURCE(PeriphClkInit->I2c3ClockSelection));
 802d92e:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 802d930:	f033 0240 	bics.w	r2, r3, #64	; 0x40
 802d934:	d005      	beq.n	802d942 <HAL_RCCEx_PeriphCLKConfig+0x1ee>
 802d936:	2b80      	cmp	r3, #128	; 0x80
 802d938:	d003      	beq.n	802d942 <HAL_RCCEx_PeriphCLKConfig+0x1ee>
 802d93a:	21fa      	movs	r1, #250	; 0xfa
 802d93c:	4835      	ldr	r0, [pc, #212]	; (802da14 <HAL_RCCEx_PeriphCLKConfig+0x2c0>)
 802d93e:	f7f8 fc2d 	bl	802619c <assert_failed>

    /* Configure the I2C3 clock source */
    __HAL_RCC_I2C3_CONFIG(PeriphClkInit->I2c3ClockSelection);
 802d942:	4a35      	ldr	r2, [pc, #212]	; (802da18 <HAL_RCCEx_PeriphCLKConfig+0x2c4>)
 802d944:	6ae1      	ldr	r1, [r4, #44]	; 0x2c
 802d946:	f8d2 30e8 	ldr.w	r3, [r2, #232]	; 0xe8
 802d94a:	f023 03c0 	bic.w	r3, r3, #192	; 0xc0
 802d94e:	430b      	orrs	r3, r1
 802d950:	f8c2 30e8 	str.w	r3, [r2, #232]	; 0xe8
  }

  /*-------------------------- LPTIM1 clock source configuration -------------------*/
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_LPTIM1) == (RCC_PERIPHCLK_LPTIM1))
 802d954:	6823      	ldr	r3, [r4, #0]
 802d956:	04dd      	lsls	r5, r3, #19
 802d958:	d511      	bpl.n	802d97e <HAL_RCCEx_PeriphCLKConfig+0x22a>
  {
    /* Check the parameters */
    assert_param(IS_RCC_LPTIM1CLKSOURCE(PeriphClkInit->Lptim1ClockSelection));
 802d95a:	6b23      	ldr	r3, [r4, #48]	; 0x30
 802d95c:	f433 6340 	bics.w	r3, r3, #3072	; 0xc00
 802d960:	d004      	beq.n	802d96c <HAL_RCCEx_PeriphCLKConfig+0x218>
 802d962:	f44f 7182 	mov.w	r1, #260	; 0x104
 802d966:	482b      	ldr	r0, [pc, #172]	; (802da14 <HAL_RCCEx_PeriphCLKConfig+0x2c0>)
 802d968:	f7f8 fc18 	bl	802619c <assert_failed>

    /* Configure the I2C3 clock source */
    __HAL_RCC_LPTIM1_CONFIG(PeriphClkInit->Lptim1ClockSelection);
 802d96c:	4a2a      	ldr	r2, [pc, #168]	; (802da18 <HAL_RCCEx_PeriphCLKConfig+0x2c4>)
 802d96e:	6b21      	ldr	r1, [r4, #48]	; 0x30
 802d970:	f8d2 30e8 	ldr.w	r3, [r2, #232]	; 0xe8
 802d974:	f423 6340 	bic.w	r3, r3, #3072	; 0xc00
 802d978:	430b      	orrs	r3, r1
 802d97a:	f8c2 30e8 	str.w	r3, [r2, #232]	; 0xe8
  }

  /*-------------------------- ADC clock source configuration ----------------------*/
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_ADC) == RCC_PERIPHCLK_ADC)
 802d97e:	6823      	ldr	r3, [r4, #0]
 802d980:	0498      	lsls	r0, r3, #18
 802d982:	d51c      	bpl.n	802d9be <HAL_RCCEx_PeriphCLKConfig+0x26a>
  {
    /* Check the parameters */
    assert_param(IS_RCC_ADCCLKSOURCE(PeriphClkInit->AdcClockSelection));
 802d984:	6b63      	ldr	r3, [r4, #52]	; 0x34
 802d986:	f433 5240 	bics.w	r2, r3, #12288	; 0x3000
 802d98a:	d007      	beq.n	802d99c <HAL_RCCEx_PeriphCLKConfig+0x248>
 802d98c:	f5b3 4f80 	cmp.w	r3, #16384	; 0x4000
 802d990:	d004      	beq.n	802d99c <HAL_RCCEx_PeriphCLKConfig+0x248>
 802d992:	f44f 7187 	mov.w	r1, #270	; 0x10e
 802d996:	481f      	ldr	r0, [pc, #124]	; (802da14 <HAL_RCCEx_PeriphCLKConfig+0x2c0>)
 802d998:	f7f8 fc00 	bl	802619c <assert_failed>

    /* Configure the ADC4 interface clock source */
    __HAL_RCC_ADC_CONFIG(PeriphClkInit->AdcClockSelection);
 802d99c:	4a1e      	ldr	r2, [pc, #120]	; (802da18 <HAL_RCCEx_PeriphCLKConfig+0x2c4>)
 802d99e:	6b61      	ldr	r1, [r4, #52]	; 0x34
 802d9a0:	f8d2 30e8 	ldr.w	r3, [r2, #232]	; 0xe8

    if (PeriphClkInit->AdcClockSelection == RCC_PERIPHCLK_ADC)
 802d9a4:	f5b1 5f00 	cmp.w	r1, #8192	; 0x2000
    __HAL_RCC_ADC_CONFIG(PeriphClkInit->AdcClockSelection);
 802d9a8:	f423 43e0 	bic.w	r3, r3, #28672	; 0x7000
 802d9ac:	ea43 0301 	orr.w	r3, r3, r1
 802d9b0:	f8c2 30e8 	str.w	r3, [r2, #232]	; 0xe8
    {
      /* Enable PLL1 PCLK output */
      __HAL_RCC_PLL1CLKOUT_ENABLE(RCC_PLL1_PCLK);
 802d9b4:	bf02      	ittt	eq
 802d9b6:	6a93      	ldreq	r3, [r2, #40]	; 0x28
 802d9b8:	f443 3380 	orreq.w	r3, r3, #65536	; 0x10000
 802d9bc:	6293      	streq	r3, [r2, #40]	; 0x28
    }
  }

  /*-------------------------- RTC clock source configuration ----------------------*/
  if ((PeriphClkInit->PeriphClockSelection & RCC_PERIPHCLK_RTC) == RCC_PERIPHCLK_RTC)
 802d9be:	6823      	ldr	r3, [r4, #0]
 802d9c0:	0459      	lsls	r1, r3, #17
 802d9c2:	d55a      	bpl.n	802da7a <HAL_RCCEx_PeriphCLKConfig+0x326>
  {
    FlagStatus       pwrclkchanged = RESET;

    /* Check for RTC Parameters used to output RTCCLK */
    assert_param(IS_RCC_RTCCLKSOURCE(PeriphClkInit->RTCClockSelection));
 802d9c4:	6ba3      	ldr	r3, [r4, #56]	; 0x38
 802d9c6:	f433 7340 	bics.w	r3, r3, #768	; 0x300
 802d9ca:	d004      	beq.n	802d9d6 <HAL_RCCEx_PeriphCLKConfig+0x282>
 802d9cc:	f44f 7190 	mov.w	r1, #288	; 0x120
 802d9d0:	4810      	ldr	r0, [pc, #64]	; (802da14 <HAL_RCCEx_PeriphCLKConfig+0x2c0>)
 802d9d2:	f7f8 fbe3 	bl	802619c <assert_failed>

    /* Reset the Backup domain only if the RTC Clock source selection is modified from default */
    tmpreg2 = __HAL_RCC_GET_RTC_SOURCE();
 802d9d6:	4b10      	ldr	r3, [pc, #64]	; (802da18 <HAL_RCCEx_PeriphCLKConfig+0x2c4>)

    /* Check if RTC clock source needs to be changed */
    if (tmpreg2 != PeriphClkInit->RTCClockSelection)
 802d9d8:	6ba2      	ldr	r2, [r4, #56]	; 0x38
    tmpreg2 = __HAL_RCC_GET_RTC_SOURCE();
 802d9da:	f8d3 50f0 	ldr.w	r5, [r3, #240]	; 0xf0
 802d9de:	f405 7540 	and.w	r5, r5, #768	; 0x300
    if (tmpreg2 != PeriphClkInit->RTCClockSelection)
 802d9e2:	42aa      	cmp	r2, r5
 802d9e4:	d049      	beq.n	802da7a <HAL_RCCEx_PeriphCLKConfig+0x326>
    {
      /* Enable Power Clock */
      if (__HAL_RCC_PWR_IS_CLK_ENABLED() != 0x01u)
 802d9e6:	f8d3 2094 	ldr.w	r2, [r3, #148]	; 0x94
 802d9ea:	0752      	lsls	r2, r2, #29
 802d9ec:	d45d      	bmi.n	802daaa <HAL_RCCEx_PeriphCLKConfig+0x356>
      {
        __HAL_RCC_PWR_CLK_ENABLE();
        pwrclkchanged = SET;
 802d9ee:	2701      	movs	r7, #1
        __HAL_RCC_PWR_CLK_ENABLE();
 802d9f0:	f8d3 2094 	ldr.w	r2, [r3, #148]	; 0x94
 802d9f4:	f042 0204 	orr.w	r2, r2, #4
 802d9f8:	f8c3 2094 	str.w	r2, [r3, #148]	; 0x94
 802d9fc:	f8d3 3094 	ldr.w	r3, [r3, #148]	; 0x94
 802da00:	f003 0304 	and.w	r3, r3, #4
 802da04:	9301      	str	r3, [sp, #4]
 802da06:	9b01      	ldr	r3, [sp, #4]
      }

      /* Enable write access to Backup domain */
      SET_BIT(PWR->DBPR, PWR_DBPR_DBP);
 802da08:	4e04      	ldr	r6, [pc, #16]	; (802da1c <HAL_RCCEx_PeriphCLKConfig+0x2c8>)
 802da0a:	6ab3      	ldr	r3, [r6, #40]	; 0x28
 802da0c:	f043 0301 	orr.w	r3, r3, #1
 802da10:	62b3      	str	r3, [r6, #40]	; 0x28
 802da12:	e005      	b.n	802da20 <HAL_RCCEx_PeriphCLKConfig+0x2cc>
 802da14:	08033f50 	.word	0x08033f50
 802da18:	46020c00 	.word	0x46020c00
 802da1c:	46020800 	.word	0x46020800

      /* Wait for Backup domain Write protection disable */
      tickstart = HAL_GetTick();
 802da20:	f7fd fb06 	bl	802b030 <HAL_GetTick>
 802da24:	4680      	mov	r8, r0

      while (HAL_IS_BIT_CLR(PWR->DBPR, PWR_DBPR_DBP))
 802da26:	6ab3      	ldr	r3, [r6, #40]	; 0x28
 802da28:	07db      	lsls	r3, r3, #31
 802da2a:	d540      	bpl.n	802daae <HAL_RCCEx_PeriphCLKConfig+0x35a>
          return HAL_TIMEOUT;
        }
      }

      /* Save BDCR1 content */
      tmpreg1 = (RCC->BDCR1 & ~RCC_BDCR1_RTCSEL);
 802da2c:	4a2d      	ldr	r2, [pc, #180]	; (802dae4 <HAL_RCCEx_PeriphCLKConfig+0x390>)
 802da2e:	f8d2 30f0 	ldr.w	r3, [r2, #240]	; 0xf0
 802da32:	f423 7140 	bic.w	r1, r3, #768	; 0x300

      /* Check if a backup domain reset is required */
      if (tmpreg2 != RCC_RTCCLKSOURCE_DISABLE)
 802da36:	b17d      	cbz	r5, 802da58 <HAL_RCCEx_PeriphCLKConfig+0x304>
      {
        /* Save BDCR2 content */
        tmpreg2 = RCC->BDCR2;
 802da38:	f8d2 50f8 	ldr.w	r5, [r2, #248]	; 0xf8

        /* RTC Clock selection can be changed only if the Backup Domain is reset */
        __HAL_RCC_BACKUPRESET_FORCE();
 802da3c:	f8d2 00f0 	ldr.w	r0, [r2, #240]	; 0xf0
 802da40:	f440 3080 	orr.w	r0, r0, #65536	; 0x10000
 802da44:	f8c2 00f0 	str.w	r0, [r2, #240]	; 0xf0
        __HAL_RCC_BACKUPRESET_RELEASE();
 802da48:	f8d2 00f0 	ldr.w	r0, [r2, #240]	; 0xf0
 802da4c:	f420 3080 	bic.w	r0, r0, #65536	; 0x10000
 802da50:	f8c2 00f0 	str.w	r0, [r2, #240]	; 0xf0

        /* Restore previously saved BDCR2 */
        RCC->BDCR2 = tmpreg2;
 802da54:	f8c2 50f8 	str.w	r5, [r2, #248]	; 0xf8
      }

      /* Apply new RTC clock source selection */
      RCC->BDCR1 = (tmpreg1 | PeriphClkInit->RTCClockSelection);
 802da58:	6ba2      	ldr	r2, [r4, #56]	; 0x38
#if defined(RCC_LSI2_SUPPORT)
      tmpreg2 |= RCC_BDCR1_LSI2ON;
#endif

      /* Check which oscillators were enable */
      tmpreg2 &= tmpreg1;
 802da5a:	4d23      	ldr	r5, [pc, #140]	; (802dae8 <HAL_RCCEx_PeriphCLKConfig+0x394>)
      RCC->BDCR1 = (tmpreg1 | PeriphClkInit->RTCClockSelection);
 802da5c:	f8df 8084 	ldr.w	r8, [pc, #132]	; 802dae4 <HAL_RCCEx_PeriphCLKConfig+0x390>
 802da60:	430a      	orrs	r2, r1

      if (tmpreg2 != 0x00u)
 802da62:	401d      	ands	r5, r3
      RCC->BDCR1 = (tmpreg1 | PeriphClkInit->RTCClockSelection);
 802da64:	f8c8 20f0 	str.w	r2, [r8, #240]	; 0xf0
      if (tmpreg2 != 0x00u)
 802da68:	d12b      	bne.n	802dac2 <HAL_RCCEx_PeriphCLKConfig+0x36e>
            return HAL_TIMEOUT;
          }
        }
      }
      /* Restore clock configuration if changed */
      if (pwrclkchanged == SET)
 802da6a:	b137      	cbz	r7, 802da7a <HAL_RCCEx_PeriphCLKConfig+0x326>
      {
        __HAL_RCC_PWR_CLK_DISABLE();
 802da6c:	4a1d      	ldr	r2, [pc, #116]	; (802dae4 <HAL_RCCEx_PeriphCLKConfig+0x390>)
 802da6e:	f8d2 3094 	ldr.w	r3, [r2, #148]	; 0x94
 802da72:	f023 0304 	bic.w	r3, r3, #4
 802da76:	f8c2 3094 	str.w	r3, [r2, #148]	; 0x94
      }
    }
  }

  /*-------------------------- RADIO Sleep Timer clock source configuration --*/
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_RADIOST) == RCC_PERIPHCLK_RADIOST)
 802da7a:	6820      	ldr	r0, [r4, #0]
 802da7c:	f410 4000 	ands.w	r0, r0, #32768	; 0x8000
 802da80:	d01c      	beq.n	802dabc <HAL_RCCEx_PeriphCLKConfig+0x368>
  {
    /* Check the parameters */
    assert_param(IS_RCC_RADIOSLEEPTIMERSOURCE(PeriphClkInit->RadioSlpTimClockSelection));
 802da82:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 802da84:	f433 2340 	bics.w	r3, r3, #786432	; 0xc0000
 802da88:	d004      	beq.n	802da94 <HAL_RCCEx_PeriphCLKConfig+0x340>
 802da8a:	f44f 71ba 	mov.w	r1, #372	; 0x174
 802da8e:	4817      	ldr	r0, [pc, #92]	; (802daec <HAL_RCCEx_PeriphCLKConfig+0x398>)
 802da90:	f7f8 fb84 	bl	802619c <assert_failed>

    /* Configure the RADIO Sleep Timer clock source */
    __HAL_RCC_RADIOSLPTIM_CONFIG(PeriphClkInit->RadioSlpTimClockSelection);
 802da94:	4a13      	ldr	r2, [pc, #76]	; (802dae4 <HAL_RCCEx_PeriphCLKConfig+0x390>)
 802da96:	6be1      	ldr	r1, [r4, #60]	; 0x3c
 802da98:	f8d2 30f0 	ldr.w	r3, [r2, #240]	; 0xf0
  }

  return HAL_OK;
 802da9c:	2000      	movs	r0, #0
    __HAL_RCC_RADIOSLPTIM_CONFIG(PeriphClkInit->RadioSlpTimClockSelection);
 802da9e:	f423 2340 	bic.w	r3, r3, #786432	; 0xc0000
 802daa2:	430b      	orrs	r3, r1
 802daa4:	f8c2 30f0 	str.w	r3, [r2, #240]	; 0xf0
 802daa8:	e008      	b.n	802dabc <HAL_RCCEx_PeriphCLKConfig+0x368>
    FlagStatus       pwrclkchanged = RESET;
 802daaa:	2700      	movs	r7, #0
 802daac:	e7ac      	b.n	802da08 <HAL_RCCEx_PeriphCLKConfig+0x2b4>
        if ((HAL_GetTick() - tickstart) > RCC_DBP_TIMEOUT_VALUE)
 802daae:	f7fd fabf 	bl	802b030 <HAL_GetTick>
 802dab2:	eba0 0008 	sub.w	r0, r0, r8
 802dab6:	2802      	cmp	r0, #2
 802dab8:	d9b5      	bls.n	802da26 <HAL_RCCEx_PeriphCLKConfig+0x2d2>
          return HAL_TIMEOUT;
 802daba:	2003      	movs	r0, #3
}
 802dabc:	b003      	add	sp, #12
 802dabe:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
        tickstart = HAL_GetTick();
 802dac2:	f7fd fab5 	bl	802b030 <HAL_GetTick>
          if ((HAL_GetTick() - tickstart) > RCC_LSE_TIMEOUT_VALUE)
 802dac6:	f241 3988 	movw	r9, #5000	; 0x1388
        tickstart = HAL_GetTick();
 802daca:	4606      	mov	r6, r0
        while (READ_BIT(RCC->BDCR1, (tmpreg2 << 1)) == 0x00u)
 802dacc:	006d      	lsls	r5, r5, #1
 802dace:	f8d8 30f0 	ldr.w	r3, [r8, #240]	; 0xf0
 802dad2:	422b      	tst	r3, r5
 802dad4:	d1c9      	bne.n	802da6a <HAL_RCCEx_PeriphCLKConfig+0x316>
          if ((HAL_GetTick() - tickstart) > RCC_LSE_TIMEOUT_VALUE)
 802dad6:	f7fd faab 	bl	802b030 <HAL_GetTick>
 802dada:	1b80      	subs	r0, r0, r6
 802dadc:	4548      	cmp	r0, r9
 802dade:	d9f6      	bls.n	802dace <HAL_RCCEx_PeriphCLKConfig+0x37a>
 802dae0:	e7eb      	b.n	802daba <HAL_RCCEx_PeriphCLKConfig+0x366>
 802dae2:	bf00      	nop
 802dae4:	46020c00 	.word	0x46020c00
 802dae8:	04000001 	.word	0x04000001
 802daec:	08033f50 	.word	0x08033f50

0802daf0 <HAL_RCCEx_HSESetTrimming>:
  * @retval None
  */
void HAL_RCCEx_HSESetTrimming(uint32_t Trimming)
{
  /* Check the parameters */
  assert_param(IS_RCC_HSETRIM(Trimming));
 802daf0:	283f      	cmp	r0, #63	; 0x3f
{
 802daf2:	b510      	push	{r4, lr}
 802daf4:	4604      	mov	r4, r0
  assert_param(IS_RCC_HSETRIM(Trimming));
 802daf6:	d904      	bls.n	802db02 <HAL_RCCEx_HSESetTrimming+0x12>
 802daf8:	f240 4181 	movw	r1, #1153	; 0x481
 802dafc:	4806      	ldr	r0, [pc, #24]	; (802db18 <HAL_RCCEx_HSESetTrimming+0x28>)
 802dafe:	f7f8 fb4d 	bl	802619c <assert_failed>

  MODIFY_REG(RCC->ECSCR1, RCC_ECSCR1_HSETRIM, Trimming << RCC_ECSCR1_HSETRIM_Pos);
 802db02:	4a06      	ldr	r2, [pc, #24]	; (802db1c <HAL_RCCEx_HSESetTrimming+0x2c>)
 802db04:	f8d2 3210 	ldr.w	r3, [r2, #528]	; 0x210
 802db08:	f423 137c 	bic.w	r3, r3, #4128768	; 0x3f0000
 802db0c:	ea43 4304 	orr.w	r3, r3, r4, lsl #16
 802db10:	f8c2 3210 	str.w	r3, [r2, #528]	; 0x210
}
 802db14:	bd10      	pop	{r4, pc}
 802db16:	bf00      	nop
 802db18:	08033f50 	.word	0x08033f50
 802db1c:	46020c00 	.word	0x46020c00

0802db20 <HAL_RCCEx_EnableRadioBBClock>:
  * @brief  Enable the 2.4 GHz RADIO baseband clock
  * @retval None
  */
void HAL_RCCEx_EnableRadioBBClock(void)
{
  SET_BIT(RCC->RADIOENR, RCC_RADIOENR_BBCLKEN);
 802db20:	4a03      	ldr	r2, [pc, #12]	; (802db30 <HAL_RCCEx_EnableRadioBBClock+0x10>)
 802db22:	f8d2 3208 	ldr.w	r3, [r2, #520]	; 0x208
 802db26:	f043 0302 	orr.w	r3, r3, #2
 802db2a:	f8c2 3208 	str.w	r3, [r2, #520]	; 0x208
}
 802db2e:	4770      	bx	lr
 802db30:	46020c00 	.word	0x46020c00

0802db34 <HAL_RCCEx_DisableRadioBBClock>:
  * @brief  Disable the 2.4 GHz RADIO baseband clock
  * @retval None
  */
void HAL_RCCEx_DisableRadioBBClock(void)
{
  CLEAR_BIT(RCC->RADIOENR, RCC_RADIOENR_BBCLKEN);
 802db34:	4a03      	ldr	r2, [pc, #12]	; (802db44 <HAL_RCCEx_DisableRadioBBClock+0x10>)
 802db36:	f8d2 3208 	ldr.w	r3, [r2, #520]	; 0x208
 802db3a:	f023 0302 	bic.w	r3, r3, #2
 802db3e:	f8c2 3208 	str.w	r3, [r2, #520]	; 0x208
}
 802db42:	4770      	bx	lr
 802db44:	46020c00 	.word	0x46020c00

0802db48 <HAL_RCCEx_GetRadioBusClockReadiness>:
  *         @arg RCC_RADIO_BUS_CLOCK_READY :  2.4 GHz RADIO bus clock ready.
  * @retval The regulator REG_VDDHPA input supply selection.
  */
uint32_t HAL_RCCEx_GetRadioBusClockReadiness(void)
{
  return READ_BIT(RCC->RADIOENR, RCC_RADIOENR_RADIOCLKRDY);
 802db48:	4b02      	ldr	r3, [pc, #8]	; (802db54 <HAL_RCCEx_GetRadioBusClockReadiness+0xc>)
 802db4a:	f8d3 0208 	ldr.w	r0, [r3, #520]	; 0x208
}
 802db4e:	f400 3000 	and.w	r0, r0, #131072	; 0x20000
 802db52:	4770      	bx	lr
 802db54:	46020c00 	.word	0x46020c00

0802db58 <HAL_RNG_Init>:
  * @param  hrng pointer to a RNG_HandleTypeDef structure that contains
  *                the configuration information for RNG.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_RNG_Init(RNG_HandleTypeDef *hrng)
{
 802db58:	b538      	push	{r3, r4, r5, lr}
  uint32_t tickstart;
  /* Check the RNG handle allocation */
  if (hrng == NULL)
 802db5a:	4604      	mov	r4, r0
 802db5c:	2800      	cmp	r0, #0
 802db5e:	d03c      	beq.n	802dbda <HAL_RNG_Init+0x82>
  {
    return HAL_ERROR;
  }
  /* Check the parameters */
  assert_param(IS_RNG_ALL_INSTANCE(hrng->Instance));
 802db60:	6802      	ldr	r2, [r0, #0]
 802db62:	4b33      	ldr	r3, [pc, #204]	; (802dc30 <HAL_RNG_Init+0xd8>)
 802db64:	429a      	cmp	r2, r3
 802db66:	d003      	beq.n	802db70 <HAL_RNG_Init+0x18>
 802db68:	21a3      	movs	r1, #163	; 0xa3
 802db6a:	4832      	ldr	r0, [pc, #200]	; (802dc34 <HAL_RNG_Init+0xdc>)
 802db6c:	f7f8 fb16 	bl	802619c <assert_failed>
  assert_param(IS_RNG_CED(hrng->Init.ClockErrorDetection));
 802db70:	6863      	ldr	r3, [r4, #4]
 802db72:	f033 0320 	bics.w	r3, r3, #32
 802db76:	d003      	beq.n	802db80 <HAL_RNG_Init+0x28>
 802db78:	21a4      	movs	r1, #164	; 0xa4
 802db7a:	482e      	ldr	r0, [pc, #184]	; (802dc34 <HAL_RNG_Init+0xdc>)
 802db7c:	f7f8 fb0e 	bl	802619c <assert_failed>

    /* Init the low level hardware */
    hrng->MspInitCallback(hrng);
  }
#else
  if (hrng->State == HAL_RNG_STATE_RESET)
 802db80:	7a63      	ldrb	r3, [r4, #9]
 802db82:	f003 02ff 	and.w	r2, r3, #255	; 0xff
 802db86:	b91b      	cbnz	r3, 802db90 <HAL_RNG_Init+0x38>
  {
    /* Allocate lock resource and initialize it */
    hrng->Lock = HAL_UNLOCKED;

    /* Init the low level hardware */
    HAL_RNG_MspInit(hrng);
 802db88:	4620      	mov	r0, r4
    hrng->Lock = HAL_UNLOCKED;
 802db8a:	7222      	strb	r2, [r4, #8]
    HAL_RNG_MspInit(hrng);
 802db8c:	f7f8 fb7e 	bl	802628c <HAL_RNG_MspInit>
  }
#endif /* USE_HAL_RNG_REGISTER_CALLBACKS */

  /* Change RNG peripheral state */
  hrng->State = HAL_RNG_STATE_BUSY;
 802db90:	2302      	movs	r3, #2

  /* Disable RNG */
  __HAL_RNG_DISABLE(hrng);
 802db92:	6822      	ldr	r2, [r4, #0]
  hrng->State = HAL_RNG_STATE_BUSY;
 802db94:	7263      	strb	r3, [r4, #9]
  __HAL_RNG_DISABLE(hrng);
 802db96:	6813      	ldr	r3, [r2, #0]
 802db98:	f023 0304 	bic.w	r3, r3, #4
 802db9c:	6013      	str	r3, [r2, #0]

  /* Clock Error Detection Configuration when CONDRT bit is set to 1 */
  MODIFY_REG(hrng->Instance->CR, RNG_CR_CED | RNG_CR_CONDRST | RNG_CR_RNG_CONFIG2,
 802db9e:	6811      	ldr	r1, [r2, #0]
 802dba0:	4b25      	ldr	r3, [pc, #148]	; (802dc38 <HAL_RNG_Init+0xe0>)
 802dba2:	400b      	ands	r3, r1
 802dba4:	6861      	ldr	r1, [r4, #4]
 802dba6:	430b      	orrs	r3, r1
 802dba8:	f043 4380 	orr.w	r3, r3, #1073741824	; 0x40000000
 802dbac:	f443 5300 	orr.w	r3, r3, #8192	; 0x2000
 802dbb0:	6013      	str	r3, [r2, #0]
             hrng->Init.ClockErrorDetection | RNG_CR_CONDRST | (1U << RNG_CR_RNG_CONFIG2_Pos));

  /* Writing bit CONDRST=0 */
  CLEAR_BIT(hrng->Instance->CR, RNG_CR_CONDRST);
 802dbb2:	6813      	ldr	r3, [r2, #0]
 802dbb4:	f023 4380 	bic.w	r3, r3, #1073741824	; 0x40000000
 802dbb8:	6013      	str	r3, [r2, #0]

  /* Get tick */
  tickstart = HAL_GetTick();
 802dbba:	f7fd fa39 	bl	802b030 <HAL_GetTick>
 802dbbe:	4605      	mov	r5, r0

  /* Wait for conditioning reset process to be completed */
  while (HAL_IS_BIT_SET(hrng->Instance->CR, RNG_CR_CONDRST))
 802dbc0:	6823      	ldr	r3, [r4, #0]
 802dbc2:	681a      	ldr	r2, [r3, #0]
 802dbc4:	0051      	lsls	r1, r2, #1
 802dbc6:	d40a      	bmi.n	802dbde <HAL_RNG_Init+0x86>
      }
    }
  }

  /* Enable the RNG Peripheral */
  __HAL_RNG_ENABLE(hrng);
 802dbc8:	681a      	ldr	r2, [r3, #0]
 802dbca:	f042 0204 	orr.w	r2, r2, #4
 802dbce:	601a      	str	r2, [r3, #0]

  /* verify that no seed error */
  if (__HAL_RNG_GET_IT(hrng, RNG_IT_SEI) != RESET)
 802dbd0:	685b      	ldr	r3, [r3, #4]
 802dbd2:	065a      	lsls	r2, r3, #25
 802dbd4:	d511      	bpl.n	802dbfa <HAL_RNG_Init+0xa2>
  {
    hrng->State = HAL_RNG_STATE_ERROR;
 802dbd6:	2304      	movs	r3, #4
 802dbd8:	7263      	strb	r3, [r4, #9]
    return HAL_ERROR;
 802dbda:	2001      	movs	r0, #1
 802dbdc:	e00c      	b.n	802dbf8 <HAL_RNG_Init+0xa0>
    if ((HAL_GetTick() - tickstart) > RNG_TIMEOUT_VALUE)
 802dbde:	f7fd fa27 	bl	802b030 <HAL_GetTick>
 802dbe2:	1b40      	subs	r0, r0, r5
 802dbe4:	280a      	cmp	r0, #10
 802dbe6:	d9eb      	bls.n	802dbc0 <HAL_RNG_Init+0x68>
      if (HAL_IS_BIT_SET(hrng->Instance->CR, RNG_CR_CONDRST))
 802dbe8:	6823      	ldr	r3, [r4, #0]
 802dbea:	681b      	ldr	r3, [r3, #0]
 802dbec:	0058      	lsls	r0, r3, #1
 802dbee:	d5e7      	bpl.n	802dbc0 <HAL_RNG_Init+0x68>
        hrng->State = HAL_RNG_STATE_READY;
 802dbf0:	2001      	movs	r0, #1
        hrng->ErrorCode = HAL_RNG_ERROR_TIMEOUT;
 802dbf2:	2302      	movs	r3, #2
        hrng->State = HAL_RNG_STATE_READY;
 802dbf4:	7260      	strb	r0, [r4, #9]
        hrng->ErrorCode = HAL_RNG_ERROR_TIMEOUT;
 802dbf6:	60e3      	str	r3, [r4, #12]
  /* Initialise the error code */
  hrng->ErrorCode = HAL_RNG_ERROR_NONE;

  /* Return function status */
  return HAL_OK;
}
 802dbf8:	bd38      	pop	{r3, r4, r5, pc}
  tickstart = HAL_GetTick();
 802dbfa:	f7fd fa19 	bl	802b030 <HAL_GetTick>
 802dbfe:	4605      	mov	r5, r0
  while (__HAL_RNG_GET_FLAG(hrng, RNG_FLAG_SECS) != RESET)
 802dc00:	6823      	ldr	r3, [r4, #0]
 802dc02:	6858      	ldr	r0, [r3, #4]
 802dc04:	f010 0004 	ands.w	r0, r0, #4
 802dc08:	d103      	bne.n	802dc12 <HAL_RNG_Init+0xba>
  hrng->State = HAL_RNG_STATE_READY;
 802dc0a:	2201      	movs	r2, #1
 802dc0c:	7262      	strb	r2, [r4, #9]
  hrng->ErrorCode = HAL_RNG_ERROR_NONE;
 802dc0e:	60e0      	str	r0, [r4, #12]
  return HAL_OK;
 802dc10:	e7f2      	b.n	802dbf8 <HAL_RNG_Init+0xa0>
    if ((HAL_GetTick() - tickstart) > RNG_TIMEOUT_VALUE)
 802dc12:	f7fd fa0d 	bl	802b030 <HAL_GetTick>
 802dc16:	1b40      	subs	r0, r0, r5
 802dc18:	280a      	cmp	r0, #10
 802dc1a:	d9f1      	bls.n	802dc00 <HAL_RNG_Init+0xa8>
      if (__HAL_RNG_GET_FLAG(hrng, RNG_FLAG_SECS) != RESET)
 802dc1c:	6823      	ldr	r3, [r4, #0]
 802dc1e:	685b      	ldr	r3, [r3, #4]
 802dc20:	075b      	lsls	r3, r3, #29
 802dc22:	d5ed      	bpl.n	802dc00 <HAL_RNG_Init+0xa8>
        hrng->State = HAL_RNG_STATE_ERROR;
 802dc24:	2304      	movs	r3, #4
 802dc26:	7263      	strb	r3, [r4, #9]
        hrng->ErrorCode = HAL_RNG_ERROR_TIMEOUT;
 802dc28:	2302      	movs	r3, #2
 802dc2a:	60e3      	str	r3, [r4, #12]
        return HAL_ERROR;
 802dc2c:	e7d5      	b.n	802dbda <HAL_RNG_Init+0x82>
 802dc2e:	bf00      	nop
 802dc30:	420c0800 	.word	0x420c0800
 802dc34:	08033fc1 	.word	0x08033fc1
 802dc38:	bfff1fdf 	.word	0xbfff1fdf

0802dc3c <HAL_RNG_ReadyDataCallback>:
  UNUSED(hrng);
  UNUSED(random32bit);
  /* NOTE : This function should not be modified. When the callback is needed,
            function HAL_RNG_ReadyDataCallback must be implemented in the user file.
   */
}
 802dc3c:	4770      	bx	lr

0802dc3e <HAL_RNG_ErrorCallback>:
 802dc3e:	4770      	bx	lr

0802dc40 <HAL_RNG_IRQHandler>:
  if (__HAL_RNG_GET_IT(hrng, RNG_IT_CEI) != RESET)
 802dc40:	6803      	ldr	r3, [r0, #0]
{
 802dc42:	b510      	push	{r4, lr}
  if (__HAL_RNG_GET_IT(hrng, RNG_IT_CEI) != RESET)
 802dc44:	685a      	ldr	r2, [r3, #4]
{
 802dc46:	4604      	mov	r4, r0
  if (__HAL_RNG_GET_IT(hrng, RNG_IT_CEI) != RESET)
 802dc48:	0692      	lsls	r2, r2, #26
 802dc4a:	d50b      	bpl.n	802dc64 <HAL_RNG_IRQHandler+0x24>
    hrng->ErrorCode = HAL_RNG_ERROR_CLOCK;
 802dc4c:	2310      	movs	r3, #16
 802dc4e:	60c3      	str	r3, [r0, #12]
    hrng->State = HAL_RNG_STATE_ERROR;
 802dc50:	2304      	movs	r3, #4
    HAL_RNG_ErrorCallback(hrng);
 802dc52:	4620      	mov	r0, r4
    hrng->State = HAL_RNG_STATE_ERROR;
 802dc54:	7263      	strb	r3, [r4, #9]
    HAL_RNG_ErrorCallback(hrng);
 802dc56:	f7ff fff2 	bl	802dc3e <HAL_RNG_ErrorCallback>
    __HAL_RNG_CLEAR_IT(hrng, RNG_IT_CEI | RNG_IT_SEI);
 802dc5a:	f06f 0260 	mvn.w	r2, #96	; 0x60
 802dc5e:	6823      	ldr	r3, [r4, #0]
 802dc60:	605a      	str	r2, [r3, #4]
}
 802dc62:	bd10      	pop	{r4, pc}
  else if (__HAL_RNG_GET_IT(hrng, RNG_IT_SEI) != RESET)
 802dc64:	685a      	ldr	r2, [r3, #4]
 802dc66:	0650      	lsls	r0, r2, #25
 802dc68:	d506      	bpl.n	802dc78 <HAL_RNG_IRQHandler+0x38>
    if (__HAL_RNG_GET_FLAG(hrng, RNG_FLAG_SECS) == RESET)
 802dc6a:	685a      	ldr	r2, [r3, #4]
 802dc6c:	0751      	lsls	r1, r2, #29
 802dc6e:	d417      	bmi.n	802dca0 <HAL_RNG_IRQHandler+0x60>
      CLEAR_BIT(hrng->Instance->SR, RNG_IT_SEI);
 802dc70:	685a      	ldr	r2, [r3, #4]
 802dc72:	f022 0240 	bic.w	r2, r2, #64	; 0x40
 802dc76:	605a      	str	r2, [r3, #4]
  if (__HAL_RNG_GET_IT(hrng, RNG_IT_DRDY) != RESET)
 802dc78:	685a      	ldr	r2, [r3, #4]
 802dc7a:	07d2      	lsls	r2, r2, #31
 802dc7c:	d5f1      	bpl.n	802dc62 <HAL_RNG_IRQHandler+0x22>
    __HAL_RNG_DISABLE_IT(hrng);
 802dc7e:	681a      	ldr	r2, [r3, #0]
 802dc80:	f022 0208 	bic.w	r2, r2, #8
 802dc84:	601a      	str	r2, [r3, #0]
    hrng->RandomNumber = hrng->Instance->DR;
 802dc86:	6899      	ldr	r1, [r3, #8]
    if (hrng->State != HAL_RNG_STATE_ERROR)
 802dc88:	7a63      	ldrb	r3, [r4, #9]
    hrng->RandomNumber = hrng->Instance->DR;
 802dc8a:	6121      	str	r1, [r4, #16]
    if (hrng->State != HAL_RNG_STATE_ERROR)
 802dc8c:	2b04      	cmp	r3, #4
 802dc8e:	d0e8      	beq.n	802dc62 <HAL_RNG_IRQHandler+0x22>
      hrng->State = HAL_RNG_STATE_READY;
 802dc90:	2301      	movs	r3, #1
 802dc92:	7263      	strb	r3, [r4, #9]
      __HAL_UNLOCK(hrng);
 802dc94:	2300      	movs	r3, #0
      HAL_RNG_ReadyDataCallback(hrng, hrng->RandomNumber);
 802dc96:	4620      	mov	r0, r4
      __HAL_UNLOCK(hrng);
 802dc98:	7223      	strb	r3, [r4, #8]
      HAL_RNG_ReadyDataCallback(hrng, hrng->RandomNumber);
 802dc9a:	f7ff ffcf 	bl	802dc3c <HAL_RNG_ReadyDataCallback>
 802dc9e:	e7e0      	b.n	802dc62 <HAL_RNG_IRQHandler+0x22>
      hrng->ErrorCode = HAL_RNG_ERROR_SEED;
 802dca0:	2208      	movs	r2, #8
 802dca2:	60e2      	str	r2, [r4, #12]
      __HAL_RNG_DISABLE_IT(hrng);
 802dca4:	681a      	ldr	r2, [r3, #0]
 802dca6:	f022 0208 	bic.w	r2, r2, #8
 802dcaa:	601a      	str	r2, [r3, #0]
  if (rngclockerror == 1U)
 802dcac:	e7d0      	b.n	802dc50 <HAL_RNG_IRQHandler+0x10>
	...

0802dcb0 <HAL_RTC_DeactivateAlarm>:
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_RTC_DeactivateAlarm(RTC_HandleTypeDef *hrtc, uint32_t Alarm)
{
  /* Check the parameters */
  assert_param(IS_RTC_ALARM(Alarm));
 802dcb0:	f5b1 7f80 	cmp.w	r1, #256	; 0x100
{
 802dcb4:	b538      	push	{r3, r4, r5, lr}
 802dcb6:	4604      	mov	r4, r0
 802dcb8:	460d      	mov	r5, r1
  assert_param(IS_RTC_ALARM(Alarm));
 802dcba:	d007      	beq.n	802dccc <HAL_RTC_DeactivateAlarm+0x1c>
 802dcbc:	f5b1 7f00 	cmp.w	r1, #512	; 0x200
 802dcc0:	d004      	beq.n	802dccc <HAL_RTC_DeactivateAlarm+0x1c>
 802dcc2:	f240 61eb 	movw	r1, #1771	; 0x6eb
 802dcc6:	4818      	ldr	r0, [pc, #96]	; (802dd28 <HAL_RTC_DeactivateAlarm+0x78>)
 802dcc8:	f7f8 fa68 	bl	802619c <assert_failed>

  /* Process Locked */
  __HAL_LOCK(hrtc);
 802dccc:	f894 302c 	ldrb.w	r3, [r4, #44]	; 0x2c
 802dcd0:	2b01      	cmp	r3, #1
 802dcd2:	f04f 0302 	mov.w	r3, #2
 802dcd6:	d01d      	beq.n	802dd14 <HAL_RTC_DeactivateAlarm+0x64>
 802dcd8:	2201      	movs	r2, #1
 802dcda:	f884 202c 	strb.w	r2, [r4, #44]	; 0x2c

  /* Change RTC state */
  hrtc->State = HAL_RTC_STATE_BUSY;

  /* Disable the write protection for RTC registers */
  __HAL_RTC_WRITEPROTECTION_DISABLE(hrtc);
 802dcde:	22ca      	movs	r2, #202	; 0xca
  hrtc->State = HAL_RTC_STATE_BUSY;
 802dce0:	f884 302d 	strb.w	r3, [r4, #45]	; 0x2d
  __HAL_RTC_WRITEPROTECTION_DISABLE(hrtc);
 802dce4:	4b11      	ldr	r3, [pc, #68]	; (802dd2c <HAL_RTC_DeactivateAlarm+0x7c>)

  /* In case of interrupt mode is used, the interrupt source must disabled */
  if (Alarm == RTC_ALARM_A)
 802dce6:	f5b5 7f80 	cmp.w	r5, #256	; 0x100
  __HAL_RTC_WRITEPROTECTION_DISABLE(hrtc);
 802dcea:	625a      	str	r2, [r3, #36]	; 0x24
 802dcec:	f04f 0253 	mov.w	r2, #83	; 0x53
 802dcf0:	625a      	str	r2, [r3, #36]	; 0x24
  {
    CLEAR_BIT(RTC->CR, RTC_CR_ALRAE | RTC_CR_ALRAIE);
 802dcf2:	699a      	ldr	r2, [r3, #24]
  if (Alarm == RTC_ALARM_A)
 802dcf4:	d110      	bne.n	802dd18 <HAL_RTC_DeactivateAlarm+0x68>
    CLEAR_BIT(RTC->CR, RTC_CR_ALRAE | RTC_CR_ALRAIE);
 802dcf6:	f422 5288 	bic.w	r2, r2, #4352	; 0x1100
 802dcfa:	619a      	str	r2, [r3, #24]

    /* AlarmA, Clear SSCLR */
    CLEAR_BIT(RTC->ALRMASSR, RTC_ALRMASSR_SSCLR);
 802dcfc:	6c5a      	ldr	r2, [r3, #68]	; 0x44
 802dcfe:	f022 4200 	bic.w	r2, r2, #2147483648	; 0x80000000
 802dd02:	645a      	str	r2, [r3, #68]	; 0x44
    /* AlarmB, Clear SSCLR */
    CLEAR_BIT(RTC->ALRMBSSR, RTC_ALRMBSSR_SSCLR);
  }

  /* Enable the write protection for RTC registers */
  __HAL_RTC_WRITEPROTECTION_ENABLE(hrtc);
 802dd04:	22ff      	movs	r2, #255	; 0xff
 802dd06:	625a      	str	r2, [r3, #36]	; 0x24

  /* Change RTC state */
  hrtc->State = HAL_RTC_STATE_READY;
 802dd08:	2301      	movs	r3, #1
 802dd0a:	f884 302d 	strb.w	r3, [r4, #45]	; 0x2d

  /* Process Unlocked */
  __HAL_UNLOCK(hrtc);
 802dd0e:	2300      	movs	r3, #0
 802dd10:	f884 302c 	strb.w	r3, [r4, #44]	; 0x2c
  __HAL_LOCK(hrtc);
 802dd14:	4618      	mov	r0, r3

  return HAL_OK;
}
 802dd16:	bd38      	pop	{r3, r4, r5, pc}
    CLEAR_BIT(RTC->CR, RTC_CR_ALRBE | RTC_CR_ALRBIE);
 802dd18:	f422 5208 	bic.w	r2, r2, #8704	; 0x2200
 802dd1c:	619a      	str	r2, [r3, #24]
    CLEAR_BIT(RTC->ALRMBSSR, RTC_ALRMBSSR_SSCLR);
 802dd1e:	6cda      	ldr	r2, [r3, #76]	; 0x4c
 802dd20:	f022 4200 	bic.w	r2, r2, #2147483648	; 0x80000000
 802dd24:	64da      	str	r2, [r3, #76]	; 0x4c
 802dd26:	e7ed      	b.n	802dd04 <HAL_RTC_DeactivateAlarm+0x54>
 802dd28:	0803402f 	.word	0x0803402f
 802dd2c:	46007800 	.word	0x46007800

0802dd30 <HAL_RTC_AlarmIRQHandler>:
  * @note   Alarm non-secure is available in non-secure driver.
  * @param  hrtc RTC handle
  * @retval None
  */
void HAL_RTC_AlarmIRQHandler(RTC_HandleTypeDef *hrtc)
{
 802dd30:	b570      	push	{r4, r5, r6, lr}
  /* Get interrupt status */
  uint32_t tmp = READ_REG(RTC->MISR);
 802dd32:	4d0a      	ldr	r5, [pc, #40]	; (802dd5c <HAL_RTC_AlarmIRQHandler+0x2c>)
{
 802dd34:	4604      	mov	r4, r0
  uint32_t tmp = READ_REG(RTC->MISR);
 802dd36:	6d6e      	ldr	r6, [r5, #84]	; 0x54

  if ((tmp & RTC_MISR_ALRAMF) != 0U)
 802dd38:	07f2      	lsls	r2, r6, #31
 802dd3a:	d503      	bpl.n	802dd44 <HAL_RTC_AlarmIRQHandler+0x14>
  {
    /* Clear the AlarmA interrupt pending bit */
    WRITE_REG(RTC->SCR, RTC_SCR_CALRAF);
 802dd3c:	2301      	movs	r3, #1
 802dd3e:	65eb      	str	r3, [r5, #92]	; 0x5c

#if (USE_HAL_RTC_REGISTER_CALLBACKS == 1)
    /* Call Compare Match registered Callback */
    hrtc->AlarmAEventCallback(hrtc);
#else
    HAL_RTC_AlarmAEventCallback(hrtc);
 802dd40:	f7fa fc86 	bl	8028650 <HAL_RTC_AlarmAEventCallback>
#endif /* USE_HAL_RTC_REGISTER_CALLBACKS */
  }

  if ((tmp & RTC_MISR_ALRBMF) != 0U)
 802dd44:	07b3      	lsls	r3, r6, #30
 802dd46:	d504      	bpl.n	802dd52 <HAL_RTC_AlarmIRQHandler+0x22>
  {
    /* Clear the AlarmB interrupt pending bit */
    WRITE_REG(RTC->SCR, RTC_SCR_CALRBF);
 802dd48:	2302      	movs	r3, #2

#if (USE_HAL_RTC_REGISTER_CALLBACKS == 1)
    /* Call Compare Match registered Callback */
    hrtc->AlarmBEventCallback(hrtc);
#else
    HAL_RTCEx_AlarmBEventCallback(hrtc);
 802dd4a:	4620      	mov	r0, r4
    WRITE_REG(RTC->SCR, RTC_SCR_CALRBF);
 802dd4c:	65eb      	str	r3, [r5, #92]	; 0x5c
    HAL_RTCEx_AlarmBEventCallback(hrtc);
 802dd4e:	f000 fb45 	bl	802e3dc <HAL_RTCEx_AlarmBEventCallback>
#endif /* USE_HAL_RTC_REGISTER_CALLBACKS */
  }

  /* Change RTC state */
  hrtc->State = HAL_RTC_STATE_READY;
 802dd52:	2301      	movs	r3, #1
 802dd54:	f884 302d 	strb.w	r3, [r4, #45]	; 0x2d
}
 802dd58:	bd70      	pop	{r4, r5, r6, pc}
 802dd5a:	bf00      	nop
 802dd5c:	46007800 	.word	0x46007800

0802dd60 <HAL_RTC_WaitForSynchro>:
  *         correctly copied into the RTC_TR and RTC_DR shadow registers.
  * @param  hrtc RTC handle
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_RTC_WaitForSynchro(RTC_HandleTypeDef *hrtc)
{
 802dd60:	b570      	push	{r4, r5, r6, lr}
  uint32_t tickstart;

  /* Clear RSF flag */
  CLEAR_BIT(RTC->ICSR, RTC_ICSR_RSF);
 802dd62:	4c0e      	ldr	r4, [pc, #56]	; (802dd9c <HAL_RTC_WaitForSynchro+0x3c>)
{
 802dd64:	4606      	mov	r6, r0
  CLEAR_BIT(RTC->ICSR, RTC_ICSR_RSF);
 802dd66:	68e3      	ldr	r3, [r4, #12]
 802dd68:	f023 0320 	bic.w	r3, r3, #32
 802dd6c:	60e3      	str	r3, [r4, #12]

  tickstart = HAL_GetTick();
 802dd6e:	f7fd f95f 	bl	802b030 <HAL_GetTick>
 802dd72:	4605      	mov	r5, r0

  /* Wait the registers to be synchronised */
  while (READ_BIT(RTC->ICSR, RTC_ICSR_RSF) == 0U)
 802dd74:	68e3      	ldr	r3, [r4, #12]
 802dd76:	069b      	lsls	r3, r3, #26
 802dd78:	d408      	bmi.n	802dd8c <HAL_RTC_WaitForSynchro+0x2c>
  {
    if ((HAL_GetTick() - tickstart) > RTC_TIMEOUT_VALUE)
 802dd7a:	f7fd f959 	bl	802b030 <HAL_GetTick>
 802dd7e:	1b40      	subs	r0, r0, r5
 802dd80:	f5b0 7f7a 	cmp.w	r0, #1000	; 0x3e8
 802dd84:	d9f6      	bls.n	802dd74 <HAL_RTC_WaitForSynchro+0x14>
    {
      /* New check to avoid false timeout detection in case of preemption */
      if (READ_BIT(RTC->ICSR, RTC_ICSR_RSF) == 0U)
 802dd86:	68e3      	ldr	r3, [r4, #12]
 802dd88:	069a      	lsls	r2, r3, #26
 802dd8a:	d501      	bpl.n	802dd90 <HAL_RTC_WaitForSynchro+0x30>
        break;
      }
    }
  }

  return HAL_OK;
 802dd8c:	2000      	movs	r0, #0
}
 802dd8e:	bd70      	pop	{r4, r5, r6, pc}
        hrtc->State = HAL_RTC_STATE_TIMEOUT;
 802dd90:	2303      	movs	r3, #3
        return HAL_TIMEOUT;
 802dd92:	4618      	mov	r0, r3
        hrtc->State = HAL_RTC_STATE_TIMEOUT;
 802dd94:	f886 302d 	strb.w	r3, [r6, #45]	; 0x2d
        return HAL_TIMEOUT;
 802dd98:	e7f9      	b.n	802dd8e <HAL_RTC_WaitForSynchro+0x2e>
 802dd9a:	bf00      	nop
 802dd9c:	46007800 	.word	0x46007800

0802dda0 <RTC_EnterInitMode>:
  *         __HAL_RTC_WRITEPROTECTION_DISABLE() before calling this function.
  * @param  hrtc RTC handle
  * @retval HAL status
  */
HAL_StatusTypeDef RTC_EnterInitMode(RTC_HandleTypeDef *hrtc)
{
 802dda0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  uint32_t tickstart;
  HAL_StatusTypeDef status = HAL_OK;

  /* Check if the Initialization mode is set */
  if (READ_BIT(RTC->ICSR, RTC_ICSR_INITF) == 0U)
 802dda4:	4d12      	ldr	r5, [pc, #72]	; (802ddf0 <RTC_EnterInitMode+0x50>)
{
 802dda6:	4607      	mov	r7, r0
  if (READ_BIT(RTC->ICSR, RTC_ICSR_INITF) == 0U)
 802dda8:	68ec      	ldr	r4, [r5, #12]
 802ddaa:	f014 0440 	ands.w	r4, r4, #64	; 0x40
 802ddae:	d11d      	bne.n	802ddec <RTC_EnterInitMode+0x4c>
  {
    /* Set the Initialization mode */
    SET_BIT(RTC->ICSR, RTC_ICSR_INIT);
 802ddb0:	68eb      	ldr	r3, [r5, #12]
        if (READ_BIT(RTC->ICSR, RTC_ICSR_INITF) == 0U)
        {
          status = HAL_TIMEOUT;

          /* Change RTC state */
          hrtc->State = HAL_RTC_STATE_TIMEOUT;
 802ddb2:	f04f 0803 	mov.w	r8, #3
    SET_BIT(RTC->ICSR, RTC_ICSR_INIT);
 802ddb6:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 802ddba:	60eb      	str	r3, [r5, #12]
    tickstart = HAL_GetTick();
 802ddbc:	f7fd f938 	bl	802b030 <HAL_GetTick>
 802ddc0:	4606      	mov	r6, r0
    while ((READ_BIT(RTC->ICSR, RTC_ICSR_INITF) == 0U) && (status != HAL_TIMEOUT))
 802ddc2:	68eb      	ldr	r3, [r5, #12]
 802ddc4:	065b      	lsls	r3, r3, #25
 802ddc6:	d401      	bmi.n	802ddcc <RTC_EnterInitMode+0x2c>
 802ddc8:	2c03      	cmp	r4, #3
 802ddca:	d102      	bne.n	802ddd2 <RTC_EnterInitMode+0x32>
      }
    }
  }

  return status;
}
 802ddcc:	4620      	mov	r0, r4
 802ddce:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
      if ((HAL_GetTick()  - tickstart) > RTC_TIMEOUT_VALUE)
 802ddd2:	f7fd f92d 	bl	802b030 <HAL_GetTick>
 802ddd6:	1b80      	subs	r0, r0, r6
 802ddd8:	f5b0 7f7a 	cmp.w	r0, #1000	; 0x3e8
 802dddc:	d9f1      	bls.n	802ddc2 <RTC_EnterInitMode+0x22>
        if (READ_BIT(RTC->ICSR, RTC_ICSR_INITF) == 0U)
 802ddde:	68eb      	ldr	r3, [r5, #12]
 802dde0:	065a      	lsls	r2, r3, #25
 802dde2:	d4f3      	bmi.n	802ddcc <RTC_EnterInitMode+0x2c>
          status = HAL_TIMEOUT;
 802dde4:	2403      	movs	r4, #3
          hrtc->State = HAL_RTC_STATE_TIMEOUT;
 802dde6:	f887 802d 	strb.w	r8, [r7, #45]	; 0x2d
 802ddea:	e7ea      	b.n	802ddc2 <RTC_EnterInitMode+0x22>
  HAL_StatusTypeDef status = HAL_OK;
 802ddec:	2400      	movs	r4, #0
 802ddee:	e7ed      	b.n	802ddcc <RTC_EnterInitMode+0x2c>
 802ddf0:	46007800 	.word	0x46007800

0802ddf4 <RTC_ExitInitMode>:
HAL_StatusTypeDef RTC_ExitInitMode(RTC_HandleTypeDef *hrtc)
{
  HAL_StatusTypeDef status = HAL_OK;

  /* Exit Initialization mode */
  CLEAR_BIT(RTC->ICSR, RTC_ICSR_INIT);
 802ddf4:	4b10      	ldr	r3, [pc, #64]	; (802de38 <RTC_ExitInitMode+0x44>)
{
 802ddf6:	b510      	push	{r4, lr}
  CLEAR_BIT(RTC->ICSR, RTC_ICSR_INIT);
 802ddf8:	68da      	ldr	r2, [r3, #12]
{
 802ddfa:	4604      	mov	r4, r0
  CLEAR_BIT(RTC->ICSR, RTC_ICSR_INIT);
 802ddfc:	f022 0280 	bic.w	r2, r2, #128	; 0x80
 802de00:	60da      	str	r2, [r3, #12]

  /* If CR_BYPSHAD bit = 0, wait for synchro */
  if (READ_BIT(RTC->CR, RTC_CR_BYPSHAD) == 0U)
 802de02:	699a      	ldr	r2, [r3, #24]
 802de04:	0692      	lsls	r2, r2, #26
 802de06:	d406      	bmi.n	802de16 <RTC_ExitInitMode+0x22>
  {
    if (HAL_RTC_WaitForSynchro(hrtc) != HAL_OK)
 802de08:	f7ff ffaa 	bl	802dd60 <HAL_RTC_WaitForSynchro>
 802de0c:	b110      	cbz	r0, 802de14 <RTC_ExitInitMode+0x20>
    {
      /* Change RTC state */
      hrtc->State = HAL_RTC_STATE_TIMEOUT;
 802de0e:	2003      	movs	r0, #3
 802de10:	f884 002d 	strb.w	r0, [r4, #45]	; 0x2d
    }
    /* Restore BYPSHAD bit */
    SET_BIT(RTC->CR, RTC_CR_BYPSHAD);
  }
  return status;
}
 802de14:	bd10      	pop	{r4, pc}
    CLEAR_BIT(RTC->CR, RTC_CR_BYPSHAD);
 802de16:	699a      	ldr	r2, [r3, #24]
 802de18:	f022 0220 	bic.w	r2, r2, #32
 802de1c:	619a      	str	r2, [r3, #24]
    if (HAL_RTC_WaitForSynchro(hrtc) != HAL_OK)
 802de1e:	f7ff ff9f 	bl	802dd60 <HAL_RTC_WaitForSynchro>
 802de22:	b110      	cbz	r0, 802de2a <RTC_ExitInitMode+0x36>
      hrtc->State = HAL_RTC_STATE_TIMEOUT;
 802de24:	2003      	movs	r0, #3
 802de26:	f884 002d 	strb.w	r0, [r4, #45]	; 0x2d
    SET_BIT(RTC->CR, RTC_CR_BYPSHAD);
 802de2a:	4a03      	ldr	r2, [pc, #12]	; (802de38 <RTC_ExitInitMode+0x44>)
 802de2c:	6993      	ldr	r3, [r2, #24]
 802de2e:	f043 0320 	orr.w	r3, r3, #32
 802de32:	6193      	str	r3, [r2, #24]
  return status;
 802de34:	e7ee      	b.n	802de14 <RTC_ExitInitMode+0x20>
 802de36:	bf00      	nop
 802de38:	46007800 	.word	0x46007800

0802de3c <HAL_RTC_Init>:
{
 802de3c:	b538      	push	{r3, r4, r5, lr}
  if (hrtc != NULL)
 802de3e:	4604      	mov	r4, r0
 802de40:	2800      	cmp	r0, #0
 802de42:	f000 80b8 	beq.w	802dfb6 <HAL_RTC_Init+0x17a>
    assert_param(IS_RTC_ALL_INSTANCE(hrtc->Instance));
 802de46:	6802      	ldr	r2, [r0, #0]
 802de48:	4b5c      	ldr	r3, [pc, #368]	; (802dfbc <HAL_RTC_Init+0x180>)
 802de4a:	429a      	cmp	r2, r3
 802de4c:	d004      	beq.n	802de58 <HAL_RTC_Init+0x1c>
 802de4e:	f240 1105 	movw	r1, #261	; 0x105
 802de52:	485b      	ldr	r0, [pc, #364]	; (802dfc0 <HAL_RTC_Init+0x184>)
 802de54:	f7f8 f9a2 	bl	802619c <assert_failed>
    assert_param(IS_RTC_HOUR_FORMAT(hrtc->Init.HourFormat));
 802de58:	6863      	ldr	r3, [r4, #4]
 802de5a:	f033 0340 	bics.w	r3, r3, #64	; 0x40
 802de5e:	d004      	beq.n	802de6a <HAL_RTC_Init+0x2e>
 802de60:	f44f 7183 	mov.w	r1, #262	; 0x106
 802de64:	4856      	ldr	r0, [pc, #344]	; (802dfc0 <HAL_RTC_Init+0x184>)
 802de66:	f7f8 f999 	bl	802619c <assert_failed>
    assert_param(IS_RTC_ASYNCH_PREDIV(hrtc->Init.AsynchPrediv));
 802de6a:	68a3      	ldr	r3, [r4, #8]
 802de6c:	2b7f      	cmp	r3, #127	; 0x7f
 802de6e:	d904      	bls.n	802de7a <HAL_RTC_Init+0x3e>
 802de70:	f240 1107 	movw	r1, #263	; 0x107
 802de74:	4852      	ldr	r0, [pc, #328]	; (802dfc0 <HAL_RTC_Init+0x184>)
 802de76:	f7f8 f991 	bl	802619c <assert_failed>
    assert_param(IS_RTC_SYNCH_PREDIV(hrtc->Init.SynchPrediv));
 802de7a:	68e3      	ldr	r3, [r4, #12]
 802de7c:	f5b3 4f00 	cmp.w	r3, #32768	; 0x8000
 802de80:	d304      	bcc.n	802de8c <HAL_RTC_Init+0x50>
 802de82:	f44f 7184 	mov.w	r1, #264	; 0x108
 802de86:	484e      	ldr	r0, [pc, #312]	; (802dfc0 <HAL_RTC_Init+0x184>)
 802de88:	f7f8 f988 	bl	802619c <assert_failed>
    assert_param(IS_RTC_OUTPUT(hrtc->Init.OutPut));
 802de8c:	6923      	ldr	r3, [r4, #16]
 802de8e:	f433 02c0 	bics.w	r2, r3, #6291456	; 0x600000
 802de92:	d007      	beq.n	802dea4 <HAL_RTC_Init+0x68>
 802de94:	f1b3 6f80 	cmp.w	r3, #67108864	; 0x4000000
 802de98:	d004      	beq.n	802dea4 <HAL_RTC_Init+0x68>
 802de9a:	f44f 7185 	mov.w	r1, #266	; 0x10a
 802de9e:	4848      	ldr	r0, [pc, #288]	; (802dfc0 <HAL_RTC_Init+0x184>)
 802dea0:	f7f8 f97c 	bl	802619c <assert_failed>
    assert_param(IS_RTC_OUTPUT_POL(hrtc->Init.OutPutPolarity));
 802dea4:	69a3      	ldr	r3, [r4, #24]
 802dea6:	f433 1380 	bics.w	r3, r3, #1048576	; 0x100000
 802deaa:	d004      	beq.n	802deb6 <HAL_RTC_Init+0x7a>
 802deac:	f240 110b 	movw	r1, #267	; 0x10b
 802deb0:	4843      	ldr	r0, [pc, #268]	; (802dfc0 <HAL_RTC_Init+0x184>)
 802deb2:	f7f8 f973 	bl	802619c <assert_failed>
    assert_param(IS_RTC_OUTPUT_TYPE(hrtc->Init.OutPutType));
 802deb6:	69e3      	ldr	r3, [r4, #28]
 802deb8:	f033 4380 	bics.w	r3, r3, #1073741824	; 0x40000000
 802debc:	d004      	beq.n	802dec8 <HAL_RTC_Init+0x8c>
 802debe:	f44f 7186 	mov.w	r1, #268	; 0x10c
 802dec2:	483f      	ldr	r0, [pc, #252]	; (802dfc0 <HAL_RTC_Init+0x184>)
 802dec4:	f7f8 f96a 	bl	802619c <assert_failed>
    assert_param(IS_RTC_OUTPUT_PULLUP(hrtc->Init.OutPutPullUp));
 802dec8:	6a23      	ldr	r3, [r4, #32]
 802deca:	f033 5300 	bics.w	r3, r3, #536870912	; 0x20000000
 802dece:	d004      	beq.n	802deda <HAL_RTC_Init+0x9e>
 802ded0:	f240 110d 	movw	r1, #269	; 0x10d
 802ded4:	483a      	ldr	r0, [pc, #232]	; (802dfc0 <HAL_RTC_Init+0x184>)
 802ded6:	f7f8 f961 	bl	802619c <assert_failed>
    assert_param(IS_RTC_OUTPUT_REMAP(hrtc->Init.OutPutRemap));
 802deda:	6963      	ldr	r3, [r4, #20]
 802dedc:	f033 4300 	bics.w	r3, r3, #2147483648	; 0x80000000
 802dee0:	d004      	beq.n	802deec <HAL_RTC_Init+0xb0>
 802dee2:	f44f 7188 	mov.w	r1, #272	; 0x110
 802dee6:	4836      	ldr	r0, [pc, #216]	; (802dfc0 <HAL_RTC_Init+0x184>)
 802dee8:	f7f8 f958 	bl	802619c <assert_failed>
    assert_param(IS_RTC_BINARY_MODE(hrtc->Init.BinMode));
 802deec:	6a63      	ldr	r3, [r4, #36]	; 0x24
 802deee:	f433 7280 	bics.w	r2, r3, #256	; 0x100
 802def2:	d007      	beq.n	802df04 <HAL_RTC_Init+0xc8>
 802def4:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 802def8:	d004      	beq.n	802df04 <HAL_RTC_Init+0xc8>
 802defa:	f44f 7189 	mov.w	r1, #274	; 0x112
 802defe:	4830      	ldr	r0, [pc, #192]	; (802dfc0 <HAL_RTC_Init+0x184>)
 802df00:	f7f8 f94c 	bl	802619c <assert_failed>
    assert_param(IS_RTC_BINARY_MIX_BCDU(hrtc->Init.BinMixBcdU));
 802df04:	6aa3      	ldr	r3, [r4, #40]	; 0x28
 802df06:	f433 6340 	bics.w	r3, r3, #3072	; 0xc00
 802df0a:	d007      	beq.n	802df1c <HAL_RTC_Init+0xe0>
 802df0c:	f5b3 5f80 	cmp.w	r3, #4096	; 0x1000
 802df10:	d004      	beq.n	802df1c <HAL_RTC_Init+0xe0>
 802df12:	f240 1113 	movw	r1, #275	; 0x113
 802df16:	482a      	ldr	r0, [pc, #168]	; (802dfc0 <HAL_RTC_Init+0x184>)
 802df18:	f7f8 f940 	bl	802619c <assert_failed>
    if (hrtc->State == HAL_RTC_STATE_RESET)
 802df1c:	f894 302d 	ldrb.w	r3, [r4, #45]	; 0x2d
 802df20:	f003 02ff 	and.w	r2, r3, #255	; 0xff
 802df24:	b923      	cbnz	r3, 802df30 <HAL_RTC_Init+0xf4>
      HAL_RTC_MspInit(hrtc);
 802df26:	4620      	mov	r0, r4
      hrtc->Lock = HAL_UNLOCKED;
 802df28:	f884 202c 	strb.w	r2, [r4, #44]	; 0x2c
      HAL_RTC_MspInit(hrtc);
 802df2c:	f7f8 f9e2 	bl	80262f4 <HAL_RTC_MspInit>
    hrtc->State = HAL_RTC_STATE_BUSY;
 802df30:	2302      	movs	r3, #2
    if (__HAL_RTC_IS_CALENDAR_INITIALIZED(hrtc) == 0U)
 802df32:	4d22      	ldr	r5, [pc, #136]	; (802dfbc <HAL_RTC_Init+0x180>)
    hrtc->State = HAL_RTC_STATE_BUSY;
 802df34:	f884 302d 	strb.w	r3, [r4, #45]	; 0x2d
    if (__HAL_RTC_IS_CALENDAR_INITIALIZED(hrtc) == 0U)
 802df38:	68eb      	ldr	r3, [r5, #12]
 802df3a:	06db      	lsls	r3, r3, #27
 802df3c:	d432      	bmi.n	802dfa4 <HAL_RTC_Init+0x168>
      __HAL_RTC_WRITEPROTECTION_DISABLE(hrtc);
 802df3e:	23ca      	movs	r3, #202	; 0xca
 802df40:	626b      	str	r3, [r5, #36]	; 0x24
 802df42:	2353      	movs	r3, #83	; 0x53
      status = RTC_EnterInitMode(hrtc);
 802df44:	4620      	mov	r0, r4
      __HAL_RTC_WRITEPROTECTION_DISABLE(hrtc);
 802df46:	626b      	str	r3, [r5, #36]	; 0x24
      status = RTC_EnterInitMode(hrtc);
 802df48:	f7ff ff2a 	bl	802dda0 <RTC_EnterInitMode>
      if (status == HAL_OK)
 802df4c:	bb78      	cbnz	r0, 802dfae <HAL_RTC_Init+0x172>
        CLEAR_BIT(RTC->CR, (RTC_CR_FMT | RTC_CR_POL | RTC_CR_OSEL | RTC_CR_TAMPOE));
 802df4e:	69ab      	ldr	r3, [r5, #24]
        status = RTC_ExitInitMode(hrtc);
 802df50:	4620      	mov	r0, r4
        CLEAR_BIT(RTC->CR, (RTC_CR_FMT | RTC_CR_POL | RTC_CR_OSEL | RTC_CR_TAMPOE));
 802df52:	f023 638e 	bic.w	r3, r3, #74448896	; 0x4700000
 802df56:	f023 0340 	bic.w	r3, r3, #64	; 0x40
 802df5a:	61ab      	str	r3, [r5, #24]
        SET_BIT(RTC->CR, (hrtc->Init.HourFormat | hrtc->Init.OutPut | hrtc->Init.OutPutPolarity));
 802df5c:	6921      	ldr	r1, [r4, #16]
 802df5e:	6863      	ldr	r3, [r4, #4]
 802df60:	69aa      	ldr	r2, [r5, #24]
 802df62:	430b      	orrs	r3, r1
 802df64:	4313      	orrs	r3, r2
 802df66:	69a2      	ldr	r2, [r4, #24]
 802df68:	4313      	orrs	r3, r2
 802df6a:	61ab      	str	r3, [r5, #24]
        WRITE_REG(RTC->PRER, ((hrtc->Init.SynchPrediv) | (hrtc->Init.AsynchPrediv << RTC_PRER_PREDIV_A_Pos)));
 802df6c:	e9d4 2302 	ldrd	r2, r3, [r4, #8]
 802df70:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 802df74:	612b      	str	r3, [r5, #16]
        MODIFY_REG(RTC->ICSR, RTC_ICSR_BIN | RTC_ICSR_BCDU, hrtc->Init.BinMode | hrtc->Init.BinMixBcdU);
 802df76:	68ea      	ldr	r2, [r5, #12]
 802df78:	e9d4 3109 	ldrd	r3, r1, [r4, #36]	; 0x24
 802df7c:	f422 52f8 	bic.w	r2, r2, #7936	; 0x1f00
 802df80:	430b      	orrs	r3, r1
 802df82:	4313      	orrs	r3, r2
 802df84:	60eb      	str	r3, [r5, #12]
        status = RTC_ExitInitMode(hrtc);
 802df86:	f7ff ff35 	bl	802ddf4 <RTC_ExitInitMode>
        if (status == HAL_OK)
 802df8a:	b980      	cbnz	r0, 802dfae <HAL_RTC_Init+0x172>
          MODIFY_REG(RTC->CR, \
 802df8c:	e9d4 1307 	ldrd	r1, r3, [r4, #28]
 802df90:	69aa      	ldr	r2, [r5, #24]
 802df92:	430b      	orrs	r3, r1
 802df94:	f022 4260 	bic.w	r2, r2, #3758096384	; 0xe0000000
 802df98:	4313      	orrs	r3, r2
 802df9a:	6962      	ldr	r2, [r4, #20]
 802df9c:	4313      	orrs	r3, r2
 802df9e:	61ab      	str	r3, [r5, #24]
      __HAL_RTC_WRITEPROTECTION_ENABLE(hrtc);
 802dfa0:	23ff      	movs	r3, #255	; 0xff
 802dfa2:	626b      	str	r3, [r5, #36]	; 0x24
      hrtc->State = HAL_RTC_STATE_READY;
 802dfa4:	2301      	movs	r3, #1
 802dfa6:	2000      	movs	r0, #0
 802dfa8:	f884 302d 	strb.w	r3, [r4, #45]	; 0x2d
 802dfac:	e002      	b.n	802dfb4 <HAL_RTC_Init+0x178>
      __HAL_RTC_WRITEPROTECTION_ENABLE(hrtc);
 802dfae:	22ff      	movs	r2, #255	; 0xff
 802dfb0:	4b02      	ldr	r3, [pc, #8]	; (802dfbc <HAL_RTC_Init+0x180>)
 802dfb2:	625a      	str	r2, [r3, #36]	; 0x24
}
 802dfb4:	bd38      	pop	{r3, r4, r5, pc}
  HAL_StatusTypeDef status = HAL_ERROR;
 802dfb6:	2001      	movs	r0, #1
 802dfb8:	e7fc      	b.n	802dfb4 <HAL_RTC_Init+0x178>
 802dfba:	bf00      	nop
 802dfbc:	46007800 	.word	0x46007800
 802dfc0:	0803402f 	.word	0x0803402f

0802dfc4 <RTC_ByteToBcd2>:
  * @param  Value Byte to be converted
  * @retval Converted byte
  */
uint8_t RTC_ByteToBcd2(uint8_t Value)
{
  uint32_t bcd_high = 0U;
 802dfc4:	2300      	movs	r3, #0
  uint8_t tmp_value = Value;

  while (tmp_value >= 10U)
 802dfc6:	2809      	cmp	r0, #9
 802dfc8:	d803      	bhi.n	802dfd2 <RTC_ByteToBcd2+0xe>
  {
    bcd_high++;
    tmp_value -= 10U;
  }

  return ((uint8_t)(bcd_high << 4U) | tmp_value);
 802dfca:	ea40 1003 	orr.w	r0, r0, r3, lsl #4
}
 802dfce:	b2c0      	uxtb	r0, r0
 802dfd0:	4770      	bx	lr
    tmp_value -= 10U;
 802dfd2:	380a      	subs	r0, #10
    bcd_high++;
 802dfd4:	3301      	adds	r3, #1
    tmp_value -= 10U;
 802dfd6:	b2c0      	uxtb	r0, r0
 802dfd8:	e7f5      	b.n	802dfc6 <RTC_ByteToBcd2+0x2>

0802dfda <RTC_Bcd2ToByte>:
  */
uint8_t RTC_Bcd2ToByte(uint8_t Value)
{
  uint32_t tmp;

  tmp = (((uint32_t)Value & 0xF0U) >> 4) * 10U;
 802dfda:	0903      	lsrs	r3, r0, #4
 802dfdc:	eb03 0383 	add.w	r3, r3, r3, lsl #2

  return (uint8_t)(tmp + ((uint32_t)Value & 0x0FU));
 802dfe0:	f000 000f 	and.w	r0, r0, #15
 802dfe4:	eb00 0043 	add.w	r0, r0, r3, lsl #1
}
 802dfe8:	b2c0      	uxtb	r0, r0
 802dfea:	4770      	bx	lr

0802dfec <HAL_RTC_SetAlarm_IT>:
{
 802dfec:	e92d 42f0 	stmdb	sp!, {r4, r5, r6, r7, r9, lr}
  __HAL_LOCK(hrtc);
 802dff0:	f890 302c 	ldrb.w	r3, [r0, #44]	; 0x2c
{
 802dff4:	4605      	mov	r5, r0
  __HAL_LOCK(hrtc);
 802dff6:	2b01      	cmp	r3, #1
{
 802dff8:	460c      	mov	r4, r1
 802dffa:	4617      	mov	r7, r2
 802dffc:	f04f 0002 	mov.w	r0, #2
  __HAL_LOCK(hrtc);
 802e000:	f000 80d6 	beq.w	802e1b0 <HAL_RTC_SetAlarm_IT+0x1c4>
 802e004:	2301      	movs	r3, #1
 802e006:	f885 302c 	strb.w	r3, [r5, #44]	; 0x2c
  if (READ_BIT(RTC->ICSR, RTC_ICSR_BIN) == RTC_BINARY_NONE)
 802e00a:	4b96      	ldr	r3, [pc, #600]	; (802e264 <HAL_RTC_SetAlarm_IT+0x278>)
  hrtc->State = HAL_RTC_STATE_BUSY;
 802e00c:	f885 002d 	strb.w	r0, [r5, #45]	; 0x2d
  if (READ_BIT(RTC->ICSR, RTC_ICSR_BIN) == RTC_BINARY_NONE)
 802e010:	68da      	ldr	r2, [r3, #12]
 802e012:	f412 7f40 	tst.w	r2, #768	; 0x300
 802e016:	f040 80cd 	bne.w	802e1b4 <HAL_RTC_SetAlarm_IT+0x1c8>
    assert_param(IS_RTC_FORMAT(Format));
 802e01a:	2f01      	cmp	r7, #1
 802e01c:	d904      	bls.n	802e028 <HAL_RTC_SetAlarm_IT+0x3c>
 802e01e:	f240 6125 	movw	r1, #1573	; 0x625
 802e022:	4891      	ldr	r0, [pc, #580]	; (802e268 <HAL_RTC_SetAlarm_IT+0x27c>)
 802e024:	f7f8 f8ba 	bl	802619c <assert_failed>
    assert_param(IS_RTC_ALARM(sAlarm->Alarm));
 802e028:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 802e02a:	f5b3 7f80 	cmp.w	r3, #256	; 0x100
 802e02e:	d007      	beq.n	802e040 <HAL_RTC_SetAlarm_IT+0x54>
 802e030:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 802e034:	d004      	beq.n	802e040 <HAL_RTC_SetAlarm_IT+0x54>
 802e036:	f240 6126 	movw	r1, #1574	; 0x626
 802e03a:	488b      	ldr	r0, [pc, #556]	; (802e268 <HAL_RTC_SetAlarm_IT+0x27c>)
 802e03c:	f7f8 f8ae 	bl	802619c <assert_failed>
    assert_param(IS_RTC_ALARM_MASK(sAlarm->AlarmMask));
 802e040:	6963      	ldr	r3, [r4, #20]
 802e042:	f013 3f7f 	tst.w	r3, #2139062143	; 0x7f7f7f7f
 802e046:	d004      	beq.n	802e052 <HAL_RTC_SetAlarm_IT+0x66>
 802e048:	f240 6127 	movw	r1, #1575	; 0x627
 802e04c:	4886      	ldr	r0, [pc, #536]	; (802e268 <HAL_RTC_SetAlarm_IT+0x27c>)
 802e04e:	f7f8 f8a5 	bl	802619c <assert_failed>
    assert_param(IS_RTC_ALARM_DATE_WEEKDAY_SEL(sAlarm->AlarmDateWeekDaySel));
 802e052:	6a23      	ldr	r3, [r4, #32]
 802e054:	f033 4380 	bics.w	r3, r3, #1073741824	; 0x40000000
 802e058:	d004      	beq.n	802e064 <HAL_RTC_SetAlarm_IT+0x78>
 802e05a:	f44f 61c5 	mov.w	r1, #1576	; 0x628
 802e05e:	4882      	ldr	r0, [pc, #520]	; (802e268 <HAL_RTC_SetAlarm_IT+0x27c>)
 802e060:	f7f8 f89c 	bl	802619c <assert_failed>
    assert_param(IS_RTC_ALARM_SUB_SECOND_VALUE(sAlarm->AlarmTime.SubSeconds));
 802e064:	6863      	ldr	r3, [r4, #4]
 802e066:	f5b3 4f00 	cmp.w	r3, #32768	; 0x8000
 802e06a:	d304      	bcc.n	802e076 <HAL_RTC_SetAlarm_IT+0x8a>
 802e06c:	f240 6129 	movw	r1, #1577	; 0x629
 802e070:	487d      	ldr	r0, [pc, #500]	; (802e268 <HAL_RTC_SetAlarm_IT+0x27c>)
 802e072:	f7f8 f893 	bl	802619c <assert_failed>
    assert_param(IS_RTC_ALARM_SUB_SECOND_MASK(sAlarm->AlarmSubSecondMask));
 802e076:	69a3      	ldr	r3, [r4, #24]
 802e078:	b14b      	cbz	r3, 802e08e <HAL_RTC_SetAlarm_IT+0xa2>
 802e07a:	f103 437f 	add.w	r3, r3, #4278190080	; 0xff000000
 802e07e:	f1b3 5f78 	cmp.w	r3, #1040187392	; 0x3e000000
 802e082:	d904      	bls.n	802e08e <HAL_RTC_SetAlarm_IT+0xa2>
 802e084:	f240 612a 	movw	r1, #1578	; 0x62a
    assert_param((sAlarm->AlarmSubSecondMask >> RTC_ALRMASSR_MASKSS_Pos) <=
 802e088:	4877      	ldr	r0, [pc, #476]	; (802e268 <HAL_RTC_SetAlarm_IT+0x27c>)
 802e08a:	f7f8 f887 	bl	802619c <assert_failed>
  binary_mode = READ_BIT(RTC->ICSR, RTC_ICSR_BIN);
 802e08e:	4b75      	ldr	r3, [pc, #468]	; (802e264 <HAL_RTC_SetAlarm_IT+0x278>)
 802e090:	68de      	ldr	r6, [r3, #12]
 802e092:	f406 7640 	and.w	r6, r6, #768	; 0x300
  if (binary_mode != RTC_BINARY_ONLY)
 802e096:	f5b6 7f80 	cmp.w	r6, #256	; 0x100
 802e09a:	f000 813f 	beq.w	802e31c <HAL_RTC_SetAlarm_IT+0x330>
        assert_param(IS_RTC_HOUR12(sAlarm->AlarmTime.Hours));
 802e09e:	7820      	ldrb	r0, [r4, #0]
    if (Format == RTC_FORMAT_BIN)
 802e0a0:	2f00      	cmp	r7, #0
 802e0a2:	f040 80e3 	bne.w	802e26c <HAL_RTC_SetAlarm_IT+0x280>
      if (READ_BIT(RTC->CR, RTC_CR_FMT) != 0U)
 802e0a6:	699b      	ldr	r3, [r3, #24]
 802e0a8:	065b      	lsls	r3, r3, #25
 802e0aa:	f140 80ce 	bpl.w	802e24a <HAL_RTC_SetAlarm_IT+0x25e>
        assert_param(IS_RTC_HOUR12(sAlarm->AlarmTime.Hours));
 802e0ae:	3801      	subs	r0, #1
 802e0b0:	280b      	cmp	r0, #11
 802e0b2:	d904      	bls.n	802e0be <HAL_RTC_SetAlarm_IT+0xd2>
 802e0b4:	f240 6147 	movw	r1, #1607	; 0x647
 802e0b8:	486b      	ldr	r0, [pc, #428]	; (802e268 <HAL_RTC_SetAlarm_IT+0x27c>)
 802e0ba:	f7f8 f86f 	bl	802619c <assert_failed>
        assert_param(IS_RTC_HOURFORMAT12(sAlarm->AlarmTime.TimeFormat));
 802e0be:	78e3      	ldrb	r3, [r4, #3]
 802e0c0:	2b01      	cmp	r3, #1
 802e0c2:	d904      	bls.n	802e0ce <HAL_RTC_SetAlarm_IT+0xe2>
 802e0c4:	f44f 61c9 	mov.w	r1, #1608	; 0x648
        assert_param(IS_RTC_HOUR24(sAlarm->AlarmTime.Hours));
 802e0c8:	4867      	ldr	r0, [pc, #412]	; (802e268 <HAL_RTC_SetAlarm_IT+0x27c>)
 802e0ca:	f7f8 f867 	bl	802619c <assert_failed>
      assert_param(IS_RTC_MINUTES(sAlarm->AlarmTime.Minutes));
 802e0ce:	7863      	ldrb	r3, [r4, #1]
 802e0d0:	2b3b      	cmp	r3, #59	; 0x3b
 802e0d2:	d904      	bls.n	802e0de <HAL_RTC_SetAlarm_IT+0xf2>
 802e0d4:	f240 614f 	movw	r1, #1615	; 0x64f
 802e0d8:	4863      	ldr	r0, [pc, #396]	; (802e268 <HAL_RTC_SetAlarm_IT+0x27c>)
 802e0da:	f7f8 f85f 	bl	802619c <assert_failed>
      assert_param(IS_RTC_SECONDS(sAlarm->AlarmTime.Seconds));
 802e0de:	78a3      	ldrb	r3, [r4, #2]
 802e0e0:	2b3b      	cmp	r3, #59	; 0x3b
 802e0e2:	d904      	bls.n	802e0ee <HAL_RTC_SetAlarm_IT+0x102>
 802e0e4:	f44f 61ca 	mov.w	r1, #1616	; 0x650
 802e0e8:	485f      	ldr	r0, [pc, #380]	; (802e268 <HAL_RTC_SetAlarm_IT+0x27c>)
 802e0ea:	f7f8 f857 	bl	802619c <assert_failed>
        assert_param(IS_RTC_ALARM_DATE_WEEKDAY_DATE(sAlarm->AlarmDateWeekDay));
 802e0ee:	f894 3024 	ldrb.w	r3, [r4, #36]	; 0x24
      if (sAlarm->AlarmDateWeekDaySel == RTC_ALARMDATEWEEKDAYSEL_DATE)
 802e0f2:	6a22      	ldr	r2, [r4, #32]
        assert_param(IS_RTC_ALARM_DATE_WEEKDAY_DATE(sAlarm->AlarmDateWeekDay));
 802e0f4:	3b01      	subs	r3, #1
 802e0f6:	b2db      	uxtb	r3, r3
      if (sAlarm->AlarmDateWeekDaySel == RTC_ALARMDATEWEEKDAYSEL_DATE)
 802e0f8:	2a00      	cmp	r2, #0
 802e0fa:	f040 80ad 	bne.w	802e258 <HAL_RTC_SetAlarm_IT+0x26c>
        assert_param(IS_RTC_ALARM_DATE_WEEKDAY_DATE(sAlarm->AlarmDateWeekDay));
 802e0fe:	2b1e      	cmp	r3, #30
 802e100:	d904      	bls.n	802e10c <HAL_RTC_SetAlarm_IT+0x120>
 802e102:	f240 6154 	movw	r1, #1620	; 0x654
        assert_param(IS_RTC_ALARM_DATE_WEEKDAY_WEEKDAY(sAlarm->AlarmDateWeekDay));
 802e106:	4858      	ldr	r0, [pc, #352]	; (802e268 <HAL_RTC_SetAlarm_IT+0x27c>)
 802e108:	f7f8 f848 	bl	802619c <assert_failed>
      tmpreg = (((uint32_t)RTC_ByteToBcd2(sAlarm->AlarmTime.Hours) << RTC_ALRMAR_HU_Pos) | \
 802e10c:	7820      	ldrb	r0, [r4, #0]
 802e10e:	f7ff ff59 	bl	802dfc4 <RTC_ByteToBcd2>
 802e112:	4681      	mov	r9, r0
                ((uint32_t)RTC_ByteToBcd2(sAlarm->AlarmTime.Minutes) << RTC_ALRMAR_MNU_Pos) | \
 802e114:	7860      	ldrb	r0, [r4, #1]
 802e116:	f7ff ff55 	bl	802dfc4 <RTC_ByteToBcd2>
 802e11a:	4602      	mov	r2, r0
                ((uint32_t)RTC_ByteToBcd2(sAlarm->AlarmTime.Seconds) << RTC_ALRMAR_SU_Pos) | \
 802e11c:	78a0      	ldrb	r0, [r4, #2]
 802e11e:	f7ff ff51 	bl	802dfc4 <RTC_ByteToBcd2>
 802e122:	4601      	mov	r1, r0
                ((uint32_t)RTC_ByteToBcd2(sAlarm->AlarmDateWeekDay) << RTC_ALRMAR_DU_Pos) | \
 802e124:	f894 0024 	ldrb.w	r0, [r4, #36]	; 0x24
 802e128:	f7ff ff4c 	bl	802dfc4 <RTC_ByteToBcd2>
      tmpreg = (((uint32_t)RTC_ByteToBcd2(sAlarm->AlarmTime.Hours) << RTC_ALRMAR_HU_Pos) | \
 802e12c:	6a23      	ldr	r3, [r4, #32]
 802e12e:	6967      	ldr	r7, [r4, #20]
 802e130:	ea43 0c07 	orr.w	ip, r3, r7
                ((uint32_t)(sAlarm->AlarmTime.TimeFormat) << RTC_ALRMAR_PM_Pos) | \
 802e134:	78e7      	ldrb	r7, [r4, #3]
      tmpreg = (((uint32_t)RTC_ByteToBcd2(sAlarm->AlarmTime.Hours) << RTC_ALRMAR_HU_Pos) | \
 802e136:	ea4c 5c87 	orr.w	ip, ip, r7, lsl #22
 802e13a:	ea4c 0701 	orr.w	r7, ip, r1
 802e13e:	ea47 4109 	orr.w	r1, r7, r9, lsl #16
 802e142:	ea41 2202 	orr.w	r2, r1, r2, lsl #8
 802e146:	ea42 6300 	orr.w	r3, r2, r0, lsl #24
  __HAL_RTC_WRITEPROTECTION_DISABLE(hrtc);
 802e14a:	21ca      	movs	r1, #202	; 0xca
 802e14c:	4a45      	ldr	r2, [pc, #276]	; (802e264 <HAL_RTC_SetAlarm_IT+0x278>)
 802e14e:	6251      	str	r1, [r2, #36]	; 0x24
 802e150:	2153      	movs	r1, #83	; 0x53
 802e152:	6251      	str	r1, [r2, #36]	; 0x24
  if (sAlarm->Alarm == RTC_ALARM_A)
 802e154:	6ae0      	ldr	r0, [r4, #44]	; 0x2c
      RTC->ALRMASSR = sAlarm->AlarmSubSecondMask | sAlarm->BinaryAutoClr;
 802e156:	69a1      	ldr	r1, [r4, #24]
  if (sAlarm->Alarm == RTC_ALARM_A)
 802e158:	f5b0 7f80 	cmp.w	r0, #256	; 0x100
    CLEAR_BIT(RTC->CR, RTC_CR_ALRAE | RTC_CR_ALRAIE);
 802e15c:	6990      	ldr	r0, [r2, #24]
  if (sAlarm->Alarm == RTC_ALARM_A)
 802e15e:	f040 80df 	bne.w	802e320 <HAL_RTC_SetAlarm_IT+0x334>
    CLEAR_BIT(RTC->CR, RTC_CR_ALRAE | RTC_CR_ALRAIE);
 802e162:	f420 5088 	bic.w	r0, r0, #4352	; 0x1100
 802e166:	6190      	str	r0, [r2, #24]
    WRITE_REG(RTC->SCR, RTC_SCR_CALRAF);
 802e168:	2001      	movs	r0, #1
    if (binary_mode == RTC_BINARY_ONLY)
 802e16a:	f5b6 7f80 	cmp.w	r6, #256	; 0x100
    WRITE_REG(RTC->SCR, RTC_SCR_CALRAF);
 802e16e:	65d0      	str	r0, [r2, #92]	; 0x5c
      RTC->ALRMASSR = sAlarm->AlarmSubSecondMask | sAlarm->BinaryAutoClr;
 802e170:	bf09      	itett	eq
 802e172:	69e3      	ldreq	r3, [r4, #28]
      WRITE_REG(RTC->ALRMAR, tmpreg);
 802e174:	6413      	strne	r3, [r2, #64]	; 0x40
      RTC->ALRMASSR = sAlarm->AlarmSubSecondMask | sAlarm->BinaryAutoClr;
 802e176:	430b      	orreq	r3, r1
 802e178:	6453      	streq	r3, [r2, #68]	; 0x44
      WRITE_REG(RTC->ALRMASSR, sAlarm->AlarmSubSecondMask);
 802e17a:	bf18      	it	ne
 802e17c:	6451      	strne	r1, [r2, #68]	; 0x44
    WRITE_REG(RTC->ALRABINR, sAlarm->AlarmTime.SubSeconds);
 802e17e:	4b39      	ldr	r3, [pc, #228]	; (802e264 <HAL_RTC_SetAlarm_IT+0x278>)
 802e180:	6862      	ldr	r2, [r4, #4]
 802e182:	671a      	str	r2, [r3, #112]	; 0x70
    if (sAlarm->FlagAutoClr == ALARM_FLAG_AUTOCLR_ENABLE)
 802e184:	6aa2      	ldr	r2, [r4, #40]	; 0x28
 802e186:	2a01      	cmp	r2, #1
      SET_BIT(RTC->CR, RTC_CR_ALRAFCLR);
 802e188:	699a      	ldr	r2, [r3, #24]
 802e18a:	bf0c      	ite	eq
 802e18c:	f042 6200 	orreq.w	r2, r2, #134217728	; 0x8000000
      CLEAR_BIT(RTC->CR, RTC_CR_ALRAFCLR);
 802e190:	f022 6200 	bicne.w	r2, r2, #134217728	; 0x8000000
 802e194:	619a      	str	r2, [r3, #24]
    SET_BIT(RTC->CR, RTC_CR_ALRAE | RTC_CR_ALRAIE);
 802e196:	699a      	ldr	r2, [r3, #24]
 802e198:	f442 5288 	orr.w	r2, r2, #4352	; 0x1100
    SET_BIT(RTC->CR, RTC_CR_ALRBE | RTC_CR_ALRBIE);
 802e19c:	619a      	str	r2, [r3, #24]
  __HAL_RTC_WRITEPROTECTION_ENABLE(hrtc);
 802e19e:	22ff      	movs	r2, #255	; 0xff
 802e1a0:	4b30      	ldr	r3, [pc, #192]	; (802e264 <HAL_RTC_SetAlarm_IT+0x278>)
  __HAL_UNLOCK(hrtc);
 802e1a2:	2000      	movs	r0, #0
  __HAL_RTC_WRITEPROTECTION_ENABLE(hrtc);
 802e1a4:	625a      	str	r2, [r3, #36]	; 0x24
  hrtc->State = HAL_RTC_STATE_READY;
 802e1a6:	2301      	movs	r3, #1
  __HAL_UNLOCK(hrtc);
 802e1a8:	f885 002c 	strb.w	r0, [r5, #44]	; 0x2c
  hrtc->State = HAL_RTC_STATE_READY;
 802e1ac:	f885 302d 	strb.w	r3, [r5, #45]	; 0x2d
}
 802e1b0:	e8bd 82f0 	ldmia.w	sp!, {r4, r5, r6, r7, r9, pc}
  else if (READ_BIT(RTC->ICSR, RTC_ICSR_BIN) == RTC_BINARY_ONLY)
 802e1b4:	68db      	ldr	r3, [r3, #12]
 802e1b6:	f403 7340 	and.w	r3, r3, #768	; 0x300
 802e1ba:	f5b3 7f80 	cmp.w	r3, #256	; 0x100
 802e1be:	d113      	bne.n	802e1e8 <HAL_RTC_SetAlarm_IT+0x1fc>
    assert_param(IS_RTC_ALARM_SUB_SECOND_BINARY_MASK(sAlarm->AlarmSubSecondMask));
 802e1c0:	698b      	ldr	r3, [r1, #24]
 802e1c2:	b14b      	cbz	r3, 802e1d8 <HAL_RTC_SetAlarm_IT+0x1ec>
 802e1c4:	f103 437f 	add.w	r3, r3, #4278190080	; 0xff000000
 802e1c8:	f1b3 5f78 	cmp.w	r3, #1040187392	; 0x3e000000
 802e1cc:	d904      	bls.n	802e1d8 <HAL_RTC_SetAlarm_IT+0x1ec>
 802e1ce:	f240 612e 	movw	r1, #1582	; 0x62e
 802e1d2:	4825      	ldr	r0, [pc, #148]	; (802e268 <HAL_RTC_SetAlarm_IT+0x27c>)
 802e1d4:	f7f7 ffe2 	bl	802619c <assert_failed>
    assert_param(IS_RTC_ALARMSUBSECONDBIN_AUTOCLR(sAlarm->BinaryAutoClr));
 802e1d8:	69e3      	ldr	r3, [r4, #28]
 802e1da:	f033 4300 	bics.w	r3, r3, #2147483648	; 0x80000000
 802e1de:	f43f af56 	beq.w	802e08e <HAL_RTC_SetAlarm_IT+0xa2>
 802e1e2:	f240 612f 	movw	r1, #1583	; 0x62f
 802e1e6:	e74f      	b.n	802e088 <HAL_RTC_SetAlarm_IT+0x9c>
    assert_param(IS_RTC_FORMAT(Format));
 802e1e8:	2f01      	cmp	r7, #1
 802e1ea:	d904      	bls.n	802e1f6 <HAL_RTC_SetAlarm_IT+0x20a>
 802e1ec:	f240 6133 	movw	r1, #1587	; 0x633
 802e1f0:	481d      	ldr	r0, [pc, #116]	; (802e268 <HAL_RTC_SetAlarm_IT+0x27c>)
 802e1f2:	f7f7 ffd3 	bl	802619c <assert_failed>
    assert_param(IS_RTC_ALARM(sAlarm->Alarm));
 802e1f6:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 802e1f8:	f5b3 7f80 	cmp.w	r3, #256	; 0x100
 802e1fc:	d007      	beq.n	802e20e <HAL_RTC_SetAlarm_IT+0x222>
 802e1fe:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 802e202:	d004      	beq.n	802e20e <HAL_RTC_SetAlarm_IT+0x222>
 802e204:	f240 6134 	movw	r1, #1588	; 0x634
 802e208:	4817      	ldr	r0, [pc, #92]	; (802e268 <HAL_RTC_SetAlarm_IT+0x27c>)
 802e20a:	f7f7 ffc7 	bl	802619c <assert_failed>
    assert_param(IS_RTC_ALARM_MASK(sAlarm->AlarmMask));
 802e20e:	6963      	ldr	r3, [r4, #20]
 802e210:	f013 3f7f 	tst.w	r3, #2139062143	; 0x7f7f7f7f
 802e214:	d004      	beq.n	802e220 <HAL_RTC_SetAlarm_IT+0x234>
 802e216:	f240 6135 	movw	r1, #1589	; 0x635
 802e21a:	4813      	ldr	r0, [pc, #76]	; (802e268 <HAL_RTC_SetAlarm_IT+0x27c>)
 802e21c:	f7f7 ffbe 	bl	802619c <assert_failed>
    assert_param(IS_RTC_ALARM_DATE_WEEKDAY_SEL(sAlarm->AlarmDateWeekDaySel));
 802e220:	6a23      	ldr	r3, [r4, #32]
 802e222:	f033 4380 	bics.w	r3, r3, #1073741824	; 0x40000000
 802e226:	d004      	beq.n	802e232 <HAL_RTC_SetAlarm_IT+0x246>
 802e228:	f240 6136 	movw	r1, #1590	; 0x636
 802e22c:	480e      	ldr	r0, [pc, #56]	; (802e268 <HAL_RTC_SetAlarm_IT+0x27c>)
 802e22e:	f7f7 ffb5 	bl	802619c <assert_failed>
    assert_param((sAlarm->AlarmSubSecondMask >> RTC_ALRMASSR_MASKSS_Pos) <=
 802e232:	4b0c      	ldr	r3, [pc, #48]	; (802e264 <HAL_RTC_SetAlarm_IT+0x278>)
 802e234:	7ee2      	ldrb	r2, [r4, #27]
 802e236:	68db      	ldr	r3, [r3, #12]
 802e238:	f3c3 2382 	ubfx	r3, r3, #10, #3
 802e23c:	3308      	adds	r3, #8
 802e23e:	429a      	cmp	r2, r3
 802e240:	f67f af25 	bls.w	802e08e <HAL_RTC_SetAlarm_IT+0xa2>
 802e244:	f240 6139 	movw	r1, #1593	; 0x639
 802e248:	e71e      	b.n	802e088 <HAL_RTC_SetAlarm_IT+0x9c>
        assert_param(IS_RTC_HOUR24(sAlarm->AlarmTime.Hours));
 802e24a:	2817      	cmp	r0, #23
        sAlarm->AlarmTime.TimeFormat = 0x00U;
 802e24c:	70e7      	strb	r7, [r4, #3]
        assert_param(IS_RTC_HOUR24(sAlarm->AlarmTime.Hours));
 802e24e:	f67f af3e 	bls.w	802e0ce <HAL_RTC_SetAlarm_IT+0xe2>
 802e252:	f240 614d 	movw	r1, #1613	; 0x64d
 802e256:	e737      	b.n	802e0c8 <HAL_RTC_SetAlarm_IT+0xdc>
        assert_param(IS_RTC_ALARM_DATE_WEEKDAY_WEEKDAY(sAlarm->AlarmDateWeekDay));
 802e258:	2b06      	cmp	r3, #6
 802e25a:	f67f af57 	bls.w	802e10c <HAL_RTC_SetAlarm_IT+0x120>
 802e25e:	f44f 61cb 	mov.w	r1, #1624	; 0x658
 802e262:	e750      	b.n	802e106 <HAL_RTC_SetAlarm_IT+0x11a>
 802e264:	46007800 	.word	0x46007800
 802e268:	0803402f 	.word	0x0803402f
      if (READ_BIT(RTC->CR, RTC_CR_FMT) != 0U)
 802e26c:	699a      	ldr	r2, [r3, #24]
        assert_param(IS_RTC_HOUR12(RTC_Bcd2ToByte(sAlarm->AlarmTime.Hours)));
 802e26e:	f7ff feb4 	bl	802dfda <RTC_Bcd2ToByte>
      if (READ_BIT(RTC->CR, RTC_CR_FMT) != 0U)
 802e272:	f012 0240 	ands.w	r2, r2, #64	; 0x40
 802e276:	d046      	beq.n	802e306 <HAL_RTC_SetAlarm_IT+0x31a>
        assert_param(IS_RTC_HOUR12(RTC_Bcd2ToByte(sAlarm->AlarmTime.Hours)));
 802e278:	3801      	subs	r0, #1
 802e27a:	b2c0      	uxtb	r0, r0
 802e27c:	280b      	cmp	r0, #11
 802e27e:	d904      	bls.n	802e28a <HAL_RTC_SetAlarm_IT+0x29e>
 802e280:	f240 6166 	movw	r1, #1638	; 0x666
 802e284:	4835      	ldr	r0, [pc, #212]	; (802e35c <HAL_RTC_SetAlarm_IT+0x370>)
 802e286:	f7f7 ff89 	bl	802619c <assert_failed>
        assert_param(IS_RTC_HOURFORMAT12(sAlarm->AlarmTime.TimeFormat));
 802e28a:	78e3      	ldrb	r3, [r4, #3]
 802e28c:	2b01      	cmp	r3, #1
 802e28e:	d904      	bls.n	802e29a <HAL_RTC_SetAlarm_IT+0x2ae>
 802e290:	f240 6167 	movw	r1, #1639	; 0x667
        assert_param(IS_RTC_HOUR24(RTC_Bcd2ToByte(sAlarm->AlarmTime.Hours)));
 802e294:	4831      	ldr	r0, [pc, #196]	; (802e35c <HAL_RTC_SetAlarm_IT+0x370>)
 802e296:	f7f7 ff81 	bl	802619c <assert_failed>
      assert_param(IS_RTC_MINUTES(RTC_Bcd2ToByte(sAlarm->AlarmTime.Minutes)));
 802e29a:	7860      	ldrb	r0, [r4, #1]
 802e29c:	f7ff fe9d 	bl	802dfda <RTC_Bcd2ToByte>
 802e2a0:	283b      	cmp	r0, #59	; 0x3b
 802e2a2:	d904      	bls.n	802e2ae <HAL_RTC_SetAlarm_IT+0x2c2>
 802e2a4:	f240 616f 	movw	r1, #1647	; 0x66f
 802e2a8:	482c      	ldr	r0, [pc, #176]	; (802e35c <HAL_RTC_SetAlarm_IT+0x370>)
 802e2aa:	f7f7 ff77 	bl	802619c <assert_failed>
      assert_param(IS_RTC_SECONDS(RTC_Bcd2ToByte(sAlarm->AlarmTime.Seconds)));
 802e2ae:	78a0      	ldrb	r0, [r4, #2]
 802e2b0:	f7ff fe93 	bl	802dfda <RTC_Bcd2ToByte>
 802e2b4:	283b      	cmp	r0, #59	; 0x3b
 802e2b6:	d904      	bls.n	802e2c2 <HAL_RTC_SetAlarm_IT+0x2d6>
 802e2b8:	f44f 61ce 	mov.w	r1, #1648	; 0x670
 802e2bc:	4827      	ldr	r0, [pc, #156]	; (802e35c <HAL_RTC_SetAlarm_IT+0x370>)
 802e2be:	f7f7 ff6d 	bl	802619c <assert_failed>
        assert_param(IS_RTC_ALARM_DATE_WEEKDAY_DATE(RTC_Bcd2ToByte(sAlarm->AlarmDateWeekDay)));
 802e2c2:	f894 0024 	ldrb.w	r0, [r4, #36]	; 0x24
 802e2c6:	f7ff fe88 	bl	802dfda <RTC_Bcd2ToByte>
      if (sAlarm->AlarmDateWeekDaySel == RTC_ALARMDATEWEEKDAYSEL_DATE)
 802e2ca:	6a23      	ldr	r3, [r4, #32]
        assert_param(IS_RTC_ALARM_DATE_WEEKDAY_DATE(RTC_Bcd2ToByte(sAlarm->AlarmDateWeekDay)));
 802e2cc:	3801      	subs	r0, #1
 802e2ce:	b2c0      	uxtb	r0, r0
      if (sAlarm->AlarmDateWeekDaySel == RTC_ALARMDATEWEEKDAYSEL_DATE)
 802e2d0:	b9fb      	cbnz	r3, 802e312 <HAL_RTC_SetAlarm_IT+0x326>
        assert_param(IS_RTC_ALARM_DATE_WEEKDAY_DATE(RTC_Bcd2ToByte(sAlarm->AlarmDateWeekDay)));
 802e2d2:	281e      	cmp	r0, #30
 802e2d4:	d904      	bls.n	802e2e0 <HAL_RTC_SetAlarm_IT+0x2f4>
 802e2d6:	f240 6175 	movw	r1, #1653	; 0x675
        assert_param(IS_RTC_ALARM_DATE_WEEKDAY_WEEKDAY(RTC_Bcd2ToByte(sAlarm->AlarmDateWeekDay)));
 802e2da:	4820      	ldr	r0, [pc, #128]	; (802e35c <HAL_RTC_SetAlarm_IT+0x370>)
 802e2dc:	f7f7 ff5e 	bl	802619c <assert_failed>
      tmpreg = (((uint32_t)(sAlarm->AlarmTime.Hours) << RTC_ALRMAR_HU_Pos) | \
 802e2e0:	6962      	ldr	r2, [r4, #20]
 802e2e2:	6a23      	ldr	r3, [r4, #32]
                ((uint32_t)(sAlarm->AlarmTime.Minutes) << RTC_ALRMAR_MNU_Pos) | \
 802e2e4:	7860      	ldrb	r0, [r4, #1]
      tmpreg = (((uint32_t)(sAlarm->AlarmTime.Hours) << RTC_ALRMAR_HU_Pos) | \
 802e2e6:	4313      	orrs	r3, r2
                ((uint32_t)(sAlarm->AlarmTime.Seconds) << RTC_ALRMAR_SU_Pos) | \
 802e2e8:	78a2      	ldrb	r2, [r4, #2]
      tmpreg = (((uint32_t)(sAlarm->AlarmTime.Hours) << RTC_ALRMAR_HU_Pos) | \
 802e2ea:	4313      	orrs	r3, r2
 802e2ec:	7822      	ldrb	r2, [r4, #0]
 802e2ee:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 802e2f2:	ea43 2300 	orr.w	r3, r3, r0, lsl #8
                ((uint32_t)(sAlarm->AlarmTime.TimeFormat) << RTC_ALRMAR_PM_Pos) | \
 802e2f6:	78e0      	ldrb	r0, [r4, #3]
      tmpreg = (((uint32_t)(sAlarm->AlarmTime.Hours) << RTC_ALRMAR_HU_Pos) | \
 802e2f8:	ea43 5380 	orr.w	r3, r3, r0, lsl #22
                ((uint32_t)(sAlarm->AlarmDateWeekDay) << RTC_ALRMAR_DU_Pos) | \
 802e2fc:	f894 0024 	ldrb.w	r0, [r4, #36]	; 0x24
      tmpreg = (((uint32_t)(sAlarm->AlarmTime.Hours) << RTC_ALRMAR_HU_Pos) | \
 802e300:	ea43 6300 	orr.w	r3, r3, r0, lsl #24
 802e304:	e721      	b.n	802e14a <HAL_RTC_SetAlarm_IT+0x15e>
        assert_param(IS_RTC_HOUR24(RTC_Bcd2ToByte(sAlarm->AlarmTime.Hours)));
 802e306:	2817      	cmp	r0, #23
        sAlarm->AlarmTime.TimeFormat = 0x00U;
 802e308:	70e2      	strb	r2, [r4, #3]
        assert_param(IS_RTC_HOUR24(RTC_Bcd2ToByte(sAlarm->AlarmTime.Hours)));
 802e30a:	d9c6      	bls.n	802e29a <HAL_RTC_SetAlarm_IT+0x2ae>
 802e30c:	f240 616c 	movw	r1, #1644	; 0x66c
 802e310:	e7c0      	b.n	802e294 <HAL_RTC_SetAlarm_IT+0x2a8>
        assert_param(IS_RTC_ALARM_DATE_WEEKDAY_WEEKDAY(RTC_Bcd2ToByte(sAlarm->AlarmDateWeekDay)));
 802e312:	2806      	cmp	r0, #6
 802e314:	d9e4      	bls.n	802e2e0 <HAL_RTC_SetAlarm_IT+0x2f4>
 802e316:	f240 6179 	movw	r1, #1657	; 0x679
 802e31a:	e7de      	b.n	802e2da <HAL_RTC_SetAlarm_IT+0x2ee>
  uint32_t tmpreg = 0;
 802e31c:	2300      	movs	r3, #0
 802e31e:	e714      	b.n	802e14a <HAL_RTC_SetAlarm_IT+0x15e>
    CLEAR_BIT(RTC->CR, RTC_CR_ALRBE | RTC_CR_ALRBIE);
 802e320:	f420 5008 	bic.w	r0, r0, #8704	; 0x2200
 802e324:	6190      	str	r0, [r2, #24]
    WRITE_REG(RTC->SCR, RTC_SCR_CALRBF);
 802e326:	2002      	movs	r0, #2
    if (binary_mode == RTC_BINARY_ONLY)
 802e328:	f5b6 7f80 	cmp.w	r6, #256	; 0x100
    WRITE_REG(RTC->SCR, RTC_SCR_CALRBF);
 802e32c:	65d0      	str	r0, [r2, #92]	; 0x5c
      WRITE_REG(RTC->ALRMBSSR, sAlarm->AlarmSubSecondMask | sAlarm->BinaryAutoClr);
 802e32e:	bf09      	itett	eq
 802e330:	69e3      	ldreq	r3, [r4, #28]
      WRITE_REG(RTC->ALRMBR, tmpreg);
 802e332:	6493      	strne	r3, [r2, #72]	; 0x48
      WRITE_REG(RTC->ALRMBSSR, sAlarm->AlarmSubSecondMask | sAlarm->BinaryAutoClr);
 802e334:	430b      	orreq	r3, r1
 802e336:	64d3      	streq	r3, [r2, #76]	; 0x4c
      WRITE_REG(RTC->ALRMBSSR, sAlarm->AlarmSubSecondMask);
 802e338:	bf18      	it	ne
 802e33a:	64d1      	strne	r1, [r2, #76]	; 0x4c
    WRITE_REG(RTC->ALRBBINR, sAlarm->AlarmTime.SubSeconds);
 802e33c:	4b08      	ldr	r3, [pc, #32]	; (802e360 <HAL_RTC_SetAlarm_IT+0x374>)
 802e33e:	6862      	ldr	r2, [r4, #4]
 802e340:	675a      	str	r2, [r3, #116]	; 0x74
    if (sAlarm->FlagAutoClr == ALARM_FLAG_AUTOCLR_ENABLE)
 802e342:	6aa2      	ldr	r2, [r4, #40]	; 0x28
 802e344:	2a01      	cmp	r2, #1
      SET_BIT(RTC->CR, RTC_CR_ALRBFCLR);
 802e346:	699a      	ldr	r2, [r3, #24]
 802e348:	bf0c      	ite	eq
 802e34a:	f042 5280 	orreq.w	r2, r2, #268435456	; 0x10000000
      CLEAR_BIT(RTC->CR, RTC_CR_ALRBFCLR);
 802e34e:	f022 5280 	bicne.w	r2, r2, #268435456	; 0x10000000
 802e352:	619a      	str	r2, [r3, #24]
    SET_BIT(RTC->CR, RTC_CR_ALRBE | RTC_CR_ALRBIE);
 802e354:	699a      	ldr	r2, [r3, #24]
 802e356:	f442 5208 	orr.w	r2, r2, #8704	; 0x2200
 802e35a:	e71f      	b.n	802e19c <HAL_RTC_SetAlarm_IT+0x1b0>
 802e35c:	0803402f 	.word	0x0803402f
 802e360:	46007800 	.word	0x46007800

0802e364 <HAL_RTCEx_EnableBypassShadow>:
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_RTCEx_EnableBypassShadow(RTC_HandleTypeDef *hrtc)
{
  /* Process Locked */
  __HAL_LOCK(hrtc);
 802e364:	f890 302c 	ldrb.w	r3, [r0, #44]	; 0x2c
 802e368:	2b01      	cmp	r3, #1
 802e36a:	f04f 0302 	mov.w	r3, #2
 802e36e:	d012      	beq.n	802e396 <HAL_RTCEx_EnableBypassShadow+0x32>

  /* Change RTC state */
  hrtc->State = HAL_RTC_STATE_BUSY;

  /* Disable the write protection for RTC registers */
  __HAL_RTC_WRITEPROTECTION_DISABLE(hrtc);
 802e370:	22ca      	movs	r2, #202	; 0xca
  hrtc->State = HAL_RTC_STATE_BUSY;
 802e372:	f880 302d 	strb.w	r3, [r0, #45]	; 0x2d
  __HAL_RTC_WRITEPROTECTION_DISABLE(hrtc);
 802e376:	4b09      	ldr	r3, [pc, #36]	; (802e39c <HAL_RTCEx_EnableBypassShadow+0x38>)
 802e378:	625a      	str	r2, [r3, #36]	; 0x24
 802e37a:	2253      	movs	r2, #83	; 0x53
 802e37c:	625a      	str	r2, [r3, #36]	; 0x24

  /* Set the BYPSHAD bit */
  SET_BIT(RTC->CR, RTC_CR_BYPSHAD);
 802e37e:	699a      	ldr	r2, [r3, #24]
 802e380:	f042 0220 	orr.w	r2, r2, #32
 802e384:	619a      	str	r2, [r3, #24]

  /* Enable the write protection for RTC registers */
  __HAL_RTC_WRITEPROTECTION_ENABLE(hrtc);
 802e386:	22ff      	movs	r2, #255	; 0xff
 802e388:	625a      	str	r2, [r3, #36]	; 0x24

  /* Change RTC state */
  hrtc->State = HAL_RTC_STATE_READY;
 802e38a:	2301      	movs	r3, #1
 802e38c:	f880 302d 	strb.w	r3, [r0, #45]	; 0x2d

  /* Process Unlocked */
  __HAL_UNLOCK(hrtc);
 802e390:	2300      	movs	r3, #0
 802e392:	f880 302c 	strb.w	r3, [r0, #44]	; 0x2c
  __HAL_LOCK(hrtc);
 802e396:	4618      	mov	r0, r3

  return HAL_OK;
}
 802e398:	4770      	bx	lr
 802e39a:	bf00      	nop
 802e39c:	46007800 	.word	0x46007800

0802e3a0 <HAL_RTCEx_SetSSRU_IT>:
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_RTCEx_SetSSRU_IT(RTC_HandleTypeDef *hrtc)
{
  /* Process Locked */
  __HAL_LOCK(hrtc);
 802e3a0:	f890 302c 	ldrb.w	r3, [r0, #44]	; 0x2c
 802e3a4:	2b01      	cmp	r3, #1
 802e3a6:	f04f 0302 	mov.w	r3, #2
 802e3aa:	d012      	beq.n	802e3d2 <HAL_RTCEx_SetSSRU_IT+0x32>

  /* Change RTC state */
  hrtc->State = HAL_RTC_STATE_BUSY;

  /* Disable the write protection for RTC registers */
  __HAL_RTC_WRITEPROTECTION_DISABLE(hrtc);
 802e3ac:	22ca      	movs	r2, #202	; 0xca
  hrtc->State = HAL_RTC_STATE_BUSY;
 802e3ae:	f880 302d 	strb.w	r3, [r0, #45]	; 0x2d
  __HAL_RTC_WRITEPROTECTION_DISABLE(hrtc);
 802e3b2:	4b09      	ldr	r3, [pc, #36]	; (802e3d8 <HAL_RTCEx_SetSSRU_IT+0x38>)
 802e3b4:	625a      	str	r2, [r3, #36]	; 0x24
 802e3b6:	2253      	movs	r2, #83	; 0x53
 802e3b8:	625a      	str	r2, [r3, #36]	; 0x24

  /* Enable IT SSRU */
  __HAL_RTC_SSRU_ENABLE_IT(hrtc, RTC_IT_SSRU);
 802e3ba:	699a      	ldr	r2, [r3, #24]
 802e3bc:	f042 0280 	orr.w	r2, r2, #128	; 0x80
 802e3c0:	619a      	str	r2, [r3, #24]

  /* Enable the write protection for RTC registers */
  __HAL_RTC_WRITEPROTECTION_ENABLE(hrtc);
 802e3c2:	22ff      	movs	r2, #255	; 0xff
 802e3c4:	625a      	str	r2, [r3, #36]	; 0x24

  /* Change RTC state */
  hrtc->State = HAL_RTC_STATE_READY;
 802e3c6:	2301      	movs	r3, #1
 802e3c8:	f880 302d 	strb.w	r3, [r0, #45]	; 0x2d

  /* Process Unlocked */
  __HAL_UNLOCK(hrtc);
 802e3cc:	2300      	movs	r3, #0
 802e3ce:	f880 302c 	strb.w	r3, [r0, #44]	; 0x2c
  __HAL_LOCK(hrtc);
 802e3d2:	4618      	mov	r0, r3

  return HAL_OK;
}
 802e3d4:	4770      	bx	lr
 802e3d6:	bf00      	nop
 802e3d8:	46007800 	.word	0x46007800

0802e3dc <HAL_RTCEx_AlarmBEventCallback>:
 802e3dc:	4770      	bx	lr
	...

0802e3e0 <HAL_RTCEx_BKUPWrite>:

  /* Prevent unused argument(s) compilation warning */
  UNUSED(hrtc);

  /* Check the parameters */
  assert_param(IS_RTC_BKP(BackupRegister));
 802e3e0:	291f      	cmp	r1, #31
{
 802e3e2:	b538      	push	{r3, r4, r5, lr}
 802e3e4:	460c      	mov	r4, r1
 802e3e6:	4615      	mov	r5, r2
  assert_param(IS_RTC_BKP(BackupRegister));
 802e3e8:	d904      	bls.n	802e3f4 <HAL_RTCEx_BKUPWrite+0x14>
 802e3ea:	f640 2199 	movw	r1, #2713	; 0xa99
 802e3ee:	4805      	ldr	r0, [pc, #20]	; (802e404 <HAL_RTCEx_BKUPWrite+0x24>)
 802e3f0:	f7f7 fed4 	bl	802619c <assert_failed>

  /* Determine address of the specified Backup register */
  tmp = (uint32_t)(&(TAMP->BKP0R));
  tmp += (BackupRegister * 4U);
 802e3f4:	00a1      	lsls	r1, r4, #2
 802e3f6:	f101 418c 	add.w	r1, r1, #1174405120	; 0x46000000
 802e3fa:	f501 41fa 	add.w	r1, r1, #32000	; 0x7d00

  /* Write data in the specified register Backup register */
  *(__IO uint32_t *)tmp = (uint32_t)Data;
 802e3fe:	600d      	str	r5, [r1, #0]
}
 802e400:	bd38      	pop	{r3, r4, r5, pc}
 802e402:	bf00      	nop
 802e404:	0803409d 	.word	0x0803409d

0802e408 <HAL_RTCEx_PrivilegeModeSet>:
                                             const RTC_PrivilegeStateTypeDef *privilegeState)
{
  /* Prevent unused argument(s) compilation warning */
  UNUSED(hrtc);

  assert_param(IS_RTC_PRIVILEGE_FULL(privilegeState->rtcPrivilegeFull));
 802e408:	680b      	ldr	r3, [r1, #0]
{
 802e40a:	b510      	push	{r4, lr}
  assert_param(IS_RTC_PRIVILEGE_FULL(privilegeState->rtcPrivilegeFull));
 802e40c:	f433 4300 	bics.w	r3, r3, #32768	; 0x8000
{
 802e410:	460c      	mov	r4, r1
  assert_param(IS_RTC_PRIVILEGE_FULL(privilegeState->rtcPrivilegeFull));
 802e412:	d004      	beq.n	802e41e <HAL_RTCEx_PrivilegeModeSet+0x16>
 802e414:	f640 317c 	movw	r1, #2940	; 0xb7c
 802e418:	4827      	ldr	r0, [pc, #156]	; (802e4b8 <HAL_RTCEx_PrivilegeModeSet+0xb0>)
 802e41a:	f7f7 febf 	bl	802619c <assert_failed>
  assert_param(IS_RTC_PRIVILEGE_FEATURES(privilegeState->rtcPrivilegeFeatures));
 802e41e:	6863      	ldr	r3, [r4, #4]
 802e420:	f423 43c0 	bic.w	r3, r3, #24576	; 0x6000
 802e424:	f023 030f 	bic.w	r3, r3, #15
 802e428:	b123      	cbz	r3, 802e434 <HAL_RTCEx_PrivilegeModeSet+0x2c>
 802e42a:	f640 317d 	movw	r1, #2941	; 0xb7d
 802e42e:	4822      	ldr	r0, [pc, #136]	; (802e4b8 <HAL_RTCEx_PrivilegeModeSet+0xb0>)
 802e430:	f7f7 feb4 	bl	802619c <assert_failed>
  assert_param(IS_TAMP_PRIVILEGE_FULL(privilegeState->tampPrivilegeFull));
 802e434:	68a3      	ldr	r3, [r4, #8]
 802e436:	f033 4300 	bics.w	r3, r3, #2147483648	; 0x80000000
 802e43a:	d004      	beq.n	802e446 <HAL_RTCEx_PrivilegeModeSet+0x3e>
 802e43c:	f640 317e 	movw	r1, #2942	; 0xb7e
 802e440:	481d      	ldr	r0, [pc, #116]	; (802e4b8 <HAL_RTCEx_PrivilegeModeSet+0xb0>)
 802e442:	f7f7 feab 	bl	802619c <assert_failed>
  assert_param(IS_TAMP_MONOTONIC_CNT_PRIVILEGE(privilegeState->MonotonicCounterPrivilege));
 802e446:	69a3      	ldr	r3, [r4, #24]
 802e448:	f433 4300 	bics.w	r3, r3, #32768	; 0x8000
 802e44c:	d004      	beq.n	802e458 <HAL_RTCEx_PrivilegeModeSet+0x50>
 802e44e:	f640 317f 	movw	r1, #2943	; 0xb7f
 802e452:	4819      	ldr	r0, [pc, #100]	; (802e4b8 <HAL_RTCEx_PrivilegeModeSet+0xb0>)
 802e454:	f7f7 fea2 	bl	802619c <assert_failed>
  assert_param(IS_RTC_PRIVILEGE_BKUP_ZONE(privilegeState->backupRegisterPrivZone));
 802e458:	68e3      	ldr	r3, [r4, #12]
 802e45a:	f033 43c0 	bics.w	r3, r3, #1610612736	; 0x60000000
 802e45e:	d004      	beq.n	802e46a <HAL_RTCEx_PrivilegeModeSet+0x62>
 802e460:	f44f 6138 	mov.w	r1, #2944	; 0xb80
 802e464:	4814      	ldr	r0, [pc, #80]	; (802e4b8 <HAL_RTCEx_PrivilegeModeSet+0xb0>)
 802e466:	f7f7 fe99 	bl	802619c <assert_failed>
  assert_param(IS_RTC_BKP(privilegeState->backupRegisterStartZone2));
 802e46a:	6923      	ldr	r3, [r4, #16]
 802e46c:	2b1f      	cmp	r3, #31
 802e46e:	d904      	bls.n	802e47a <HAL_RTCEx_PrivilegeModeSet+0x72>
 802e470:	f640 3181 	movw	r1, #2945	; 0xb81
 802e474:	4810      	ldr	r0, [pc, #64]	; (802e4b8 <HAL_RTCEx_PrivilegeModeSet+0xb0>)
 802e476:	f7f7 fe91 	bl	802619c <assert_failed>
  assert_param(IS_RTC_BKP(privilegeState->backupRegisterStartZone3));
 802e47a:	6963      	ldr	r3, [r4, #20]
 802e47c:	2b1f      	cmp	r3, #31
 802e47e:	d904      	bls.n	802e48a <HAL_RTCEx_PrivilegeModeSet+0x82>
 802e480:	f640 3182 	movw	r1, #2946	; 0xb82
 802e484:	480c      	ldr	r0, [pc, #48]	; (802e4b8 <HAL_RTCEx_PrivilegeModeSet+0xb0>)
 802e486:	f7f7 fe89 	bl	802619c <assert_failed>

  /* RTC privilege configuration */
  WRITE_REG(RTC->PRIVCFGR, privilegeState->rtcPrivilegeFull | privilegeState->rtcPrivilegeFeatures);
 802e48a:	e9d4 3200 	ldrd	r3, r2, [r4]
 802e48e:	4313      	orrs	r3, r2
 802e490:	4a0a      	ldr	r2, [pc, #40]	; (802e4bc <HAL_RTCEx_PrivilegeModeSet+0xb4>)
             (TAMP_SECCFGR_BKPRWSEC | TAMP_SECCFGR_BKPWSEC),
             ((privilegeState->backupRegisterStartZone2 << TAMP_SECCFGR_BKPRWSEC_Pos) | \
              (privilegeState->backupRegisterStartZone3 << TAMP_SECCFGR_BKPWSEC_Pos)));

  return HAL_OK;
}
 802e492:	2000      	movs	r0, #0
  WRITE_REG(RTC->PRIVCFGR, privilegeState->rtcPrivilegeFull | privilegeState->rtcPrivilegeFeatures);
 802e494:	61d3      	str	r3, [r2, #28]
  WRITE_REG(TAMP->PRIVCFGR, privilegeState->tampPrivilegeFull | privilegeState->backupRegisterPrivZone | \
 802e496:	e9d4 3202 	ldrd	r3, r2, [r4, #8]
 802e49a:	4313      	orrs	r3, r2
 802e49c:	69a2      	ldr	r2, [r4, #24]
 802e49e:	4313      	orrs	r3, r2
 802e4a0:	4a07      	ldr	r2, [pc, #28]	; (802e4c0 <HAL_RTCEx_PrivilegeModeSet+0xb8>)
 802e4a2:	6253      	str	r3, [r2, #36]	; 0x24
  MODIFY_REG(TAMP->SECCFGR,
 802e4a4:	6a13      	ldr	r3, [r2, #32]
 802e4a6:	6921      	ldr	r1, [r4, #16]
 802e4a8:	f003 23ff 	and.w	r3, r3, #4278255360	; 0xff00ff00
 802e4ac:	430b      	orrs	r3, r1
 802e4ae:	6961      	ldr	r1, [r4, #20]
 802e4b0:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
 802e4b4:	6213      	str	r3, [r2, #32]
}
 802e4b6:	bd10      	pop	{r4, pc}
 802e4b8:	0803409d 	.word	0x0803409d
 802e4bc:	46007800 	.word	0x46007800
 802e4c0:	46007c00 	.word	0x46007c00

0802e4c4 <TIM_OC5_SetConfig>:
  uint32_t tmpccmrx;
  uint32_t tmpccer;
  uint32_t tmpcr2;

  /* Get the TIMx CCER register value */
  tmpccer = TIMx->CCER;
 802e4c4:	6a02      	ldr	r2, [r0, #32]

  /* Disable the output: Reset the CCxE Bit */
  TIMx->CCER &= ~TIM_CCER_CC5E;
 802e4c6:	6a03      	ldr	r3, [r0, #32]
{
 802e4c8:	b530      	push	{r4, r5, lr}
  TIMx->CCER &= ~TIM_CCER_CC5E;
 802e4ca:	f423 3380 	bic.w	r3, r3, #65536	; 0x10000
 802e4ce:	6203      	str	r3, [r0, #32]

  /* Get the TIMx CR2 register value */
  tmpcr2 =  TIMx->CR2;
 802e4d0:	6844      	ldr	r4, [r0, #4]
  /* Get the TIMx CCMR1 register value */
  tmpccmrx = TIMx->CCMR3;
 802e4d2:	6d03      	ldr	r3, [r0, #80]	; 0x50

  /* Reset the Output Compare Mode Bits */
  tmpccmrx &= ~(TIM_CCMR3_OC5M);
  /* Select the Output Compare Mode */
  tmpccmrx |= OC_Config->OCMode;
 802e4d4:	680d      	ldr	r5, [r1, #0]
  tmpccmrx &= ~(TIM_CCMR3_OC5M);
 802e4d6:	f423 3380 	bic.w	r3, r3, #65536	; 0x10000
 802e4da:	f023 0370 	bic.w	r3, r3, #112	; 0x70
  tmpccmrx |= OC_Config->OCMode;
 802e4de:	432b      	orrs	r3, r5

  /* Reset the Output Polarity level */
  tmpccer &= ~TIM_CCER_CC5P;
  /* Set the Output Compare Polarity */
  tmpccer |= (OC_Config->OCPolarity << 16U);
 802e4e0:	688d      	ldr	r5, [r1, #8]
  tmpccer &= ~TIM_CCER_CC5P;
 802e4e2:	f422 3200 	bic.w	r2, r2, #131072	; 0x20000
  tmpccer |= (OC_Config->OCPolarity << 16U);
 802e4e6:	ea42 4205 	orr.w	r2, r2, r5, lsl #16

  if (IS_TIM_BREAK_INSTANCE(TIMx))
 802e4ea:	4d0b      	ldr	r5, [pc, #44]	; (802e518 <TIM_OC5_SetConfig+0x54>)
 802e4ec:	42a8      	cmp	r0, r5
 802e4ee:	d007      	beq.n	802e500 <TIM_OC5_SetConfig+0x3c>
 802e4f0:	f505 55c0 	add.w	r5, r5, #6144	; 0x1800
 802e4f4:	42a8      	cmp	r0, r5
 802e4f6:	d003      	beq.n	802e500 <TIM_OC5_SetConfig+0x3c>
 802e4f8:	f505 6580 	add.w	r5, r5, #1024	; 0x400
 802e4fc:	42a8      	cmp	r0, r5
 802e4fe:	d104      	bne.n	802e50a <TIM_OC5_SetConfig+0x46>
  {
    /* Reset the Output Compare IDLE State */
    tmpcr2 &= ~TIM_CR2_OIS5;
    /* Set the Output Idle state */
    tmpcr2 |= (OC_Config->OCIdleState << 8U);
 802e500:	694d      	ldr	r5, [r1, #20]
    tmpcr2 &= ~TIM_CR2_OIS5;
 802e502:	f424 3480 	bic.w	r4, r4, #65536	; 0x10000
    tmpcr2 |= (OC_Config->OCIdleState << 8U);
 802e506:	ea44 2405 	orr.w	r4, r4, r5, lsl #8
  }
  /* Write to TIMx CR2 */
  TIMx->CR2 = tmpcr2;
 802e50a:	6044      	str	r4, [r0, #4]

  /* Write to TIMx CCMR3 */
  TIMx->CCMR3 = tmpccmrx;
 802e50c:	6503      	str	r3, [r0, #80]	; 0x50

  /* Set the Capture Compare Register value */
  TIMx->CCR5 = OC_Config->Pulse;
 802e50e:	684b      	ldr	r3, [r1, #4]
 802e510:	6483      	str	r3, [r0, #72]	; 0x48

  /* Write to TIMx CCER */
  TIMx->CCER = tmpccer;
 802e512:	6202      	str	r2, [r0, #32]
}
 802e514:	bd30      	pop	{r4, r5, pc}
 802e516:	bf00      	nop
 802e518:	40012c00 	.word	0x40012c00

0802e51c <TIM_OC6_SetConfig>:
  uint32_t tmpccmrx;
  uint32_t tmpccer;
  uint32_t tmpcr2;

  /* Get the TIMx CCER register value */
  tmpccer = TIMx->CCER;
 802e51c:	6a02      	ldr	r2, [r0, #32]

  /* Disable the output: Reset the CCxE Bit */
  TIMx->CCER &= ~TIM_CCER_CC6E;
 802e51e:	6a03      	ldr	r3, [r0, #32]
{
 802e520:	b530      	push	{r4, r5, lr}
  TIMx->CCER &= ~TIM_CCER_CC6E;
 802e522:	f423 1380 	bic.w	r3, r3, #1048576	; 0x100000
 802e526:	6203      	str	r3, [r0, #32]

  /* Get the TIMx CR2 register value */
  tmpcr2 =  TIMx->CR2;
 802e528:	6844      	ldr	r4, [r0, #4]
  /* Get the TIMx CCMR1 register value */
  tmpccmrx = TIMx->CCMR3;
 802e52a:	6d03      	ldr	r3, [r0, #80]	; 0x50

  /* Reset the Output Compare Mode Bits */
  tmpccmrx &= ~(TIM_CCMR3_OC6M);
  /* Select the Output Compare Mode */
  tmpccmrx |= (OC_Config->OCMode << 8U);
 802e52c:	680d      	ldr	r5, [r1, #0]
  tmpccmrx &= ~(TIM_CCMR3_OC6M);
 802e52e:	f023 7380 	bic.w	r3, r3, #16777216	; 0x1000000
 802e532:	f423 43e0 	bic.w	r3, r3, #28672	; 0x7000
  tmpccmrx |= (OC_Config->OCMode << 8U);
 802e536:	ea43 2305 	orr.w	r3, r3, r5, lsl #8

  /* Reset the Output Polarity level */
  tmpccer &= (uint32_t)~TIM_CCER_CC6P;
  /* Set the Output Compare Polarity */
  tmpccer |= (OC_Config->OCPolarity << 20U);
 802e53a:	688d      	ldr	r5, [r1, #8]
  tmpccer &= (uint32_t)~TIM_CCER_CC6P;
 802e53c:	f422 1200 	bic.w	r2, r2, #2097152	; 0x200000
  tmpccer |= (OC_Config->OCPolarity << 20U);
 802e540:	ea42 5205 	orr.w	r2, r2, r5, lsl #20

  if (IS_TIM_BREAK_INSTANCE(TIMx))
 802e544:	4d0a      	ldr	r5, [pc, #40]	; (802e570 <TIM_OC6_SetConfig+0x54>)
 802e546:	42a8      	cmp	r0, r5
 802e548:	d007      	beq.n	802e55a <TIM_OC6_SetConfig+0x3e>
 802e54a:	f505 55c0 	add.w	r5, r5, #6144	; 0x1800
 802e54e:	42a8      	cmp	r0, r5
 802e550:	d003      	beq.n	802e55a <TIM_OC6_SetConfig+0x3e>
 802e552:	f505 6580 	add.w	r5, r5, #1024	; 0x400
 802e556:	42a8      	cmp	r0, r5
 802e558:	d104      	bne.n	802e564 <TIM_OC6_SetConfig+0x48>
  {
    /* Reset the Output Compare IDLE State */
    tmpcr2 &= ~TIM_CR2_OIS6;
    /* Set the Output Idle state */
    tmpcr2 |= (OC_Config->OCIdleState << 10U);
 802e55a:	694d      	ldr	r5, [r1, #20]
    tmpcr2 &= ~TIM_CR2_OIS6;
 802e55c:	f424 2480 	bic.w	r4, r4, #262144	; 0x40000
    tmpcr2 |= (OC_Config->OCIdleState << 10U);
 802e560:	ea44 2485 	orr.w	r4, r4, r5, lsl #10
  }

  /* Write to TIMx CR2 */
  TIMx->CR2 = tmpcr2;
 802e564:	6044      	str	r4, [r0, #4]

  /* Write to TIMx CCMR3 */
  TIMx->CCMR3 = tmpccmrx;
 802e566:	6503      	str	r3, [r0, #80]	; 0x50

  /* Set the Capture Compare Register value */
  TIMx->CCR6 = OC_Config->Pulse;
 802e568:	684b      	ldr	r3, [r1, #4]
 802e56a:	64c3      	str	r3, [r0, #76]	; 0x4c

  /* Write to TIMx CCER */
  TIMx->CCER = tmpccer;
 802e56c:	6202      	str	r2, [r0, #32]
}
 802e56e:	bd30      	pop	{r4, r5, pc}
 802e570:	40012c00 	.word	0x40012c00

0802e574 <TIM_OC1_SetConfig>:
{
 802e574:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  tmpccer = TIMx->CCER;
 802e578:	6a05      	ldr	r5, [r0, #32]
  TIMx->CCER &= ~TIM_CCER_CC1E;
 802e57a:	6a03      	ldr	r3, [r0, #32]
  tmpccmrx |= OC_Config->OCMode;
 802e57c:	680f      	ldr	r7, [r1, #0]
  TIMx->CCER &= ~TIM_CCER_CC1E;
 802e57e:	f023 0301 	bic.w	r3, r3, #1
 802e582:	6203      	str	r3, [r0, #32]
  tmpcr2 =  TIMx->CR2;
 802e584:	f8d0 8004 	ldr.w	r8, [r0, #4]
  tmpccmrx = TIMx->CCMR1;
 802e588:	6983      	ldr	r3, [r0, #24]
  tmpccer &= ~TIM_CCER_CC1P;
 802e58a:	f025 0502 	bic.w	r5, r5, #2
  tmpccmrx &= ~TIM_CCMR1_CC1S;
 802e58e:	f423 3380 	bic.w	r3, r3, #65536	; 0x10000
 802e592:	f023 0373 	bic.w	r3, r3, #115	; 0x73
  tmpccmrx |= OC_Config->OCMode;
 802e596:	431f      	orrs	r7, r3
  tmpccer |= OC_Config->OCPolarity;
 802e598:	688b      	ldr	r3, [r1, #8]
{
 802e59a:	4604      	mov	r4, r0
  tmpccer |= OC_Config->OCPolarity;
 802e59c:	431d      	orrs	r5, r3
  if (IS_TIM_CCXN_INSTANCE(TIMx, TIM_CHANNEL_1))
 802e59e:	4b23      	ldr	r3, [pc, #140]	; (802e62c <TIM_OC1_SetConfig+0xb8>)
{
 802e5a0:	460e      	mov	r6, r1
  if (IS_TIM_CCXN_INSTANCE(TIMx, TIM_CHANNEL_1))
 802e5a2:	4298      	cmp	r0, r3
 802e5a4:	d007      	beq.n	802e5b6 <TIM_OC1_SetConfig+0x42>
 802e5a6:	f503 53c0 	add.w	r3, r3, #6144	; 0x1800
 802e5aa:	4298      	cmp	r0, r3
 802e5ac:	d003      	beq.n	802e5b6 <TIM_OC1_SetConfig+0x42>
 802e5ae:	f503 6380 	add.w	r3, r3, #1024	; 0x400
 802e5b2:	4298      	cmp	r0, r3
 802e5b4:	d132      	bne.n	802e61c <TIM_OC1_SetConfig+0xa8>
    assert_param(IS_TIM_OCN_POLARITY(OC_Config->OCNPolarity));
 802e5b6:	68f3      	ldr	r3, [r6, #12]
 802e5b8:	f033 0308 	bics.w	r3, r3, #8
 802e5bc:	d004      	beq.n	802e5c8 <TIM_OC1_SetConfig+0x54>
 802e5be:	f641 419d 	movw	r1, #7325	; 0x1c9d
 802e5c2:	481b      	ldr	r0, [pc, #108]	; (802e630 <TIM_OC1_SetConfig+0xbc>)
 802e5c4:	f7f7 fdea 	bl	802619c <assert_failed>
    tmpccer |= OC_Config->OCNPolarity;
 802e5c8:	68f3      	ldr	r3, [r6, #12]
    tmpccer &= ~TIM_CCER_CC1NP;
 802e5ca:	f025 0508 	bic.w	r5, r5, #8
    tmpccer |= OC_Config->OCNPolarity;
 802e5ce:	431d      	orrs	r5, r3
  if (IS_TIM_BREAK_INSTANCE(TIMx))
 802e5d0:	4b16      	ldr	r3, [pc, #88]	; (802e62c <TIM_OC1_SetConfig+0xb8>)
    tmpccer &= ~TIM_CCER_CC1NE;
 802e5d2:	f025 0504 	bic.w	r5, r5, #4
  if (IS_TIM_BREAK_INSTANCE(TIMx))
 802e5d6:	429c      	cmp	r4, r3
 802e5d8:	d007      	beq.n	802e5ea <TIM_OC1_SetConfig+0x76>
 802e5da:	f503 53c0 	add.w	r3, r3, #6144	; 0x1800
 802e5de:	429c      	cmp	r4, r3
 802e5e0:	d003      	beq.n	802e5ea <TIM_OC1_SetConfig+0x76>
 802e5e2:	f503 6380 	add.w	r3, r3, #1024	; 0x400
 802e5e6:	429c      	cmp	r4, r3
 802e5e8:	d118      	bne.n	802e61c <TIM_OC1_SetConfig+0xa8>
    assert_param(IS_TIM_OCNIDLE_STATE(OC_Config->OCNIdleState));
 802e5ea:	69b3      	ldr	r3, [r6, #24]
 802e5ec:	f433 7300 	bics.w	r3, r3, #512	; 0x200
 802e5f0:	d004      	beq.n	802e5fc <TIM_OC1_SetConfig+0x88>
 802e5f2:	f641 41aa 	movw	r1, #7338	; 0x1caa
 802e5f6:	480e      	ldr	r0, [pc, #56]	; (802e630 <TIM_OC1_SetConfig+0xbc>)
 802e5f8:	f7f7 fdd0 	bl	802619c <assert_failed>
    assert_param(IS_TIM_OCIDLE_STATE(OC_Config->OCIdleState));
 802e5fc:	6973      	ldr	r3, [r6, #20]
 802e5fe:	f433 7380 	bics.w	r3, r3, #256	; 0x100
 802e602:	d004      	beq.n	802e60e <TIM_OC1_SetConfig+0x9a>
 802e604:	f641 41ab 	movw	r1, #7339	; 0x1cab
 802e608:	4809      	ldr	r0, [pc, #36]	; (802e630 <TIM_OC1_SetConfig+0xbc>)
 802e60a:	f7f7 fdc7 	bl	802619c <assert_failed>
    tmpcr2 |= OC_Config->OCNIdleState;
 802e60e:	e9d6 3205 	ldrd	r3, r2, [r6, #20]
    tmpcr2 &= ~TIM_CR2_OIS1N;
 802e612:	f428 7840 	bic.w	r8, r8, #768	; 0x300
    tmpcr2 |= OC_Config->OCNIdleState;
 802e616:	4313      	orrs	r3, r2
 802e618:	ea43 0808 	orr.w	r8, r3, r8
  TIMx->CCR1 = OC_Config->Pulse;
 802e61c:	6873      	ldr	r3, [r6, #4]
  TIMx->CR2 = tmpcr2;
 802e61e:	f8c4 8004 	str.w	r8, [r4, #4]
  TIMx->CCMR1 = tmpccmrx;
 802e622:	61a7      	str	r7, [r4, #24]
  TIMx->CCR1 = OC_Config->Pulse;
 802e624:	6363      	str	r3, [r4, #52]	; 0x34
  TIMx->CCER = tmpccer;
 802e626:	6225      	str	r5, [r4, #32]
}
 802e628:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 802e62c:	40012c00 	.word	0x40012c00
 802e630:	0803410e 	.word	0x0803410e

0802e634 <TIM_OC3_SetConfig>:
{
 802e634:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  tmpccer = TIMx->CCER;
 802e638:	6a05      	ldr	r5, [r0, #32]
  TIMx->CCER &= ~TIM_CCER_CC3E;
 802e63a:	6a03      	ldr	r3, [r0, #32]
  tmpccmrx |= OC_Config->OCMode;
 802e63c:	680f      	ldr	r7, [r1, #0]
  TIMx->CCER &= ~TIM_CCER_CC3E;
 802e63e:	f423 7380 	bic.w	r3, r3, #256	; 0x100
 802e642:	6203      	str	r3, [r0, #32]
  tmpcr2 =  TIMx->CR2;
 802e644:	f8d0 8004 	ldr.w	r8, [r0, #4]
  tmpccmrx = TIMx->CCMR2;
 802e648:	69c3      	ldr	r3, [r0, #28]
  tmpccer &= ~TIM_CCER_CC3P;
 802e64a:	f425 7500 	bic.w	r5, r5, #512	; 0x200
  tmpccmrx &= ~TIM_CCMR2_CC3S;
 802e64e:	f423 3380 	bic.w	r3, r3, #65536	; 0x10000
 802e652:	f023 0373 	bic.w	r3, r3, #115	; 0x73
  tmpccmrx |= OC_Config->OCMode;
 802e656:	431f      	orrs	r7, r3
  tmpccer |= (OC_Config->OCPolarity << 8U);
 802e658:	688b      	ldr	r3, [r1, #8]
{
 802e65a:	4604      	mov	r4, r0
  tmpccer |= (OC_Config->OCPolarity << 8U);
 802e65c:	ea45 2503 	orr.w	r5, r5, r3, lsl #8
  if (IS_TIM_CCXN_INSTANCE(TIMx, TIM_CHANNEL_3))
 802e660:	4b1d      	ldr	r3, [pc, #116]	; (802e6d8 <TIM_OC3_SetConfig+0xa4>)
{
 802e662:	460e      	mov	r6, r1
  if (IS_TIM_CCXN_INSTANCE(TIMx, TIM_CHANNEL_3))
 802e664:	4298      	cmp	r0, r3
 802e666:	d129      	bne.n	802e6bc <TIM_OC3_SetConfig+0x88>
    assert_param(IS_TIM_OCN_POLARITY(OC_Config->OCNPolarity));
 802e668:	68cb      	ldr	r3, [r1, #12]
 802e66a:	f033 0308 	bics.w	r3, r3, #8
 802e66e:	d004      	beq.n	802e67a <TIM_OC3_SetConfig+0x46>
 802e670:	f641 5135 	movw	r1, #7477	; 0x1d35
 802e674:	4819      	ldr	r0, [pc, #100]	; (802e6dc <TIM_OC3_SetConfig+0xa8>)
 802e676:	f7f7 fd91 	bl	802619c <assert_failed>
    tmpccer |= (OC_Config->OCNPolarity << 8U);
 802e67a:	68f3      	ldr	r3, [r6, #12]
    tmpccer &= ~TIM_CCER_CC3NP;
 802e67c:	f425 6500 	bic.w	r5, r5, #2048	; 0x800
    tmpccer |= (OC_Config->OCNPolarity << 8U);
 802e680:	ea45 2503 	orr.w	r5, r5, r3, lsl #8
    tmpccer &= ~TIM_CCER_CC3NE;
 802e684:	f425 6580 	bic.w	r5, r5, #1024	; 0x400
    assert_param(IS_TIM_OCNIDLE_STATE(OC_Config->OCNIdleState));
 802e688:	69b3      	ldr	r3, [r6, #24]
 802e68a:	f433 7300 	bics.w	r3, r3, #512	; 0x200
 802e68e:	d004      	beq.n	802e69a <TIM_OC3_SetConfig+0x66>
 802e690:	f641 5142 	movw	r1, #7490	; 0x1d42
 802e694:	4811      	ldr	r0, [pc, #68]	; (802e6dc <TIM_OC3_SetConfig+0xa8>)
 802e696:	f7f7 fd81 	bl	802619c <assert_failed>
    assert_param(IS_TIM_OCIDLE_STATE(OC_Config->OCIdleState));
 802e69a:	6973      	ldr	r3, [r6, #20]
 802e69c:	f433 7380 	bics.w	r3, r3, #256	; 0x100
 802e6a0:	d004      	beq.n	802e6ac <TIM_OC3_SetConfig+0x78>
 802e6a2:	f641 5143 	movw	r1, #7491	; 0x1d43
 802e6a6:	480d      	ldr	r0, [pc, #52]	; (802e6dc <TIM_OC3_SetConfig+0xa8>)
 802e6a8:	f7f7 fd78 	bl	802619c <assert_failed>
    tmpcr2 |= (OC_Config->OCNIdleState << 4U);
 802e6ac:	e9d6 3205 	ldrd	r3, r2, [r6, #20]
    tmpcr2 &= ~TIM_CR2_OIS3N;
 802e6b0:	f428 5840 	bic.w	r8, r8, #12288	; 0x3000
    tmpcr2 |= (OC_Config->OCNIdleState << 4U);
 802e6b4:	4313      	orrs	r3, r2
 802e6b6:	ea48 1803 	orr.w	r8, r8, r3, lsl #4
 802e6ba:	e005      	b.n	802e6c8 <TIM_OC3_SetConfig+0x94>
  if (IS_TIM_BREAK_INSTANCE(TIMx))
 802e6bc:	4b08      	ldr	r3, [pc, #32]	; (802e6e0 <TIM_OC3_SetConfig+0xac>)
 802e6be:	4298      	cmp	r0, r3
 802e6c0:	d0e2      	beq.n	802e688 <TIM_OC3_SetConfig+0x54>
 802e6c2:	4b08      	ldr	r3, [pc, #32]	; (802e6e4 <TIM_OC3_SetConfig+0xb0>)
 802e6c4:	429c      	cmp	r4, r3
 802e6c6:	d0df      	beq.n	802e688 <TIM_OC3_SetConfig+0x54>
  TIMx->CCR3 = OC_Config->Pulse;
 802e6c8:	6873      	ldr	r3, [r6, #4]
  TIMx->CR2 = tmpcr2;
 802e6ca:	f8c4 8004 	str.w	r8, [r4, #4]
  TIMx->CCMR2 = tmpccmrx;
 802e6ce:	61e7      	str	r7, [r4, #28]
  TIMx->CCR3 = OC_Config->Pulse;
 802e6d0:	63e3      	str	r3, [r4, #60]	; 0x3c
  TIMx->CCER = tmpccer;
 802e6d2:	6225      	str	r5, [r4, #32]
}
 802e6d4:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 802e6d8:	40012c00 	.word	0x40012c00
 802e6dc:	0803410e 	.word	0x0803410e
 802e6e0:	40014400 	.word	0x40014400
 802e6e4:	40014800 	.word	0x40014800

0802e6e8 <TIM_OC4_SetConfig>:
{
 802e6e8:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  tmpccer = TIMx->CCER;
 802e6ec:	6a05      	ldr	r5, [r0, #32]
  TIMx->CCER &= ~TIM_CCER_CC4E;
 802e6ee:	6a03      	ldr	r3, [r0, #32]
  tmpccmrx |= (OC_Config->OCMode << 8U);
 802e6f0:	680f      	ldr	r7, [r1, #0]
  TIMx->CCER &= ~TIM_CCER_CC4E;
 802e6f2:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
 802e6f6:	6203      	str	r3, [r0, #32]
  tmpcr2 =  TIMx->CR2;
 802e6f8:	f8d0 8004 	ldr.w	r8, [r0, #4]
  tmpccmrx = TIMx->CCMR2;
 802e6fc:	69c3      	ldr	r3, [r0, #28]
  tmpccer &= ~TIM_CCER_CC4P;
 802e6fe:	f425 5500 	bic.w	r5, r5, #8192	; 0x2000
  tmpccmrx &= ~TIM_CCMR2_CC4S;
 802e702:	f023 7380 	bic.w	r3, r3, #16777216	; 0x1000000
 802e706:	f423 43e6 	bic.w	r3, r3, #29440	; 0x7300
  tmpccmrx |= (OC_Config->OCMode << 8U);
 802e70a:	ea43 2707 	orr.w	r7, r3, r7, lsl #8
  tmpccer |= (OC_Config->OCPolarity << 12U);
 802e70e:	688b      	ldr	r3, [r1, #8]
{
 802e710:	4604      	mov	r4, r0
  tmpccer |= (OC_Config->OCPolarity << 12U);
 802e712:	ea45 3503 	orr.w	r5, r5, r3, lsl #12
  if (IS_TIM_CCXN_INSTANCE(TIMx, TIM_CHANNEL_4))
 802e716:	4b1e      	ldr	r3, [pc, #120]	; (802e790 <TIM_OC4_SetConfig+0xa8>)
{
 802e718:	460e      	mov	r6, r1
  if (IS_TIM_CCXN_INSTANCE(TIMx, TIM_CHANNEL_4))
 802e71a:	4298      	cmp	r0, r3
 802e71c:	d129      	bne.n	802e772 <TIM_OC4_SetConfig+0x8a>
    assert_param(IS_TIM_OCN_POLARITY(OC_Config->OCNPolarity));
 802e71e:	68cb      	ldr	r3, [r1, #12]
 802e720:	f033 0308 	bics.w	r3, r3, #8
 802e724:	d004      	beq.n	802e730 <TIM_OC4_SetConfig+0x48>
 802e726:	f641 5181 	movw	r1, #7553	; 0x1d81
 802e72a:	481a      	ldr	r0, [pc, #104]	; (802e794 <TIM_OC4_SetConfig+0xac>)
 802e72c:	f7f7 fd36 	bl	802619c <assert_failed>
    tmpccer |= (OC_Config->OCNPolarity << 12U);
 802e730:	68f3      	ldr	r3, [r6, #12]
    tmpccer &= ~TIM_CCER_CC4NP;
 802e732:	f425 4500 	bic.w	r5, r5, #32768	; 0x8000
    tmpccer |= (OC_Config->OCNPolarity << 12U);
 802e736:	ea45 3503 	orr.w	r5, r5, r3, lsl #12
    tmpccer &= ~TIM_CCER_CC4NE;
 802e73a:	f425 4580 	bic.w	r5, r5, #16384	; 0x4000
    assert_param(IS_TIM_OCNIDLE_STATE(OC_Config->OCNIdleState));
 802e73e:	69b3      	ldr	r3, [r6, #24]
 802e740:	f433 7300 	bics.w	r3, r3, #512	; 0x200
 802e744:	d004      	beq.n	802e750 <TIM_OC4_SetConfig+0x68>
 802e746:	f641 518e 	movw	r1, #7566	; 0x1d8e
 802e74a:	4812      	ldr	r0, [pc, #72]	; (802e794 <TIM_OC4_SetConfig+0xac>)
 802e74c:	f7f7 fd26 	bl	802619c <assert_failed>
    assert_param(IS_TIM_OCIDLE_STATE(OC_Config->OCIdleState));
 802e750:	6973      	ldr	r3, [r6, #20]
 802e752:	f433 7380 	bics.w	r3, r3, #256	; 0x100
 802e756:	d004      	beq.n	802e762 <TIM_OC4_SetConfig+0x7a>
 802e758:	f641 518f 	movw	r1, #7567	; 0x1d8f
 802e75c:	480d      	ldr	r0, [pc, #52]	; (802e794 <TIM_OC4_SetConfig+0xac>)
 802e75e:	f7f7 fd1d 	bl	802619c <assert_failed>
    tmpcr2 |= (OC_Config->OCNIdleState << 6U);
 802e762:	e9d6 3205 	ldrd	r3, r2, [r6, #20]
    tmpcr2 &= ~TIM_CR2_OIS4N;
 802e766:	f428 4840 	bic.w	r8, r8, #49152	; 0xc000
    tmpcr2 |= (OC_Config->OCNIdleState << 6U);
 802e76a:	4313      	orrs	r3, r2
 802e76c:	ea48 1883 	orr.w	r8, r8, r3, lsl #6
 802e770:	e005      	b.n	802e77e <TIM_OC4_SetConfig+0x96>
  if (IS_TIM_BREAK_INSTANCE(TIMx))
 802e772:	4b09      	ldr	r3, [pc, #36]	; (802e798 <TIM_OC4_SetConfig+0xb0>)
 802e774:	4298      	cmp	r0, r3
 802e776:	d0e2      	beq.n	802e73e <TIM_OC4_SetConfig+0x56>
 802e778:	4b08      	ldr	r3, [pc, #32]	; (802e79c <TIM_OC4_SetConfig+0xb4>)
 802e77a:	429c      	cmp	r4, r3
 802e77c:	d0df      	beq.n	802e73e <TIM_OC4_SetConfig+0x56>
  TIMx->CCR4 = OC_Config->Pulse;
 802e77e:	6873      	ldr	r3, [r6, #4]
  TIMx->CR2 = tmpcr2;
 802e780:	f8c4 8004 	str.w	r8, [r4, #4]
  TIMx->CCMR2 = tmpccmrx;
 802e784:	61e7      	str	r7, [r4, #28]
  TIMx->CCR4 = OC_Config->Pulse;
 802e786:	6423      	str	r3, [r4, #64]	; 0x40
  TIMx->CCER = tmpccer;
 802e788:	6225      	str	r5, [r4, #32]
}
 802e78a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 802e78e:	bf00      	nop
 802e790:	40012c00 	.word	0x40012c00
 802e794:	0803410e 	.word	0x0803410e
 802e798:	40014400 	.word	0x40014400
 802e79c:	40014800 	.word	0x40014800

0802e7a0 <TIM_Base_SetConfig>:
  if (IS_TIM_COUNTER_MODE_SELECT_INSTANCE(TIMx))
 802e7a0:	4a1d      	ldr	r2, [pc, #116]	; (802e818 <TIM_Base_SetConfig+0x78>)
{
 802e7a2:	b510      	push	{r4, lr}
  if (IS_TIM_COUNTER_MODE_SELECT_INSTANCE(TIMx))
 802e7a4:	4290      	cmp	r0, r2
  tmpcr1 = TIMx->CR1;
 802e7a6:	6803      	ldr	r3, [r0, #0]
  if (IS_TIM_COUNTER_MODE_SELECT_INSTANCE(TIMx))
 802e7a8:	d005      	beq.n	802e7b6 <TIM_Base_SetConfig+0x16>
 802e7aa:	f1b0 4f80 	cmp.w	r0, #1073741824	; 0x40000000
 802e7ae:	d002      	beq.n	802e7b6 <TIM_Base_SetConfig+0x16>
 802e7b0:	4c1a      	ldr	r4, [pc, #104]	; (802e81c <TIM_Base_SetConfig+0x7c>)
 802e7b2:	42a0      	cmp	r0, r4
 802e7b4:	d10c      	bne.n	802e7d0 <TIM_Base_SetConfig+0x30>
    tmpcr1 |= Structure->CounterMode;
 802e7b6:	684c      	ldr	r4, [r1, #4]
    tmpcr1 &= ~(TIM_CR1_DIR | TIM_CR1_CMS);
 802e7b8:	f023 0370 	bic.w	r3, r3, #112	; 0x70
  if (IS_TIM_CLOCK_DIVISION_INSTANCE(TIMx))
 802e7bc:	4290      	cmp	r0, r2
    tmpcr1 |= Structure->CounterMode;
 802e7be:	ea43 0304 	orr.w	r3, r3, r4
  if (IS_TIM_CLOCK_DIVISION_INSTANCE(TIMx))
 802e7c2:	d00c      	beq.n	802e7de <TIM_Base_SetConfig+0x3e>
 802e7c4:	f1b0 4f80 	cmp.w	r0, #1073741824	; 0x40000000
 802e7c8:	d009      	beq.n	802e7de <TIM_Base_SetConfig+0x3e>
 802e7ca:	4a14      	ldr	r2, [pc, #80]	; (802e81c <TIM_Base_SetConfig+0x7c>)
 802e7cc:	4290      	cmp	r0, r2
 802e7ce:	d006      	beq.n	802e7de <TIM_Base_SetConfig+0x3e>
 802e7d0:	4a13      	ldr	r2, [pc, #76]	; (802e820 <TIM_Base_SetConfig+0x80>)
 802e7d2:	4290      	cmp	r0, r2
 802e7d4:	d003      	beq.n	802e7de <TIM_Base_SetConfig+0x3e>
 802e7d6:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 802e7da:	4290      	cmp	r0, r2
 802e7dc:	d103      	bne.n	802e7e6 <TIM_Base_SetConfig+0x46>
    tmpcr1 |= (uint32_t)Structure->ClockDivision;
 802e7de:	68ca      	ldr	r2, [r1, #12]
    tmpcr1 &= ~TIM_CR1_CKD;
 802e7e0:	f423 7340 	bic.w	r3, r3, #768	; 0x300
    tmpcr1 |= (uint32_t)Structure->ClockDivision;
 802e7e4:	4313      	orrs	r3, r2
  MODIFY_REG(tmpcr1, TIM_CR1_ARPE, Structure->AutoReloadPreload);
 802e7e6:	694a      	ldr	r2, [r1, #20]
 802e7e8:	f023 0380 	bic.w	r3, r3, #128	; 0x80
 802e7ec:	4313      	orrs	r3, r2
  TIMx->CR1 = tmpcr1;
 802e7ee:	6003      	str	r3, [r0, #0]
  TIMx->ARR = (uint32_t)Structure->Period ;
 802e7f0:	688b      	ldr	r3, [r1, #8]
 802e7f2:	62c3      	str	r3, [r0, #44]	; 0x2c
  TIMx->PSC = Structure->Prescaler;
 802e7f4:	680b      	ldr	r3, [r1, #0]
 802e7f6:	6283      	str	r3, [r0, #40]	; 0x28
  if (IS_TIM_REPETITION_COUNTER_INSTANCE(TIMx))
 802e7f8:	4b07      	ldr	r3, [pc, #28]	; (802e818 <TIM_Base_SetConfig+0x78>)
 802e7fa:	4298      	cmp	r0, r3
 802e7fc:	d007      	beq.n	802e80e <TIM_Base_SetConfig+0x6e>
 802e7fe:	f503 53c0 	add.w	r3, r3, #6144	; 0x1800
 802e802:	4298      	cmp	r0, r3
 802e804:	d003      	beq.n	802e80e <TIM_Base_SetConfig+0x6e>
 802e806:	f503 6380 	add.w	r3, r3, #1024	; 0x400
 802e80a:	4298      	cmp	r0, r3
 802e80c:	d101      	bne.n	802e812 <TIM_Base_SetConfig+0x72>
    TIMx->RCR = Structure->RepetitionCounter;
 802e80e:	690b      	ldr	r3, [r1, #16]
 802e810:	6303      	str	r3, [r0, #48]	; 0x30
  TIMx->EGR = TIM_EGR_UG;
 802e812:	2301      	movs	r3, #1
 802e814:	6143      	str	r3, [r0, #20]
}
 802e816:	bd10      	pop	{r4, pc}
 802e818:	40012c00 	.word	0x40012c00
 802e81c:	40000400 	.word	0x40000400
 802e820:	40014400 	.word	0x40014400

0802e824 <HAL_TIM_PWM_Init>:
{
 802e824:	b510      	push	{r4, lr}
  if (htim == NULL)
 802e826:	4604      	mov	r4, r0
 802e828:	2800      	cmp	r0, #0
 802e82a:	d07b      	beq.n	802e924 <HAL_TIM_PWM_Init+0x100>
  assert_param(IS_TIM_INSTANCE(htim->Instance));
 802e82c:	6803      	ldr	r3, [r0, #0]
 802e82e:	4a3e      	ldr	r2, [pc, #248]	; (802e928 <HAL_TIM_PWM_Init+0x104>)
 802e830:	4293      	cmp	r3, r2
 802e832:	d013      	beq.n	802e85c <HAL_TIM_PWM_Init+0x38>
 802e834:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 802e838:	d010      	beq.n	802e85c <HAL_TIM_PWM_Init+0x38>
 802e83a:	f5a2 3294 	sub.w	r2, r2, #75776	; 0x12800
 802e83e:	4293      	cmp	r3, r2
 802e840:	d00c      	beq.n	802e85c <HAL_TIM_PWM_Init+0x38>
 802e842:	f502 32a0 	add.w	r2, r2, #81920	; 0x14000
 802e846:	4293      	cmp	r3, r2
 802e848:	d008      	beq.n	802e85c <HAL_TIM_PWM_Init+0x38>
 802e84a:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 802e84e:	4293      	cmp	r3, r2
 802e850:	d004      	beq.n	802e85c <HAL_TIM_PWM_Init+0x38>
 802e852:	f240 513f 	movw	r1, #1343	; 0x53f
 802e856:	4835      	ldr	r0, [pc, #212]	; (802e92c <HAL_TIM_PWM_Init+0x108>)
 802e858:	f7f7 fca0 	bl	802619c <assert_failed>
  assert_param(IS_TIM_COUNTER_MODE(htim->Init.CounterMode));
 802e85c:	68a3      	ldr	r3, [r4, #8]
 802e85e:	f033 0210 	bics.w	r2, r3, #16
 802e862:	d00a      	beq.n	802e87a <HAL_TIM_PWM_Init+0x56>
 802e864:	f023 0240 	bic.w	r2, r3, #64	; 0x40
 802e868:	2a20      	cmp	r2, #32
 802e86a:	d006      	beq.n	802e87a <HAL_TIM_PWM_Init+0x56>
 802e86c:	2b40      	cmp	r3, #64	; 0x40
 802e86e:	d004      	beq.n	802e87a <HAL_TIM_PWM_Init+0x56>
 802e870:	f44f 61a8 	mov.w	r1, #1344	; 0x540
 802e874:	482d      	ldr	r0, [pc, #180]	; (802e92c <HAL_TIM_PWM_Init+0x108>)
 802e876:	f7f7 fc91 	bl	802619c <assert_failed>
  assert_param(IS_TIM_CLOCKDIVISION_DIV(htim->Init.ClockDivision));
 802e87a:	6923      	ldr	r3, [r4, #16]
 802e87c:	f433 7280 	bics.w	r2, r3, #256	; 0x100
 802e880:	d007      	beq.n	802e892 <HAL_TIM_PWM_Init+0x6e>
 802e882:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 802e886:	d004      	beq.n	802e892 <HAL_TIM_PWM_Init+0x6e>
 802e888:	f240 5141 	movw	r1, #1345	; 0x541
 802e88c:	4827      	ldr	r0, [pc, #156]	; (802e92c <HAL_TIM_PWM_Init+0x108>)
 802e88e:	f7f7 fc85 	bl	802619c <assert_failed>
  assert_param(IS_TIM_PERIOD(htim, htim->Init.Period));
 802e892:	6822      	ldr	r2, [r4, #0]
 802e894:	68e3      	ldr	r3, [r4, #12]
 802e896:	f1b2 4f80 	cmp.w	r2, #1073741824	; 0x40000000
 802e89a:	d002      	beq.n	802e8a2 <HAL_TIM_PWM_Init+0x7e>
 802e89c:	4924      	ldr	r1, [pc, #144]	; (802e930 <HAL_TIM_PWM_Init+0x10c>)
 802e89e:	428a      	cmp	r2, r1
 802e8a0:	d106      	bne.n	802e8b0 <HAL_TIM_PWM_Init+0x8c>
 802e8a2:	b953      	cbnz	r3, 802e8ba <HAL_TIM_PWM_Init+0x96>
 802e8a4:	f240 5142 	movw	r1, #1346	; 0x542
 802e8a8:	4820      	ldr	r0, [pc, #128]	; (802e92c <HAL_TIM_PWM_Init+0x108>)
 802e8aa:	f7f7 fc77 	bl	802619c <assert_failed>
 802e8ae:	e004      	b.n	802e8ba <HAL_TIM_PWM_Init+0x96>
 802e8b0:	f64f 72fe 	movw	r2, #65534	; 0xfffe
 802e8b4:	3b01      	subs	r3, #1
 802e8b6:	4293      	cmp	r3, r2
 802e8b8:	d8f4      	bhi.n	802e8a4 <HAL_TIM_PWM_Init+0x80>
  assert_param(IS_TIM_AUTORELOAD_PRELOAD(htim->Init.AutoReloadPreload));
 802e8ba:	69a3      	ldr	r3, [r4, #24]
 802e8bc:	f033 0380 	bics.w	r3, r3, #128	; 0x80
 802e8c0:	d004      	beq.n	802e8cc <HAL_TIM_PWM_Init+0xa8>
 802e8c2:	f240 5143 	movw	r1, #1347	; 0x543
 802e8c6:	4819      	ldr	r0, [pc, #100]	; (802e92c <HAL_TIM_PWM_Init+0x108>)
 802e8c8:	f7f7 fc68 	bl	802619c <assert_failed>
  if (htim->State == HAL_TIM_STATE_RESET)
 802e8cc:	f894 303d 	ldrb.w	r3, [r4, #61]	; 0x3d
 802e8d0:	f003 02ff 	and.w	r2, r3, #255	; 0xff
 802e8d4:	b923      	cbnz	r3, 802e8e0 <HAL_TIM_PWM_Init+0xbc>
    HAL_TIM_PWM_MspInit(htim);
 802e8d6:	4620      	mov	r0, r4
    htim->Lock = HAL_UNLOCKED;
 802e8d8:	f884 203c 	strb.w	r2, [r4, #60]	; 0x3c
    HAL_TIM_PWM_MspInit(htim);
 802e8dc:	f7f7 fd3e 	bl	802635c <HAL_TIM_PWM_MspInit>
  htim->State = HAL_TIM_STATE_BUSY;
 802e8e0:	2302      	movs	r3, #2
  TIM_Base_SetConfig(htim->Instance, &htim->Init);
 802e8e2:	6820      	ldr	r0, [r4, #0]
  htim->State = HAL_TIM_STATE_BUSY;
 802e8e4:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
  TIM_Base_SetConfig(htim->Instance, &htim->Init);
 802e8e8:	1d21      	adds	r1, r4, #4
 802e8ea:	f7ff ff59 	bl	802e7a0 <TIM_Base_SetConfig>
  htim->DMABurstState = HAL_DMA_BURST_STATE_READY;
 802e8ee:	2301      	movs	r3, #1
  return HAL_OK;
 802e8f0:	2000      	movs	r0, #0
  htim->DMABurstState = HAL_DMA_BURST_STATE_READY;
 802e8f2:	f884 3048 	strb.w	r3, [r4, #72]	; 0x48
  TIM_CHANNEL_STATE_SET_ALL(htim, HAL_TIM_CHANNEL_STATE_READY);
 802e8f6:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
 802e8fa:	f884 303f 	strb.w	r3, [r4, #63]	; 0x3f
 802e8fe:	f884 3040 	strb.w	r3, [r4, #64]	; 0x40
 802e902:	f884 3041 	strb.w	r3, [r4, #65]	; 0x41
 802e906:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
 802e90a:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
  TIM_CHANNEL_N_STATE_SET_ALL(htim, HAL_TIM_CHANNEL_STATE_READY);
 802e90e:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
 802e912:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
 802e916:	f884 3046 	strb.w	r3, [r4, #70]	; 0x46
 802e91a:	f884 3047 	strb.w	r3, [r4, #71]	; 0x47
  htim->State = HAL_TIM_STATE_READY;
 802e91e:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
}
 802e922:	bd10      	pop	{r4, pc}
    return HAL_ERROR;
 802e924:	2001      	movs	r0, #1
 802e926:	e7fc      	b.n	802e922 <HAL_TIM_PWM_Init+0xfe>
 802e928:	40012c00 	.word	0x40012c00
 802e92c:	0803410e 	.word	0x0803410e
 802e930:	40000400 	.word	0x40000400

0802e934 <TIM_OC2_SetConfig>:
{
 802e934:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  tmpccer = TIMx->CCER;
 802e938:	6a05      	ldr	r5, [r0, #32]
  TIMx->CCER &= ~TIM_CCER_CC2E;
 802e93a:	6a03      	ldr	r3, [r0, #32]
  tmpccmrx |= (OC_Config->OCMode << 8U);
 802e93c:	680f      	ldr	r7, [r1, #0]
  TIMx->CCER &= ~TIM_CCER_CC2E;
 802e93e:	f023 0310 	bic.w	r3, r3, #16
 802e942:	6203      	str	r3, [r0, #32]
  tmpcr2 =  TIMx->CR2;
 802e944:	f8d0 8004 	ldr.w	r8, [r0, #4]
  tmpccmrx = TIMx->CCMR1;
 802e948:	6983      	ldr	r3, [r0, #24]
  tmpccer &= ~TIM_CCER_CC2P;
 802e94a:	f025 0520 	bic.w	r5, r5, #32
  tmpccmrx &= ~TIM_CCMR1_CC2S;
 802e94e:	f023 7380 	bic.w	r3, r3, #16777216	; 0x1000000
 802e952:	f423 43e6 	bic.w	r3, r3, #29440	; 0x7300
  tmpccmrx |= (OC_Config->OCMode << 8U);
 802e956:	ea43 2707 	orr.w	r7, r3, r7, lsl #8
  tmpccer |= (OC_Config->OCPolarity << 4U);
 802e95a:	688b      	ldr	r3, [r1, #8]
{
 802e95c:	4604      	mov	r4, r0
  tmpccer |= (OC_Config->OCPolarity << 4U);
 802e95e:	ea45 1503 	orr.w	r5, r5, r3, lsl #4
  if (IS_TIM_CCXN_INSTANCE(TIMx, TIM_CHANNEL_2))
 802e962:	4b1e      	ldr	r3, [pc, #120]	; (802e9dc <TIM_OC2_SetConfig+0xa8>)
{
 802e964:	460e      	mov	r6, r1
  if (IS_TIM_CCXN_INSTANCE(TIMx, TIM_CHANNEL_2))
 802e966:	4298      	cmp	r0, r3
 802e968:	d129      	bne.n	802e9be <TIM_OC2_SetConfig+0x8a>
    assert_param(IS_TIM_OCN_POLARITY(OC_Config->OCNPolarity));
 802e96a:	68cb      	ldr	r3, [r1, #12]
 802e96c:	f033 0308 	bics.w	r3, r3, #8
 802e970:	d004      	beq.n	802e97c <TIM_OC2_SetConfig+0x48>
 802e972:	f641 41e9 	movw	r1, #7401	; 0x1ce9
 802e976:	481a      	ldr	r0, [pc, #104]	; (802e9e0 <TIM_OC2_SetConfig+0xac>)
 802e978:	f7f7 fc10 	bl	802619c <assert_failed>
    tmpccer |= (OC_Config->OCNPolarity << 4U);
 802e97c:	68f3      	ldr	r3, [r6, #12]
    tmpccer &= ~TIM_CCER_CC2NP;
 802e97e:	f025 0580 	bic.w	r5, r5, #128	; 0x80
    tmpccer |= (OC_Config->OCNPolarity << 4U);
 802e982:	ea45 1503 	orr.w	r5, r5, r3, lsl #4
    tmpccer &= ~TIM_CCER_CC2NE;
 802e986:	f025 0540 	bic.w	r5, r5, #64	; 0x40
    assert_param(IS_TIM_OCNIDLE_STATE(OC_Config->OCNIdleState));
 802e98a:	69b3      	ldr	r3, [r6, #24]
 802e98c:	f433 7300 	bics.w	r3, r3, #512	; 0x200
 802e990:	d004      	beq.n	802e99c <TIM_OC2_SetConfig+0x68>
 802e992:	f641 41f7 	movw	r1, #7415	; 0x1cf7
 802e996:	4812      	ldr	r0, [pc, #72]	; (802e9e0 <TIM_OC2_SetConfig+0xac>)
 802e998:	f7f7 fc00 	bl	802619c <assert_failed>
    assert_param(IS_TIM_OCIDLE_STATE(OC_Config->OCIdleState));
 802e99c:	6973      	ldr	r3, [r6, #20]
 802e99e:	f433 7380 	bics.w	r3, r3, #256	; 0x100
 802e9a2:	d004      	beq.n	802e9ae <TIM_OC2_SetConfig+0x7a>
 802e9a4:	f641 41f8 	movw	r1, #7416	; 0x1cf8
 802e9a8:	480d      	ldr	r0, [pc, #52]	; (802e9e0 <TIM_OC2_SetConfig+0xac>)
 802e9aa:	f7f7 fbf7 	bl	802619c <assert_failed>
    tmpcr2 |= (OC_Config->OCNIdleState << 2U);
 802e9ae:	e9d6 3205 	ldrd	r3, r2, [r6, #20]
    tmpcr2 &= ~TIM_CR2_OIS2N;
 802e9b2:	f428 6840 	bic.w	r8, r8, #3072	; 0xc00
    tmpcr2 |= (OC_Config->OCNIdleState << 2U);
 802e9b6:	4313      	orrs	r3, r2
 802e9b8:	ea48 0883 	orr.w	r8, r8, r3, lsl #2
 802e9bc:	e005      	b.n	802e9ca <TIM_OC2_SetConfig+0x96>
  if (IS_TIM_BREAK_INSTANCE(TIMx))
 802e9be:	4b09      	ldr	r3, [pc, #36]	; (802e9e4 <TIM_OC2_SetConfig+0xb0>)
 802e9c0:	4298      	cmp	r0, r3
 802e9c2:	d0e2      	beq.n	802e98a <TIM_OC2_SetConfig+0x56>
 802e9c4:	4b08      	ldr	r3, [pc, #32]	; (802e9e8 <TIM_OC2_SetConfig+0xb4>)
 802e9c6:	429c      	cmp	r4, r3
 802e9c8:	d0df      	beq.n	802e98a <TIM_OC2_SetConfig+0x56>
  TIMx->CCR2 = OC_Config->Pulse;
 802e9ca:	6873      	ldr	r3, [r6, #4]
  TIMx->CR2 = tmpcr2;
 802e9cc:	f8c4 8004 	str.w	r8, [r4, #4]
  TIMx->CCMR1 = tmpccmrx;
 802e9d0:	61a7      	str	r7, [r4, #24]
  TIMx->CCR2 = OC_Config->Pulse;
 802e9d2:	63a3      	str	r3, [r4, #56]	; 0x38
  TIMx->CCER = tmpccer;
 802e9d4:	6225      	str	r5, [r4, #32]
}
 802e9d6:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 802e9da:	bf00      	nop
 802e9dc:	40012c00 	.word	0x40012c00
 802e9e0:	0803410e 	.word	0x0803410e
 802e9e4:	40014400 	.word	0x40014400
 802e9e8:	40014800 	.word	0x40014800

0802e9ec <HAL_TIM_PWM_ConfigChannel>:
  assert_param(IS_TIM_CHANNELS(Channel));
 802e9ec:	2a14      	cmp	r2, #20
{
 802e9ee:	b570      	push	{r4, r5, r6, lr}
 802e9f0:	4604      	mov	r4, r0
 802e9f2:	460d      	mov	r5, r1
 802e9f4:	4616      	mov	r6, r2
  assert_param(IS_TIM_CHANNELS(Channel));
 802e9f6:	d907      	bls.n	802ea08 <HAL_TIM_PWM_ConfigChannel+0x1c>
 802e9f8:	2a3c      	cmp	r2, #60	; 0x3c
 802e9fa:	d009      	beq.n	802ea10 <HAL_TIM_PWM_ConfigChannel+0x24>
 802e9fc:	f241 01ef 	movw	r1, #4335	; 0x10ef
 802ea00:	4886      	ldr	r0, [pc, #536]	; (802ec1c <HAL_TIM_PWM_ConfigChannel+0x230>)
 802ea02:	f7f7 fbcb 	bl	802619c <assert_failed>
 802ea06:	e003      	b.n	802ea10 <HAL_TIM_PWM_ConfigChannel+0x24>
 802ea08:	4b85      	ldr	r3, [pc, #532]	; (802ec20 <HAL_TIM_PWM_ConfigChannel+0x234>)
 802ea0a:	40d3      	lsrs	r3, r2
 802ea0c:	07db      	lsls	r3, r3, #31
 802ea0e:	d5f5      	bpl.n	802e9fc <HAL_TIM_PWM_ConfigChannel+0x10>
  assert_param(IS_TIM_PWM_MODE(sConfig->OCMode));
 802ea10:	682b      	ldr	r3, [r5, #0]
 802ea12:	f023 0210 	bic.w	r2, r3, #16
 802ea16:	f423 3380 	bic.w	r3, r3, #65536	; 0x10000
 802ea1a:	f023 0310 	bic.w	r3, r3, #16
 802ea1e:	2b60      	cmp	r3, #96	; 0x60
 802ea20:	d007      	beq.n	802ea32 <HAL_TIM_PWM_ConfigChannel+0x46>
 802ea22:	4b80      	ldr	r3, [pc, #512]	; (802ec24 <HAL_TIM_PWM_ConfigChannel+0x238>)
 802ea24:	429a      	cmp	r2, r3
 802ea26:	d004      	beq.n	802ea32 <HAL_TIM_PWM_ConfigChannel+0x46>
 802ea28:	f241 01f0 	movw	r1, #4336	; 0x10f0
 802ea2c:	487b      	ldr	r0, [pc, #492]	; (802ec1c <HAL_TIM_PWM_ConfigChannel+0x230>)
 802ea2e:	f7f7 fbb5 	bl	802619c <assert_failed>
  assert_param(IS_TIM_OC_POLARITY(sConfig->OCPolarity));
 802ea32:	68ab      	ldr	r3, [r5, #8]
 802ea34:	f033 0302 	bics.w	r3, r3, #2
 802ea38:	d004      	beq.n	802ea44 <HAL_TIM_PWM_ConfigChannel+0x58>
 802ea3a:	f241 01f1 	movw	r1, #4337	; 0x10f1
 802ea3e:	4877      	ldr	r0, [pc, #476]	; (802ec1c <HAL_TIM_PWM_ConfigChannel+0x230>)
 802ea40:	f7f7 fbac 	bl	802619c <assert_failed>
  assert_param(IS_TIM_FAST_STATE(sConfig->OCFastMode));
 802ea44:	692b      	ldr	r3, [r5, #16]
 802ea46:	f033 0304 	bics.w	r3, r3, #4
 802ea4a:	d004      	beq.n	802ea56 <HAL_TIM_PWM_ConfigChannel+0x6a>
 802ea4c:	f241 01f2 	movw	r1, #4338	; 0x10f2
 802ea50:	4872      	ldr	r0, [pc, #456]	; (802ec1c <HAL_TIM_PWM_ConfigChannel+0x230>)
 802ea52:	f7f7 fba3 	bl	802619c <assert_failed>
  __HAL_LOCK(htim);
 802ea56:	f894 303c 	ldrb.w	r3, [r4, #60]	; 0x3c
 802ea5a:	2b01      	cmp	r3, #1
 802ea5c:	f000 80dc 	beq.w	802ec18 <HAL_TIM_PWM_ConfigChannel+0x22c>
 802ea60:	2001      	movs	r0, #1
  switch (Channel)
 802ea62:	2e0c      	cmp	r6, #12
  __HAL_LOCK(htim);
 802ea64:	f884 003c 	strb.w	r0, [r4, #60]	; 0x3c
  switch (Channel)
 802ea68:	f000 8099 	beq.w	802eb9e <HAL_TIM_PWM_ConfigChannel+0x1b2>
 802ea6c:	d808      	bhi.n	802ea80 <HAL_TIM_PWM_ConfigChannel+0x94>
 802ea6e:	2e04      	cmp	r6, #4
 802ea70:	d051      	beq.n	802eb16 <HAL_TIM_PWM_ConfigChannel+0x12a>
 802ea72:	2e08      	cmp	r6, #8
 802ea74:	d071      	beq.n	802eb5a <HAL_TIM_PWM_ConfigChannel+0x16e>
 802ea76:	b31e      	cbz	r6, 802eac0 <HAL_TIM_PWM_ConfigChannel+0xd4>
  __HAL_UNLOCK(htim);
 802ea78:	2300      	movs	r3, #0
 802ea7a:	f884 303c 	strb.w	r3, [r4, #60]	; 0x3c
}
 802ea7e:	bd70      	pop	{r4, r5, r6, pc}
  switch (Channel)
 802ea80:	2e10      	cmp	r6, #16
 802ea82:	f000 80ae 	beq.w	802ebe2 <HAL_TIM_PWM_ConfigChannel+0x1f6>
 802ea86:	2e14      	cmp	r6, #20
 802ea88:	d1f6      	bne.n	802ea78 <HAL_TIM_PWM_ConfigChannel+0x8c>
      assert_param(IS_TIM_CC6_INSTANCE(htim->Instance));
 802ea8a:	6822      	ldr	r2, [r4, #0]
 802ea8c:	4b66      	ldr	r3, [pc, #408]	; (802ec28 <HAL_TIM_PWM_ConfigChannel+0x23c>)
 802ea8e:	429a      	cmp	r2, r3
 802ea90:	d004      	beq.n	802ea9c <HAL_TIM_PWM_ConfigChannel+0xb0>
 802ea92:	f241 1151 	movw	r1, #4433	; 0x1151
 802ea96:	4861      	ldr	r0, [pc, #388]	; (802ec1c <HAL_TIM_PWM_ConfigChannel+0x230>)
 802ea98:	f7f7 fb80 	bl	802619c <assert_failed>
      TIM_OC6_SetConfig(htim->Instance, sConfig);
 802ea9c:	4629      	mov	r1, r5
 802ea9e:	6820      	ldr	r0, [r4, #0]
 802eaa0:	f7ff fd3c 	bl	802e51c <TIM_OC6_SetConfig>
      htim->Instance->CCMR3 |= TIM_CCMR3_OC6PE;
 802eaa4:	6823      	ldr	r3, [r4, #0]
      htim->Instance->CCMR3 |= sConfig->OCFastMode << 8U;
 802eaa6:	6929      	ldr	r1, [r5, #16]
      htim->Instance->CCMR3 |= TIM_CCMR3_OC6PE;
 802eaa8:	6d1a      	ldr	r2, [r3, #80]	; 0x50
 802eaaa:	f442 6200 	orr.w	r2, r2, #2048	; 0x800
 802eaae:	651a      	str	r2, [r3, #80]	; 0x50
      htim->Instance->CCMR3 &= ~TIM_CCMR3_OC6FE;
 802eab0:	6d1a      	ldr	r2, [r3, #80]	; 0x50
 802eab2:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 802eab6:	651a      	str	r2, [r3, #80]	; 0x50
      htim->Instance->CCMR3 |= sConfig->OCFastMode << 8U;
 802eab8:	6d1a      	ldr	r2, [r3, #80]	; 0x50
 802eaba:	ea42 2201 	orr.w	r2, r2, r1, lsl #8
 802eabe:	e0a9      	b.n	802ec14 <HAL_TIM_PWM_ConfigChannel+0x228>
      assert_param(IS_TIM_CC1_INSTANCE(htim->Instance));
 802eac0:	6823      	ldr	r3, [r4, #0]
 802eac2:	4a59      	ldr	r2, [pc, #356]	; (802ec28 <HAL_TIM_PWM_ConfigChannel+0x23c>)
 802eac4:	4293      	cmp	r3, r2
 802eac6:	d013      	beq.n	802eaf0 <HAL_TIM_PWM_ConfigChannel+0x104>
 802eac8:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 802eacc:	d010      	beq.n	802eaf0 <HAL_TIM_PWM_ConfigChannel+0x104>
 802eace:	f5a2 3294 	sub.w	r2, r2, #75776	; 0x12800
 802ead2:	4293      	cmp	r3, r2
 802ead4:	d00c      	beq.n	802eaf0 <HAL_TIM_PWM_ConfigChannel+0x104>
 802ead6:	f502 32a0 	add.w	r2, r2, #81920	; 0x14000
 802eada:	4293      	cmp	r3, r2
 802eadc:	d008      	beq.n	802eaf0 <HAL_TIM_PWM_ConfigChannel+0x104>
 802eade:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 802eae2:	4293      	cmp	r3, r2
 802eae4:	d004      	beq.n	802eaf0 <HAL_TIM_PWM_ConfigChannel+0x104>
 802eae6:	f241 01fc 	movw	r1, #4348	; 0x10fc
 802eaea:	484c      	ldr	r0, [pc, #304]	; (802ec1c <HAL_TIM_PWM_ConfigChannel+0x230>)
 802eaec:	f7f7 fb56 	bl	802619c <assert_failed>
      TIM_OC1_SetConfig(htim->Instance, sConfig);
 802eaf0:	4629      	mov	r1, r5
 802eaf2:	6820      	ldr	r0, [r4, #0]
 802eaf4:	f7ff fd3e 	bl	802e574 <TIM_OC1_SetConfig>
      htim->Instance->CCMR1 |= TIM_CCMR1_OC1PE;
 802eaf8:	6823      	ldr	r3, [r4, #0]
      htim->Instance->CCMR1 |= sConfig->OCFastMode;
 802eafa:	6929      	ldr	r1, [r5, #16]
      htim->Instance->CCMR1 |= TIM_CCMR1_OC1PE;
 802eafc:	699a      	ldr	r2, [r3, #24]
 802eafe:	f042 0208 	orr.w	r2, r2, #8
 802eb02:	619a      	str	r2, [r3, #24]
      htim->Instance->CCMR1 &= ~TIM_CCMR1_OC1FE;
 802eb04:	699a      	ldr	r2, [r3, #24]
 802eb06:	f022 0204 	bic.w	r2, r2, #4
 802eb0a:	619a      	str	r2, [r3, #24]
      htim->Instance->CCMR1 |= sConfig->OCFastMode;
 802eb0c:	699a      	ldr	r2, [r3, #24]
 802eb0e:	430a      	orrs	r2, r1
      htim->Instance->CCMR1 |= sConfig->OCFastMode << 8U;
 802eb10:	619a      	str	r2, [r3, #24]
  HAL_StatusTypeDef status = HAL_OK;
 802eb12:	2000      	movs	r0, #0
      break;
 802eb14:	e7b0      	b.n	802ea78 <HAL_TIM_PWM_ConfigChannel+0x8c>
      assert_param(IS_TIM_CC2_INSTANCE(htim->Instance));
 802eb16:	6823      	ldr	r3, [r4, #0]
 802eb18:	4a43      	ldr	r2, [pc, #268]	; (802ec28 <HAL_TIM_PWM_ConfigChannel+0x23c>)
 802eb1a:	4293      	cmp	r3, r2
 802eb1c:	d00b      	beq.n	802eb36 <HAL_TIM_PWM_ConfigChannel+0x14a>
 802eb1e:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 802eb22:	d008      	beq.n	802eb36 <HAL_TIM_PWM_ConfigChannel+0x14a>
 802eb24:	f5a2 3294 	sub.w	r2, r2, #75776	; 0x12800
 802eb28:	4293      	cmp	r3, r2
 802eb2a:	d004      	beq.n	802eb36 <HAL_TIM_PWM_ConfigChannel+0x14a>
 802eb2c:	f241 110d 	movw	r1, #4365	; 0x110d
 802eb30:	483a      	ldr	r0, [pc, #232]	; (802ec1c <HAL_TIM_PWM_ConfigChannel+0x230>)
 802eb32:	f7f7 fb33 	bl	802619c <assert_failed>
      TIM_OC2_SetConfig(htim->Instance, sConfig);
 802eb36:	4629      	mov	r1, r5
 802eb38:	6820      	ldr	r0, [r4, #0]
 802eb3a:	f7ff fefb 	bl	802e934 <TIM_OC2_SetConfig>
      htim->Instance->CCMR1 |= TIM_CCMR1_OC2PE;
 802eb3e:	6823      	ldr	r3, [r4, #0]
      htim->Instance->CCMR1 |= sConfig->OCFastMode << 8U;
 802eb40:	6929      	ldr	r1, [r5, #16]
      htim->Instance->CCMR1 |= TIM_CCMR1_OC2PE;
 802eb42:	699a      	ldr	r2, [r3, #24]
 802eb44:	f442 6200 	orr.w	r2, r2, #2048	; 0x800
 802eb48:	619a      	str	r2, [r3, #24]
      htim->Instance->CCMR1 &= ~TIM_CCMR1_OC2FE;
 802eb4a:	699a      	ldr	r2, [r3, #24]
 802eb4c:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 802eb50:	619a      	str	r2, [r3, #24]
      htim->Instance->CCMR1 |= sConfig->OCFastMode << 8U;
 802eb52:	699a      	ldr	r2, [r3, #24]
 802eb54:	ea42 2201 	orr.w	r2, r2, r1, lsl #8
 802eb58:	e7da      	b.n	802eb10 <HAL_TIM_PWM_ConfigChannel+0x124>
      assert_param(IS_TIM_CC3_INSTANCE(htim->Instance));
 802eb5a:	6823      	ldr	r3, [r4, #0]
 802eb5c:	4a32      	ldr	r2, [pc, #200]	; (802ec28 <HAL_TIM_PWM_ConfigChannel+0x23c>)
 802eb5e:	4293      	cmp	r3, r2
 802eb60:	d00b      	beq.n	802eb7a <HAL_TIM_PWM_ConfigChannel+0x18e>
 802eb62:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 802eb66:	d008      	beq.n	802eb7a <HAL_TIM_PWM_ConfigChannel+0x18e>
 802eb68:	f5a2 3294 	sub.w	r2, r2, #75776	; 0x12800
 802eb6c:	4293      	cmp	r3, r2
 802eb6e:	d004      	beq.n	802eb7a <HAL_TIM_PWM_ConfigChannel+0x18e>
 802eb70:	f241 111e 	movw	r1, #4382	; 0x111e
 802eb74:	4829      	ldr	r0, [pc, #164]	; (802ec1c <HAL_TIM_PWM_ConfigChannel+0x230>)
 802eb76:	f7f7 fb11 	bl	802619c <assert_failed>
      TIM_OC3_SetConfig(htim->Instance, sConfig);
 802eb7a:	4629      	mov	r1, r5
 802eb7c:	6820      	ldr	r0, [r4, #0]
 802eb7e:	f7ff fd59 	bl	802e634 <TIM_OC3_SetConfig>
      htim->Instance->CCMR2 |= TIM_CCMR2_OC3PE;
 802eb82:	6823      	ldr	r3, [r4, #0]
      htim->Instance->CCMR2 |= sConfig->OCFastMode;
 802eb84:	6929      	ldr	r1, [r5, #16]
      htim->Instance->CCMR2 |= TIM_CCMR2_OC3PE;
 802eb86:	69da      	ldr	r2, [r3, #28]
 802eb88:	f042 0208 	orr.w	r2, r2, #8
 802eb8c:	61da      	str	r2, [r3, #28]
      htim->Instance->CCMR2 &= ~TIM_CCMR2_OC3FE;
 802eb8e:	69da      	ldr	r2, [r3, #28]
 802eb90:	f022 0204 	bic.w	r2, r2, #4
 802eb94:	61da      	str	r2, [r3, #28]
      htim->Instance->CCMR2 |= sConfig->OCFastMode;
 802eb96:	69da      	ldr	r2, [r3, #28]
 802eb98:	430a      	orrs	r2, r1
      htim->Instance->CCMR2 |= sConfig->OCFastMode << 8U;
 802eb9a:	61da      	str	r2, [r3, #28]
      break;
 802eb9c:	e7b9      	b.n	802eb12 <HAL_TIM_PWM_ConfigChannel+0x126>
      assert_param(IS_TIM_CC4_INSTANCE(htim->Instance));
 802eb9e:	6823      	ldr	r3, [r4, #0]
 802eba0:	4a21      	ldr	r2, [pc, #132]	; (802ec28 <HAL_TIM_PWM_ConfigChannel+0x23c>)
 802eba2:	4293      	cmp	r3, r2
 802eba4:	d00b      	beq.n	802ebbe <HAL_TIM_PWM_ConfigChannel+0x1d2>
 802eba6:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 802ebaa:	d008      	beq.n	802ebbe <HAL_TIM_PWM_ConfigChannel+0x1d2>
 802ebac:	f5a2 3294 	sub.w	r2, r2, #75776	; 0x12800
 802ebb0:	4293      	cmp	r3, r2
 802ebb2:	d004      	beq.n	802ebbe <HAL_TIM_PWM_ConfigChannel+0x1d2>
 802ebb4:	f241 112f 	movw	r1, #4399	; 0x112f
 802ebb8:	4818      	ldr	r0, [pc, #96]	; (802ec1c <HAL_TIM_PWM_ConfigChannel+0x230>)
 802ebba:	f7f7 faef 	bl	802619c <assert_failed>
      TIM_OC4_SetConfig(htim->Instance, sConfig);
 802ebbe:	4629      	mov	r1, r5
 802ebc0:	6820      	ldr	r0, [r4, #0]
 802ebc2:	f7ff fd91 	bl	802e6e8 <TIM_OC4_SetConfig>
      htim->Instance->CCMR2 |= TIM_CCMR2_OC4PE;
 802ebc6:	6823      	ldr	r3, [r4, #0]
      htim->Instance->CCMR2 |= sConfig->OCFastMode << 8U;
 802ebc8:	6929      	ldr	r1, [r5, #16]
      htim->Instance->CCMR2 |= TIM_CCMR2_OC4PE;
 802ebca:	69da      	ldr	r2, [r3, #28]
 802ebcc:	f442 6200 	orr.w	r2, r2, #2048	; 0x800
 802ebd0:	61da      	str	r2, [r3, #28]
      htim->Instance->CCMR2 &= ~TIM_CCMR2_OC4FE;
 802ebd2:	69da      	ldr	r2, [r3, #28]
 802ebd4:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 802ebd8:	61da      	str	r2, [r3, #28]
      htim->Instance->CCMR2 |= sConfig->OCFastMode << 8U;
 802ebda:	69da      	ldr	r2, [r3, #28]
 802ebdc:	ea42 2201 	orr.w	r2, r2, r1, lsl #8
 802ebe0:	e7db      	b.n	802eb9a <HAL_TIM_PWM_ConfigChannel+0x1ae>
      assert_param(IS_TIM_CC5_INSTANCE(htim->Instance));
 802ebe2:	6822      	ldr	r2, [r4, #0]
 802ebe4:	4b10      	ldr	r3, [pc, #64]	; (802ec28 <HAL_TIM_PWM_ConfigChannel+0x23c>)
 802ebe6:	429a      	cmp	r2, r3
 802ebe8:	d004      	beq.n	802ebf4 <HAL_TIM_PWM_ConfigChannel+0x208>
 802ebea:	f44f 518a 	mov.w	r1, #4416	; 0x1140
 802ebee:	480b      	ldr	r0, [pc, #44]	; (802ec1c <HAL_TIM_PWM_ConfigChannel+0x230>)
 802ebf0:	f7f7 fad4 	bl	802619c <assert_failed>
      TIM_OC5_SetConfig(htim->Instance, sConfig);
 802ebf4:	4629      	mov	r1, r5
 802ebf6:	6820      	ldr	r0, [r4, #0]
 802ebf8:	f7ff fc64 	bl	802e4c4 <TIM_OC5_SetConfig>
      htim->Instance->CCMR3 |= TIM_CCMR3_OC5PE;
 802ebfc:	6823      	ldr	r3, [r4, #0]
      htim->Instance->CCMR3 |= sConfig->OCFastMode;
 802ebfe:	6929      	ldr	r1, [r5, #16]
      htim->Instance->CCMR3 |= TIM_CCMR3_OC5PE;
 802ec00:	6d1a      	ldr	r2, [r3, #80]	; 0x50
 802ec02:	f042 0208 	orr.w	r2, r2, #8
 802ec06:	651a      	str	r2, [r3, #80]	; 0x50
      htim->Instance->CCMR3 &= ~TIM_CCMR3_OC5FE;
 802ec08:	6d1a      	ldr	r2, [r3, #80]	; 0x50
 802ec0a:	f022 0204 	bic.w	r2, r2, #4
 802ec0e:	651a      	str	r2, [r3, #80]	; 0x50
      htim->Instance->CCMR3 |= sConfig->OCFastMode;
 802ec10:	6d1a      	ldr	r2, [r3, #80]	; 0x50
 802ec12:	430a      	orrs	r2, r1
      htim->Instance->CCMR3 |= sConfig->OCFastMode << 8U;
 802ec14:	651a      	str	r2, [r3, #80]	; 0x50
 802ec16:	e77c      	b.n	802eb12 <HAL_TIM_PWM_ConfigChannel+0x126>
  __HAL_LOCK(htim);
 802ec18:	2002      	movs	r0, #2
 802ec1a:	e730      	b.n	802ea7e <HAL_TIM_PWM_ConfigChannel+0x92>
 802ec1c:	0803410e 	.word	0x0803410e
 802ec20:	00111111 	.word	0x00111111
 802ec24:	00010040 	.word	0x00010040
 802ec28:	40012c00 	.word	0x40012c00

0802ec2c <TIM_CCxChannelCmd>:
void TIM_CCxChannelCmd(TIM_TypeDef *TIMx, uint32_t Channel, uint32_t ChannelState)
{
  uint32_t tmp;

  /* Check the parameters */
  assert_param(IS_TIM_CC1_INSTANCE(TIMx));
 802ec2c:	4b1b      	ldr	r3, [pc, #108]	; (802ec9c <TIM_CCxChannelCmd+0x70>)
{
 802ec2e:	b570      	push	{r4, r5, r6, lr}
  assert_param(IS_TIM_CC1_INSTANCE(TIMx));
 802ec30:	4298      	cmp	r0, r3
{
 802ec32:	4604      	mov	r4, r0
 802ec34:	460d      	mov	r5, r1
 802ec36:	4616      	mov	r6, r2
  assert_param(IS_TIM_CC1_INSTANCE(TIMx));
 802ec38:	d013      	beq.n	802ec62 <TIM_CCxChannelCmd+0x36>
 802ec3a:	f1b0 4f80 	cmp.w	r0, #1073741824	; 0x40000000
 802ec3e:	d010      	beq.n	802ec62 <TIM_CCxChannelCmd+0x36>
 802ec40:	f5a3 3394 	sub.w	r3, r3, #75776	; 0x12800
 802ec44:	4298      	cmp	r0, r3
 802ec46:	d00c      	beq.n	802ec62 <TIM_CCxChannelCmd+0x36>
 802ec48:	f503 33a0 	add.w	r3, r3, #81920	; 0x14000
 802ec4c:	4298      	cmp	r0, r3
 802ec4e:	d008      	beq.n	802ec62 <TIM_CCxChannelCmd+0x36>
 802ec50:	f503 6380 	add.w	r3, r3, #1024	; 0x400
 802ec54:	4298      	cmp	r0, r3
 802ec56:	d004      	beq.n	802ec62 <TIM_CCxChannelCmd+0x36>
 802ec58:	f641 71f0 	movw	r1, #8176	; 0x1ff0
 802ec5c:	4810      	ldr	r0, [pc, #64]	; (802eca0 <TIM_CCxChannelCmd+0x74>)
 802ec5e:	f7f7 fa9d 	bl	802619c <assert_failed>
  assert_param(IS_TIM_CHANNELS(Channel));
 802ec62:	2d14      	cmp	r5, #20
 802ec64:	d907      	bls.n	802ec76 <TIM_CCxChannelCmd+0x4a>
 802ec66:	2d3c      	cmp	r5, #60	; 0x3c
 802ec68:	d009      	beq.n	802ec7e <TIM_CCxChannelCmd+0x52>
 802ec6a:	f641 71f1 	movw	r1, #8177	; 0x1ff1
 802ec6e:	480c      	ldr	r0, [pc, #48]	; (802eca0 <TIM_CCxChannelCmd+0x74>)
 802ec70:	f7f7 fa94 	bl	802619c <assert_failed>
 802ec74:	e003      	b.n	802ec7e <TIM_CCxChannelCmd+0x52>
 802ec76:	4b0b      	ldr	r3, [pc, #44]	; (802eca4 <TIM_CCxChannelCmd+0x78>)
 802ec78:	40eb      	lsrs	r3, r5
 802ec7a:	07db      	lsls	r3, r3, #31
 802ec7c:	d5f5      	bpl.n	802ec6a <TIM_CCxChannelCmd+0x3e>

  tmp = TIM_CCER_CC1E << (Channel & 0x1FU); /* 0x1FU = 31 bits max shift */
 802ec7e:	2201      	movs	r2, #1

  /* Reset the CCxE Bit */
  TIMx->CCER &= ~tmp;
 802ec80:	6a23      	ldr	r3, [r4, #32]
  tmp = TIM_CCER_CC1E << (Channel & 0x1FU); /* 0x1FU = 31 bits max shift */
 802ec82:	f005 051f 	and.w	r5, r5, #31
 802ec86:	40aa      	lsls	r2, r5
  TIMx->CCER &= ~tmp;
 802ec88:	ea23 0302 	bic.w	r3, r3, r2
 802ec8c:	6223      	str	r3, [r4, #32]

  /* Set or reset the CCxE Bit */
  TIMx->CCER |= (uint32_t)(ChannelState << (Channel & 0x1FU)); /* 0x1FU = 31 bits max shift */
 802ec8e:	6a22      	ldr	r2, [r4, #32]
 802ec90:	fa06 f505 	lsl.w	r5, r6, r5
 802ec94:	4315      	orrs	r5, r2
 802ec96:	6225      	str	r5, [r4, #32]
}
 802ec98:	bd70      	pop	{r4, r5, r6, pc}
 802ec9a:	bf00      	nop
 802ec9c:	40012c00 	.word	0x40012c00
 802eca0:	0803410e 	.word	0x0803410e
 802eca4:	00111111 	.word	0x00111111

0802eca8 <HAL_TIM_PWM_Start>:
{
 802eca8:	b538      	push	{r3, r4, r5, lr}
  assert_param(IS_TIM_CCX_INSTANCE(htim->Instance, Channel));
 802ecaa:	4a4e      	ldr	r2, [pc, #312]	; (802ede4 <HAL_TIM_PWM_Start+0x13c>)
 802ecac:	6803      	ldr	r3, [r0, #0]
{
 802ecae:	4605      	mov	r5, r0
  assert_param(IS_TIM_CCX_INSTANCE(htim->Instance, Channel));
 802ecb0:	4293      	cmp	r3, r2
{
 802ecb2:	460c      	mov	r4, r1
  assert_param(IS_TIM_CCX_INSTANCE(htim->Instance, Channel));
 802ecb4:	d147      	bne.n	802ed46 <HAL_TIM_PWM_Start+0x9e>
 802ecb6:	b929      	cbnz	r1, 802ecc4 <HAL_TIM_PWM_Start+0x1c>
  if (TIM_CHANNEL_STATE_GET(htim, Channel) != HAL_TIM_CHANNEL_STATE_READY)
 802ecb8:	f895 303e 	ldrb.w	r3, [r5, #62]	; 0x3e
 802ecbc:	2b01      	cmp	r3, #1
 802ecbe:	d016      	beq.n	802ecee <HAL_TIM_PWM_Start+0x46>
    return HAL_ERROR;
 802ecc0:	2001      	movs	r0, #1
}
 802ecc2:	bd38      	pop	{r3, r4, r5, pc}
  assert_param(IS_TIM_CCX_INSTANCE(htim->Instance, Channel));
 802ecc4:	2904      	cmp	r1, #4
 802ecc6:	d107      	bne.n	802ecd8 <HAL_TIM_PWM_Start+0x30>
  if (TIM_CHANNEL_STATE_GET(htim, Channel) != HAL_TIM_CHANNEL_STATE_READY)
 802ecc8:	f895 303f 	ldrb.w	r3, [r5, #63]	; 0x3f
 802eccc:	2b01      	cmp	r3, #1
 802ecce:	d1f7      	bne.n	802ecc0 <HAL_TIM_PWM_Start+0x18>
  TIM_CHANNEL_STATE_SET(htim, Channel, HAL_TIM_CHANNEL_STATE_BUSY);
 802ecd0:	2302      	movs	r3, #2
 802ecd2:	f885 303f 	strb.w	r3, [r5, #63]	; 0x3f
 802ecd6:	e00d      	b.n	802ecf4 <HAL_TIM_PWM_Start+0x4c>
  assert_param(IS_TIM_CCX_INSTANCE(htim->Instance, Channel));
 802ecd8:	2908      	cmp	r1, #8
 802ecda:	d125      	bne.n	802ed28 <HAL_TIM_PWM_Start+0x80>
  if (TIM_CHANNEL_STATE_GET(htim, Channel) != HAL_TIM_CHANNEL_STATE_READY)
 802ecdc:	f895 3040 	ldrb.w	r3, [r5, #64]	; 0x40
 802ece0:	3b01      	subs	r3, #1
 802ece2:	bf18      	it	ne
 802ece4:	2301      	movne	r3, #1
 802ece6:	2b00      	cmp	r3, #0
 802ece8:	d1ea      	bne.n	802ecc0 <HAL_TIM_PWM_Start+0x18>
  TIM_CHANNEL_STATE_SET(htim, Channel, HAL_TIM_CHANNEL_STATE_BUSY);
 802ecea:	2c00      	cmp	r4, #0
 802ecec:	d153      	bne.n	802ed96 <HAL_TIM_PWM_Start+0xee>
 802ecee:	2302      	movs	r3, #2
 802ecf0:	f885 303e 	strb.w	r3, [r5, #62]	; 0x3e
  TIM_CCxChannelCmd(htim->Instance, Channel, TIM_CCx_ENABLE);
 802ecf4:	4621      	mov	r1, r4
 802ecf6:	2201      	movs	r2, #1
 802ecf8:	6828      	ldr	r0, [r5, #0]
 802ecfa:	f7ff ff97 	bl	802ec2c <TIM_CCxChannelCmd>
  if (IS_TIM_BREAK_INSTANCE(htim->Instance) != RESET)
 802ecfe:	682b      	ldr	r3, [r5, #0]
 802ed00:	4938      	ldr	r1, [pc, #224]	; (802ede4 <HAL_TIM_PWM_Start+0x13c>)
 802ed02:	428b      	cmp	r3, r1
 802ed04:	d05a      	beq.n	802edbc <HAL_TIM_PWM_Start+0x114>
 802ed06:	4a38      	ldr	r2, [pc, #224]	; (802ede8 <HAL_TIM_PWM_Start+0x140>)
 802ed08:	4293      	cmp	r3, r2
 802ed0a:	d057      	beq.n	802edbc <HAL_TIM_PWM_Start+0x114>
 802ed0c:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 802ed10:	4293      	cmp	r3, r2
 802ed12:	d053      	beq.n	802edbc <HAL_TIM_PWM_Start+0x114>
  if (IS_TIM_SLAVE_INSTANCE(htim->Instance))
 802ed14:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 802ed18:	d157      	bne.n	802edca <HAL_TIM_PWM_Start+0x122>
    tmpsmcr = htim->Instance->SMCR & TIM_SMCR_SMS;
 802ed1a:	6899      	ldr	r1, [r3, #8]
 802ed1c:	4a33      	ldr	r2, [pc, #204]	; (802edec <HAL_TIM_PWM_Start+0x144>)
 802ed1e:	400a      	ands	r2, r1
    if (!IS_TIM_SLAVEMODE_TRIGGER_ENABLED(tmpsmcr))
 802ed20:	2a06      	cmp	r2, #6
 802ed22:	d15a      	bne.n	802edda <HAL_TIM_PWM_Start+0x132>
  return HAL_OK;
 802ed24:	2000      	movs	r0, #0
 802ed26:	e7cc      	b.n	802ecc2 <HAL_TIM_PWM_Start+0x1a>
  assert_param(IS_TIM_CCX_INSTANCE(htim->Instance, Channel));
 802ed28:	290c      	cmp	r1, #12
 802ed2a:	d102      	bne.n	802ed32 <HAL_TIM_PWM_Start+0x8a>
  if (TIM_CHANNEL_STATE_GET(htim, Channel) != HAL_TIM_CHANNEL_STATE_READY)
 802ed2c:	f895 3041 	ldrb.w	r3, [r5, #65]	; 0x41
 802ed30:	e7d6      	b.n	802ece0 <HAL_TIM_PWM_Start+0x38>
  assert_param(IS_TIM_CCX_INSTANCE(htim->Instance, Channel));
 802ed32:	2910      	cmp	r1, #16
 802ed34:	d102      	bne.n	802ed3c <HAL_TIM_PWM_Start+0x94>
  if (TIM_CHANNEL_STATE_GET(htim, Channel) != HAL_TIM_CHANNEL_STATE_READY)
 802ed36:	f895 3042 	ldrb.w	r3, [r5, #66]	; 0x42
 802ed3a:	e7d1      	b.n	802ece0 <HAL_TIM_PWM_Start+0x38>
  assert_param(IS_TIM_CCX_INSTANCE(htim->Instance, Channel));
 802ed3c:	2914      	cmp	r1, #20
 802ed3e:	d10d      	bne.n	802ed5c <HAL_TIM_PWM_Start+0xb4>
  if (TIM_CHANNEL_STATE_GET(htim, Channel) != HAL_TIM_CHANNEL_STATE_READY)
 802ed40:	f895 3043 	ldrb.w	r3, [r5, #67]	; 0x43
 802ed44:	e7cc      	b.n	802ece0 <HAL_TIM_PWM_Start+0x38>
  assert_param(IS_TIM_CCX_INSTANCE(htim->Instance, Channel));
 802ed46:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 802ed4a:	d117      	bne.n	802ed7c <HAL_TIM_PWM_Start+0xd4>
 802ed4c:	2c00      	cmp	r4, #0
 802ed4e:	d0b3      	beq.n	802ecb8 <HAL_TIM_PWM_Start+0x10>
 802ed50:	2c04      	cmp	r4, #4
 802ed52:	d0b9      	beq.n	802ecc8 <HAL_TIM_PWM_Start+0x20>
 802ed54:	2c08      	cmp	r4, #8
 802ed56:	d0c1      	beq.n	802ecdc <HAL_TIM_PWM_Start+0x34>
 802ed58:	2c0c      	cmp	r4, #12
 802ed5a:	d0e7      	beq.n	802ed2c <HAL_TIM_PWM_Start+0x84>
 802ed5c:	f44f 61b9 	mov.w	r1, #1480	; 0x5c8
 802ed60:	4823      	ldr	r0, [pc, #140]	; (802edf0 <HAL_TIM_PWM_Start+0x148>)
 802ed62:	f7f7 fa1b 	bl	802619c <assert_failed>
  if (TIM_CHANNEL_STATE_GET(htim, Channel) != HAL_TIM_CHANNEL_STATE_READY)
 802ed66:	2c00      	cmp	r4, #0
 802ed68:	d0a6      	beq.n	802ecb8 <HAL_TIM_PWM_Start+0x10>
 802ed6a:	2c04      	cmp	r4, #4
 802ed6c:	d0ac      	beq.n	802ecc8 <HAL_TIM_PWM_Start+0x20>
 802ed6e:	2c08      	cmp	r4, #8
 802ed70:	d0b4      	beq.n	802ecdc <HAL_TIM_PWM_Start+0x34>
 802ed72:	2c0c      	cmp	r4, #12
 802ed74:	d0da      	beq.n	802ed2c <HAL_TIM_PWM_Start+0x84>
 802ed76:	2c10      	cmp	r4, #16
 802ed78:	d1e2      	bne.n	802ed40 <HAL_TIM_PWM_Start+0x98>
 802ed7a:	e7dc      	b.n	802ed36 <HAL_TIM_PWM_Start+0x8e>
  assert_param(IS_TIM_CCX_INSTANCE(htim->Instance, Channel));
 802ed7c:	4a1d      	ldr	r2, [pc, #116]	; (802edf4 <HAL_TIM_PWM_Start+0x14c>)
 802ed7e:	4293      	cmp	r3, r2
 802ed80:	d0e4      	beq.n	802ed4c <HAL_TIM_PWM_Start+0xa4>
 802ed82:	4a19      	ldr	r2, [pc, #100]	; (802ede8 <HAL_TIM_PWM_Start+0x140>)
 802ed84:	4293      	cmp	r3, r2
 802ed86:	d102      	bne.n	802ed8e <HAL_TIM_PWM_Start+0xe6>
 802ed88:	2c00      	cmp	r4, #0
 802ed8a:	d1e7      	bne.n	802ed5c <HAL_TIM_PWM_Start+0xb4>
 802ed8c:	e794      	b.n	802ecb8 <HAL_TIM_PWM_Start+0x10>
 802ed8e:	4a1a      	ldr	r2, [pc, #104]	; (802edf8 <HAL_TIM_PWM_Start+0x150>)
 802ed90:	4293      	cmp	r3, r2
 802ed92:	d0f9      	beq.n	802ed88 <HAL_TIM_PWM_Start+0xe0>
 802ed94:	e7e2      	b.n	802ed5c <HAL_TIM_PWM_Start+0xb4>
  TIM_CHANNEL_STATE_SET(htim, Channel, HAL_TIM_CHANNEL_STATE_BUSY);
 802ed96:	2c08      	cmp	r4, #8
 802ed98:	f04f 0302 	mov.w	r3, #2
 802ed9c:	d102      	bne.n	802eda4 <HAL_TIM_PWM_Start+0xfc>
 802ed9e:	f885 3040 	strb.w	r3, [r5, #64]	; 0x40
 802eda2:	e7a7      	b.n	802ecf4 <HAL_TIM_PWM_Start+0x4c>
 802eda4:	2c0c      	cmp	r4, #12
 802eda6:	d102      	bne.n	802edae <HAL_TIM_PWM_Start+0x106>
 802eda8:	f885 3041 	strb.w	r3, [r5, #65]	; 0x41
 802edac:	e7a2      	b.n	802ecf4 <HAL_TIM_PWM_Start+0x4c>
 802edae:	2c10      	cmp	r4, #16
 802edb0:	bf0c      	ite	eq
 802edb2:	f885 3042 	strbeq.w	r3, [r5, #66]	; 0x42
 802edb6:	f885 3043 	strbne.w	r3, [r5, #67]	; 0x43
 802edba:	e79b      	b.n	802ecf4 <HAL_TIM_PWM_Start+0x4c>
    __HAL_TIM_MOE_ENABLE(htim);
 802edbc:	6c5a      	ldr	r2, [r3, #68]	; 0x44
  if (IS_TIM_SLAVE_INSTANCE(htim->Instance))
 802edbe:	428b      	cmp	r3, r1
    __HAL_TIM_MOE_ENABLE(htim);
 802edc0:	f442 4200 	orr.w	r2, r2, #32768	; 0x8000
 802edc4:	645a      	str	r2, [r3, #68]	; 0x44
  if (IS_TIM_SLAVE_INSTANCE(htim->Instance))
 802edc6:	d1a5      	bne.n	802ed14 <HAL_TIM_PWM_Start+0x6c>
 802edc8:	e7a7      	b.n	802ed1a <HAL_TIM_PWM_Start+0x72>
 802edca:	4a0a      	ldr	r2, [pc, #40]	; (802edf4 <HAL_TIM_PWM_Start+0x14c>)
 802edcc:	4293      	cmp	r3, r2
 802edce:	d0a4      	beq.n	802ed1a <HAL_TIM_PWM_Start+0x72>
    __HAL_TIM_ENABLE(htim);
 802edd0:	681a      	ldr	r2, [r3, #0]
 802edd2:	f042 0201 	orr.w	r2, r2, #1
 802edd6:	601a      	str	r2, [r3, #0]
 802edd8:	e7a4      	b.n	802ed24 <HAL_TIM_PWM_Start+0x7c>
    if (!IS_TIM_SLAVEMODE_TRIGGER_ENABLED(tmpsmcr))
 802edda:	f5b2 3f80 	cmp.w	r2, #65536	; 0x10000
 802edde:	d1f7      	bne.n	802edd0 <HAL_TIM_PWM_Start+0x128>
 802ede0:	e7a0      	b.n	802ed24 <HAL_TIM_PWM_Start+0x7c>
 802ede2:	bf00      	nop
 802ede4:	40012c00 	.word	0x40012c00
 802ede8:	40014400 	.word	0x40014400
 802edec:	00010007 	.word	0x00010007
 802edf0:	0803410e 	.word	0x0803410e
 802edf4:	40000400 	.word	0x40000400
 802edf8:	40014800 	.word	0x40014800

0802edfc <HAL_TIMEx_MasterConfigSynchronization>:
  *         mode.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_TIMEx_MasterConfigSynchronization(TIM_HandleTypeDef *htim,
                                                        const TIM_MasterConfigTypeDef *sMasterConfig)
{
 802edfc:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
  uint32_t tmpcr2;
  uint32_t tmpsmcr;

  /* Check the parameters */
  assert_param(IS_TIM_MASTER_INSTANCE(htim->Instance));
 802edfe:	4a36      	ldr	r2, [pc, #216]	; (802eed8 <HAL_TIMEx_MasterConfigSynchronization+0xdc>)
 802ee00:	6803      	ldr	r3, [r0, #0]
{
 802ee02:	4605      	mov	r5, r0
  assert_param(IS_TIM_MASTER_INSTANCE(htim->Instance));
 802ee04:	4293      	cmp	r3, r2
{
 802ee06:	460e      	mov	r6, r1
  assert_param(IS_TIM_MASTER_INSTANCE(htim->Instance));
 802ee08:	d00b      	beq.n	802ee22 <HAL_TIMEx_MasterConfigSynchronization+0x26>
 802ee0a:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 802ee0e:	d008      	beq.n	802ee22 <HAL_TIMEx_MasterConfigSynchronization+0x26>
 802ee10:	f5a2 3294 	sub.w	r2, r2, #75776	; 0x12800
 802ee14:	4293      	cmp	r3, r2
 802ee16:	d004      	beq.n	802ee22 <HAL_TIMEx_MasterConfigSynchronization+0x26>
 802ee18:	f640 0127 	movw	r1, #2087	; 0x827
 802ee1c:	482f      	ldr	r0, [pc, #188]	; (802eedc <HAL_TIMEx_MasterConfigSynchronization+0xe0>)
 802ee1e:	f7f7 f9bd 	bl	802619c <assert_failed>
  assert_param(IS_TIM_TRGO_SOURCE(sMasterConfig->MasterOutputTrigger));
 802ee22:	6833      	ldr	r3, [r6, #0]
 802ee24:	f033 0230 	bics.w	r2, r3, #48	; 0x30
 802ee28:	d009      	beq.n	802ee3e <HAL_TIMEx_MasterConfigSynchronization+0x42>
 802ee2a:	2a40      	cmp	r2, #64	; 0x40
 802ee2c:	d007      	beq.n	802ee3e <HAL_TIMEx_MasterConfigSynchronization+0x42>
 802ee2e:	f1b3 7f00 	cmp.w	r3, #33554432	; 0x2000000
 802ee32:	d004      	beq.n	802ee3e <HAL_TIMEx_MasterConfigSynchronization+0x42>
 802ee34:	f640 0128 	movw	r1, #2088	; 0x828
 802ee38:	4828      	ldr	r0, [pc, #160]	; (802eedc <HAL_TIMEx_MasterConfigSynchronization+0xe0>)
 802ee3a:	f7f7 f9af 	bl	802619c <assert_failed>
  assert_param(IS_TIM_MSM_STATE(sMasterConfig->MasterSlaveMode));
 802ee3e:	68b3      	ldr	r3, [r6, #8]
 802ee40:	f033 0380 	bics.w	r3, r3, #128	; 0x80
 802ee44:	d004      	beq.n	802ee50 <HAL_TIMEx_MasterConfigSynchronization+0x54>
 802ee46:	f640 0129 	movw	r1, #2089	; 0x829
 802ee4a:	4824      	ldr	r0, [pc, #144]	; (802eedc <HAL_TIMEx_MasterConfigSynchronization+0xe0>)
 802ee4c:	f7f7 f9a6 	bl	802619c <assert_failed>

  /* Check input state */
  __HAL_LOCK(htim);
 802ee50:	f895 303c 	ldrb.w	r3, [r5, #60]	; 0x3c
 802ee54:	2002      	movs	r0, #2
 802ee56:	2b01      	cmp	r3, #1
 802ee58:	d03d      	beq.n	802eed6 <HAL_TIMEx_MasterConfigSynchronization+0xda>
 802ee5a:	2301      	movs	r3, #1

  /* Get the TIMx SMCR register value */
  tmpsmcr = htim->Instance->SMCR;

  /* If the timer supports ADC synchronization through TRGO2, set the master mode selection 2 */
  if (IS_TIM_TRGO2_INSTANCE(htim->Instance))
 802ee5c:	4a1e      	ldr	r2, [pc, #120]	; (802eed8 <HAL_TIMEx_MasterConfigSynchronization+0xdc>)
  __HAL_LOCK(htim);
 802ee5e:	f885 303c 	strb.w	r3, [r5, #60]	; 0x3c
  tmpcr2 = htim->Instance->CR2;
 802ee62:	682b      	ldr	r3, [r5, #0]
  htim->State = HAL_TIM_STATE_BUSY;
 802ee64:	f885 003d 	strb.w	r0, [r5, #61]	; 0x3d
  if (IS_TIM_TRGO2_INSTANCE(htim->Instance))
 802ee68:	4293      	cmp	r3, r2
  tmpcr2 = htim->Instance->CR2;
 802ee6a:	685c      	ldr	r4, [r3, #4]
  tmpsmcr = htim->Instance->SMCR;
 802ee6c:	689f      	ldr	r7, [r3, #8]
  if (IS_TIM_TRGO2_INSTANCE(htim->Instance))
 802ee6e:	d115      	bne.n	802ee9c <HAL_TIMEx_MasterConfigSynchronization+0xa0>
  {
    /* Check the parameters */
    assert_param(IS_TIM_TRGO2_SOURCE(sMasterConfig->MasterOutputTrigger2));
 802ee70:	6873      	ldr	r3, [r6, #4]
 802ee72:	f433 1340 	bics.w	r3, r3, #3145728	; 0x300000
 802ee76:	d00d      	beq.n	802ee94 <HAL_TIMEx_MasterConfigSynchronization+0x98>
 802ee78:	f5b3 0f80 	cmp.w	r3, #4194304	; 0x400000
 802ee7c:	d00a      	beq.n	802ee94 <HAL_TIMEx_MasterConfigSynchronization+0x98>
 802ee7e:	f5b3 0f00 	cmp.w	r3, #8388608	; 0x800000
 802ee82:	d007      	beq.n	802ee94 <HAL_TIMEx_MasterConfigSynchronization+0x98>
 802ee84:	f5b3 0f40 	cmp.w	r3, #12582912	; 0xc00000
 802ee88:	d004      	beq.n	802ee94 <HAL_TIMEx_MasterConfigSynchronization+0x98>
 802ee8a:	f640 013b 	movw	r1, #2107	; 0x83b
 802ee8e:	4813      	ldr	r0, [pc, #76]	; (802eedc <HAL_TIMEx_MasterConfigSynchronization+0xe0>)
 802ee90:	f7f7 f984 	bl	802619c <assert_failed>

    /* Clear the MMS2 bits */
    tmpcr2 &= ~TIM_CR2_MMS2;
    /* Select the TRGO2 source*/
    tmpcr2 |= sMasterConfig->MasterOutputTrigger2;
 802ee94:	6873      	ldr	r3, [r6, #4]
    tmpcr2 &= ~TIM_CR2_MMS2;
 802ee96:	f424 0470 	bic.w	r4, r4, #15728640	; 0xf00000
    tmpcr2 |= sMasterConfig->MasterOutputTrigger2;
 802ee9a:	431c      	orrs	r4, r3
  }

  /* Reset the MMS Bits */
  tmpcr2 &= ~TIM_CR2_MMS;
  /* Select the TRGO source */
  tmpcr2 |=  sMasterConfig->MasterOutputTrigger;
 802ee9c:	6833      	ldr	r3, [r6, #0]
  tmpcr2 &= ~TIM_CR2_MMS;
 802ee9e:	f024 7400 	bic.w	r4, r4, #33554432	; 0x2000000
 802eea2:	f024 0470 	bic.w	r4, r4, #112	; 0x70
  tmpcr2 |=  sMasterConfig->MasterOutputTrigger;
 802eea6:	431c      	orrs	r4, r3

  /* Update TIMx CR2 */
  htim->Instance->CR2 = tmpcr2;

  if (IS_TIM_SLAVE_INSTANCE(htim->Instance))
 802eea8:	4a0b      	ldr	r2, [pc, #44]	; (802eed8 <HAL_TIMEx_MasterConfigSynchronization+0xdc>)
  htim->Instance->CR2 = tmpcr2;
 802eeaa:	682b      	ldr	r3, [r5, #0]
  if (IS_TIM_SLAVE_INSTANCE(htim->Instance))
 802eeac:	4293      	cmp	r3, r2
  htim->Instance->CR2 = tmpcr2;
 802eeae:	605c      	str	r4, [r3, #4]
  if (IS_TIM_SLAVE_INSTANCE(htim->Instance))
 802eeb0:	d006      	beq.n	802eec0 <HAL_TIMEx_MasterConfigSynchronization+0xc4>
 802eeb2:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 802eeb6:	d003      	beq.n	802eec0 <HAL_TIMEx_MasterConfigSynchronization+0xc4>
 802eeb8:	f5a2 3294 	sub.w	r2, r2, #75776	; 0x12800
 802eebc:	4293      	cmp	r3, r2
 802eebe:	d104      	bne.n	802eeca <HAL_TIMEx_MasterConfigSynchronization+0xce>
  {
    /* Reset the MSM Bit */
    tmpsmcr &= ~TIM_SMCR_MSM;
    /* Set master mode */
    tmpsmcr |= sMasterConfig->MasterSlaveMode;
 802eec0:	68b2      	ldr	r2, [r6, #8]
    tmpsmcr &= ~TIM_SMCR_MSM;
 802eec2:	f027 0780 	bic.w	r7, r7, #128	; 0x80
    tmpsmcr |= sMasterConfig->MasterSlaveMode;
 802eec6:	4317      	orrs	r7, r2

    /* Update TIMx SMCR */
    htim->Instance->SMCR = tmpsmcr;
 802eec8:	609f      	str	r7, [r3, #8]
  }

  /* Change the htim state */
  htim->State = HAL_TIM_STATE_READY;
 802eeca:	2301      	movs	r3, #1

  __HAL_UNLOCK(htim);
 802eecc:	2000      	movs	r0, #0
  htim->State = HAL_TIM_STATE_READY;
 802eece:	f885 303d 	strb.w	r3, [r5, #61]	; 0x3d
  __HAL_UNLOCK(htim);
 802eed2:	f885 003c 	strb.w	r0, [r5, #60]	; 0x3c

  return HAL_OK;
}
 802eed6:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 802eed8:	40012c00 	.word	0x40012c00
 802eedc:	0803417c 	.word	0x0803417c

0802eee0 <HAL_UARTEx_RxEventCallback>:
  UNUSED(Size);

  /* NOTE : This function should not be modified, when the callback is needed,
            the HAL_UARTEx_RxEventCallback can be implemented in the user file.
   */
}
 802eee0:	4770      	bx	lr

0802eee2 <UART_EndTxTransfer>:
  * @retval None
  */
static void UART_EndTxTransfer(UART_HandleTypeDef *huart)
{
  /* Disable TXEIE, TCIE, TXFT interrupts */
  ATOMIC_CLEAR_BIT(huart->Instance->CR1, (USART_CR1_TXEIE_TXFNFIE | USART_CR1_TCIE));
 802eee2:	6802      	ldr	r2, [r0, #0]
 */
__STATIC_FORCEINLINE uint32_t __LDREXW(volatile uint32_t *addr)
{
    uint32_t result;

   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
 802eee4:	e852 3f00 	ldrex	r3, [r2]
 802eee8:	f023 03c0 	bic.w	r3, r3, #192	; 0xc0
 */
__STATIC_FORCEINLINE uint32_t __STREXW(uint32_t value, volatile uint32_t *addr)
{
   uint32_t result;

   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
 802eeec:	e842 3100 	strex	r1, r3, [r2]
   return(result);
 802eef0:	6802      	ldr	r2, [r0, #0]
 802eef2:	2900      	cmp	r1, #0
 802eef4:	d1f5      	bne.n	802eee2 <UART_EndTxTransfer>
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
 802eef6:	f102 0308 	add.w	r3, r2, #8
 802eefa:	e853 3f00 	ldrex	r3, [r3]
  ATOMIC_CLEAR_BIT(huart->Instance->CR3, (USART_CR3_TXFTIE));
 802eefe:	f423 0300 	bic.w	r3, r3, #8388608	; 0x800000
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
 802ef02:	f102 0c08 	add.w	ip, r2, #8
 802ef06:	e84c 3100 	strex	r1, r3, [ip]
 802ef0a:	2900      	cmp	r1, #0
 802ef0c:	d1f3      	bne.n	802eef6 <UART_EndTxTransfer+0x14>

  /* At end of Tx process, restore huart->gState to Ready */
  huart->gState = HAL_UART_STATE_READY;
 802ef0e:	2320      	movs	r3, #32
 802ef10:	f8c0 3088 	str.w	r3, [r0, #136]	; 0x88
}
 802ef14:	4770      	bx	lr
	...

0802ef18 <UART_EndRxTransfer>:
  * @brief  End ongoing Rx transfer on UART peripheral (following error detection or Reception completion).
  * @param  huart UART handle.
  * @retval None
  */
static void UART_EndRxTransfer(UART_HandleTypeDef *huart)
{
 802ef18:	b510      	push	{r4, lr}
  /* Disable RXNE, PE and ERR (Frame error, noise error, overrun error) interrupts */
  ATOMIC_CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE_RXFNEIE | USART_CR1_PEIE));
 802ef1a:	6802      	ldr	r2, [r0, #0]
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
 802ef1c:	e852 3f00 	ldrex	r3, [r2]
 802ef20:	f423 7390 	bic.w	r3, r3, #288	; 0x120
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
 802ef24:	e842 3100 	strex	r1, r3, [r2]
   return(result);
 802ef28:	6802      	ldr	r2, [r0, #0]
 802ef2a:	2900      	cmp	r1, #0
 802ef2c:	d1f5      	bne.n	802ef1a <UART_EndRxTransfer+0x2>
  ATOMIC_CLEAR_BIT(huart->Instance->CR3, (USART_CR3_EIE | USART_CR3_RXFTIE));
 802ef2e:	4c0f      	ldr	r4, [pc, #60]	; (802ef6c <UART_EndRxTransfer+0x54>)
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
 802ef30:	f102 0308 	add.w	r3, r2, #8
 802ef34:	e853 3f00 	ldrex	r3, [r3]
 802ef38:	4023      	ands	r3, r4
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
 802ef3a:	f102 0c08 	add.w	ip, r2, #8
 802ef3e:	e84c 3100 	strex	r1, r3, [ip]
 802ef42:	2900      	cmp	r1, #0
 802ef44:	d1f4      	bne.n	802ef30 <UART_EndRxTransfer+0x18>

  /* In case of reception waiting for IDLE event, disable also the IDLE IE interrupt source */
  if (huart->ReceptionType == HAL_UART_RECEPTION_TOIDLE)
 802ef46:	6ec3      	ldr	r3, [r0, #108]	; 0x6c
 802ef48:	2b01      	cmp	r3, #1
 802ef4a:	d107      	bne.n	802ef5c <UART_EndRxTransfer+0x44>
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
 802ef4c:	e852 3f00 	ldrex	r3, [r2]
  {
    ATOMIC_CLEAR_BIT(huart->Instance->CR1, USART_CR1_IDLEIE);
 802ef50:	f023 0310 	bic.w	r3, r3, #16
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
 802ef54:	e842 3100 	strex	r1, r3, [r2]
 802ef58:	2900      	cmp	r1, #0
 802ef5a:	d1f7      	bne.n	802ef4c <UART_EndRxTransfer+0x34>
  }

  /* At end of Rx process, restore huart->RxState to Ready */
  huart->RxState = HAL_UART_STATE_READY;
 802ef5c:	2320      	movs	r3, #32
 802ef5e:	f8c0 308c 	str.w	r3, [r0, #140]	; 0x8c
  huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
 802ef62:	2300      	movs	r3, #0
 802ef64:	66c3      	str	r3, [r0, #108]	; 0x6c

  /* Reset RxIsr function pointer */
  huart->RxISR = NULL;
 802ef66:	6743      	str	r3, [r0, #116]	; 0x74
}
 802ef68:	bd10      	pop	{r4, pc}
 802ef6a:	bf00      	nop
 802ef6c:	effffffe 	.word	0xeffffffe

0802ef70 <UART_DMATransmitCplt>:
  * @brief DMA UART transmit process complete callback.
  * @param hdma DMA handle.
  * @retval None
  */
static void UART_DMATransmitCplt(DMA_HandleTypeDef *hdma)
{
 802ef70:	4603      	mov	r3, r0
  UART_HandleTypeDef *huart = (UART_HandleTypeDef *)(hdma->Parent);

  /* Check if DMA in circular mode */
  if (hdma->Mode != DMA_LINKEDLIST_CIRCULAR)
 802ef72:	6d1b      	ldr	r3, [r3, #80]	; 0x50
  UART_HandleTypeDef *huart = (UART_HandleTypeDef *)(hdma->Parent);
 802ef74:	6dc0      	ldr	r0, [r0, #92]	; 0x5c
  if (hdma->Mode != DMA_LINKEDLIST_CIRCULAR)
 802ef76:	2b81      	cmp	r3, #129	; 0x81
 802ef78:	d018      	beq.n	802efac <UART_DMATransmitCplt+0x3c>
  {
    huart->TxXferCount = 0U;
 802ef7a:	2300      	movs	r3, #0
 802ef7c:	f8a0 3056 	strh.w	r3, [r0, #86]	; 0x56

    /* Disable the DMA transfer for transmit request by resetting the DMAT bit
       in the UART CR3 register */
    ATOMIC_CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAT);
 802ef80:	6802      	ldr	r2, [r0, #0]
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
 802ef82:	f102 0308 	add.w	r3, r2, #8
 802ef86:	e853 3f00 	ldrex	r3, [r3]
 802ef8a:	f023 0380 	bic.w	r3, r3, #128	; 0x80
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
 802ef8e:	3208      	adds	r2, #8
 802ef90:	e842 3100 	strex	r1, r3, [r2]
   return(result);
 802ef94:	6802      	ldr	r2, [r0, #0]
 802ef96:	2900      	cmp	r1, #0
 802ef98:	d1f2      	bne.n	802ef80 <UART_DMATransmitCplt+0x10>
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
 802ef9a:	e852 3f00 	ldrex	r3, [r2]

    /* Enable the UART Transmit Complete Interrupt */
    ATOMIC_SET_BIT(huart->Instance->CR1, USART_CR1_TCIE);
 802ef9e:	f043 0340 	orr.w	r3, r3, #64	; 0x40
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
 802efa2:	e842 3100 	strex	r1, r3, [r2]
 802efa6:	2900      	cmp	r1, #0
 802efa8:	d1f7      	bne.n	802ef9a <UART_DMATransmitCplt+0x2a>
 802efaa:	4770      	bx	lr
  /* DMA Circular mode */
  else
  {
#if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
    /*Call registered Tx complete callback*/
    huart->TxCpltCallback(huart);
 802efac:	f8d0 3098 	ldr.w	r3, [r0, #152]	; 0x98
 802efb0:	4718      	bx	r3

0802efb2 <UART_DMATxHalfCplt>:
  * @param hdma DMA handle.
  * @retval None
  */
static void UART_DMATxHalfCplt(DMA_HandleTypeDef *hdma)
{
  UART_HandleTypeDef *huart = (UART_HandleTypeDef *)(hdma->Parent);
 802efb2:	6dc0      	ldr	r0, [r0, #92]	; 0x5c

#if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
  /*Call registered Tx Half complete callback*/
  huart->TxHalfCpltCallback(huart);
 802efb4:	f8d0 3094 	ldr.w	r3, [r0, #148]	; 0x94
 802efb8:	4718      	bx	r3

0802efba <UART_DMAError>:
  * @param hdma DMA handle.
  * @retval None
  */
static void UART_DMAError(DMA_HandleTypeDef *hdma)
{
  UART_HandleTypeDef *huart = (UART_HandleTypeDef *)(hdma->Parent);
 802efba:	6dc0      	ldr	r0, [r0, #92]	; 0x5c
{
 802efbc:	b510      	push	{r4, lr}

  const HAL_UART_StateTypeDef gstate = huart->gState;
  const HAL_UART_StateTypeDef rxstate = huart->RxState;

  /* Stop UART DMA Tx request if ongoing */
  if ((HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAT)) &&
 802efbe:	6802      	ldr	r2, [r0, #0]
  const HAL_UART_StateTypeDef gstate = huart->gState;
 802efc0:	f8d0 3088 	ldr.w	r3, [r0, #136]	; 0x88
  const HAL_UART_StateTypeDef rxstate = huart->RxState;
 802efc4:	f8d0 408c 	ldr.w	r4, [r0, #140]	; 0x8c
  if ((HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAT)) &&
 802efc8:	6892      	ldr	r2, [r2, #8]
 802efca:	0612      	lsls	r2, r2, #24
 802efcc:	d506      	bpl.n	802efdc <UART_DMAError+0x22>
 802efce:	2b21      	cmp	r3, #33	; 0x21
 802efd0:	d104      	bne.n	802efdc <UART_DMAError+0x22>
      (gstate == HAL_UART_STATE_BUSY_TX))
  {
    huart->TxXferCount = 0U;
 802efd2:	2300      	movs	r3, #0
 802efd4:	f8a0 3056 	strh.w	r3, [r0, #86]	; 0x56
    UART_EndTxTransfer(huart);
 802efd8:	f7ff ff83 	bl	802eee2 <UART_EndTxTransfer>
  }

  /* Stop UART DMA Rx request if ongoing */
  if ((HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR)) &&
 802efdc:	6803      	ldr	r3, [r0, #0]
 802efde:	689b      	ldr	r3, [r3, #8]
 802efe0:	065b      	lsls	r3, r3, #25
 802efe2:	d506      	bpl.n	802eff2 <UART_DMAError+0x38>
 802efe4:	2c22      	cmp	r4, #34	; 0x22
 802efe6:	d104      	bne.n	802eff2 <UART_DMAError+0x38>
      (rxstate == HAL_UART_STATE_BUSY_RX))
  {
    huart->RxXferCount = 0U;
 802efe8:	2300      	movs	r3, #0
 802efea:	f8a0 305e 	strh.w	r3, [r0, #94]	; 0x5e
    UART_EndRxTransfer(huart);
 802efee:	f7ff ff93 	bl	802ef18 <UART_EndRxTransfer>
  huart->ErrorCallback(huart);
#else
  /*Call legacy weak error callback*/
  HAL_UART_ErrorCallback(huart);
#endif /* USE_HAL_UART_REGISTER_CALLBACKS */
}
 802eff2:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
  huart->ErrorCode |= HAL_UART_ERROR_DMA;
 802eff6:	f8d0 3090 	ldr.w	r3, [r0, #144]	; 0x90
 802effa:	f043 0310 	orr.w	r3, r3, #16
 802effe:	f8c0 3090 	str.w	r3, [r0, #144]	; 0x90
  huart->ErrorCallback(huart);
 802f002:	f8d0 30a4 	ldr.w	r3, [r0, #164]	; 0xa4
 802f006:	4718      	bx	r3

0802f008 <UART_DMAAbortOnError>:
  * @retval None
  */
static void UART_DMAAbortOnError(DMA_HandleTypeDef *hdma)
{
  UART_HandleTypeDef *huart = (UART_HandleTypeDef *)(hdma->Parent);
  huart->RxXferCount = 0U;
 802f008:	2300      	movs	r3, #0
  UART_HandleTypeDef *huart = (UART_HandleTypeDef *)(hdma->Parent);
 802f00a:	6dc0      	ldr	r0, [r0, #92]	; 0x5c
  huart->RxXferCount = 0U;
 802f00c:	f8a0 305e 	strh.w	r3, [r0, #94]	; 0x5e
  huart->TxXferCount = 0U;
 802f010:	f8a0 3056 	strh.w	r3, [r0, #86]	; 0x56

#if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
  /*Call registered error callback*/
  huart->ErrorCallback(huart);
 802f014:	f8d0 30a4 	ldr.w	r3, [r0, #164]	; 0xa4
 802f018:	4718      	bx	r3
	...

0802f01c <UART_RxISR_8BIT>:
{
  uint16_t uhMask = huart->Mask;
  uint16_t  uhdata;

  /* Check that a Rx process is ongoing */
  if (huart->RxState == HAL_UART_STATE_BUSY_RX)
 802f01c:	f8d0 208c 	ldr.w	r2, [r0, #140]	; 0x8c
  {
    uhdata = (uint16_t) READ_REG(huart->Instance->RDR);
 802f020:	6803      	ldr	r3, [r0, #0]
  if (huart->RxState == HAL_UART_STATE_BUSY_RX)
 802f022:	2a22      	cmp	r2, #34	; 0x22
 802f024:	d157      	bne.n	802f0d6 <UART_RxISR_8BIT+0xba>
    uhdata = (uint16_t) READ_REG(huart->Instance->RDR);
 802f026:	6a5b      	ldr	r3, [r3, #36]	; 0x24
    *huart->pRxBuffPtr = (uint8_t)(uhdata & (uint8_t)uhMask);
 802f028:	f8b0 1060 	ldrh.w	r1, [r0, #96]	; 0x60
 802f02c:	6d82      	ldr	r2, [r0, #88]	; 0x58
 802f02e:	400b      	ands	r3, r1
 802f030:	7013      	strb	r3, [r2, #0]
    huart->pRxBuffPtr++;
 802f032:	6d83      	ldr	r3, [r0, #88]	; 0x58
 802f034:	3301      	adds	r3, #1
 802f036:	6583      	str	r3, [r0, #88]	; 0x58
    huart->RxXferCount--;
 802f038:	f8b0 305e 	ldrh.w	r3, [r0, #94]	; 0x5e
 802f03c:	3b01      	subs	r3, #1
 802f03e:	b29b      	uxth	r3, r3
 802f040:	f8a0 305e 	strh.w	r3, [r0, #94]	; 0x5e

    if (huart->RxXferCount == 0U)
 802f044:	f8b0 305e 	ldrh.w	r3, [r0, #94]	; 0x5e
 802f048:	b29b      	uxth	r3, r3
 802f04a:	2b00      	cmp	r3, #0
 802f04c:	d147      	bne.n	802f0de <UART_RxISR_8BIT+0xc2>
    {
      /* Disable the UART Parity Error Interrupt and RXNE interrupts */
      ATOMIC_CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE_RXFNEIE | USART_CR1_PEIE));
 802f04e:	6802      	ldr	r2, [r0, #0]
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
 802f050:	e852 3f00 	ldrex	r3, [r2]
 802f054:	f423 7390 	bic.w	r3, r3, #288	; 0x120
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
 802f058:	e842 3100 	strex	r1, r3, [r2]
   return(result);
 802f05c:	6803      	ldr	r3, [r0, #0]
 802f05e:	2900      	cmp	r1, #0
 802f060:	d1f5      	bne.n	802f04e <UART_RxISR_8BIT+0x32>
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
 802f062:	f103 0208 	add.w	r2, r3, #8
 802f066:	e852 2f00 	ldrex	r2, [r2]

      /* Disable the UART Error Interrupt: (Frame error, noise error, overrun error) */
      ATOMIC_CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 802f06a:	f022 0201 	bic.w	r2, r2, #1
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
 802f06e:	f103 0c08 	add.w	ip, r3, #8
 802f072:	e84c 2100 	strex	r1, r2, [ip]
 802f076:	2900      	cmp	r1, #0
 802f078:	d1f3      	bne.n	802f062 <UART_RxISR_8BIT+0x46>

      /* Rx process is completed, restore huart->RxState to Ready */
      huart->RxState = HAL_UART_STATE_READY;
 802f07a:	2220      	movs	r2, #32
 802f07c:	f8c0 208c 	str.w	r2, [r0, #140]	; 0x8c
      huart->RxISR = NULL;

      /* Initialize type of RxEvent to Transfer Complete */
      huart->RxEventType = HAL_UART_RXEVENT_TC;

      if (!(IS_LPUART_INSTANCE(huart->Instance)))
 802f080:	4a17      	ldr	r2, [pc, #92]	; (802f0e0 <UART_RxISR_8BIT+0xc4>)
      huart->RxISR = NULL;
 802f082:	6741      	str	r1, [r0, #116]	; 0x74
      if (!(IS_LPUART_INSTANCE(huart->Instance)))
 802f084:	4293      	cmp	r3, r2
      huart->RxEventType = HAL_UART_RXEVENT_TC;
 802f086:	6701      	str	r1, [r0, #112]	; 0x70
      if (!(IS_LPUART_INSTANCE(huart->Instance)))
 802f088:	d116      	bne.n	802f0b8 <UART_RxISR_8BIT+0x9c>
        }
      }

      /* Check current reception Mode :
         If Reception till IDLE event has been selected : */
      if (huart->ReceptionType == HAL_UART_RECEPTION_TOIDLE)
 802f08a:	6ec2      	ldr	r2, [r0, #108]	; 0x6c
 802f08c:	2a01      	cmp	r2, #1
 802f08e:	d11f      	bne.n	802f0d0 <UART_RxISR_8BIT+0xb4>
      {
        /* Set reception type to Standard */
        huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
 802f090:	2200      	movs	r2, #0
 802f092:	66c2      	str	r2, [r0, #108]	; 0x6c
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
 802f094:	e853 2f00 	ldrex	r2, [r3]

        /* Disable IDLE interrupt */
        ATOMIC_CLEAR_BIT(huart->Instance->CR1, USART_CR1_IDLEIE);
 802f098:	f022 0210 	bic.w	r2, r2, #16
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
 802f09c:	e843 2100 	strex	r1, r2, [r3]
 802f0a0:	2900      	cmp	r1, #0
 802f0a2:	d1f7      	bne.n	802f094 <UART_RxISR_8BIT+0x78>

        if (__HAL_UART_GET_FLAG(huart, UART_FLAG_IDLE) == SET)
 802f0a4:	69da      	ldr	r2, [r3, #28]
          __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_IDLEF);
        }

#if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
        /*Call registered Rx Event callback*/
        huart->RxEventCallback(huart, huart->RxXferSize);
 802f0a6:	f8b0 105c 	ldrh.w	r1, [r0, #92]	; 0x5c
        if (__HAL_UART_GET_FLAG(huart, UART_FLAG_IDLE) == SET)
 802f0aa:	06d2      	lsls	r2, r2, #27
          __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_IDLEF);
 802f0ac:	bf44      	itt	mi
 802f0ae:	2210      	movmi	r2, #16
 802f0b0:	621a      	strmi	r2, [r3, #32]
        huart->RxEventCallback(huart, huart->RxXferSize);
 802f0b2:	f8d0 30bc 	ldr.w	r3, [r0, #188]	; 0xbc
 802f0b6:	4718      	bx	r3
        if (READ_BIT(huart->Instance->CR2, USART_CR2_RTOEN) != 0U)
 802f0b8:	685a      	ldr	r2, [r3, #4]
 802f0ba:	0211      	lsls	r1, r2, #8
 802f0bc:	d5e5      	bpl.n	802f08a <UART_RxISR_8BIT+0x6e>
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
 802f0be:	e853 2f00 	ldrex	r2, [r3]
          ATOMIC_CLEAR_BIT(huart->Instance->CR1, USART_CR1_RTOIE);
 802f0c2:	f022 6280 	bic.w	r2, r2, #67108864	; 0x4000000
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
 802f0c6:	e843 2100 	strex	r1, r2, [r3]
 802f0ca:	2900      	cmp	r1, #0
 802f0cc:	d1f7      	bne.n	802f0be <UART_RxISR_8BIT+0xa2>
 802f0ce:	e7dc      	b.n	802f08a <UART_RxISR_8BIT+0x6e>
      else
      {
        /* Standard reception API called */
#if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
        /*Call registered Rx complete callback*/
        huart->RxCpltCallback(huart);
 802f0d0:	f8d0 30a0 	ldr.w	r3, [r0, #160]	; 0xa0
 802f0d4:	4718      	bx	r3
    }
  }
  else
  {
    /* Clear RXNE interrupt flag */
    __HAL_UART_SEND_REQ(huart, UART_RXDATA_FLUSH_REQUEST);
 802f0d6:	699a      	ldr	r2, [r3, #24]
 802f0d8:	f042 0208 	orr.w	r2, r2, #8
 802f0dc:	619a      	str	r2, [r3, #24]
  }
}
 802f0de:	4770      	bx	lr
 802f0e0:	46002400 	.word	0x46002400

0802f0e4 <UART_RxISR_16BIT>:
  uint16_t *tmp;
  uint16_t uhMask = huart->Mask;
  uint16_t  uhdata;

  /* Check that a Rx process is ongoing */
  if (huart->RxState == HAL_UART_STATE_BUSY_RX)
 802f0e4:	f8d0 208c 	ldr.w	r2, [r0, #140]	; 0x8c
  {
    uhdata = (uint16_t) READ_REG(huart->Instance->RDR);
 802f0e8:	6803      	ldr	r3, [r0, #0]
  if (huart->RxState == HAL_UART_STATE_BUSY_RX)
 802f0ea:	2a22      	cmp	r2, #34	; 0x22
 802f0ec:	d154      	bne.n	802f198 <UART_RxISR_16BIT+0xb4>
    uhdata = (uint16_t) READ_REG(huart->Instance->RDR);
 802f0ee:	6a59      	ldr	r1, [r3, #36]	; 0x24
    tmp = (uint16_t *) huart->pRxBuffPtr ;
    *tmp = (uint16_t)(uhdata & uhMask);
 802f0f0:	f8b0 2060 	ldrh.w	r2, [r0, #96]	; 0x60
 802f0f4:	4011      	ands	r1, r2
 802f0f6:	6d82      	ldr	r2, [r0, #88]	; 0x58
 802f0f8:	f822 1b02 	strh.w	r1, [r2], #2
    huart->pRxBuffPtr += 2U;
 802f0fc:	6582      	str	r2, [r0, #88]	; 0x58
    huart->RxXferCount--;
 802f0fe:	f8b0 205e 	ldrh.w	r2, [r0, #94]	; 0x5e
 802f102:	3a01      	subs	r2, #1
 802f104:	b292      	uxth	r2, r2
 802f106:	f8a0 205e 	strh.w	r2, [r0, #94]	; 0x5e

    if (huart->RxXferCount == 0U)
 802f10a:	f8b0 205e 	ldrh.w	r2, [r0, #94]	; 0x5e
 802f10e:	b292      	uxth	r2, r2
 802f110:	2a00      	cmp	r2, #0
 802f112:	d145      	bne.n	802f1a0 <UART_RxISR_16BIT+0xbc>
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
 802f114:	e853 2f00 	ldrex	r2, [r3]
    {
      /* Disable the UART Parity Error Interrupt and RXNE interrupt*/
      ATOMIC_CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE_RXFNEIE | USART_CR1_PEIE));
 802f118:	f422 7290 	bic.w	r2, r2, #288	; 0x120
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
 802f11c:	e843 2100 	strex	r1, r2, [r3]
 802f120:	2900      	cmp	r1, #0
 802f122:	d1f7      	bne.n	802f114 <UART_RxISR_16BIT+0x30>
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
 802f124:	f103 0208 	add.w	r2, r3, #8
 802f128:	e852 2f00 	ldrex	r2, [r2]

      /* Disable the UART Error Interrupt: (Frame error, noise error, overrun error) */
      ATOMIC_CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 802f12c:	f022 0201 	bic.w	r2, r2, #1
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
 802f130:	f103 0c08 	add.w	ip, r3, #8
 802f134:	e84c 2100 	strex	r1, r2, [ip]
 802f138:	2900      	cmp	r1, #0
 802f13a:	d1f3      	bne.n	802f124 <UART_RxISR_16BIT+0x40>

      /* Rx process is completed, restore huart->RxState to Ready */
      huart->RxState = HAL_UART_STATE_READY;
 802f13c:	2220      	movs	r2, #32
 802f13e:	f8c0 208c 	str.w	r2, [r0, #140]	; 0x8c
      huart->RxISR = NULL;

      /* Initialize type of RxEvent to Transfer Complete */
      huart->RxEventType = HAL_UART_RXEVENT_TC;

      if (!(IS_LPUART_INSTANCE(huart->Instance)))
 802f142:	4a18      	ldr	r2, [pc, #96]	; (802f1a4 <UART_RxISR_16BIT+0xc0>)
      huart->RxISR = NULL;
 802f144:	6741      	str	r1, [r0, #116]	; 0x74
      if (!(IS_LPUART_INSTANCE(huart->Instance)))
 802f146:	4293      	cmp	r3, r2
      huart->RxEventType = HAL_UART_RXEVENT_TC;
 802f148:	6701      	str	r1, [r0, #112]	; 0x70
      if (!(IS_LPUART_INSTANCE(huart->Instance)))
 802f14a:	d116      	bne.n	802f17a <UART_RxISR_16BIT+0x96>
        }
      }

      /* Check current reception Mode :
         If Reception till IDLE event has been selected : */
      if (huart->ReceptionType == HAL_UART_RECEPTION_TOIDLE)
 802f14c:	6ec2      	ldr	r2, [r0, #108]	; 0x6c
 802f14e:	2a01      	cmp	r2, #1
 802f150:	d11f      	bne.n	802f192 <UART_RxISR_16BIT+0xae>
      {
        /* Set reception type to Standard */
        huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
 802f152:	2200      	movs	r2, #0
 802f154:	66c2      	str	r2, [r0, #108]	; 0x6c
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
 802f156:	e853 2f00 	ldrex	r2, [r3]

        /* Disable IDLE interrupt */
        ATOMIC_CLEAR_BIT(huart->Instance->CR1, USART_CR1_IDLEIE);
 802f15a:	f022 0210 	bic.w	r2, r2, #16
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
 802f15e:	e843 2100 	strex	r1, r2, [r3]
 802f162:	2900      	cmp	r1, #0
 802f164:	d1f7      	bne.n	802f156 <UART_RxISR_16BIT+0x72>

        if (__HAL_UART_GET_FLAG(huart, UART_FLAG_IDLE) == SET)
 802f166:	69da      	ldr	r2, [r3, #28]
          __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_IDLEF);
        }

#if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
        /*Call registered Rx Event callback*/
        huart->RxEventCallback(huart, huart->RxXferSize);
 802f168:	f8b0 105c 	ldrh.w	r1, [r0, #92]	; 0x5c
        if (__HAL_UART_GET_FLAG(huart, UART_FLAG_IDLE) == SET)
 802f16c:	06d2      	lsls	r2, r2, #27
          __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_IDLEF);
 802f16e:	bf44      	itt	mi
 802f170:	2210      	movmi	r2, #16
 802f172:	621a      	strmi	r2, [r3, #32]
        huart->RxEventCallback(huart, huart->RxXferSize);
 802f174:	f8d0 30bc 	ldr.w	r3, [r0, #188]	; 0xbc
 802f178:	4718      	bx	r3
        if (READ_BIT(huart->Instance->CR2, USART_CR2_RTOEN) != 0U)
 802f17a:	685a      	ldr	r2, [r3, #4]
 802f17c:	0211      	lsls	r1, r2, #8
 802f17e:	d5e5      	bpl.n	802f14c <UART_RxISR_16BIT+0x68>
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
 802f180:	e853 2f00 	ldrex	r2, [r3]
          ATOMIC_CLEAR_BIT(huart->Instance->CR1, USART_CR1_RTOIE);
 802f184:	f022 6280 	bic.w	r2, r2, #67108864	; 0x4000000
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
 802f188:	e843 2100 	strex	r1, r2, [r3]
 802f18c:	2900      	cmp	r1, #0
 802f18e:	d1f7      	bne.n	802f180 <UART_RxISR_16BIT+0x9c>
 802f190:	e7dc      	b.n	802f14c <UART_RxISR_16BIT+0x68>
      else
      {
        /* Standard reception API called */
#if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
        /*Call registered Rx complete callback*/
        huart->RxCpltCallback(huart);
 802f192:	f8d0 30a0 	ldr.w	r3, [r0, #160]	; 0xa0
 802f196:	4718      	bx	r3
    }
  }
  else
  {
    /* Clear RXNE interrupt flag */
    __HAL_UART_SEND_REQ(huart, UART_RXDATA_FLUSH_REQUEST);
 802f198:	699a      	ldr	r2, [r3, #24]
 802f19a:	f042 0208 	orr.w	r2, r2, #8
 802f19e:	619a      	str	r2, [r3, #24]
  }
}
 802f1a0:	4770      	bx	lr
 802f1a2:	bf00      	nop
 802f1a4:	46002400 	.word	0x46002400

0802f1a8 <UART_RxISR_8BIT_FIFOEN>:
  *         interruptions have been enabled by HAL_UART_Receive_IT()
  * @param huart UART handle.
  * @retval None
  */
static void UART_RxISR_8BIT_FIFOEN(UART_HandleTypeDef *huart)
{
 802f1a8:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
  uint16_t  uhMask = huart->Mask;
  uint16_t  uhdata;
  uint16_t  nb_rx_data;
  uint16_t  rxdatacount;
  uint32_t  isrflags = READ_REG(huart->Instance->ISR);
 802f1ac:	6803      	ldr	r3, [r0, #0]
{
 802f1ae:	4604      	mov	r4, r0
  uint32_t  isrflags = READ_REG(huart->Instance->ISR);
 802f1b0:	69df      	ldr	r7, [r3, #28]
  uint32_t  cr1its   = READ_REG(huart->Instance->CR1);
 802f1b2:	681a      	ldr	r2, [r3, #0]
  uint32_t  cr3its   = READ_REG(huart->Instance->CR3);
 802f1b4:	689d      	ldr	r5, [r3, #8]

  /* Check that a Rx process is ongoing */
  if (huart->RxState == HAL_UART_STATE_BUSY_RX)
 802f1b6:	f8d0 108c 	ldr.w	r1, [r0, #140]	; 0x8c
  uint32_t  cr1its   = READ_REG(huart->Instance->CR1);
 802f1ba:	9201      	str	r2, [sp, #4]
  if (huart->RxState == HAL_UART_STATE_BUSY_RX)
 802f1bc:	2922      	cmp	r1, #34	; 0x22
 802f1be:	f040 80b9 	bne.w	802f334 <UART_RxISR_8BIT_FIFOEN+0x18c>
          huart->ErrorCallback(huart);
#else
          /*Call legacy weak error callback*/
          HAL_UART_ErrorCallback(huart);
#endif /* USE_HAL_UART_REGISTER_CALLBACKS */
          huart->ErrorCode = HAL_UART_ERROR_NONE;
 802f1c2:	2600      	movs	r6, #0
  uint16_t  uhMask = huart->Mask;
 802f1c4:	f8b0 8060 	ldrh.w	r8, [r0, #96]	; 0x60
    nb_rx_data = huart->NbRxDataToProcess;
 802f1c8:	f8b0 9068 	ldrh.w	r9, [r0, #104]	; 0x68
        /* Disable the UART Parity Error Interrupt and RXFT interrupt*/
        ATOMIC_CLEAR_BIT(huart->Instance->CR1, USART_CR1_PEIE);

        /* Disable the UART Error Interrupt: (Frame error, noise error, overrun error)
           and RX FIFO Threshold interrupt */
        ATOMIC_CLEAR_BIT(huart->Instance->CR3, (USART_CR3_EIE | USART_CR3_RXFTIE));
 802f1cc:	f8df a174 	ldr.w	sl, [pc, #372]	; 802f344 <UART_RxISR_8BIT_FIFOEN+0x19c>
        huart->RxISR = NULL;

        /* Initialize type of RxEvent to Transfer Complete */
        huart->RxEventType = HAL_UART_RXEVENT_TC;

        if (!(IS_LPUART_INSTANCE(huart->Instance)))
 802f1d0:	f8df b174 	ldr.w	fp, [pc, #372]	; 802f348 <UART_RxISR_8BIT_FIFOEN+0x1a0>
    while ((nb_rx_data > 0U) && ((isrflags & USART_ISR_RXNE_RXFNE) != 0U))
 802f1d4:	f1b9 0f00 	cmp.w	r9, #0
 802f1d8:	d001      	beq.n	802f1de <UART_RxISR_8BIT_FIFOEN+0x36>
 802f1da:	06bb      	lsls	r3, r7, #26
 802f1dc:	d421      	bmi.n	802f222 <UART_RxISR_8BIT_FIFOEN+0x7a>

    /* When remaining number of bytes to receive is less than the RX FIFO
    threshold, next incoming frames are processed as if FIFO mode was
    disabled (i.e. one interrupt per received frame).
    */
    rxdatacount = huart->RxXferCount;
 802f1de:	f8b4 305e 	ldrh.w	r3, [r4, #94]	; 0x5e
 802f1e2:	b29b      	uxth	r3, r3
    if ((rxdatacount != 0U) && (rxdatacount < huart->NbRxDataToProcess))
 802f1e4:	b1d3      	cbz	r3, 802f21c <UART_RxISR_8BIT_FIFOEN+0x74>
 802f1e6:	f8b4 2068 	ldrh.w	r2, [r4, #104]	; 0x68
 802f1ea:	429a      	cmp	r2, r3
 802f1ec:	d916      	bls.n	802f21c <UART_RxISR_8BIT_FIFOEN+0x74>
    {
      /* Disable the UART RXFT interrupt*/
      ATOMIC_CLEAR_BIT(huart->Instance->CR3, USART_CR3_RXFTIE);
 802f1ee:	6822      	ldr	r2, [r4, #0]
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
 802f1f0:	f102 0308 	add.w	r3, r2, #8
 802f1f4:	e853 3f00 	ldrex	r3, [r3]
 802f1f8:	f023 5380 	bic.w	r3, r3, #268435456	; 0x10000000
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
 802f1fc:	3208      	adds	r2, #8
 802f1fe:	e842 3100 	strex	r1, r3, [r2]
   return(result);
 802f202:	6822      	ldr	r2, [r4, #0]
 802f204:	2900      	cmp	r1, #0
 802f206:	d1f2      	bne.n	802f1ee <UART_RxISR_8BIT_FIFOEN+0x46>

      /* Update the RxISR function pointer */
      huart->RxISR = UART_RxISR_8BIT;
 802f208:	4b4d      	ldr	r3, [pc, #308]	; (802f340 <UART_RxISR_8BIT_FIFOEN+0x198>)
 802f20a:	6763      	str	r3, [r4, #116]	; 0x74
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
 802f20c:	e852 3f00 	ldrex	r3, [r2]

      /* Enable the UART Data Register Not Empty interrupt */
      ATOMIC_SET_BIT(huart->Instance->CR1, USART_CR1_RXNEIE_RXFNEIE);
 802f210:	f043 0320 	orr.w	r3, r3, #32
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
 802f214:	e842 3100 	strex	r1, r3, [r2]
 802f218:	2900      	cmp	r1, #0
 802f21a:	d1f7      	bne.n	802f20c <UART_RxISR_8BIT_FIFOEN+0x64>
  else
  {
    /* Clear RXNE interrupt flag */
    __HAL_UART_SEND_REQ(huart, UART_RXDATA_FLUSH_REQUEST);
  }
}
 802f21c:	b003      	add	sp, #12
 802f21e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
      uhdata = (uint16_t) READ_REG(huart->Instance->RDR);
 802f222:	6823      	ldr	r3, [r4, #0]
      *huart->pRxBuffPtr = (uint8_t)(uhdata & (uint8_t)uhMask);
 802f224:	6da2      	ldr	r2, [r4, #88]	; 0x58
      uhdata = (uint16_t) READ_REG(huart->Instance->RDR);
 802f226:	6a5b      	ldr	r3, [r3, #36]	; 0x24
      *huart->pRxBuffPtr = (uint8_t)(uhdata & (uint8_t)uhMask);
 802f228:	ea03 0308 	and.w	r3, r3, r8
 802f22c:	7013      	strb	r3, [r2, #0]
      huart->pRxBuffPtr++;
 802f22e:	6da3      	ldr	r3, [r4, #88]	; 0x58
 802f230:	3301      	adds	r3, #1
 802f232:	65a3      	str	r3, [r4, #88]	; 0x58
      huart->RxXferCount--;
 802f234:	f8b4 305e 	ldrh.w	r3, [r4, #94]	; 0x5e
 802f238:	3b01      	subs	r3, #1
 802f23a:	b29b      	uxth	r3, r3
 802f23c:	f8a4 305e 	strh.w	r3, [r4, #94]	; 0x5e
      isrflags = READ_REG(huart->Instance->ISR);
 802f240:	6823      	ldr	r3, [r4, #0]
 802f242:	69df      	ldr	r7, [r3, #28]
      if ((isrflags & (USART_ISR_PE | USART_ISR_FE | USART_ISR_NE)) != 0U)
 802f244:	0778      	lsls	r0, r7, #29
 802f246:	d02d      	beq.n	802f2a4 <UART_RxISR_8BIT_FIFOEN+0xfc>
        if (((isrflags & USART_ISR_PE) != 0U) && ((cr1its & USART_CR1_PEIE) != 0U))
 802f248:	07f9      	lsls	r1, r7, #31
 802f24a:	d50a      	bpl.n	802f262 <UART_RxISR_8BIT_FIFOEN+0xba>
 802f24c:	9a01      	ldr	r2, [sp, #4]
 802f24e:	05d2      	lsls	r2, r2, #23
 802f250:	d507      	bpl.n	802f262 <UART_RxISR_8BIT_FIFOEN+0xba>
          __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_PEF);
 802f252:	2101      	movs	r1, #1
 802f254:	6219      	str	r1, [r3, #32]
          huart->ErrorCode |= HAL_UART_ERROR_PE;
 802f256:	f8d4 1090 	ldr.w	r1, [r4, #144]	; 0x90
 802f25a:	f041 0101 	orr.w	r1, r1, #1
 802f25e:	f8c4 1090 	str.w	r1, [r4, #144]	; 0x90
        if (((isrflags & USART_ISR_FE) != 0U) && ((cr3its & USART_CR3_EIE) != 0U))
 802f262:	07b8      	lsls	r0, r7, #30
 802f264:	d509      	bpl.n	802f27a <UART_RxISR_8BIT_FIFOEN+0xd2>
 802f266:	07e9      	lsls	r1, r5, #31
 802f268:	d507      	bpl.n	802f27a <UART_RxISR_8BIT_FIFOEN+0xd2>
          __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_FEF);
 802f26a:	2102      	movs	r1, #2
 802f26c:	6219      	str	r1, [r3, #32]
          huart->ErrorCode |= HAL_UART_ERROR_FE;
 802f26e:	f8d4 1090 	ldr.w	r1, [r4, #144]	; 0x90
 802f272:	f041 0104 	orr.w	r1, r1, #4
 802f276:	f8c4 1090 	str.w	r1, [r4, #144]	; 0x90
        if (((isrflags & USART_ISR_NE) != 0U) && ((cr3its & USART_CR3_EIE) != 0U))
 802f27a:	077a      	lsls	r2, r7, #29
 802f27c:	d509      	bpl.n	802f292 <UART_RxISR_8BIT_FIFOEN+0xea>
 802f27e:	07e8      	lsls	r0, r5, #31
 802f280:	d507      	bpl.n	802f292 <UART_RxISR_8BIT_FIFOEN+0xea>
          __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_NEF);
 802f282:	2104      	movs	r1, #4
 802f284:	6219      	str	r1, [r3, #32]
          huart->ErrorCode |= HAL_UART_ERROR_NE;
 802f286:	f8d4 3090 	ldr.w	r3, [r4, #144]	; 0x90
 802f28a:	f043 0302 	orr.w	r3, r3, #2
 802f28e:	f8c4 3090 	str.w	r3, [r4, #144]	; 0x90
        if (huart->ErrorCode != HAL_UART_ERROR_NONE)
 802f292:	f8d4 3090 	ldr.w	r3, [r4, #144]	; 0x90
 802f296:	b12b      	cbz	r3, 802f2a4 <UART_RxISR_8BIT_FIFOEN+0xfc>
          huart->ErrorCallback(huart);
 802f298:	4620      	mov	r0, r4
 802f29a:	f8d4 30a4 	ldr.w	r3, [r4, #164]	; 0xa4
 802f29e:	4798      	blx	r3
          huart->ErrorCode = HAL_UART_ERROR_NONE;
 802f2a0:	f8c4 6090 	str.w	r6, [r4, #144]	; 0x90
      if (huart->RxXferCount == 0U)
 802f2a4:	f8b4 305e 	ldrh.w	r3, [r4, #94]	; 0x5e
 802f2a8:	b29b      	uxth	r3, r3
 802f2aa:	2b00      	cmp	r3, #0
 802f2ac:	d192      	bne.n	802f1d4 <UART_RxISR_8BIT_FIFOEN+0x2c>
        ATOMIC_CLEAR_BIT(huart->Instance->CR1, USART_CR1_PEIE);
 802f2ae:	6821      	ldr	r1, [r4, #0]
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
 802f2b0:	e851 3f00 	ldrex	r3, [r1]
 802f2b4:	f423 7380 	bic.w	r3, r3, #256	; 0x100
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
 802f2b8:	e841 3000 	strex	r0, r3, [r1]
   return(result);
 802f2bc:	6823      	ldr	r3, [r4, #0]
 802f2be:	2800      	cmp	r0, #0
 802f2c0:	d1f5      	bne.n	802f2ae <UART_RxISR_8BIT_FIFOEN+0x106>
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
 802f2c2:	f103 0208 	add.w	r2, r3, #8
 802f2c6:	e852 1f00 	ldrex	r1, [r2]
        ATOMIC_CLEAR_BIT(huart->Instance->CR3, (USART_CR3_EIE | USART_CR3_RXFTIE));
 802f2ca:	ea01 010a 	and.w	r1, r1, sl
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
 802f2ce:	e842 1000 	strex	r0, r1, [r2]
 802f2d2:	2800      	cmp	r0, #0
 802f2d4:	d1f5      	bne.n	802f2c2 <UART_RxISR_8BIT_FIFOEN+0x11a>
        huart->RxState = HAL_UART_STATE_READY;
 802f2d6:	2120      	movs	r1, #32
        if (!(IS_LPUART_INSTANCE(huart->Instance)))
 802f2d8:	455b      	cmp	r3, fp
        huart->RxState = HAL_UART_STATE_READY;
 802f2da:	f8c4 108c 	str.w	r1, [r4, #140]	; 0x8c
        huart->RxISR = NULL;
 802f2de:	6760      	str	r0, [r4, #116]	; 0x74
        huart->RxEventType = HAL_UART_RXEVENT_TC;
 802f2e0:	6720      	str	r0, [r4, #112]	; 0x70
        if (!(IS_LPUART_INSTANCE(huart->Instance)))
 802f2e2:	d00a      	beq.n	802f2fa <UART_RxISR_8BIT_FIFOEN+0x152>
          if (READ_BIT(huart->Instance->CR2, USART_CR2_RTOEN) != 0U)
 802f2e4:	6859      	ldr	r1, [r3, #4]
 802f2e6:	0209      	lsls	r1, r1, #8
 802f2e8:	d507      	bpl.n	802f2fa <UART_RxISR_8BIT_FIFOEN+0x152>
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
 802f2ea:	e853 1f00 	ldrex	r1, [r3]
            ATOMIC_CLEAR_BIT(huart->Instance->CR1, USART_CR1_RTOIE);
 802f2ee:	f021 6180 	bic.w	r1, r1, #67108864	; 0x4000000
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
 802f2f2:	e843 1000 	strex	r0, r1, [r3]
 802f2f6:	2800      	cmp	r0, #0
 802f2f8:	d1f7      	bne.n	802f2ea <UART_RxISR_8BIT_FIFOEN+0x142>
        if (huart->ReceptionType == HAL_UART_RECEPTION_TOIDLE)
 802f2fa:	6ee1      	ldr	r1, [r4, #108]	; 0x6c
 802f2fc:	2901      	cmp	r1, #1
 802f2fe:	d114      	bne.n	802f32a <UART_RxISR_8BIT_FIFOEN+0x182>
          huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
 802f300:	66e6      	str	r6, [r4, #108]	; 0x6c
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
 802f302:	e853 1f00 	ldrex	r1, [r3]
          ATOMIC_CLEAR_BIT(huart->Instance->CR1, USART_CR1_IDLEIE);
 802f306:	f021 0110 	bic.w	r1, r1, #16
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
 802f30a:	e843 1000 	strex	r0, r1, [r3]
 802f30e:	2800      	cmp	r0, #0
 802f310:	d1f7      	bne.n	802f302 <UART_RxISR_8BIT_FIFOEN+0x15a>
          if (__HAL_UART_GET_FLAG(huart, UART_FLAG_IDLE) == SET)
 802f312:	69d9      	ldr	r1, [r3, #28]
          huart->RxEventCallback(huart, huart->RxXferSize);
 802f314:	4620      	mov	r0, r4
          if (__HAL_UART_GET_FLAG(huart, UART_FLAG_IDLE) == SET)
 802f316:	06ca      	lsls	r2, r1, #27
            __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_IDLEF);
 802f318:	bf44      	itt	mi
 802f31a:	2110      	movmi	r1, #16
 802f31c:	6219      	strmi	r1, [r3, #32]
          huart->RxEventCallback(huart, huart->RxXferSize);
 802f31e:	f8d4 30bc 	ldr.w	r3, [r4, #188]	; 0xbc
 802f322:	f8b4 105c 	ldrh.w	r1, [r4, #92]	; 0x5c
 802f326:	4798      	blx	r3
 802f328:	e754      	b.n	802f1d4 <UART_RxISR_8BIT_FIFOEN+0x2c>
          huart->RxCpltCallback(huart);
 802f32a:	4620      	mov	r0, r4
 802f32c:	f8d4 30a0 	ldr.w	r3, [r4, #160]	; 0xa0
 802f330:	4798      	blx	r3
 802f332:	e74f      	b.n	802f1d4 <UART_RxISR_8BIT_FIFOEN+0x2c>
    __HAL_UART_SEND_REQ(huart, UART_RXDATA_FLUSH_REQUEST);
 802f334:	699a      	ldr	r2, [r3, #24]
 802f336:	f042 0208 	orr.w	r2, r2, #8
 802f33a:	619a      	str	r2, [r3, #24]
}
 802f33c:	e76e      	b.n	802f21c <UART_RxISR_8BIT_FIFOEN+0x74>
 802f33e:	bf00      	nop
 802f340:	0802f01d 	.word	0x0802f01d
 802f344:	effffffe 	.word	0xeffffffe
 802f348:	46002400 	.word	0x46002400

0802f34c <UART_RxISR_16BIT_FIFOEN>:
  *         interruptions have been enabled by HAL_UART_Receive_IT()
  * @param huart UART handle.
  * @retval None
  */
static void UART_RxISR_16BIT_FIFOEN(UART_HandleTypeDef *huart)
{
 802f34c:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
  uint16_t *tmp;
  uint16_t  uhMask = huart->Mask;
  uint16_t  uhdata;
  uint16_t  nb_rx_data;
  uint16_t  rxdatacount;
  uint32_t  isrflags = READ_REG(huart->Instance->ISR);
 802f350:	6803      	ldr	r3, [r0, #0]
{
 802f352:	4604      	mov	r4, r0
  uint32_t  isrflags = READ_REG(huart->Instance->ISR);
 802f354:	69df      	ldr	r7, [r3, #28]
  uint32_t  cr1its   = READ_REG(huart->Instance->CR1);
 802f356:	681a      	ldr	r2, [r3, #0]
  uint32_t  cr3its   = READ_REG(huart->Instance->CR3);
 802f358:	689d      	ldr	r5, [r3, #8]

  /* Check that a Rx process is ongoing */
  if (huart->RxState == HAL_UART_STATE_BUSY_RX)
 802f35a:	f8d0 108c 	ldr.w	r1, [r0, #140]	; 0x8c
  uint32_t  cr1its   = READ_REG(huart->Instance->CR1);
 802f35e:	9201      	str	r2, [sp, #4]
  if (huart->RxState == HAL_UART_STATE_BUSY_RX)
 802f360:	2922      	cmp	r1, #34	; 0x22
 802f362:	f040 80b7 	bne.w	802f4d4 <UART_RxISR_16BIT_FIFOEN+0x188>
          huart->ErrorCallback(huart);
#else
          /*Call legacy weak error callback*/
          HAL_UART_ErrorCallback(huart);
#endif /* USE_HAL_UART_REGISTER_CALLBACKS */
          huart->ErrorCode = HAL_UART_ERROR_NONE;
 802f366:	2600      	movs	r6, #0
  uint16_t  uhMask = huart->Mask;
 802f368:	f8b0 8060 	ldrh.w	r8, [r0, #96]	; 0x60
    nb_rx_data = huart->NbRxDataToProcess;
 802f36c:	f8b0 9068 	ldrh.w	r9, [r0, #104]	; 0x68
        /* Disable the UART Parity Error Interrupt and RXFT interrupt*/
        ATOMIC_CLEAR_BIT(huart->Instance->CR1, USART_CR1_PEIE);

        /* Disable the UART Error Interrupt: (Frame error, noise error, overrun error)
           and RX FIFO Threshold interrupt */
        ATOMIC_CLEAR_BIT(huart->Instance->CR3, (USART_CR3_EIE | USART_CR3_RXFTIE));
 802f370:	f8df a170 	ldr.w	sl, [pc, #368]	; 802f4e4 <UART_RxISR_16BIT_FIFOEN+0x198>
        huart->RxISR = NULL;

        /* Initialize type of RxEvent to Transfer Complete */
        huart->RxEventType = HAL_UART_RXEVENT_TC;

        if (!(IS_LPUART_INSTANCE(huart->Instance)))
 802f374:	f8df b170 	ldr.w	fp, [pc, #368]	; 802f4e8 <UART_RxISR_16BIT_FIFOEN+0x19c>
    while ((nb_rx_data > 0U) && ((isrflags & USART_ISR_RXNE_RXFNE) != 0U))
 802f378:	f1b9 0f00 	cmp.w	r9, #0
 802f37c:	d001      	beq.n	802f382 <UART_RxISR_16BIT_FIFOEN+0x36>
 802f37e:	06bb      	lsls	r3, r7, #26
 802f380:	d421      	bmi.n	802f3c6 <UART_RxISR_16BIT_FIFOEN+0x7a>

    /* When remaining number of bytes to receive is less than the RX FIFO
    threshold, next incoming frames are processed as if FIFO mode was
    disabled (i.e. one interrupt per received frame).
    */
    rxdatacount = huart->RxXferCount;
 802f382:	f8b4 305e 	ldrh.w	r3, [r4, #94]	; 0x5e
 802f386:	b29b      	uxth	r3, r3
    if ((rxdatacount != 0U) && (rxdatacount < huart->NbRxDataToProcess))
 802f388:	b1d3      	cbz	r3, 802f3c0 <UART_RxISR_16BIT_FIFOEN+0x74>
 802f38a:	f8b4 2068 	ldrh.w	r2, [r4, #104]	; 0x68
 802f38e:	429a      	cmp	r2, r3
 802f390:	d916      	bls.n	802f3c0 <UART_RxISR_16BIT_FIFOEN+0x74>
    {
      /* Disable the UART RXFT interrupt*/
      ATOMIC_CLEAR_BIT(huart->Instance->CR3, USART_CR3_RXFTIE);
 802f392:	6822      	ldr	r2, [r4, #0]
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
 802f394:	f102 0308 	add.w	r3, r2, #8
 802f398:	e853 3f00 	ldrex	r3, [r3]
 802f39c:	f023 5380 	bic.w	r3, r3, #268435456	; 0x10000000
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
 802f3a0:	3208      	adds	r2, #8
 802f3a2:	e842 3100 	strex	r1, r3, [r2]
   return(result);
 802f3a6:	6822      	ldr	r2, [r4, #0]
 802f3a8:	2900      	cmp	r1, #0
 802f3aa:	d1f2      	bne.n	802f392 <UART_RxISR_16BIT_FIFOEN+0x46>

      /* Update the RxISR function pointer */
      huart->RxISR = UART_RxISR_16BIT;
 802f3ac:	4b4c      	ldr	r3, [pc, #304]	; (802f4e0 <UART_RxISR_16BIT_FIFOEN+0x194>)
 802f3ae:	6763      	str	r3, [r4, #116]	; 0x74
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
 802f3b0:	e852 3f00 	ldrex	r3, [r2]

      /* Enable the UART Data Register Not Empty interrupt */
      ATOMIC_SET_BIT(huart->Instance->CR1, USART_CR1_RXNEIE_RXFNEIE);
 802f3b4:	f043 0320 	orr.w	r3, r3, #32
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
 802f3b8:	e842 3100 	strex	r1, r3, [r2]
 802f3bc:	2900      	cmp	r1, #0
 802f3be:	d1f7      	bne.n	802f3b0 <UART_RxISR_16BIT_FIFOEN+0x64>
  else
  {
    /* Clear RXNE interrupt flag */
    __HAL_UART_SEND_REQ(huart, UART_RXDATA_FLUSH_REQUEST);
  }
}
 802f3c0:	b003      	add	sp, #12
 802f3c2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
      uhdata = (uint16_t) READ_REG(huart->Instance->RDR);
 802f3c6:	6823      	ldr	r3, [r4, #0]
      *tmp = (uint16_t)(uhdata & uhMask);
 802f3c8:	6da2      	ldr	r2, [r4, #88]	; 0x58
      uhdata = (uint16_t) READ_REG(huart->Instance->RDR);
 802f3ca:	6a59      	ldr	r1, [r3, #36]	; 0x24
      *tmp = (uint16_t)(uhdata & uhMask);
 802f3cc:	ea08 0101 	and.w	r1, r8, r1
 802f3d0:	f822 1b02 	strh.w	r1, [r2], #2
      huart->pRxBuffPtr += 2U;
 802f3d4:	65a2      	str	r2, [r4, #88]	; 0x58
      huart->RxXferCount--;
 802f3d6:	f8b4 205e 	ldrh.w	r2, [r4, #94]	; 0x5e
 802f3da:	3a01      	subs	r2, #1
 802f3dc:	b292      	uxth	r2, r2
 802f3de:	f8a4 205e 	strh.w	r2, [r4, #94]	; 0x5e
      isrflags = READ_REG(huart->Instance->ISR);
 802f3e2:	69df      	ldr	r7, [r3, #28]
      if ((isrflags & (USART_ISR_PE | USART_ISR_FE | USART_ISR_NE)) != 0U)
 802f3e4:	0778      	lsls	r0, r7, #29
 802f3e6:	d02d      	beq.n	802f444 <UART_RxISR_16BIT_FIFOEN+0xf8>
        if (((isrflags & USART_ISR_PE) != 0U) && ((cr1its & USART_CR1_PEIE) != 0U))
 802f3e8:	07f9      	lsls	r1, r7, #31
 802f3ea:	d50a      	bpl.n	802f402 <UART_RxISR_16BIT_FIFOEN+0xb6>
 802f3ec:	9a01      	ldr	r2, [sp, #4]
 802f3ee:	05d2      	lsls	r2, r2, #23
 802f3f0:	d507      	bpl.n	802f402 <UART_RxISR_16BIT_FIFOEN+0xb6>
          __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_PEF);
 802f3f2:	2101      	movs	r1, #1
 802f3f4:	6219      	str	r1, [r3, #32]
          huart->ErrorCode |= HAL_UART_ERROR_PE;
 802f3f6:	f8d4 1090 	ldr.w	r1, [r4, #144]	; 0x90
 802f3fa:	f041 0101 	orr.w	r1, r1, #1
 802f3fe:	f8c4 1090 	str.w	r1, [r4, #144]	; 0x90
        if (((isrflags & USART_ISR_FE) != 0U) && ((cr3its & USART_CR3_EIE) != 0U))
 802f402:	07b8      	lsls	r0, r7, #30
 802f404:	d509      	bpl.n	802f41a <UART_RxISR_16BIT_FIFOEN+0xce>
 802f406:	07e9      	lsls	r1, r5, #31
 802f408:	d507      	bpl.n	802f41a <UART_RxISR_16BIT_FIFOEN+0xce>
          __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_FEF);
 802f40a:	2102      	movs	r1, #2
 802f40c:	6219      	str	r1, [r3, #32]
          huart->ErrorCode |= HAL_UART_ERROR_FE;
 802f40e:	f8d4 1090 	ldr.w	r1, [r4, #144]	; 0x90
 802f412:	f041 0104 	orr.w	r1, r1, #4
 802f416:	f8c4 1090 	str.w	r1, [r4, #144]	; 0x90
        if (((isrflags & USART_ISR_NE) != 0U) && ((cr3its & USART_CR3_EIE) != 0U))
 802f41a:	077a      	lsls	r2, r7, #29
 802f41c:	d509      	bpl.n	802f432 <UART_RxISR_16BIT_FIFOEN+0xe6>
 802f41e:	07e8      	lsls	r0, r5, #31
 802f420:	d507      	bpl.n	802f432 <UART_RxISR_16BIT_FIFOEN+0xe6>
          __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_NEF);
 802f422:	2104      	movs	r1, #4
 802f424:	6219      	str	r1, [r3, #32]
          huart->ErrorCode |= HAL_UART_ERROR_NE;
 802f426:	f8d4 3090 	ldr.w	r3, [r4, #144]	; 0x90
 802f42a:	f043 0302 	orr.w	r3, r3, #2
 802f42e:	f8c4 3090 	str.w	r3, [r4, #144]	; 0x90
        if (huart->ErrorCode != HAL_UART_ERROR_NONE)
 802f432:	f8d4 3090 	ldr.w	r3, [r4, #144]	; 0x90
 802f436:	b12b      	cbz	r3, 802f444 <UART_RxISR_16BIT_FIFOEN+0xf8>
          huart->ErrorCallback(huart);
 802f438:	4620      	mov	r0, r4
 802f43a:	f8d4 30a4 	ldr.w	r3, [r4, #164]	; 0xa4
 802f43e:	4798      	blx	r3
          huart->ErrorCode = HAL_UART_ERROR_NONE;
 802f440:	f8c4 6090 	str.w	r6, [r4, #144]	; 0x90
      if (huart->RxXferCount == 0U)
 802f444:	f8b4 305e 	ldrh.w	r3, [r4, #94]	; 0x5e
 802f448:	b29b      	uxth	r3, r3
 802f44a:	2b00      	cmp	r3, #0
 802f44c:	d194      	bne.n	802f378 <UART_RxISR_16BIT_FIFOEN+0x2c>
        ATOMIC_CLEAR_BIT(huart->Instance->CR1, USART_CR1_PEIE);
 802f44e:	6821      	ldr	r1, [r4, #0]
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
 802f450:	e851 3f00 	ldrex	r3, [r1]
 802f454:	f423 7380 	bic.w	r3, r3, #256	; 0x100
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
 802f458:	e841 3000 	strex	r0, r3, [r1]
   return(result);
 802f45c:	6823      	ldr	r3, [r4, #0]
 802f45e:	2800      	cmp	r0, #0
 802f460:	d1f5      	bne.n	802f44e <UART_RxISR_16BIT_FIFOEN+0x102>
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
 802f462:	f103 0208 	add.w	r2, r3, #8
 802f466:	e852 1f00 	ldrex	r1, [r2]
        ATOMIC_CLEAR_BIT(huart->Instance->CR3, (USART_CR3_EIE | USART_CR3_RXFTIE));
 802f46a:	ea01 010a 	and.w	r1, r1, sl
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
 802f46e:	e842 1000 	strex	r0, r1, [r2]
 802f472:	2800      	cmp	r0, #0
 802f474:	d1f5      	bne.n	802f462 <UART_RxISR_16BIT_FIFOEN+0x116>
        huart->RxState = HAL_UART_STATE_READY;
 802f476:	2120      	movs	r1, #32
        if (!(IS_LPUART_INSTANCE(huart->Instance)))
 802f478:	455b      	cmp	r3, fp
        huart->RxState = HAL_UART_STATE_READY;
 802f47a:	f8c4 108c 	str.w	r1, [r4, #140]	; 0x8c
        huart->RxISR = NULL;
 802f47e:	6760      	str	r0, [r4, #116]	; 0x74
        huart->RxEventType = HAL_UART_RXEVENT_TC;
 802f480:	6720      	str	r0, [r4, #112]	; 0x70
        if (!(IS_LPUART_INSTANCE(huart->Instance)))
 802f482:	d00a      	beq.n	802f49a <UART_RxISR_16BIT_FIFOEN+0x14e>
          if (READ_BIT(huart->Instance->CR2, USART_CR2_RTOEN) != 0U)
 802f484:	6859      	ldr	r1, [r3, #4]
 802f486:	0209      	lsls	r1, r1, #8
 802f488:	d507      	bpl.n	802f49a <UART_RxISR_16BIT_FIFOEN+0x14e>
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
 802f48a:	e853 1f00 	ldrex	r1, [r3]
            ATOMIC_CLEAR_BIT(huart->Instance->CR1, USART_CR1_RTOIE);
 802f48e:	f021 6180 	bic.w	r1, r1, #67108864	; 0x4000000
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
 802f492:	e843 1000 	strex	r0, r1, [r3]
 802f496:	2800      	cmp	r0, #0
 802f498:	d1f7      	bne.n	802f48a <UART_RxISR_16BIT_FIFOEN+0x13e>
        if (huart->ReceptionType == HAL_UART_RECEPTION_TOIDLE)
 802f49a:	6ee1      	ldr	r1, [r4, #108]	; 0x6c
 802f49c:	2901      	cmp	r1, #1
 802f49e:	d114      	bne.n	802f4ca <UART_RxISR_16BIT_FIFOEN+0x17e>
          huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
 802f4a0:	66e6      	str	r6, [r4, #108]	; 0x6c
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
 802f4a2:	e853 1f00 	ldrex	r1, [r3]
          ATOMIC_CLEAR_BIT(huart->Instance->CR1, USART_CR1_IDLEIE);
 802f4a6:	f021 0110 	bic.w	r1, r1, #16
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
 802f4aa:	e843 1000 	strex	r0, r1, [r3]
 802f4ae:	2800      	cmp	r0, #0
 802f4b0:	d1f7      	bne.n	802f4a2 <UART_RxISR_16BIT_FIFOEN+0x156>
          if (__HAL_UART_GET_FLAG(huart, UART_FLAG_IDLE) == SET)
 802f4b2:	69d9      	ldr	r1, [r3, #28]
          huart->RxEventCallback(huart, huart->RxXferSize);
 802f4b4:	4620      	mov	r0, r4
          if (__HAL_UART_GET_FLAG(huart, UART_FLAG_IDLE) == SET)
 802f4b6:	06ca      	lsls	r2, r1, #27
            __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_IDLEF);
 802f4b8:	bf44      	itt	mi
 802f4ba:	2110      	movmi	r1, #16
 802f4bc:	6219      	strmi	r1, [r3, #32]
          huart->RxEventCallback(huart, huart->RxXferSize);
 802f4be:	f8d4 30bc 	ldr.w	r3, [r4, #188]	; 0xbc
 802f4c2:	f8b4 105c 	ldrh.w	r1, [r4, #92]	; 0x5c
 802f4c6:	4798      	blx	r3
 802f4c8:	e756      	b.n	802f378 <UART_RxISR_16BIT_FIFOEN+0x2c>
          huart->RxCpltCallback(huart);
 802f4ca:	4620      	mov	r0, r4
 802f4cc:	f8d4 30a0 	ldr.w	r3, [r4, #160]	; 0xa0
 802f4d0:	4798      	blx	r3
 802f4d2:	e751      	b.n	802f378 <UART_RxISR_16BIT_FIFOEN+0x2c>
    __HAL_UART_SEND_REQ(huart, UART_RXDATA_FLUSH_REQUEST);
 802f4d4:	699a      	ldr	r2, [r3, #24]
 802f4d6:	f042 0208 	orr.w	r2, r2, #8
 802f4da:	619a      	str	r2, [r3, #24]
}
 802f4dc:	e770      	b.n	802f3c0 <UART_RxISR_16BIT_FIFOEN+0x74>
 802f4de:	bf00      	nop
 802f4e0:	0802f0e5 	.word	0x0802f0e5
 802f4e4:	effffffe 	.word	0xeffffffe
 802f4e8:	46002400 	.word	0x46002400

0802f4ec <UART_TxISR_16BIT.part.0>:
      ATOMIC_CLEAR_BIT(huart->Instance->CR1, USART_CR1_TXEIE_TXFNFIE);
 802f4ec:	6802      	ldr	r2, [r0, #0]
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
 802f4ee:	e852 3f00 	ldrex	r3, [r2]
 802f4f2:	f023 0380 	bic.w	r3, r3, #128	; 0x80
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
 802f4f6:	e842 3100 	strex	r1, r3, [r2]
   return(result);
 802f4fa:	6802      	ldr	r2, [r0, #0]
 802f4fc:	2900      	cmp	r1, #0
 802f4fe:	d1f5      	bne.n	802f4ec <UART_TxISR_16BIT.part.0>
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
 802f500:	e852 3f00 	ldrex	r3, [r2]
      ATOMIC_SET_BIT(huart->Instance->CR1, USART_CR1_TCIE);
 802f504:	f043 0340 	orr.w	r3, r3, #64	; 0x40
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
 802f508:	e842 3100 	strex	r1, r3, [r2]
 802f50c:	2900      	cmp	r1, #0
 802f50e:	d1f7      	bne.n	802f500 <UART_TxISR_16BIT.part.0+0x14>
}
 802f510:	4770      	bx	lr

0802f512 <UART_TxISR_8BIT>:
  if (huart->gState == HAL_UART_STATE_BUSY_TX)
 802f512:	f8d0 2088 	ldr.w	r2, [r0, #136]	; 0x88
{
 802f516:	4603      	mov	r3, r0
  if (huart->gState == HAL_UART_STATE_BUSY_TX)
 802f518:	2a21      	cmp	r2, #33	; 0x21
 802f51a:	d111      	bne.n	802f540 <UART_TxISR_8BIT+0x2e>
    if (huart->TxXferCount == 0U)
 802f51c:	f8b0 2056 	ldrh.w	r2, [r0, #86]	; 0x56
 802f520:	b292      	uxth	r2, r2
 802f522:	b90a      	cbnz	r2, 802f528 <UART_TxISR_8BIT+0x16>
 802f524:	f7ff bfe2 	b.w	802f4ec <UART_TxISR_16BIT.part.0>
      huart->Instance->TDR = (uint8_t)(*huart->pTxBuffPtr & (uint8_t)0xFF);
 802f528:	6d02      	ldr	r2, [r0, #80]	; 0x50
 802f52a:	6801      	ldr	r1, [r0, #0]
 802f52c:	f812 0b01 	ldrb.w	r0, [r2], #1
 802f530:	6288      	str	r0, [r1, #40]	; 0x28
      huart->pTxBuffPtr++;
 802f532:	651a      	str	r2, [r3, #80]	; 0x50
      huart->TxXferCount--;
 802f534:	f8b3 2056 	ldrh.w	r2, [r3, #86]	; 0x56
 802f538:	3a01      	subs	r2, #1
 802f53a:	b292      	uxth	r2, r2
 802f53c:	f8a3 2056 	strh.w	r2, [r3, #86]	; 0x56
}
 802f540:	4770      	bx	lr

0802f542 <UART_TxISR_16BIT>:
  if (huart->gState == HAL_UART_STATE_BUSY_TX)
 802f542:	f8d0 2088 	ldr.w	r2, [r0, #136]	; 0x88
{
 802f546:	4603      	mov	r3, r0
  if (huart->gState == HAL_UART_STATE_BUSY_TX)
 802f548:	2a21      	cmp	r2, #33	; 0x21
 802f54a:	d113      	bne.n	802f574 <UART_TxISR_16BIT+0x32>
    if (huart->TxXferCount == 0U)
 802f54c:	f8b0 2056 	ldrh.w	r2, [r0, #86]	; 0x56
 802f550:	b292      	uxth	r2, r2
 802f552:	b90a      	cbnz	r2, 802f558 <UART_TxISR_16BIT+0x16>
 802f554:	f7ff bfca 	b.w	802f4ec <UART_TxISR_16BIT.part.0>
      huart->Instance->TDR = (((uint32_t)(*tmp)) & 0x01FFUL);
 802f558:	6d1a      	ldr	r2, [r3, #80]	; 0x50
 802f55a:	6800      	ldr	r0, [r0, #0]
 802f55c:	f832 1b02 	ldrh.w	r1, [r2], #2
 802f560:	f3c1 0108 	ubfx	r1, r1, #0, #9
 802f564:	6281      	str	r1, [r0, #40]	; 0x28
      huart->pTxBuffPtr += 2U;
 802f566:	651a      	str	r2, [r3, #80]	; 0x50
      huart->TxXferCount--;
 802f568:	f8b3 2056 	ldrh.w	r2, [r3, #86]	; 0x56
 802f56c:	3a01      	subs	r2, #1
 802f56e:	b292      	uxth	r2, r2
 802f570:	f8a3 2056 	strh.w	r2, [r3, #86]	; 0x56
}
 802f574:	4770      	bx	lr

0802f576 <UART_TxISR_8BIT_FIFOEN>:
  if (huart->gState == HAL_UART_STATE_BUSY_TX)
 802f576:	f8d0 3088 	ldr.w	r3, [r0, #136]	; 0x88
{
 802f57a:	b510      	push	{r4, lr}
  if (huart->gState == HAL_UART_STATE_BUSY_TX)
 802f57c:	2b21      	cmp	r3, #33	; 0x21
 802f57e:	d11b      	bne.n	802f5b8 <UART_TxISR_8BIT_FIFOEN+0x42>
    for (nb_tx_data = huart->NbTxDataToProcess ; nb_tx_data > 0U ; nb_tx_data--)
 802f580:	f8b0 206a 	ldrh.w	r2, [r0, #106]	; 0x6a
 802f584:	b1c2      	cbz	r2, 802f5b8 <UART_TxISR_8BIT_FIFOEN+0x42>
      if (huart->TxXferCount == 0U)
 802f586:	f8b0 1056 	ldrh.w	r1, [r0, #86]	; 0x56
      else if (READ_BIT(huart->Instance->ISR, USART_ISR_TXE_TXFNF) != 0U)
 802f58a:	6803      	ldr	r3, [r0, #0]
      if (huart->TxXferCount == 0U)
 802f58c:	b289      	uxth	r1, r1
 802f58e:	b9a1      	cbnz	r1, 802f5ba <UART_TxISR_8BIT_FIFOEN+0x44>
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
 802f590:	f103 0208 	add.w	r2, r3, #8
 802f594:	e852 2f00 	ldrex	r2, [r2]
        ATOMIC_CLEAR_BIT(huart->Instance->CR3, USART_CR3_TXFTIE);
 802f598:	f422 0200 	bic.w	r2, r2, #8388608	; 0x800000
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
 802f59c:	f103 0008 	add.w	r0, r3, #8
 802f5a0:	e840 2100 	strex	r1, r2, [r0]
 802f5a4:	2900      	cmp	r1, #0
 802f5a6:	d1f3      	bne.n	802f590 <UART_TxISR_8BIT_FIFOEN+0x1a>
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
 802f5a8:	e853 2f00 	ldrex	r2, [r3]
        ATOMIC_SET_BIT(huart->Instance->CR1, USART_CR1_TCIE);
 802f5ac:	f042 0240 	orr.w	r2, r2, #64	; 0x40
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
 802f5b0:	e843 2100 	strex	r1, r2, [r3]
 802f5b4:	2900      	cmp	r1, #0
 802f5b6:	d1f7      	bne.n	802f5a8 <UART_TxISR_8BIT_FIFOEN+0x32>
}
 802f5b8:	bd10      	pop	{r4, pc}
      else if (READ_BIT(huart->Instance->ISR, USART_ISR_TXE_TXFNF) != 0U)
 802f5ba:	69d9      	ldr	r1, [r3, #28]
 802f5bc:	0609      	lsls	r1, r1, #24
 802f5be:	d50a      	bpl.n	802f5d6 <UART_TxISR_8BIT_FIFOEN+0x60>
        huart->Instance->TDR = (uint8_t)(*huart->pTxBuffPtr & (uint8_t)0xFF);
 802f5c0:	6d01      	ldr	r1, [r0, #80]	; 0x50
 802f5c2:	f811 4b01 	ldrb.w	r4, [r1], #1
 802f5c6:	629c      	str	r4, [r3, #40]	; 0x28
        huart->TxXferCount--;
 802f5c8:	f8b0 3056 	ldrh.w	r3, [r0, #86]	; 0x56
        huart->pTxBuffPtr++;
 802f5cc:	6501      	str	r1, [r0, #80]	; 0x50
        huart->TxXferCount--;
 802f5ce:	3b01      	subs	r3, #1
 802f5d0:	b29b      	uxth	r3, r3
 802f5d2:	f8a0 3056 	strh.w	r3, [r0, #86]	; 0x56
    for (nb_tx_data = huart->NbTxDataToProcess ; nb_tx_data > 0U ; nb_tx_data--)
 802f5d6:	3a01      	subs	r2, #1
 802f5d8:	b292      	uxth	r2, r2
 802f5da:	e7d3      	b.n	802f584 <UART_TxISR_8BIT_FIFOEN+0xe>

0802f5dc <UART_TxISR_16BIT_FIFOEN>:
  if (huart->gState == HAL_UART_STATE_BUSY_TX)
 802f5dc:	f8d0 3088 	ldr.w	r3, [r0, #136]	; 0x88
{
 802f5e0:	b510      	push	{r4, lr}
  if (huart->gState == HAL_UART_STATE_BUSY_TX)
 802f5e2:	2b21      	cmp	r3, #33	; 0x21
 802f5e4:	d11b      	bne.n	802f61e <UART_TxISR_16BIT_FIFOEN+0x42>
    for (nb_tx_data = huart->NbTxDataToProcess ; nb_tx_data > 0U ; nb_tx_data--)
 802f5e6:	f8b0 206a 	ldrh.w	r2, [r0, #106]	; 0x6a
 802f5ea:	b1c2      	cbz	r2, 802f61e <UART_TxISR_16BIT_FIFOEN+0x42>
      if (huart->TxXferCount == 0U)
 802f5ec:	f8b0 1056 	ldrh.w	r1, [r0, #86]	; 0x56
      else if (READ_BIT(huart->Instance->ISR, USART_ISR_TXE_TXFNF) != 0U)
 802f5f0:	6803      	ldr	r3, [r0, #0]
      if (huart->TxXferCount == 0U)
 802f5f2:	b289      	uxth	r1, r1
 802f5f4:	b9a1      	cbnz	r1, 802f620 <UART_TxISR_16BIT_FIFOEN+0x44>
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
 802f5f6:	f103 0208 	add.w	r2, r3, #8
 802f5fa:	e852 2f00 	ldrex	r2, [r2]
        ATOMIC_CLEAR_BIT(huart->Instance->CR3, USART_CR3_TXFTIE);
 802f5fe:	f422 0200 	bic.w	r2, r2, #8388608	; 0x800000
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
 802f602:	f103 0008 	add.w	r0, r3, #8
 802f606:	e840 2100 	strex	r1, r2, [r0]
 802f60a:	2900      	cmp	r1, #0
 802f60c:	d1f3      	bne.n	802f5f6 <UART_TxISR_16BIT_FIFOEN+0x1a>
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
 802f60e:	e853 2f00 	ldrex	r2, [r3]
        ATOMIC_SET_BIT(huart->Instance->CR1, USART_CR1_TCIE);
 802f612:	f042 0240 	orr.w	r2, r2, #64	; 0x40
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
 802f616:	e843 2100 	strex	r1, r2, [r3]
 802f61a:	2900      	cmp	r1, #0
 802f61c:	d1f7      	bne.n	802f60e <UART_TxISR_16BIT_FIFOEN+0x32>
}
 802f61e:	bd10      	pop	{r4, pc}
      else if (READ_BIT(huart->Instance->ISR, USART_ISR_TXE_TXFNF) != 0U)
 802f620:	69d9      	ldr	r1, [r3, #28]
 802f622:	0609      	lsls	r1, r1, #24
 802f624:	d50c      	bpl.n	802f640 <UART_TxISR_16BIT_FIFOEN+0x64>
        huart->Instance->TDR = (((uint32_t)(*tmp)) & 0x01FFUL);
 802f626:	6d01      	ldr	r1, [r0, #80]	; 0x50
 802f628:	f831 4b02 	ldrh.w	r4, [r1], #2
 802f62c:	f3c4 0408 	ubfx	r4, r4, #0, #9
 802f630:	629c      	str	r4, [r3, #40]	; 0x28
        huart->TxXferCount--;
 802f632:	f8b0 3056 	ldrh.w	r3, [r0, #86]	; 0x56
        huart->pTxBuffPtr += 2U;
 802f636:	6501      	str	r1, [r0, #80]	; 0x50
        huart->TxXferCount--;
 802f638:	3b01      	subs	r3, #1
 802f63a:	b29b      	uxth	r3, r3
 802f63c:	f8a0 3056 	strh.w	r3, [r0, #86]	; 0x56
    for (nb_tx_data = huart->NbTxDataToProcess ; nb_tx_data > 0U ; nb_tx_data--)
 802f640:	3a01      	subs	r2, #1
 802f642:	b292      	uxth	r2, r2
 802f644:	e7d1      	b.n	802f5ea <UART_TxISR_16BIT_FIFOEN+0xe>

0802f646 <HAL_UART_AbortReceiveCpltCallback>:
 802f646:	4770      	bx	lr

0802f648 <HAL_UART_TxCpltCallback>:
 802f648:	4770      	bx	lr

0802f64a <HAL_UART_TxHalfCpltCallback>:
 802f64a:	4770      	bx	lr

0802f64c <HAL_UART_RxCpltCallback>:
 802f64c:	4770      	bx	lr

0802f64e <HAL_UART_RxHalfCpltCallback>:
 802f64e:	4770      	bx	lr

0802f650 <HAL_UART_ErrorCallback>:
 802f650:	4770      	bx	lr

0802f652 <HAL_UART_AbortCpltCallback>:
 802f652:	4770      	bx	lr

0802f654 <HAL_UART_AbortTransmitCpltCallback>:
 802f654:	4770      	bx	lr
	...

0802f658 <HAL_UART_DeInit>:
{
 802f658:	b510      	push	{r4, lr}
  if (huart == NULL)
 802f65a:	4604      	mov	r4, r0
 802f65c:	b388      	cbz	r0, 802f6c2 <HAL_UART_DeInit+0x6a>
  assert_param((IS_UART_INSTANCE(huart->Instance)) || (IS_LPUART_INSTANCE(huart->Instance)));
 802f65e:	6803      	ldr	r3, [r0, #0]
 802f660:	4a19      	ldr	r2, [pc, #100]	; (802f6c8 <HAL_UART_DeInit+0x70>)
 802f662:	4293      	cmp	r3, r2
 802f664:	d00b      	beq.n	802f67e <HAL_UART_DeInit+0x26>
 802f666:	f5a2 4274 	sub.w	r2, r2, #62464	; 0xf400
 802f66a:	4293      	cmp	r3, r2
 802f66c:	d007      	beq.n	802f67e <HAL_UART_DeInit+0x26>
 802f66e:	4a17      	ldr	r2, [pc, #92]	; (802f6cc <HAL_UART_DeInit+0x74>)
 802f670:	4293      	cmp	r3, r2
 802f672:	d004      	beq.n	802f67e <HAL_UART_DeInit+0x26>
 802f674:	f240 217b 	movw	r1, #635	; 0x27b
 802f678:	4815      	ldr	r0, [pc, #84]	; (802f6d0 <HAL_UART_DeInit+0x78>)
 802f67a:	f7f6 fd8f 	bl	802619c <assert_failed>
  huart->gState = HAL_UART_STATE_BUSY;
 802f67e:	2324      	movs	r3, #36	; 0x24
 802f680:	f8c4 3088 	str.w	r3, [r4, #136]	; 0x88
  __HAL_UART_DISABLE(huart);
 802f684:	6823      	ldr	r3, [r4, #0]
 802f686:	681a      	ldr	r2, [r3, #0]
 802f688:	f022 0201 	bic.w	r2, r2, #1
 802f68c:	601a      	str	r2, [r3, #0]
  huart->Instance->CR1 = 0x0U;
 802f68e:	2200      	movs	r2, #0
 802f690:	601a      	str	r2, [r3, #0]
  huart->Instance->CR2 = 0x0U;
 802f692:	605a      	str	r2, [r3, #4]
  huart->Instance->CR3 = 0x0U;
 802f694:	609a      	str	r2, [r3, #8]
  if (huart->MspDeInitCallback == NULL)
 802f696:	f8d4 30c4 	ldr.w	r3, [r4, #196]	; 0xc4
 802f69a:	b913      	cbnz	r3, 802f6a2 <HAL_UART_DeInit+0x4a>
    huart->MspDeInitCallback = HAL_UART_MspDeInit;
 802f69c:	4b0d      	ldr	r3, [pc, #52]	; (802f6d4 <HAL_UART_DeInit+0x7c>)
 802f69e:	f8c4 30c4 	str.w	r3, [r4, #196]	; 0xc4
  huart->MspDeInitCallback(huart);
 802f6a2:	4620      	mov	r0, r4
 802f6a4:	f8d4 30c4 	ldr.w	r3, [r4, #196]	; 0xc4
 802f6a8:	4798      	blx	r3
  huart->ErrorCode = HAL_UART_ERROR_NONE;
 802f6aa:	2000      	movs	r0, #0
 802f6ac:	f8c4 0090 	str.w	r0, [r4, #144]	; 0x90
  __HAL_UNLOCK(huart);
 802f6b0:	f884 0084 	strb.w	r0, [r4, #132]	; 0x84
  huart->gState = HAL_UART_STATE_RESET;
 802f6b4:	f8c4 0088 	str.w	r0, [r4, #136]	; 0x88
  huart->RxState = HAL_UART_STATE_RESET;
 802f6b8:	f8c4 008c 	str.w	r0, [r4, #140]	; 0x8c
  huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
 802f6bc:	66e0      	str	r0, [r4, #108]	; 0x6c
  huart->RxEventType = HAL_UART_RXEVENT_TC;
 802f6be:	6720      	str	r0, [r4, #112]	; 0x70
}
 802f6c0:	bd10      	pop	{r4, pc}
    return HAL_ERROR;
 802f6c2:	2001      	movs	r0, #1
 802f6c4:	e7fc      	b.n	802f6c0 <HAL_UART_DeInit+0x68>
 802f6c6:	bf00      	nop
 802f6c8:	40013800 	.word	0x40013800
 802f6cc:	46002400 	.word	0x46002400
 802f6d0:	080341ed 	.word	0x080341ed
 802f6d4:	0802655d 	.word	0x0802655d

0802f6d8 <HAL_UART_Transmit_IT>:
  if (huart->gState == HAL_UART_STATE_READY)
 802f6d8:	f8d0 3088 	ldr.w	r3, [r0, #136]	; 0x88
{
 802f6dc:	b510      	push	{r4, lr}
  if (huart->gState == HAL_UART_STATE_READY)
 802f6de:	2b20      	cmp	r3, #32
 802f6e0:	d143      	bne.n	802f76a <HAL_UART_Transmit_IT+0x92>
    if ((pData == NULL) || (Size == 0U))
 802f6e2:	2900      	cmp	r1, #0
 802f6e4:	d043      	beq.n	802f76e <HAL_UART_Transmit_IT+0x96>
 802f6e6:	2a00      	cmp	r2, #0
 802f6e8:	d041      	beq.n	802f76e <HAL_UART_Transmit_IT+0x96>
    huart->ErrorCode = HAL_UART_ERROR_NONE;
 802f6ea:	2300      	movs	r3, #0
    huart->TxXferCount = Size;
 802f6ec:	f8a0 2056 	strh.w	r2, [r0, #86]	; 0x56
    huart->ErrorCode = HAL_UART_ERROR_NONE;
 802f6f0:	f8c0 3090 	str.w	r3, [r0, #144]	; 0x90
    huart->gState = HAL_UART_STATE_BUSY_TX;
 802f6f4:	2321      	movs	r3, #33	; 0x21
    huart->TxXferSize  = Size;
 802f6f6:	f8a0 2054 	strh.w	r2, [r0, #84]	; 0x54
    if (huart->FifoMode == UART_FIFOMODE_ENABLE)
 802f6fa:	6e42      	ldr	r2, [r0, #100]	; 0x64
    huart->gState = HAL_UART_STATE_BUSY_TX;
 802f6fc:	f8c0 3088 	str.w	r3, [r0, #136]	; 0x88
    if (huart->FifoMode == UART_FIFOMODE_ENABLE)
 802f700:	f1b2 5f00 	cmp.w	r2, #536870912	; 0x20000000
      if ((huart->Init.WordLength == UART_WORDLENGTH_9B) && (huart->Init.Parity == UART_PARITY_NONE))
 802f704:	6883      	ldr	r3, [r0, #8]
 802f706:	6802      	ldr	r2, [r0, #0]
    huart->pTxBuffPtr  = pData;
 802f708:	6501      	str	r1, [r0, #80]	; 0x50
    if (huart->FifoMode == UART_FIFOMODE_ENABLE)
 802f70a:	d119      	bne.n	802f740 <HAL_UART_Transmit_IT+0x68>
      if ((huart->Init.WordLength == UART_WORDLENGTH_9B) && (huart->Init.Parity == UART_PARITY_NONE))
 802f70c:	f5b3 5f80 	cmp.w	r3, #4096	; 0x1000
 802f710:	d114      	bne.n	802f73c <HAL_UART_Transmit_IT+0x64>
 802f712:	6904      	ldr	r4, [r0, #16]
        huart->TxISR = UART_TxISR_16BIT_FIFOEN;
 802f714:	4b17      	ldr	r3, [pc, #92]	; (802f774 <HAL_UART_Transmit_IT+0x9c>)
 802f716:	4918      	ldr	r1, [pc, #96]	; (802f778 <HAL_UART_Transmit_IT+0xa0>)
 802f718:	2c00      	cmp	r4, #0
 802f71a:	bf08      	it	eq
 802f71c:	460b      	moveq	r3, r1
 802f71e:	6783      	str	r3, [r0, #120]	; 0x78
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
 802f720:	f102 0308 	add.w	r3, r2, #8
 802f724:	e853 3f00 	ldrex	r3, [r3]
      ATOMIC_SET_BIT(huart->Instance->CR3, USART_CR3_TXFTIE);
 802f728:	f443 0300 	orr.w	r3, r3, #8388608	; 0x800000
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
 802f72c:	f102 0008 	add.w	r0, r2, #8
 802f730:	e840 3100 	strex	r1, r3, [r0]
 802f734:	2900      	cmp	r1, #0
 802f736:	d1f3      	bne.n	802f720 <HAL_UART_Transmit_IT+0x48>
    return HAL_OK;
 802f738:	2000      	movs	r0, #0
}
 802f73a:	bd10      	pop	{r4, pc}
        huart->TxISR = UART_TxISR_8BIT_FIFOEN;
 802f73c:	4b0d      	ldr	r3, [pc, #52]	; (802f774 <HAL_UART_Transmit_IT+0x9c>)
 802f73e:	e7ee      	b.n	802f71e <HAL_UART_Transmit_IT+0x46>
      if ((huart->Init.WordLength == UART_WORDLENGTH_9B) && (huart->Init.Parity == UART_PARITY_NONE))
 802f740:	f5b3 5f80 	cmp.w	r3, #4096	; 0x1000
 802f744:	d10f      	bne.n	802f766 <HAL_UART_Transmit_IT+0x8e>
 802f746:	6904      	ldr	r4, [r0, #16]
        huart->TxISR = UART_TxISR_16BIT;
 802f748:	4b0c      	ldr	r3, [pc, #48]	; (802f77c <HAL_UART_Transmit_IT+0xa4>)
 802f74a:	490d      	ldr	r1, [pc, #52]	; (802f780 <HAL_UART_Transmit_IT+0xa8>)
 802f74c:	2c00      	cmp	r4, #0
 802f74e:	bf08      	it	eq
 802f750:	460b      	moveq	r3, r1
 802f752:	6783      	str	r3, [r0, #120]	; 0x78
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
 802f754:	e852 3f00 	ldrex	r3, [r2]
      ATOMIC_SET_BIT(huart->Instance->CR1, USART_CR1_TXEIE_TXFNFIE);
 802f758:	f043 0380 	orr.w	r3, r3, #128	; 0x80
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
 802f75c:	e842 3100 	strex	r1, r3, [r2]
 802f760:	2900      	cmp	r1, #0
 802f762:	d1f7      	bne.n	802f754 <HAL_UART_Transmit_IT+0x7c>
 802f764:	e7e8      	b.n	802f738 <HAL_UART_Transmit_IT+0x60>
        huart->TxISR = UART_TxISR_8BIT;
 802f766:	4b05      	ldr	r3, [pc, #20]	; (802f77c <HAL_UART_Transmit_IT+0xa4>)
 802f768:	e7f3      	b.n	802f752 <HAL_UART_Transmit_IT+0x7a>
    return HAL_BUSY;
 802f76a:	2002      	movs	r0, #2
 802f76c:	e7e5      	b.n	802f73a <HAL_UART_Transmit_IT+0x62>
      return HAL_ERROR;
 802f76e:	2001      	movs	r0, #1
 802f770:	e7e3      	b.n	802f73a <HAL_UART_Transmit_IT+0x62>
 802f772:	bf00      	nop
 802f774:	0802f577 	.word	0x0802f577
 802f778:	0802f5dd 	.word	0x0802f5dd
 802f77c:	0802f513 	.word	0x0802f513
 802f780:	0802f543 	.word	0x0802f543

0802f784 <HAL_UART_Transmit_DMA>:
{
 802f784:	b538      	push	{r3, r4, r5, lr}
 802f786:	4613      	mov	r3, r2
  if (huart->gState == HAL_UART_STATE_READY)
 802f788:	f8d0 2088 	ldr.w	r2, [r0, #136]	; 0x88
{
 802f78c:	4604      	mov	r4, r0
  if (huart->gState == HAL_UART_STATE_READY)
 802f78e:	2a20      	cmp	r2, #32
 802f790:	d14c      	bne.n	802f82c <HAL_UART_Transmit_DMA+0xa8>
    if ((pData == NULL) || (Size == 0U))
 802f792:	b339      	cbz	r1, 802f7e4 <HAL_UART_Transmit_DMA+0x60>
 802f794:	b333      	cbz	r3, 802f7e4 <HAL_UART_Transmit_DMA+0x60>
    huart->ErrorCode = HAL_UART_ERROR_NONE;
 802f796:	2200      	movs	r2, #0
    huart->TxXferCount = Size;
 802f798:	f8a0 3056 	strh.w	r3, [r0, #86]	; 0x56
    huart->pTxBuffPtr  = pData;
 802f79c:	6501      	str	r1, [r0, #80]	; 0x50
    huart->TxXferSize  = Size;
 802f79e:	f8a0 3054 	strh.w	r3, [r0, #84]	; 0x54
    huart->ErrorCode = HAL_UART_ERROR_NONE;
 802f7a2:	f8c0 2090 	str.w	r2, [r0, #144]	; 0x90
    huart->gState = HAL_UART_STATE_BUSY_TX;
 802f7a6:	2021      	movs	r0, #33	; 0x21
 802f7a8:	f8c4 0088 	str.w	r0, [r4, #136]	; 0x88
    if (huart->hdmatx != NULL)
 802f7ac:	6fe0      	ldr	r0, [r4, #124]	; 0x7c
 802f7ae:	b338      	cbz	r0, 802f800 <HAL_UART_Transmit_DMA+0x7c>
      huart->hdmatx->XferCpltCallback = UART_DMATransmitCplt;
 802f7b0:	4d1f      	ldr	r5, [pc, #124]	; (802f830 <HAL_UART_Transmit_DMA+0xac>)
 802f7b2:	6605      	str	r5, [r0, #96]	; 0x60
      huart->hdmatx->XferHalfCpltCallback = UART_DMATxHalfCplt;
 802f7b4:	4d1f      	ldr	r5, [pc, #124]	; (802f834 <HAL_UART_Transmit_DMA+0xb0>)
 802f7b6:	6645      	str	r5, [r0, #100]	; 0x64
      huart->hdmatx->XferErrorCallback = UART_DMAError;
 802f7b8:	4d1f      	ldr	r5, [pc, #124]	; (802f838 <HAL_UART_Transmit_DMA+0xb4>)
      huart->hdmatx->XferAbortCallback = NULL;
 802f7ba:	e9c0 521a 	strd	r5, r2, [r0, #104]	; 0x68
      if ((huart->Init.WordLength == UART_WORDLENGTH_9B) && (huart->Init.Parity == UART_PARITY_NONE))
 802f7be:	68a2      	ldr	r2, [r4, #8]
 802f7c0:	f5b2 5f80 	cmp.w	r2, #4096	; 0x1000
 802f7c4:	d103      	bne.n	802f7ce <HAL_UART_Transmit_DMA+0x4a>
 802f7c6:	6922      	ldr	r2, [r4, #16]
 802f7c8:	b90a      	cbnz	r2, 802f7ce <HAL_UART_Transmit_DMA+0x4a>
        nbByte = Size * 2U;
 802f7ca:	005b      	lsls	r3, r3, #1
 802f7cc:	b29b      	uxth	r3, r3
      if ((huart->hdmatx->Mode & DMA_LINKEDLIST) == DMA_LINKEDLIST)
 802f7ce:	6d02      	ldr	r2, [r0, #80]	; 0x50
 802f7d0:	0612      	lsls	r2, r2, #24
 802f7d2:	d526      	bpl.n	802f822 <HAL_UART_Transmit_DMA+0x9e>
        if ((huart->hdmatx->LinkedListQueue != NULL) && (huart->hdmatx->LinkedListQueue->Head != NULL))
 802f7d4:	6f42      	ldr	r2, [r0, #116]	; 0x74
 802f7d6:	b93a      	cbnz	r2, 802f7e8 <HAL_UART_Transmit_DMA+0x64>
        huart->ErrorCode = HAL_UART_ERROR_DMA;
 802f7d8:	2310      	movs	r3, #16
 802f7da:	f8c4 3090 	str.w	r3, [r4, #144]	; 0x90
        huart->gState = HAL_UART_STATE_READY;
 802f7de:	2320      	movs	r3, #32
 802f7e0:	f8c4 3088 	str.w	r3, [r4, #136]	; 0x88
      return HAL_ERROR;
 802f7e4:	2001      	movs	r0, #1
 802f7e6:	e01b      	b.n	802f820 <HAL_UART_Transmit_DMA+0x9c>
        if ((huart->hdmatx->LinkedListQueue != NULL) && (huart->hdmatx->LinkedListQueue->Head != NULL))
 802f7e8:	6812      	ldr	r2, [r2, #0]
 802f7ea:	2a00      	cmp	r2, #0
 802f7ec:	d0f4      	beq.n	802f7d8 <HAL_UART_Transmit_DMA+0x54>
          huart->hdmatx->LinkedListQueue->Head->LinkRegisters[NODE_CSAR_DEFAULT_OFFSET] = (uint32_t)huart->pTxBuffPtr;
 802f7ee:	e9c2 3102 	strd	r3, r1, [r2, #8]
            (uint32_t)&huart->Instance->TDR;
 802f7f2:	6823      	ldr	r3, [r4, #0]
 802f7f4:	3328      	adds	r3, #40	; 0x28
          huart->hdmatx->LinkedListQueue->Head->LinkRegisters[NODE_CDAR_DEFAULT_OFFSET] =
 802f7f6:	6113      	str	r3, [r2, #16]
          status = HAL_DMAEx_List_Start_IT(huart->hdmatx);
 802f7f8:	f7fc fcd4 	bl	802c1a4 <HAL_DMAEx_List_Start_IT>
      if (status != HAL_OK)
 802f7fc:	2800      	cmp	r0, #0
 802f7fe:	d1eb      	bne.n	802f7d8 <HAL_UART_Transmit_DMA+0x54>
    __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_TCF);
 802f800:	2240      	movs	r2, #64	; 0x40
 802f802:	6823      	ldr	r3, [r4, #0]
 802f804:	621a      	str	r2, [r3, #32]
 802f806:	6822      	ldr	r2, [r4, #0]
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
 802f808:	f102 0308 	add.w	r3, r2, #8
 802f80c:	e853 3f00 	ldrex	r3, [r3]
    ATOMIC_SET_BIT(huart->Instance->CR3, USART_CR3_DMAT);
 802f810:	f043 0380 	orr.w	r3, r3, #128	; 0x80
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
 802f814:	f102 0108 	add.w	r1, r2, #8
 802f818:	e841 3000 	strex	r0, r3, [r1]
 802f81c:	2800      	cmp	r0, #0
 802f81e:	d1f3      	bne.n	802f808 <HAL_UART_Transmit_DMA+0x84>
}
 802f820:	bd38      	pop	{r3, r4, r5, pc}
        status = HAL_DMA_Start_IT(huart->hdmatx, (uint32_t)huart->pTxBuffPtr, (uint32_t)&huart->Instance->TDR, nbByte);
 802f822:	6822      	ldr	r2, [r4, #0]
 802f824:	3228      	adds	r2, #40	; 0x28
 802f826:	f7fc fb15 	bl	802be54 <HAL_DMA_Start_IT>
 802f82a:	e7e7      	b.n	802f7fc <HAL_UART_Transmit_DMA+0x78>
    return HAL_BUSY;
 802f82c:	2002      	movs	r0, #2
 802f82e:	e7f7      	b.n	802f820 <HAL_UART_Transmit_DMA+0x9c>
 802f830:	0802ef71 	.word	0x0802ef71
 802f834:	0802efb3 	.word	0x0802efb3
 802f838:	0802efbb 	.word	0x0802efbb

0802f83c <HAL_UART_IRQHandler>:
{
 802f83c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  if (errorflags == 0U)
 802f840:	f640 060f 	movw	r6, #2063	; 0x80f
  uint32_t isrflags   = READ_REG(huart->Instance->ISR);
 802f844:	6803      	ldr	r3, [r0, #0]
{
 802f846:	4604      	mov	r4, r0
  uint32_t isrflags   = READ_REG(huart->Instance->ISR);
 802f848:	69d9      	ldr	r1, [r3, #28]
  uint32_t cr1its     = READ_REG(huart->Instance->CR1);
 802f84a:	681a      	ldr	r2, [r3, #0]
  if (errorflags == 0U)
 802f84c:	4231      	tst	r1, r6
  uint32_t cr3its     = READ_REG(huart->Instance->CR3);
 802f84e:	689d      	ldr	r5, [r3, #8]
  if (errorflags == 0U)
 802f850:	d110      	bne.n	802f874 <HAL_UART_IRQHandler+0x38>
    if (((isrflags & USART_ISR_RXNE_RXFNE) != 0U)
 802f852:	068e      	lsls	r6, r1, #26
 802f854:	f140 809d 	bpl.w	802f992 <HAL_UART_IRQHandler+0x156>
        && (((cr1its & USART_CR1_RXNEIE_RXFNEIE) != 0U)
 802f858:	f002 0620 	and.w	r6, r2, #32
            || ((cr3its & USART_CR3_RXFTIE) != 0U)))
 802f85c:	f005 5780 	and.w	r7, r5, #268435456	; 0x10000000
 802f860:	433e      	orrs	r6, r7
 802f862:	f000 8096 	beq.w	802f992 <HAL_UART_IRQHandler+0x156>
      if (huart->RxISR != NULL)
 802f866:	6f43      	ldr	r3, [r0, #116]	; 0x74
 802f868:	2b00      	cmp	r3, #0
 802f86a:	f000 8090 	beq.w	802f98e <HAL_UART_IRQHandler+0x152>
}
 802f86e:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
    huart->RxFifoFullCallback(huart);
 802f872:	4718      	bx	r3
      && ((((cr3its & (USART_CR3_RXFTIE | USART_CR3_EIE)) != 0U)
 802f874:	4ea7      	ldr	r6, [pc, #668]	; (802fb14 <HAL_UART_IRQHandler+0x2d8>)
           || ((cr1its & (USART_CR1_RXNEIE_RXFNEIE | USART_CR1_PEIE | USART_CR1_RTOIE)) != 0U))))
 802f876:	48a8      	ldr	r0, [pc, #672]	; (802fb18 <HAL_UART_IRQHandler+0x2dc>)
      && ((((cr3its & (USART_CR3_RXFTIE | USART_CR3_EIE)) != 0U)
 802f878:	402e      	ands	r6, r5
           || ((cr1its & (USART_CR1_RXNEIE_RXFNEIE | USART_CR1_PEIE | USART_CR1_RTOIE)) != 0U))))
 802f87a:	4010      	ands	r0, r2
 802f87c:	4330      	orrs	r0, r6
 802f87e:	f000 8088 	beq.w	802f992 <HAL_UART_IRQHandler+0x156>
    if (((isrflags & USART_ISR_PE) != 0U) && ((cr1its & USART_CR1_PEIE) != 0U))
 802f882:	07cf      	lsls	r7, r1, #31
 802f884:	d509      	bpl.n	802f89a <HAL_UART_IRQHandler+0x5e>
 802f886:	05d0      	lsls	r0, r2, #23
 802f888:	d507      	bpl.n	802f89a <HAL_UART_IRQHandler+0x5e>
      __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_PEF);
 802f88a:	2001      	movs	r0, #1
 802f88c:	6218      	str	r0, [r3, #32]
      huart->ErrorCode |= HAL_UART_ERROR_PE;
 802f88e:	f8d4 0090 	ldr.w	r0, [r4, #144]	; 0x90
 802f892:	f040 0001 	orr.w	r0, r0, #1
 802f896:	f8c4 0090 	str.w	r0, [r4, #144]	; 0x90
    if (((isrflags & USART_ISR_FE) != 0U) && ((cr3its & USART_CR3_EIE) != 0U))
 802f89a:	078f      	lsls	r7, r1, #30
 802f89c:	d509      	bpl.n	802f8b2 <HAL_UART_IRQHandler+0x76>
 802f89e:	07e8      	lsls	r0, r5, #31
 802f8a0:	d507      	bpl.n	802f8b2 <HAL_UART_IRQHandler+0x76>
      __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_FEF);
 802f8a2:	2002      	movs	r0, #2
 802f8a4:	6218      	str	r0, [r3, #32]
      huart->ErrorCode |= HAL_UART_ERROR_FE;
 802f8a6:	f8d4 0090 	ldr.w	r0, [r4, #144]	; 0x90
 802f8aa:	f040 0004 	orr.w	r0, r0, #4
 802f8ae:	f8c4 0090 	str.w	r0, [r4, #144]	; 0x90
    if (((isrflags & USART_ISR_NE) != 0U) && ((cr3its & USART_CR3_EIE) != 0U))
 802f8b2:	074f      	lsls	r7, r1, #29
 802f8b4:	d509      	bpl.n	802f8ca <HAL_UART_IRQHandler+0x8e>
 802f8b6:	07e8      	lsls	r0, r5, #31
 802f8b8:	d507      	bpl.n	802f8ca <HAL_UART_IRQHandler+0x8e>
      __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_NEF);
 802f8ba:	2004      	movs	r0, #4
 802f8bc:	6218      	str	r0, [r3, #32]
      huart->ErrorCode |= HAL_UART_ERROR_NE;
 802f8be:	f8d4 0090 	ldr.w	r0, [r4, #144]	; 0x90
 802f8c2:	f040 0002 	orr.w	r0, r0, #2
 802f8c6:	f8c4 0090 	str.w	r0, [r4, #144]	; 0x90
    if (((isrflags & USART_ISR_ORE) != 0U)
 802f8ca:	070f      	lsls	r7, r1, #28
 802f8cc:	d50b      	bpl.n	802f8e6 <HAL_UART_IRQHandler+0xaa>
        && (((cr1its & USART_CR1_RXNEIE_RXFNEIE) != 0U) ||
 802f8ce:	f002 0020 	and.w	r0, r2, #32
 802f8d2:	4330      	orrs	r0, r6
 802f8d4:	d007      	beq.n	802f8e6 <HAL_UART_IRQHandler+0xaa>
      __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_OREF);
 802f8d6:	2008      	movs	r0, #8
 802f8d8:	6218      	str	r0, [r3, #32]
      huart->ErrorCode |= HAL_UART_ERROR_ORE;
 802f8da:	f8d4 0090 	ldr.w	r0, [r4, #144]	; 0x90
 802f8de:	f040 0008 	orr.w	r0, r0, #8
 802f8e2:	f8c4 0090 	str.w	r0, [r4, #144]	; 0x90
    if (((isrflags & USART_ISR_RTOF) != 0U) && ((cr1its & USART_CR1_RTOIE) != 0U))
 802f8e6:	050e      	lsls	r6, r1, #20
 802f8e8:	d50a      	bpl.n	802f900 <HAL_UART_IRQHandler+0xc4>
 802f8ea:	0150      	lsls	r0, r2, #5
 802f8ec:	d508      	bpl.n	802f900 <HAL_UART_IRQHandler+0xc4>
      __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_RTOF);
 802f8ee:	f44f 6000 	mov.w	r0, #2048	; 0x800
 802f8f2:	6218      	str	r0, [r3, #32]
      huart->ErrorCode |= HAL_UART_ERROR_RTO;
 802f8f4:	f8d4 3090 	ldr.w	r3, [r4, #144]	; 0x90
 802f8f8:	f043 0320 	orr.w	r3, r3, #32
 802f8fc:	f8c4 3090 	str.w	r3, [r4, #144]	; 0x90
    if (huart->ErrorCode != HAL_UART_ERROR_NONE)
 802f900:	f8d4 3090 	ldr.w	r3, [r4, #144]	; 0x90
 802f904:	2b00      	cmp	r3, #0
 802f906:	d042      	beq.n	802f98e <HAL_UART_IRQHandler+0x152>
      if (((isrflags & USART_ISR_RXNE_RXFNE) != 0U)
 802f908:	0689      	lsls	r1, r1, #26
 802f90a:	d50a      	bpl.n	802f922 <HAL_UART_IRQHandler+0xe6>
          && (((cr1its & USART_CR1_RXNEIE_RXFNEIE) != 0U)
 802f90c:	f002 0220 	and.w	r2, r2, #32
              || ((cr3its & USART_CR3_RXFTIE) != 0U)))
 802f910:	f005 5580 	and.w	r5, r5, #268435456	; 0x10000000
 802f914:	ea52 0305 	orrs.w	r3, r2, r5
 802f918:	d003      	beq.n	802f922 <HAL_UART_IRQHandler+0xe6>
        if (huart->RxISR != NULL)
 802f91a:	6f63      	ldr	r3, [r4, #116]	; 0x74
 802f91c:	b10b      	cbz	r3, 802f922 <HAL_UART_IRQHandler+0xe6>
          huart->RxISR(huart);
 802f91e:	4620      	mov	r0, r4
 802f920:	4798      	blx	r3
      if ((HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR)) ||
 802f922:	6823      	ldr	r3, [r4, #0]
      errorcode = huart->ErrorCode;
 802f924:	f8d4 5090 	ldr.w	r5, [r4, #144]	; 0x90
      if ((HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR)) ||
 802f928:	689b      	ldr	r3, [r3, #8]
          ((errorcode & (HAL_UART_ERROR_RTO | HAL_UART_ERROR_ORE)) != 0U))
 802f92a:	f005 0528 	and.w	r5, r5, #40	; 0x28
      if ((HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR)) ||
 802f92e:	f003 0340 	and.w	r3, r3, #64	; 0x40
 802f932:	431d      	orrs	r5, r3
 802f934:	d025      	beq.n	802f982 <HAL_UART_IRQHandler+0x146>
        UART_EndRxTransfer(huart);
 802f936:	4620      	mov	r0, r4
 802f938:	f7ff faee 	bl	802ef18 <UART_EndRxTransfer>
        if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR))
 802f93c:	6822      	ldr	r2, [r4, #0]
 802f93e:	6893      	ldr	r3, [r2, #8]
 802f940:	065b      	lsls	r3, r3, #25
 802f942:	d51b      	bpl.n	802f97c <HAL_UART_IRQHandler+0x140>
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
 802f944:	f102 0308 	add.w	r3, r2, #8
 802f948:	e853 3f00 	ldrex	r3, [r3]
          ATOMIC_CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAR);
 802f94c:	f023 0340 	bic.w	r3, r3, #64	; 0x40
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
 802f950:	f102 0008 	add.w	r0, r2, #8
 802f954:	e840 3100 	strex	r1, r3, [r0]
 802f958:	2900      	cmp	r1, #0
 802f95a:	d1f3      	bne.n	802f944 <HAL_UART_IRQHandler+0x108>
          if (huart->hdmarx != NULL)
 802f95c:	f8d4 0080 	ldr.w	r0, [r4, #128]	; 0x80
 802f960:	b140      	cbz	r0, 802f974 <HAL_UART_IRQHandler+0x138>
            huart->hdmarx->XferAbortCallback = UART_DMAAbortOnError;
 802f962:	4b6e      	ldr	r3, [pc, #440]	; (802fb1c <HAL_UART_IRQHandler+0x2e0>)
 802f964:	66c3      	str	r3, [r0, #108]	; 0x6c
            if (HAL_DMA_Abort_IT(huart->hdmarx) != HAL_OK)
 802f966:	f7fc fb13 	bl	802bf90 <HAL_DMA_Abort_IT>
 802f96a:	b180      	cbz	r0, 802f98e <HAL_UART_IRQHandler+0x152>
              huart->hdmarx->XferAbortCallback(huart->hdmarx);
 802f96c:	f8d4 0080 	ldr.w	r0, [r4, #128]	; 0x80
 802f970:	6ec3      	ldr	r3, [r0, #108]	; 0x6c
 802f972:	e77c      	b.n	802f86e <HAL_UART_IRQHandler+0x32>
            huart->ErrorCallback(huart);
 802f974:	f8d4 30a4 	ldr.w	r3, [r4, #164]	; 0xa4
    huart->RxFifoFullCallback(huart);
 802f978:	4620      	mov	r0, r4
 802f97a:	e778      	b.n	802f86e <HAL_UART_IRQHandler+0x32>
          huart->ErrorCallback(huart);
 802f97c:	f8d4 30a4 	ldr.w	r3, [r4, #164]	; 0xa4
 802f980:	e775      	b.n	802f86e <HAL_UART_IRQHandler+0x32>
        huart->ErrorCallback(huart);
 802f982:	4620      	mov	r0, r4
 802f984:	f8d4 30a4 	ldr.w	r3, [r4, #164]	; 0xa4
 802f988:	4798      	blx	r3
        huart->ErrorCode = HAL_UART_ERROR_NONE;
 802f98a:	f8c4 5090 	str.w	r5, [r4, #144]	; 0x90
}
 802f98e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  if ((huart->ReceptionType == HAL_UART_RECEPTION_TOIDLE)
 802f992:	6ee0      	ldr	r0, [r4, #108]	; 0x6c
 802f994:	2801      	cmp	r0, #1
 802f996:	f040 808d 	bne.w	802fab4 <HAL_UART_IRQHandler+0x278>
      && ((isrflags & USART_ISR_IDLE) != 0U)
 802f99a:	06cf      	lsls	r7, r1, #27
 802f99c:	f140 808a 	bpl.w	802fab4 <HAL_UART_IRQHandler+0x278>
      && ((cr1its & USART_ISR_IDLE) != 0U))
 802f9a0:	06d6      	lsls	r6, r2, #27
 802f9a2:	f140 8087 	bpl.w	802fab4 <HAL_UART_IRQHandler+0x278>
    __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_IDLEF);
 802f9a6:	2210      	movs	r2, #16
 802f9a8:	621a      	str	r2, [r3, #32]
    if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR))
 802f9aa:	689a      	ldr	r2, [r3, #8]
 802f9ac:	0655      	lsls	r5, r2, #25
 802f9ae:	d54d      	bpl.n	802fa4c <HAL_UART_IRQHandler+0x210>
      uint16_t nb_remaining_rx_data = (uint16_t) __HAL_DMA_GET_COUNTER(huart->hdmarx);
 802f9b0:	f8d4 1080 	ldr.w	r1, [r4, #128]	; 0x80
 802f9b4:	680a      	ldr	r2, [r1, #0]
 802f9b6:	6c92      	ldr	r2, [r2, #72]	; 0x48
 802f9b8:	b292      	uxth	r2, r2
      if ((nb_remaining_rx_data > 0U)
 802f9ba:	2a00      	cmp	r2, #0
 802f9bc:	d0e7      	beq.n	802f98e <HAL_UART_IRQHandler+0x152>
          && (nb_remaining_rx_data < huart->RxXferSize))
 802f9be:	f8b4 005c 	ldrh.w	r0, [r4, #92]	; 0x5c
 802f9c2:	4290      	cmp	r0, r2
 802f9c4:	d9e3      	bls.n	802f98e <HAL_UART_IRQHandler+0x152>
        huart->RxXferCount = nb_remaining_rx_data;
 802f9c6:	f8a4 205e 	strh.w	r2, [r4, #94]	; 0x5e
        if (huart->hdmarx->Mode != DMA_LINKEDLIST_CIRCULAR)
 802f9ca:	6d0a      	ldr	r2, [r1, #80]	; 0x50
 802f9cc:	2a81      	cmp	r2, #129	; 0x81
 802f9ce:	d02f      	beq.n	802fa30 <HAL_UART_IRQHandler+0x1f4>
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
 802f9d0:	e853 2f00 	ldrex	r2, [r3]
          ATOMIC_CLEAR_BIT(huart->Instance->CR1, USART_CR1_PEIE);
 802f9d4:	f422 7280 	bic.w	r2, r2, #256	; 0x100
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
 802f9d8:	e843 2100 	strex	r1, r2, [r3]
 802f9dc:	2900      	cmp	r1, #0
 802f9de:	d1f7      	bne.n	802f9d0 <HAL_UART_IRQHandler+0x194>
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
 802f9e0:	f103 0208 	add.w	r2, r3, #8
 802f9e4:	e852 2f00 	ldrex	r2, [r2]
          ATOMIC_CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 802f9e8:	f022 0201 	bic.w	r2, r2, #1
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
 802f9ec:	f103 0008 	add.w	r0, r3, #8
 802f9f0:	e840 2100 	strex	r1, r2, [r0]
 802f9f4:	2900      	cmp	r1, #0
 802f9f6:	d1f3      	bne.n	802f9e0 <HAL_UART_IRQHandler+0x1a4>
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
 802f9f8:	f103 0208 	add.w	r2, r3, #8
 802f9fc:	e852 2f00 	ldrex	r2, [r2]
          ATOMIC_CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAR);
 802fa00:	f022 0240 	bic.w	r2, r2, #64	; 0x40
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
 802fa04:	f103 0008 	add.w	r0, r3, #8
 802fa08:	e840 2100 	strex	r1, r2, [r0]
 802fa0c:	2900      	cmp	r1, #0
 802fa0e:	d1f3      	bne.n	802f9f8 <HAL_UART_IRQHandler+0x1bc>
          huart->RxState = HAL_UART_STATE_READY;
 802fa10:	2220      	movs	r2, #32
 802fa12:	f8c4 208c 	str.w	r2, [r4, #140]	; 0x8c
          huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
 802fa16:	66e1      	str	r1, [r4, #108]	; 0x6c
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
 802fa18:	e853 2f00 	ldrex	r2, [r3]
          ATOMIC_CLEAR_BIT(huart->Instance->CR1, USART_CR1_IDLEIE);
 802fa1c:	f022 0210 	bic.w	r2, r2, #16
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
 802fa20:	e843 2100 	strex	r1, r2, [r3]
 802fa24:	2900      	cmp	r1, #0
 802fa26:	d1f7      	bne.n	802fa18 <HAL_UART_IRQHandler+0x1dc>
          (void)HAL_DMA_Abort(huart->hdmarx);
 802fa28:	f8d4 0080 	ldr.w	r0, [r4, #128]	; 0x80
 802fa2c:	f7fc fa66 	bl	802befc <HAL_DMA_Abort>
        huart->RxEventType = HAL_UART_RXEVENT_IDLE;
 802fa30:	2302      	movs	r3, #2
 802fa32:	6723      	str	r3, [r4, #112]	; 0x70
        huart->RxEventCallback(huart, (huart->RxXferSize - huart->RxXferCount));
 802fa34:	f8b4 305e 	ldrh.w	r3, [r4, #94]	; 0x5e
 802fa38:	f8b4 105c 	ldrh.w	r1, [r4, #92]	; 0x5c
 802fa3c:	1ac9      	subs	r1, r1, r3
 802fa3e:	f8d4 30bc 	ldr.w	r3, [r4, #188]	; 0xbc
 802fa42:	b289      	uxth	r1, r1
        huart->RxEventCallback(huart, nb_rx_data);
 802fa44:	4620      	mov	r0, r4
}
 802fa46:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
        huart->RxEventCallback(huart, nb_rx_data);
 802fa4a:	4718      	bx	r3
      uint16_t nb_rx_data = huart->RxXferSize - huart->RxXferCount;
 802fa4c:	f8b4 105e 	ldrh.w	r1, [r4, #94]	; 0x5e
 802fa50:	b28a      	uxth	r2, r1
      if ((huart->RxXferCount > 0U)
 802fa52:	f8b4 105e 	ldrh.w	r1, [r4, #94]	; 0x5e
 802fa56:	b289      	uxth	r1, r1
 802fa58:	2900      	cmp	r1, #0
 802fa5a:	d098      	beq.n	802f98e <HAL_UART_IRQHandler+0x152>
      uint16_t nb_rx_data = huart->RxXferSize - huart->RxXferCount;
 802fa5c:	f8b4 105c 	ldrh.w	r1, [r4, #92]	; 0x5c
 802fa60:	1a89      	subs	r1, r1, r2
 802fa62:	b289      	uxth	r1, r1
          && (nb_rx_data > 0U))
 802fa64:	2900      	cmp	r1, #0
 802fa66:	d092      	beq.n	802f98e <HAL_UART_IRQHandler+0x152>
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
 802fa68:	e853 2f00 	ldrex	r2, [r3]
        ATOMIC_CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE_RXFNEIE | USART_CR1_PEIE));
 802fa6c:	f422 7290 	bic.w	r2, r2, #288	; 0x120
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
 802fa70:	e843 2000 	strex	r0, r2, [r3]
 802fa74:	2800      	cmp	r0, #0
 802fa76:	d1f7      	bne.n	802fa68 <HAL_UART_IRQHandler+0x22c>
        ATOMIC_CLEAR_BIT(huart->Instance->CR3, (USART_CR3_EIE | USART_CR3_RXFTIE));
 802fa78:	4d29      	ldr	r5, [pc, #164]	; (802fb20 <HAL_UART_IRQHandler+0x2e4>)
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
 802fa7a:	f103 0208 	add.w	r2, r3, #8
 802fa7e:	e852 2f00 	ldrex	r2, [r2]
 802fa82:	402a      	ands	r2, r5
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
 802fa84:	f103 0608 	add.w	r6, r3, #8
 802fa88:	e846 2000 	strex	r0, r2, [r6]
 802fa8c:	2800      	cmp	r0, #0
 802fa8e:	d1f4      	bne.n	802fa7a <HAL_UART_IRQHandler+0x23e>
        huart->RxState = HAL_UART_STATE_READY;
 802fa90:	2220      	movs	r2, #32
        huart->RxISR = NULL;
 802fa92:	6760      	str	r0, [r4, #116]	; 0x74
        huart->RxState = HAL_UART_STATE_READY;
 802fa94:	f8c4 208c 	str.w	r2, [r4, #140]	; 0x8c
        huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
 802fa98:	66e0      	str	r0, [r4, #108]	; 0x6c
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
 802fa9a:	e853 2f00 	ldrex	r2, [r3]
        ATOMIC_CLEAR_BIT(huart->Instance->CR1, USART_CR1_IDLEIE);
 802fa9e:	f022 0210 	bic.w	r2, r2, #16
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
 802faa2:	e843 2000 	strex	r0, r2, [r3]
 802faa6:	2800      	cmp	r0, #0
 802faa8:	d1f7      	bne.n	802fa9a <HAL_UART_IRQHandler+0x25e>
        huart->RxEventType = HAL_UART_RXEVENT_IDLE;
 802faaa:	2302      	movs	r3, #2
 802faac:	6723      	str	r3, [r4, #112]	; 0x70
        huart->RxEventCallback(huart, nb_rx_data);
 802faae:	f8d4 30bc 	ldr.w	r3, [r4, #188]	; 0xbc
 802fab2:	e7c7      	b.n	802fa44 <HAL_UART_IRQHandler+0x208>
  if (((isrflags & USART_ISR_TXE_TXFNF) != 0U)
 802fab4:	0608      	lsls	r0, r1, #24
 802fab6:	d50a      	bpl.n	802face <HAL_UART_IRQHandler+0x292>
      && (((cr1its & USART_CR1_TXEIE_TXFNFIE) != 0U)
 802fab8:	f002 0080 	and.w	r0, r2, #128	; 0x80
          || ((cr3its & USART_CR3_TXFTIE) != 0U)))
 802fabc:	f405 0500 	and.w	r5, r5, #8388608	; 0x800000
 802fac0:	4328      	orrs	r0, r5
 802fac2:	d004      	beq.n	802face <HAL_UART_IRQHandler+0x292>
    if (huart->TxISR != NULL)
 802fac4:	6fa3      	ldr	r3, [r4, #120]	; 0x78
 802fac6:	2b00      	cmp	r3, #0
 802fac8:	f47f af56 	bne.w	802f978 <HAL_UART_IRQHandler+0x13c>
 802facc:	e75f      	b.n	802f98e <HAL_UART_IRQHandler+0x152>
  if (((isrflags & USART_ISR_TC) != 0U) && ((cr1its & USART_CR1_TCIE) != 0U))
 802face:	064f      	lsls	r7, r1, #25
 802fad0:	d510      	bpl.n	802faf4 <HAL_UART_IRQHandler+0x2b8>
 802fad2:	0656      	lsls	r6, r2, #25
 802fad4:	d50e      	bpl.n	802faf4 <HAL_UART_IRQHandler+0x2b8>
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
 802fad6:	e853 2f00 	ldrex	r2, [r3]
  ATOMIC_CLEAR_BIT(huart->Instance->CR1, USART_CR1_TCIE);
 802fada:	f022 0240 	bic.w	r2, r2, #64	; 0x40
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
 802fade:	e843 2100 	strex	r1, r2, [r3]
 802fae2:	2900      	cmp	r1, #0
 802fae4:	d1f7      	bne.n	802fad6 <HAL_UART_IRQHandler+0x29a>
  huart->gState = HAL_UART_STATE_READY;
 802fae6:	2320      	movs	r3, #32
  huart->TxISR = NULL;
 802fae8:	67a1      	str	r1, [r4, #120]	; 0x78
  huart->gState = HAL_UART_STATE_READY;
 802faea:	f8c4 3088 	str.w	r3, [r4, #136]	; 0x88
  huart->TxCpltCallback(huart);
 802faee:	f8d4 3098 	ldr.w	r3, [r4, #152]	; 0x98
 802faf2:	e741      	b.n	802f978 <HAL_UART_IRQHandler+0x13c>
  if (((isrflags & USART_ISR_TXFE) != 0U) && ((cr1its & USART_CR1_TXFEIE) != 0U))
 802faf4:	020d      	lsls	r5, r1, #8
 802faf6:	d504      	bpl.n	802fb02 <HAL_UART_IRQHandler+0x2c6>
 802faf8:	0050      	lsls	r0, r2, #1
 802fafa:	d502      	bpl.n	802fb02 <HAL_UART_IRQHandler+0x2c6>
    huart->TxFifoEmptyCallback(huart);
 802fafc:	f8d4 30b8 	ldr.w	r3, [r4, #184]	; 0xb8
 802fb00:	e73a      	b.n	802f978 <HAL_UART_IRQHandler+0x13c>
  if (((isrflags & USART_ISR_RXFF) != 0U) && ((cr1its & USART_CR1_RXFFIE) != 0U))
 802fb02:	01cb      	lsls	r3, r1, #7
 802fb04:	f57f af43 	bpl.w	802f98e <HAL_UART_IRQHandler+0x152>
 802fb08:	2a00      	cmp	r2, #0
 802fb0a:	f6bf af40 	bge.w	802f98e <HAL_UART_IRQHandler+0x152>
    huart->RxFifoFullCallback(huart);
 802fb0e:	f8d4 30b4 	ldr.w	r3, [r4, #180]	; 0xb4
 802fb12:	e731      	b.n	802f978 <HAL_UART_IRQHandler+0x13c>
 802fb14:	10000001 	.word	0x10000001
 802fb18:	04000120 	.word	0x04000120
 802fb1c:	0802f009 	.word	0x0802f009
 802fb20:	effffffe 	.word	0xeffffffe

0802fb24 <UART_InitCallbacksToDefault>:
  huart->TxHalfCpltCallback        = HAL_UART_TxHalfCpltCallback;        /* Legacy weak TxHalfCpltCallback        */
 802fb24:	4b10      	ldr	r3, [pc, #64]	; (802fb68 <UART_InitCallbacksToDefault+0x44>)
 802fb26:	f8c0 3094 	str.w	r3, [r0, #148]	; 0x94
  huart->TxCpltCallback            = HAL_UART_TxCpltCallback;            /* Legacy weak TxCpltCallback            */
 802fb2a:	4b10      	ldr	r3, [pc, #64]	; (802fb6c <UART_InitCallbacksToDefault+0x48>)
 802fb2c:	f8c0 3098 	str.w	r3, [r0, #152]	; 0x98
  huart->RxHalfCpltCallback        = HAL_UART_RxHalfCpltCallback;        /* Legacy weak RxHalfCpltCallback        */
 802fb30:	4b0f      	ldr	r3, [pc, #60]	; (802fb70 <UART_InitCallbacksToDefault+0x4c>)
 802fb32:	f8c0 309c 	str.w	r3, [r0, #156]	; 0x9c
  huart->RxCpltCallback            = HAL_UART_RxCpltCallback;            /* Legacy weak RxCpltCallback            */
 802fb36:	4b0f      	ldr	r3, [pc, #60]	; (802fb74 <UART_InitCallbacksToDefault+0x50>)
 802fb38:	f8c0 30a0 	str.w	r3, [r0, #160]	; 0xa0
  huart->ErrorCallback             = HAL_UART_ErrorCallback;             /* Legacy weak ErrorCallback             */
 802fb3c:	4b0e      	ldr	r3, [pc, #56]	; (802fb78 <UART_InitCallbacksToDefault+0x54>)
 802fb3e:	f8c0 30a4 	str.w	r3, [r0, #164]	; 0xa4
  huart->AbortCpltCallback         = HAL_UART_AbortCpltCallback;         /* Legacy weak AbortCpltCallback         */
 802fb42:	4b0e      	ldr	r3, [pc, #56]	; (802fb7c <UART_InitCallbacksToDefault+0x58>)
 802fb44:	f8c0 30a8 	str.w	r3, [r0, #168]	; 0xa8
  huart->AbortTransmitCpltCallback = HAL_UART_AbortTransmitCpltCallback; /* Legacy weak AbortTransmitCpltCallback */
 802fb48:	4b0d      	ldr	r3, [pc, #52]	; (802fb80 <UART_InitCallbacksToDefault+0x5c>)
 802fb4a:	f8c0 30ac 	str.w	r3, [r0, #172]	; 0xac
  huart->AbortReceiveCpltCallback  = HAL_UART_AbortReceiveCpltCallback;  /* Legacy weak AbortReceiveCpltCallback  */
 802fb4e:	4b0d      	ldr	r3, [pc, #52]	; (802fb84 <UART_InitCallbacksToDefault+0x60>)
 802fb50:	f8c0 30b0 	str.w	r3, [r0, #176]	; 0xb0
  huart->RxFifoFullCallback        = HAL_UARTEx_RxFifoFullCallback;      /* Legacy weak RxFifoFullCallback        */
 802fb54:	4b0c      	ldr	r3, [pc, #48]	; (802fb88 <UART_InitCallbacksToDefault+0x64>)
 802fb56:	f8c0 30b4 	str.w	r3, [r0, #180]	; 0xb4
  huart->TxFifoEmptyCallback       = HAL_UARTEx_TxFifoEmptyCallback;     /* Legacy weak TxFifoEmptyCallback       */
 802fb5a:	4b0c      	ldr	r3, [pc, #48]	; (802fb8c <UART_InitCallbacksToDefault+0x68>)
 802fb5c:	f8c0 30b8 	str.w	r3, [r0, #184]	; 0xb8
  huart->RxEventCallback           = HAL_UARTEx_RxEventCallback;         /* Legacy weak RxEventCallback           */
 802fb60:	4b0b      	ldr	r3, [pc, #44]	; (802fb90 <UART_InitCallbacksToDefault+0x6c>)
 802fb62:	f8c0 30bc 	str.w	r3, [r0, #188]	; 0xbc
}
 802fb66:	4770      	bx	lr
 802fb68:	0802f64b 	.word	0x0802f64b
 802fb6c:	0802f649 	.word	0x0802f649
 802fb70:	0802f64f 	.word	0x0802f64f
 802fb74:	0802f64d 	.word	0x0802f64d
 802fb78:	0802f651 	.word	0x0802f651
 802fb7c:	0802f653 	.word	0x0802f653
 802fb80:	0802f655 	.word	0x0802f655
 802fb84:	0802f647 	.word	0x0802f647
 802fb88:	080303e9 	.word	0x080303e9
 802fb8c:	080303eb 	.word	0x080303eb
 802fb90:	0802eee1 	.word	0x0802eee1

0802fb94 <UART_SetConfig>:
{
 802fb94:	b538      	push	{r3, r4, r5, lr}
  assert_param(IS_UART_BAUDRATE(huart->Init.BaudRate));
 802fb96:	6842      	ldr	r2, [r0, #4]
 802fb98:	4ba4      	ldr	r3, [pc, #656]	; (802fe2c <UART_SetConfig+0x298>)
{
 802fb9a:	4604      	mov	r4, r0
  assert_param(IS_UART_BAUDRATE(huart->Init.BaudRate));
 802fb9c:	429a      	cmp	r2, r3
 802fb9e:	d904      	bls.n	802fbaa <UART_SetConfig+0x16>
 802fba0:	f640 411e 	movw	r1, #3102	; 0xc1e
 802fba4:	48a2      	ldr	r0, [pc, #648]	; (802fe30 <UART_SetConfig+0x29c>)
 802fba6:	f7f6 faf9 	bl	802619c <assert_failed>
  assert_param(IS_UART_WORD_LENGTH(huart->Init.WordLength));
 802fbaa:	68a3      	ldr	r3, [r4, #8]
 802fbac:	f1b3 5f80 	cmp.w	r3, #268435456	; 0x10000000
 802fbb0:	d007      	beq.n	802fbc2 <UART_SetConfig+0x2e>
 802fbb2:	f433 5380 	bics.w	r3, r3, #4096	; 0x1000
 802fbb6:	d004      	beq.n	802fbc2 <UART_SetConfig+0x2e>
 802fbb8:	f640 411f 	movw	r1, #3103	; 0xc1f
 802fbbc:	489c      	ldr	r0, [pc, #624]	; (802fe30 <UART_SetConfig+0x29c>)
 802fbbe:	f7f6 faed 	bl	802619c <assert_failed>
  if (UART_INSTANCE_LOWPOWER(huart))
 802fbc2:	6821      	ldr	r1, [r4, #0]
 802fbc4:	4a9b      	ldr	r2, [pc, #620]	; (802fe34 <UART_SetConfig+0x2a0>)
    assert_param(IS_LPUART_STOPBITS(huart->Init.StopBits));
 802fbc6:	68e3      	ldr	r3, [r4, #12]
  if (UART_INSTANCE_LOWPOWER(huart))
 802fbc8:	4291      	cmp	r1, r2
 802fbca:	d17e      	bne.n	802fcca <UART_SetConfig+0x136>
    assert_param(IS_LPUART_STOPBITS(huart->Init.StopBits));
 802fbcc:	f433 5300 	bics.w	r3, r3, #8192	; 0x2000
 802fbd0:	d004      	beq.n	802fbdc <UART_SetConfig+0x48>
 802fbd2:	f640 4122 	movw	r1, #3106	; 0xc22
    assert_param(IS_UART_ONE_BIT_SAMPLE(huart->Init.OneBitSampling));
 802fbd6:	4896      	ldr	r0, [pc, #600]	; (802fe30 <UART_SetConfig+0x29c>)
 802fbd8:	f7f6 fae0 	bl	802619c <assert_failed>
  assert_param(IS_UART_PARITY(huart->Init.Parity));
 802fbdc:	6923      	ldr	r3, [r4, #16]
 802fbde:	f433 6280 	bics.w	r2, r3, #1024	; 0x400
 802fbe2:	d007      	beq.n	802fbf4 <UART_SetConfig+0x60>
 802fbe4:	f5b3 6fc0 	cmp.w	r3, #1536	; 0x600
 802fbe8:	d004      	beq.n	802fbf4 <UART_SetConfig+0x60>
 802fbea:	f640 412a 	movw	r1, #3114	; 0xc2a
 802fbee:	4890      	ldr	r0, [pc, #576]	; (802fe30 <UART_SetConfig+0x29c>)
 802fbf0:	f7f6 fad4 	bl	802619c <assert_failed>
  assert_param(IS_UART_MODE(huart->Init.Mode));
 802fbf4:	6963      	ldr	r3, [r4, #20]
 802fbf6:	f033 020c 	bics.w	r2, r3, #12
 802fbfa:	d100      	bne.n	802fbfe <UART_SetConfig+0x6a>
 802fbfc:	b923      	cbnz	r3, 802fc08 <UART_SetConfig+0x74>
 802fbfe:	f640 412b 	movw	r1, #3115	; 0xc2b
 802fc02:	488b      	ldr	r0, [pc, #556]	; (802fe30 <UART_SetConfig+0x29c>)
 802fc04:	f7f6 faca 	bl	802619c <assert_failed>
  assert_param(IS_UART_HARDWARE_FLOW_CONTROL(huart->Init.HwFlowCtl));
 802fc08:	69a3      	ldr	r3, [r4, #24]
 802fc0a:	f433 7340 	bics.w	r3, r3, #768	; 0x300
 802fc0e:	d004      	beq.n	802fc1a <UART_SetConfig+0x86>
 802fc10:	f640 412c 	movw	r1, #3116	; 0xc2c
 802fc14:	4886      	ldr	r0, [pc, #536]	; (802fe30 <UART_SetConfig+0x29c>)
 802fc16:	f7f6 fac1 	bl	802619c <assert_failed>
  assert_param(IS_UART_OVERSAMPLING(huart->Init.OverSampling));
 802fc1a:	69e3      	ldr	r3, [r4, #28]
 802fc1c:	f433 4300 	bics.w	r3, r3, #32768	; 0x8000
 802fc20:	d004      	beq.n	802fc2c <UART_SetConfig+0x98>
 802fc22:	f640 412d 	movw	r1, #3117	; 0xc2d
 802fc26:	4882      	ldr	r0, [pc, #520]	; (802fe30 <UART_SetConfig+0x29c>)
 802fc28:	f7f6 fab8 	bl	802619c <assert_failed>
  assert_param(IS_UART_PRESCALER(huart->Init.ClockPrescaler));
 802fc2c:	6a63      	ldr	r3, [r4, #36]	; 0x24
 802fc2e:	2b0b      	cmp	r3, #11
 802fc30:	d904      	bls.n	802fc3c <UART_SetConfig+0xa8>
 802fc32:	f640 412e 	movw	r1, #3118	; 0xc2e
 802fc36:	487e      	ldr	r0, [pc, #504]	; (802fe30 <UART_SetConfig+0x29c>)
 802fc38:	f7f6 fab0 	bl	802619c <assert_failed>
  tmpreg = (uint32_t)huart->Init.WordLength | huart->Init.Parity | huart->Init.Mode | huart->Init.OverSampling ;
 802fc3c:	6921      	ldr	r1, [r4, #16]
 802fc3e:	68a2      	ldr	r2, [r4, #8]
  MODIFY_REG(huart->Instance->CR1, USART_CR1_FIELDS, tmpreg);
 802fc40:	6823      	ldr	r3, [r4, #0]
  tmpreg = (uint32_t)huart->Init.WordLength | huart->Init.Parity | huart->Init.Mode | huart->Init.OverSampling ;
 802fc42:	430a      	orrs	r2, r1
 802fc44:	6961      	ldr	r1, [r4, #20]
  MODIFY_REG(huart->Instance->CR1, USART_CR1_FIELDS, tmpreg);
 802fc46:	681d      	ldr	r5, [r3, #0]
  tmpreg = (uint32_t)huart->Init.WordLength | huart->Init.Parity | huart->Init.Mode | huart->Init.OverSampling ;
 802fc48:	69e0      	ldr	r0, [r4, #28]
 802fc4a:	430a      	orrs	r2, r1
  MODIFY_REG(huart->Instance->CR1, USART_CR1_FIELDS, tmpreg);
 802fc4c:	497a      	ldr	r1, [pc, #488]	; (802fe38 <UART_SetConfig+0x2a4>)
  tmpreg = (uint32_t)huart->Init.WordLength | huart->Init.Parity | huart->Init.Mode | huart->Init.OverSampling ;
 802fc4e:	4302      	orrs	r2, r0
  MODIFY_REG(huart->Instance->CR1, USART_CR1_FIELDS, tmpreg);
 802fc50:	4029      	ands	r1, r5
 802fc52:	430a      	orrs	r2, r1
 802fc54:	601a      	str	r2, [r3, #0]
  MODIFY_REG(huart->Instance->CR2, USART_CR2_STOP, huart->Init.StopBits);
 802fc56:	685a      	ldr	r2, [r3, #4]
 802fc58:	68e1      	ldr	r1, [r4, #12]
 802fc5a:	f422 5240 	bic.w	r2, r2, #12288	; 0x3000
 802fc5e:	430a      	orrs	r2, r1
 802fc60:	605a      	str	r2, [r3, #4]
  if (!(UART_INSTANCE_LOWPOWER(huart)))
 802fc62:	4a74      	ldr	r2, [pc, #464]	; (802fe34 <UART_SetConfig+0x2a0>)
  tmpreg = (uint32_t)huart->Init.HwFlowCtl;
 802fc64:	69a1      	ldr	r1, [r4, #24]
  if (!(UART_INSTANCE_LOWPOWER(huart)))
 802fc66:	4293      	cmp	r3, r2
    tmpreg |= huart->Init.OneBitSampling;
 802fc68:	bf1c      	itt	ne
 802fc6a:	6a22      	ldrne	r2, [r4, #32]
 802fc6c:	4311      	orrne	r1, r2
  MODIFY_REG(huart->Instance->CR3, USART_CR3_FIELDS, tmpreg);
 802fc6e:	689a      	ldr	r2, [r3, #8]
 802fc70:	f022 426e 	bic.w	r2, r2, #3992977408	; 0xee000000
 802fc74:	f422 6230 	bic.w	r2, r2, #2816	; 0xb00
 802fc78:	430a      	orrs	r2, r1
 802fc7a:	609a      	str	r2, [r3, #8]
  MODIFY_REG(huart->Instance->PRESC, USART_PRESC_PRESCALER, huart->Init.ClockPrescaler);
 802fc7c:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 802fc7e:	6a61      	ldr	r1, [r4, #36]	; 0x24
 802fc80:	f022 020f 	bic.w	r2, r2, #15
 802fc84:	430a      	orrs	r2, r1
 802fc86:	62da      	str	r2, [r3, #44]	; 0x2c
  UART_GETCLOCKSOURCE(huart, clocksource);
 802fc88:	4a6c      	ldr	r2, [pc, #432]	; (802fe3c <UART_SetConfig+0x2a8>)
 802fc8a:	4293      	cmp	r3, r2
 802fc8c:	d12d      	bne.n	802fcea <UART_SetConfig+0x156>
 802fc8e:	4b6c      	ldr	r3, [pc, #432]	; (802fe40 <UART_SetConfig+0x2ac>)
 802fc90:	f8d3 30e0 	ldr.w	r3, [r3, #224]	; 0xe0
 802fc94:	f003 0303 	and.w	r3, r3, #3
 802fc98:	3b01      	subs	r3, #1
 802fc9a:	2b02      	cmp	r3, #2
 802fc9c:	f200 80fd 	bhi.w	802fe9a <UART_SetConfig+0x306>
 802fca0:	4a68      	ldr	r2, [pc, #416]	; (802fe44 <UART_SetConfig+0x2b0>)
  else if (huart->Init.OverSampling == UART_OVERSAMPLING_8)
 802fca2:	f5b0 4f00 	cmp.w	r0, #32768	; 0x8000
 802fca6:	5cd3      	ldrb	r3, [r2, r3]
 802fca8:	f040 80a1 	bne.w	802fdee <UART_SetConfig+0x25a>
    switch (clocksource)
 802fcac:	2b08      	cmp	r3, #8
 802fcae:	d877      	bhi.n	802fda0 <UART_SetConfig+0x20c>
 802fcb0:	2b08      	cmp	r3, #8
 802fcb2:	d838      	bhi.n	802fd26 <UART_SetConfig+0x192>
 802fcb4:	e8df f013 	tbh	[pc, r3, lsl #1]
 802fcb8:	00f40091 	.word	0x00f40091
 802fcbc:	00370037 	.word	0x00370037
 802fcc0:	00370099 	.word	0x00370099
 802fcc4:	00370037 	.word	0x00370037
 802fcc8:	0096      	.short	0x0096
    assert_param(IS_UART_STOPBITS(huart->Init.StopBits));
 802fcca:	f433 5340 	bics.w	r3, r3, #12288	; 0x3000
 802fcce:	d004      	beq.n	802fcda <UART_SetConfig+0x146>
 802fcd0:	f640 4126 	movw	r1, #3110	; 0xc26
 802fcd4:	4856      	ldr	r0, [pc, #344]	; (802fe30 <UART_SetConfig+0x29c>)
 802fcd6:	f7f6 fa61 	bl	802619c <assert_failed>
    assert_param(IS_UART_ONE_BIT_SAMPLE(huart->Init.OneBitSampling));
 802fcda:	6a23      	ldr	r3, [r4, #32]
 802fcdc:	f433 6300 	bics.w	r3, r3, #2048	; 0x800
 802fce0:	f43f af7c 	beq.w	802fbdc <UART_SetConfig+0x48>
 802fce4:	f640 4127 	movw	r1, #3111	; 0xc27
 802fce8:	e775      	b.n	802fbd6 <UART_SetConfig+0x42>
  UART_GETCLOCKSOURCE(huart, clocksource);
 802fcea:	4a57      	ldr	r2, [pc, #348]	; (802fe48 <UART_SetConfig+0x2b4>)
 802fcec:	4293      	cmp	r3, r2
 802fcee:	d106      	bne.n	802fcfe <UART_SetConfig+0x16a>
 802fcf0:	4b53      	ldr	r3, [pc, #332]	; (802fe40 <UART_SetConfig+0x2ac>)
 802fcf2:	4a56      	ldr	r2, [pc, #344]	; (802fe4c <UART_SetConfig+0x2b8>)
 802fcf4:	f8d3 30e0 	ldr.w	r3, [r3, #224]	; 0xe0
 802fcf8:	f003 030c 	and.w	r3, r3, #12
 802fcfc:	e7d1      	b.n	802fca2 <UART_SetConfig+0x10e>
 802fcfe:	4a4d      	ldr	r2, [pc, #308]	; (802fe34 <UART_SetConfig+0x2a0>)
 802fd00:	4293      	cmp	r3, r2
 802fd02:	d110      	bne.n	802fd26 <UART_SetConfig+0x192>
 802fd04:	4b4e      	ldr	r3, [pc, #312]	; (802fe40 <UART_SetConfig+0x2ac>)
 802fd06:	f8d3 30e8 	ldr.w	r3, [r3, #232]	; 0xe8
 802fd0a:	f003 0303 	and.w	r3, r3, #3
 802fd0e:	3b01      	subs	r3, #1
 802fd10:	2b02      	cmp	r3, #2
 802fd12:	d80f      	bhi.n	802fd34 <UART_SetConfig+0x1a0>
 802fd14:	4a4e      	ldr	r2, [pc, #312]	; (802fe50 <UART_SetConfig+0x2bc>)
 802fd16:	5cd3      	ldrb	r3, [r2, r3]
    switch (clocksource)
 802fd18:	2b08      	cmp	r3, #8
 802fd1a:	d016      	beq.n	802fd4a <UART_SetConfig+0x1b6>
 802fd1c:	d805      	bhi.n	802fd2a <UART_SetConfig+0x196>
 802fd1e:	2b02      	cmp	r3, #2
 802fd20:	d008      	beq.n	802fd34 <UART_SetConfig+0x1a0>
 802fd22:	2b04      	cmp	r3, #4
 802fd24:	d014      	beq.n	802fd50 <UART_SetConfig+0x1bc>
  else if (huart->Init.OverSampling == UART_OVERSAMPLING_8)
 802fd26:	2001      	movs	r0, #1
 802fd28:	e008      	b.n	802fd3c <UART_SetConfig+0x1a8>
    switch (clocksource)
 802fd2a:	2b10      	cmp	r3, #16
 802fd2c:	d1fb      	bne.n	802fd26 <UART_SetConfig+0x192>
        pclk = (uint32_t) LSE_VALUE;
 802fd2e:	f44f 4000 	mov.w	r0, #32768	; 0x8000
 802fd32:	e00e      	b.n	802fd52 <UART_SetConfig+0x1be>
        pclk = HAL_RCC_GetPCLK7Freq();
 802fd34:	f7fd fcfe 	bl	802d734 <HAL_RCC_GetPCLK7Freq>
    if (pclk != 0U)
 802fd38:	b958      	cbnz	r0, 802fd52 <UART_SetConfig+0x1be>
 802fd3a:	2000      	movs	r0, #0
  huart->NbRxDataToProcess = 1;
 802fd3c:	f04f 1301 	mov.w	r3, #65537	; 0x10001
 802fd40:	66a3      	str	r3, [r4, #104]	; 0x68
  huart->RxISR = NULL;
 802fd42:	2300      	movs	r3, #0
  huart->TxISR = NULL;
 802fd44:	e9c4 331d 	strd	r3, r3, [r4, #116]	; 0x74
}
 802fd48:	bd38      	pop	{r3, r4, r5, pc}
        pclk = HAL_RCC_GetSysClockFreq();
 802fd4a:	f7fd fb63 	bl	802d414 <HAL_RCC_GetSysClockFreq>
        break;
 802fd4e:	e7f3      	b.n	802fd38 <UART_SetConfig+0x1a4>
    switch (clocksource)
 802fd50:	4840      	ldr	r0, [pc, #256]	; (802fe54 <UART_SetConfig+0x2c0>)
      lpuart_ker_ck_pres = (pclk / UARTPrescTable[huart->Init.ClockPrescaler]);
 802fd52:	4b41      	ldr	r3, [pc, #260]	; (802fe58 <UART_SetConfig+0x2c4>)
 802fd54:	6a62      	ldr	r2, [r4, #36]	; 0x24
      if ((lpuart_ker_ck_pres < (3U * huart->Init.BaudRate)) ||
 802fd56:	6865      	ldr	r5, [r4, #4]
      lpuart_ker_ck_pres = (pclk / UARTPrescTable[huart->Init.ClockPrescaler]);
 802fd58:	f833 2012 	ldrh.w	r2, [r3, r2, lsl #1]
      if ((lpuart_ker_ck_pres < (3U * huart->Init.BaudRate)) ||
 802fd5c:	eb05 0145 	add.w	r1, r5, r5, lsl #1
      lpuart_ker_ck_pres = (pclk / UARTPrescTable[huart->Init.ClockPrescaler]);
 802fd60:	fbb0 f3f2 	udiv	r3, r0, r2
      if ((lpuart_ker_ck_pres < (3U * huart->Init.BaudRate)) ||
 802fd64:	4299      	cmp	r1, r3
 802fd66:	d8de      	bhi.n	802fd26 <UART_SetConfig+0x192>
 802fd68:	ebb3 3f05 	cmp.w	r3, r5, lsl #12
 802fd6c:	d8db      	bhi.n	802fd26 <UART_SetConfig+0x192>
        usartdiv = (uint32_t)(UART_DIV_LPUART(pclk, huart->Init.BaudRate, huart->Init.ClockPrescaler));
 802fd6e:	2300      	movs	r3, #0
 802fd70:	4619      	mov	r1, r3
 802fd72:	f7f5 fc61 	bl	8025638 <__aeabi_uldivmod>
 802fd76:	0209      	lsls	r1, r1, #8
 802fd78:	ea41 6110 	orr.w	r1, r1, r0, lsr #24
 802fd7c:	086b      	lsrs	r3, r5, #1
 802fd7e:	0200      	lsls	r0, r0, #8
 802fd80:	18c0      	adds	r0, r0, r3
 802fd82:	462a      	mov	r2, r5
 802fd84:	f04f 0300 	mov.w	r3, #0
 802fd88:	f141 0100 	adc.w	r1, r1, #0
 802fd8c:	f7f5 fc54 	bl	8025638 <__aeabi_uldivmod>
        if ((usartdiv >= LPUART_BRR_MIN) && (usartdiv <= LPUART_BRR_MAX))
 802fd90:	4b32      	ldr	r3, [pc, #200]	; (802fe5c <UART_SetConfig+0x2c8>)
 802fd92:	f5a0 7240 	sub.w	r2, r0, #768	; 0x300
      if ((usartdiv >= UART_BRR_MIN) && (usartdiv <= UART_BRR_MAX))
 802fd96:	429a      	cmp	r2, r3
 802fd98:	d8c5      	bhi.n	802fd26 <UART_SetConfig+0x192>
        huart->Instance->BRR = (uint16_t)usartdiv;
 802fd9a:	6823      	ldr	r3, [r4, #0]
 802fd9c:	60d8      	str	r0, [r3, #12]
 802fd9e:	e7cc      	b.n	802fd3a <UART_SetConfig+0x1a6>
    switch (clocksource)
 802fda0:	2b10      	cmp	r3, #16
 802fda2:	d1c0      	bne.n	802fd26 <UART_SetConfig+0x192>
      usartdiv = (uint32_t)(UART_DIV_SAMPLING8(pclk, huart->Init.BaudRate, huart->Init.ClockPrescaler));
 802fda4:	6a61      	ldr	r1, [r4, #36]	; 0x24
 802fda6:	4b2c      	ldr	r3, [pc, #176]	; (802fe58 <UART_SetConfig+0x2c4>)
 802fda8:	6862      	ldr	r2, [r4, #4]
 802fdaa:	f833 3011 	ldrh.w	r3, [r3, r1, lsl #1]
 802fdae:	fbb0 f3f3 	udiv	r3, r0, r3
 802fdb2:	0850      	lsrs	r0, r2, #1
 802fdb4:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 802fdb8:	fbb0 f0f2 	udiv	r0, r0, r2
      if ((usartdiv >= UART_BRR_MIN) && (usartdiv <= UART_BRR_MAX))
 802fdbc:	f64f 73ef 	movw	r3, #65519	; 0xffef
 802fdc0:	f1a0 0210 	sub.w	r2, r0, #16
 802fdc4:	429a      	cmp	r2, r3
 802fdc6:	d8ae      	bhi.n	802fd26 <UART_SetConfig+0x192>
        brrtemp = (uint16_t)(usartdiv & 0xFFF0U);
 802fdc8:	f020 030f 	bic.w	r3, r0, #15
        huart->Instance->BRR = brrtemp;
 802fdcc:	6822      	ldr	r2, [r4, #0]
        brrtemp = (uint16_t)(usartdiv & 0xFFF0U);
 802fdce:	b29b      	uxth	r3, r3
        brrtemp |= (uint16_t)((usartdiv & (uint16_t)0x000FU) >> 1U);
 802fdd0:	f3c0 0042 	ubfx	r0, r0, #1, #3
        huart->Instance->BRR = brrtemp;
 802fdd4:	4318      	orrs	r0, r3
 802fdd6:	60d0      	str	r0, [r2, #12]
 802fdd8:	e7af      	b.n	802fd3a <UART_SetConfig+0x1a6>
        pclk = HAL_RCC_GetPCLK1Freq();
 802fdda:	f7fd fc8b 	bl	802d6f4 <HAL_RCC_GetPCLK1Freq>
    if (pclk != 0U)
 802fdde:	2800      	cmp	r0, #0
 802fde0:	d0ab      	beq.n	802fd3a <UART_SetConfig+0x1a6>
 802fde2:	e7df      	b.n	802fda4 <UART_SetConfig+0x210>
        pclk = HAL_RCC_GetSysClockFreq();
 802fde4:	f7fd fb16 	bl	802d414 <HAL_RCC_GetSysClockFreq>
        break;
 802fde8:	e7f9      	b.n	802fdde <UART_SetConfig+0x24a>
        pclk = (uint32_t) HSI_VALUE;
 802fdea:	481a      	ldr	r0, [pc, #104]	; (802fe54 <UART_SetConfig+0x2c0>)
 802fdec:	e7da      	b.n	802fda4 <UART_SetConfig+0x210>
    switch (clocksource)
 802fdee:	2b08      	cmp	r3, #8
 802fdf0:	d816      	bhi.n	802fe20 <UART_SetConfig+0x28c>
 802fdf2:	2b08      	cmp	r3, #8
 802fdf4:	d897      	bhi.n	802fd26 <UART_SetConfig+0x192>
 802fdf6:	a201      	add	r2, pc, #4	; (adr r2, 802fdfc <UART_SetConfig+0x268>)
 802fdf8:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 802fdfc:	0802fe61 	.word	0x0802fe61
 802fe00:	0802fe8b 	.word	0x0802fe8b
 802fe04:	0802fd27 	.word	0x0802fd27
 802fe08:	0802fd27 	.word	0x0802fd27
 802fe0c:	0802fe97 	.word	0x0802fe97
 802fe10:	0802fd27 	.word	0x0802fd27
 802fe14:	0802fd27 	.word	0x0802fd27
 802fe18:	0802fd27 	.word	0x0802fd27
 802fe1c:	0802fe91 	.word	0x0802fe91
 802fe20:	2b10      	cmp	r3, #16
 802fe22:	d180      	bne.n	802fd26 <UART_SetConfig+0x192>
 802fe24:	f44f 4000 	mov.w	r0, #32768	; 0x8000
 802fe28:	e01f      	b.n	802fe6a <UART_SetConfig+0x2d6>
 802fe2a:	bf00      	nop
 802fe2c:	00bebc1f 	.word	0x00bebc1f
 802fe30:	080341ed 	.word	0x080341ed
 802fe34:	46002400 	.word	0x46002400
 802fe38:	cfff69f3 	.word	0xcfff69f3
 802fe3c:	40013800 	.word	0x40013800
 802fe40:	46020c00 	.word	0x46020c00
 802fe44:	0803425c 	.word	0x0803425c
 802fe48:	40004400 	.word	0x40004400
 802fe4c:	0803425f 	.word	0x0803425f
 802fe50:	0803425c 	.word	0x0803425c
 802fe54:	00f42400 	.word	0x00f42400
 802fe58:	0803426c 	.word	0x0803426c
 802fe5c:	000ffcff 	.word	0x000ffcff
        pclk = HAL_RCC_GetPCLK1Freq();
 802fe60:	f7fd fc48 	bl	802d6f4 <HAL_RCC_GetPCLK1Freq>
    if (pclk != 0U)
 802fe64:	2800      	cmp	r0, #0
 802fe66:	f43f af68 	beq.w	802fd3a <UART_SetConfig+0x1a6>
      usartdiv = (uint32_t)(UART_DIV_SAMPLING16(pclk, huart->Init.BaudRate, huart->Init.ClockPrescaler));
 802fe6a:	6a61      	ldr	r1, [r4, #36]	; 0x24
 802fe6c:	4a0e      	ldr	r2, [pc, #56]	; (802fea8 <UART_SetConfig+0x314>)
 802fe6e:	6863      	ldr	r3, [r4, #4]
 802fe70:	f832 2011 	ldrh.w	r2, [r2, r1, lsl #1]
 802fe74:	fbb0 f0f2 	udiv	r0, r0, r2
 802fe78:	eb00 0053 	add.w	r0, r0, r3, lsr #1
 802fe7c:	fbb0 f0f3 	udiv	r0, r0, r3
      if ((usartdiv >= UART_BRR_MIN) && (usartdiv <= UART_BRR_MAX))
 802fe80:	f64f 73ef 	movw	r3, #65519	; 0xffef
 802fe84:	f1a0 0210 	sub.w	r2, r0, #16
 802fe88:	e785      	b.n	802fd96 <UART_SetConfig+0x202>
        pclk = HAL_RCC_GetPCLK2Freq();
 802fe8a:	f7fd fc43 	bl	802d714 <HAL_RCC_GetPCLK2Freq>
        break;
 802fe8e:	e7e9      	b.n	802fe64 <UART_SetConfig+0x2d0>
        pclk = HAL_RCC_GetSysClockFreq();
 802fe90:	f7fd fac0 	bl	802d414 <HAL_RCC_GetSysClockFreq>
        break;
 802fe94:	e7e6      	b.n	802fe64 <UART_SetConfig+0x2d0>
        pclk = (uint32_t) HSI_VALUE;
 802fe96:	4805      	ldr	r0, [pc, #20]	; (802feac <UART_SetConfig+0x318>)
 802fe98:	e7e7      	b.n	802fe6a <UART_SetConfig+0x2d6>
  else if (huart->Init.OverSampling == UART_OVERSAMPLING_8)
 802fe9a:	f5b0 4f00 	cmp.w	r0, #32768	; 0x8000
 802fe9e:	d1f4      	bne.n	802fe8a <UART_SetConfig+0x2f6>
        pclk = HAL_RCC_GetPCLK2Freq();
 802fea0:	f7fd fc38 	bl	802d714 <HAL_RCC_GetPCLK2Freq>
        break;
 802fea4:	e79b      	b.n	802fdde <UART_SetConfig+0x24a>
 802fea6:	bf00      	nop
 802fea8:	0803426c 	.word	0x0803426c
 802feac:	00f42400 	.word	0x00f42400

0802feb0 <UART_AdvFeatureConfig>:
  assert_param(IS_UART_ADVFEATURE_INIT(huart->AdvancedInit.AdvFeatureInit));
 802feb0:	6a83      	ldr	r3, [r0, #40]	; 0x28
{
 802feb2:	b510      	push	{r4, lr}
  assert_param(IS_UART_ADVFEATURE_INIT(huart->AdvancedInit.AdvFeatureInit));
 802feb4:	2bff      	cmp	r3, #255	; 0xff
{
 802feb6:	4604      	mov	r4, r0
  assert_param(IS_UART_ADVFEATURE_INIT(huart->AdvancedInit.AdvFeatureInit));
 802feb8:	d904      	bls.n	802fec4 <UART_AdvFeatureConfig+0x14>
 802feba:	f640 41f3 	movw	r1, #3315	; 0xcf3
 802febe:	485e      	ldr	r0, [pc, #376]	; (8030038 <UART_AdvFeatureConfig+0x188>)
 802fec0:	f7f6 f96c 	bl	802619c <assert_failed>
  if (HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_TXINVERT_INIT))
 802fec4:	6aa3      	ldr	r3, [r4, #40]	; 0x28
 802fec6:	07d8      	lsls	r0, r3, #31
 802fec8:	d50f      	bpl.n	802feea <UART_AdvFeatureConfig+0x3a>
    assert_param(IS_UART_ADVFEATURE_TXINV(huart->AdvancedInit.TxPinLevelInvert));
 802feca:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 802fecc:	f433 3300 	bics.w	r3, r3, #131072	; 0x20000
 802fed0:	d004      	beq.n	802fedc <UART_AdvFeatureConfig+0x2c>
 802fed2:	f640 41f8 	movw	r1, #3320	; 0xcf8
 802fed6:	4858      	ldr	r0, [pc, #352]	; (8030038 <UART_AdvFeatureConfig+0x188>)
 802fed8:	f7f6 f960 	bl	802619c <assert_failed>
    MODIFY_REG(huart->Instance->CR2, USART_CR2_TXINV, huart->AdvancedInit.TxPinLevelInvert);
 802fedc:	6822      	ldr	r2, [r4, #0]
 802fede:	6ae1      	ldr	r1, [r4, #44]	; 0x2c
 802fee0:	6853      	ldr	r3, [r2, #4]
 802fee2:	f423 3300 	bic.w	r3, r3, #131072	; 0x20000
 802fee6:	430b      	orrs	r3, r1
 802fee8:	6053      	str	r3, [r2, #4]
  if (HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_RXINVERT_INIT))
 802feea:	6aa3      	ldr	r3, [r4, #40]	; 0x28
 802feec:	0799      	lsls	r1, r3, #30
 802feee:	d50f      	bpl.n	802ff10 <UART_AdvFeatureConfig+0x60>
    assert_param(IS_UART_ADVFEATURE_RXINV(huart->AdvancedInit.RxPinLevelInvert));
 802fef0:	6b23      	ldr	r3, [r4, #48]	; 0x30
 802fef2:	f433 3380 	bics.w	r3, r3, #65536	; 0x10000
 802fef6:	d004      	beq.n	802ff02 <UART_AdvFeatureConfig+0x52>
 802fef8:	f640 41ff 	movw	r1, #3327	; 0xcff
 802fefc:	484e      	ldr	r0, [pc, #312]	; (8030038 <UART_AdvFeatureConfig+0x188>)
 802fefe:	f7f6 f94d 	bl	802619c <assert_failed>
    MODIFY_REG(huart->Instance->CR2, USART_CR2_RXINV, huart->AdvancedInit.RxPinLevelInvert);
 802ff02:	6822      	ldr	r2, [r4, #0]
 802ff04:	6b21      	ldr	r1, [r4, #48]	; 0x30
 802ff06:	6853      	ldr	r3, [r2, #4]
 802ff08:	f423 3380 	bic.w	r3, r3, #65536	; 0x10000
 802ff0c:	430b      	orrs	r3, r1
 802ff0e:	6053      	str	r3, [r2, #4]
  if (HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_DATAINVERT_INIT))
 802ff10:	6aa3      	ldr	r3, [r4, #40]	; 0x28
 802ff12:	075a      	lsls	r2, r3, #29
 802ff14:	d50f      	bpl.n	802ff36 <UART_AdvFeatureConfig+0x86>
    assert_param(IS_UART_ADVFEATURE_DATAINV(huart->AdvancedInit.DataInvert));
 802ff16:	6b63      	ldr	r3, [r4, #52]	; 0x34
 802ff18:	f433 2380 	bics.w	r3, r3, #262144	; 0x40000
 802ff1c:	d004      	beq.n	802ff28 <UART_AdvFeatureConfig+0x78>
 802ff1e:	f640 5106 	movw	r1, #3334	; 0xd06
 802ff22:	4845      	ldr	r0, [pc, #276]	; (8030038 <UART_AdvFeatureConfig+0x188>)
 802ff24:	f7f6 f93a 	bl	802619c <assert_failed>
    MODIFY_REG(huart->Instance->CR2, USART_CR2_DATAINV, huart->AdvancedInit.DataInvert);
 802ff28:	6822      	ldr	r2, [r4, #0]
 802ff2a:	6b61      	ldr	r1, [r4, #52]	; 0x34
 802ff2c:	6853      	ldr	r3, [r2, #4]
 802ff2e:	f423 2380 	bic.w	r3, r3, #262144	; 0x40000
 802ff32:	430b      	orrs	r3, r1
 802ff34:	6053      	str	r3, [r2, #4]
  if (HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_SWAP_INIT))
 802ff36:	6aa3      	ldr	r3, [r4, #40]	; 0x28
 802ff38:	071b      	lsls	r3, r3, #28
 802ff3a:	d50f      	bpl.n	802ff5c <UART_AdvFeatureConfig+0xac>
    assert_param(IS_UART_ADVFEATURE_SWAP(huart->AdvancedInit.Swap));
 802ff3c:	6ba3      	ldr	r3, [r4, #56]	; 0x38
 802ff3e:	f433 4300 	bics.w	r3, r3, #32768	; 0x8000
 802ff42:	d004      	beq.n	802ff4e <UART_AdvFeatureConfig+0x9e>
 802ff44:	f640 510d 	movw	r1, #3341	; 0xd0d
 802ff48:	483b      	ldr	r0, [pc, #236]	; (8030038 <UART_AdvFeatureConfig+0x188>)
 802ff4a:	f7f6 f927 	bl	802619c <assert_failed>
    MODIFY_REG(huart->Instance->CR2, USART_CR2_SWAP, huart->AdvancedInit.Swap);
 802ff4e:	6822      	ldr	r2, [r4, #0]
 802ff50:	6ba1      	ldr	r1, [r4, #56]	; 0x38
 802ff52:	6853      	ldr	r3, [r2, #4]
 802ff54:	f423 4300 	bic.w	r3, r3, #32768	; 0x8000
 802ff58:	430b      	orrs	r3, r1
 802ff5a:	6053      	str	r3, [r2, #4]
  if (HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_RXOVERRUNDISABLE_INIT))
 802ff5c:	6aa3      	ldr	r3, [r4, #40]	; 0x28
 802ff5e:	06d8      	lsls	r0, r3, #27
 802ff60:	d50f      	bpl.n	802ff82 <UART_AdvFeatureConfig+0xd2>
    assert_param(IS_UART_OVERRUN(huart->AdvancedInit.OverrunDisable));
 802ff62:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 802ff64:	f433 5380 	bics.w	r3, r3, #4096	; 0x1000
 802ff68:	d004      	beq.n	802ff74 <UART_AdvFeatureConfig+0xc4>
 802ff6a:	f640 5114 	movw	r1, #3348	; 0xd14
 802ff6e:	4832      	ldr	r0, [pc, #200]	; (8030038 <UART_AdvFeatureConfig+0x188>)
 802ff70:	f7f6 f914 	bl	802619c <assert_failed>
    MODIFY_REG(huart->Instance->CR3, USART_CR3_OVRDIS, huart->AdvancedInit.OverrunDisable);
 802ff74:	6822      	ldr	r2, [r4, #0]
 802ff76:	6be1      	ldr	r1, [r4, #60]	; 0x3c
 802ff78:	6893      	ldr	r3, [r2, #8]
 802ff7a:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
 802ff7e:	430b      	orrs	r3, r1
 802ff80:	6093      	str	r3, [r2, #8]
  if (HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_DMADISABLEONERROR_INIT))
 802ff82:	6aa3      	ldr	r3, [r4, #40]	; 0x28
 802ff84:	0699      	lsls	r1, r3, #26
 802ff86:	d50f      	bpl.n	802ffa8 <UART_AdvFeatureConfig+0xf8>
    assert_param(IS_UART_ADVFEATURE_DMAONRXERROR(huart->AdvancedInit.DMADisableonRxError));
 802ff88:	6c23      	ldr	r3, [r4, #64]	; 0x40
 802ff8a:	f433 5300 	bics.w	r3, r3, #8192	; 0x2000
 802ff8e:	d004      	beq.n	802ff9a <UART_AdvFeatureConfig+0xea>
 802ff90:	f640 511c 	movw	r1, #3356	; 0xd1c
 802ff94:	4828      	ldr	r0, [pc, #160]	; (8030038 <UART_AdvFeatureConfig+0x188>)
 802ff96:	f7f6 f901 	bl	802619c <assert_failed>
    MODIFY_REG(huart->Instance->CR3, USART_CR3_DDRE, huart->AdvancedInit.DMADisableonRxError);
 802ff9a:	6822      	ldr	r2, [r4, #0]
 802ff9c:	6c21      	ldr	r1, [r4, #64]	; 0x40
 802ff9e:	6893      	ldr	r3, [r2, #8]
 802ffa0:	f423 5300 	bic.w	r3, r3, #8192	; 0x2000
 802ffa4:	430b      	orrs	r3, r1
 802ffa6:	6093      	str	r3, [r2, #8]
  if (HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_AUTOBAUDRATE_INIT))
 802ffa8:	6aa3      	ldr	r3, [r4, #40]	; 0x28
 802ffaa:	065a      	lsls	r2, r3, #25
 802ffac:	d530      	bpl.n	8030010 <UART_AdvFeatureConfig+0x160>
    assert_param(IS_USART_AUTOBAUDRATE_DETECTION_INSTANCE(huart->Instance));
 802ffae:	6823      	ldr	r3, [r4, #0]
 802ffb0:	4a22      	ldr	r2, [pc, #136]	; (803003c <UART_AdvFeatureConfig+0x18c>)
 802ffb2:	4293      	cmp	r3, r2
 802ffb4:	d008      	beq.n	802ffc8 <UART_AdvFeatureConfig+0x118>
 802ffb6:	f5a2 4274 	sub.w	r2, r2, #62464	; 0xf400
 802ffba:	4293      	cmp	r3, r2
 802ffbc:	d004      	beq.n	802ffc8 <UART_AdvFeatureConfig+0x118>
 802ffbe:	f640 5124 	movw	r1, #3364	; 0xd24
 802ffc2:	481d      	ldr	r0, [pc, #116]	; (8030038 <UART_AdvFeatureConfig+0x188>)
 802ffc4:	f7f6 f8ea 	bl	802619c <assert_failed>
    assert_param(IS_UART_ADVFEATURE_AUTOBAUDRATE(huart->AdvancedInit.AutoBaudRateEnable));
 802ffc8:	6c63      	ldr	r3, [r4, #68]	; 0x44
 802ffca:	f433 1380 	bics.w	r3, r3, #1048576	; 0x100000
 802ffce:	d004      	beq.n	802ffda <UART_AdvFeatureConfig+0x12a>
 802ffd0:	f640 5125 	movw	r1, #3365	; 0xd25
 802ffd4:	4818      	ldr	r0, [pc, #96]	; (8030038 <UART_AdvFeatureConfig+0x188>)
 802ffd6:	f7f6 f8e1 	bl	802619c <assert_failed>
    MODIFY_REG(huart->Instance->CR2, USART_CR2_ABREN, huart->AdvancedInit.AutoBaudRateEnable);
 802ffda:	6821      	ldr	r1, [r4, #0]
 802ffdc:	6c62      	ldr	r2, [r4, #68]	; 0x44
 802ffde:	684b      	ldr	r3, [r1, #4]
    if (huart->AdvancedInit.AutoBaudRateEnable == UART_ADVFEATURE_AUTOBAUDRATE_ENABLE)
 802ffe0:	f5b2 1f80 	cmp.w	r2, #1048576	; 0x100000
    MODIFY_REG(huart->Instance->CR2, USART_CR2_ABREN, huart->AdvancedInit.AutoBaudRateEnable);
 802ffe4:	f423 1380 	bic.w	r3, r3, #1048576	; 0x100000
 802ffe8:	ea43 0302 	orr.w	r3, r3, r2
 802ffec:	604b      	str	r3, [r1, #4]
    if (huart->AdvancedInit.AutoBaudRateEnable == UART_ADVFEATURE_AUTOBAUDRATE_ENABLE)
 802ffee:	d10f      	bne.n	8030010 <UART_AdvFeatureConfig+0x160>
      assert_param(IS_UART_ADVFEATURE_AUTOBAUDRATEMODE(huart->AdvancedInit.AutoBaudRateMode));
 802fff0:	6ca3      	ldr	r3, [r4, #72]	; 0x48
 802fff2:	f433 03c0 	bics.w	r3, r3, #6291456	; 0x600000
 802fff6:	d004      	beq.n	8030002 <UART_AdvFeatureConfig+0x152>
 802fff8:	f640 512a 	movw	r1, #3370	; 0xd2a
 802fffc:	480e      	ldr	r0, [pc, #56]	; (8030038 <UART_AdvFeatureConfig+0x188>)
 802fffe:	f7f6 f8cd 	bl	802619c <assert_failed>
      MODIFY_REG(huart->Instance->CR2, USART_CR2_ABRMODE, huart->AdvancedInit.AutoBaudRateMode);
 8030002:	6822      	ldr	r2, [r4, #0]
 8030004:	6ca1      	ldr	r1, [r4, #72]	; 0x48
 8030006:	6853      	ldr	r3, [r2, #4]
 8030008:	f423 03c0 	bic.w	r3, r3, #6291456	; 0x600000
 803000c:	430b      	orrs	r3, r1
 803000e:	6053      	str	r3, [r2, #4]
  if (HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_MSBFIRST_INIT))
 8030010:	6aa3      	ldr	r3, [r4, #40]	; 0x28
 8030012:	061b      	lsls	r3, r3, #24
 8030014:	d50f      	bpl.n	8030036 <UART_AdvFeatureConfig+0x186>
    assert_param(IS_UART_ADVFEATURE_MSBFIRST(huart->AdvancedInit.MSBFirst));
 8030016:	6ce3      	ldr	r3, [r4, #76]	; 0x4c
 8030018:	f433 2300 	bics.w	r3, r3, #524288	; 0x80000
 803001c:	d004      	beq.n	8030028 <UART_AdvFeatureConfig+0x178>
 803001e:	f640 5132 	movw	r1, #3378	; 0xd32
 8030022:	4805      	ldr	r0, [pc, #20]	; (8030038 <UART_AdvFeatureConfig+0x188>)
 8030024:	f7f6 f8ba 	bl	802619c <assert_failed>
    MODIFY_REG(huart->Instance->CR2, USART_CR2_MSBFIRST, huart->AdvancedInit.MSBFirst);
 8030028:	6822      	ldr	r2, [r4, #0]
 803002a:	6ce1      	ldr	r1, [r4, #76]	; 0x4c
 803002c:	6853      	ldr	r3, [r2, #4]
 803002e:	f423 2300 	bic.w	r3, r3, #524288	; 0x80000
 8030032:	430b      	orrs	r3, r1
 8030034:	6053      	str	r3, [r2, #4]
}
 8030036:	bd10      	pop	{r4, pc}
 8030038:	080341ed 	.word	0x080341ed
 803003c:	40013800 	.word	0x40013800

08030040 <UART_WaitOnFlagUntilTimeout>:
{
 8030040:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8030044:	4604      	mov	r4, r0
 8030046:	460f      	mov	r7, r1
 8030048:	4616      	mov	r6, r2
 803004a:	4698      	mov	r8, r3
 803004c:	f8dd 9020 	ldr.w	r9, [sp, #32]
  while ((__HAL_UART_GET_FLAG(huart, Flag) ? SET : RESET) == Status)
 8030050:	6822      	ldr	r2, [r4, #0]
 8030052:	69d3      	ldr	r3, [r2, #28]
 8030054:	ea37 0303 	bics.w	r3, r7, r3
 8030058:	bf0c      	ite	eq
 803005a:	2301      	moveq	r3, #1
 803005c:	2300      	movne	r3, #0
 803005e:	42b3      	cmp	r3, r6
 8030060:	d001      	beq.n	8030066 <UART_WaitOnFlagUntilTimeout+0x26>
  return HAL_OK;
 8030062:	2000      	movs	r0, #0
 8030064:	e01e      	b.n	80300a4 <UART_WaitOnFlagUntilTimeout+0x64>
    if (Timeout != HAL_MAX_DELAY)
 8030066:	f1b9 3fff 	cmp.w	r9, #4294967295	; 0xffffffff
 803006a:	d0f2      	beq.n	8030052 <UART_WaitOnFlagUntilTimeout+0x12>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 803006c:	f7fa ffe0 	bl	802b030 <HAL_GetTick>
 8030070:	eba0 0008 	sub.w	r0, r0, r8
 8030074:	4548      	cmp	r0, r9
 8030076:	d825      	bhi.n	80300c4 <UART_WaitOnFlagUntilTimeout+0x84>
 8030078:	f1b9 0f00 	cmp.w	r9, #0
 803007c:	d022      	beq.n	80300c4 <UART_WaitOnFlagUntilTimeout+0x84>
      if (READ_BIT(huart->Instance->CR1, USART_CR1_RE) != 0U)
 803007e:	6820      	ldr	r0, [r4, #0]
 8030080:	6803      	ldr	r3, [r0, #0]
 8030082:	075a      	lsls	r2, r3, #29
 8030084:	d5e4      	bpl.n	8030050 <UART_WaitOnFlagUntilTimeout+0x10>
        if (__HAL_UART_GET_FLAG(huart, UART_FLAG_ORE) == SET)
 8030086:	69c5      	ldr	r5, [r0, #28]
 8030088:	f015 0508 	ands.w	r5, r5, #8
 803008c:	d00c      	beq.n	80300a8 <UART_WaitOnFlagUntilTimeout+0x68>
          __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_OREF);
 803008e:	2508      	movs	r5, #8
 8030090:	6205      	str	r5, [r0, #32]
          UART_EndRxTransfer(huart);
 8030092:	4620      	mov	r0, r4
 8030094:	f7fe ff40 	bl	802ef18 <UART_EndRxTransfer>
          __HAL_UNLOCK(huart);
 8030098:	2300      	movs	r3, #0
          return HAL_ERROR;
 803009a:	2001      	movs	r0, #1
          huart->ErrorCode = HAL_UART_ERROR_ORE;
 803009c:	f8c4 5090 	str.w	r5, [r4, #144]	; 0x90
          __HAL_UNLOCK(huart);
 80300a0:	f884 3084 	strb.w	r3, [r4, #132]	; 0x84
}
 80300a4:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
        if (__HAL_UART_GET_FLAG(huart, UART_FLAG_RTOF) == SET)
 80300a8:	69c3      	ldr	r3, [r0, #28]
 80300aa:	051b      	lsls	r3, r3, #20
 80300ac:	d5d0      	bpl.n	8030050 <UART_WaitOnFlagUntilTimeout+0x10>
          __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_RTOF);
 80300ae:	f44f 6300 	mov.w	r3, #2048	; 0x800
 80300b2:	6203      	str	r3, [r0, #32]
          UART_EndRxTransfer(huart);
 80300b4:	4620      	mov	r0, r4
 80300b6:	f7fe ff2f 	bl	802ef18 <UART_EndRxTransfer>
          huart->ErrorCode = HAL_UART_ERROR_RTO;
 80300ba:	2320      	movs	r3, #32
          __HAL_UNLOCK(huart);
 80300bc:	f884 5084 	strb.w	r5, [r4, #132]	; 0x84
          huart->ErrorCode = HAL_UART_ERROR_RTO;
 80300c0:	f8c4 3090 	str.w	r3, [r4, #144]	; 0x90
        return HAL_TIMEOUT;
 80300c4:	2003      	movs	r0, #3
 80300c6:	e7ed      	b.n	80300a4 <UART_WaitOnFlagUntilTimeout+0x64>

080300c8 <UART_CheckIdleState>:
{
 80300c8:	b530      	push	{r4, r5, lr}
  huart->ErrorCode = HAL_UART_ERROR_NONE;
 80300ca:	2500      	movs	r5, #0
{
 80300cc:	4604      	mov	r4, r0
 80300ce:	b085      	sub	sp, #20
  huart->ErrorCode = HAL_UART_ERROR_NONE;
 80300d0:	f8c0 5090 	str.w	r5, [r0, #144]	; 0x90
  tickstart = HAL_GetTick();
 80300d4:	f7fa ffac 	bl	802b030 <HAL_GetTick>
  if ((huart->Instance->CR1 & USART_CR1_TE) == USART_CR1_TE)
 80300d8:	6822      	ldr	r2, [r4, #0]
  tickstart = HAL_GetTick();
 80300da:	4603      	mov	r3, r0
  if ((huart->Instance->CR1 & USART_CR1_TE) == USART_CR1_TE)
 80300dc:	6812      	ldr	r2, [r2, #0]
 80300de:	0711      	lsls	r1, r2, #28
 80300e0:	d51c      	bpl.n	803011c <UART_CheckIdleState+0x54>
    if (UART_WaitOnFlagUntilTimeout(huart, USART_ISR_TEACK, RESET, tickstart, HAL_UART_TIMEOUT_VALUE) != HAL_OK)
 80300e2:	f06f 427e 	mvn.w	r2, #4261412864	; 0xfe000000
 80300e6:	9003      	str	r0, [sp, #12]
 80300e8:	9200      	str	r2, [sp, #0]
 80300ea:	f44f 1100 	mov.w	r1, #2097152	; 0x200000
 80300ee:	462a      	mov	r2, r5
 80300f0:	4620      	mov	r0, r4
 80300f2:	f7ff ffa5 	bl	8030040 <UART_WaitOnFlagUntilTimeout>
 80300f6:	9b03      	ldr	r3, [sp, #12]
 80300f8:	b180      	cbz	r0, 803011c <UART_CheckIdleState+0x54>
      ATOMIC_CLEAR_BIT(huart->Instance->CR1, (USART_CR1_TXEIE_TXFNFIE));
 80300fa:	6821      	ldr	r1, [r4, #0]
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
 80300fc:	e851 3f00 	ldrex	r3, [r1]
 8030100:	f023 0380 	bic.w	r3, r3, #128	; 0x80
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
 8030104:	e841 3200 	strex	r2, r3, [r1]
 8030108:	2a00      	cmp	r2, #0
 803010a:	d1f6      	bne.n	80300fa <UART_CheckIdleState+0x32>
      huart->gState = HAL_UART_STATE_READY;
 803010c:	2320      	movs	r3, #32
 803010e:	f8c4 3088 	str.w	r3, [r4, #136]	; 0x88
      return HAL_TIMEOUT;
 8030112:	2003      	movs	r0, #3
      __HAL_UNLOCK(huart);
 8030114:	f884 2084 	strb.w	r2, [r4, #132]	; 0x84
}
 8030118:	b005      	add	sp, #20
 803011a:	bd30      	pop	{r4, r5, pc}
  if ((huart->Instance->CR1 & USART_CR1_RE) == USART_CR1_RE)
 803011c:	6822      	ldr	r2, [r4, #0]
 803011e:	6812      	ldr	r2, [r2, #0]
 8030120:	0752      	lsls	r2, r2, #29
 8030122:	d523      	bpl.n	803016c <UART_CheckIdleState+0xa4>
    if (UART_WaitOnFlagUntilTimeout(huart, USART_ISR_REACK, RESET, tickstart, HAL_UART_TIMEOUT_VALUE) != HAL_OK)
 8030124:	f06f 427e 	mvn.w	r2, #4261412864	; 0xfe000000
 8030128:	f44f 0180 	mov.w	r1, #4194304	; 0x400000
 803012c:	9200      	str	r2, [sp, #0]
 803012e:	4620      	mov	r0, r4
 8030130:	2200      	movs	r2, #0
 8030132:	f7ff ff85 	bl	8030040 <UART_WaitOnFlagUntilTimeout>
 8030136:	b1c8      	cbz	r0, 803016c <UART_CheckIdleState+0xa4>
      ATOMIC_CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE_RXFNEIE | USART_CR1_PEIE));
 8030138:	6822      	ldr	r2, [r4, #0]
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
 803013a:	e852 3f00 	ldrex	r3, [r2]
 803013e:	f423 7390 	bic.w	r3, r3, #288	; 0x120
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
 8030142:	e842 3000 	strex	r0, r3, [r2]
   return(result);
 8030146:	6821      	ldr	r1, [r4, #0]
 8030148:	2800      	cmp	r0, #0
 803014a:	d1f5      	bne.n	8030138 <UART_CheckIdleState+0x70>
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
 803014c:	f101 0308 	add.w	r3, r1, #8
 8030150:	e853 3f00 	ldrex	r3, [r3]
      ATOMIC_CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 8030154:	f023 0301 	bic.w	r3, r3, #1
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
 8030158:	f101 0008 	add.w	r0, r1, #8
 803015c:	e840 3200 	strex	r2, r3, [r0]
 8030160:	2a00      	cmp	r2, #0
 8030162:	d1f3      	bne.n	803014c <UART_CheckIdleState+0x84>
      huart->RxState = HAL_UART_STATE_READY;
 8030164:	2320      	movs	r3, #32
 8030166:	f8c4 308c 	str.w	r3, [r4, #140]	; 0x8c
 803016a:	e7d2      	b.n	8030112 <UART_CheckIdleState+0x4a>
  huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
 803016c:	2000      	movs	r0, #0
  huart->gState = HAL_UART_STATE_READY;
 803016e:	2320      	movs	r3, #32
  __HAL_UNLOCK(huart);
 8030170:	f884 0084 	strb.w	r0, [r4, #132]	; 0x84
  huart->gState = HAL_UART_STATE_READY;
 8030174:	f8c4 3088 	str.w	r3, [r4, #136]	; 0x88
  huart->RxState = HAL_UART_STATE_READY;
 8030178:	f8c4 308c 	str.w	r3, [r4, #140]	; 0x8c
  huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
 803017c:	66e0      	str	r0, [r4, #108]	; 0x6c
  huart->RxEventType = HAL_UART_RXEVENT_TC;
 803017e:	6720      	str	r0, [r4, #112]	; 0x70
  return HAL_OK;
 8030180:	e7ca      	b.n	8030118 <UART_CheckIdleState+0x50>
	...

08030184 <HAL_UART_Init>:
{
 8030184:	b510      	push	{r4, lr}
  if (huart == NULL)
 8030186:	4604      	mov	r4, r0
 8030188:	2800      	cmp	r0, #0
 803018a:	d053      	beq.n	8030234 <HAL_UART_Init+0xb0>
  if (huart->Init.HwFlowCtl != UART_HWCONTROL_NONE)
 803018c:	6981      	ldr	r1, [r0, #24]
    assert_param(IS_UART_HWFLOW_INSTANCE(huart->Instance));
 803018e:	6803      	ldr	r3, [r0, #0]
 8030190:	4a29      	ldr	r2, [pc, #164]	; (8030238 <HAL_UART_Init+0xb4>)
  if (huart->Init.HwFlowCtl != UART_HWCONTROL_NONE)
 8030192:	2900      	cmp	r1, #0
 8030194:	d043      	beq.n	803021e <HAL_UART_Init+0x9a>
    assert_param(IS_UART_HWFLOW_INSTANCE(huart->Instance));
 8030196:	4293      	cmp	r3, r2
 8030198:	d00b      	beq.n	80301b2 <HAL_UART_Init+0x2e>
 803019a:	f5a2 4274 	sub.w	r2, r2, #62464	; 0xf400
 803019e:	4293      	cmp	r3, r2
 80301a0:	d007      	beq.n	80301b2 <HAL_UART_Init+0x2e>
 80301a2:	4a26      	ldr	r2, [pc, #152]	; (803023c <HAL_UART_Init+0xb8>)
 80301a4:	4293      	cmp	r3, r2
 80301a6:	d004      	beq.n	80301b2 <HAL_UART_Init+0x2e>
 80301a8:	f44f 71a0 	mov.w	r1, #320	; 0x140
    assert_param((IS_UART_INSTANCE(huart->Instance)) || (IS_LPUART_INSTANCE(huart->Instance)));
 80301ac:	4824      	ldr	r0, [pc, #144]	; (8030240 <HAL_UART_Init+0xbc>)
 80301ae:	f7f5 fff5 	bl	802619c <assert_failed>
  if (huart->gState == HAL_UART_STATE_RESET)
 80301b2:	f8d4 3088 	ldr.w	r3, [r4, #136]	; 0x88
 80301b6:	b973      	cbnz	r3, 80301d6 <HAL_UART_Init+0x52>
    huart->Lock = HAL_UNLOCKED;
 80301b8:	f884 3084 	strb.w	r3, [r4, #132]	; 0x84
    UART_InitCallbacksToDefault(huart);
 80301bc:	4620      	mov	r0, r4
 80301be:	f7ff fcb1 	bl	802fb24 <UART_InitCallbacksToDefault>
    if (huart->MspInitCallback == NULL)
 80301c2:	f8d4 30c0 	ldr.w	r3, [r4, #192]	; 0xc0
 80301c6:	b913      	cbnz	r3, 80301ce <HAL_UART_Init+0x4a>
      huart->MspInitCallback = HAL_UART_MspInit;
 80301c8:	4b1e      	ldr	r3, [pc, #120]	; (8030244 <HAL_UART_Init+0xc0>)
 80301ca:	f8c4 30c0 	str.w	r3, [r4, #192]	; 0xc0
    huart->MspInitCallback(huart);
 80301ce:	4620      	mov	r0, r4
 80301d0:	f8d4 30c0 	ldr.w	r3, [r4, #192]	; 0xc0
 80301d4:	4798      	blx	r3
  huart->gState = HAL_UART_STATE_BUSY;
 80301d6:	2324      	movs	r3, #36	; 0x24
  __HAL_UART_DISABLE(huart);
 80301d8:	6822      	ldr	r2, [r4, #0]
  huart->gState = HAL_UART_STATE_BUSY;
 80301da:	f8c4 3088 	str.w	r3, [r4, #136]	; 0x88
  __HAL_UART_DISABLE(huart);
 80301de:	6813      	ldr	r3, [r2, #0]
  if (UART_SetConfig(huart) == HAL_ERROR)
 80301e0:	4620      	mov	r0, r4
  __HAL_UART_DISABLE(huart);
 80301e2:	f023 0301 	bic.w	r3, r3, #1
 80301e6:	6013      	str	r3, [r2, #0]
  if (UART_SetConfig(huart) == HAL_ERROR)
 80301e8:	f7ff fcd4 	bl	802fb94 <UART_SetConfig>
 80301ec:	2801      	cmp	r0, #1
 80301ee:	d021      	beq.n	8030234 <HAL_UART_Init+0xb0>
  if (huart->AdvancedInit.AdvFeatureInit != UART_ADVFEATURE_NO_INIT)
 80301f0:	6aa3      	ldr	r3, [r4, #40]	; 0x28
 80301f2:	b113      	cbz	r3, 80301fa <HAL_UART_Init+0x76>
    UART_AdvFeatureConfig(huart);
 80301f4:	4620      	mov	r0, r4
 80301f6:	f7ff fe5b 	bl	802feb0 <UART_AdvFeatureConfig>
  CLEAR_BIT(huart->Instance->CR2, (USART_CR2_LINEN | USART_CR2_CLKEN));
 80301fa:	6823      	ldr	r3, [r4, #0]
  return (UART_CheckIdleState(huart));
 80301fc:	4620      	mov	r0, r4
}
 80301fe:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
  CLEAR_BIT(huart->Instance->CR2, (USART_CR2_LINEN | USART_CR2_CLKEN));
 8030202:	685a      	ldr	r2, [r3, #4]
 8030204:	f422 4290 	bic.w	r2, r2, #18432	; 0x4800
 8030208:	605a      	str	r2, [r3, #4]
  CLEAR_BIT(huart->Instance->CR3, (USART_CR3_SCEN | USART_CR3_HDSEL | USART_CR3_IREN));
 803020a:	689a      	ldr	r2, [r3, #8]
 803020c:	f022 022a 	bic.w	r2, r2, #42	; 0x2a
 8030210:	609a      	str	r2, [r3, #8]
  __HAL_UART_ENABLE(huart);
 8030212:	681a      	ldr	r2, [r3, #0]
 8030214:	f042 0201 	orr.w	r2, r2, #1
 8030218:	601a      	str	r2, [r3, #0]
  return (UART_CheckIdleState(huart));
 803021a:	f7ff bf55 	b.w	80300c8 <UART_CheckIdleState>
    assert_param((IS_UART_INSTANCE(huart->Instance)) || (IS_LPUART_INSTANCE(huart->Instance)));
 803021e:	4293      	cmp	r3, r2
 8030220:	d0c7      	beq.n	80301b2 <HAL_UART_Init+0x2e>
 8030222:	4a09      	ldr	r2, [pc, #36]	; (8030248 <HAL_UART_Init+0xc4>)
 8030224:	4293      	cmp	r3, r2
 8030226:	d0c4      	beq.n	80301b2 <HAL_UART_Init+0x2e>
 8030228:	4a04      	ldr	r2, [pc, #16]	; (803023c <HAL_UART_Init+0xb8>)
 803022a:	4293      	cmp	r3, r2
 803022c:	d0c1      	beq.n	80301b2 <HAL_UART_Init+0x2e>
 803022e:	f240 1145 	movw	r1, #325	; 0x145
 8030232:	e7bb      	b.n	80301ac <HAL_UART_Init+0x28>
}
 8030234:	2001      	movs	r0, #1
 8030236:	bd10      	pop	{r4, pc}
 8030238:	40013800 	.word	0x40013800
 803023c:	46002400 	.word	0x46002400
 8030240:	080341ed 	.word	0x080341ed
 8030244:	080263e1 	.word	0x080263e1
 8030248:	40004400 	.word	0x40004400

0803024c <UART_Start_Receive_IT>:
{
 803024c:	b530      	push	{r4, r5, lr}
  huart->pRxBuffPtr  = pData;
 803024e:	6581      	str	r1, [r0, #88]	; 0x58
  huart->RxISR       = NULL;
 8030250:	2100      	movs	r1, #0
  UART_MASK_COMPUTATION(huart);
 8030252:	6883      	ldr	r3, [r0, #8]
  huart->RxXferSize  = Size;
 8030254:	f8a0 205c 	strh.w	r2, [r0, #92]	; 0x5c
  UART_MASK_COMPUTATION(huart);
 8030258:	f5b3 5f80 	cmp.w	r3, #4096	; 0x1000
  huart->RxXferCount = Size;
 803025c:	f8a0 205e 	strh.w	r2, [r0, #94]	; 0x5e
  huart->RxISR       = NULL;
 8030260:	6741      	str	r1, [r0, #116]	; 0x74
  UART_MASK_COMPUTATION(huart);
 8030262:	d135      	bne.n	80302d0 <UART_Start_Receive_IT+0x84>
 8030264:	6903      	ldr	r3, [r0, #16]
 8030266:	bb8b      	cbnz	r3, 80302cc <UART_Start_Receive_IT+0x80>
 8030268:	f240 13ff 	movw	r3, #511	; 0x1ff
 803026c:	f8a0 3060 	strh.w	r3, [r0, #96]	; 0x60
  huart->ErrorCode = HAL_UART_ERROR_NONE;
 8030270:	2300      	movs	r3, #0
 8030272:	f8c0 3090 	str.w	r3, [r0, #144]	; 0x90
  huart->RxState = HAL_UART_STATE_BUSY_RX;
 8030276:	2322      	movs	r3, #34	; 0x22
 8030278:	f8c0 308c 	str.w	r3, [r0, #140]	; 0x8c
  ATOMIC_SET_BIT(huart->Instance->CR3, USART_CR3_EIE);
 803027c:	6801      	ldr	r1, [r0, #0]
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
 803027e:	f101 0308 	add.w	r3, r1, #8
 8030282:	e853 3f00 	ldrex	r3, [r3]
 8030286:	f043 0301 	orr.w	r3, r3, #1
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
 803028a:	3108      	adds	r1, #8
 803028c:	e841 3400 	strex	r4, r3, [r1]
   return(result);
 8030290:	6803      	ldr	r3, [r0, #0]
 8030292:	2c00      	cmp	r4, #0
 8030294:	d1f2      	bne.n	803027c <UART_Start_Receive_IT+0x30>
  if ((huart->FifoMode == UART_FIFOMODE_ENABLE) && (Size >= huart->NbRxDataToProcess))
 8030296:	6e45      	ldr	r5, [r0, #100]	; 0x64
    if ((huart->Init.WordLength == UART_WORDLENGTH_9B) && (huart->Init.Parity == UART_PARITY_NONE))
 8030298:	6884      	ldr	r4, [r0, #8]
  if ((huart->FifoMode == UART_FIFOMODE_ENABLE) && (Size >= huart->NbRxDataToProcess))
 803029a:	f1b5 5f00 	cmp.w	r5, #536870912	; 0x20000000
    if ((huart->Init.WordLength == UART_WORDLENGTH_9B) && (huart->Init.Parity == UART_PARITY_NONE))
 803029e:	6901      	ldr	r1, [r0, #16]
  if ((huart->FifoMode == UART_FIFOMODE_ENABLE) && (Size >= huart->NbRxDataToProcess))
 80302a0:	d137      	bne.n	8030312 <UART_Start_Receive_IT+0xc6>
 80302a2:	f8b0 5068 	ldrh.w	r5, [r0, #104]	; 0x68
 80302a6:	4295      	cmp	r5, r2
 80302a8:	d833      	bhi.n	8030312 <UART_Start_Receive_IT+0xc6>
    if ((huart->Init.WordLength == UART_WORDLENGTH_9B) && (huart->Init.Parity == UART_PARITY_NONE))
 80302aa:	f5b4 5f80 	cmp.w	r4, #4096	; 0x1000
 80302ae:	d120      	bne.n	80302f2 <UART_Start_Receive_IT+0xa6>
      huart->RxISR = UART_RxISR_8BIT_FIFOEN;
 80302b0:	4a27      	ldr	r2, [pc, #156]	; (8030350 <UART_Start_Receive_IT+0x104>)
 80302b2:	4c28      	ldr	r4, [pc, #160]	; (8030354 <UART_Start_Receive_IT+0x108>)
 80302b4:	2900      	cmp	r1, #0
 80302b6:	bf18      	it	ne
 80302b8:	4622      	movne	r2, r4
 80302ba:	6742      	str	r2, [r0, #116]	; 0x74
    if (huart->Init.Parity != UART_PARITY_NONE)
 80302bc:	b1d9      	cbz	r1, 80302f6 <UART_Start_Receive_IT+0xaa>
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
 80302be:	e853 2f00 	ldrex	r2, [r3]
      ATOMIC_SET_BIT(huart->Instance->CR1, USART_CR1_PEIE);
 80302c2:	f442 7280 	orr.w	r2, r2, #256	; 0x100
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
 80302c6:	e843 2100 	strex	r1, r2, [r3]
   return(result);
 80302ca:	e7f7      	b.n	80302bc <UART_Start_Receive_IT+0x70>
  UART_MASK_COMPUTATION(huart);
 80302cc:	23ff      	movs	r3, #255	; 0xff
 80302ce:	e7cd      	b.n	803026c <UART_Start_Receive_IT+0x20>
 80302d0:	b923      	cbnz	r3, 80302dc <UART_Start_Receive_IT+0x90>
 80302d2:	6903      	ldr	r3, [r0, #16]
 80302d4:	2b00      	cmp	r3, #0
 80302d6:	d0f9      	beq.n	80302cc <UART_Start_Receive_IT+0x80>
 80302d8:	237f      	movs	r3, #127	; 0x7f
 80302da:	e7c7      	b.n	803026c <UART_Start_Receive_IT+0x20>
 80302dc:	f1b3 5f80 	cmp.w	r3, #268435456	; 0x10000000
 80302e0:	d104      	bne.n	80302ec <UART_Start_Receive_IT+0xa0>
 80302e2:	6903      	ldr	r3, [r0, #16]
 80302e4:	2b00      	cmp	r3, #0
 80302e6:	d0f7      	beq.n	80302d8 <UART_Start_Receive_IT+0x8c>
 80302e8:	233f      	movs	r3, #63	; 0x3f
 80302ea:	e7bf      	b.n	803026c <UART_Start_Receive_IT+0x20>
 80302ec:	f8a0 1060 	strh.w	r1, [r0, #96]	; 0x60
 80302f0:	e7be      	b.n	8030270 <UART_Start_Receive_IT+0x24>
      huart->RxISR = UART_RxISR_8BIT_FIFOEN;
 80302f2:	4a18      	ldr	r2, [pc, #96]	; (8030354 <UART_Start_Receive_IT+0x108>)
 80302f4:	e7e1      	b.n	80302ba <UART_Start_Receive_IT+0x6e>
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
 80302f6:	f103 0208 	add.w	r2, r3, #8
 80302fa:	e852 2f00 	ldrex	r2, [r2]
    ATOMIC_SET_BIT(huart->Instance->CR3, USART_CR3_RXFTIE);
 80302fe:	f042 5280 	orr.w	r2, r2, #268435456	; 0x10000000
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
 8030302:	f103 0008 	add.w	r0, r3, #8
 8030306:	e840 2100 	strex	r1, r2, [r0]
 803030a:	2900      	cmp	r1, #0
 803030c:	d1f3      	bne.n	80302f6 <UART_Start_Receive_IT+0xaa>
}
 803030e:	2000      	movs	r0, #0
 8030310:	bd30      	pop	{r4, r5, pc}
    if ((huart->Init.WordLength == UART_WORDLENGTH_9B) && (huart->Init.Parity == UART_PARITY_NONE))
 8030312:	f5b4 5f80 	cmp.w	r4, #4096	; 0x1000
 8030316:	d10f      	bne.n	8030338 <UART_Start_Receive_IT+0xec>
      huart->RxISR = UART_RxISR_8BIT;
 8030318:	4a0f      	ldr	r2, [pc, #60]	; (8030358 <UART_Start_Receive_IT+0x10c>)
 803031a:	4c10      	ldr	r4, [pc, #64]	; (803035c <UART_Start_Receive_IT+0x110>)
 803031c:	2900      	cmp	r1, #0
 803031e:	bf18      	it	ne
 8030320:	4622      	movne	r2, r4
 8030322:	6742      	str	r2, [r0, #116]	; 0x74
    if (huart->Init.Parity != UART_PARITY_NONE)
 8030324:	b151      	cbz	r1, 803033c <UART_Start_Receive_IT+0xf0>
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
 8030326:	e853 2f00 	ldrex	r2, [r3]
      ATOMIC_SET_BIT(huart->Instance->CR1, USART_CR1_PEIE | USART_CR1_RXNEIE_RXFNEIE);
 803032a:	f442 7290 	orr.w	r2, r2, #288	; 0x120
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
 803032e:	e843 2100 	strex	r1, r2, [r3]
 8030332:	2900      	cmp	r1, #0
 8030334:	d1f7      	bne.n	8030326 <UART_Start_Receive_IT+0xda>
 8030336:	e7ea      	b.n	803030e <UART_Start_Receive_IT+0xc2>
      huart->RxISR = UART_RxISR_8BIT;
 8030338:	4a08      	ldr	r2, [pc, #32]	; (803035c <UART_Start_Receive_IT+0x110>)
 803033a:	e7f2      	b.n	8030322 <UART_Start_Receive_IT+0xd6>
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
 803033c:	e853 2f00 	ldrex	r2, [r3]
      ATOMIC_SET_BIT(huart->Instance->CR1, USART_CR1_RXNEIE_RXFNEIE);
 8030340:	f042 0220 	orr.w	r2, r2, #32
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
 8030344:	e843 2100 	strex	r1, r2, [r3]
 8030348:	2900      	cmp	r1, #0
 803034a:	d1f7      	bne.n	803033c <UART_Start_Receive_IT+0xf0>
 803034c:	e7df      	b.n	803030e <UART_Start_Receive_IT+0xc2>
 803034e:	bf00      	nop
 8030350:	0802f34d 	.word	0x0802f34d
 8030354:	0802f1a9 	.word	0x0802f1a9
 8030358:	0802f0e5 	.word	0x0802f0e5
 803035c:	0802f01d 	.word	0x0802f01d

08030360 <HAL_UART_Receive_IT>:
  if (huart->RxState == HAL_UART_STATE_READY)
 8030360:	f8d0 308c 	ldr.w	r3, [r0, #140]	; 0x8c
{
 8030364:	b430      	push	{r4, r5}
  if (huart->RxState == HAL_UART_STATE_READY)
 8030366:	2b20      	cmp	r3, #32
 8030368:	d115      	bne.n	8030396 <HAL_UART_Receive_IT+0x36>
    if ((pData == NULL) || (Size == 0U))
 803036a:	b1b9      	cbz	r1, 803039c <HAL_UART_Receive_IT+0x3c>
 803036c:	b1b2      	cbz	r2, 803039c <HAL_UART_Receive_IT+0x3c>
    huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
 803036e:	2300      	movs	r3, #0
    if (!(IS_LPUART_INSTANCE(huart->Instance)))
 8030370:	6804      	ldr	r4, [r0, #0]
    huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
 8030372:	66c3      	str	r3, [r0, #108]	; 0x6c
    if (!(IS_LPUART_INSTANCE(huart->Instance)))
 8030374:	4b0a      	ldr	r3, [pc, #40]	; (80303a0 <HAL_UART_Receive_IT+0x40>)
 8030376:	429c      	cmp	r4, r3
 8030378:	d00a      	beq.n	8030390 <HAL_UART_Receive_IT+0x30>
      if (READ_BIT(huart->Instance->CR2, USART_CR2_RTOEN) != 0U)
 803037a:	6863      	ldr	r3, [r4, #4]
 803037c:	021b      	lsls	r3, r3, #8
 803037e:	d507      	bpl.n	8030390 <HAL_UART_Receive_IT+0x30>
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
 8030380:	e854 3f00 	ldrex	r3, [r4]
        ATOMIC_SET_BIT(huart->Instance->CR1, USART_CR1_RTOIE);
 8030384:	f043 6380 	orr.w	r3, r3, #67108864	; 0x4000000
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
 8030388:	e844 3500 	strex	r5, r3, [r4]
 803038c:	2d00      	cmp	r5, #0
 803038e:	d1f7      	bne.n	8030380 <HAL_UART_Receive_IT+0x20>
}
 8030390:	bc30      	pop	{r4, r5}
    return (UART_Start_Receive_IT(huart, pData, Size));
 8030392:	f7ff bf5b 	b.w	803024c <UART_Start_Receive_IT>
    return HAL_BUSY;
 8030396:	2002      	movs	r0, #2
}
 8030398:	bc30      	pop	{r4, r5}
 803039a:	4770      	bx	lr
      return HAL_ERROR;
 803039c:	2001      	movs	r0, #1
 803039e:	e7fb      	b.n	8030398 <HAL_UART_Receive_IT+0x38>
 80303a0:	46002400 	.word	0x46002400

080303a4 <UARTEx_SetNbDataToProcess>:
  uint8_t rx_fifo_threshold;
  uint8_t tx_fifo_threshold;
  static const uint8_t numerator[] = {1U, 1U, 1U, 3U, 7U, 1U, 0U, 0U};
  static const uint8_t denominator[] = {8U, 4U, 2U, 4U, 8U, 1U, 1U, 1U};

  if (huart->FifoMode == UART_FIFOMODE_DISABLE)
 80303a4:	6e43      	ldr	r3, [r0, #100]	; 0x64
{
 80303a6:	b530      	push	{r4, r5, lr}
  if (huart->FifoMode == UART_FIFOMODE_DISABLE)
 80303a8:	b91b      	cbnz	r3, 80303b2 <UARTEx_SetNbDataToProcess+0xe>
  {
    huart->NbTxDataToProcess = 1U;
    huart->NbRxDataToProcess = 1U;
 80303aa:	f04f 1301 	mov.w	r3, #65537	; 0x10001
 80303ae:	6683      	str	r3, [r0, #104]	; 0x68
    huart->NbTxDataToProcess = ((uint16_t)tx_fifo_depth * numerator[tx_fifo_threshold]) /
                               (uint16_t)denominator[tx_fifo_threshold];
    huart->NbRxDataToProcess = ((uint16_t)rx_fifo_depth * numerator[rx_fifo_threshold]) /
                               (uint16_t)denominator[rx_fifo_threshold];
  }
}
 80303b0:	bd30      	pop	{r4, r5, pc}
    rx_fifo_threshold = (uint8_t)(READ_BIT(huart->Instance->CR3, USART_CR3_RXFTCFG) >> USART_CR3_RXFTCFG_Pos);
 80303b2:	6803      	ldr	r3, [r0, #0]
    huart->NbTxDataToProcess = ((uint16_t)tx_fifo_depth * numerator[tx_fifo_threshold]) /
 80303b4:	4d0a      	ldr	r5, [pc, #40]	; (80303e0 <UARTEx_SetNbDataToProcess+0x3c>)
    rx_fifo_threshold = (uint8_t)(READ_BIT(huart->Instance->CR3, USART_CR3_RXFTCFG) >> USART_CR3_RXFTCFG_Pos);
 80303b6:	689a      	ldr	r2, [r3, #8]
    tx_fifo_threshold = (uint8_t)(READ_BIT(huart->Instance->CR3, USART_CR3_TXFTCFG) >> USART_CR3_TXFTCFG_Pos);
 80303b8:	6899      	ldr	r1, [r3, #8]
                               (uint16_t)denominator[tx_fifo_threshold];
 80303ba:	4c0a      	ldr	r4, [pc, #40]	; (80303e4 <UARTEx_SetNbDataToProcess+0x40>)
    tx_fifo_threshold = (uint8_t)(READ_BIT(huart->Instance->CR3, USART_CR3_TXFTCFG) >> USART_CR3_TXFTCFG_Pos);
 80303bc:	0f49      	lsrs	r1, r1, #29
    huart->NbTxDataToProcess = ((uint16_t)tx_fifo_depth * numerator[tx_fifo_threshold]) /
 80303be:	5c6b      	ldrb	r3, [r5, r1]
                               (uint16_t)denominator[tx_fifo_threshold];
 80303c0:	5c61      	ldrb	r1, [r4, r1]
    huart->NbTxDataToProcess = ((uint16_t)tx_fifo_depth * numerator[tx_fifo_threshold]) /
 80303c2:	00db      	lsls	r3, r3, #3
 80303c4:	fbb3 f3f1 	udiv	r3, r3, r1
    huart->NbRxDataToProcess = ((uint16_t)rx_fifo_depth * numerator[rx_fifo_threshold]) /
 80303c8:	f3c2 6242 	ubfx	r2, r2, #25, #3
    huart->NbTxDataToProcess = ((uint16_t)tx_fifo_depth * numerator[tx_fifo_threshold]) /
 80303cc:	f8a0 306a 	strh.w	r3, [r0, #106]	; 0x6a
    huart->NbRxDataToProcess = ((uint16_t)rx_fifo_depth * numerator[rx_fifo_threshold]) /
 80303d0:	5cab      	ldrb	r3, [r5, r2]
                               (uint16_t)denominator[rx_fifo_threshold];
 80303d2:	5ca2      	ldrb	r2, [r4, r2]
    huart->NbRxDataToProcess = ((uint16_t)rx_fifo_depth * numerator[rx_fifo_threshold]) /
 80303d4:	00db      	lsls	r3, r3, #3
 80303d6:	fbb3 f3f2 	udiv	r3, r3, r2
 80303da:	f8a0 3068 	strh.w	r3, [r0, #104]	; 0x68
}
 80303de:	e7e7      	b.n	80303b0 <UARTEx_SetNbDataToProcess+0xc>
 80303e0:	080342fe 	.word	0x080342fe
 80303e4:	080342f6 	.word	0x080342f6

080303e8 <HAL_UARTEx_RxFifoFullCallback>:
}
 80303e8:	4770      	bx	lr

080303ea <HAL_UARTEx_TxFifoEmptyCallback>:
 80303ea:	4770      	bx	lr

080303ec <HAL_UARTEx_EnableFifoMode>:
  assert_param(IS_UART_FIFO_INSTANCE(huart->Instance));
 80303ec:	6803      	ldr	r3, [r0, #0]
 80303ee:	4a1a      	ldr	r2, [pc, #104]	; (8030458 <HAL_UARTEx_EnableFifoMode+0x6c>)
{
 80303f0:	b510      	push	{r4, lr}
  assert_param(IS_UART_FIFO_INSTANCE(huart->Instance));
 80303f2:	4293      	cmp	r3, r2
{
 80303f4:	4604      	mov	r4, r0
  assert_param(IS_UART_FIFO_INSTANCE(huart->Instance));
 80303f6:	d00b      	beq.n	8030410 <HAL_UARTEx_EnableFifoMode+0x24>
 80303f8:	f5a2 4274 	sub.w	r2, r2, #62464	; 0xf400
 80303fc:	4293      	cmp	r3, r2
 80303fe:	d007      	beq.n	8030410 <HAL_UARTEx_EnableFifoMode+0x24>
 8030400:	4a16      	ldr	r2, [pc, #88]	; (803045c <HAL_UARTEx_EnableFifoMode+0x70>)
 8030402:	4293      	cmp	r3, r2
 8030404:	d004      	beq.n	8030410 <HAL_UARTEx_EnableFifoMode+0x24>
 8030406:	f44f 71fb 	mov.w	r1, #502	; 0x1f6
 803040a:	4815      	ldr	r0, [pc, #84]	; (8030460 <HAL_UARTEx_EnableFifoMode+0x74>)
 803040c:	f7f5 fec6 	bl	802619c <assert_failed>
  __HAL_LOCK(huart);
 8030410:	f894 3084 	ldrb.w	r3, [r4, #132]	; 0x84
 8030414:	2b01      	cmp	r3, #1
 8030416:	d01c      	beq.n	8030452 <HAL_UARTEx_EnableFifoMode+0x66>
 8030418:	2301      	movs	r3, #1
 803041a:	f884 3084 	strb.w	r3, [r4, #132]	; 0x84
  huart->gState = HAL_UART_STATE_BUSY;
 803041e:	2324      	movs	r3, #36	; 0x24
 8030420:	f8c4 3088 	str.w	r3, [r4, #136]	; 0x88
  tmpcr1 = READ_REG(huart->Instance->CR1);
 8030424:	6823      	ldr	r3, [r4, #0]
  UARTEx_SetNbDataToProcess(huart);
 8030426:	4620      	mov	r0, r4
  tmpcr1 = READ_REG(huart->Instance->CR1);
 8030428:	681a      	ldr	r2, [r3, #0]
  __HAL_UART_DISABLE(huart);
 803042a:	6819      	ldr	r1, [r3, #0]
  SET_BIT(tmpcr1, USART_CR1_FIFOEN);
 803042c:	f042 5200 	orr.w	r2, r2, #536870912	; 0x20000000
  __HAL_UART_DISABLE(huart);
 8030430:	f021 0101 	bic.w	r1, r1, #1
 8030434:	6019      	str	r1, [r3, #0]
  huart->FifoMode = UART_FIFOMODE_ENABLE;
 8030436:	f04f 5100 	mov.w	r1, #536870912	; 0x20000000
 803043a:	6661      	str	r1, [r4, #100]	; 0x64
  WRITE_REG(huart->Instance->CR1, tmpcr1);
 803043c:	601a      	str	r2, [r3, #0]
  UARTEx_SetNbDataToProcess(huart);
 803043e:	f7ff ffb1 	bl	80303a4 <UARTEx_SetNbDataToProcess>
  huart->gState = HAL_UART_STATE_READY;
 8030442:	2320      	movs	r3, #32
 8030444:	f8c4 3088 	str.w	r3, [r4, #136]	; 0x88
  __HAL_UNLOCK(huart);
 8030448:	2300      	movs	r3, #0
  return HAL_OK;
 803044a:	4618      	mov	r0, r3
  __HAL_UNLOCK(huart);
 803044c:	f884 3084 	strb.w	r3, [r4, #132]	; 0x84
}
 8030450:	bd10      	pop	{r4, pc}
  __HAL_LOCK(huart);
 8030452:	2002      	movs	r0, #2
 8030454:	e7fc      	b.n	8030450 <HAL_UARTEx_EnableFifoMode+0x64>
 8030456:	bf00      	nop
 8030458:	40013800 	.word	0x40013800
 803045c:	46002400 	.word	0x46002400
 8030460:	08034284 	.word	0x08034284

08030464 <HAL_UARTEx_SetTxFifoThreshold>:
  assert_param(IS_UART_FIFO_INSTANCE(huart->Instance));
 8030464:	6803      	ldr	r3, [r0, #0]
 8030466:	4a21      	ldr	r2, [pc, #132]	; (80304ec <HAL_UARTEx_SetTxFifoThreshold+0x88>)
{
 8030468:	b570      	push	{r4, r5, r6, lr}
  assert_param(IS_UART_FIFO_INSTANCE(huart->Instance));
 803046a:	4293      	cmp	r3, r2
{
 803046c:	4604      	mov	r4, r0
 803046e:	460d      	mov	r5, r1
  assert_param(IS_UART_FIFO_INSTANCE(huart->Instance));
 8030470:	d00b      	beq.n	803048a <HAL_UARTEx_SetTxFifoThreshold+0x26>
 8030472:	f5a2 4274 	sub.w	r2, r2, #62464	; 0xf400
 8030476:	4293      	cmp	r3, r2
 8030478:	d007      	beq.n	803048a <HAL_UARTEx_SetTxFifoThreshold+0x26>
 803047a:	4a1d      	ldr	r2, [pc, #116]	; (80304f0 <HAL_UARTEx_SetTxFifoThreshold+0x8c>)
 803047c:	4293      	cmp	r3, r2
 803047e:	d004      	beq.n	803048a <HAL_UARTEx_SetTxFifoThreshold+0x26>
 8030480:	f240 214d 	movw	r1, #589	; 0x24d
 8030484:	481b      	ldr	r0, [pc, #108]	; (80304f4 <HAL_UARTEx_SetTxFifoThreshold+0x90>)
 8030486:	f7f5 fe89 	bl	802619c <assert_failed>
  assert_param(IS_UART_TXFIFO_THRESHOLD(Threshold));
 803048a:	f035 42c0 	bics.w	r2, r5, #1610612736	; 0x60000000
 803048e:	f025 5300 	bic.w	r3, r5, #536870912	; 0x20000000
 8030492:	d007      	beq.n	80304a4 <HAL_UARTEx_SetTxFifoThreshold+0x40>
 8030494:	f1b3 4f00 	cmp.w	r3, #2147483648	; 0x80000000
 8030498:	d004      	beq.n	80304a4 <HAL_UARTEx_SetTxFifoThreshold+0x40>
 803049a:	f240 214e 	movw	r1, #590	; 0x24e
 803049e:	4815      	ldr	r0, [pc, #84]	; (80304f4 <HAL_UARTEx_SetTxFifoThreshold+0x90>)
 80304a0:	f7f5 fe7c 	bl	802619c <assert_failed>
  __HAL_LOCK(huart);
 80304a4:	f894 3084 	ldrb.w	r3, [r4, #132]	; 0x84
 80304a8:	2b01      	cmp	r3, #1
 80304aa:	d01d      	beq.n	80304e8 <HAL_UARTEx_SetTxFifoThreshold+0x84>
 80304ac:	2301      	movs	r3, #1
 80304ae:	f884 3084 	strb.w	r3, [r4, #132]	; 0x84
  huart->gState = HAL_UART_STATE_BUSY;
 80304b2:	2324      	movs	r3, #36	; 0x24
 80304b4:	f8c4 3088 	str.w	r3, [r4, #136]	; 0x88
  tmpcr1 = READ_REG(huart->Instance->CR1);
 80304b8:	6823      	ldr	r3, [r4, #0]
  UARTEx_SetNbDataToProcess(huart);
 80304ba:	4620      	mov	r0, r4
  tmpcr1 = READ_REG(huart->Instance->CR1);
 80304bc:	681e      	ldr	r6, [r3, #0]
  __HAL_UART_DISABLE(huart);
 80304be:	681a      	ldr	r2, [r3, #0]
 80304c0:	f022 0201 	bic.w	r2, r2, #1
 80304c4:	601a      	str	r2, [r3, #0]
  MODIFY_REG(huart->Instance->CR3, USART_CR3_TXFTCFG, Threshold);
 80304c6:	689a      	ldr	r2, [r3, #8]
 80304c8:	f022 4260 	bic.w	r2, r2, #3758096384	; 0xe0000000
 80304cc:	432a      	orrs	r2, r5
 80304ce:	609a      	str	r2, [r3, #8]
  UARTEx_SetNbDataToProcess(huart);
 80304d0:	f7ff ff68 	bl	80303a4 <UARTEx_SetNbDataToProcess>
  WRITE_REG(huart->Instance->CR1, tmpcr1);
 80304d4:	6823      	ldr	r3, [r4, #0]
 80304d6:	601e      	str	r6, [r3, #0]
  huart->gState = HAL_UART_STATE_READY;
 80304d8:	2320      	movs	r3, #32
 80304da:	f8c4 3088 	str.w	r3, [r4, #136]	; 0x88
  __HAL_UNLOCK(huart);
 80304de:	2300      	movs	r3, #0
  return HAL_OK;
 80304e0:	4618      	mov	r0, r3
  __HAL_UNLOCK(huart);
 80304e2:	f884 3084 	strb.w	r3, [r4, #132]	; 0x84
}
 80304e6:	bd70      	pop	{r4, r5, r6, pc}
  __HAL_LOCK(huart);
 80304e8:	2002      	movs	r0, #2
 80304ea:	e7fc      	b.n	80304e6 <HAL_UARTEx_SetTxFifoThreshold+0x82>
 80304ec:	40013800 	.word	0x40013800
 80304f0:	46002400 	.word	0x46002400
 80304f4:	08034284 	.word	0x08034284

080304f8 <HAL_UARTEx_SetRxFifoThreshold>:
  assert_param(IS_UART_FIFO_INSTANCE(huart->Instance));
 80304f8:	6803      	ldr	r3, [r0, #0]
 80304fa:	4a21      	ldr	r2, [pc, #132]	; (8030580 <HAL_UARTEx_SetRxFifoThreshold+0x88>)
{
 80304fc:	b570      	push	{r4, r5, r6, lr}
  assert_param(IS_UART_FIFO_INSTANCE(huart->Instance));
 80304fe:	4293      	cmp	r3, r2
{
 8030500:	4604      	mov	r4, r0
 8030502:	460d      	mov	r5, r1
  assert_param(IS_UART_FIFO_INSTANCE(huart->Instance));
 8030504:	d00b      	beq.n	803051e <HAL_UARTEx_SetRxFifoThreshold+0x26>
 8030506:	f5a2 4274 	sub.w	r2, r2, #62464	; 0xf400
 803050a:	4293      	cmp	r3, r2
 803050c:	d007      	beq.n	803051e <HAL_UARTEx_SetRxFifoThreshold+0x26>
 803050e:	4a1d      	ldr	r2, [pc, #116]	; (8030584 <HAL_UARTEx_SetRxFifoThreshold+0x8c>)
 8030510:	4293      	cmp	r3, r2
 8030512:	d004      	beq.n	803051e <HAL_UARTEx_SetRxFifoThreshold+0x26>
 8030514:	f240 217e 	movw	r1, #638	; 0x27e
 8030518:	481b      	ldr	r0, [pc, #108]	; (8030588 <HAL_UARTEx_SetRxFifoThreshold+0x90>)
 803051a:	f7f5 fe3f 	bl	802619c <assert_failed>
  assert_param(IS_UART_RXFIFO_THRESHOLD(Threshold));
 803051e:	f035 62c0 	bics.w	r2, r5, #100663296	; 0x6000000
 8030522:	f025 7300 	bic.w	r3, r5, #33554432	; 0x2000000
 8030526:	d007      	beq.n	8030538 <HAL_UARTEx_SetRxFifoThreshold+0x40>
 8030528:	f1b3 6f00 	cmp.w	r3, #134217728	; 0x8000000
 803052c:	d004      	beq.n	8030538 <HAL_UARTEx_SetRxFifoThreshold+0x40>
 803052e:	f240 217f 	movw	r1, #639	; 0x27f
 8030532:	4815      	ldr	r0, [pc, #84]	; (8030588 <HAL_UARTEx_SetRxFifoThreshold+0x90>)
 8030534:	f7f5 fe32 	bl	802619c <assert_failed>
  __HAL_LOCK(huart);
 8030538:	f894 3084 	ldrb.w	r3, [r4, #132]	; 0x84
 803053c:	2b01      	cmp	r3, #1
 803053e:	d01d      	beq.n	803057c <HAL_UARTEx_SetRxFifoThreshold+0x84>
 8030540:	2301      	movs	r3, #1
 8030542:	f884 3084 	strb.w	r3, [r4, #132]	; 0x84
  huart->gState = HAL_UART_STATE_BUSY;
 8030546:	2324      	movs	r3, #36	; 0x24
 8030548:	f8c4 3088 	str.w	r3, [r4, #136]	; 0x88
  tmpcr1 = READ_REG(huart->Instance->CR1);
 803054c:	6823      	ldr	r3, [r4, #0]
  UARTEx_SetNbDataToProcess(huart);
 803054e:	4620      	mov	r0, r4
  tmpcr1 = READ_REG(huart->Instance->CR1);
 8030550:	681e      	ldr	r6, [r3, #0]
  __HAL_UART_DISABLE(huart);
 8030552:	681a      	ldr	r2, [r3, #0]
 8030554:	f022 0201 	bic.w	r2, r2, #1
 8030558:	601a      	str	r2, [r3, #0]
  MODIFY_REG(huart->Instance->CR3, USART_CR3_RXFTCFG, Threshold);
 803055a:	689a      	ldr	r2, [r3, #8]
 803055c:	f022 6260 	bic.w	r2, r2, #234881024	; 0xe000000
 8030560:	432a      	orrs	r2, r5
 8030562:	609a      	str	r2, [r3, #8]
  UARTEx_SetNbDataToProcess(huart);
 8030564:	f7ff ff1e 	bl	80303a4 <UARTEx_SetNbDataToProcess>
  WRITE_REG(huart->Instance->CR1, tmpcr1);
 8030568:	6823      	ldr	r3, [r4, #0]
 803056a:	601e      	str	r6, [r3, #0]
  huart->gState = HAL_UART_STATE_READY;
 803056c:	2320      	movs	r3, #32
 803056e:	f8c4 3088 	str.w	r3, [r4, #136]	; 0x88
  __HAL_UNLOCK(huart);
 8030572:	2300      	movs	r3, #0
  return HAL_OK;
 8030574:	4618      	mov	r0, r3
  __HAL_UNLOCK(huart);
 8030576:	f884 3084 	strb.w	r3, [r4, #132]	; 0x84
}
 803057a:	bd70      	pop	{r4, r5, r6, pc}
  __HAL_LOCK(huart);
 803057c:	2002      	movs	r0, #2
 803057e:	e7fc      	b.n	803057a <HAL_UARTEx_SetRxFifoThreshold+0x82>
 8030580:	40013800 	.word	0x40013800
 8030584:	46002400 	.word	0x46002400
 8030588:	08034284 	.word	0x08034284

0803058c <ll_sys_enable_irq>:
  * @brief  Enable interrutps
  * @param  None
  * @retval None
  */
void ll_sys_enable_irq(void) {
  LINKLAYER_PLAT_EnableIRQ();
 803058c:	f7f7 bb62 	b.w	8027c54 <LINKLAYER_PLAT_EnableIRQ>

08030590 <ll_sys_disable_irq>:
  * @brief  Disable interrutps
  * @param  None
  * @retval None
  */
void ll_sys_disable_irq(void) {
  LINKLAYER_PLAT_DisableIRQ();
 8030590:	f7f7 bb70 	b.w	8027c74 <LINKLAYER_PLAT_DisableIRQ>

08030594 <ll_sys_enable_specific_irq>:
  * @param  None
  * @retval None
  */
void ll_sys_enable_specific_irq(uint8_t isr_type)
{
  LINKLAYER_PLAT_EnableSpecificIRQ(isr_type);
 8030594:	f7f7 bb76 	b.w	8027c84 <LINKLAYER_PLAT_EnableSpecificIRQ>

08030598 <ll_sys_disable_specific_irq>:
  * @param  None
  * @retval None
  */
void ll_sys_disable_specific_irq(uint8_t isr_type)
{
  LINKLAYER_PLAT_DisableSpecificIRQ(isr_type);
 8030598:	f7f7 bba2 	b.w	8027ce0 <LINKLAYER_PLAT_DisableSpecificIRQ>

0803059c <ll_sys_enable_os_context_switch>:
}

void ll_sys_enable_os_context_switch(void)
{
  LINKLAYER_PLAT_EnableOSContextSwitch();
 803059c:	f7f7 bc38 	b.w	8027e10 <LINKLAYER_PLAT_EnableOSContextSwitch>

080305a0 <ll_sys_disable_os_context_switch>:
}

void ll_sys_disable_os_context_switch(void)
{
  LINKLAYER_PLAT_DisableOSContextSwitch();
 80305a0:	f7f7 bc37 	b.w	8027e12 <LINKLAYER_PLAT_DisableOSContextSwitch>

080305a4 <ll_sys_dp_slp_init>:
ll_sys_status_t ll_sys_dp_slp_init(void)
{
  ll_sys_status_t return_status = LL_SYS_ERROR;
  
  /* Create link layer timer for handling IP DEEP SLEEP mode */
  radio_dp_slp_tmr_id = os_timer_create((t_timer_callbk)ll_sys_dp_slp_wakeup_evt_clbk, os_timer_once, NULL);
 80305a4:	2200      	movs	r2, #0
{
 80305a6:	b508      	push	{r3, lr}
  radio_dp_slp_tmr_id = os_timer_create((t_timer_callbk)ll_sys_dp_slp_wakeup_evt_clbk, os_timer_once, NULL);
 80305a8:	4611      	mov	r1, r2
 80305aa:	4804      	ldr	r0, [pc, #16]	; (80305bc <ll_sys_dp_slp_init+0x18>)
 80305ac:	f7d5 f8d1 	bl	8005752 <os_timer_create>
 80305b0:	4b03      	ldr	r3, [pc, #12]	; (80305c0 <ll_sys_dp_slp_init+0x1c>)
 80305b2:	6018      	str	r0, [r3, #0]
  {
    return_status = LL_SYS_OK;
  }
  
  return return_status;
}
 80305b4:	fab0 f080 	clz	r0, r0
 80305b8:	0940      	lsrs	r0, r0, #5
 80305ba:	bd08      	pop	{r3, pc}
 80305bc:	08030605 	.word	0x08030605
 80305c0:	20009148 	.word	0x20009148

080305c4 <ll_sys_dp_slp_exit>:
/**
  * @brief  The Link Layer IP exits deep sleep mode
  * @param  None
  * @retval LL_SYS status
  */
ll_sys_status_t ll_sys_dp_slp_exit(void){
 80305c4:	b538      	push	{r3, r4, r5, lr}
  ll_sys_status_t return_status = LL_SYS_ERROR;

  /* Disable radio interrupt */
  LINKLAYER_PLAT_DisableRadioIT();

  if(!is_Radio_DeepSleep)
 80305c6:	4d0d      	ldr	r5, [pc, #52]	; (80305fc <ll_sys_dp_slp_exit+0x38>)
  LINKLAYER_PLAT_DisableRadioIT();
 80305c8:	f7f7 fbc1 	bl	8027d4e <LINKLAYER_PLAT_DisableRadioIT>
  if(!is_Radio_DeepSleep)
 80305cc:	782c      	ldrb	r4, [r5, #0]
 80305ce:	b174      	cbz	r4, 80305ee <ll_sys_dp_slp_exit+0x2a>
    return_status = LL_SYS_OK;
  }
  else
  {
    /* Stop the deep sleep wake-up timer if running */
    if(os_get_tmr_state(radio_dp_slp_tmr_id) != (os_timer_state)osTimerStopped)
 80305d0:	4c0b      	ldr	r4, [pc, #44]	; (8030600 <ll_sys_dp_slp_exit+0x3c>)
 80305d2:	6820      	ldr	r0, [r4, #0]
 80305d4:	f7d5 fad8 	bl	8005b88 <os_get_tmr_state>
 80305d8:	2802      	cmp	r0, #2
 80305da:	d002      	beq.n	80305e2 <ll_sys_dp_slp_exit+0x1e>
    {
      os_timer_stop(radio_dp_slp_tmr_id);
 80305dc:	6820      	ldr	r0, [r4, #0]
 80305de:	f7d5 f994 	bl	800590a <os_timer_stop>
    }
    
    /* Switch Link Layer IP to SLEEP mode (by deactivate DEEP SLEEP mode) */
#if defined(BLE)
    /* BLE & Concurrent use case */
    cmd_status = ll_intf_le_set_dp_slp_mode(DEEP_SLEEP_DISABLE);
 80305e2:	2000      	movs	r0, #0
 80305e4:	f7d4 fc48 	bl	8004e78 <ll_intf_le_set_dp_slp_mode>
#elif defined(MAC)
    cmd_status = llhwc_cmn_set_dp_slp_mode(DEEP_SLEEP_DISABLE);
#else
 #error "neither MAC not BLE defined"
#endif
    if(cmd_status == SUCCESS)
 80305e8:	b928      	cbnz	r0, 80305f6 <ll_sys_dp_slp_exit+0x32>
    {
      is_Radio_DeepSleep = 0U;
      return_status = LL_SYS_OK;
 80305ea:	4604      	mov	r4, r0
      is_Radio_DeepSleep = 0U;
 80305ec:	7028      	strb	r0, [r5, #0]
    }
  }
  
  /* Re-enable radio interrupt */
  LINKLAYER_PLAT_EnableRadioIT();
 80305ee:	f7f7 fbab 	bl	8027d48 <LINKLAYER_PLAT_EnableRadioIT>
  
  return return_status;
}
 80305f2:	4620      	mov	r0, r4
 80305f4:	bd38      	pop	{r3, r4, r5, pc}
  ll_sys_status_t return_status = LL_SYS_ERROR;
 80305f6:	2401      	movs	r4, #1
 80305f8:	e7f9      	b.n	80305ee <ll_sys_dp_slp_exit+0x2a>
 80305fa:	bf00      	nop
 80305fc:	20009144 	.word	0x20009144
 8030600:	20009148 	.word	0x20009148

08030604 <ll_sys_dp_slp_wakeup_evt_clbk>:
/**
  * @brief  Link Layer deep sleep wake-up timer callback
  * @param  ptr_arg    pointer passed through the callback
  * @retval LL_SYS status
  */
void ll_sys_dp_slp_wakeup_evt_clbk(void const *ptr_arg){
 8030604:	b508      	push	{r3, lr}
  int32_t os_status = GENERAL_FAILURE;

  /* Stop the Link Layer IP DEEP SLEEP wake-up timer */
  os_status = os_timer_stop(radio_dp_slp_tmr_id);
 8030606:	4b05      	ldr	r3, [pc, #20]	; (803061c <ll_sys_dp_slp_wakeup_evt_clbk+0x18>)
 8030608:	6818      	ldr	r0, [r3, #0]
 803060a:	f7d5 f97e 	bl	800590a <os_timer_stop>
  if(os_status != SUCCESS){
 803060e:	b918      	cbnz	r0, 8030618 <ll_sys_dp_slp_wakeup_evt_clbk+0x14>

  /* Link Layer IP exits from DEEP SLEEP mode */
//  LL_GPIO_DEEP_SLEEP_DISABLE_from_irq_set();
  ll_sys_dp_slp_exit();
//  LL_GPIO_DEEP_SLEEP_DISABLE_from_irq_reset();
 8030610:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
  ll_sys_dp_slp_exit();
 8030614:	f7ff bfd6 	b.w	80305c4 <ll_sys_dp_slp_exit>
 8030618:	bd08      	pop	{r3, pc}
 803061a:	bf00      	nop
 803061c:	20009148 	.word	0x20009148

08030620 <ll_sys_radio_hclk_ctrl_init>:
  * @param  None
  * @retval None
  */
void ll_sys_radio_hclk_ctrl_init(void)
{
  ll_sys_radio_hclk_client_list = 0;
 8030620:	2200      	movs	r2, #0
 8030622:	4b01      	ldr	r3, [pc, #4]	; (8030628 <ll_sys_radio_hclk_ctrl_init+0x8>)
 8030624:	601a      	str	r2, [r3, #0]
}
 8030626:	4770      	bx	lr
 8030628:	2000914c 	.word	0x2000914c

0803062c <ll_sys_radio_hclk_ctrl_req>:
  * @param  client     client that requests a bus clock change
  * @param  enable     enable or disable request
  * @retval None
  */
void ll_sys_radio_hclk_ctrl_req(ll_sys_radio_hclk_client_t client, ll_sys_radio_hclk_state_t enable)
{
 803062c:	b538      	push	{r3, r4, r5, lr}
 803062e:	460c      	mov	r4, r1
 8030630:	4605      	mov	r5, r0
  
  ll_sys_disable_irq();
 8030632:	f7ff ffad 	bl	8030590 <ll_sys_disable_irq>
  
  if(enable == LL_SYS_RADIO_HCLK_OFF)
 8030636:	4b08      	ldr	r3, [pc, #32]	; (8030658 <ll_sys_radio_hclk_ctrl_req+0x2c>)
 8030638:	b11c      	cbz	r4, 8030642 <ll_sys_radio_hclk_ctrl_req+0x16>
  ll_sys_radio_hclk_client_list &= (~(enable << client));
  }
  
  else
  {
    ll_sys_radio_hclk_client_list |= (enable << client);
 803063a:	6819      	ldr	r1, [r3, #0]
 803063c:	40ac      	lsls	r4, r5
 803063e:	430c      	orrs	r4, r1
 8030640:	601c      	str	r4, [r3, #0]
  }
  
  if(ll_sys_radio_hclk_client_list == 0)
 8030642:	681b      	ldr	r3, [r3, #0]
 8030644:	b92b      	cbnz	r3, 8030652 <ll_sys_radio_hclk_ctrl_req+0x26>
  {
    /* Disable radio clock as there is no request anymore */
    LINKLAYER_PLAT_HclkDisable();
 8030646:	f7f7 faab 	bl	8027ba0 <LINKLAYER_PLAT_HclkDisable>
    /* Enable radio clock as there at least one request */
    LINKLAYER_PLAT_HclkEnable();
  }
  
  ll_sys_enable_irq();
 803064a:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
  ll_sys_enable_irq();
 803064e:	f7ff bf9d 	b.w	803058c <ll_sys_enable_irq>
    LINKLAYER_PLAT_HclkEnable();
 8030652:	f7f7 fa93 	bl	8027b7c <LINKLAYER_PLAT_HclkEnable>
 8030656:	e7f8      	b.n	803064a <ll_sys_radio_hclk_ctrl_req+0x1e>
 8030658:	2000914c 	.word	0x2000914c

0803065c <ll_sys_init>:
  * @brief  Initialize the Link Layer SoC dependencies
  * @param  None
  * @retval None
  */
void ll_sys_init()
{
 803065c:	b508      	push	{r3, lr}
  ll_sys_radio_hclk_ctrl_init();
 803065e:	f7ff ffdf 	bl	8030620 <ll_sys_radio_hclk_ctrl_init>
  LINKLAYER_PLAT_ClockInit();	
}
 8030662:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
  LINKLAYER_PLAT_ClockInit();	
 8030666:	f7f7 ba53 	b.w	8027b10 <LINKLAYER_PLAT_ClockInit>

0803066a <ll_sys_delay_us>:
  * @param  None
  * @retval None
  */
void ll_sys_delay_us(uint32_t delay)
{
  LINKLAYER_PLAT_DelayUs(delay);
 803066a:	f7f7 ba6b 	b.w	8027b44 <LINKLAYER_PLAT_DelayUs>

0803066e <ll_sys_assert>:
  * @param  None
  * @retval None
  */
void ll_sys_assert(uint8_t condition)
{
  LINKLAYER_PLAT_Assert(condition);
 803066e:	f7f7 ba7d 	b.w	8027b6c <LINKLAYER_PLAT_Assert>

08030672 <ll_sys_radio_ack_ctrl>:
  * @param  None
  * @retval None
  */
void ll_sys_radio_ack_ctrl(uint8_t enable)
{
  LINKLAYER_PLAT_AclkCtrl(enable);
 8030672:	f7f7 ba9d 	b.w	8027bb0 <LINKLAYER_PLAT_AclkCtrl>

08030676 <ll_sys_radio_wait_for_busclkrdy>:
  * @param  None
  * @retval None
  */
void ll_sys_radio_wait_for_busclkrdy(void)
{
  LINKLAYER_PLAT_WaitHclkRdy();
 8030676:	f7f7 ba94 	b.w	8027ba2 <LINKLAYER_PLAT_WaitHclkRdy>

0803067a <ll_sys_get_rng>:
  * @param  None
  * @retval None
  */
void ll_sys_get_rng(uint8_t *ptr_rnd, uint32_t len)
{
  LINKLAYER_PLAT_GetRNG(ptr_rnd, len);
 803067a:	f7f7 baa9 	b.w	8027bd0 <LINKLAYER_PLAT_GetRNG>

0803067e <ll_sys_setup_radio_intr>:
  * @param  intr_cb    radio interrupt callback to link with the radio IRQ
  * @retval None
  */
void ll_sys_setup_radio_intr(void (*intr_cb)())
{
  LINKLAYER_PLAT_SetupRadioIT(intr_cb);
 803067e:	f7f7 baab 	b.w	8027bd8 <LINKLAYER_PLAT_SetupRadioIT>

08030682 <ll_sys_setup_radio_sw_low_intr>:
  *                    with the defined interrupt vector
  * @retval None
  */
void ll_sys_setup_radio_sw_low_intr(void (*intr_cb)())
{
  LINKLAYER_PLAT_SetupSwLowIT(intr_cb);
 8030682:	f7f7 bab9 	b.w	8027bf8 <LINKLAYER_PLAT_SetupSwLowIT>

08030686 <ll_sys_radio_sw_low_intr_trigger>:
  * @param  None
  * @retval None
  */
void ll_sys_radio_sw_low_intr_trigger(uint8_t priority)
{
  LINKLAYER_PLAT_TriggerSwLowIT(priority);
 8030686:	f7f7 bac7 	b.w	8027c18 <LINKLAYER_PLAT_TriggerSwLowIT>

0803068a <ll_sys_radio_evt_not>:
  * @param  start      start/end of radio event
  * @retval None
  */
void ll_sys_radio_evt_not(uint8_t start)
{
  if(start)
 803068a:	4601      	mov	r1, r0
{
 803068c:	b508      	push	{r3, lr}
  if(start)
 803068e:	b138      	cbz	r0, 80306a0 <ll_sys_radio_evt_not+0x16>
  {
    ll_sys_radio_hclk_ctrl_req(LL_SYS_RADIO_HCLK_LL_EVT, LL_SYS_RADIO_HCLK_ON);
 8030690:	2101      	movs	r1, #1
 8030692:	4608      	mov	r0, r1
 8030694:	f7ff ffca 	bl	803062c <ll_sys_radio_hclk_ctrl_req>
  else
  {
    ll_sys_radio_hclk_ctrl_req(LL_SYS_RADIO_HCLK_LL_EVT, LL_SYS_RADIO_HCLK_OFF);
    LINKLAYER_PLAT_StopRadioEvt();
  }
}
 8030698:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
    LINKLAYER_PLAT_StartRadioEvt();
 803069c:	f7f7 bb5a 	b.w	8027d54 <LINKLAYER_PLAT_StartRadioEvt>
    ll_sys_radio_hclk_ctrl_req(LL_SYS_RADIO_HCLK_LL_EVT, LL_SYS_RADIO_HCLK_OFF);
 80306a0:	2001      	movs	r0, #1
 80306a2:	f7ff ffc3 	bl	803062c <ll_sys_radio_hclk_ctrl_req>
}
 80306a6:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
    LINKLAYER_PLAT_StopRadioEvt();
 80306aa:	f7f7 bb65 	b.w	8027d78 <LINKLAYER_PLAT_StopRadioEvt>

080306ae <ll_sys_request_temperature>:
  * @param  None
  * @retval None
  */
void ll_sys_request_temperature(void)
{
   LINKLAYER_PLAT_RequestTemperature();
 80306ae:	f7f7 bb75 	b.w	8027d9c <LINKLAYER_PLAT_RequestTemperature>

080306b2 <ll_sys_bg_process>:
  * @brief  Link Layer background task pcoessing procedure
  * @param  None
  * @retval None
  */
void ll_sys_bg_process(void)
{
 80306b2:	b510      	push	{r4, lr}
  if(emngr_can_mcu_sleep() == 0)
 80306b4:	f7cf ff6a 	bl	800058c <emngr_can_mcu_sleep>
 80306b8:	4604      	mov	r4, r0
 80306ba:	b968      	cbnz	r0, 80306d8 <ll_sys_bg_process+0x26>
  {        
    ll_sys_radio_hclk_ctrl_req(LL_SYS_RADIO_HCLK_LL_BG, LL_SYS_RADIO_HCLK_ON);
 80306bc:	2101      	movs	r1, #1
 80306be:	2002      	movs	r0, #2
 80306c0:	f7ff ffb4 	bl	803062c <ll_sys_radio_hclk_ctrl_req>
    ll_sys_dp_slp_exit();
 80306c4:	f7ff ff7e 	bl	80305c4 <ll_sys_dp_slp_exit>
    emngr_handle_all_events();
 80306c8:	f7cf feb9 	bl	800043e <emngr_handle_all_events>
    ll_sys_radio_hclk_ctrl_req(LL_SYS_RADIO_HCLK_LL_BG, LL_SYS_RADIO_HCLK_OFF);
 80306cc:	4621      	mov	r1, r4
 80306ce:	2002      	movs	r0, #2
 80306d0:	f7ff ffac 	bl	803062c <ll_sys_radio_hclk_ctrl_req>
    
    HostStack_Process();
 80306d4:	f7f7 fa1a 	bl	8027b0c <HostStack_Process>
  }

  if(emngr_can_mcu_sleep() == 0)
 80306d8:	f7cf ff58 	bl	800058c <emngr_can_mcu_sleep>
 80306dc:	b918      	cbnz	r0, 80306e6 <ll_sys_bg_process+0x34>
  {
    ll_sys_schedule_bg_process();
  }
}
 80306de:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
    ll_sys_schedule_bg_process();
 80306e2:	f7f7 bb7d 	b.w	8027de0 <ll_sys_schedule_bg_process>
}
 80306e6:	bd10      	pop	{r4, pc}

080306e8 <ll_sys_event_missed_cb>:
static void ll_sys_dependencies_init(void);

static void ll_sys_event_missed_cb( ble_buff_hdr_t* ptr_evnt_hdr )
{
  
}
 80306e8:	4770      	bx	lr
	...

080306ec <ll_sys_ble_cntrl_init>:
  * @brief  Initialize the Link Layer IP BLE controller
  * @param  None
  * @retval None
  */
void ll_sys_ble_cntrl_init(hst_cbk hostCallback)
{ 
 80306ec:	b513      	push	{r0, r1, r4, lr}
 80306ee:	4604      	mov	r4, r0
  const struct hci_dispatch_tbl* p_hci_dis_tbl;
  hci_get_dis_tbl( &p_hci_dis_tbl );
 80306f0:	a801      	add	r0, sp, #4
 80306f2:	f7d2 fd5a 	bl	80031aa <hci_get_dis_tbl>
  
  ll_intf_init(p_hci_dis_tbl);
 80306f6:	9801      	ldr	r0, [sp, #4]
 80306f8:	f7d3 fb22 	bl	8003d40 <ll_intf_init>

  ll_intf_rgstr_hst_cbk(hostCallback);
 80306fc:	4620      	mov	r0, r4
 80306fe:	f7d4 fd2e 	bl	800515e <ll_intf_rgstr_hst_cbk>

  ll_intf_rgstr_hst_cbk_ll_queue_full( ll_sys_event_missed_cb );
 8030702:	4807      	ldr	r0, [pc, #28]	; (8030720 <ll_sys_ble_cntrl_init+0x34>)
 8030704:	f7d4 fd37 	bl	8005176 <ll_intf_rgstr_hst_cbk_ll_queue_full>
static void ll_sys_dependencies_init(void)
{
  ll_sys_status_t dp_slp_status = LL_SYS_ERROR;
  
  /* Deep sleep feature initialization */
  dp_slp_status = ll_sys_dp_slp_init();
 8030708:	f7ff ff4c 	bl	80305a4 <ll_sys_dp_slp_init>
  ll_sys_assert(dp_slp_status == LL_SYS_OK); 
 803070c:	fab0 f080 	clz	r0, r0
 8030710:	0940      	lsrs	r0, r0, #5
 8030712:	f7ff ffac 	bl	803066e <ll_sys_assert>
  
  /* Background task initialization */
  ll_sys_bg_process_init();
 8030716:	f7f7 fb5b 	bl	8027dd0 <ll_sys_bg_process_init>
}
 803071a:	b002      	add	sp, #8
 803071c:	bd10      	pop	{r4, pc}
 803071e:	bf00      	nop
 8030720:	080306e9 	.word	0x080306e9

08030724 <SVCCTL_Init>:
{
 
  /**
   * Initialize the number of registered Handler
   */
  SVCCTL_EvtHandler.NbreOfRegisteredHandler = 0;
 8030724:	2300      	movs	r3, #0
 8030726:	4a02      	ldr	r2, [pc, #8]	; (8030730 <SVCCTL_Init+0xc>)
 8030728:	7713      	strb	r3, [r2, #28]
  SVCCTL_CltHandler.NbreOfRegisteredHandler = 0;
 803072a:	4a02      	ldr	r2, [pc, #8]	; (8030734 <SVCCTL_Init+0x10>)
 803072c:	7013      	strb	r3, [r2, #0]

  return;
}
 803072e:	4770      	bx	lr
 8030730:	20009154 	.word	0x20009154
 8030734:	20009150 	.word	0x20009150

08030738 <SVCCTL_RegisterSvcHandler>:
 * @retval None
 */
void SVCCTL_RegisterSvcHandler( SVC_CTL_p_EvtHandler_t pfBLE_SVC_Service_Event_Handler )
{
#if (BLE_CFG_SVC_MAX_NBR_CB > 0)
  SVCCTL_EvtHandler.SVCCTL__SvcHandlerTab[SVCCTL_EvtHandler.NbreOfRegisteredHandler] = pfBLE_SVC_Service_Event_Handler;
 8030738:	4a03      	ldr	r2, [pc, #12]	; (8030748 <SVCCTL_RegisterSvcHandler+0x10>)
 803073a:	7f13      	ldrb	r3, [r2, #28]
 803073c:	f842 0023 	str.w	r0, [r2, r3, lsl #2]
  SVCCTL_EvtHandler.NbreOfRegisteredHandler++;
 8030740:	3301      	adds	r3, #1
 8030742:	7713      	strb	r3, [r2, #28]
#else
  (void)(pfBLE_SVC_Service_Event_Handler);
#endif

  return;
}
 8030744:	4770      	bx	lr
 8030746:	bf00      	nop
 8030748:	20009154 	.word	0x20009154

0803074c <SVCCTL_UserEvtRx>:

  return;
}

SVCCTL_UserEvtFlowStatus_t SVCCTL_UserEvtRx( void *pckt )
{
 803074c:	b570      	push	{r4, r5, r6, lr}
#endif

  event_pckt = (hci_event_pckt*) ((hci_uart_pckt *) pckt)->data;
  event_notification_status = SVCCTL_EvtNotAck;

  switch (event_pckt->evt)
 803074e:	7843      	ldrb	r3, [r0, #1]
{
 8030750:	4604      	mov	r4, r0
  switch (event_pckt->evt)
 8030752:	2bff      	cmp	r3, #255	; 0xff
 8030754:	d004      	beq.n	8030760 <SVCCTL_UserEvtRx+0x14>
    case SVCCTL_EvtNotAck:
      /**
       *  The event has NOT been managed.
       *  It shall be passed to the application for processing
       */
      return_status = SVCCTL_App_Notification(pckt);
 8030756:	4620      	mov	r0, r4
      return_status = SVCCTL_UserEvtFlowEnable;
      break;
  }

  return (return_status);
}
 8030758:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
      return_status = SVCCTL_App_Notification(pckt);
 803075c:	f7f6 bc0c 	b.w	8026f78 <SVCCTL_App_Notification>
      switch ((blecore_evt->ecode) & SVCCTL_EGID_EVT_MASK)
 8030760:	f8b0 3003 	ldrh.w	r3, [r0, #3]
 8030764:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8030768:	f5b3 6f40 	cmp.w	r3, #3072	; 0xc00
 803076c:	d1f3      	bne.n	8030756 <SVCCTL_UserEvtRx+0xa>
 803076e:	2500      	movs	r5, #0
          for (index = 0; index < SVCCTL_EvtHandler.NbreOfRegisteredHandler; index++)
 8030770:	4e07      	ldr	r6, [pc, #28]	; (8030790 <SVCCTL_UserEvtRx+0x44>)
 8030772:	7f32      	ldrb	r2, [r6, #28]
 8030774:	b2eb      	uxtb	r3, r5
 8030776:	429a      	cmp	r2, r3
 8030778:	d9ed      	bls.n	8030756 <SVCCTL_UserEvtRx+0xa>
            event_notification_status = SVCCTL_EvtHandler.SVCCTL__SvcHandlerTab[index](pckt);
 803077a:	4620      	mov	r0, r4
 803077c:	f856 3023 	ldr.w	r3, [r6, r3, lsl #2]
 8030780:	4798      	blx	r3
            if (event_notification_status != SVCCTL_EvtNotAck)
 8030782:	3501      	adds	r5, #1
 8030784:	2800      	cmp	r0, #0
 8030786:	d0f4      	beq.n	8030772 <SVCCTL_UserEvtRx+0x26>
}
 8030788:	3802      	subs	r0, #2
 803078a:	bf18      	it	ne
 803078c:	2001      	movne	r0, #1
 803078e:	bd70      	pop	{r4, r5, r6, pc}
 8030790:	20009154 	.word	0x20009154

08030794 <TRACE_AllocateBufer>:
 * @param  Size to allocate within fifo
 * @param  Pos position within the fifo
 * @retval write position inside the buffer is -1 no space available.
 */
static int16_t TRACE_AllocateBufer(uint16_t Size, uint16_t *Pos)
{
 8030794:	b570      	push	{r4, r5, r6, lr}
  __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
 8030796:	f3ef 8610 	mrs	r6, PRIMASK
  __ASM volatile ("cpsid i" : : : "memory");
 803079a:	b672      	cpsid	i
  uint16_t freesize;
  int16_t ret = -1;

  UTIL_ADV_TRACE_ENTER_CRITICAL_SECTION();

  if(ADV_TRACE_Ctx.TraceWrPtr == ADV_TRACE_Ctx.TraceRdPtr)
 803079c:	4b14      	ldr	r3, [pc, #80]	; (80307f0 <TRACE_AllocateBufer+0x5c>)
 803079e:	8a5c      	ldrh	r4, [r3, #18]
 80307a0:	8a1a      	ldrh	r2, [r3, #16]
 80307a2:	4294      	cmp	r4, r2
 80307a4:	d113      	bne.n	80307ce <TRACE_AllocateBufer+0x3a>
  {
#ifdef UTIL_ADV_TRACE_UNCHUNK_MODE
    freesize = (uint16_t)(UTIL_ADV_TRACE_FIFO_SIZE - ADV_TRACE_Ctx.TraceWrPtr);
 80307a6:	f5c4 5280 	rsb	r2, r4, #4096	; 0x1000
    if((Size >= freesize) && (ADV_TRACE_Ctx.TraceRdPtr > Size))
 80307aa:	b292      	uxth	r2, r2
 80307ac:	4290      	cmp	r0, r2
 80307ae:	d306      	bcc.n	80307be <TRACE_AllocateBufer+0x2a>
 80307b0:	4284      	cmp	r4, r0
  {
#ifdef UTIL_ADV_TRACE_UNCHUNK_MODE
    if (ADV_TRACE_Ctx.TraceWrPtr > ADV_TRACE_Ctx.TraceRdPtr)
    {
      freesize = (uint16_t)(UTIL_ADV_TRACE_FIFO_SIZE - ADV_TRACE_Ctx.TraceWrPtr);
      if((Size >= freesize) && (ADV_TRACE_Ctx.TraceRdPtr > Size)) 
 80307b2:	d918      	bls.n	80307e6 <TRACE_AllocateBufer+0x52>
      {
        ADV_TRACE_Ctx.unchunk_status = TRACE_UNCHUNK_DETECTED;
 80307b4:	2201      	movs	r2, #1
 80307b6:	709a      	strb	r2, [r3, #2]
        ADV_TRACE_Ctx.unchunk_enabled = ADV_TRACE_Ctx.TraceWrPtr;
        freesize = ADV_TRACE_Ctx.TraceRdPtr;
        ADV_TRACE_Ctx.TraceWrPtr = 0;
 80307b8:	2200      	movs	r2, #0
        ADV_TRACE_Ctx.unchunk_enabled = ADV_TRACE_Ctx.TraceWrPtr;
 80307ba:	801c      	strh	r4, [r3, #0]
        ADV_TRACE_Ctx.TraceWrPtr = 0;
 80307bc:	825a      	strh	r2, [r3, #18]
#endif
  }

  if(freesize > Size)
  {
    *Pos = ADV_TRACE_Ctx.TraceWrPtr;
 80307be:	8a5a      	ldrh	r2, [r3, #18]
    ADV_TRACE_Ctx.TraceWrPtr = (ADV_TRACE_Ctx.TraceWrPtr + Size) % UTIL_ADV_TRACE_FIFO_SIZE;
 80307c0:	4410      	add	r0, r2
 80307c2:	f3c0 000b 	ubfx	r0, r0, #0, #12
    *Pos = ADV_TRACE_Ctx.TraceWrPtr;
 80307c6:	800a      	strh	r2, [r1, #0]
    ADV_TRACE_Ctx.TraceWrPtr = (ADV_TRACE_Ctx.TraceWrPtr + Size) % UTIL_ADV_TRACE_FIFO_SIZE;
 80307c8:	8258      	strh	r0, [r3, #18]
    ret = 0;
 80307ca:	2000      	movs	r0, #0
 80307cc:	e00d      	b.n	80307ea <TRACE_AllocateBufer+0x56>
    if (ADV_TRACE_Ctx.TraceWrPtr > ADV_TRACE_Ctx.TraceRdPtr)
 80307ce:	d906      	bls.n	80307de <TRACE_AllocateBufer+0x4a>
      freesize = (uint16_t)(UTIL_ADV_TRACE_FIFO_SIZE - ADV_TRACE_Ctx.TraceWrPtr);
 80307d0:	f5c4 5580 	rsb	r5, r4, #4096	; 0x1000
      if((Size >= freesize) && (ADV_TRACE_Ctx.TraceRdPtr > Size)) 
 80307d4:	b2ad      	uxth	r5, r5
 80307d6:	4285      	cmp	r5, r0
 80307d8:	d8f1      	bhi.n	80307be <TRACE_AllocateBufer+0x2a>
 80307da:	4282      	cmp	r2, r0
 80307dc:	e7e9      	b.n	80307b2 <TRACE_AllocateBufer+0x1e>
      freesize = (uint16_t)(ADV_TRACE_Ctx.TraceRdPtr - ADV_TRACE_Ctx.TraceWrPtr);
 80307de:	1b12      	subs	r2, r2, r4
  if(freesize > Size)
 80307e0:	b292      	uxth	r2, r2
 80307e2:	4282      	cmp	r2, r0
 80307e4:	d8eb      	bhi.n	80307be <TRACE_AllocateBufer+0x2a>
  int16_t ret = -1;
 80307e6:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
  __ASM volatile ("MSR primask, %0" : : "r" (priMask) : "memory");
 80307ea:	f386 8810 	msr	PRIMASK, r6
  }
#endif

  UTIL_ADV_TRACE_EXIT_CRITICAL_SECTION();
  return ret;
}
 80307ee:	bd70      	pop	{r4, r5, r6, pc}
 80307f0:	2000a174 	.word	0x2000a174

080307f4 <TRACE_Lock>:
  __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
 80307f4:	f3ef 8110 	mrs	r1, PRIMASK
  __ASM volatile ("cpsid i" : : : "memory");
 80307f8:	b672      	cpsid	i
 * @retval None.
 */
static void TRACE_Lock(void)
{
  UTIL_ADV_TRACE_ENTER_CRITICAL_SECTION();
  ADV_TRACE_Ctx.TraceLock++;
 80307fa:	4a03      	ldr	r2, [pc, #12]	; (8030808 <TRACE_Lock+0x14>)
 80307fc:	8ad3      	ldrh	r3, [r2, #22]
 80307fe:	3301      	adds	r3, #1
 8030800:	82d3      	strh	r3, [r2, #22]
  __ASM volatile ("MSR primask, %0" : : "r" (priMask) : "memory");
 8030802:	f381 8810 	msr	PRIMASK, r1
  UTIL_ADV_TRACE_EXIT_CRITICAL_SECTION();
}
 8030806:	4770      	bx	lr
 8030808:	2000a174 	.word	0x2000a174

0803080c <TRACE_UnLock>:
  __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
 803080c:	f3ef 8110 	mrs	r1, PRIMASK
  __ASM volatile ("cpsid i" : : : "memory");
 8030810:	b672      	cpsid	i
 * @retval None.
 */
static void TRACE_UnLock(void)
{
  UTIL_ADV_TRACE_ENTER_CRITICAL_SECTION();
  ADV_TRACE_Ctx.TraceLock--;
 8030812:	4a03      	ldr	r2, [pc, #12]	; (8030820 <TRACE_UnLock+0x14>)
 8030814:	8ad3      	ldrh	r3, [r2, #22]
 8030816:	3b01      	subs	r3, #1
 8030818:	82d3      	strh	r3, [r2, #22]
  __ASM volatile ("MSR primask, %0" : : "r" (priMask) : "memory");
 803081a:	f381 8810 	msr	PRIMASK, r1
  UTIL_ADV_TRACE_EXIT_CRITICAL_SECTION();
}
 803081e:	4770      	bx	lr
 8030820:	2000a174 	.word	0x2000a174

08030824 <UTIL_ADV_TRACE_Init>:
{
 8030824:	b510      	push	{r4, lr}
  (void)UTIL_ADV_TRACE_MEMSET8(&ADV_TRACE_Ctx, 0x0, sizeof(ADV_TRACE_Context));
 8030826:	2218      	movs	r2, #24
 8030828:	2100      	movs	r1, #0
 803082a:	4807      	ldr	r0, [pc, #28]	; (8030848 <UTIL_ADV_TRACE_Init+0x24>)
 803082c:	f000 f93c 	bl	8030aa8 <UTIL_MEM_set_8>
  (void)UTIL_ADV_TRACE_MEMSET8(&ADV_TRACE_Buffer, 0x0, sizeof(ADV_TRACE_Buffer));
 8030830:	4806      	ldr	r0, [pc, #24]	; (803084c <UTIL_ADV_TRACE_Init+0x28>)
 8030832:	f44f 5280 	mov.w	r2, #4096	; 0x1000
 8030836:	2100      	movs	r1, #0
 8030838:	f000 f936 	bl	8030aa8 <UTIL_MEM_set_8>
}
 803083c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
  return UTIL_TraceDriver.Init(TRACE_TxCpltCallback);
 8030840:	4b03      	ldr	r3, [pc, #12]	; (8030850 <UTIL_ADV_TRACE_Init+0x2c>)
 8030842:	4804      	ldr	r0, [pc, #16]	; (8030854 <UTIL_ADV_TRACE_Init+0x30>)
 8030844:	681b      	ldr	r3, [r3, #0]
 8030846:	4718      	bx	r3
 8030848:	2000a174 	.word	0x2000a174
 803084c:	20009174 	.word	0x20009174
 8030850:	080338e8 	.word	0x080338e8
 8030854:	080309d1 	.word	0x080309d1

08030858 <UTIL_ADV_TRACE_SetVerboseLevel>:
  ADV_TRACE_Ctx.CurrentVerboseLevel = Level;
 8030858:	4b01      	ldr	r3, [pc, #4]	; (8030860 <UTIL_ADV_TRACE_SetVerboseLevel+0x8>)
 803085a:	7218      	strb	r0, [r3, #8]
}
 803085c:	4770      	bx	lr
 803085e:	bf00      	nop
 8030860:	2000a174 	.word	0x2000a174

08030864 <UTIL_ADV_TRACE_SetRegion>:
  ADV_TRACE_Ctx.RegionMask |= Region;
 8030864:	4a02      	ldr	r2, [pc, #8]	; (8030870 <UTIL_ADV_TRACE_SetRegion+0xc>)
 8030866:	68d3      	ldr	r3, [r2, #12]
 8030868:	4318      	orrs	r0, r3
 803086a:	60d0      	str	r0, [r2, #12]
}
 803086c:	4770      	bx	lr
 803086e:	bf00      	nop
 8030870:	2000a174 	.word	0x2000a174

08030874 <UTIL_ADV_TRACE_PreSendHook>:
}
 8030874:	4770      	bx	lr
	...

08030878 <TRACE_Send>:
{
 8030878:	b573      	push	{r0, r1, r4, r5, r6, lr}
  __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
 803087a:	f3ef 8510 	mrs	r5, PRIMASK
  __ASM volatile ("cpsid i" : : : "memory");
 803087e:	b672      	cpsid	i
 * @brief  UnLock the trace buffer.
 * @retval None.
 */
static uint32_t TRACE_IsLocked(void)
{
  return (ADV_TRACE_Ctx.TraceLock == 0u? 0u: 1u);
 8030880:	4c1c      	ldr	r4, [pc, #112]	; (80308f4 <TRACE_Send+0x7c>)
  if(TRACE_IsLocked() == 0u)
 8030882:	8ae0      	ldrh	r0, [r4, #22]
 8030884:	2800      	cmp	r0, #0
 8030886:	d12f      	bne.n	80308e8 <TRACE_Send+0x70>
    TRACE_Lock();
 8030888:	f7ff ffb4 	bl	80307f4 <TRACE_Lock>
    if(ADV_TRACE_Ctx.TraceRdPtr != ADV_TRACE_Ctx.TraceWrPtr)
 803088c:	8a26      	ldrh	r6, [r4, #16]
 803088e:	8a62      	ldrh	r2, [r4, #18]
 8030890:	4296      	cmp	r6, r2
 8030892:	d027      	beq.n	80308e4 <TRACE_Send+0x6c>
      if(TRACE_UNCHUNK_DETECTED == ADV_TRACE_Ctx.unchunk_status)
 8030894:	78a1      	ldrb	r1, [r4, #2]
 8030896:	2901      	cmp	r1, #1
 8030898:	d111      	bne.n	80308be <TRACE_Send+0x46>
        ADV_TRACE_Ctx.unchunk_status = TRACE_UNCHUNK_TRANSFER;
 803089a:	2102      	movs	r1, #2
        ADV_TRACE_Ctx.TraceSentSize = (uint16_t) (ADV_TRACE_Ctx.unchunk_enabled - ADV_TRACE_Ctx.TraceRdPtr);
 803089c:	8823      	ldrh	r3, [r4, #0]
        ADV_TRACE_Ctx.unchunk_status = TRACE_UNCHUNK_TRANSFER;
 803089e:	70a1      	strb	r1, [r4, #2]
        ADV_TRACE_Ctx.TraceSentSize = (uint16_t) (ADV_TRACE_Ctx.unchunk_enabled - ADV_TRACE_Ctx.TraceRdPtr);
 80308a0:	1b9b      	subs	r3, r3, r6
 80308a2:	b29b      	uxth	r3, r3
 80308a4:	82a3      	strh	r3, [r4, #20]
        ADV_TRACE_Ctx.unchunk_enabled = 0;
 80308a6:	8020      	strh	r0, [r4, #0]
        if(0u == ADV_TRACE_Ctx.TraceSentSize)
 80308a8:	b95b      	cbnz	r3, 80308c2 <TRACE_Send+0x4a>
          ADV_TRACE_Ctx.unchunk_status = TRACE_UNCHUNK_NONE;
 80308aa:	70a3      	strb	r3, [r4, #2]
          ADV_TRACE_Ctx.TraceRdPtr = 0;
 80308ac:	8223      	strh	r3, [r4, #16]
        if(ADV_TRACE_Ctx.TraceWrPtr > ADV_TRACE_Ctx.TraceRdPtr)
 80308ae:	8a23      	ldrh	r3, [r4, #16]
 80308b0:	429a      	cmp	r2, r3
          ADV_TRACE_Ctx.TraceSentSize = ADV_TRACE_Ctx.TraceWrPtr - ADV_TRACE_Ctx.TraceRdPtr;
 80308b2:	bf8c      	ite	hi
 80308b4:	1ad3      	subhi	r3, r2, r3
          ADV_TRACE_Ctx.TraceSentSize = UTIL_ADV_TRACE_FIFO_SIZE - ADV_TRACE_Ctx.TraceRdPtr;
 80308b6:	f5c3 5380 	rsbls	r3, r3, #4096	; 0x1000
 80308ba:	82a3      	strh	r3, [r4, #20]
 80308bc:	e001      	b.n	80308c2 <TRACE_Send+0x4a>
      if(TRACE_UNCHUNK_NONE == ADV_TRACE_Ctx.unchunk_status)
 80308be:	2900      	cmp	r1, #0
 80308c0:	d0f5      	beq.n	80308ae <TRACE_Send+0x36>
      ptr = &ADV_TRACE_Buffer[ADV_TRACE_Ctx.TraceRdPtr];
 80308c2:	8a20      	ldrh	r0, [r4, #16]
 80308c4:	4b0c      	ldr	r3, [pc, #48]	; (80308f8 <TRACE_Send+0x80>)
 80308c6:	4418      	add	r0, r3
 80308c8:	9001      	str	r0, [sp, #4]
  __ASM volatile ("MSR primask, %0" : : "r" (priMask) : "memory");
 80308ca:	f385 8810 	msr	PRIMASK, r5
      UTIL_ADV_TRACE_PreSendHook();
 80308ce:	f7ff ffd1 	bl	8030874 <UTIL_ADV_TRACE_PreSendHook>
      ret = UTIL_TraceDriver.Send(ptr, ADV_TRACE_Ctx.TraceSentSize);
 80308d2:	4b0a      	ldr	r3, [pc, #40]	; (80308fc <TRACE_Send+0x84>)
 80308d4:	9801      	ldr	r0, [sp, #4]
 80308d6:	68db      	ldr	r3, [r3, #12]
 80308d8:	8aa1      	ldrh	r1, [r4, #20]
 80308da:	9301      	str	r3, [sp, #4]
}
 80308dc:	b002      	add	sp, #8
 80308de:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
      ret = UTIL_TraceDriver.Send(ptr, ADV_TRACE_Ctx.TraceSentSize);
 80308e2:	4718      	bx	r3
      TRACE_UnLock();
 80308e4:	f7ff ff92 	bl	803080c <TRACE_UnLock>
 80308e8:	f385 8810 	msr	PRIMASK, r5
}
 80308ec:	2000      	movs	r0, #0
 80308ee:	b002      	add	sp, #8
 80308f0:	bd70      	pop	{r4, r5, r6, pc}
 80308f2:	bf00      	nop
 80308f4:	2000a174 	.word	0x2000a174
 80308f8:	20009174 	.word	0x20009174
 80308fc:	080338e8 	.word	0x080338e8

08030900 <UTIL_ADV_TRACE_COND_FSend>:
{
 8030900:	b408      	push	{r3}
  uint16_t timestamp_size = 0u;
 8030902:	2300      	movs	r3, #0
{
 8030904:	b5f0      	push	{r4, r5, r6, r7, lr}
 8030906:	b086      	sub	sp, #24
  uint16_t timestamp_size = 0u;
 8030908:	f8ad 3000 	strh.w	r3, [sp]
  if(!(ADV_TRACE_Ctx.CurrentVerboseLevel >= VerboseLevel))
 803090c:	4b2c      	ldr	r3, [pc, #176]	; (80309c0 <UTIL_ADV_TRACE_COND_FSend+0xc0>)
{
 803090e:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
  if(!(ADV_TRACE_Ctx.CurrentVerboseLevel >= VerboseLevel))
 8030910:	7a1d      	ldrb	r5, [r3, #8]
 8030912:	4285      	cmp	r5, r0
 8030914:	d34d      	bcc.n	80309b2 <UTIL_ADV_TRACE_COND_FSend+0xb2>
  if((Region & ADV_TRACE_Ctx.RegionMask) != Region)
 8030916:	68d8      	ldr	r0, [r3, #12]
 8030918:	4381      	bics	r1, r0
 803091a:	d14d      	bne.n	80309b8 <UTIL_ADV_TRACE_COND_FSend+0xb8>
  if((ADV_TRACE_Ctx.timestamp_func != NULL) && (TimeStampState != 0u))
 803091c:	685b      	ldr	r3, [r3, #4]
 803091e:	b11b      	cbz	r3, 8030928 <UTIL_ADV_TRACE_COND_FSend+0x28>
 8030920:	b112      	cbz	r2, 8030928 <UTIL_ADV_TRACE_COND_FSend+0x28>
    ADV_TRACE_Ctx.timestamp_func(buf,&timestamp_size);
 8030922:	4669      	mov	r1, sp
 8030924:	a802      	add	r0, sp, #8
 8030926:	4798      	blx	r3
  va_start( vaArgs, strFormat);
 8030928:	ab0c      	add	r3, sp, #48	; 0x30
  buff_size =(uint16_t)UTIL_ADV_TRACE_VSNPRINTF((char *)sztmp,UTIL_ADV_TRACE_TMP_BUF_SIZE, strFormat, vaArgs);
 803092a:	4622      	mov	r2, r4
 803092c:	f44f 7180 	mov.w	r1, #256	; 0x100
 8030930:	4824      	ldr	r0, [pc, #144]	; (80309c4 <UTIL_ADV_TRACE_COND_FSend+0xc4>)
  va_start( vaArgs, strFormat);
 8030932:	9301      	str	r3, [sp, #4]
  buff_size =(uint16_t)UTIL_ADV_TRACE_VSNPRINTF((char *)sztmp,UTIL_ADV_TRACE_TMP_BUF_SIZE, strFormat, vaArgs);
 8030934:	f000 fb6e 	bl	8031014 <vsniprintf>
  TRACE_Lock();
 8030938:	f7ff ff5c 	bl	80307f4 <TRACE_Lock>
  if (TRACE_AllocateBufer((buff_size+timestamp_size),&writepos) != -1)
 803093c:	f8bd 3000 	ldrh.w	r3, [sp]
 8030940:	f10d 0102 	add.w	r1, sp, #2
 8030944:	4418      	add	r0, r3
 8030946:	b280      	uxth	r0, r0
 8030948:	f7ff ff24 	bl	8030794 <TRACE_AllocateBufer>
 803094c:	3001      	adds	r0, #1
 803094e:	d02b      	beq.n	80309a8 <UTIL_ADV_TRACE_COND_FSend+0xa8>
    for (idx = 0u; idx < timestamp_size; idx++)
 8030950:	2200      	movs	r2, #0
 8030952:	4616      	mov	r6, r2
 8030954:	f8bd 3000 	ldrh.w	r3, [sp]
 8030958:	f8bd 7002 	ldrh.w	r7, [sp, #2]
 803095c:	481a      	ldr	r0, [pc, #104]	; (80309c8 <UTIL_ADV_TRACE_COND_FSend+0xc8>)
 803095e:	f10d 0c08 	add.w	ip, sp, #8
 8030962:	b291      	uxth	r1, r2
 8030964:	fa17 f582 	uxtah	r5, r7, r2
 8030968:	428b      	cmp	r3, r1
 803096a:	b2ad      	uxth	r5, r5
 803096c:	d816      	bhi.n	803099c <UTIL_ADV_TRACE_COND_FSend+0x9c>
 803096e:	443b      	add	r3, r7
 8030970:	b29b      	uxth	r3, r3
 8030972:	b10e      	cbz	r6, 8030978 <UTIL_ADV_TRACE_COND_FSend+0x78>
 8030974:	f8ad 3002 	strh.w	r3, [sp, #2]
    (void)UTIL_ADV_TRACE_VSNPRINTF((char *)(&ADV_TRACE_Buffer[writepos]), UTIL_ADV_TRACE_TMP_BUF_SIZE, strFormat, vaArgs);
 8030978:	f8bd 5002 	ldrh.w	r5, [sp, #2]
 803097c:	4622      	mov	r2, r4
 803097e:	f44f 7180 	mov.w	r1, #256	; 0x100
 8030982:	9b01      	ldr	r3, [sp, #4]
 8030984:	4428      	add	r0, r5
 8030986:	f000 fb45 	bl	8031014 <vsniprintf>
    TRACE_UnLock();
 803098a:	f7ff ff3f 	bl	803080c <TRACE_UnLock>
    return TRACE_Send();
 803098e:	f7ff ff73 	bl	8030878 <TRACE_Send>
}
 8030992:	b006      	add	sp, #24
 8030994:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
 8030998:	b001      	add	sp, #4
 803099a:	4770      	bx	lr
      ADV_TRACE_Buffer[writepos] = buf[idx];
 803099c:	f81c 1b01 	ldrb.w	r1, [ip], #1
 80309a0:	2601      	movs	r6, #1
 80309a2:	5541      	strb	r1, [r0, r5]
    for (idx = 0u; idx < timestamp_size; idx++)
 80309a4:	3201      	adds	r2, #1
 80309a6:	e7dc      	b.n	8030962 <UTIL_ADV_TRACE_COND_FSend+0x62>
  TRACE_UnLock();
 80309a8:	f7ff ff30 	bl	803080c <TRACE_UnLock>
  return UTIL_ADV_TRACE_MEM_FULL;
 80309ac:	f06f 0002 	mvn.w	r0, #2
 80309b0:	e7ef      	b.n	8030992 <UTIL_ADV_TRACE_COND_FSend+0x92>
    return UTIL_ADV_TRACE_GIVEUP;
 80309b2:	f06f 0004 	mvn.w	r0, #4
 80309b6:	e7ec      	b.n	8030992 <UTIL_ADV_TRACE_COND_FSend+0x92>
    return UTIL_ADV_TRACE_REGIONMASKED;
 80309b8:	f06f 0005 	mvn.w	r0, #5
 80309bc:	e7e9      	b.n	8030992 <UTIL_ADV_TRACE_COND_FSend+0x92>
 80309be:	bf00      	nop
 80309c0:	2000a174 	.word	0x2000a174
 80309c4:	2000a18c 	.word	0x2000a18c
 80309c8:	20009174 	.word	0x20009174

080309cc <UTIL_ADV_TRACE_PostSendHook>:
 80309cc:	4770      	bx	lr
	...

080309d0 <TRACE_TxCpltCallback>:
{
 80309d0:	b537      	push	{r0, r1, r2, r4, r5, lr}
  __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
 80309d2:	f3ef 8410 	mrs	r4, PRIMASK
  __ASM volatile ("cpsid i" : : : "memory");
 80309d6:	b672      	cpsid	i
  if(TRACE_UNCHUNK_TRANSFER == ADV_TRACE_Ctx.unchunk_status)
 80309d8:	4b20      	ldr	r3, [pc, #128]	; (8030a5c <TRACE_TxCpltCallback+0x8c>)
 80309da:	789a      	ldrb	r2, [r3, #2]
 80309dc:	2a02      	cmp	r2, #2
    ADV_TRACE_Ctx.unchunk_status = TRACE_UNCHUNK_NONE;
 80309de:	bf0d      	iteet	eq
 80309e0:	2200      	moveq	r2, #0
    ADV_TRACE_Ctx.TraceRdPtr = (ADV_TRACE_Ctx.TraceRdPtr + ADV_TRACE_Ctx.TraceSentSize) % UTIL_ADV_TRACE_FIFO_SIZE;
 80309e2:	8a1a      	ldrhne	r2, [r3, #16]
 80309e4:	8a99      	ldrhne	r1, [r3, #20]
    ADV_TRACE_Ctx.unchunk_status = TRACE_UNCHUNK_NONE;
 80309e6:	709a      	strbeq	r2, [r3, #2]
    ADV_TRACE_Ctx.TraceRdPtr = (ADV_TRACE_Ctx.TraceRdPtr + ADV_TRACE_Ctx.TraceSentSize) % UTIL_ADV_TRACE_FIFO_SIZE;
 80309e8:	bf1c      	itt	ne
 80309ea:	1852      	addne	r2, r2, r1
 80309ec:	f3c2 020b 	ubfxne	r2, r2, #0, #12
 80309f0:	821a      	strh	r2, [r3, #16]
  if((ADV_TRACE_Ctx.TraceRdPtr != ADV_TRACE_Ctx.TraceWrPtr) && (1u == ADV_TRACE_Ctx.TraceLock))
 80309f2:	8a1d      	ldrh	r5, [r3, #16]
 80309f4:	8a59      	ldrh	r1, [r3, #18]
 80309f6:	428d      	cmp	r5, r1
 80309f8:	d027      	beq.n	8030a4a <TRACE_TxCpltCallback+0x7a>
 80309fa:	8ada      	ldrh	r2, [r3, #22]
 80309fc:	2a01      	cmp	r2, #1
 80309fe:	d124      	bne.n	8030a4a <TRACE_TxCpltCallback+0x7a>
    if(TRACE_UNCHUNK_DETECTED == ADV_TRACE_Ctx.unchunk_status)
 8030a00:	7898      	ldrb	r0, [r3, #2]
 8030a02:	2801      	cmp	r0, #1
 8030a04:	d112      	bne.n	8030a2c <TRACE_TxCpltCallback+0x5c>
      ADV_TRACE_Ctx.unchunk_status = TRACE_UNCHUNK_TRANSFER;
 8030a06:	2002      	movs	r0, #2
 8030a08:	7098      	strb	r0, [r3, #2]
      ADV_TRACE_Ctx.unchunk_enabled = 0;
 8030a0a:	2000      	movs	r0, #0
      ADV_TRACE_Ctx.TraceSentSize = ADV_TRACE_Ctx.unchunk_enabled - ADV_TRACE_Ctx.TraceRdPtr;
 8030a0c:	881a      	ldrh	r2, [r3, #0]
      ADV_TRACE_Ctx.unchunk_enabled = 0;
 8030a0e:	8018      	strh	r0, [r3, #0]
      ADV_TRACE_Ctx.TraceSentSize = ADV_TRACE_Ctx.unchunk_enabled - ADV_TRACE_Ctx.TraceRdPtr;
 8030a10:	1b52      	subs	r2, r2, r5
 8030a12:	b292      	uxth	r2, r2
 8030a14:	829a      	strh	r2, [r3, #20]
      if(0u == ADV_TRACE_Ctx.TraceSentSize)
 8030a16:	b95a      	cbnz	r2, 8030a30 <TRACE_TxCpltCallback+0x60>
        ADV_TRACE_Ctx.unchunk_status = TRACE_UNCHUNK_NONE;
 8030a18:	709a      	strb	r2, [r3, #2]
        ADV_TRACE_Ctx.TraceRdPtr = 0;
 8030a1a:	821a      	strh	r2, [r3, #16]
      if(ADV_TRACE_Ctx.TraceWrPtr > ADV_TRACE_Ctx.TraceRdPtr)
 8030a1c:	8a1a      	ldrh	r2, [r3, #16]
 8030a1e:	4291      	cmp	r1, r2
        ADV_TRACE_Ctx.TraceSentSize = ADV_TRACE_Ctx.TraceWrPtr - ADV_TRACE_Ctx.TraceRdPtr;
 8030a20:	bf8c      	ite	hi
 8030a22:	1a8a      	subhi	r2, r1, r2
        ADV_TRACE_Ctx.TraceSentSize = UTIL_ADV_TRACE_FIFO_SIZE - ADV_TRACE_Ctx.TraceRdPtr;
 8030a24:	f5c2 5280 	rsbls	r2, r2, #4096	; 0x1000
 8030a28:	829a      	strh	r2, [r3, #20]
 8030a2a:	e001      	b.n	8030a30 <TRACE_TxCpltCallback+0x60>
    if(TRACE_UNCHUNK_NONE == ADV_TRACE_Ctx.unchunk_status)
 8030a2c:	2800      	cmp	r0, #0
 8030a2e:	d0f5      	beq.n	8030a1c <TRACE_TxCpltCallback+0x4c>
    ptr = &ADV_TRACE_Buffer[ADV_TRACE_Ctx.TraceRdPtr];
 8030a30:	8a18      	ldrh	r0, [r3, #16]
 8030a32:	4a0b      	ldr	r2, [pc, #44]	; (8030a60 <TRACE_TxCpltCallback+0x90>)
 8030a34:	4410      	add	r0, r2
  __ASM volatile ("MSR primask, %0" : : "r" (priMask) : "memory");
 8030a36:	f384 8810 	msr	PRIMASK, r4
    UTIL_TraceDriver.Send(ptr, ADV_TRACE_Ctx.TraceSentSize);
 8030a3a:	4a0a      	ldr	r2, [pc, #40]	; (8030a64 <TRACE_TxCpltCallback+0x94>)
 8030a3c:	8a99      	ldrh	r1, [r3, #20]
 8030a3e:	68d3      	ldr	r3, [r2, #12]
 8030a40:	9301      	str	r3, [sp, #4]
}
 8030a42:	b003      	add	sp, #12
 8030a44:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
    UTIL_TraceDriver.Send(ptr, ADV_TRACE_Ctx.TraceSentSize);
 8030a48:	4718      	bx	r3
 8030a4a:	f384 8810 	msr	PRIMASK, r4
    UTIL_ADV_TRACE_PostSendHook();
 8030a4e:	f7ff ffbd 	bl	80309cc <UTIL_ADV_TRACE_PostSendHook>
}
 8030a52:	b003      	add	sp, #12
 8030a54:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
    TRACE_UnLock();
 8030a58:	f7ff bed8 	b.w	803080c <TRACE_UnLock>
 8030a5c:	2000a174 	.word	0x2000a174
 8030a60:	20009174 	.word	0x20009174
 8030a64:	080338e8 	.word	0x080338e8

08030a68 <UTIL_LPM_Init>:
/** @addtogroup TINY_LPM_Exported_function
  * @{
  */
void UTIL_LPM_Init( void )
{
  StopModeDisable = UTIL_LPM_NO_BIT_SET;
 8030a68:	2300      	movs	r3, #0
 8030a6a:	4a02      	ldr	r2, [pc, #8]	; (8030a74 <UTIL_LPM_Init+0xc>)
 8030a6c:	6013      	str	r3, [r2, #0]
  OffModeDisable = UTIL_LPM_NO_BIT_SET;
 8030a6e:	4a02      	ldr	r2, [pc, #8]	; (8030a78 <UTIL_LPM_Init+0x10>)
 8030a70:	6013      	str	r3, [r2, #0]
  UTIL_LPM_INIT_CRITICAL_SECTION( );
}
 8030a72:	4770      	bx	lr
 8030a74:	2000a290 	.word	0x2000a290
 8030a78:	2000a28c 	.word	0x2000a28c

08030a7c <UTIL_LPM_SetOffMode>:
  
  UTIL_LPM_EXIT_CRITICAL_SECTION( );
}

void UTIL_LPM_SetOffMode( UTIL_LPM_bm_t lpm_id_bm, UTIL_LPM_State_t state )
{
 8030a7c:	b510      	push	{r4, lr}
  __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
 8030a7e:	f3ef 8410 	mrs	r4, PRIMASK
  __ASM volatile ("cpsid i" : : : "memory");
 8030a82:	b672      	cpsid	i
  UTIL_LPM_ENTER_CRITICAL_SECTION( );
  
  switch(state)
 8030a84:	b141      	cbz	r1, 8030a98 <UTIL_LPM_SetOffMode+0x1c>
 8030a86:	2901      	cmp	r1, #1
 8030a88:	d103      	bne.n	8030a92 <UTIL_LPM_SetOffMode+0x16>
  {
  case UTIL_LPM_DISABLE:
    {
      OffModeDisable |= lpm_id_bm;
 8030a8a:	4a06      	ldr	r2, [pc, #24]	; (8030aa4 <UTIL_LPM_SetOffMode+0x28>)
 8030a8c:	6813      	ldr	r3, [r2, #0]
 8030a8e:	4318      	orrs	r0, r3
      break;
    }
  case UTIL_LPM_ENABLE:
    {
      OffModeDisable &= ( ~lpm_id_bm );
 8030a90:	6010      	str	r0, [r2, #0]
  __ASM volatile ("MSR primask, %0" : : "r" (priMask) : "memory");
 8030a92:	f384 8810 	msr	PRIMASK, r4
      break;
    }
  }
  
  UTIL_LPM_EXIT_CRITICAL_SECTION( );
}
 8030a96:	bd10      	pop	{r4, pc}
      OffModeDisable &= ( ~lpm_id_bm );
 8030a98:	4a02      	ldr	r2, [pc, #8]	; (8030aa4 <UTIL_LPM_SetOffMode+0x28>)
 8030a9a:	6813      	ldr	r3, [r2, #0]
 8030a9c:	ea23 0000 	bic.w	r0, r3, r0
 8030aa0:	e7f6      	b.n	8030a90 <UTIL_LPM_SetOffMode+0x14>
 8030aa2:	bf00      	nop
 8030aa4:	2000a28c 	.word	0x2000a28c

08030aa8 <UTIL_MEM_set_8>:
void UTIL_MEM_set_8( void *dst, uint8_t value, uint16_t size )
{
  uint8_t* dst8= (uint8_t *) dst;
  while( size-- )
  {
    *dst8++ = value;
 8030aa8:	f000 ba81 	b.w	8030fae <memset>

08030aac <UTIL_SEQ_SetTask>:

  return;
}

void UTIL_SEQ_SetTask( UTIL_SEQ_bm_t TaskId_bm , uint32_t Task_Prio )
{
 8030aac:	b510      	push	{r4, lr}
  __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
 8030aae:	f3ef 8410 	mrs	r4, PRIMASK
  __ASM volatile ("cpsid i" : : : "memory");
 8030ab2:	b672      	cpsid	i
  UTIL_SEQ_ENTER_CRITICAL_SECTION( );

  TaskSet |= TaskId_bm;
 8030ab4:	4a06      	ldr	r2, [pc, #24]	; (8030ad0 <UTIL_SEQ_SetTask+0x24>)
 8030ab6:	6813      	ldr	r3, [r2, #0]
 8030ab8:	4303      	orrs	r3, r0
 8030aba:	6013      	str	r3, [r2, #0]
  TaskPrio[Task_Prio].priority |= TaskId_bm;
 8030abc:	4a05      	ldr	r2, [pc, #20]	; (8030ad4 <UTIL_SEQ_SetTask+0x28>)
 8030abe:	f852 3031 	ldr.w	r3, [r2, r1, lsl #3]
 8030ac2:	4318      	orrs	r0, r3
 8030ac4:	f842 0031 	str.w	r0, [r2, r1, lsl #3]
  __ASM volatile ("MSR primask, %0" : : "r" (priMask) : "memory");
 8030ac8:	f384 8810 	msr	PRIMASK, r4

  UTIL_SEQ_EXIT_CRITICAL_SECTION( );

  return;
}
 8030acc:	bd10      	pop	{r4, pc}
 8030ace:	bf00      	nop
 8030ad0:	2000a330 	.word	0x2000a330
 8030ad4:	2000a320 	.word	0x2000a320

08030ad8 <UTIL_SEQ_SetEvt>:
  __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
 8030ad8:	f3ef 8110 	mrs	r1, PRIMASK
  __ASM volatile ("cpsid i" : : : "memory");
 8030adc:	b672      	cpsid	i

void UTIL_SEQ_SetEvt( UTIL_SEQ_bm_t EvtId_bm )
{
  UTIL_SEQ_ENTER_CRITICAL_SECTION( );

  EvtSet |= EvtId_bm;
 8030ade:	4a03      	ldr	r2, [pc, #12]	; (8030aec <UTIL_SEQ_SetEvt+0x14>)
 8030ae0:	6813      	ldr	r3, [r2, #0]
 8030ae2:	4318      	orrs	r0, r3
 8030ae4:	6010      	str	r0, [r2, #0]
  __ASM volatile ("MSR primask, %0" : : "r" (priMask) : "memory");
 8030ae6:	f381 8810 	msr	PRIMASK, r1

  UTIL_SEQ_EXIT_CRITICAL_SECTION( );

  return;
}
 8030aea:	4770      	bx	lr
 8030aec:	2000a298 	.word	0x2000a298

08030af0 <SEQ_BitPosition>:
uint8_t SEQ_BitPosition(uint32_t Value)
{
uint8_t n = 0U;
uint32_t lvalue = Value;

  if ((lvalue & 0xFFFF0000U) == 0U)  { n  = 16U; lvalue <<= 16U;  }
 8030af0:	0c03      	lsrs	r3, r0, #16
 8030af2:	041b      	lsls	r3, r3, #16
 8030af4:	b9bb      	cbnz	r3, 8030b26 <SEQ_BitPosition+0x36>
 8030af6:	2310      	movs	r3, #16
 8030af8:	0400      	lsls	r0, r0, #16
  if ((lvalue & 0xFF000000U) == 0U)  { n +=  8U; lvalue <<=  8U;  }
 8030afa:	f010 4f7f 	tst.w	r0, #4278190080	; 0xff000000
 8030afe:	bf02      	ittt	eq
 8030b00:	3308      	addeq	r3, #8
 8030b02:	0200      	lsleq	r0, r0, #8
 8030b04:	b2db      	uxtbeq	r3, r3
  if ((lvalue & 0xF0000000U) == 0U)  { n +=  4U; lvalue <<=  4U;  }
 8030b06:	f010 4f70 	tst.w	r0, #4026531840	; 0xf0000000

  n += SEQ_clz_table_4bit[lvalue >> (32-4)];

  return (uint8_t)(31U-n);
 8030b0a:	4a08      	ldr	r2, [pc, #32]	; (8030b2c <SEQ_BitPosition+0x3c>)
  if ((lvalue & 0xF0000000U) == 0U)  { n +=  4U; lvalue <<=  4U;  }
 8030b0c:	bf04      	itt	eq
 8030b0e:	0100      	lsleq	r0, r0, #4
 8030b10:	3304      	addeq	r3, #4
  n += SEQ_clz_table_4bit[lvalue >> (32-4)];
 8030b12:	ea4f 7010 	mov.w	r0, r0, lsr #28
  return (uint8_t)(31U-n);
 8030b16:	5c10      	ldrb	r0, [r2, r0]
  if ((lvalue & 0xF0000000U) == 0U)  { n +=  4U; lvalue <<=  4U;  }
 8030b18:	bf08      	it	eq
 8030b1a:	b2db      	uxtbeq	r3, r3
  return (uint8_t)(31U-n);
 8030b1c:	f1c3 031f 	rsb	r3, r3, #31
 8030b20:	1a18      	subs	r0, r3, r0
}
 8030b22:	b2c0      	uxtb	r0, r0
 8030b24:	4770      	bx	lr
uint8_t n = 0U;
 8030b26:	2300      	movs	r3, #0
 8030b28:	e7e7      	b.n	8030afa <SEQ_BitPosition+0xa>
 8030b2a:	bf00      	nop
 8030b2c:	08034306 	.word	0x08034306

08030b30 <UTIL_SEQ_Run>:
{
 8030b30:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
  super_mask_backup = SuperMask;
 8030b34:	4d40      	ldr	r5, [pc, #256]	; (8030c38 <UTIL_SEQ_Run+0x108>)
  local_taskset = TaskSet;
 8030b36:	4e41      	ldr	r6, [pc, #260]	; (8030c3c <UTIL_SEQ_Run+0x10c>)
  super_mask_backup = SuperMask;
 8030b38:	f8d5 8000 	ldr.w	r8, [r5]
  local_evtset = EvtSet;
 8030b3c:	f8df b10c 	ldr.w	fp, [pc, #268]	; 8030c4c <UTIL_SEQ_Run+0x11c>
  local_taskmask = TaskMask;
 8030b40:	f8df a10c 	ldr.w	sl, [pc, #268]	; 8030c50 <UTIL_SEQ_Run+0x120>
  local_evtwaited =  EvtWaited;
 8030b44:	f8df 910c 	ldr.w	r9, [pc, #268]	; 8030c54 <UTIL_SEQ_Run+0x124>
  SuperMask &= Mask_bm;
 8030b48:	ea08 0000 	and.w	r0, r8, r0
  local_taskset = TaskSet;
 8030b4c:	f8d6 e000 	ldr.w	lr, [r6]
  SuperMask &= Mask_bm;
 8030b50:	6028      	str	r0, [r5, #0]
  local_evtset = EvtSet;
 8030b52:	f8db 1000 	ldr.w	r1, [fp]
  local_taskmask = TaskMask;
 8030b56:	4f3a      	ldr	r7, [pc, #232]	; (8030c40 <UTIL_SEQ_Run+0x110>)
 8030b58:	f8da 0000 	ldr.w	r0, [sl]
    while((TaskPrio[counter].priority & local_taskmask & SuperMask)== 0U)
 8030b5c:	4c39      	ldr	r4, [pc, #228]	; (8030c44 <UTIL_SEQ_Run+0x114>)
  local_evtwaited =  EvtWaited;
 8030b5e:	f8d9 3000 	ldr.w	r3, [r9]
  while(((local_taskset & local_taskmask & SuperMask) != 0U) && ((local_evtset & local_evtwaited)==0U))
 8030b62:	682a      	ldr	r2, [r5, #0]
 8030b64:	ea02 0c00 	and.w	ip, r2, r0
 8030b68:	ea1c 0f0e 	tst.w	ip, lr
 8030b6c:	d044      	beq.n	8030bf8 <UTIL_SEQ_Run+0xc8>
 8030b6e:	400b      	ands	r3, r1
 8030b70:	d142      	bne.n	8030bf8 <UTIL_SEQ_Run+0xc8>
    while((TaskPrio[counter].priority & local_taskmask & SuperMask)== 0U)
 8030b72:	6821      	ldr	r1, [r4, #0]
 8030b74:	400a      	ands	r2, r1
 8030b76:	4202      	tst	r2, r0
 8030b78:	d101      	bne.n	8030b7e <UTIL_SEQ_Run+0x4e>
 8030b7a:	68a3      	ldr	r3, [r4, #8]
      counter++;
 8030b7c:	2301      	movs	r3, #1
    current_task_set = TaskPrio[counter].priority & local_taskmask & SuperMask;
 8030b7e:	f854 2033 	ldr.w	r2, [r4, r3, lsl #3]
    if ((TaskPrio[counter].round_robin & current_task_set) == 0U)
 8030b82:	00d9      	lsls	r1, r3, #3
 8030b84:	eb04 03c3 	add.w	r3, r4, r3, lsl #3
 8030b88:	6858      	ldr	r0, [r3, #4]
    current_task_set = TaskPrio[counter].priority & local_taskmask & SuperMask;
 8030b8a:	ea0c 0202 	and.w	r2, ip, r2
    if ((TaskPrio[counter].round_robin & current_task_set) == 0U)
 8030b8e:	4210      	tst	r0, r2
      TaskPrio[counter].round_robin = UTIL_SEQ_ALL_BIT_SET;
 8030b90:	bf08      	it	eq
 8030b92:	f04f 30ff 	moveq.w	r0, #4294967295	; 0xffffffff
    CurrentTaskIdx = (SEQ_BitPosition(current_task_set & TaskPrio[counter].round_robin));
 8030b96:	4421      	add	r1, r4
      TaskPrio[counter].round_robin = UTIL_SEQ_ALL_BIT_SET;
 8030b98:	bf08      	it	eq
 8030b9a:	6058      	streq	r0, [r3, #4]
    CurrentTaskIdx = (SEQ_BitPosition(current_task_set & TaskPrio[counter].round_robin));
 8030b9c:	6848      	ldr	r0, [r1, #4]
 8030b9e:	4010      	ands	r0, r2
 8030ba0:	f7ff ffa6 	bl	8030af0 <SEQ_BitPosition>
    TaskPrio[counter].round_robin &= ~(1U << CurrentTaskIdx);
 8030ba4:	2201      	movs	r2, #1
 8030ba6:	684b      	ldr	r3, [r1, #4]
    CurrentTaskIdx = (SEQ_BitPosition(current_task_set & TaskPrio[counter].round_robin));
 8030ba8:	6038      	str	r0, [r7, #0]
    TaskPrio[counter].round_robin &= ~(1U << CurrentTaskIdx);
 8030baa:	fa02 f000 	lsl.w	r0, r2, r0
 8030bae:	ea23 0000 	bic.w	r0, r3, r0
 8030bb2:	6048      	str	r0, [r1, #4]
  __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
 8030bb4:	f3ef 8110 	mrs	r1, PRIMASK
  __ASM volatile ("cpsid i" : : : "memory");
 8030bb8:	b672      	cpsid	i
    TaskSet &= ~(1U << CurrentTaskIdx);
 8030bba:	683b      	ldr	r3, [r7, #0]
 8030bbc:	fa02 f303 	lsl.w	r3, r2, r3
 8030bc0:	6832      	ldr	r2, [r6, #0]
 8030bc2:	ea22 0203 	bic.w	r2, r2, r3
 8030bc6:	6032      	str	r2, [r6, #0]
      TaskPrio[counter - 1U].priority &= ~(1U << CurrentTaskIdx);
 8030bc8:	68a2      	ldr	r2, [r4, #8]
 8030bca:	ea22 0203 	bic.w	r2, r2, r3
 8030bce:	60a2      	str	r2, [r4, #8]
 8030bd0:	6822      	ldr	r2, [r4, #0]
 8030bd2:	ea22 0303 	bic.w	r3, r2, r3
 8030bd6:	6023      	str	r3, [r4, #0]
  __ASM volatile ("MSR primask, %0" : : "r" (priMask) : "memory");
 8030bd8:	f381 8810 	msr	PRIMASK, r1
    TaskCb[CurrentTaskIdx]( );
 8030bdc:	4a1a      	ldr	r2, [pc, #104]	; (8030c48 <UTIL_SEQ_Run+0x118>)
 8030bde:	683b      	ldr	r3, [r7, #0]
 8030be0:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 8030be4:	4798      	blx	r3
    local_taskset = TaskSet;
 8030be6:	f8d6 e000 	ldr.w	lr, [r6]
    local_evtset = EvtSet;
 8030bea:	f8db 1000 	ldr.w	r1, [fp]
    local_taskmask = TaskMask;
 8030bee:	f8da 0000 	ldr.w	r0, [sl]
    local_evtwaited = EvtWaited;
 8030bf2:	f8d9 3000 	ldr.w	r3, [r9]
 8030bf6:	e7b4      	b.n	8030b62 <UTIL_SEQ_Run+0x32>
  CurrentTaskIdx = UTIL_SEQ_NOTASKRUNNING;
 8030bf8:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
 8030bfc:	603b      	str	r3, [r7, #0]
  UTIL_SEQ_PreIdle( );
 8030bfe:	f7f4 fff4 	bl	8025bea <UTIL_SEQ_PreIdle>
  __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
 8030c02:	f3ef 8410 	mrs	r4, PRIMASK
  __ASM volatile ("cpsid i" : : : "memory");
 8030c06:	b672      	cpsid	i
  local_taskset = TaskSet;
 8030c08:	6833      	ldr	r3, [r6, #0]
  local_evtset = EvtSet;
 8030c0a:	f8db 2000 	ldr.w	r2, [fp]
  local_taskmask = TaskMask;
 8030c0e:	f8da 1000 	ldr.w	r1, [sl]
  if ((local_taskset & local_taskmask & SuperMask) == 0U)
 8030c12:	400b      	ands	r3, r1
 8030c14:	6829      	ldr	r1, [r5, #0]
 8030c16:	420b      	tst	r3, r1
 8030c18:	d105      	bne.n	8030c26 <UTIL_SEQ_Run+0xf6>
    if ((local_evtset & EvtWaited)== 0U)
 8030c1a:	f8d9 3000 	ldr.w	r3, [r9]
 8030c1e:	4213      	tst	r3, r2
 8030c20:	d101      	bne.n	8030c26 <UTIL_SEQ_Run+0xf6>
      UTIL_SEQ_Idle( );
 8030c22:	f7f4 ffe1 	bl	8025be8 <UTIL_SEQ_Idle>
  __ASM volatile ("MSR primask, %0" : : "r" (priMask) : "memory");
 8030c26:	f384 8810 	msr	PRIMASK, r4
  UTIL_SEQ_PostIdle( );
 8030c2a:	f7f4 ffdf 	bl	8025bec <UTIL_SEQ_PostIdle>
  SuperMask = super_mask_backup;
 8030c2e:	f8c5 8000 	str.w	r8, [r5]
}
 8030c32:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8030c36:	bf00      	nop
 8030c38:	200004dc 	.word	0x200004dc
 8030c3c:	2000a330 	.word	0x2000a330
 8030c40:	2000a294 	.word	0x2000a294
 8030c44:	2000a320 	.word	0x2000a320
 8030c48:	2000a2a0 	.word	0x2000a2a0
 8030c4c:	2000a298 	.word	0x2000a298
 8030c50:	200004e0 	.word	0x200004e0
 8030c54:	2000a29c 	.word	0x2000a29c

08030c58 <UTIL_SEQ_RegTask>:
{
 8030c58:	4611      	mov	r1, r2
 8030c5a:	b510      	push	{r4, lr}
  __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
 8030c5c:	f3ef 8410 	mrs	r4, PRIMASK
  __ASM volatile ("cpsid i" : : : "memory");
 8030c60:	b672      	cpsid	i
  TaskCb[SEQ_BitPosition(TaskId_bm)] = Task;
 8030c62:	f7ff ff45 	bl	8030af0 <SEQ_BitPosition>
 8030c66:	4b03      	ldr	r3, [pc, #12]	; (8030c74 <UTIL_SEQ_RegTask+0x1c>)
 8030c68:	f843 1020 	str.w	r1, [r3, r0, lsl #2]
  __ASM volatile ("MSR primask, %0" : : "r" (priMask) : "memory");
 8030c6c:	f384 8810 	msr	PRIMASK, r4
}
 8030c70:	bd10      	pop	{r4, pc}
 8030c72:	bf00      	nop
 8030c74:	2000a2a0 	.word	0x2000a2a0

08030c78 <UTIL_TIMER_Init>:
  */

UTIL_TIMER_Status_t UTIL_TIMER_Init(void)
{
  UTIL_TIMER_INIT_CRITICAL_SECTION();
  TimerListHead = NULL;
 8030c78:	2200      	movs	r2, #0
 8030c7a:	4b02      	ldr	r3, [pc, #8]	; (8030c84 <UTIL_TIMER_Init+0xc>)
 8030c7c:	601a      	str	r2, [r3, #0]
  return UTIL_TimerDriver.InitTimer();
 8030c7e:	4b02      	ldr	r3, [pc, #8]	; (8030c88 <UTIL_TIMER_Init+0x10>)
 8030c80:	681b      	ldr	r3, [r3, #0]
 8030c82:	4718      	bx	r3
 8030c84:	2000a334 	.word	0x2000a334
 8030c88:	080338bc 	.word	0x080338bc

08030c8c <UTIL_TIMER_Create>:
{
  return UTIL_TimerDriver.DeInitTimer();
}

UTIL_TIMER_Status_t UTIL_TIMER_Create( UTIL_TIMER_Object_t *TimerObject, uint32_t PeriodValue, UTIL_TIMER_Mode_t Mode, void ( *Callback )( void *), void *Argument)
{
 8030c8c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8030c8e:	4604      	mov	r4, r0
 8030c90:	4617      	mov	r7, r2
 8030c92:	4608      	mov	r0, r1
 8030c94:	461e      	mov	r6, r3
  if((TimerObject != NULL) && (Callback != NULL))
 8030c96:	b17c      	cbz	r4, 8030cb8 <UTIL_TIMER_Create+0x2c>
 8030c98:	b173      	cbz	r3, 8030cb8 <UTIL_TIMER_Create+0x2c>
  {
    TimerObject->Timestamp = 0U;
 8030c9a:	2500      	movs	r5, #0
    TimerObject->ReloadValue = UTIL_TimerDriver.ms2Tick(PeriodValue);
 8030c9c:	4b07      	ldr	r3, [pc, #28]	; (8030cbc <UTIL_TIMER_Create+0x30>)
    TimerObject->Timestamp = 0U;
 8030c9e:	6025      	str	r5, [r4, #0]
    TimerObject->ReloadValue = UTIL_TimerDriver.ms2Tick(PeriodValue);
 8030ca0:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8030ca2:	4798      	blx	r3
 8030ca4:	6060      	str	r0, [r4, #4]
    TimerObject->IsReloadStopped = 0U;
    TimerObject->Callback = Callback;
    TimerObject->argument = Argument;
    TimerObject->Mode = Mode;
    TimerObject->Next = NULL;
    return UTIL_TIMER_OK;
 8030ca6:	4628      	mov	r0, r5
    TimerObject->argument = Argument;
 8030ca8:	9b06      	ldr	r3, [sp, #24]
    TimerObject->IsPending = 0U;
 8030caa:	8125      	strh	r5, [r4, #8]
    TimerObject->IsReloadStopped = 0U;
 8030cac:	72a5      	strb	r5, [r4, #10]
    TimerObject->Callback = Callback;
 8030cae:	60e6      	str	r6, [r4, #12]
    TimerObject->argument = Argument;
 8030cb0:	6123      	str	r3, [r4, #16]
    TimerObject->Mode = Mode;
 8030cb2:	72e7      	strb	r7, [r4, #11]
    TimerObject->Next = NULL;
 8030cb4:	6165      	str	r5, [r4, #20]
  }
  else
  {
    return UTIL_TIMER_INVALID_PARAM;
  }
}
 8030cb6:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    return UTIL_TIMER_INVALID_PARAM;
 8030cb8:	2001      	movs	r0, #1
 8030cba:	e7fc      	b.n	8030cb6 <UTIL_TIMER_Create+0x2a>
 8030cbc:	080338bc 	.word	0x080338bc

08030cc0 <TimerExists>:
 * @param TimerObject Structure containing the timer object parameters
 * @retval 1 (the object is already in the list) or 0
 */
bool TimerExists( UTIL_TIMER_Object_t *TimerObject )
{
  UTIL_TIMER_Object_t* cur = TimerListHead;
 8030cc0:	4b05      	ldr	r3, [pc, #20]	; (8030cd8 <TimerExists+0x18>)
 8030cc2:	681b      	ldr	r3, [r3, #0]

  while( cur != NULL )
 8030cc4:	b90b      	cbnz	r3, 8030cca <TimerExists+0xa>
    {
      return true;
    }
    cur = cur->Next;
  }
  return false;
 8030cc6:	4618      	mov	r0, r3
 8030cc8:	4770      	bx	lr
    if( cur == TimerObject )
 8030cca:	4283      	cmp	r3, r0
 8030ccc:	d001      	beq.n	8030cd2 <TimerExists+0x12>
    cur = cur->Next;
 8030cce:	695b      	ldr	r3, [r3, #20]
 8030cd0:	e7f8      	b.n	8030cc4 <TimerExists+0x4>
      return true;
 8030cd2:	2001      	movs	r0, #1
}
 8030cd4:	4770      	bx	lr
 8030cd6:	bf00      	nop
 8030cd8:	2000a334 	.word	0x2000a334

08030cdc <TimerSetTimeout>:
 * @brief Sets a timeout with the duration "timestamp"
 *
 * @param TimerObject Structure containing the timer object parameters
 */
void TimerSetTimeout( UTIL_TIMER_Object_t *TimerObject )
{
 8030cdc:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
  uint32_t minTicks= UTIL_TimerDriver.GetMinimumTimeout( );
 8030ce0:	4e0b      	ldr	r6, [pc, #44]	; (8030d10 <TimerSetTimeout+0x34>)
{
 8030ce2:	4604      	mov	r4, r0
  uint32_t minTicks= UTIL_TimerDriver.GetMinimumTimeout( );
 8030ce4:	6a33      	ldr	r3, [r6, #32]
 8030ce6:	4798      	blx	r3
  TimerObject->IsPending = 1;
 8030ce8:	2301      	movs	r3, #1

  /* In case deadline too soon */
  if(TimerObject->Timestamp  < (UTIL_TimerDriver.GetTimerElapsedTime(  ) + minTicks) )
 8030cea:	69b7      	ldr	r7, [r6, #24]
  TimerObject->IsPending = 1;
 8030cec:	7223      	strb	r3, [r4, #8]
  uint32_t minTicks= UTIL_TimerDriver.GetMinimumTimeout( );
 8030cee:	4605      	mov	r5, r0
  if(TimerObject->Timestamp  < (UTIL_TimerDriver.GetTimerElapsedTime(  ) + minTicks) )
 8030cf0:	f8d4 8000 	ldr.w	r8, [r4]
 8030cf4:	47b8      	blx	r7
 8030cf6:	4428      	add	r0, r5
 8030cf8:	4580      	cmp	r8, r0
 8030cfa:	d202      	bcs.n	8030d02 <TimerSetTimeout+0x26>
  {
	  TimerObject->Timestamp = UTIL_TimerDriver.GetTimerElapsedTime(  ) + minTicks;
 8030cfc:	47b8      	blx	r7
 8030cfe:	4428      	add	r0, r5
 8030d00:	6020      	str	r0, [r4, #0]
  }
  UTIL_TimerDriver.StartTimerEvt( TimerObject->Timestamp );
 8030d02:	68b3      	ldr	r3, [r6, #8]
 8030d04:	6820      	ldr	r0, [r4, #0]
 8030d06:	9301      	str	r3, [sp, #4]
}
 8030d08:	b002      	add	sp, #8
 8030d0a:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
  UTIL_TimerDriver.StartTimerEvt( TimerObject->Timestamp );
 8030d0e:	4718      	bx	r3
 8030d10:	080338bc 	.word	0x080338bc

08030d14 <UTIL_TIMER_Stop>:
{
 8030d14:	b570      	push	{r4, r5, r6, lr}
  if (NULL != TimerObject)
 8030d16:	b320      	cbz	r0, 8030d62 <UTIL_TIMER_Stop+0x4e>
  __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
 8030d18:	f3ef 8610 	mrs	r6, PRIMASK
  __ASM volatile ("cpsid i" : : : "memory");
 8030d1c:	b672      	cpsid	i
    TimerObject->IsReloadStopped = 1U;
 8030d1e:	2201      	movs	r2, #1
    UTIL_TIMER_Object_t* prev = TimerListHead;
 8030d20:	4d11      	ldr	r5, [pc, #68]	; (8030d68 <UTIL_TIMER_Stop+0x54>)
    TimerObject->IsReloadStopped = 1U;
 8030d22:	7282      	strb	r2, [r0, #10]
    UTIL_TIMER_Object_t* prev = TimerListHead;
 8030d24:	682b      	ldr	r3, [r5, #0]
    if(NULL != TimerListHead)
 8030d26:	b153      	cbz	r3, 8030d3e <UTIL_TIMER_Stop+0x2a>
      TimerObject->IsRunning = 0U;
 8030d28:	2200      	movs	r2, #0
      if( TimerListHead == TimerObject ) /* Stop the Head */
 8030d2a:	4298      	cmp	r0, r3
      TimerObject->IsRunning = 0U;
 8030d2c:	7242      	strb	r2, [r0, #9]
      if( TimerListHead == TimerObject ) /* Stop the Head */
 8030d2e:	d10f      	bne.n	8030d50 <UTIL_TIMER_Stop+0x3c>
          if( TimerListHead->Next != NULL )
 8030d30:	6944      	ldr	r4, [r0, #20]
          TimerListHead->IsPending = 0;
 8030d32:	7202      	strb	r2, [r0, #8]
          if( TimerListHead->Next != NULL )
 8030d34:	b13c      	cbz	r4, 8030d46 <UTIL_TIMER_Stop+0x32>
            TimerSetTimeout( TimerListHead );
 8030d36:	4620      	mov	r0, r4
            TimerListHead = TimerListHead->Next;
 8030d38:	602c      	str	r4, [r5, #0]
            TimerSetTimeout( TimerListHead );
 8030d3a:	f7ff ffcf 	bl	8030cdc <TimerSetTimeout>
  __ASM volatile ("MSR primask, %0" : : "r" (priMask) : "memory");
 8030d3e:	f386 8810 	msr	PRIMASK, r6
}
 8030d42:	2000      	movs	r0, #0
}
 8030d44:	bd70      	pop	{r4, r5, r6, pc}
            UTIL_TimerDriver.StopTimerEvt( );
 8030d46:	4b09      	ldr	r3, [pc, #36]	; (8030d6c <UTIL_TIMER_Stop+0x58>)
 8030d48:	68db      	ldr	r3, [r3, #12]
 8030d4a:	4798      	blx	r3
            TimerListHead = NULL;
 8030d4c:	602c      	str	r4, [r5, #0]
 8030d4e:	e7f6      	b.n	8030d3e <UTIL_TIMER_Stop+0x2a>
            cur = cur->Next;
 8030d50:	461a      	mov	r2, r3
 8030d52:	695b      	ldr	r3, [r3, #20]
        while( cur != NULL )
 8030d54:	2b00      	cmp	r3, #0
 8030d56:	d0f2      	beq.n	8030d3e <UTIL_TIMER_Stop+0x2a>
          if( cur == TimerObject )
 8030d58:	4298      	cmp	r0, r3
 8030d5a:	d1f9      	bne.n	8030d50 <UTIL_TIMER_Stop+0x3c>
            if( cur->Next != NULL )
 8030d5c:	6943      	ldr	r3, [r0, #20]
              prev->Next = cur;
 8030d5e:	6153      	str	r3, [r2, #20]
 8030d60:	e7ed      	b.n	8030d3e <UTIL_TIMER_Stop+0x2a>
    ret = UTIL_TIMER_INVALID_PARAM;
 8030d62:	2001      	movs	r0, #1
 8030d64:	e7ee      	b.n	8030d44 <UTIL_TIMER_Stop+0x30>
 8030d66:	bf00      	nop
 8030d68:	2000a334 	.word	0x2000a334
 8030d6c:	080338bc 	.word	0x080338bc

08030d70 <TimerInsertTimer>:
 *
 * @param TimerObject Structure containing the timer object parameters
 */
void TimerInsertTimer( UTIL_TIMER_Object_t *TimerObject)
{
  UTIL_TIMER_Object_t* cur = TimerListHead;
 8030d70:	4b09      	ldr	r3, [pc, #36]	; (8030d98 <TimerInsertTimer+0x28>)
{
 8030d72:	b510      	push	{r4, lr}
  UTIL_TIMER_Object_t* cur = TimerListHead;
 8030d74:	681b      	ldr	r3, [r3, #0]
  UTIL_TIMER_Object_t* next = TimerListHead->Next;
 8030d76:	695a      	ldr	r2, [r3, #20]

  while (cur->Next != NULL )
 8030d78:	6959      	ldr	r1, [r3, #20]
 8030d7a:	b911      	cbnz	r1, 8030d82 <TimerInsertTimer+0x12>
        TimerObject->Next = next;
        return;

    }
  }
  cur->Next = TimerObject;
 8030d7c:	6158      	str	r0, [r3, #20]
  TimerObject->Next = NULL;
 8030d7e:	6141      	str	r1, [r0, #20]
 8030d80:	e008      	b.n	8030d94 <TimerInsertTimer+0x24>
    if( TimerObject->Timestamp  > next->Timestamp )
 8030d82:	6804      	ldr	r4, [r0, #0]
 8030d84:	6811      	ldr	r1, [r2, #0]
 8030d86:	428c      	cmp	r4, r1
 8030d88:	d902      	bls.n	8030d90 <TimerInsertTimer+0x20>
        next = next->Next;
 8030d8a:	4613      	mov	r3, r2
 8030d8c:	6952      	ldr	r2, [r2, #20]
 8030d8e:	e7f3      	b.n	8030d78 <TimerInsertTimer+0x8>
        cur->Next = TimerObject;
 8030d90:	6158      	str	r0, [r3, #20]
        TimerObject->Next = next;
 8030d92:	6142      	str	r2, [r0, #20]
}
 8030d94:	bd10      	pop	{r4, pc}
 8030d96:	bf00      	nop
 8030d98:	2000a334 	.word	0x2000a334

08030d9c <TimerInsertNewHeadTimer>:
 * @remark The list is automatically sorted. The list head always contains the
 *         next timer to expire.
 */
void TimerInsertNewHeadTimer( UTIL_TIMER_Object_t *TimerObject )
{
  UTIL_TIMER_Object_t* cur = TimerListHead;
 8030d9c:	4a04      	ldr	r2, [pc, #16]	; (8030db0 <TimerInsertNewHeadTimer+0x14>)
 8030d9e:	6813      	ldr	r3, [r2, #0]

  if( cur != NULL )
 8030da0:	b10b      	cbz	r3, 8030da6 <TimerInsertNewHeadTimer+0xa>
  {
    cur->IsPending = 0;
 8030da2:	2100      	movs	r1, #0
 8030da4:	7219      	strb	r1, [r3, #8]
  }

  TimerObject->Next = cur;
 8030da6:	6143      	str	r3, [r0, #20]
  TimerListHead = TimerObject;
 8030da8:	6010      	str	r0, [r2, #0]
  TimerSetTimeout( TimerListHead );
 8030daa:	f7ff bf97 	b.w	8030cdc <TimerSetTimeout>
 8030dae:	bf00      	nop
 8030db0:	2000a334 	.word	0x2000a334

08030db4 <UTIL_TIMER_Start>:
{
 8030db4:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  if(( TimerObject != NULL ) && ( TimerExists( TimerObject ) == false ) && (TimerObject->IsRunning == 0U))
 8030db8:	4604      	mov	r4, r0
 8030dba:	2800      	cmp	r0, #0
 8030dbc:	d02d      	beq.n	8030e1a <UTIL_TIMER_Start+0x66>
 8030dbe:	f7ff ff7f 	bl	8030cc0 <TimerExists>
 8030dc2:	bb50      	cbnz	r0, 8030e1a <UTIL_TIMER_Start+0x66>
 8030dc4:	7a65      	ldrb	r5, [r4, #9]
 8030dc6:	bb45      	cbnz	r5, 8030e1a <UTIL_TIMER_Start+0x66>
  __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
 8030dc8:	f3ef 8810 	mrs	r8, PRIMASK
  __ASM volatile ("cpsid i" : : : "memory");
 8030dcc:	b672      	cpsid	i
    minValue = UTIL_TimerDriver.GetMinimumTimeout( );
 8030dce:	4e14      	ldr	r6, [pc, #80]	; (8030e20 <UTIL_TIMER_Start+0x6c>)
    ticks = TimerObject->ReloadValue;
 8030dd0:	6867      	ldr	r7, [r4, #4]
    minValue = UTIL_TimerDriver.GetMinimumTimeout( );
 8030dd2:	6a33      	ldr	r3, [r6, #32]
 8030dd4:	4798      	blx	r3
    TimerObject->IsPending = 0U;
 8030dd6:	f44f 7380 	mov.w	r3, #256	; 0x100
    TimerObject->Timestamp = ticks;
 8030dda:	4287      	cmp	r7, r0
 8030ddc:	bf2c      	ite	cs
 8030dde:	6027      	strcs	r7, [r4, #0]
 8030de0:	6020      	strcc	r0, [r4, #0]
    if( TimerListHead == NULL )
 8030de2:	4f10      	ldr	r7, [pc, #64]	; (8030e24 <UTIL_TIMER_Start+0x70>)
    TimerObject->IsPending = 0U;
 8030de4:	8123      	strh	r3, [r4, #8]
    if( TimerListHead == NULL )
 8030de6:	683b      	ldr	r3, [r7, #0]
    TimerObject->IsReloadStopped = 0U;
 8030de8:	72a5      	strb	r5, [r4, #10]
    if( TimerListHead == NULL )
 8030dea:	b94b      	cbnz	r3, 8030e00 <UTIL_TIMER_Start+0x4c>
      UTIL_TimerDriver.SetTimerContext();
 8030dec:	6933      	ldr	r3, [r6, #16]
 8030dee:	4798      	blx	r3
      TimerInsertNewHeadTimer( TimerObject ); /* insert a timeout at now+obj->Timestamp */
 8030df0:	4620      	mov	r0, r4
        TimerInsertNewHeadTimer( TimerObject);
 8030df2:	f7ff ffd3 	bl	8030d9c <TimerInsertNewHeadTimer>
  __ASM volatile ("MSR primask, %0" : : "r" (priMask) : "memory");
 8030df6:	f388 8810 	msr	PRIMASK, r8
}
 8030dfa:	4628      	mov	r0, r5
 8030dfc:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
      elapsedTime = UTIL_TimerDriver.GetTimerElapsedTime( );
 8030e00:	69b3      	ldr	r3, [r6, #24]
 8030e02:	4798      	blx	r3
      TimerObject->Timestamp += elapsedTime;
 8030e04:	6823      	ldr	r3, [r4, #0]
 8030e06:	4418      	add	r0, r3
      if( TimerObject->Timestamp < TimerListHead->Timestamp )
 8030e08:	683b      	ldr	r3, [r7, #0]
      TimerObject->Timestamp += elapsedTime;
 8030e0a:	6020      	str	r0, [r4, #0]
      if( TimerObject->Timestamp < TimerListHead->Timestamp )
 8030e0c:	681b      	ldr	r3, [r3, #0]
 8030e0e:	4298      	cmp	r0, r3
        TimerInsertNewHeadTimer( TimerObject);
 8030e10:	4620      	mov	r0, r4
      if( TimerObject->Timestamp < TimerListHead->Timestamp )
 8030e12:	d3ee      	bcc.n	8030df2 <UTIL_TIMER_Start+0x3e>
        TimerInsertTimer( TimerObject);
 8030e14:	f7ff ffac 	bl	8030d70 <TimerInsertTimer>
 8030e18:	e7ed      	b.n	8030df6 <UTIL_TIMER_Start+0x42>
    ret =  UTIL_TIMER_INVALID_PARAM;
 8030e1a:	2501      	movs	r5, #1
 8030e1c:	e7ed      	b.n	8030dfa <UTIL_TIMER_Start+0x46>
 8030e1e:	bf00      	nop
 8030e20:	080338bc 	.word	0x080338bc
 8030e24:	2000a334 	.word	0x2000a334

08030e28 <UTIL_TIMER_StartWithPeriod>:
{
 8030e28:	b510      	push	{r4, lr}
 8030e2a:	4604      	mov	r4, r0
 8030e2c:	4608      	mov	r0, r1
  if(NULL == TimerObject)
 8030e2e:	b17c      	cbz	r4, 8030e50 <UTIL_TIMER_StartWithPeriod+0x28>
    TimerObject->ReloadValue = UTIL_TimerDriver.ms2Tick(PeriodValue);
 8030e30:	4b08      	ldr	r3, [pc, #32]	; (8030e54 <UTIL_TIMER_StartWithPeriod+0x2c>)
 8030e32:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8030e34:	4798      	blx	r3
 8030e36:	6060      	str	r0, [r4, #4]
    if(TimerExists(TimerObject))
 8030e38:	4620      	mov	r0, r4
 8030e3a:	f7ff ff41 	bl	8030cc0 <TimerExists>
 8030e3e:	b110      	cbz	r0, 8030e46 <UTIL_TIMER_StartWithPeriod+0x1e>
      (void)UTIL_TIMER_Stop(TimerObject);
 8030e40:	4620      	mov	r0, r4
 8030e42:	f7ff ff67 	bl	8030d14 <UTIL_TIMER_Stop>
    ret = UTIL_TIMER_Start(TimerObject);
 8030e46:	4620      	mov	r0, r4
}
 8030e48:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
    ret = UTIL_TIMER_Start(TimerObject);
 8030e4c:	f7ff bfb2 	b.w	8030db4 <UTIL_TIMER_Start>
}
 8030e50:	2001      	movs	r0, #1
 8030e52:	bd10      	pop	{r4, pc}
 8030e54:	080338bc 	.word	0x080338bc

08030e58 <UTIL_TIMER_IRQ_Handler>:
{
 8030e58:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
 8030e5c:	f3ef 8710 	mrs	r7, PRIMASK
  __ASM volatile ("cpsid i" : : : "memory");
 8030e60:	b672      	cpsid	i
  old  =  UTIL_TimerDriver.GetTimerContext( );
 8030e62:	4e1d      	ldr	r6, [pc, #116]	; (8030ed8 <UTIL_TIMER_IRQ_Handler+0x80>)
  if ( TimerListHead != NULL )
 8030e64:	4d1d      	ldr	r5, [pc, #116]	; (8030edc <UTIL_TIMER_IRQ_Handler+0x84>)
  old  =  UTIL_TimerDriver.GetTimerContext( );
 8030e66:	6973      	ldr	r3, [r6, #20]
 8030e68:	4798      	blx	r3
  now  =  UTIL_TimerDriver.SetTimerContext( );
 8030e6a:	6933      	ldr	r3, [r6, #16]
  old  =  UTIL_TimerDriver.GetTimerContext( );
 8030e6c:	4604      	mov	r4, r0
  now  =  UTIL_TimerDriver.SetTimerContext( );
 8030e6e:	4798      	blx	r3
  if ( TimerListHead != NULL )
 8030e70:	682b      	ldr	r3, [r5, #0]
 8030e72:	b94b      	cbnz	r3, 8030e88 <UTIL_TIMER_IRQ_Handler+0x30>
      cur->IsPending = 0;
 8030e74:	f04f 0800 	mov.w	r8, #0
  while ((TimerListHead != NULL) && ((TimerListHead->Timestamp == 0U) || (TimerListHead->Timestamp < UTIL_TimerDriver.GetTimerElapsedTime(  ))))
 8030e78:	682b      	ldr	r3, [r5, #0]
 8030e7a:	b98b      	cbnz	r3, 8030ea0 <UTIL_TIMER_IRQ_Handler+0x48>
  if(( TimerListHead != NULL ) && (TimerListHead->IsPending == 0U))
 8030e7c:	6828      	ldr	r0, [r5, #0]
 8030e7e:	bb28      	cbnz	r0, 8030ecc <UTIL_TIMER_IRQ_Handler+0x74>
  __ASM volatile ("MSR primask, %0" : : "r" (priMask) : "memory");
 8030e80:	f387 8810 	msr	PRIMASK, r7
}
 8030e84:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  DeltaContext = now  - old; /*intentional wrap around */
 8030e88:	1b01      	subs	r1, r0, r4
        cur->Timestamp -= DeltaContext;
 8030e8a:	1a24      	subs	r4, r4, r0
      if (cur->Timestamp > DeltaContext)
 8030e8c:	681a      	ldr	r2, [r3, #0]
 8030e8e:	428a      	cmp	r2, r1
        cur->Timestamp = 0;
 8030e90:	bf94      	ite	ls
 8030e92:	2200      	movls	r2, #0
        cur->Timestamp -= DeltaContext;
 8030e94:	1912      	addhi	r2, r2, r4
 8030e96:	601a      	str	r2, [r3, #0]
      cur = cur->Next;
 8030e98:	695b      	ldr	r3, [r3, #20]
    } while(cur != NULL);
 8030e9a:	2b00      	cmp	r3, #0
 8030e9c:	d1f6      	bne.n	8030e8c <UTIL_TIMER_IRQ_Handler+0x34>
 8030e9e:	e7e9      	b.n	8030e74 <UTIL_TIMER_IRQ_Handler+0x1c>
  while ((TimerListHead != NULL) && ((TimerListHead->Timestamp == 0U) || (TimerListHead->Timestamp < UTIL_TimerDriver.GetTimerElapsedTime(  ))))
 8030ea0:	681c      	ldr	r4, [r3, #0]
 8030ea2:	b11c      	cbz	r4, 8030eac <UTIL_TIMER_IRQ_Handler+0x54>
 8030ea4:	69b3      	ldr	r3, [r6, #24]
 8030ea6:	4798      	blx	r3
 8030ea8:	4284      	cmp	r4, r0
 8030eaa:	d2e7      	bcs.n	8030e7c <UTIL_TIMER_IRQ_Handler+0x24>
      cur = TimerListHead;
 8030eac:	682c      	ldr	r4, [r5, #0]
      TimerListHead = TimerListHead->Next;
 8030eae:	6963      	ldr	r3, [r4, #20]
      cur->IsPending = 0;
 8030eb0:	f8a4 8008 	strh.w	r8, [r4, #8]
      TimerListHead = TimerListHead->Next;
 8030eb4:	602b      	str	r3, [r5, #0]
      cur->Callback(cur->argument);
 8030eb6:	e9d4 3003 	ldrd	r3, r0, [r4, #12]
 8030eba:	4798      	blx	r3
      if(( cur->Mode == UTIL_TIMER_PERIODIC) && (cur->IsReloadStopped == 0U))
 8030ebc:	8963      	ldrh	r3, [r4, #10]
 8030ebe:	f5b3 7f80 	cmp.w	r3, #256	; 0x100
 8030ec2:	d1d9      	bne.n	8030e78 <UTIL_TIMER_IRQ_Handler+0x20>
        (void)UTIL_TIMER_Start(cur);
 8030ec4:	4620      	mov	r0, r4
 8030ec6:	f7ff ff75 	bl	8030db4 <UTIL_TIMER_Start>
 8030eca:	e7d5      	b.n	8030e78 <UTIL_TIMER_IRQ_Handler+0x20>
  if(( TimerListHead != NULL ) && (TimerListHead->IsPending == 0U))
 8030ecc:	7a03      	ldrb	r3, [r0, #8]
 8030ece:	2b00      	cmp	r3, #0
 8030ed0:	d1d6      	bne.n	8030e80 <UTIL_TIMER_IRQ_Handler+0x28>
    TimerSetTimeout( TimerListHead );
 8030ed2:	f7ff ff03 	bl	8030cdc <TimerSetTimeout>
 8030ed6:	e7d3      	b.n	8030e80 <UTIL_TIMER_IRQ_Handler+0x28>
 8030ed8:	080338bc 	.word	0x080338bc
 8030edc:	2000a334 	.word	0x2000a334

08030ee0 <__aeabi_memclr>:
 8030ee0:	2200      	movs	r2, #0
 8030ee2:	f7f4 b85f 	b.w	8024fa4 <__aeabi_memset>

08030ee6 <__aeabi_memcpy>:
 8030ee6:	f000 b83b 	b.w	8030f60 <memcpy>
	...

08030eec <__errno>:
 8030eec:	4b01      	ldr	r3, [pc, #4]	; (8030ef4 <__errno+0x8>)
 8030eee:	6818      	ldr	r0, [r3, #0]
 8030ef0:	4770      	bx	lr
 8030ef2:	bf00      	nop
 8030ef4:	200004e4 	.word	0x200004e4

08030ef8 <__libc_init_array>:
 8030ef8:	b570      	push	{r4, r5, r6, lr}
 8030efa:	4d0d      	ldr	r5, [pc, #52]	; (8030f30 <__libc_init_array+0x38>)
 8030efc:	2600      	movs	r6, #0
 8030efe:	4c0d      	ldr	r4, [pc, #52]	; (8030f34 <__libc_init_array+0x3c>)
 8030f00:	1b64      	subs	r4, r4, r5
 8030f02:	10a4      	asrs	r4, r4, #2
 8030f04:	42a6      	cmp	r6, r4
 8030f06:	d109      	bne.n	8030f1c <__libc_init_array+0x24>
 8030f08:	4d0b      	ldr	r5, [pc, #44]	; (8030f38 <__libc_init_array+0x40>)
 8030f0a:	2600      	movs	r6, #0
 8030f0c:	4c0b      	ldr	r4, [pc, #44]	; (8030f3c <__libc_init_array+0x44>)
 8030f0e:	f000 fcc5 	bl	803189c <_init>
 8030f12:	1b64      	subs	r4, r4, r5
 8030f14:	10a4      	asrs	r4, r4, #2
 8030f16:	42a6      	cmp	r6, r4
 8030f18:	d105      	bne.n	8030f26 <__libc_init_array+0x2e>
 8030f1a:	bd70      	pop	{r4, r5, r6, pc}
 8030f1c:	f855 3b04 	ldr.w	r3, [r5], #4
 8030f20:	3601      	adds	r6, #1
 8030f22:	4798      	blx	r3
 8030f24:	e7ee      	b.n	8030f04 <__libc_init_array+0xc>
 8030f26:	f855 3b04 	ldr.w	r3, [r5], #4
 8030f2a:	3601      	adds	r6, #1
 8030f2c:	4798      	blx	r3
 8030f2e:	e7f2      	b.n	8030f16 <__libc_init_array+0x1e>
 8030f30:	08034354 	.word	0x08034354
 8030f34:	08034354 	.word	0x08034354
 8030f38:	08034354 	.word	0x08034354
 8030f3c:	08034358 	.word	0x08034358

08030f40 <memcmp>:
 8030f40:	3901      	subs	r1, #1
 8030f42:	4402      	add	r2, r0
 8030f44:	b510      	push	{r4, lr}
 8030f46:	4290      	cmp	r0, r2
 8030f48:	d101      	bne.n	8030f4e <memcmp+0xe>
 8030f4a:	2000      	movs	r0, #0
 8030f4c:	e005      	b.n	8030f5a <memcmp+0x1a>
 8030f4e:	7803      	ldrb	r3, [r0, #0]
 8030f50:	f811 4f01 	ldrb.w	r4, [r1, #1]!
 8030f54:	42a3      	cmp	r3, r4
 8030f56:	d001      	beq.n	8030f5c <memcmp+0x1c>
 8030f58:	1b18      	subs	r0, r3, r4
 8030f5a:	bd10      	pop	{r4, pc}
 8030f5c:	3001      	adds	r0, #1
 8030f5e:	e7f2      	b.n	8030f46 <memcmp+0x6>

08030f60 <memcpy>:
 8030f60:	440a      	add	r2, r1
 8030f62:	1e43      	subs	r3, r0, #1
 8030f64:	4291      	cmp	r1, r2
 8030f66:	d100      	bne.n	8030f6a <memcpy+0xa>
 8030f68:	4770      	bx	lr
 8030f6a:	b510      	push	{r4, lr}
 8030f6c:	f811 4b01 	ldrb.w	r4, [r1], #1
 8030f70:	4291      	cmp	r1, r2
 8030f72:	f803 4f01 	strb.w	r4, [r3, #1]!
 8030f76:	d1f9      	bne.n	8030f6c <memcpy+0xc>
 8030f78:	bd10      	pop	{r4, pc}

08030f7a <memmove>:
 8030f7a:	4288      	cmp	r0, r1
 8030f7c:	b510      	push	{r4, lr}
 8030f7e:	eb01 0402 	add.w	r4, r1, r2
 8030f82:	d902      	bls.n	8030f8a <memmove+0x10>
 8030f84:	4284      	cmp	r4, r0
 8030f86:	4623      	mov	r3, r4
 8030f88:	d807      	bhi.n	8030f9a <memmove+0x20>
 8030f8a:	1e43      	subs	r3, r0, #1
 8030f8c:	42a1      	cmp	r1, r4
 8030f8e:	d008      	beq.n	8030fa2 <memmove+0x28>
 8030f90:	f811 2b01 	ldrb.w	r2, [r1], #1
 8030f94:	f803 2f01 	strb.w	r2, [r3, #1]!
 8030f98:	e7f8      	b.n	8030f8c <memmove+0x12>
 8030f9a:	4402      	add	r2, r0
 8030f9c:	4601      	mov	r1, r0
 8030f9e:	428a      	cmp	r2, r1
 8030fa0:	d100      	bne.n	8030fa4 <memmove+0x2a>
 8030fa2:	bd10      	pop	{r4, pc}
 8030fa4:	f813 4d01 	ldrb.w	r4, [r3, #-1]!
 8030fa8:	f802 4d01 	strb.w	r4, [r2, #-1]!
 8030fac:	e7f7      	b.n	8030f9e <memmove+0x24>

08030fae <memset>:
 8030fae:	4402      	add	r2, r0
 8030fb0:	4603      	mov	r3, r0
 8030fb2:	4293      	cmp	r3, r2
 8030fb4:	d100      	bne.n	8030fb8 <memset+0xa>
 8030fb6:	4770      	bx	lr
 8030fb8:	f803 1b01 	strb.w	r1, [r3], #1
 8030fbc:	e7f9      	b.n	8030fb2 <memset+0x4>

08030fbe <_vsniprintf_r>:
 8030fbe:	b530      	push	{r4, r5, lr}
 8030fc0:	4614      	mov	r4, r2
 8030fc2:	b09b      	sub	sp, #108	; 0x6c
 8030fc4:	4605      	mov	r5, r0
 8030fc6:	461a      	mov	r2, r3
 8030fc8:	2c00      	cmp	r4, #0
 8030fca:	da05      	bge.n	8030fd8 <_vsniprintf_r+0x1a>
 8030fcc:	238b      	movs	r3, #139	; 0x8b
 8030fce:	6003      	str	r3, [r0, #0]
 8030fd0:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 8030fd4:	b01b      	add	sp, #108	; 0x6c
 8030fd6:	bd30      	pop	{r4, r5, pc}
 8030fd8:	f44f 7302 	mov.w	r3, #520	; 0x208
 8030fdc:	9100      	str	r1, [sp, #0]
 8030fde:	9104      	str	r1, [sp, #16]
 8030fe0:	4669      	mov	r1, sp
 8030fe2:	f8ad 300c 	strh.w	r3, [sp, #12]
 8030fe6:	bf14      	ite	ne
 8030fe8:	f104 33ff 	addne.w	r3, r4, #4294967295	; 0xffffffff
 8030fec:	4623      	moveq	r3, r4
 8030fee:	9302      	str	r3, [sp, #8]
 8030ff0:	9305      	str	r3, [sp, #20]
 8030ff2:	f64f 73ff 	movw	r3, #65535	; 0xffff
 8030ff6:	f8ad 300e 	strh.w	r3, [sp, #14]
 8030ffa:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 8030ffc:	f000 f874 	bl	80310e8 <_svfiprintf_r>
 8031000:	1c43      	adds	r3, r0, #1
 8031002:	bfbc      	itt	lt
 8031004:	238b      	movlt	r3, #139	; 0x8b
 8031006:	602b      	strlt	r3, [r5, #0]
 8031008:	2c00      	cmp	r4, #0
 803100a:	d0e3      	beq.n	8030fd4 <_vsniprintf_r+0x16>
 803100c:	9b00      	ldr	r3, [sp, #0]
 803100e:	2200      	movs	r2, #0
 8031010:	701a      	strb	r2, [r3, #0]
 8031012:	e7df      	b.n	8030fd4 <_vsniprintf_r+0x16>

08031014 <vsniprintf>:
 8031014:	b507      	push	{r0, r1, r2, lr}
 8031016:	9300      	str	r3, [sp, #0]
 8031018:	4613      	mov	r3, r2
 803101a:	460a      	mov	r2, r1
 803101c:	4601      	mov	r1, r0
 803101e:	4803      	ldr	r0, [pc, #12]	; (803102c <vsniprintf+0x18>)
 8031020:	6800      	ldr	r0, [r0, #0]
 8031022:	f7ff ffcc 	bl	8030fbe <_vsniprintf_r>
 8031026:	b003      	add	sp, #12
 8031028:	f85d fb04 	ldr.w	pc, [sp], #4
 803102c:	200004e4 	.word	0x200004e4

08031030 <__ssputs_r>:
 8031030:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8031034:	688e      	ldr	r6, [r1, #8]
 8031036:	4682      	mov	sl, r0
 8031038:	460c      	mov	r4, r1
 803103a:	4690      	mov	r8, r2
 803103c:	429e      	cmp	r6, r3
 803103e:	461f      	mov	r7, r3
 8031040:	d838      	bhi.n	80310b4 <__ssputs_r+0x84>
 8031042:	898a      	ldrh	r2, [r1, #12]
 8031044:	f412 6f90 	tst.w	r2, #1152	; 0x480
 8031048:	d032      	beq.n	80310b0 <__ssputs_r+0x80>
 803104a:	6825      	ldr	r5, [r4, #0]
 803104c:	3301      	adds	r3, #1
 803104e:	6909      	ldr	r1, [r1, #16]
 8031050:	eba5 0901 	sub.w	r9, r5, r1
 8031054:	6965      	ldr	r5, [r4, #20]
 8031056:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 803105a:	444b      	add	r3, r9
 803105c:	eb05 75d5 	add.w	r5, r5, r5, lsr #31
 8031060:	106d      	asrs	r5, r5, #1
 8031062:	429d      	cmp	r5, r3
 8031064:	bf38      	it	cc
 8031066:	461d      	movcc	r5, r3
 8031068:	0553      	lsls	r3, r2, #21
 803106a:	d531      	bpl.n	80310d0 <__ssputs_r+0xa0>
 803106c:	4629      	mov	r1, r5
 803106e:	f000 fb4b 	bl	8031708 <_malloc_r>
 8031072:	4606      	mov	r6, r0
 8031074:	b950      	cbnz	r0, 803108c <__ssputs_r+0x5c>
 8031076:	230c      	movs	r3, #12
 8031078:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 803107c:	f8ca 3000 	str.w	r3, [sl]
 8031080:	89a3      	ldrh	r3, [r4, #12]
 8031082:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8031086:	81a3      	strh	r3, [r4, #12]
 8031088:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 803108c:	464a      	mov	r2, r9
 803108e:	6921      	ldr	r1, [r4, #16]
 8031090:	f7ff ff66 	bl	8030f60 <memcpy>
 8031094:	89a3      	ldrh	r3, [r4, #12]
 8031096:	f423 6390 	bic.w	r3, r3, #1152	; 0x480
 803109a:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 803109e:	81a3      	strh	r3, [r4, #12]
 80310a0:	6126      	str	r6, [r4, #16]
 80310a2:	444e      	add	r6, r9
 80310a4:	6165      	str	r5, [r4, #20]
 80310a6:	eba5 0509 	sub.w	r5, r5, r9
 80310aa:	6026      	str	r6, [r4, #0]
 80310ac:	463e      	mov	r6, r7
 80310ae:	60a5      	str	r5, [r4, #8]
 80310b0:	42be      	cmp	r6, r7
 80310b2:	d900      	bls.n	80310b6 <__ssputs_r+0x86>
 80310b4:	463e      	mov	r6, r7
 80310b6:	4632      	mov	r2, r6
 80310b8:	4641      	mov	r1, r8
 80310ba:	6820      	ldr	r0, [r4, #0]
 80310bc:	f7ff ff5d 	bl	8030f7a <memmove>
 80310c0:	68a3      	ldr	r3, [r4, #8]
 80310c2:	2000      	movs	r0, #0
 80310c4:	1b9b      	subs	r3, r3, r6
 80310c6:	60a3      	str	r3, [r4, #8]
 80310c8:	6823      	ldr	r3, [r4, #0]
 80310ca:	4433      	add	r3, r6
 80310cc:	6023      	str	r3, [r4, #0]
 80310ce:	e7db      	b.n	8031088 <__ssputs_r+0x58>
 80310d0:	462a      	mov	r2, r5
 80310d2:	f000 fb8d 	bl	80317f0 <_realloc_r>
 80310d6:	4606      	mov	r6, r0
 80310d8:	2800      	cmp	r0, #0
 80310da:	d1e1      	bne.n	80310a0 <__ssputs_r+0x70>
 80310dc:	6921      	ldr	r1, [r4, #16]
 80310de:	4650      	mov	r0, sl
 80310e0:	f000 faa6 	bl	8031630 <_free_r>
 80310e4:	e7c7      	b.n	8031076 <__ssputs_r+0x46>
	...

080310e8 <_svfiprintf_r>:
 80310e8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80310ec:	4698      	mov	r8, r3
 80310ee:	898b      	ldrh	r3, [r1, #12]
 80310f0:	b09d      	sub	sp, #116	; 0x74
 80310f2:	4607      	mov	r7, r0
 80310f4:	061b      	lsls	r3, r3, #24
 80310f6:	460d      	mov	r5, r1
 80310f8:	4614      	mov	r4, r2
 80310fa:	d50e      	bpl.n	803111a <_svfiprintf_r+0x32>
 80310fc:	690b      	ldr	r3, [r1, #16]
 80310fe:	b963      	cbnz	r3, 803111a <_svfiprintf_r+0x32>
 8031100:	2140      	movs	r1, #64	; 0x40
 8031102:	f000 fb01 	bl	8031708 <_malloc_r>
 8031106:	6028      	str	r0, [r5, #0]
 8031108:	6128      	str	r0, [r5, #16]
 803110a:	b920      	cbnz	r0, 8031116 <_svfiprintf_r+0x2e>
 803110c:	230c      	movs	r3, #12
 803110e:	603b      	str	r3, [r7, #0]
 8031110:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 8031114:	e0d1      	b.n	80312ba <_svfiprintf_r+0x1d2>
 8031116:	2340      	movs	r3, #64	; 0x40
 8031118:	616b      	str	r3, [r5, #20]
 803111a:	2300      	movs	r3, #0
 803111c:	f8cd 800c 	str.w	r8, [sp, #12]
 8031120:	f04f 0901 	mov.w	r9, #1
 8031124:	f8df 81ac 	ldr.w	r8, [pc, #428]	; 80312d4 <_svfiprintf_r+0x1ec>
 8031128:	9309      	str	r3, [sp, #36]	; 0x24
 803112a:	2320      	movs	r3, #32
 803112c:	f88d 3029 	strb.w	r3, [sp, #41]	; 0x29
 8031130:	2330      	movs	r3, #48	; 0x30
 8031132:	f88d 302a 	strb.w	r3, [sp, #42]	; 0x2a
 8031136:	4623      	mov	r3, r4
 8031138:	469a      	mov	sl, r3
 803113a:	f813 2b01 	ldrb.w	r2, [r3], #1
 803113e:	b10a      	cbz	r2, 8031144 <_svfiprintf_r+0x5c>
 8031140:	2a25      	cmp	r2, #37	; 0x25
 8031142:	d1f9      	bne.n	8031138 <_svfiprintf_r+0x50>
 8031144:	ebba 0b04 	subs.w	fp, sl, r4
 8031148:	d00b      	beq.n	8031162 <_svfiprintf_r+0x7a>
 803114a:	465b      	mov	r3, fp
 803114c:	4622      	mov	r2, r4
 803114e:	4629      	mov	r1, r5
 8031150:	4638      	mov	r0, r7
 8031152:	f7ff ff6d 	bl	8031030 <__ssputs_r>
 8031156:	3001      	adds	r0, #1
 8031158:	f000 80aa 	beq.w	80312b0 <_svfiprintf_r+0x1c8>
 803115c:	9a09      	ldr	r2, [sp, #36]	; 0x24
 803115e:	445a      	add	r2, fp
 8031160:	9209      	str	r2, [sp, #36]	; 0x24
 8031162:	f89a 3000 	ldrb.w	r3, [sl]
 8031166:	2b00      	cmp	r3, #0
 8031168:	f000 80a2 	beq.w	80312b0 <_svfiprintf_r+0x1c8>
 803116c:	2300      	movs	r3, #0
 803116e:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
 8031172:	f10a 0a01 	add.w	sl, sl, #1
 8031176:	9304      	str	r3, [sp, #16]
 8031178:	9307      	str	r3, [sp, #28]
 803117a:	f88d 3053 	strb.w	r3, [sp, #83]	; 0x53
 803117e:	931a      	str	r3, [sp, #104]	; 0x68
 8031180:	e9cd 2305 	strd	r2, r3, [sp, #20]
 8031184:	4654      	mov	r4, sl
 8031186:	2205      	movs	r2, #5
 8031188:	4852      	ldr	r0, [pc, #328]	; (80312d4 <_svfiprintf_r+0x1ec>)
 803118a:	f814 1b01 	ldrb.w	r1, [r4], #1
 803118e:	f000 fa41 	bl	8031614 <memchr>
 8031192:	9a04      	ldr	r2, [sp, #16]
 8031194:	b9d8      	cbnz	r0, 80311ce <_svfiprintf_r+0xe6>
 8031196:	06d0      	lsls	r0, r2, #27
 8031198:	bf44      	itt	mi
 803119a:	2320      	movmi	r3, #32
 803119c:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 80311a0:	0711      	lsls	r1, r2, #28
 80311a2:	bf44      	itt	mi
 80311a4:	232b      	movmi	r3, #43	; 0x2b
 80311a6:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 80311aa:	f89a 3000 	ldrb.w	r3, [sl]
 80311ae:	2b2a      	cmp	r3, #42	; 0x2a
 80311b0:	d015      	beq.n	80311de <_svfiprintf_r+0xf6>
 80311b2:	9a07      	ldr	r2, [sp, #28]
 80311b4:	4654      	mov	r4, sl
 80311b6:	2000      	movs	r0, #0
 80311b8:	f04f 0c0a 	mov.w	ip, #10
 80311bc:	4621      	mov	r1, r4
 80311be:	f811 3b01 	ldrb.w	r3, [r1], #1
 80311c2:	3b30      	subs	r3, #48	; 0x30
 80311c4:	2b09      	cmp	r3, #9
 80311c6:	d94e      	bls.n	8031266 <_svfiprintf_r+0x17e>
 80311c8:	b1b0      	cbz	r0, 80311f8 <_svfiprintf_r+0x110>
 80311ca:	9207      	str	r2, [sp, #28]
 80311cc:	e014      	b.n	80311f8 <_svfiprintf_r+0x110>
 80311ce:	eba0 0308 	sub.w	r3, r0, r8
 80311d2:	46a2      	mov	sl, r4
 80311d4:	fa09 f303 	lsl.w	r3, r9, r3
 80311d8:	4313      	orrs	r3, r2
 80311da:	9304      	str	r3, [sp, #16]
 80311dc:	e7d2      	b.n	8031184 <_svfiprintf_r+0x9c>
 80311de:	9b03      	ldr	r3, [sp, #12]
 80311e0:	1d19      	adds	r1, r3, #4
 80311e2:	681b      	ldr	r3, [r3, #0]
 80311e4:	2b00      	cmp	r3, #0
 80311e6:	9103      	str	r1, [sp, #12]
 80311e8:	bfbb      	ittet	lt
 80311ea:	425b      	neglt	r3, r3
 80311ec:	f042 0202 	orrlt.w	r2, r2, #2
 80311f0:	9307      	strge	r3, [sp, #28]
 80311f2:	9307      	strlt	r3, [sp, #28]
 80311f4:	bfb8      	it	lt
 80311f6:	9204      	strlt	r2, [sp, #16]
 80311f8:	7823      	ldrb	r3, [r4, #0]
 80311fa:	2b2e      	cmp	r3, #46	; 0x2e
 80311fc:	d10c      	bne.n	8031218 <_svfiprintf_r+0x130>
 80311fe:	7863      	ldrb	r3, [r4, #1]
 8031200:	2b2a      	cmp	r3, #42	; 0x2a
 8031202:	d135      	bne.n	8031270 <_svfiprintf_r+0x188>
 8031204:	9b03      	ldr	r3, [sp, #12]
 8031206:	3402      	adds	r4, #2
 8031208:	1d1a      	adds	r2, r3, #4
 803120a:	681b      	ldr	r3, [r3, #0]
 803120c:	2b00      	cmp	r3, #0
 803120e:	9203      	str	r2, [sp, #12]
 8031210:	bfb8      	it	lt
 8031212:	f04f 33ff 	movlt.w	r3, #4294967295	; 0xffffffff
 8031216:	9305      	str	r3, [sp, #20]
 8031218:	f8df a0c8 	ldr.w	sl, [pc, #200]	; 80312e4 <_svfiprintf_r+0x1fc>
 803121c:	2203      	movs	r2, #3
 803121e:	7821      	ldrb	r1, [r4, #0]
 8031220:	4650      	mov	r0, sl
 8031222:	f000 f9f7 	bl	8031614 <memchr>
 8031226:	b140      	cbz	r0, 803123a <_svfiprintf_r+0x152>
 8031228:	2340      	movs	r3, #64	; 0x40
 803122a:	eba0 000a 	sub.w	r0, r0, sl
 803122e:	3401      	adds	r4, #1
 8031230:	fa03 f000 	lsl.w	r0, r3, r0
 8031234:	9b04      	ldr	r3, [sp, #16]
 8031236:	4303      	orrs	r3, r0
 8031238:	9304      	str	r3, [sp, #16]
 803123a:	f814 1b01 	ldrb.w	r1, [r4], #1
 803123e:	2206      	movs	r2, #6
 8031240:	4825      	ldr	r0, [pc, #148]	; (80312d8 <_svfiprintf_r+0x1f0>)
 8031242:	f88d 1028 	strb.w	r1, [sp, #40]	; 0x28
 8031246:	f000 f9e5 	bl	8031614 <memchr>
 803124a:	2800      	cmp	r0, #0
 803124c:	d038      	beq.n	80312c0 <_svfiprintf_r+0x1d8>
 803124e:	4b23      	ldr	r3, [pc, #140]	; (80312dc <_svfiprintf_r+0x1f4>)
 8031250:	bb1b      	cbnz	r3, 803129a <_svfiprintf_r+0x1b2>
 8031252:	9b03      	ldr	r3, [sp, #12]
 8031254:	3307      	adds	r3, #7
 8031256:	f023 0307 	bic.w	r3, r3, #7
 803125a:	3308      	adds	r3, #8
 803125c:	9303      	str	r3, [sp, #12]
 803125e:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8031260:	4433      	add	r3, r6
 8031262:	9309      	str	r3, [sp, #36]	; 0x24
 8031264:	e767      	b.n	8031136 <_svfiprintf_r+0x4e>
 8031266:	fb0c 3202 	mla	r2, ip, r2, r3
 803126a:	460c      	mov	r4, r1
 803126c:	2001      	movs	r0, #1
 803126e:	e7a5      	b.n	80311bc <_svfiprintf_r+0xd4>
 8031270:	2300      	movs	r3, #0
 8031272:	3401      	adds	r4, #1
 8031274:	f04f 0c0a 	mov.w	ip, #10
 8031278:	4619      	mov	r1, r3
 803127a:	9305      	str	r3, [sp, #20]
 803127c:	4620      	mov	r0, r4
 803127e:	f810 2b01 	ldrb.w	r2, [r0], #1
 8031282:	3a30      	subs	r2, #48	; 0x30
 8031284:	2a09      	cmp	r2, #9
 8031286:	d903      	bls.n	8031290 <_svfiprintf_r+0x1a8>
 8031288:	2b00      	cmp	r3, #0
 803128a:	d0c5      	beq.n	8031218 <_svfiprintf_r+0x130>
 803128c:	9105      	str	r1, [sp, #20]
 803128e:	e7c3      	b.n	8031218 <_svfiprintf_r+0x130>
 8031290:	fb0c 2101 	mla	r1, ip, r1, r2
 8031294:	4604      	mov	r4, r0
 8031296:	2301      	movs	r3, #1
 8031298:	e7f0      	b.n	803127c <_svfiprintf_r+0x194>
 803129a:	ab03      	add	r3, sp, #12
 803129c:	462a      	mov	r2, r5
 803129e:	a904      	add	r1, sp, #16
 80312a0:	4638      	mov	r0, r7
 80312a2:	9300      	str	r3, [sp, #0]
 80312a4:	4b0e      	ldr	r3, [pc, #56]	; (80312e0 <_svfiprintf_r+0x1f8>)
 80312a6:	e000      	b.n	80312aa <_svfiprintf_r+0x1c2>
 80312a8:	bf00      	nop
 80312aa:	1c42      	adds	r2, r0, #1
 80312ac:	4606      	mov	r6, r0
 80312ae:	d1d6      	bne.n	803125e <_svfiprintf_r+0x176>
 80312b0:	89ab      	ldrh	r3, [r5, #12]
 80312b2:	065b      	lsls	r3, r3, #25
 80312b4:	f53f af2c 	bmi.w	8031110 <_svfiprintf_r+0x28>
 80312b8:	9809      	ldr	r0, [sp, #36]	; 0x24
 80312ba:	b01d      	add	sp, #116	; 0x74
 80312bc:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80312c0:	ab03      	add	r3, sp, #12
 80312c2:	462a      	mov	r2, r5
 80312c4:	a904      	add	r1, sp, #16
 80312c6:	4638      	mov	r0, r7
 80312c8:	9300      	str	r3, [sp, #0]
 80312ca:	4b05      	ldr	r3, [pc, #20]	; (80312e0 <_svfiprintf_r+0x1f8>)
 80312cc:	f000 f87c 	bl	80313c8 <_printf_i>
 80312d0:	e7eb      	b.n	80312aa <_svfiprintf_r+0x1c2>
 80312d2:	bf00      	nop
 80312d4:	08034316 	.word	0x08034316
 80312d8:	08034320 	.word	0x08034320
 80312dc:	00000000 	.word	0x00000000
 80312e0:	08031031 	.word	0x08031031
 80312e4:	0803431c 	.word	0x0803431c

080312e8 <_printf_common>:
 80312e8:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80312ec:	4616      	mov	r6, r2
 80312ee:	4699      	mov	r9, r3
 80312f0:	688a      	ldr	r2, [r1, #8]
 80312f2:	4607      	mov	r7, r0
 80312f4:	690b      	ldr	r3, [r1, #16]
 80312f6:	460c      	mov	r4, r1
 80312f8:	f8dd 8020 	ldr.w	r8, [sp, #32]
 80312fc:	4293      	cmp	r3, r2
 80312fe:	bfb8      	it	lt
 8031300:	4613      	movlt	r3, r2
 8031302:	6033      	str	r3, [r6, #0]
 8031304:	f891 2043 	ldrb.w	r2, [r1, #67]	; 0x43
 8031308:	b10a      	cbz	r2, 803130e <_printf_common+0x26>
 803130a:	3301      	adds	r3, #1
 803130c:	6033      	str	r3, [r6, #0]
 803130e:	6823      	ldr	r3, [r4, #0]
 8031310:	0699      	lsls	r1, r3, #26
 8031312:	bf42      	ittt	mi
 8031314:	6833      	ldrmi	r3, [r6, #0]
 8031316:	3302      	addmi	r3, #2
 8031318:	6033      	strmi	r3, [r6, #0]
 803131a:	6825      	ldr	r5, [r4, #0]
 803131c:	f015 0506 	ands.w	r5, r5, #6
 8031320:	d106      	bne.n	8031330 <_printf_common+0x48>
 8031322:	f104 0a19 	add.w	sl, r4, #25
 8031326:	68e3      	ldr	r3, [r4, #12]
 8031328:	6832      	ldr	r2, [r6, #0]
 803132a:	1a9b      	subs	r3, r3, r2
 803132c:	42ab      	cmp	r3, r5
 803132e:	dc29      	bgt.n	8031384 <_printf_common+0x9c>
 8031330:	f894 2043 	ldrb.w	r2, [r4, #67]	; 0x43
 8031334:	1e13      	subs	r3, r2, #0
 8031336:	6822      	ldr	r2, [r4, #0]
 8031338:	bf18      	it	ne
 803133a:	2301      	movne	r3, #1
 803133c:	0692      	lsls	r2, r2, #26
 803133e:	d42e      	bmi.n	803139e <_printf_common+0xb6>
 8031340:	f104 0243 	add.w	r2, r4, #67	; 0x43
 8031344:	4649      	mov	r1, r9
 8031346:	4638      	mov	r0, r7
 8031348:	47c0      	blx	r8
 803134a:	3001      	adds	r0, #1
 803134c:	d021      	beq.n	8031392 <_printf_common+0xaa>
 803134e:	6823      	ldr	r3, [r4, #0]
 8031350:	341a      	adds	r4, #26
 8031352:	f854 5c0e 	ldr.w	r5, [r4, #-14]
 8031356:	f003 0306 	and.w	r3, r3, #6
 803135a:	6832      	ldr	r2, [r6, #0]
 803135c:	2600      	movs	r6, #0
 803135e:	2b04      	cmp	r3, #4
 8031360:	f854 3c12 	ldr.w	r3, [r4, #-18]
 8031364:	bf08      	it	eq
 8031366:	1aad      	subeq	r5, r5, r2
 8031368:	f854 2c0a 	ldr.w	r2, [r4, #-10]
 803136c:	bf14      	ite	ne
 803136e:	2500      	movne	r5, #0
 8031370:	ea25 75e5 	biceq.w	r5, r5, r5, asr #31
 8031374:	4293      	cmp	r3, r2
 8031376:	bfc4      	itt	gt
 8031378:	1a9b      	subgt	r3, r3, r2
 803137a:	18ed      	addgt	r5, r5, r3
 803137c:	42b5      	cmp	r5, r6
 803137e:	d11a      	bne.n	80313b6 <_printf_common+0xce>
 8031380:	2000      	movs	r0, #0
 8031382:	e008      	b.n	8031396 <_printf_common+0xae>
 8031384:	2301      	movs	r3, #1
 8031386:	4652      	mov	r2, sl
 8031388:	4649      	mov	r1, r9
 803138a:	4638      	mov	r0, r7
 803138c:	47c0      	blx	r8
 803138e:	3001      	adds	r0, #1
 8031390:	d103      	bne.n	803139a <_printf_common+0xb2>
 8031392:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 8031396:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 803139a:	3501      	adds	r5, #1
 803139c:	e7c3      	b.n	8031326 <_printf_common+0x3e>
 803139e:	18e1      	adds	r1, r4, r3
 80313a0:	1c5a      	adds	r2, r3, #1
 80313a2:	2030      	movs	r0, #48	; 0x30
 80313a4:	3302      	adds	r3, #2
 80313a6:	4422      	add	r2, r4
 80313a8:	f881 0043 	strb.w	r0, [r1, #67]	; 0x43
 80313ac:	f894 1045 	ldrb.w	r1, [r4, #69]	; 0x45
 80313b0:	f882 1043 	strb.w	r1, [r2, #67]	; 0x43
 80313b4:	e7c4      	b.n	8031340 <_printf_common+0x58>
 80313b6:	2301      	movs	r3, #1
 80313b8:	4622      	mov	r2, r4
 80313ba:	4649      	mov	r1, r9
 80313bc:	4638      	mov	r0, r7
 80313be:	47c0      	blx	r8
 80313c0:	3001      	adds	r0, #1
 80313c2:	d0e6      	beq.n	8031392 <_printf_common+0xaa>
 80313c4:	3601      	adds	r6, #1
 80313c6:	e7d9      	b.n	803137c <_printf_common+0x94>

080313c8 <_printf_i>:
 80313c8:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 80313cc:	7e0f      	ldrb	r7, [r1, #24]
 80313ce:	4691      	mov	r9, r2
 80313d0:	4680      	mov	r8, r0
 80313d2:	460c      	mov	r4, r1
 80313d4:	2f78      	cmp	r7, #120	; 0x78
 80313d6:	469a      	mov	sl, r3
 80313d8:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 80313da:	f101 0243 	add.w	r2, r1, #67	; 0x43
 80313de:	d807      	bhi.n	80313f0 <_printf_i+0x28>
 80313e0:	2f62      	cmp	r7, #98	; 0x62
 80313e2:	d80a      	bhi.n	80313fa <_printf_i+0x32>
 80313e4:	2f00      	cmp	r7, #0
 80313e6:	f000 80d8 	beq.w	803159a <_printf_i+0x1d2>
 80313ea:	2f58      	cmp	r7, #88	; 0x58
 80313ec:	f000 80a3 	beq.w	8031536 <_printf_i+0x16e>
 80313f0:	f104 0542 	add.w	r5, r4, #66	; 0x42
 80313f4:	f884 7042 	strb.w	r7, [r4, #66]	; 0x42
 80313f8:	e03a      	b.n	8031470 <_printf_i+0xa8>
 80313fa:	f1a7 0363 	sub.w	r3, r7, #99	; 0x63
 80313fe:	2b15      	cmp	r3, #21
 8031400:	d8f6      	bhi.n	80313f0 <_printf_i+0x28>
 8031402:	a101      	add	r1, pc, #4	; (adr r1, 8031408 <_printf_i+0x40>)
 8031404:	f851 f023 	ldr.w	pc, [r1, r3, lsl #2]
 8031408:	08031461 	.word	0x08031461
 803140c:	08031475 	.word	0x08031475
 8031410:	080313f1 	.word	0x080313f1
 8031414:	080313f1 	.word	0x080313f1
 8031418:	080313f1 	.word	0x080313f1
 803141c:	080313f1 	.word	0x080313f1
 8031420:	08031475 	.word	0x08031475
 8031424:	080313f1 	.word	0x080313f1
 8031428:	080313f1 	.word	0x080313f1
 803142c:	080313f1 	.word	0x080313f1
 8031430:	080313f1 	.word	0x080313f1
 8031434:	08031581 	.word	0x08031581
 8031438:	080314a5 	.word	0x080314a5
 803143c:	08031563 	.word	0x08031563
 8031440:	080313f1 	.word	0x080313f1
 8031444:	080313f1 	.word	0x080313f1
 8031448:	080315a3 	.word	0x080315a3
 803144c:	080313f1 	.word	0x080313f1
 8031450:	080314a5 	.word	0x080314a5
 8031454:	080313f1 	.word	0x080313f1
 8031458:	080313f1 	.word	0x080313f1
 803145c:	0803156b 	.word	0x0803156b
 8031460:	682b      	ldr	r3, [r5, #0]
 8031462:	1d1a      	adds	r2, r3, #4
 8031464:	681b      	ldr	r3, [r3, #0]
 8031466:	602a      	str	r2, [r5, #0]
 8031468:	f104 0542 	add.w	r5, r4, #66	; 0x42
 803146c:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
 8031470:	2301      	movs	r3, #1
 8031472:	e0a3      	b.n	80315bc <_printf_i+0x1f4>
 8031474:	6820      	ldr	r0, [r4, #0]
 8031476:	6829      	ldr	r1, [r5, #0]
 8031478:	0606      	lsls	r6, r0, #24
 803147a:	f101 0304 	add.w	r3, r1, #4
 803147e:	d50a      	bpl.n	8031496 <_printf_i+0xce>
 8031480:	680e      	ldr	r6, [r1, #0]
 8031482:	602b      	str	r3, [r5, #0]
 8031484:	2e00      	cmp	r6, #0
 8031486:	da03      	bge.n	8031490 <_printf_i+0xc8>
 8031488:	232d      	movs	r3, #45	; 0x2d
 803148a:	4276      	negs	r6, r6
 803148c:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 8031490:	485e      	ldr	r0, [pc, #376]	; (803160c <_printf_i+0x244>)
 8031492:	230a      	movs	r3, #10
 8031494:	e019      	b.n	80314ca <_printf_i+0x102>
 8031496:	680e      	ldr	r6, [r1, #0]
 8031498:	f010 0f40 	tst.w	r0, #64	; 0x40
 803149c:	602b      	str	r3, [r5, #0]
 803149e:	bf18      	it	ne
 80314a0:	b236      	sxthne	r6, r6
 80314a2:	e7ef      	b.n	8031484 <_printf_i+0xbc>
 80314a4:	682b      	ldr	r3, [r5, #0]
 80314a6:	6820      	ldr	r0, [r4, #0]
 80314a8:	1d19      	adds	r1, r3, #4
 80314aa:	6029      	str	r1, [r5, #0]
 80314ac:	0601      	lsls	r1, r0, #24
 80314ae:	d501      	bpl.n	80314b4 <_printf_i+0xec>
 80314b0:	681e      	ldr	r6, [r3, #0]
 80314b2:	e002      	b.n	80314ba <_printf_i+0xf2>
 80314b4:	0646      	lsls	r6, r0, #25
 80314b6:	d5fb      	bpl.n	80314b0 <_printf_i+0xe8>
 80314b8:	881e      	ldrh	r6, [r3, #0]
 80314ba:	2f6f      	cmp	r7, #111	; 0x6f
 80314bc:	4853      	ldr	r0, [pc, #332]	; (803160c <_printf_i+0x244>)
 80314be:	bf0c      	ite	eq
 80314c0:	2308      	moveq	r3, #8
 80314c2:	230a      	movne	r3, #10
 80314c4:	2100      	movs	r1, #0
 80314c6:	f884 1043 	strb.w	r1, [r4, #67]	; 0x43
 80314ca:	6865      	ldr	r5, [r4, #4]
 80314cc:	2d00      	cmp	r5, #0
 80314ce:	60a5      	str	r5, [r4, #8]
 80314d0:	bfa2      	ittt	ge
 80314d2:	6821      	ldrge	r1, [r4, #0]
 80314d4:	f021 0104 	bicge.w	r1, r1, #4
 80314d8:	6021      	strge	r1, [r4, #0]
 80314da:	b90e      	cbnz	r6, 80314e0 <_printf_i+0x118>
 80314dc:	2d00      	cmp	r5, #0
 80314de:	d04d      	beq.n	803157c <_printf_i+0x1b4>
 80314e0:	4615      	mov	r5, r2
 80314e2:	fbb6 f1f3 	udiv	r1, r6, r3
 80314e6:	fb03 6711 	mls	r7, r3, r1, r6
 80314ea:	5dc7      	ldrb	r7, [r0, r7]
 80314ec:	f805 7d01 	strb.w	r7, [r5, #-1]!
 80314f0:	4637      	mov	r7, r6
 80314f2:	460e      	mov	r6, r1
 80314f4:	42bb      	cmp	r3, r7
 80314f6:	d9f4      	bls.n	80314e2 <_printf_i+0x11a>
 80314f8:	2b08      	cmp	r3, #8
 80314fa:	d10b      	bne.n	8031514 <_printf_i+0x14c>
 80314fc:	6823      	ldr	r3, [r4, #0]
 80314fe:	07de      	lsls	r6, r3, #31
 8031500:	d508      	bpl.n	8031514 <_printf_i+0x14c>
 8031502:	6923      	ldr	r3, [r4, #16]
 8031504:	6861      	ldr	r1, [r4, #4]
 8031506:	4299      	cmp	r1, r3
 8031508:	bfde      	ittt	le
 803150a:	2330      	movle	r3, #48	; 0x30
 803150c:	f805 3c01 	strble.w	r3, [r5, #-1]
 8031510:	f105 35ff 	addle.w	r5, r5, #4294967295	; 0xffffffff
 8031514:	1b52      	subs	r2, r2, r5
 8031516:	6122      	str	r2, [r4, #16]
 8031518:	464b      	mov	r3, r9
 803151a:	aa03      	add	r2, sp, #12
 803151c:	4621      	mov	r1, r4
 803151e:	4640      	mov	r0, r8
 8031520:	f8cd a000 	str.w	sl, [sp]
 8031524:	f7ff fee0 	bl	80312e8 <_printf_common>
 8031528:	3001      	adds	r0, #1
 803152a:	d14c      	bne.n	80315c6 <_printf_i+0x1fe>
 803152c:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 8031530:	b004      	add	sp, #16
 8031532:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8031536:	4835      	ldr	r0, [pc, #212]	; (803160c <_printf_i+0x244>)
 8031538:	f881 7045 	strb.w	r7, [r1, #69]	; 0x45
 803153c:	6829      	ldr	r1, [r5, #0]
 803153e:	6823      	ldr	r3, [r4, #0]
 8031540:	f851 6b04 	ldr.w	r6, [r1], #4
 8031544:	6029      	str	r1, [r5, #0]
 8031546:	061d      	lsls	r5, r3, #24
 8031548:	d514      	bpl.n	8031574 <_printf_i+0x1ac>
 803154a:	07df      	lsls	r7, r3, #31
 803154c:	bf44      	itt	mi
 803154e:	f043 0320 	orrmi.w	r3, r3, #32
 8031552:	6023      	strmi	r3, [r4, #0]
 8031554:	b91e      	cbnz	r6, 803155e <_printf_i+0x196>
 8031556:	6823      	ldr	r3, [r4, #0]
 8031558:	f023 0320 	bic.w	r3, r3, #32
 803155c:	6023      	str	r3, [r4, #0]
 803155e:	2310      	movs	r3, #16
 8031560:	e7b0      	b.n	80314c4 <_printf_i+0xfc>
 8031562:	6823      	ldr	r3, [r4, #0]
 8031564:	f043 0320 	orr.w	r3, r3, #32
 8031568:	6023      	str	r3, [r4, #0]
 803156a:	2378      	movs	r3, #120	; 0x78
 803156c:	4828      	ldr	r0, [pc, #160]	; (8031610 <_printf_i+0x248>)
 803156e:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
 8031572:	e7e3      	b.n	803153c <_printf_i+0x174>
 8031574:	0659      	lsls	r1, r3, #25
 8031576:	bf48      	it	mi
 8031578:	b2b6      	uxthmi	r6, r6
 803157a:	e7e6      	b.n	803154a <_printf_i+0x182>
 803157c:	4615      	mov	r5, r2
 803157e:	e7bb      	b.n	80314f8 <_printf_i+0x130>
 8031580:	682b      	ldr	r3, [r5, #0]
 8031582:	6826      	ldr	r6, [r4, #0]
 8031584:	1d18      	adds	r0, r3, #4
 8031586:	6961      	ldr	r1, [r4, #20]
 8031588:	6028      	str	r0, [r5, #0]
 803158a:	0635      	lsls	r5, r6, #24
 803158c:	681b      	ldr	r3, [r3, #0]
 803158e:	d501      	bpl.n	8031594 <_printf_i+0x1cc>
 8031590:	6019      	str	r1, [r3, #0]
 8031592:	e002      	b.n	803159a <_printf_i+0x1d2>
 8031594:	0670      	lsls	r0, r6, #25
 8031596:	d5fb      	bpl.n	8031590 <_printf_i+0x1c8>
 8031598:	8019      	strh	r1, [r3, #0]
 803159a:	2300      	movs	r3, #0
 803159c:	4615      	mov	r5, r2
 803159e:	6123      	str	r3, [r4, #16]
 80315a0:	e7ba      	b.n	8031518 <_printf_i+0x150>
 80315a2:	682b      	ldr	r3, [r5, #0]
 80315a4:	2100      	movs	r1, #0
 80315a6:	1d1a      	adds	r2, r3, #4
 80315a8:	602a      	str	r2, [r5, #0]
 80315aa:	681d      	ldr	r5, [r3, #0]
 80315ac:	6862      	ldr	r2, [r4, #4]
 80315ae:	4628      	mov	r0, r5
 80315b0:	f000 f830 	bl	8031614 <memchr>
 80315b4:	b108      	cbz	r0, 80315ba <_printf_i+0x1f2>
 80315b6:	1b40      	subs	r0, r0, r5
 80315b8:	6060      	str	r0, [r4, #4]
 80315ba:	6863      	ldr	r3, [r4, #4]
 80315bc:	6123      	str	r3, [r4, #16]
 80315be:	2300      	movs	r3, #0
 80315c0:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 80315c4:	e7a8      	b.n	8031518 <_printf_i+0x150>
 80315c6:	6923      	ldr	r3, [r4, #16]
 80315c8:	462a      	mov	r2, r5
 80315ca:	4649      	mov	r1, r9
 80315cc:	4640      	mov	r0, r8
 80315ce:	47d0      	blx	sl
 80315d0:	3001      	adds	r0, #1
 80315d2:	d0ab      	beq.n	803152c <_printf_i+0x164>
 80315d4:	6823      	ldr	r3, [r4, #0]
 80315d6:	079b      	lsls	r3, r3, #30
 80315d8:	d413      	bmi.n	8031602 <_printf_i+0x23a>
 80315da:	68e0      	ldr	r0, [r4, #12]
 80315dc:	9b03      	ldr	r3, [sp, #12]
 80315de:	4298      	cmp	r0, r3
 80315e0:	bfb8      	it	lt
 80315e2:	4618      	movlt	r0, r3
 80315e4:	e7a4      	b.n	8031530 <_printf_i+0x168>
 80315e6:	2301      	movs	r3, #1
 80315e8:	4632      	mov	r2, r6
 80315ea:	4649      	mov	r1, r9
 80315ec:	4640      	mov	r0, r8
 80315ee:	47d0      	blx	sl
 80315f0:	3001      	adds	r0, #1
 80315f2:	d09b      	beq.n	803152c <_printf_i+0x164>
 80315f4:	3501      	adds	r5, #1
 80315f6:	68e3      	ldr	r3, [r4, #12]
 80315f8:	9903      	ldr	r1, [sp, #12]
 80315fa:	1a5b      	subs	r3, r3, r1
 80315fc:	42ab      	cmp	r3, r5
 80315fe:	dcf2      	bgt.n	80315e6 <_printf_i+0x21e>
 8031600:	e7eb      	b.n	80315da <_printf_i+0x212>
 8031602:	2500      	movs	r5, #0
 8031604:	f104 0619 	add.w	r6, r4, #25
 8031608:	e7f5      	b.n	80315f6 <_printf_i+0x22e>
 803160a:	bf00      	nop
 803160c:	08034327 	.word	0x08034327
 8031610:	08034338 	.word	0x08034338

08031614 <memchr>:
 8031614:	b2c9      	uxtb	r1, r1
 8031616:	4402      	add	r2, r0
 8031618:	b510      	push	{r4, lr}
 803161a:	4290      	cmp	r0, r2
 803161c:	4603      	mov	r3, r0
 803161e:	d101      	bne.n	8031624 <memchr+0x10>
 8031620:	2300      	movs	r3, #0
 8031622:	e003      	b.n	803162c <memchr+0x18>
 8031624:	781c      	ldrb	r4, [r3, #0]
 8031626:	3001      	adds	r0, #1
 8031628:	428c      	cmp	r4, r1
 803162a:	d1f6      	bne.n	803161a <memchr+0x6>
 803162c:	4618      	mov	r0, r3
 803162e:	bd10      	pop	{r4, pc}

08031630 <_free_r>:
 8031630:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8031632:	2900      	cmp	r1, #0
 8031634:	d043      	beq.n	80316be <_free_r+0x8e>
 8031636:	f851 3c04 	ldr.w	r3, [r1, #-4]
 803163a:	1f0c      	subs	r4, r1, #4
 803163c:	9001      	str	r0, [sp, #4]
 803163e:	2b00      	cmp	r3, #0
 8031640:	bfb8      	it	lt
 8031642:	18e4      	addlt	r4, r4, r3
 8031644:	f000 f914 	bl	8031870 <__malloc_lock>
 8031648:	4a1e      	ldr	r2, [pc, #120]	; (80316c4 <_free_r+0x94>)
 803164a:	9801      	ldr	r0, [sp, #4]
 803164c:	6813      	ldr	r3, [r2, #0]
 803164e:	b933      	cbnz	r3, 803165e <_free_r+0x2e>
 8031650:	6063      	str	r3, [r4, #4]
 8031652:	6014      	str	r4, [r2, #0]
 8031654:	b003      	add	sp, #12
 8031656:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
 803165a:	f000 b90f 	b.w	803187c <__malloc_unlock>
 803165e:	42a3      	cmp	r3, r4
 8031660:	d908      	bls.n	8031674 <_free_r+0x44>
 8031662:	6825      	ldr	r5, [r4, #0]
 8031664:	1961      	adds	r1, r4, r5
 8031666:	428b      	cmp	r3, r1
 8031668:	bf01      	itttt	eq
 803166a:	6819      	ldreq	r1, [r3, #0]
 803166c:	685b      	ldreq	r3, [r3, #4]
 803166e:	1949      	addeq	r1, r1, r5
 8031670:	6021      	streq	r1, [r4, #0]
 8031672:	e7ed      	b.n	8031650 <_free_r+0x20>
 8031674:	461a      	mov	r2, r3
 8031676:	685b      	ldr	r3, [r3, #4]
 8031678:	b10b      	cbz	r3, 803167e <_free_r+0x4e>
 803167a:	42a3      	cmp	r3, r4
 803167c:	d9fa      	bls.n	8031674 <_free_r+0x44>
 803167e:	6811      	ldr	r1, [r2, #0]
 8031680:	1855      	adds	r5, r2, r1
 8031682:	42a5      	cmp	r5, r4
 8031684:	d10b      	bne.n	803169e <_free_r+0x6e>
 8031686:	6824      	ldr	r4, [r4, #0]
 8031688:	4421      	add	r1, r4
 803168a:	1854      	adds	r4, r2, r1
 803168c:	6011      	str	r1, [r2, #0]
 803168e:	42a3      	cmp	r3, r4
 8031690:	d1e0      	bne.n	8031654 <_free_r+0x24>
 8031692:	681c      	ldr	r4, [r3, #0]
 8031694:	685b      	ldr	r3, [r3, #4]
 8031696:	4421      	add	r1, r4
 8031698:	6053      	str	r3, [r2, #4]
 803169a:	6011      	str	r1, [r2, #0]
 803169c:	e7da      	b.n	8031654 <_free_r+0x24>
 803169e:	d902      	bls.n	80316a6 <_free_r+0x76>
 80316a0:	230c      	movs	r3, #12
 80316a2:	6003      	str	r3, [r0, #0]
 80316a4:	e7d6      	b.n	8031654 <_free_r+0x24>
 80316a6:	6825      	ldr	r5, [r4, #0]
 80316a8:	1961      	adds	r1, r4, r5
 80316aa:	428b      	cmp	r3, r1
 80316ac:	bf02      	ittt	eq
 80316ae:	6819      	ldreq	r1, [r3, #0]
 80316b0:	685b      	ldreq	r3, [r3, #4]
 80316b2:	1949      	addeq	r1, r1, r5
 80316b4:	6063      	str	r3, [r4, #4]
 80316b6:	bf08      	it	eq
 80316b8:	6021      	streq	r1, [r4, #0]
 80316ba:	6054      	str	r4, [r2, #4]
 80316bc:	e7ca      	b.n	8031654 <_free_r+0x24>
 80316be:	b003      	add	sp, #12
 80316c0:	bd30      	pop	{r4, r5, pc}
 80316c2:	bf00      	nop
 80316c4:	2000a338 	.word	0x2000a338

080316c8 <sbrk_aligned>:
 80316c8:	b570      	push	{r4, r5, r6, lr}
 80316ca:	4e0e      	ldr	r6, [pc, #56]	; (8031704 <sbrk_aligned+0x3c>)
 80316cc:	460c      	mov	r4, r1
 80316ce:	4605      	mov	r5, r0
 80316d0:	6831      	ldr	r1, [r6, #0]
 80316d2:	b911      	cbnz	r1, 80316da <sbrk_aligned+0x12>
 80316d4:	f000 f8bc 	bl	8031850 <_sbrk_r>
 80316d8:	6030      	str	r0, [r6, #0]
 80316da:	4621      	mov	r1, r4
 80316dc:	4628      	mov	r0, r5
 80316de:	f000 f8b7 	bl	8031850 <_sbrk_r>
 80316e2:	1c43      	adds	r3, r0, #1
 80316e4:	d00a      	beq.n	80316fc <sbrk_aligned+0x34>
 80316e6:	1cc4      	adds	r4, r0, #3
 80316e8:	f024 0403 	bic.w	r4, r4, #3
 80316ec:	42a0      	cmp	r0, r4
 80316ee:	d007      	beq.n	8031700 <sbrk_aligned+0x38>
 80316f0:	1a21      	subs	r1, r4, r0
 80316f2:	4628      	mov	r0, r5
 80316f4:	f000 f8ac 	bl	8031850 <_sbrk_r>
 80316f8:	3001      	adds	r0, #1
 80316fa:	d101      	bne.n	8031700 <sbrk_aligned+0x38>
 80316fc:	f04f 34ff 	mov.w	r4, #4294967295	; 0xffffffff
 8031700:	4620      	mov	r0, r4
 8031702:	bd70      	pop	{r4, r5, r6, pc}
 8031704:	2000a33c 	.word	0x2000a33c

08031708 <_malloc_r>:
 8031708:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 803170c:	1ccd      	adds	r5, r1, #3
 803170e:	4607      	mov	r7, r0
 8031710:	f025 0503 	bic.w	r5, r5, #3
 8031714:	3508      	adds	r5, #8
 8031716:	2d0c      	cmp	r5, #12
 8031718:	bf38      	it	cc
 803171a:	250c      	movcc	r5, #12
 803171c:	2d00      	cmp	r5, #0
 803171e:	db01      	blt.n	8031724 <_malloc_r+0x1c>
 8031720:	42a9      	cmp	r1, r5
 8031722:	d905      	bls.n	8031730 <_malloc_r+0x28>
 8031724:	230c      	movs	r3, #12
 8031726:	2600      	movs	r6, #0
 8031728:	603b      	str	r3, [r7, #0]
 803172a:	4630      	mov	r0, r6
 803172c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8031730:	4e2e      	ldr	r6, [pc, #184]	; (80317ec <_malloc_r+0xe4>)
 8031732:	f000 f89d 	bl	8031870 <__malloc_lock>
 8031736:	6833      	ldr	r3, [r6, #0]
 8031738:	461c      	mov	r4, r3
 803173a:	bb34      	cbnz	r4, 803178a <_malloc_r+0x82>
 803173c:	4629      	mov	r1, r5
 803173e:	4638      	mov	r0, r7
 8031740:	f7ff ffc2 	bl	80316c8 <sbrk_aligned>
 8031744:	1c43      	adds	r3, r0, #1
 8031746:	4604      	mov	r4, r0
 8031748:	d14d      	bne.n	80317e6 <_malloc_r+0xde>
 803174a:	6834      	ldr	r4, [r6, #0]
 803174c:	4626      	mov	r6, r4
 803174e:	2e00      	cmp	r6, #0
 8031750:	d140      	bne.n	80317d4 <_malloc_r+0xcc>
 8031752:	6823      	ldr	r3, [r4, #0]
 8031754:	4631      	mov	r1, r6
 8031756:	4638      	mov	r0, r7
 8031758:	eb04 0803 	add.w	r8, r4, r3
 803175c:	f000 f878 	bl	8031850 <_sbrk_r>
 8031760:	4580      	cmp	r8, r0
 8031762:	d13a      	bne.n	80317da <_malloc_r+0xd2>
 8031764:	6821      	ldr	r1, [r4, #0]
 8031766:	3503      	adds	r5, #3
 8031768:	4638      	mov	r0, r7
 803176a:	1a6d      	subs	r5, r5, r1
 803176c:	f025 0503 	bic.w	r5, r5, #3
 8031770:	3508      	adds	r5, #8
 8031772:	2d0c      	cmp	r5, #12
 8031774:	bf38      	it	cc
 8031776:	250c      	movcc	r5, #12
 8031778:	4629      	mov	r1, r5
 803177a:	f7ff ffa5 	bl	80316c8 <sbrk_aligned>
 803177e:	3001      	adds	r0, #1
 8031780:	d02b      	beq.n	80317da <_malloc_r+0xd2>
 8031782:	6823      	ldr	r3, [r4, #0]
 8031784:	442b      	add	r3, r5
 8031786:	6023      	str	r3, [r4, #0]
 8031788:	e00e      	b.n	80317a8 <_malloc_r+0xa0>
 803178a:	6822      	ldr	r2, [r4, #0]
 803178c:	1b52      	subs	r2, r2, r5
 803178e:	d41e      	bmi.n	80317ce <_malloc_r+0xc6>
 8031790:	2a0b      	cmp	r2, #11
 8031792:	d916      	bls.n	80317c2 <_malloc_r+0xba>
 8031794:	1961      	adds	r1, r4, r5
 8031796:	42a3      	cmp	r3, r4
 8031798:	6025      	str	r5, [r4, #0]
 803179a:	bf18      	it	ne
 803179c:	6059      	strne	r1, [r3, #4]
 803179e:	6863      	ldr	r3, [r4, #4]
 80317a0:	bf08      	it	eq
 80317a2:	6031      	streq	r1, [r6, #0]
 80317a4:	5162      	str	r2, [r4, r5]
 80317a6:	604b      	str	r3, [r1, #4]
 80317a8:	f104 060b 	add.w	r6, r4, #11
 80317ac:	4638      	mov	r0, r7
 80317ae:	f000 f865 	bl	803187c <__malloc_unlock>
 80317b2:	1d23      	adds	r3, r4, #4
 80317b4:	f026 0607 	bic.w	r6, r6, #7
 80317b8:	1af2      	subs	r2, r6, r3
 80317ba:	d0b6      	beq.n	803172a <_malloc_r+0x22>
 80317bc:	1b9b      	subs	r3, r3, r6
 80317be:	50a3      	str	r3, [r4, r2]
 80317c0:	e7b3      	b.n	803172a <_malloc_r+0x22>
 80317c2:	6862      	ldr	r2, [r4, #4]
 80317c4:	42a3      	cmp	r3, r4
 80317c6:	bf0c      	ite	eq
 80317c8:	6032      	streq	r2, [r6, #0]
 80317ca:	605a      	strne	r2, [r3, #4]
 80317cc:	e7ec      	b.n	80317a8 <_malloc_r+0xa0>
 80317ce:	4623      	mov	r3, r4
 80317d0:	6864      	ldr	r4, [r4, #4]
 80317d2:	e7b2      	b.n	803173a <_malloc_r+0x32>
 80317d4:	4634      	mov	r4, r6
 80317d6:	6876      	ldr	r6, [r6, #4]
 80317d8:	e7b9      	b.n	803174e <_malloc_r+0x46>
 80317da:	230c      	movs	r3, #12
 80317dc:	4638      	mov	r0, r7
 80317de:	603b      	str	r3, [r7, #0]
 80317e0:	f000 f84c 	bl	803187c <__malloc_unlock>
 80317e4:	e7a1      	b.n	803172a <_malloc_r+0x22>
 80317e6:	6025      	str	r5, [r4, #0]
 80317e8:	e7de      	b.n	80317a8 <_malloc_r+0xa0>
 80317ea:	bf00      	nop
 80317ec:	2000a338 	.word	0x2000a338

080317f0 <_realloc_r>:
 80317f0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80317f4:	4680      	mov	r8, r0
 80317f6:	4614      	mov	r4, r2
 80317f8:	460e      	mov	r6, r1
 80317fa:	b921      	cbnz	r1, 8031806 <_realloc_r+0x16>
 80317fc:	4611      	mov	r1, r2
 80317fe:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 8031802:	f7ff bf81 	b.w	8031708 <_malloc_r>
 8031806:	b92a      	cbnz	r2, 8031814 <_realloc_r+0x24>
 8031808:	4625      	mov	r5, r4
 803180a:	f7ff ff11 	bl	8031630 <_free_r>
 803180e:	4628      	mov	r0, r5
 8031810:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8031814:	f000 f838 	bl	8031888 <_malloc_usable_size_r>
 8031818:	4284      	cmp	r4, r0
 803181a:	4607      	mov	r7, r0
 803181c:	d802      	bhi.n	8031824 <_realloc_r+0x34>
 803181e:	ebb4 0f50 	cmp.w	r4, r0, lsr #1
 8031822:	d812      	bhi.n	803184a <_realloc_r+0x5a>
 8031824:	4621      	mov	r1, r4
 8031826:	4640      	mov	r0, r8
 8031828:	f7ff ff6e 	bl	8031708 <_malloc_r>
 803182c:	4605      	mov	r5, r0
 803182e:	2800      	cmp	r0, #0
 8031830:	d0ed      	beq.n	803180e <_realloc_r+0x1e>
 8031832:	42bc      	cmp	r4, r7
 8031834:	4622      	mov	r2, r4
 8031836:	4631      	mov	r1, r6
 8031838:	bf28      	it	cs
 803183a:	463a      	movcs	r2, r7
 803183c:	f7ff fb90 	bl	8030f60 <memcpy>
 8031840:	4631      	mov	r1, r6
 8031842:	4640      	mov	r0, r8
 8031844:	f7ff fef4 	bl	8031630 <_free_r>
 8031848:	e7e1      	b.n	803180e <_realloc_r+0x1e>
 803184a:	4635      	mov	r5, r6
 803184c:	e7df      	b.n	803180e <_realloc_r+0x1e>
	...

08031850 <_sbrk_r>:
 8031850:	b538      	push	{r3, r4, r5, lr}
 8031852:	2300      	movs	r3, #0
 8031854:	4d05      	ldr	r5, [pc, #20]	; (803186c <_sbrk_r+0x1c>)
 8031856:	4604      	mov	r4, r0
 8031858:	4608      	mov	r0, r1
 803185a:	602b      	str	r3, [r5, #0]
 803185c:	f7f4 ff40 	bl	80266e0 <_sbrk>
 8031860:	1c43      	adds	r3, r0, #1
 8031862:	d102      	bne.n	803186a <_sbrk_r+0x1a>
 8031864:	682b      	ldr	r3, [r5, #0]
 8031866:	b103      	cbz	r3, 803186a <_sbrk_r+0x1a>
 8031868:	6023      	str	r3, [r4, #0]
 803186a:	bd38      	pop	{r3, r4, r5, pc}
 803186c:	2000a340 	.word	0x2000a340

08031870 <__malloc_lock>:
 8031870:	4801      	ldr	r0, [pc, #4]	; (8031878 <__malloc_lock+0x8>)
 8031872:	f000 b811 	b.w	8031898 <__retarget_lock_acquire_recursive>
 8031876:	bf00      	nop
 8031878:	2000a344 	.word	0x2000a344

0803187c <__malloc_unlock>:
 803187c:	4801      	ldr	r0, [pc, #4]	; (8031884 <__malloc_unlock+0x8>)
 803187e:	f000 b80c 	b.w	803189a <__retarget_lock_release_recursive>
 8031882:	bf00      	nop
 8031884:	2000a344 	.word	0x2000a344

08031888 <_malloc_usable_size_r>:
 8031888:	f851 3c04 	ldr.w	r3, [r1, #-4]
 803188c:	1f18      	subs	r0, r3, #4
 803188e:	2b00      	cmp	r3, #0
 8031890:	bfbc      	itt	lt
 8031892:	580b      	ldrlt	r3, [r1, r0]
 8031894:	18c0      	addlt	r0, r0, r3
 8031896:	4770      	bx	lr

08031898 <__retarget_lock_acquire_recursive>:
 8031898:	4770      	bx	lr

0803189a <__retarget_lock_release_recursive>:
 803189a:	4770      	bx	lr

0803189c <_init>:
 803189c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 803189e:	bf00      	nop
 80318a0:	bcf8      	pop	{r3, r4, r5, r6, r7}
 80318a2:	bc08      	pop	{r3}
 80318a4:	469e      	mov	lr, r3
 80318a6:	4770      	bx	lr

080318a8 <_fini>:
 80318a8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80318aa:	bf00      	nop
 80318ac:	bcf8      	pop	{r3, r4, r5, r6, r7}
 80318ae:	bc08      	pop	{r3}
 80318b0:	469e      	mov	lr, r3
 80318b2:	4770      	bx	lr
